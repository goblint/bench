/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 40 
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_114 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_114 seqlock_t;
#line 601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_nodemask_t_115 {
   unsigned long bits[16U] ;
};
#line 601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_nodemask_t_115 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_126 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_127 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_125 {
   struct __anonstruct_126 __anonCompField___anonunion_125_28 ;
   struct __anonstruct_127 __anonCompField___anonunion_125_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_125 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_128 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_128 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_130 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_131 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_133 {
   struct list_head slab_list ;
   struct __anonstruct_134 __anonCompField___anonunion_133_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_136 __anonCompField___anonunion_135_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   union __anonunion_133 __anonCompField___anonstruct_132_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_135 __anonCompField___anonstruct_132_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_137 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_140 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_140 __anonCompField___anonstruct_139_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_129 {
   struct __anonstruct_130 __anonCompField___anonunion_129_31 ;
   struct __anonstruct_131 __anonCompField___anonunion_129_32 ;
   struct __anonstruct_132 __anonCompField___anonunion_129_37 ;
   struct __anonstruct_137 __anonCompField___anonunion_129_38 ;
   struct __anonstruct_138 __anonCompField___anonunion_129_39 ;
   struct __anonstruct_139 __anonCompField___anonunion_129_41 ;
   struct __anonstruct_141 __anonCompField___anonunion_129_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_129 __anonCompField_page_43 ;
   union __anonunion_142 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_143 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_143 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_144 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_144 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 824 
struct vmem_altmap;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_248 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_248 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_249 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_249 kgid_t;
#line 140 
struct dentry;
#line 141 
struct iattr;
#line 142 
struct super_block;
#line 144 
struct fs_context;
#line 146 
struct kernfs_open_node;
#line 147 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_250 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_250 __anonCompField_kernfs_node_49 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 51 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_291 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_291 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_292 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_293 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_294 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_295 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_298 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_299 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_297 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_298 _addr_bnd ;
   struct __anonstruct__addr_pkey_299 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_296 {
   void *_addr ;
   union __anonunion_297 __anonCompField___anonstruct__sigfault_296_50 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_300 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_301 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_292 _kill ;
   struct __anonstruct__timer_293 _timer ;
   struct __anonstruct__rt_294 _rt ;
   struct __anonstruct__sigchld_295 _sigchld ;
   struct __anonstruct__sigfault_296 _sigfault ;
   struct __anonstruct__sigpoll_300 _sigpoll ;
   struct __anonstruct__sigsys_301 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_306 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_306 __anonCompField_kernel_siginfo_53 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_311 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_311 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_313 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_313 __anonCompField_task_struct_55 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char *, size_t ) ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
struct percpu_ref;
#line 442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30 
struct bio_vec;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_394 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_396 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_395 {
   unsigned long nr_segs ;
   struct __anonstruct_396 __anonCompField___anonunion_395_57 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_394 __anonCompField_iov_iter_56 ;
   union __anonunion_395 __anonCompField_iov_iter_58 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49 
struct kiocb;
#line 422 
struct ns_common;
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct __anonstruct_sync_serial_settings_399 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef struct __anonstruct_sync_serial_settings_399 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_400 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_400 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_401 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_401 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_402 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_402 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_403 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_403 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_404 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_404 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_405 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_405 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_406 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_406 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_407 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_408 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_407 ifr_ifrn ;
   union __anonunion_ifr_ifru_408 ifr_ifru ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_423 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_422 {
   struct __anonstruct_423 __anonCompField___anonunion_422_61 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_422 __anonCompField_lockref_62 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_425 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_424 {
   struct __anonstruct_425 __anonCompField___anonunion_424_63 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_424 __anonCompField_qstr_64 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_426 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_427 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_426 __anonCompField_dentry_65 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_427 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_435 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_435 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_436 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_437 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_436 __anonCompField_io_cq_66 ;
   union __anonunion_437 __anonCompField_io_cq_67 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 288 
struct export_operations;
#line 290 
struct kstatfs;
#line 291 
struct swap_info_struct;
#line 292 
struct fscrypt_info;
#line 293 
struct fscrypt_operations;
#line 294 
struct fsverity_info;
#line 295 
struct fsverity_operations;
#line 296 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_438 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_438 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_439 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_439 __anonCompField_kqid_68 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_444 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_445 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_446 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_447 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_444 __anonCompField_inode_69 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_445 __anonCompField_inode_70 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_446 __anonCompField_inode_71 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_447 __anonCompField_inode_72 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_448 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_448 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_450 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_449 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_450 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_449 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct sk_buff;
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_494 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_494 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_495 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_495 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_517 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_516 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_517 __anonCompField___anonstruct_516_86 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_515 {
   struct __anonstruct_516 __anonCompField___anonunion_515_87 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_518 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_519 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_521 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_520 {
   struct __anonstruct_521 __anonCompField___anonunion_520_91 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_523 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_522 {
   __wsum csum ;
   struct __anonstruct_523 __anonCompField___anonunion_522_93 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_524 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_525 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_526 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_515 __anonCompField_sk_buff_88 ;
   union __anonunion_518 __anonCompField_sk_buff_89 ;
   union __anonunion_519 __anonCompField_sk_buff_90 ;
   char cb[48U] ;
   union __anonunion_520 __anonCompField_sk_buff_92 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_522 __anonCompField_sk_buff_94 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_524 __anonCompField_sk_buff_95 ;
   __u32 secmark ;
   union __anonunion_525 __anonCompField_sk_buff_96 ;
   union __anonunion_526 __anonCompField_sk_buff_97 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_552 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_552 __anonCompField_ethtool_rxnfc_99 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_555 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_555 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/mdio.h"
typedef unsigned long kernel_ulong_t;
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 823 
struct gpio_desc;
#line 824 
struct mii_bus;
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mdio.h"
struct reset_control;
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mdio.h"
struct mdio_device {
   struct device dev ;
   struct mii_bus *bus ;
   char modalias[32U] ;
   int (*bus_match)(struct device *, struct device_driver *) ;
   void (*device_free)(struct mdio_device *) ;
   void (*device_remove)(struct mdio_device *) ;
   int addr ;
   int flags ;
   struct gpio_desc *reset_gpio ;
   struct reset_control *reset_ctrl ;
   unsigned int reset_assert_delay ;
   unsigned int reset_deassert_delay ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mdio.h"
struct mdio_driver_common {
   struct device_driver driver ;
   int flags ;
};
#line 328 
struct phy_device;
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_558 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_557 {
   struct __anonstruct_558 __anonCompField___anonunion_557_100 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_557 __anonCompField_ctl_table_header_101 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elf.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_562 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_562 __anonCompField_kernel_param_102 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/phy.h"
enum ldv_12101 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_INTERNAL = 1,
    PHY_INTERFACE_MODE_MII = 2,
    PHY_INTERFACE_MODE_GMII = 3,
    PHY_INTERFACE_MODE_SGMII = 4,
    PHY_INTERFACE_MODE_TBI = 5,
    PHY_INTERFACE_MODE_REVMII = 6,
    PHY_INTERFACE_MODE_RMII = 7,
    PHY_INTERFACE_MODE_RGMII = 8,
    PHY_INTERFACE_MODE_RGMII_ID = 9,
    PHY_INTERFACE_MODE_RGMII_RXID = 10,
    PHY_INTERFACE_MODE_RGMII_TXID = 11,
    PHY_INTERFACE_MODE_RTBI = 12,
    PHY_INTERFACE_MODE_SMII = 13,
    PHY_INTERFACE_MODE_XGMII = 14,
    PHY_INTERFACE_MODE_MOCA = 15,
    PHY_INTERFACE_MODE_QSGMII = 16,
    PHY_INTERFACE_MODE_TRGMII = 17,
    PHY_INTERFACE_MODE_1000BASEX = 18,
    PHY_INTERFACE_MODE_2500BASEX = 19,
    PHY_INTERFACE_MODE_RXAUI = 20,
    PHY_INTERFACE_MODE_XAUI = 21,
    PHY_INTERFACE_MODE_10GKR = 22,
    PHY_INTERFACE_MODE_USXGMII = 23,
    PHY_INTERFACE_MODE_MAX = 24
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/phy.h"
typedef enum ldv_12101 phy_interface_t;
#line 186 
struct phylink;
#line 187 
struct sfp_bus;
#line 189 
enum ldv_12119 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/phy.h"
struct mii_bus {
   struct module *owner ;
   char *name ;
   char id[61U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_12119 state ;
   struct device dev ;
   struct mdio_device *mdio_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int irq[32U] ;
   int reset_delay_us ;
   struct gpio_desc *reset_gpiod ;
};
#line 278 
enum phy_state {
    PHY_DOWN = 0,
    PHY_READY = 1,
    PHY_HALTED = 2,
    PHY_UP = 3,
    PHY_RUNNING = 4,
    PHY_NOLINK = 5
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};
#line 363 
struct phy_driver;
#line 363 
struct phy_led_trigger;
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/phy.h"
struct phy_device {
   struct mdio_device mdio ;
   struct phy_driver *drv ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   unsigned int is_c45 : 1 ;
   unsigned int is_internal : 1 ;
   unsigned int is_pseudo_fixed_link : 1 ;
   unsigned int is_gigabit_capable : 1 ;
   unsigned int has_fixups : 1 ;
   unsigned int suspended : 1 ;
   unsigned int sysfs_links : 1 ;
   unsigned int loopback_enabled : 1 ;
   unsigned int autoneg : 1 ;
   unsigned int link : 1 ;
   unsigned int autoneg_complete : 1 ;
   unsigned int interrupts : 1 ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
   unsigned long adv_old[2U] ;
   u32 eee_broken_modes ;
   struct phy_led_trigger *phy_led_triggers ;
   unsigned int phy_num_led_triggers ;
   struct phy_led_trigger *last_triggered ;
   struct phy_led_trigger *led_link_trigger ;
   int irq ;
   void *priv ;
   struct delayed_work state_queue ;
   struct mutex lock ;
   bool sfp_bus_attached ;
   struct sfp_bus *sfp_bus ;
   struct phylink *phylink ;
   struct net_device *attached_dev ;
   u8 mdix ;
   u8 mdix_ctrl ;
   void (*phy_link_change)(struct phy_device *, bool , bool ) ;
   void (*adjust_link)(struct net_device *) ;
};
#line 475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/phy.h"
struct phy_driver {
   struct mdio_driver_common mdiodrv ;
   u32 phy_id ;
   char *name ;
   u32 phy_id_mask ;
   unsigned long *features ;
   u32 flags ;
   void *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*get_features)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   int (*handle_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd)(struct phy_device *, int , u16 ) ;
   int (*write_mmd)(struct phy_device *, int , u16 , u16 ) ;
   int (*read_page)(struct phy_device *) ;
   int (*write_page)(struct phy_device *, int ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_sset_count)(struct phy_device *) ;
   void (*get_strings)(struct phy_device *, u8 *) ;
   void (*get_stats)(struct phy_device *, struct ethtool_stats *, u64 *) ;
   int (*get_tunable)(struct phy_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct phy_device *, struct ethtool_tunable *, void *) ;
   int (*set_loopback)(struct phy_device *, bool ) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_576 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_576 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_577 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_577 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_578 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_578 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_579 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_579 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_581 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_581 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_594 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_593 {
   struct __anonstruct_594 __anonCompField___anonunion_593_104 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_593 __anonCompField_keyring_index_key_105 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_596 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_598 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_597 {
   struct keyring_index_key index_key ;
   struct __anonstruct_598 __anonCompField___anonunion_597_108 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_600 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_599 {
   union key_payload payload ;
   struct __anonstruct_600 __anonCompField___anonunion_599_110 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_595 __anonCompField_key_106 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_596 __anonCompField_key_107 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_597 __anonCompField_key_109 ;
   union __anonunion_599 __anonCompField_key_111 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_603 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_603 __anonCompField_cred_112 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_604 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_604 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_606 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_605 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_606 __anonCompField___anonunion_605_113 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_605 __anonCompField_uid_gid_map_114 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_610 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_609 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_610 __anonCompField___anonstruct_609_117 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_612 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_613 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_614 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_616 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_615 {
   union __anonunion_616 __anonCompField___anonstruct_615_122 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_617 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_618 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_619 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_620 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_621 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_608 __anonCompField_bpf_attr_116 ;
   struct __anonstruct_609 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_611 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_612 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_613 __anonCompField_bpf_attr_121 ;
   struct __anonstruct_test_614 test ;
   struct __anonstruct_615 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_info_617 info ;
   struct __anonstruct_query_618 query ;
   struct __anonstruct_raw_tracepoint_619 raw_tracepoint ;
   struct __anonstruct_620 __anonCompField_bpf_attr_124 ;
   struct __anonstruct_task_fd_query_621 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_648 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_648 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_650 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_649 {
   struct __anonstruct_tail_call_650 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_649 __anonCompField_bpf_jit_poke_descriptor_149 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_651 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_651 __anonCompField_bpf_prog_aux_150 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_653 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_653 __anonCompField_bpf_cgroup_storage_152 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_state;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_678 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_678 __anonCompField_netlink_callback_155 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct dsa_port;
#line 120 
struct wireless_dev;
#line 121 
struct wpan_dev;
#line 122 
struct mpls_dev;
#line 123 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_683 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_684 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_685 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_686 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_682 {
   struct __anonstruct_683 __anonCompField___anonunion_682_157 ;
   struct __anonstruct_684 __anonCompField___anonunion_682_158 ;
   struct __anonstruct_685 __anonCompField___anonunion_682_159 ;
   struct __anonstruct_xsk_686 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_682 __anonCompField_netdev_bpf_160 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 925 
struct devlink;
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_15163 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_15164 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_687 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_688 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_687 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_15163 reg_state : 8 ;
   bool dismantle ;
   enum ldv_15164 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_688 __anonCompField_net_device_161 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 4991 
enum devlink_port_type {
    DEVLINK_PORT_TYPE_NOTSET = 0,
    DEVLINK_PORT_TYPE_AUTO = 1,
    DEVLINK_PORT_TYPE_ETH = 2,
    DEVLINK_PORT_TYPE_IB = 3
};
#line 4998 
enum devlink_sb_pool_type {
    DEVLINK_SB_POOL_TYPE_INGRESS = 0,
    DEVLINK_SB_POOL_TYPE_EGRESS = 1
};
#line 5003 
enum devlink_sb_threshold_type {
    DEVLINK_SB_THRESHOLD_TYPE_STATIC = 0,
    DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC = 1
};
#line 5020 
enum devlink_eswitch_encap_mode {
    DEVLINK_ESWITCH_ENCAP_MODE_NONE = 0,
    DEVLINK_ESWITCH_ENCAP_MODE_BASIC = 1
};
#line 5025 
enum devlink_port_flavour {
    DEVLINK_PORT_FLAVOUR_PHYSICAL = 0,
    DEVLINK_PORT_FLAVOUR_CPU = 1,
    DEVLINK_PORT_FLAVOUR_DSA = 2,
    DEVLINK_PORT_FLAVOUR_PCI_PF = 3,
    DEVLINK_PORT_FLAVOUR_PCI_VF = 4
};
#line 5062 
enum devlink_trap_action {
    DEVLINK_TRAP_ACTION_DROP = 0,
    DEVLINK_TRAP_ACTION_TRAP = 1
};
#line 5067 
enum devlink_trap_type {
    DEVLINK_TRAP_TYPE_DROP = 0,
    DEVLINK_TRAP_TYPE_EXCEPTION = 1
};
#line 5222 
enum devlink_dpipe_field_mapping_type {
    DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE = 0,
    DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX = 1
};
#line 5257 
struct devlink_ops;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_dpipe_headers;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink {
   struct list_head list ;
   struct list_head port_list ;
   struct list_head sb_list ;
   struct list_head dpipe_table_list ;
   struct list_head resource_list ;
   struct list_head param_list ;
   struct list_head region_list ;
   u32 snapshot_id ;
   struct list_head reporter_list ;
   struct mutex reporters_lock ;
   struct devlink_dpipe_headers *dpipe_headers ;
   struct list_head trap_list ;
   struct list_head trap_group_list ;
   struct devlink_ops *ops ;
   struct device *dev ;
   possible_net_t _net ;
   struct mutex lock ;
   u8 reload_failed : 1 ;
   u8 reload_enabled : 1 ;
   u8 registered : 1 ;
   char priv[0U] ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_port_phys_attrs {
   u32 port_number ;
   u32 split_subport_number ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_port_pci_pf_attrs {
   u16 pf ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_port_pci_vf_attrs {
   u16 pf ;
   u16 vf ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
union __anonunion_695 {
   struct devlink_port_phys_attrs phys ;
   struct devlink_port_pci_pf_attrs pci_pf ;
   struct devlink_port_pci_vf_attrs pci_vf ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_port_attrs {
   u8 set : 1 ;
   u8 split : 1 ;
   u8 switch_port : 1 ;
   enum devlink_port_flavour flavour ;
   struct netdev_phys_item_id switch_id ;
   union __anonunion_695 __anonCompField_devlink_port_attrs_162 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_port {
   struct list_head list ;
   struct list_head param_list ;
   struct devlink *devlink ;
   unsigned int index ;
   bool registered ;
   spinlock_t type_lock ;
   enum devlink_port_type type ;
   enum devlink_port_type desired_type ;
   void *type_dev ;
   struct devlink_port_attrs attrs ;
   struct delayed_work type_warn_dw ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_sb_pool_info {
   enum devlink_sb_pool_type pool_type ;
   u32 size ;
   enum devlink_sb_threshold_type threshold_type ;
   u32 cell_size ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_dpipe_field {
   char *name ;
   unsigned int id ;
   unsigned int bitwidth ;
   enum devlink_dpipe_field_mapping_type mapping_type ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_dpipe_header {
   char *name ;
   unsigned int id ;
   struct devlink_dpipe_field *fields ;
   unsigned int fields_count ;
   bool global ;
};
#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_dpipe_headers {
   struct devlink_dpipe_header **headers ;
   unsigned int headers_count ;
};
#line 410 
struct devlink_info_req;
#line 533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_trap_group {
   char *name ;
   u16 id ;
   bool generic ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_trap {
   enum devlink_trap_type type ;
   enum devlink_trap_action init_action ;
   bool generic ;
   u16 id ;
   char *name ;
   struct devlink_trap_group group ;
   u32 metadata_cap ;
};
#line 698  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_ops {
   int (*reload_down)(struct devlink *, bool , struct netlink_ext_ack *) ;
   int (*reload_up)(struct devlink *, struct netlink_ext_ack *) ;
   int (*port_type_set)(struct devlink_port *, enum devlink_port_type ) ;
   int (*port_split)(struct devlink *, unsigned int , unsigned int , struct netlink_ext_ack *) ;
   int (*port_unsplit)(struct devlink *, unsigned int , struct netlink_ext_ack *) ;
   int (*sb_pool_get)(struct devlink *, unsigned int , u16 , struct devlink_sb_pool_info *) ;
   int (*sb_pool_set)(struct devlink *, unsigned int , u16 , u32 , enum devlink_sb_threshold_type , struct netlink_ext_ack *) ;
   int (*sb_port_pool_get)(struct devlink_port *, unsigned int , u16 , u32 *) ;
   int (*sb_port_pool_set)(struct devlink_port *, unsigned int , u16 , u32 , struct netlink_ext_ack *) ;
   int (*sb_tc_pool_bind_get)(struct devlink_port *, unsigned int , u16 , enum devlink_sb_pool_type , u16 *, u32 *) ;
   int (*sb_tc_pool_bind_set)(struct devlink_port *, unsigned int , u16 , enum devlink_sb_pool_type , u16 , u32 , struct netlink_ext_ack *) ;
   int (*sb_occ_snapshot)(struct devlink *, unsigned int ) ;
   int (*sb_occ_max_clear)(struct devlink *, unsigned int ) ;
   int (*sb_occ_port_pool_get)(struct devlink_port *, unsigned int , u16 , u32 *, u32 *) ;
   int (*sb_occ_tc_port_bind_get)(struct devlink_port *, unsigned int , u16 , enum devlink_sb_pool_type , u32 *, u32 *) ;
   int (*eswitch_mode_get)(struct devlink *, u16 *) ;
   int (*eswitch_mode_set)(struct devlink *, u16 , struct netlink_ext_ack *) ;
   int (*eswitch_inline_mode_get)(struct devlink *, u8 *) ;
   int (*eswitch_inline_mode_set)(struct devlink *, u8 , struct netlink_ext_ack *) ;
   int (*eswitch_encap_mode_get)(struct devlink *, enum devlink_eswitch_encap_mode *) ;
   int (*eswitch_encap_mode_set)(struct devlink *, enum devlink_eswitch_encap_mode , struct netlink_ext_ack *) ;
   int (*info_get)(struct devlink *, struct devlink_info_req *, struct netlink_ext_ack *) ;
   int (*flash_update)(struct devlink *, char *, char *, struct netlink_ext_ack *) ;
   int (*trap_init)(struct devlink *, struct devlink_trap *, void *) ;
   void (*trap_fini)(struct devlink *, struct devlink_trap *, void *) ;
   int (*trap_action_set)(struct devlink *, struct devlink_trap *, enum devlink_trap_action ) ;
   int (*trap_group_init)(struct devlink *, struct devlink_trap_group *) ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
union __anonunion_size_707 {
   unsigned char bits ;
   unsigned short bytes ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
struct mlxsw_item {
   unsigned short offset ;
   short step ;
   unsigned short in_step_offset ;
   unsigned char shift ;
   unsigned char element_size ;
   bool no_real_shift ;
   union __anonunion_size_707 size ;
   char *name ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
struct mlxsw_reg_info {
   u16 id ;
   u16 len ;
   char *name ;
};
#line 8021 
enum mlxsw_reg_mfcr_pwm_frequency {
    MLXSW_REG_MFCR_PWM_FEQ_11HZ = 0,
    MLXSW_REG_MFCR_PWM_FEQ_14_7HZ = 1,
    MLXSW_REG_MFCR_PWM_FEQ_22_1HZ = 2,
    MLXSW_REG_MFCR_PWM_FEQ_1_4KHZ = 64,
    MLXSW_REG_MFCR_PWM_FEQ_5KHZ = 65,
    MLXSW_REG_MFCR_PWM_FEQ_20KHZ = 66,
    MLXSW_REG_MFCR_PWM_FEQ_22_5KHZ = 67,
    MLXSW_REG_MFCR_PWM_FEQ_25KHZ = 68
};
#line 9573 
enum mlxsw_reg_mgpir_device_type {
    MLXSW_REG_MGPIR_DEVICE_TYPE_NONE = 0,
    MLXSW_REG_MGPIR_DEVICE_TYPE_GEARBOX_DIE = 1
};
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
struct mlxsw_bus_info;
#line 164 
struct mlxsw_fw_rev;
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_fw_rev {
   u16 major ;
   u16 minor ;
   u16 subminor ;
   u16 can_reset_minor ;
};
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_bus_info {
   char *device_kind ;
   char *device_name ;
   struct device *dev ;
   struct mlxsw_fw_rev fw_rev ;
   u8 vsd[208U] ;
   u8 psid[16U] ;
   u8 low_frequency : 1 ;
   u8 read_frc_capable : 1 ;
};
#line 409 
struct mlxsw_hwmon;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
struct mlxsw_hwmon_attr {
   struct device_attribute dev_attr ;
   struct mlxsw_hwmon *hwmon ;
   unsigned int type_index ;
   char name[32U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
struct mlxsw_hwmon {
   struct mlxsw_core *core ;
   struct mlxsw_bus_info *bus_info ;
   struct device *hwmon_dev ;
   struct attribute_group group ;
   struct attribute_group *groups[2U] ;
   struct attribute *attrs[524U] ;
   struct mlxsw_hwmon_attr hwmon_attrs[523U] ;
   unsigned int attrs_count ;
   u8 sensor_count ;
   u8 module_sensor_max ;
};
#line 343 
enum mlxsw_hwmon_attr_type {
    MLXSW_HWMON_ATTR_TYPE_TEMP = 0,
    MLXSW_HWMON_ATTR_TYPE_TEMP_MAX = 1,
    MLXSW_HWMON_ATTR_TYPE_TEMP_RST = 2,
    MLXSW_HWMON_ATTR_TYPE_FAN_RPM = 3,
    MLXSW_HWMON_ATTR_TYPE_FAN_FAULT = 4,
    MLXSW_HWMON_ATTR_TYPE_PWM = 5,
    MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE = 6,
    MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_FAULT = 7,
    MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_CRIT = 8,
    MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_EMERG = 9,
    MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_LABEL = 10,
    MLXSW_HWMON_ATTR_TYPE_TEMP_GBOX_LABEL = 11
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
union __anonunion_temp_thresh_1424 {
   u8 buf[2U] ;
   u16 temp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long uintptr_t;
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_1433 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_1433 key ;
} __attribute__((__aligned__(8)));
#line 71 
struct ib_device;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_1437 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_1439 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_1493 {
   int __val ;
   char __c[1U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic64_64.h"
union __anonunion___u_1497 {
   s64 __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
union __anonunion___u_1699 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
enum devlink_resource_unit {
    DEVLINK_RESOURCE_UNIT_ENTRY = 0
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_resource_size_params {
   u64 size_min ;
   u64 size_max ;
   u64 size_granularity ;
   enum devlink_resource_unit unit ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
typedef u64 devlink_resource_occ_get_t(void *);
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
struct devlink_resource {
   char *name ;
   u64 id ;
   u64 size ;
   u64 size_new ;
   bool size_valid ;
   struct devlink_resource *parent ;
   struct devlink_resource_size_params size_params ;
   struct list_head list ;
   struct list_head resource_list ;
   devlink_resource_occ_get_t *occ_get ;
   void *occ_get_priv ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint.h"
struct trace_eval_map {
   char *system ;
   char *eval_string ;
   unsigned long eval_value ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
union __anonunion___u_2122 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
union __anonunion___u_2124 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
union __anonunion___u_2126 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
union __anonunion___u_2128 {
   struct tracepoint_func *__val ;
   char __c[1U] ;
};
#line 246 
enum mlxsw_event_trap_id {
    MLXSW_TRAP_ID_PUDE = 8,
    MLXSW_TRAP_ID_PTP_ING_FIFO = 45,
    MLXSW_TRAP_ID_PTP_EGR_FIFO = 46
};
#line 5393  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
enum mlxsw_reg_pmtm_module_type {
    MLXSW_REG_PMTM_MODULE_TYPE_BP_4X = 0,
    MLXSW_REG_PMTM_MODULE_TYPE_BP_QSFP = 1,
    MLXSW_REG_PMTM_MODULE_TYPE_BP_SFP = 2,
    MLXSW_REG_PMTM_MODULE_TYPE_BP_1X = 4,
    MLXSW_REG_PMTM_MODULE_TYPE_BP_2X = 8,
    MLXSW_REG_PMTM_MODULE_TYPE_C2C = 10
};
#line 5450 
enum mlxsw_reg_htgt_trap_group {
    MLXSW_REG_HTGT_TRAP_GROUP_EMAD = 0,
    MLXSW_REG_HTGT_TRAP_GROUP_SX2_RX = 1,
    MLXSW_REG_HTGT_TRAP_GROUP_SX2_CTRL = 2,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_STP = 3,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_LACP = 4,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_LLDP = 5,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_IGMP = 6,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_BGP = 7,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_OSPF = 8,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_PIM = 9,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_MULTICAST = 10,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_ARP = 11,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_HOST_MISS = 12,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_ROUTER_EXP = 13,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_REMOTE_ROUTE = 14,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_IP2ME = 15,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_DHCP = 16,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_RPF = 17,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_EVENT = 18,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_IPV6_MLD = 19,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_IPV6_ND = 20,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_LBERROR = 21,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_PTP0 = 22,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_PTP1 = 23,
    MLXSW_REG_HTGT_TRAP_GROUP_SP_VRRP = 24,
    __MLXSW_REG_HTGT_TRAP_GROUP_MAX = 25,
    MLXSW_REG_HTGT_TRAP_GROUP_MAX = 24
};
#line 5615 
enum mlxsw_reg_hpkt_action {
    MLXSW_REG_HPKT_ACTION_FORWARD = 0,
    MLXSW_REG_HPKT_ACTION_TRAP_TO_CPU = 1,
    MLXSW_REG_HPKT_ACTION_MIRROR_TO_CPU = 2,
    MLXSW_REG_HPKT_ACTION_DISCARD = 3,
    MLXSW_REG_HPKT_ACTION_SOFT_DISCARD = 4,
    MLXSW_REG_HPKT_ACTION_TRAP_AND_SOFT_DISCARD = 5,
    MLXSW_REG_HPKT_ACTION_TRAP_EXCEPTION_TO_CPU = 6,
    MLXSW_REG_HPKT_ACTION_SET_FW_DEFAULT = 15
};
#line 1189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
enum mlxsw_res_id {
    MLXSW_RES_ID_KVD_SIZE = 0,
    MLXSW_RES_ID_KVD_SINGLE_MIN_SIZE = 1,
    MLXSW_RES_ID_KVD_DOUBLE_MIN_SIZE = 2,
    MLXSW_RES_ID_MAX_KVD_LINEAR_RANGE = 3,
    MLXSW_RES_ID_MAX_KVD_ACTION_SETS = 4,
    MLXSW_RES_ID_MAX_TRAP_GROUPS = 5,
    MLXSW_RES_ID_CQE_V0 = 6,
    MLXSW_RES_ID_CQE_V1 = 7,
    MLXSW_RES_ID_CQE_V2 = 8,
    MLXSW_RES_ID_COUNTER_POOL_SIZE = 9,
    MLXSW_RES_ID_MAX_SPAN = 10,
    MLXSW_RES_ID_COUNTER_SIZE_PACKETS_BYTES = 11,
    MLXSW_RES_ID_COUNTER_SIZE_ROUTER_BASIC = 12,
    MLXSW_RES_ID_MAX_SYSTEM_PORT = 13,
    MLXSW_RES_ID_MAX_LAG = 14,
    MLXSW_RES_ID_MAX_LAG_MEMBERS = 15,
    MLXSW_RES_ID_LOCAL_PORTS_IN_1X = 16,
    MLXSW_RES_ID_LOCAL_PORTS_IN_2X = 17,
    MLXSW_RES_ID_LOCAL_PORTS_IN_4X = 18,
    MLXSW_RES_ID_GUARANTEED_SHARED_BUFFER = 19,
    MLXSW_RES_ID_CELL_SIZE = 20,
    MLXSW_RES_ID_MAX_HEADROOM_SIZE = 21,
    MLXSW_RES_ID_ACL_MAX_TCAM_REGIONS = 22,
    MLXSW_RES_ID_ACL_MAX_TCAM_RULES = 23,
    MLXSW_RES_ID_ACL_MAX_REGIONS = 24,
    MLXSW_RES_ID_ACL_MAX_GROUPS = 25,
    MLXSW_RES_ID_ACL_MAX_GROUP_SIZE = 26,
    MLXSW_RES_ID_ACL_FLEX_KEYS = 27,
    MLXSW_RES_ID_ACL_MAX_ACTION_PER_RULE = 28,
    MLXSW_RES_ID_ACL_ACTIONS_PER_SET = 29,
    MLXSW_RES_ID_ACL_MAX_ERPT_BANKS = 30,
    MLXSW_RES_ID_ACL_MAX_ERPT_BANK_SIZE = 31,
    MLXSW_RES_ID_ACL_MAX_LARGE_KEY_ID = 32,
    MLXSW_RES_ID_ACL_ERPT_ENTRIES_2KB = 33,
    MLXSW_RES_ID_ACL_ERPT_ENTRIES_4KB = 34,
    MLXSW_RES_ID_ACL_ERPT_ENTRIES_8KB = 35,
    MLXSW_RES_ID_ACL_ERPT_ENTRIES_12KB = 36,
    MLXSW_RES_ID_ACL_MAX_BF_LOG = 37,
    MLXSW_RES_ID_MAX_CPU_POLICERS = 38,
    MLXSW_RES_ID_MAX_VRS = 39,
    MLXSW_RES_ID_MAX_RIFS = 40,
    MLXSW_RES_ID_MC_ERIF_LIST_ENTRIES = 41,
    MLXSW_RES_ID_MAX_LPM_TREES = 42,
    MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV4 = 43,
    MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV6 = 44,
    MLXSW_RES_ID_KVD_SINGLE_SIZE = 45,
    MLXSW_RES_ID_KVD_DOUBLE_SIZE = 46,
    MLXSW_RES_ID_KVD_LINEAR_SIZE = 47,
    __MLXSW_RES_ID_MAX = 48
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
struct mlxsw_res {
   bool valid[48U] ;
   u64 values[48U] ;
};
#line 160 
struct mlxsw_core_port;
#line 161 
struct mlxsw_driver;
#line 162 
struct mlxsw_bus;
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_tx_info {
   u8 local_port ;
   bool is_emad ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_rx_listener {
   void (*func)(struct sk_buff *, u8 , void *) ;
   u8 local_port ;
   u16 trap_id ;
   enum mlxsw_reg_hpkt_action action ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_event_listener {
   void (*func)(struct mlxsw_reg_info *, char *, void *) ;
   enum mlxsw_event_trap_id trap_id ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
union __anonunion_u_2150 {
   struct mlxsw_rx_listener rx_listener ;
   struct mlxsw_event_listener event_listener ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_listener {
   u16 trap_id ;
   union __anonunion_u_2150 u ;
   enum mlxsw_reg_hpkt_action action ;
   enum mlxsw_reg_hpkt_action unreg_action ;
   u8 trap_group ;
   bool is_ctrl ;
   bool is_event ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
typedef void mlxsw_reg_trans_cb_t(struct mlxsw_core *, char *, size_t , unsigned long );
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
union __anonunion_u_2151 {
   u16 sys_port ;
   u16 lag_id ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_rx_info {
   bool is_lag ;
   union __anonunion_u_2151 u ;
   u8 lag_port_index ;
   int trap_id ;
};
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_swid_config {
   u8 used_type : 1 ;
   u8 used_properties : 1 ;
   u8 type ;
   u8 properties ;
};
#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_config_profile {
   u16 used_max_vepa_channels : 1 ;
   u16 used_max_mid : 1 ;
   u16 used_max_pgt : 1 ;
   u16 used_max_system_port : 1 ;
   u16 used_max_vlan_groups : 1 ;
   u16 used_max_regions : 1 ;
   u16 used_flood_tables : 1 ;
   u16 used_flood_mode : 1 ;
   u16 used_max_ib_mc : 1 ;
   u16 used_max_pkey : 1 ;
   u16 used_ar_sec : 1 ;
   u16 used_adaptive_routing_group_cap : 1 ;
   u16 used_kvd_sizes : 1 ;
   u8 max_vepa_channels ;
   u16 max_mid ;
   u16 max_pgt ;
   u16 max_system_port ;
   u16 max_vlan_groups ;
   u16 max_regions ;
   u8 max_flood_tables ;
   u8 max_vid_flood_tables ;
   u8 flood_mode ;
   u8 max_fid_offset_flood_tables ;
   u16 fid_offset_flood_table_size ;
   u8 max_fid_flood_tables ;
   u16 fid_flood_table_size ;
   u16 max_ib_mc ;
   u16 max_pkey ;
   u8 ar_sec ;
   u16 adaptive_routing_group_cap ;
   u8 arn ;
   u32 kvd_linear_size ;
   u8 kvd_hash_single_parts ;
   u8 kvd_hash_double_parts ;
   struct mlxsw_swid_config swid_config[8U] ;
};
#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_driver {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   int (*init)(struct mlxsw_core *, struct mlxsw_bus_info *, struct netlink_ext_ack *) ;
   void (*fini)(struct mlxsw_core *) ;
   int (*basic_trap_groups_set)(struct mlxsw_core *) ;
   int (*port_type_set)(struct mlxsw_core *, u8 , enum devlink_port_type ) ;
   int (*port_split)(struct mlxsw_core *, u8 , unsigned int , struct netlink_ext_ack *) ;
   int (*port_unsplit)(struct mlxsw_core *, u8 , struct netlink_ext_ack *) ;
   int (*sb_pool_get)(struct mlxsw_core *, unsigned int , u16 , struct devlink_sb_pool_info *) ;
   int (*sb_pool_set)(struct mlxsw_core *, unsigned int , u16 , u32 , enum devlink_sb_threshold_type , struct netlink_ext_ack *) ;
   int (*sb_port_pool_get)(struct mlxsw_core_port *, unsigned int , u16 , u32 *) ;
   int (*sb_port_pool_set)(struct mlxsw_core_port *, unsigned int , u16 , u32 , struct netlink_ext_ack *) ;
   int (*sb_tc_pool_bind_get)(struct mlxsw_core_port *, unsigned int , u16 , enum devlink_sb_pool_type , u16 *, u32 *) ;
   int (*sb_tc_pool_bind_set)(struct mlxsw_core_port *, unsigned int , u16 , enum devlink_sb_pool_type , u16 , u32 , struct netlink_ext_ack *) ;
   int (*sb_occ_snapshot)(struct mlxsw_core *, unsigned int ) ;
   int (*sb_occ_max_clear)(struct mlxsw_core *, unsigned int ) ;
   int (*sb_occ_port_pool_get)(struct mlxsw_core_port *, unsigned int , u16 , u32 *, u32 *) ;
   int (*sb_occ_tc_port_bind_get)(struct mlxsw_core_port *, unsigned int , u16 , enum devlink_sb_pool_type , u32 *, u32 *) ;
   int (*flash_update)(struct mlxsw_core *, char *, char *, struct netlink_ext_ack *) ;
   int (*trap_init)(struct mlxsw_core *, struct devlink_trap *, void *) ;
   void (*trap_fini)(struct mlxsw_core *, struct devlink_trap *, void *) ;
   int (*trap_action_set)(struct mlxsw_core *, struct devlink_trap *, enum devlink_trap_action ) ;
   int (*trap_group_init)(struct mlxsw_core *, struct devlink_trap_group *) ;
   void (*txhdr_construct)(struct sk_buff *, struct mlxsw_tx_info *) ;
   int (*resources_register)(struct mlxsw_core *) ;
   int (*kvd_sizes_get)(struct mlxsw_core *, struct mlxsw_config_profile *, u64 *, u64 *, u64 *) ;
   int (*params_register)(struct mlxsw_core *) ;
   void (*params_unregister)(struct mlxsw_core *) ;
   void (*ptp_transmitted)(struct mlxsw_core *, struct sk_buff *, u8 ) ;
   u8 txhdr_len ;
   struct mlxsw_config_profile *profile ;
   bool res_query_enabled ;
};
#line 372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
struct mlxsw_bus {
   char *kind ;
   int (*init)(void *, struct mlxsw_core *, struct mlxsw_config_profile *, struct mlxsw_res *) ;
   void (*fini)(void *) ;
   bool (*skb_transmit_busy)(void *, struct mlxsw_tx_info *) ;
   int (*skb_transmit)(void *, struct sk_buff *, struct mlxsw_tx_info *) ;
   int (*cmd_exec)(void *, u16 , u8 , u32 , bool , char *, size_t , char *, size_t , u8 *) ;
   u32 (*read_frc_h)(void *) ;
   u32 (*read_frc_l)(void *) ;
   u8 features ;
};
#line 484 
enum mlxsw_emad_op_tlv_status {
    MLXSW_EMAD_OP_TLV_STATUS_SUCCESS = 0,
    MLXSW_EMAD_OP_TLV_STATUS_BUSY = 1,
    MLXSW_EMAD_OP_TLV_STATUS_VERSION_NOT_SUPPORTED = 2,
    MLXSW_EMAD_OP_TLV_STATUS_UNKNOWN_TLV = 3,
    MLXSW_EMAD_OP_TLV_STATUS_REGISTER_NOT_SUPPORTED = 4,
    MLXSW_EMAD_OP_TLV_STATUS_CLASS_NOT_SUPPORTED = 5,
    MLXSW_EMAD_OP_TLV_STATUS_METHOD_NOT_SUPPORTED = 6,
    MLXSW_EMAD_OP_TLV_STATUS_BAD_PARAMETER = 7,
    MLXSW_EMAD_OP_TLV_STATUS_RESOURCE_NOT_AVAILABLE = 8,
    MLXSW_EMAD_OP_TLV_STATUS_MESSAGE_RECEIPT_ACK = 9,
    MLXSW_EMAD_OP_TLV_STATUS_INTERNAL_ERROR = 112
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct mlxsw_core_port {
   struct devlink_port devlink_port ;
   void *port_driver_priv ;
   u8 local_port ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct __anonstruct_emad_2152 {
   atomic64_t tid ;
   struct list_head trans_list ;
   spinlock_t trans_list_lock ;
   bool use_emad ;
   bool enable_string_tlv ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct __anonstruct_lag_2153 {
   u8 *mapping ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct mlxsw_core {
   struct mlxsw_driver *driver ;
   struct mlxsw_bus *bus ;
   void *bus_priv ;
   struct mlxsw_bus_info *bus_info ;
   struct workqueue_struct *emad_wq ;
   struct list_head rx_listener_list ;
   struct list_head event_listener_list ;
   struct __anonstruct_emad_2152 emad ;
   struct __anonstruct_lag_2153 lag ;
   struct mlxsw_res res ;
   struct mlxsw_hwmon *hwmon ;
   struct mlxsw_thermal *thermal ;
   struct mlxsw_core_port *ports ;
   unsigned int max_ports ;
   bool fw_flash_in_progress ;
   unsigned long driver_priv[0U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct mlxsw_rx_listener_item {
   struct list_head list ;
   struct mlxsw_rx_listener rxl ;
   void *priv ;
};
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct mlxsw_event_listener_item {
   struct list_head list ;
   struct mlxsw_event_listener el ;
   void *priv ;
};
#line 295 
enum mlxsw_core_reg_access_type {
    MLXSW_CORE_REG_ACCESS_TYPE_QUERY = 0,
    MLXSW_CORE_REG_ACCESS_TYPE_WRITE = 1
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct mlxsw_emad_tlv_offsets {
   u16 op_tlv ;
   u16 string_tlv ;
   u16 reg_tlv ;
};
#line 509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct mlxsw_reg_trans {
   struct list_head list ;
   struct list_head bulk_list ;
   struct mlxsw_core *core ;
   struct sk_buff *tx_skb ;
   struct mlxsw_tx_info tx_info ;
   struct delayed_work timeout_dw ;
   unsigned int retries ;
   u64 tid ;
   struct completion completion ;
   atomic_t active ;
   mlxsw_reg_trans_cb_t *cb ;
   unsigned long cb_priv ;
   struct mlxsw_reg_info *reg ;
   enum mlxsw_core_reg_access_type type ;
   int err ;
   char *emad_err_string ;
   enum mlxsw_emad_op_tlv_status emad_status ;
   struct callback_head rcu ;
};
#line 669  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
union __anonunion___u_2155 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 669  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
union __anonunion___u_2157 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
union __anonunion___u_2159 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 1940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
union __anonunion___u_2161 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2174 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2176 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_2228 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhlist_head {
   struct rhash_head rhead ;
   struct rhlist_head *next ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/packed_struct.h"
struct __una_u32 {
   u32 x ;
} __attribute__((__packed__));
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bit_spinlock.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2540 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2548 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2550 {
   struct bucket_table *__val ;
   char __c[1U] ;
};
#line 606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2552 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2554 {
   struct bucket_table *__val ;
   char __c[1U] ;
};
#line 722  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2556 {
   struct bucket_table *__val ;
   char __c[1U] ;
};
#line 732  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2558 {
   struct bucket_table *__val ;
   char __c[1U] ;
};
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2560 {
   struct rhlist_head *__val ;
   char __c[1U] ;
};
#line 763  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2562 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2566 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 786  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2568 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 791  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2570 {
   struct rhlist_head *__val ;
   char __c[1U] ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2572 {
   struct rhlist_head *__val ;
   char __c[1U] ;
};
#line 1045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2574 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 1052  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2578 {
   struct rhash_head *__val ;
   char __c[1U] ;
};
#line 1083  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2580 {
   struct bucket_table *__val ;
   char __c[1U] ;
};
#line 1092  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
union __anonunion___u_2582 {
   struct bucket_table *__val ;
   char __c[1U] ;
};
#line 4917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct mlxsw_afa;
#line 4918 
struct mlxsw_afa_block;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
struct mlxsw_afa_ops {
   int (*kvdl_set_add)(void *, u32 *, char *, bool ) ;
   void (*kvdl_set_del)(void *, u32 , bool ) ;
   int (*kvdl_set_activity_get)(void *, u32 , bool *) ;
   int (*kvdl_fwd_entry_add)(void *, u32 *, u8 ) ;
   void (*kvdl_fwd_entry_del)(void *, u32 ) ;
   int (*counter_index_get)(void *, unsigned int *) ;
   void (*counter_index_put)(void *, unsigned int ) ;
   int (*mirror_add)(void *, u8 , struct net_device *, bool , int *) ;
   void (*mirror_del)(void *, u8 , int , bool ) ;
   bool dummy_first_set ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
enum mlxsw_afa_set_goto_binding_cmd {
    MLXSW_AFA_SET_GOTO_BINDING_CMD_NONE = 0,
    MLXSW_AFA_SET_GOTO_BINDING_CMD_JUMP = 1,
    MLXSW_AFA_SET_GOTO_BINDING_CMD_TERM = 4
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa {
   unsigned int max_acts_per_set ;
   struct mlxsw_afa_ops *ops ;
   void *ops_priv ;
   struct rhashtable set_ht ;
   struct rhashtable fwd_entry_ht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_set_ht_key {
   char enc_actions[168U] ;
   bool is_first ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_set {
   struct rhash_head ht_node ;
   struct mlxsw_afa_set_ht_key ht_key ;
   u32 kvdl_index ;
   bool shared ;
   unsigned int ref_count ;
   struct mlxsw_afa_set *next ;
   struct mlxsw_afa_set *prev ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_fwd_entry_ht_key {
   u8 local_port ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_fwd_entry {
   struct rhash_head ht_node ;
   struct mlxsw_afa_fwd_entry_ht_key ht_key ;
   u32 kvdl_index ;
   unsigned int ref_count ;
};
#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_block {
   struct mlxsw_afa *afa ;
   bool finished ;
   struct mlxsw_afa_set *first_set ;
   struct mlxsw_afa_set *cur_set ;
   unsigned int cur_act_index ;
   struct list_head resource_list ;
};
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_resource {
   struct list_head list ;
   void (*destructor)(struct mlxsw_afa_block *, struct mlxsw_afa_resource *) ;
};
#line 532  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_fwd_entry_ref {
   struct mlxsw_afa_resource resource ;
   struct mlxsw_afa_fwd_entry *fwd_entry ;
};
#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_counter {
   struct mlxsw_afa_resource resource ;
   u32 counter_index ;
};
#line 663 
enum mlxsw_afa_vlan_vlan_tag_cmd {
    MLXSW_AFA_VLAN_VLAN_TAG_CMD_NOP = 0,
    MLXSW_AFA_VLAN_VLAN_TAG_CMD_PUSH_TAG = 1,
    MLXSW_AFA_VLAN_VLAN_TAG_CMD_POP_TAG = 2
};
#line 669 
enum mlxsw_afa_vlan_cmd {
    MLXSW_AFA_VLAN_CMD_NOP = 0,
    MLXSW_AFA_VLAN_CMD_SET_OUTER = 1,
    MLXSW_AFA_VLAN_CMD_SET_INNER = 2,
    MLXSW_AFA_VLAN_CMD_COPY_OUTER_TO_INNER = 3,
    MLXSW_AFA_VLAN_CMD_COPY_INNER_TO_OUTER = 4,
    MLXSW_AFA_VLAN_CMD_SWAP = 5
};
#line 749 
enum mlxsw_afa_trapdisc_trap_action {
    MLXSW_AFA_TRAPDISC_TRAP_ACTION_NOP = 0,
    MLXSW_AFA_TRAPDISC_TRAP_ACTION_TRAP = 2
};
#line 772 
enum mlxsw_afa_trapdisc_forward_action {
    MLXSW_AFA_TRAPDISC_FORWARD_ACTION_FORWARD = 1,
    MLXSW_AFA_TRAPDISC_FORWARD_ACTION_DISCARD = 3
};
#line 861  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_mirror {
   struct mlxsw_afa_resource resource ;
   int span_id ;
   u8 local_in_port ;
   bool ingress ;
};
#line 960 
enum mlxsw_afa_forward_type {
    MLXSW_AFA_FORWARD_TYPE_PBS = 0,
    MLXSW_AFA_FORWARD_TYPE_OUTPUT = 1
};
#line 1036 
enum mlxsw_afa_polcnt_counter_set_type {
    MLXSW_AFA_POLCNT_COUNTER_SET_TYPE_NO_COUNT = 0,
    MLXSW_AFA_POLCNT_COUNTER_SET_TYPE_PACKETS_BYTES = 3,
    MLXSW_AFA_POLCNT_COUNTER_SET_TYPE_PACKETS = 5
};
#line 1116 
enum mlxsw_afa_virfwd_fid_cmd {
    MLXSW_AFA_VIRFWD_FID_CMD_NOOP = 0,
    MLXSW_AFA_VIRFWD_FID_CMD_SET = 1
};
#line 1163 
enum mlxsw_afa_mcrouter_rpf_action {
    MLXSW_AFA_MCROUTER_RPF_ACTION_NOP = 0,
    MLXSW_AFA_MCROUTER_RPF_ACTION_TRAP = 1,
    MLXSW_AFA_MCROUTER_RPF_ACTION_DISCARD_ERROR = 2
};
#line 1188 
enum mlxsw_afa_mrouter_vrmid {
    MLXSW_AFA_MCROUTER_VRMID_INVALID = 0,
    MLXSW_AFA_MCROUTER_VRMID_VALID = 1
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2917 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2919 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_2921 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
enum mlxsw_afk_element {
    MLXSW_AFK_ELEMENT_SRC_SYS_PORT = 0,
    MLXSW_AFK_ELEMENT_DMAC_32_47 = 1,
    MLXSW_AFK_ELEMENT_DMAC_0_31 = 2,
    MLXSW_AFK_ELEMENT_SMAC_32_47 = 3,
    MLXSW_AFK_ELEMENT_SMAC_0_31 = 4,
    MLXSW_AFK_ELEMENT_ETHERTYPE = 5,
    MLXSW_AFK_ELEMENT_IP_PROTO = 6,
    MLXSW_AFK_ELEMENT_SRC_IP_96_127 = 7,
    MLXSW_AFK_ELEMENT_SRC_IP_64_95 = 8,
    MLXSW_AFK_ELEMENT_SRC_IP_32_63 = 9,
    MLXSW_AFK_ELEMENT_SRC_IP_0_31 = 10,
    MLXSW_AFK_ELEMENT_DST_IP_96_127 = 11,
    MLXSW_AFK_ELEMENT_DST_IP_64_95 = 12,
    MLXSW_AFK_ELEMENT_DST_IP_32_63 = 13,
    MLXSW_AFK_ELEMENT_DST_IP_0_31 = 14,
    MLXSW_AFK_ELEMENT_DST_L4_PORT = 15,
    MLXSW_AFK_ELEMENT_SRC_L4_PORT = 16,
    MLXSW_AFK_ELEMENT_VID = 17,
    MLXSW_AFK_ELEMENT_PCP = 18,
    MLXSW_AFK_ELEMENT_TCP_FLAGS = 19,
    MLXSW_AFK_ELEMENT_IP_TTL_ = 20,
    MLXSW_AFK_ELEMENT_IP_ECN = 21,
    MLXSW_AFK_ELEMENT_IP_DSCP = 22,
    MLXSW_AFK_ELEMENT_VIRT_ROUTER_8_10 = 23,
    MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7 = 24,
    MLXSW_AFK_ELEMENT_MAX = 25
};
#line 286 
enum mlxsw_afk_element_type {
    MLXSW_AFK_ELEMENT_TYPE_U32 = 0,
    MLXSW_AFK_ELEMENT_TYPE_BUF = 1
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct mlxsw_afk_element_info {
   enum mlxsw_afk_element element ;
   enum mlxsw_afk_element_type type ;
   struct mlxsw_item item ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct mlxsw_afk_element_inst {
   struct mlxsw_afk_element_info *info ;
   enum mlxsw_afk_element_type type ;
   struct mlxsw_item item ;
   int u32_key_diff ;
   bool avoid_size_check ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct mlxsw_afk_block {
   u16 encoding ;
   struct mlxsw_afk_element_inst *instances ;
   unsigned int instances_count ;
};
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct mlxsw_afk_element_usage {
   unsigned long usage[1U] ;
};
#line 203 
struct mlxsw_afk;
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct mlxsw_afk_ops {
   struct mlxsw_afk_block *blocks ;
   unsigned int blocks_count ;
   void (*encode_block)(char *, int , char *) ;
   void (*clear_block)(char *, int ) ;
};
#line 216 
struct mlxsw_afk_key_info;
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct __anonstruct_storage_3279 {
   char key[64U] ;
   char mask[64U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
struct mlxsw_afk_element_values {
   struct mlxsw_afk_element_usage elusage ;
   struct __anonstruct_storage_3279 storage ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk {
   struct list_head key_info_list ;
   unsigned int max_blocks ;
   struct mlxsw_afk_ops *ops ;
   struct mlxsw_afk_block *blocks ;
   unsigned int blocks_count ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk_key_info {
   struct list_head list ;
   unsigned int ref_count ;
   unsigned int blocks_count ;
   int element_to_block[25U] ;
   struct mlxsw_afk_element_usage elusage ;
   struct mlxsw_afk_block *blocks[0U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct __anonstruct_hits_3280 {
   unsigned long element[1U] ;
   unsigned int total ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk_picker {
   struct __anonstruct_hits_3280 hits[0U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 1468 
struct thermal_zone_device;
#line 1469 
struct thermal_cooling_device;
#line 1471 
enum thermal_device_mode {
    THERMAL_DEVICE_DISABLED = 0,
    THERMAL_DEVICE_ENABLED = 1
};
#line 1476 
enum thermal_trip_type {
    THERMAL_TRIP_ACTIVE = 0,
    THERMAL_TRIP_PASSIVE = 1,
    THERMAL_TRIP_HOT = 2,
    THERMAL_TRIP_CRITICAL = 3
};
#line 1483 
enum thermal_trend {
    THERMAL_TREND_STABLE = 0,
    THERMAL_TREND_RAISING = 1,
    THERMAL_TREND_DROPPING = 2,
    THERMAL_TREND_RAISE_FULL = 3,
    THERMAL_TREND_DROP_FULL = 4
};
#line 1491 
enum thermal_notify_event {
    THERMAL_EVENT_UNSPECIFIED = 0,
    THERMAL_EVENT_TEMP_SAMPLE = 1,
    THERMAL_TRIP_VIOLATED = 2,
    THERMAL_TRIP_CHANGED = 3,
    THERMAL_DEVICE_DOWN = 4,
    THERMAL_DEVICE_UP = 5,
    THERMAL_DEVICE_POWER_CAPABILITY_CHANGED = 6,
    THERMAL_TABLE_CHANGED = 7
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_zone_device_ops {
   int (*bind)(struct thermal_zone_device *, struct thermal_cooling_device *) ;
   int (*unbind)(struct thermal_zone_device *, struct thermal_cooling_device *) ;
   int (*get_temp)(struct thermal_zone_device *, int *) ;
   int (*set_trips)(struct thermal_zone_device *, int , int ) ;
   int (*get_mode)(struct thermal_zone_device *, enum thermal_device_mode *) ;
   int (*set_mode)(struct thermal_zone_device *, enum thermal_device_mode ) ;
   int (*get_trip_type)(struct thermal_zone_device *, int , enum thermal_trip_type *) ;
   int (*get_trip_temp)(struct thermal_zone_device *, int , int *) ;
   int (*set_trip_temp)(struct thermal_zone_device *, int , int ) ;
   int (*get_trip_hyst)(struct thermal_zone_device *, int , int *) ;
   int (*set_trip_hyst)(struct thermal_zone_device *, int , int ) ;
   int (*get_crit_temp)(struct thermal_zone_device *, int *) ;
   int (*set_emul_temp)(struct thermal_zone_device *, int ) ;
   int (*get_trend)(struct thermal_zone_device *, int , enum thermal_trend *) ;
   int (*notify)(struct thermal_zone_device *, int , enum thermal_trip_type ) ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_cooling_device_ops {
   int (*get_max_state)(struct thermal_cooling_device *, unsigned long *) ;
   int (*get_cur_state)(struct thermal_cooling_device *, unsigned long *) ;
   int (*set_cur_state)(struct thermal_cooling_device *, unsigned long ) ;
   int (*get_requested_power)(struct thermal_cooling_device *, struct thermal_zone_device *, u32 *) ;
   int (*state2power)(struct thermal_cooling_device *, struct thermal_zone_device *, unsigned long , u32 *) ;
   int (*power2state)(struct thermal_cooling_device *, struct thermal_zone_device *, u32 , unsigned long *) ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_cooling_device {
   int id ;
   char type[20U] ;
   struct device device ;
   struct device_node *np ;
   void *devdata ;
   void *stats ;
   struct thermal_cooling_device_ops *ops ;
   bool updated ;
   struct mutex lock ;
   struct list_head thermal_instances ;
   struct list_head node ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_attr {
   struct device_attribute attr ;
   char name[20U] ;
};
#line 191 
struct thermal_zone_params;
#line 191 
struct thermal_governor;
#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_zone_device {
   int id ;
   char type[20U] ;
   struct device device ;
   struct attribute_group trips_attribute_group ;
   struct thermal_attr *trip_temp_attrs ;
   struct thermal_attr *trip_type_attrs ;
   struct thermal_attr *trip_hyst_attrs ;
   void *devdata ;
   int trips ;
   unsigned long trips_disabled ;
   int passive_delay ;
   int polling_delay ;
   int temperature ;
   int last_temperature ;
   int emul_temperature ;
   int passive ;
   int prev_low_trip ;
   int prev_high_trip ;
   unsigned int forced_passive ;
   atomic_t need_update ;
   struct thermal_zone_device_ops *ops ;
   struct thermal_zone_params *tzp ;
   struct thermal_governor *governor ;
   void *governor_data ;
   struct list_head thermal_instances ;
   struct ida ida ;
   struct mutex lock ;
   struct list_head node ;
   struct delayed_work poll_queue ;
   enum thermal_notify_event notify_event ;
};
#line 236  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_governor {
   char name[20U] ;
   int (*bind_to_tz)(struct thermal_zone_device *) ;
   void (*unbind_from_tz)(struct thermal_zone_device *) ;
   int (*throttle)(struct thermal_zone_device *, int ) ;
   struct list_head governor_list ;
};
#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_bind_params {
   struct thermal_cooling_device *cdev ;
   int weight ;
   int trip_mask ;
   unsigned long *binding_limits ;
   int (*match)(struct thermal_zone_device *, struct thermal_cooling_device *) ;
};
#line 280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
struct thermal_zone_params {
   char governor_name[20U] ;
   bool no_hwmon ;
   int num_tbps ;
   struct thermal_bind_params *tbp ;
   u32 sustainable_power ;
   s32 k_po ;
   s32 k_pu ;
   s32 k_i ;
   s32 k_d ;
   s32 integral_cutoff ;
   int slope ;
   int offset ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
struct mlxsw_thermal_trip {
   int type ;
   int temp ;
   int hyst ;
   int min_state ;
   int max_state ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
struct mlxsw_thermal_module {
   struct mlxsw_thermal *parent ;
   struct thermal_zone_device *tzdev ;
   struct mlxsw_thermal_trip trips[4U] ;
   enum thermal_device_mode mode ;
   int module ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
struct mlxsw_thermal {
   struct mlxsw_core *core ;
   struct mlxsw_bus_info *bus_info ;
   struct thermal_zone_device *tzdev ;
   int polling_delay ;
   struct thermal_cooling_device *cdevs[5U] ;
   u8 cooling_levels[11U] ;
   struct mlxsw_thermal_trip trips[4U] ;
   enum thermal_device_mode mode ;
   struct mlxsw_thermal_module *tz_module_arr ;
   u8 tz_module_num ;
   struct mlxsw_thermal_module *tz_gearbox_arr ;
   u8 tz_gearbox_num ;
   unsigned int tz_highest_score ;
   struct thermal_zone_device *tz_highest_dev ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_5792 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_5792 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_5793 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_5793 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_5809 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_5809 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_5813 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_5813 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_5814 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_5815 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_5814 __anonCompField_media_link_90 ;
   union __anonunion_5815 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_5817 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_5816 {
   struct __anonstruct_dev_5817 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_5816 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_5831 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_5832 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_5830 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_5831 i2c ;
   struct __anonstruct_custom_5832 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_5830 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_6733 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_6733 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
/* compiler builtin: 
   unsigned int __builtin_bswap32(unsigned int);   */
/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 326 
int kstrtoull(char *, unsigned int, unsigned long long *);
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
__inline static int kstrtoul(char *s, unsigned int base, unsigned long *res)
{
  #line 352 
  return kstrtoull(s,base,(unsigned long long *)res);
}

#line 469 
#line 469 
int sprintf(char *, char * , ...);
#line 472 
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
static long PTR_ERR(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
static bool IS_ERR(void *ptr);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 23 
bool ldv_is_err(void *ptr);
#line 26 
#line 26 
long ldv_ptr_err(void *ptr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 1712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hwmon.h"
#line 398 
struct device *hwmon_device_register_with_groups(struct device *, char *, void *, struct attribute_group **);
#line 416 
#line 416 
void hwmon_device_unregister(struct device *);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 668 
#line 484  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static unsigned int __mlxsw_item_offset(struct mlxsw_item *item, unsigned short index, size_t typesize)
{
  #line 29 
  if ((long)((unsigned int)index != 0U) != 0L && (long)((int)item->step == 0) != 0L) {
    #line 30 
    ldv_inline_asm();
    #line 31 
    ldv_inline_asm();
    #line 32 
    ldv_inline_asm();
    #line 29 
    ;
  }
  #line 30 
  if (((unsigned long)item->offset % typesize != 0UL || (unsigned long)item->step % typesize != 0UL) || (unsigned long)item->in_step_offset % typesize != 0UL) {
    #line 33 
    printk((char *)"\001",item->name,(int)item->offset,(int)item->step,(int)item->in_step_offset,typesize);
    #line 37 
    ldv_inline_asm();
    #line 38 
    ldv_inline_asm();
    #line 39 
    ldv_inline_asm();
    #line 36 
    ;
  }
  #line 39 
  return (unsigned int)((unsigned long)(((int)item->offset + (int)item->step * (int)index) + (int)item->in_step_offset) / typesize);
}

#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static u32 __mlxsw_item_get32(char *buf, struct mlxsw_item *item, unsigned short index)
{
  #line 117 
  u32 tmp;
  #line 115 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),4UL);
  #line 116 
  __be32 *b = (__be32 *)buf;
  #line 119 
  tmp = __builtin_bswap32(*(b + (unsigned long)offset));
  #line 120 
  tmp >>= (int)item->shift;
  #line 121 
  tmp = (unsigned int)(18446744073709551615UL >> (64 - (int)item->size.bits)) & tmp;
  #line 122 
  if ((int)item->no_real_shift != 0) 
                                     #line 123 
                                     tmp <<= (int)item->shift;
  #line 124 
  return tmp;
}

#line 127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static void __mlxsw_item_set32(char *buf, struct mlxsw_item *item, unsigned short index, u32 val)
{
  #line 134 
  u32 tmp;
  #line 130 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),4UL);
  #line 132 
  __be32 *b = (__be32 *)buf;
  #line 133 
  u32 mask = (unsigned int)((18446744073709551615UL >> (64 - (int)item->size.bits)) << (int)item->shift);
  #line 136 
  if (! item->no_real_shift) 
                             #line 137 
                             val <<= (int)item->shift;
  #line 138 
  val &= mask;
  #line 139 
  tmp = __builtin_bswap32(*(b + (unsigned long)offset));
  #line 140 
  tmp = ~ mask & tmp;
  #line 141 
  tmp |= val;
  #line 142 
  *(b + (unsigned long)offset) = __builtin_bswap32(tmp);
  #line 143 
  return;
}

#line 178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static void __mlxsw_item_memcpy_from(char *buf, char *dst, struct mlxsw_item *item, unsigned short index)
{
  #line 182 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),1UL);
  #line 184 
  memcpy((void *)dst,(void *)(buf + (unsigned long)offset),(unsigned long)item->size.bytes);
  #line 185 
  return;
}

#line 8020  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfcr = {.id = (unsigned short)36865U, .len = (unsigned short)8U, .name = (char *)"mfcr"};
#line 8037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfcr_pwm_frequency_item = {.size = {.bits = (unsigned char)7U}, .name = (char *)"reg"};
#line 8037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfcr_pwm_frequency_get(char *buf)
{
  #line 8037 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfcr_pwm_frequency_item,
                         (unsigned short)0);
}

#line 8045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfcr_tacho_active_item = {.offset = (unsigned short)4U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)10U}, .name = (char *)"reg"};
#line 8045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfcr_tacho_active_get(char *buf)
{
  #line 8045 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfcr_tacho_active_item,
                         (unsigned short)0);
}

#line 8053  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfcr_pwm_active_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)5U}, .name = (char *)"reg"};
#line 8053  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfcr_pwm_active_get(char *buf)
{
  #line 8053 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfcr_pwm_active_item,
                         (unsigned short)0);
}

#line 8064  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfcr_unpack(char *payload, enum mlxsw_reg_mfcr_pwm_frequency *p_pwm_frequency, u16 *p_tacho_active, u8 *p_pwm_active)
{
  #line 8068 
  *p_pwm_frequency = (enum mlxsw_reg_mfcr_pwm_frequency)mlxsw_reg_mfcr_pwm_frequency_get(payload);
  #line 8069 
  *p_tacho_active = (unsigned short)mlxsw_reg_mfcr_tacho_active_get(payload);
  #line 8070 
  *p_pwm_active = (unsigned char)mlxsw_reg_mfcr_pwm_active_get(payload);
  #line 8071 
  return;
}

#line 8080  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsc = {.id = (unsigned short)36866U, .len = (unsigned short)8U, .name = (char *)"mfsc"};
#line 8086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsc_pwm_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)3U}, .name = (char *)"reg"};
#line 8086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsc_pwm_set(char *buf, u32 val)
{
  #line 8086 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsc_pwm_item,(unsigned short)0,val);
  #line 8087 
  return;
}

#line 8093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsc_pwm_duty_cycle_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfsc_pwm_duty_cycle_get(char *buf)
{
  #line 8093 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfsc_pwm_duty_cycle_item,
                         (unsigned short)0);
}

#line 8093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsc_pwm_duty_cycle_set(char *buf, u32 val)
{
  #line 8093 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsc_pwm_duty_cycle_item,(unsigned short)0,val);
  #line 8094 
  return;
}

#line 8095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsc_pack(char *payload, u8 pwm, u8 pwm_duty_cycle)
{
  #line 8098 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mfsc.len);
  #line 8099 
  mlxsw_reg_mfsc_pwm_set(payload,(unsigned int)pwm);
  #line 8100 
  mlxsw_reg_mfsc_pwm_duty_cycle_set(payload,(unsigned int)pwm_duty_cycle);
  #line 8101 
  return;
}

#line 8111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsm = {.id = (unsigned short)36867U, .len = (unsigned short)8U, .name = (char *)"mfsm"};
#line 8117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsm_tacho_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)4U}, .name = (char *)"reg"};
#line 8117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsm_tacho_set(char *buf, u32 val)
{
  #line 8117 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsm_tacho_item,(unsigned short)0,val);
  #line 8118 
  return;
}

#line 8123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsm_rpm_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfsm_rpm_get(char *buf)
{
  #line 8123 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfsm_rpm_item,(unsigned short)0);
}

#line 8125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsm_pack(char *payload, u8 tacho)
{
  #line 8127 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mfsm.len);
  #line 8128 
  mlxsw_reg_mfsm_tacho_set(payload,(unsigned int)tacho);
  #line 8129 
  return;
}

#line 8187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_fore = {.id = (unsigned short)36871U, .len = (unsigned short)12U, .name = (char *)"fore"};
#line 8195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_fore_fan_under_limit_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)10U}, .name = (char *)"reg"};
#line 8195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_fore_fan_under_limit_get(char *buf)
{
  #line 8195 
  return __mlxsw_item_get32(buf,& mlxsw_reg_fore_fan_under_limit_item,
                         (unsigned short)0);
}

#line 8197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_fore_unpack(char *payload, u8 tacho, bool *fault)
{
  #line 8200 
  u16 limit;
  #line 8202 
  if (fault != (bool *)0) {
    #line 8203 
    limit = (unsigned short)mlxsw_reg_fore_fan_under_limit_get(payload);
    #line 8204 
    *fault = (_Bool)(((unsigned long)limit & (1UL << (int)tacho)) != 0UL);
  }
  #line 8206 
  return;
}

#line 8216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtcap = {.id = (unsigned short)36873U, .len = (unsigned short)8U, .name = (char *)"mtcap"};
#line 8223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtcap_sensor_count_item = {.size = {.bits = (unsigned char)7U}, .name = (char *)"reg"};
#line 8223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtcap_sensor_count_get(char *buf)
{
  #line 8223 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtcap_sensor_count_item,
                         (unsigned short)0);
}

#line 8234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtmp = {.id = (unsigned short)36874U, .len = (unsigned short)32U, .name = (char *)"mtmp"};
#line 8244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_sensor_index_item = {.size = {.bits = (unsigned char)12U}, .name = (char *)"reg"};
#line 8244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_sensor_index_set(char *buf, u32 val)
{
  #line 8244 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_sensor_index_item,(unsigned short)0,val);
  #line 8245 
  return;
}

#line 8257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_temperature_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtmp_temperature_get(char *buf)
{
  #line 8257 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtmp_temperature_item,
                         (unsigned short)0);
}

#line 8263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_mte_item = {.offset = (unsigned short)8U, .shift = (unsigned char)31U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_mte_set(char *buf, u32 val)
{
  #line 8263 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_mte_item,(unsigned short)0,val);
  #line 8264 
  return;
}

#line 8269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_mtr_item = {.offset = (unsigned short)8U, .shift = (unsigned char)30U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_mtr_set(char *buf, u32 val)
{
  #line 8269 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_mtr_item,(unsigned short)0,val);
  #line 8270 
  return;
}

#line 8276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_max_temperature_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtmp_max_temperature_get(char *buf)
{
  #line 8276 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtmp_max_temperature_item,
                         (unsigned short)0);
}

#line 8293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_temperature_threshold_hi_item = {.offset = (unsigned short)12U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_temperature_threshold_hi_set(char *buf, u32 val)
{
  #line 8293 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_temperature_threshold_hi_item,(unsigned short)0,val);
  #line 8294 
  return;
}

#line 8307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_sensor_name_item = {.offset = (unsigned short)24U, .size = {.bytes = (unsigned short)8U}, .name = (char *)"reg"};
#line 8307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_sensor_name_memcpy_from(char *buf, char *dst)
{
  #line 8307 
  __mlxsw_item_memcpy_from(buf,dst,& mlxsw_reg_mtmp_sensor_name_item,(unsigned short)0);
  #line 8308 
  return;
}

#line 8309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_pack(char *payload, u16 sensor_index, bool max_temp_enable, bool max_temp_reset)
{
  #line 8313 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mtmp.len);
  #line 8314 
  mlxsw_reg_mtmp_sensor_index_set(payload,(unsigned int)sensor_index);
  #line 8315 
  mlxsw_reg_mtmp_mte_set(payload,(unsigned int)max_temp_enable);
  #line 8316 
  mlxsw_reg_mtmp_mtr_set(payload,(unsigned int)max_temp_reset);
  #line 8317 
  mlxsw_reg_mtmp_temperature_threshold_hi_set(payload,840U);
  #line 8318 
  return;
}

#line 8321  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_unpack(char *payload, int *p_temp, int *p_max_temp, char *sensor_name)
{
  #line 8324 
  s16 temp;
  #line 8326 
  if (p_temp != (int *)0) {
    #line 8328 
    s16 v_;
    #line 8328 
    int tmp_0;
    #line 8327 
    temp = (short)mlxsw_reg_mtmp_temperature_get(payload);
    #line 8328 
    v_ = temp;
    #line 8328 
    if ((int)v_ >= 0) 
                      #line 8328 
                      tmp_0 = (int)v_ * 125; else 
                                                  #line 8328 
                                                  tmp_0 = (int)((short)(((unsigned long)v_ + 65536UL) * (unsigned long)125U));
    #line 8328 
    *p_temp = tmp_0;
  }
  #line 8330 
  if (p_max_temp != (int *)0) {
    #line 8332 
    s16 v__0;
    #line 8332 
    int tmp_3;
    #line 8331 
    temp = (short)mlxsw_reg_mtmp_max_temperature_get(payload);
    #line 8332 
    v__0 = temp;
    #line 8332 
    if ((int)v__0 >= 0) 
                        #line 8332 
                        tmp_3 = (int)v__0 * 125; else 
                                                      #line 8332 
                                                      tmp_3 = (int)((short)(((unsigned long)v__0 + 65536UL) * (unsigned long)125U));
    #line 8332 
    *p_max_temp = tmp_3;
  }
  #line 8334 
  if (sensor_name != (char *)0) 
                                #line 8335 
                                mlxsw_reg_mtmp_sensor_name_memcpy_from(payload,sensor_name);
  #line 8336 
  return;
}

#line 8350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtbr = {.id = (unsigned short)36879U, .len = (unsigned short)204U, .name = (char *)"mtbr"};
#line 8357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtbr_base_sensor_index_item = {.size = {.bits = (unsigned char)12U}, .name = (char *)"reg"};
#line 8357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtbr_base_sensor_index_set(char *buf, u32 val)
{
  #line 8357 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtbr_base_sensor_index_item,(unsigned short)0,val);
  #line 8358 
  return;
}

#line 8366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtbr_num_rec_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtbr_num_rec_set(char *buf, u32 val)
{
  #line 8366 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtbr_num_rec_item,(unsigned short)0,val);
  #line 8367 
  return;
}

#line 8373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtbr_rec_max_temp_item = {.offset = (unsigned short)16U, .step = (short)4, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtbr_rec_max_temp_get(char *buf, unsigned short index)
{
  #line 8373 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtbr_rec_max_temp_item,
                         (unsigned short)((int)index));
}

#line 8381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtbr_rec_temp_item = {.offset = (unsigned short)16U, .step = (short)4, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtbr_rec_temp_get(char *buf, unsigned short index)
{
  #line 8381 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtbr_rec_temp_item,
                         (unsigned short)((int)index));
}

#line 8384  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtbr_pack(char *payload, u16 base_sensor_index, u8 num_rec)
{
  #line 8387 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mtbr.len);
  #line 8388 
  mlxsw_reg_mtbr_base_sensor_index_set(payload,(unsigned int)base_sensor_index);
  #line 8389 
  mlxsw_reg_mtbr_num_rec_set(payload,(unsigned int)num_rec);
  #line 8390 
  return;
}

#line 8403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtbr_temp_unpack(char *payload, int rec_ind, u16 *p_temp, u16 *p_max_temp)
{
  #line 8406 
  if (p_temp != (u16 *)0U) {
    #line 8407 
    *p_temp = (unsigned short)mlxsw_reg_mtbr_rec_temp_get(payload,
                                  (unsigned short)((int)((unsigned short)rec_ind)));
  }
  #line 8408 
  if (p_max_temp != (u16 *)0U) {
    #line 8409 
    *p_max_temp = (unsigned short)mlxsw_reg_mtbr_rec_max_temp_get(payload,
                                        (unsigned short)((int)((unsigned short)rec_ind)));
  }
  #line 8410 
  return;
}

#line 9572  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mgpir = {.id = (unsigned short)37120U, .len = (unsigned short)160U, .name = (char *)"mgpir"};
#line 9582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_device_type_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)4U}, .name = (char *)"reg"};
#line 9582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_device_type_get(char *buf)
{
  #line 9582 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_device_type_item,
                         (unsigned short)0);
}

#line 9588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_devices_per_flash_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 9588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_devices_per_flash_get(char *buf)
{
  #line 9588 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_devices_per_flash_item,
                         (unsigned short)0);
}

#line 9594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_num_of_devices_item = {.size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 9594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_num_of_devices_get(char *buf)
{
  #line 9594 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_num_of_devices_item,
                         (unsigned short)0);
}

#line 9600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_num_of_modules_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 9600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_num_of_modules_get(char *buf)
{
  #line 9600 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_num_of_modules_item,
                         (unsigned short)0);
}

#line 9602  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgpir_pack(char *payload)
{
  #line 9604 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mgpir.len);
  #line 9605 
  return;
}

#line 9608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgpir_unpack(char *payload, u8 *num_of_devices, enum mlxsw_reg_mgpir_device_type *device_type, u8 *devices_per_flash, u8 *num_of_modules)
{
  #line 9612 
  if (num_of_devices != (u8 *)0U) {
    #line 9613 
    *num_of_devices = (unsigned char)mlxsw_reg_mgpir_num_of_devices_get(payload);
  }
  #line 9614 
  if (device_type != (enum mlxsw_reg_mgpir_device_type *)MLXSW_REG_MGPIR_DEVICE_TYPE_NONE) {
    #line 9615 
    *device_type = (enum mlxsw_reg_mgpir_device_type)mlxsw_reg_mgpir_device_type_get(payload);
  }
  #line 9616 
  if (devices_per_flash != (u8 *)0U) {
    #line 9617 
    *devices_per_flash = (unsigned char)mlxsw_reg_mgpir_devices_per_flash_get(payload);
  }
  #line 9619 
  if (num_of_modules != (u8 *)0U) {
    #line 9620 
    *num_of_modules = (unsigned char)mlxsw_reg_mgpir_num_of_modules_get(payload);
  }
  #line 9621 
  return;
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 33 
bool mlxsw_core_res_query_enabled(struct mlxsw_core *mlxsw_core);
#line 155 
#line 155 
int mlxsw_reg_query(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload);
#line 157 
#line 157 
int mlxsw_reg_write(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload);
#line 414 
#line 621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
int mlxsw_hwmon_init(struct mlxsw_core *mlxsw_core, struct mlxsw_bus_info *mlxsw_bus_info, struct mlxsw_hwmon **p_hwmon);
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
void mlxsw_hwmon_fini(struct mlxsw_hwmon *mlxsw_hwmon);
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.h"
#line 7 
int mlxsw_env_module_temp_thresholds_get(struct mlxsw_core *core, int module, int off, int *temp);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static int mlxsw_hwmon_get_attr_index(int index, int count)
{
  #line 28 
  if (index >= count) 
                      #line 29 
                      return index % count + 256;
  #line 31 
  return index;
}

#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_temp_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 52 
  void *__mptr;
  #line 54 
  char mtmp_pl[32U];
  #line 55 
  int temp;
  #line 55 
  int index;
  #line 56 
  int err;
  #line 52 
  __mptr = (void *)attr;
  #line 51 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 53 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 58 
  index = mlxsw_hwmon_get_attr_index((int)mlwsw_hwmon_attr->type_index,(int)mlxsw_hwmon->module_sensor_max);
  #line 60 
  mlxsw_reg_mtmp_pack((char *)(& mtmp_pl),(unsigned short)((int)((unsigned short)index)),(_Bool)0,(_Bool)0);
  #line 61 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mtmp,(char *)(& mtmp_pl));
  #line 62 
  if (err != 0) {
    #line 63 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to query temp sensor\n");
    #line 64 
    return (long)err;
  }
  #line 66 
  mlxsw_reg_mtmp_unpack((char *)(& mtmp_pl),& temp,(int *)0,(char *)0);
  #line 67 
  return (long)sprintf(buf,(char *)"%d\n",temp);
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_temp_max_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 75 
  void *__mptr;
  #line 77 
  char mtmp_pl[32U];
  #line 78 
  int temp_max;
  #line 78 
  int index;
  #line 79 
  int err;
  #line 75 
  __mptr = (void *)attr;
  #line 74 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 76 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 81 
  index = mlxsw_hwmon_get_attr_index((int)mlwsw_hwmon_attr->type_index,(int)mlxsw_hwmon->module_sensor_max);
  #line 83 
  mlxsw_reg_mtmp_pack((char *)(& mtmp_pl),(unsigned short)((int)((unsigned short)index)),(_Bool)0,(_Bool)0);
  #line 84 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mtmp,(char *)(& mtmp_pl));
  #line 85 
  if (err != 0) {
    #line 86 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to query temp sensor\n");
    #line 87 
    return (long)err;
  }
  #line 89 
  mlxsw_reg_mtmp_unpack((char *)(& mtmp_pl),(int *)0,& temp_max,(char *)0);
  #line 90 
  return (long)sprintf(buf,(char *)"%d\n",temp_max);
}

#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_temp_rst_store(struct device *dev, struct device_attribute *attr, char *buf, size_t len)
{
  #line 98 
  void *__mptr;
  #line 100 
  char mtmp_pl[32U];
  #line 101 
  unsigned long val;
  #line 102 
  int index;
  #line 103 
  int err;
  #line 98 
  __mptr = (void *)attr;
  #line 97 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 99 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 105 
  err = kstrtoul(buf,10U,& val);
  #line 106 
  if (err != 0) 
                #line 107 
                return (long)err;
  #line 108 
  if (val != 1UL) 
                  #line 109 
                  return -22L;
  #line 111 
  index = mlxsw_hwmon_get_attr_index((int)mlwsw_hwmon_attr->type_index,(int)mlxsw_hwmon->module_sensor_max);
  #line 113 
  mlxsw_reg_mtmp_pack((char *)(& mtmp_pl),(unsigned short)((int)((unsigned short)index)),(_Bool)1,(_Bool)1);
  #line 114 
  err = mlxsw_reg_write(mlxsw_hwmon->core,& mlxsw_reg_mtmp,(char *)(& mtmp_pl));
  #line 115 
  if (err != 0) {
    #line 116 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to reset temp sensor history\n");
    #line 117 
    return (long)err;
  }
  #line 119 
  return (long)len;
}

#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_fan_rpm_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 127 
  void *__mptr;
  #line 129 
  char mfsm_pl[8U];
  #line 130 
  int err;
  #line 127 
  __mptr = (void *)attr;
  #line 126 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 128 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 132 
  mlxsw_reg_mfsm_pack((char *)(& mfsm_pl),(unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index)));
  #line 133 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mfsm,(char *)(& mfsm_pl));
  #line 134 
  if (err != 0) {
    #line 135 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to query fan\n");
    #line 136 
    return (long)err;
  }
  #line 138 
  ;
  #line 138 
  return (long)sprintf(buf,(char *)"%u\n",
                mlxsw_reg_mfsm_rpm_get((char *)(& mfsm_pl)));
}

#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_fan_fault_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 146 
  void *__mptr;
  #line 148 
  char fore_pl[12U];
  #line 149 
  bool fault;
  #line 150 
  int err;
  #line 146 
  __mptr = (void *)attr;
  #line 145 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 147 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 152 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_fore,(char *)(& fore_pl));
  #line 153 
  if (err != 0) {
    #line 154 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to query fan\n");
    #line 155 
    return (long)err;
  }
  #line 157 
  mlxsw_reg_fore_unpack((char *)(& fore_pl),(unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index)),& fault);
  #line 159 
  return (long)sprintf(buf,(char *)"%u\n",(int)fault);
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_pwm_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 167 
  void *__mptr;
  #line 169 
  char mfsc_pl[8U];
  #line 170 
  int err;
  #line 167 
  __mptr = (void *)attr;
  #line 166 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 168 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 172 
  mlxsw_reg_mfsc_pack((char *)(& mfsc_pl),(unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index)),(unsigned char)0);
  #line 173 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mfsc,(char *)(& mfsc_pl));
  #line 174 
  if (err != 0) {
    #line 175 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to query PWM\n");
    #line 176 
    return (long)err;
  }
  #line 178 
  ;
  #line 178 
  return (long)sprintf(buf,(char *)"%u\n",
                mlxsw_reg_mfsc_pwm_duty_cycle_get((char *)(& mfsc_pl)));
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_pwm_store(struct device *dev, struct device_attribute *attr, char *buf, size_t len)
{
  #line 187 
  void *__mptr;
  #line 189 
  char mfsc_pl[8U];
  #line 190 
  unsigned long val;
  #line 191 
  int err;
  #line 187 
  __mptr = (void *)attr;
  #line 186 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 188 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 193 
  err = kstrtoul(buf,10U,& val);
  #line 194 
  if (err != 0) 
                #line 195 
                return (long)err;
  #line 196 
  if (val > 255UL) 
                   #line 197 
                   return -22L;
  #line 199 
  mlxsw_reg_mfsc_pack((char *)(& mfsc_pl),(unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index)),(unsigned char)((int)((unsigned char)val)));
  #line 200 
  err = mlxsw_reg_write(mlxsw_hwmon->core,& mlxsw_reg_mfsc,(char *)(& mfsc_pl));
  #line 201 
  if (err != 0) {
    #line 202 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to write PWM\n");
    #line 203 
    return (long)err;
  }
  #line 205 
  return (long)len;
}

#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_module_temp_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 213 
  void *__mptr;
  #line 215 
  char mtmp_pl[32U];
  #line 216 
  u8 module;
  #line 217 
  int temp;
  #line 218 
  int err;
  #line 213 
  __mptr = (void *)attr;
  #line 212 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 214 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 220 
  module = (unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index) - (int)mlxsw_hwmon->sensor_count);
  #line 221 
  mlxsw_reg_mtmp_pack((char *)(& mtmp_pl),(unsigned short)((int)((unsigned int)((unsigned short)module) + 64U)),(_Bool)0,(_Bool)0);
  #line 223 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mtmp,(char *)(& mtmp_pl));
  #line 224 
  if (err != 0) 
                #line 225 
                return (long)err;
  #line 226 
  mlxsw_reg_mtmp_unpack((char *)(& mtmp_pl),& temp,(int *)0,(char *)0);
  #line 228 
  return (long)sprintf(buf,(char *)"%d\n",temp);
}

#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_module_temp_fault_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 236 
  void *__mptr;
  #line 239 
  u8 module;
  #line 239 
  u8 fault;
  #line 240 
  u16 temp;
  #line 241 
  int err;
  #line 236 
  __mptr = (void *)attr;
  #line 235 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 237 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 238 
  char mtbr_pl[204U] = {(char)0};
  #line 243 
  module = (unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index) - (int)mlxsw_hwmon->sensor_count);
  #line 244 
  mlxsw_reg_mtbr_pack((char *)(& mtbr_pl),(unsigned short)((int)((unsigned int)((unsigned short)module) + 64U)),(unsigned char)1);
  #line 246 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mtbr,(char *)(& mtbr_pl));
  #line 247 
  if (err != 0) {
    #line 248 
    _dev_err(dev,(char *)"Failed to query module temperature sensor\n");
    #line 249 
    return (long)err;
  }
  #line 252 
  mlxsw_reg_mtbr_temp_unpack((char *)(& mtbr_pl),0,& temp,(u16 *)0U);
  #line 255 
  switch ((int)temp) {
    #line 256 
    case 32771: 
                #line 256 
    ;
    #line 260 
    fault = (unsigned char)1U;
    #line 261 
    break;
    #line 262 
    case 32768: 
                #line 262 
    ;
    #line 263 
    case 32769: 
                #line 263 
    ;
    #line 264 
    case 32770: 
                #line 264 
    ;
    #line 265 
    default: 
             #line 265 
    ;
    #line 266 
    fault = (unsigned char)0U;
    #line 267 
    break;
  }
  #line 270 
  return (long)sprintf(buf,(char *)"%u\n",(int)fault);
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_module_temp_critical_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 278 
  void *__mptr;
  #line 280 
  int temp;
  #line 281 
  u8 module;
  #line 282 
  int err;
  #line 278 
  __mptr = (void *)attr;
  #line 277 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 279 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 284 
  module = (unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index) - (int)mlxsw_hwmon->sensor_count);
  #line 285 
  err = mlxsw_env_module_temp_thresholds_get(mlxsw_hwmon->core,(int)module,4,& temp);
  #line 287 
  if (err != 0) {
    #line 288 
    _dev_err(dev,(char *)"Failed to query module temperature thresholds\n");
    #line 289 
    return (long)err;
  }
  #line 292 
  return (long)sprintf(buf,(char *)"%u\n",temp);
}

#line 296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_module_temp_emergency_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 301 
  void *__mptr;
  #line 303 
  u8 module;
  #line 304 
  int temp;
  #line 305 
  int err;
  #line 301 
  __mptr = (void *)attr;
  #line 300 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 302 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 307 
  module = (unsigned char)((int)((unsigned char)mlwsw_hwmon_attr->type_index) - (int)mlxsw_hwmon->sensor_count);
  #line 308 
  err = mlxsw_env_module_temp_thresholds_get(mlxsw_hwmon->core,(int)module,0,& temp);
  #line 310 
  if (err != 0) {
    #line 311 
    _dev_err(dev,(char *)"Failed to query module temperature thresholds\n");
    #line 312 
    return (long)err;
  }
  #line 315 
  return (long)sprintf(buf,(char *)"%u\n",temp);
}

#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_module_temp_label_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 324 
  void *__mptr;
  #line 324 
  __mptr = (void *)attr;
  #line 323 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 326 
  return (long)sprintf(buf,(char *)"front panel %03u\n",
                mlwsw_hwmon_attr->type_index);
}

#line 331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static ssize_t mlxsw_hwmon_gbox_temp_label_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 336 
  void *__mptr;
  #line 336 
  __mptr = (void *)attr;
  #line 335 
  struct mlxsw_hwmon_attr *mlwsw_hwmon_attr = ((struct mlxsw_hwmon_attr *)__mptr);
  #line 337 
  struct mlxsw_hwmon *mlxsw_hwmon = mlwsw_hwmon_attr->hwmon;
  #line 338 
  int index = (int)((mlwsw_hwmon_attr->type_index - (unsigned int)mlxsw_hwmon->module_sensor_max) + 1U);
  #line 341 
  return (long)sprintf(buf,(char *)"gearbox %03u\n",index);
}

#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static void mlxsw_hwmon_attr_add(struct mlxsw_hwmon *mlxsw_hwmon, enum mlxsw_hwmon_attr_type attr_type, unsigned int type_index, unsigned int num)
{
  #line 362 
  struct mlxsw_hwmon_attr *mlxsw_hwmon_attr;
  #line 363 
  unsigned int attr_index;
  #line 365 
  attr_index = mlxsw_hwmon->attrs_count;
  #line 366 
  mlxsw_hwmon_attr = & mlxsw_hwmon->hwmon_attrs[attr_index];
  #line 368 
  switch ((unsigned int)attr_type) {
    #line 369 
    case (unsigned int)0: 
                          #line 369 
    ;
    #line 370 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_temp_show;
    #line 371 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 372 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_input",num + 1U);
    #line 374 
    break;
    #line 375 
    case (unsigned int)1: 
                          #line 375 
    ;
    #line 376 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_temp_max_show;
    #line 377 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 378 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_highest",num + 1U);
    #line 380 
    break;
    #line 381 
    case (unsigned int)2: 
                          #line 381 
    ;
    #line 382 
    mlxsw_hwmon_attr->dev_attr.store = & mlxsw_hwmon_temp_rst_store;
    #line 383 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)128U;
    #line 384 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_reset_history",num + 1U);
    #line 386 
    break;
    #line 387 
    case (unsigned int)3: 
                          #line 387 
    ;
    #line 388 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_fan_rpm_show;
    #line 389 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 390 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"fan%u_input",num + 1U);
    #line 392 
    break;
    #line 393 
    case (unsigned int)4: 
                          #line 393 
    ;
    #line 394 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_fan_fault_show;
    #line 395 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 396 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"fan%u_fault",num + 1U);
    #line 398 
    break;
    #line 399 
    case (unsigned int)5: 
                          #line 399 
    ;
    #line 400 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_pwm_show;
    #line 401 
    mlxsw_hwmon_attr->dev_attr.store = & mlxsw_hwmon_pwm_store;
    #line 402 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)420U;
    #line 403 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"pwm%u",num + 1U);
    #line 405 
    break;
    #line 406 
    case (unsigned int)6: 
                          #line 406 
    ;
    #line 407 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_module_temp_show;
    #line 408 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 409 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_input",num + 1U);
    #line 411 
    break;
    #line 412 
    case (unsigned int)7: 
                          #line 412 
    ;
    #line 413 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_module_temp_fault_show;
    #line 415 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 416 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_fault",num + 1U);
    #line 418 
    break;
    #line 419 
    case (unsigned int)8: 
                          #line 419 
    ;
    #line 420 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_module_temp_critical_show;
    #line 422 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 423 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_crit",num + 1U);
    #line 425 
    break;
    #line 426 
    case (unsigned int)9: 
                          #line 426 
    ;
    #line 427 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_module_temp_emergency_show;
    #line 429 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 430 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_emergency",num + 1U);
    #line 432 
    break;
    #line 433 
    case (unsigned int)10: 
                           #line 433 
    ;
    #line 434 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_module_temp_label_show;
    #line 436 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 437 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_label",num + 1U);
    #line 439 
    break;
    #line 440 
    case (unsigned int)11: 
                           #line 440 
    ;
    #line 441 
    mlxsw_hwmon_attr->dev_attr.show = & mlxsw_hwmon_gbox_temp_label_show;
    #line 443 
    mlxsw_hwmon_attr->dev_attr.attr.mode = (unsigned short)292U;
    #line 444 
    snprintf((char *)(& mlxsw_hwmon_attr->name),32UL,(char *)"temp%u_label",num + 1U);
    #line 446 
    break;
    #line 447 
    default: 
             #line 447 
    ;
    {
      #line 448 
      int __ret_warn_on = 1;
      #line 448 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 449 
        ldv_inline_asm();
        #line 450 
        ldv_inline_asm();
      }
      #line 448 
      long tmp = (long)(__ret_warn_on != 0);
    }
  }
  #line 451 
  mlxsw_hwmon_attr->type_index = type_index;
  #line 452 
  mlxsw_hwmon_attr->hwmon = mlxsw_hwmon;
  #line 453 
  mlxsw_hwmon_attr->dev_attr.attr.name = (char *)(& mlxsw_hwmon_attr->name);
  {
    #line 454 
    struct lock_class_key __key;
    #line 454 
    mlxsw_hwmon_attr->dev_attr.attr.key = & __key;
  }
  #line 456 
  mlxsw_hwmon->attrs[attr_index] = & mlxsw_hwmon_attr->dev_attr.attr;
  #line 457 
  (mlxsw_hwmon->attrs_count) ++;
  #line 458 
  return;
}

#line 460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static int mlxsw_hwmon_temp_init(struct mlxsw_hwmon *mlxsw_hwmon)
{
  #line 463 
  char mtmp_pl[32U];
  #line 464 
  int i;
  #line 465 
  int err;
  #line 462 
  char mtcap_pl[8U] = {(char)0};
  #line 467 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mtcap,(char *)(& mtcap_pl));
  #line 468 
  if (err != 0) {
    #line 469 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to get number of temp sensors\n");
    #line 470 
    return err;
  }
  #line 472 
  mlxsw_hwmon->sensor_count = (unsigned char)mlxsw_reg_mtcap_sensor_count_get((char *)(& mtcap_pl));
  #line 473 
  i = 0;
  #line 473 
  while ((int)mlxsw_hwmon->sensor_count > i) {
    #line 474 
    mlxsw_reg_mtmp_pack((char *)(& mtmp_pl),(unsigned short)((int)((unsigned short)i)),(_Bool)1,(_Bool)1);
    #line 475 
    err = mlxsw_reg_write(mlxsw_hwmon->core,& mlxsw_reg_mtmp,(char *)(& mtmp_pl));
    #line 477 
    if (err != 0) {
      #line 478 
      _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to setup temp sensor number %d\n",i);
      #line 480 
      return err;
    }
    #line 482 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP,(unsigned int)i,(unsigned int)i);
    #line 484 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MAX,(unsigned int)i,(unsigned int)i);
    #line 486 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_RST,(unsigned int)i,(unsigned int)i);
    #line 473 
    i ++;
  }
  #line 489 
  return 0;
}

#line 492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static int mlxsw_hwmon_fans_init(struct mlxsw_hwmon *mlxsw_hwmon)
{
  #line 495 
  enum mlxsw_reg_mfcr_pwm_frequency freq;
  #line 496 
  unsigned int type_index;
  #line 497 
  unsigned int num;
  #line 498 
  u16 tacho_active;
  #line 499 
  u8 pwm_active;
  #line 500 
  int err;
  #line 494 
  char mfcr_pl[8U] = {(char)0};
  #line 502 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mfcr,(char *)(& mfcr_pl));
  #line 503 
  if (err != 0) {
    #line 504 
    _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to get to probe PWMs and Tachometers\n");
    #line 505 
    return err;
  }
  #line 507 
  mlxsw_reg_mfcr_unpack((char *)(& mfcr_pl),& freq,& tacho_active,& pwm_active);
  #line 508 
  num = 0U;
  #line 509 
  type_index = 0U;
  #line 509 
  while (type_index <= 9U) {
    #line 510 
    if ((((unsigned long)tacho_active >> type_index) & 1UL) != 0UL) {
      #line 514 
      unsigned int tmp;
      #line 511 
      mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_FAN_RPM,type_index,num);
      #line 514 
      tmp = num;
      #line 514 
      num ++;
      #line 514 
      ;
      #line 514 
      ;
      #line 514 
      ;
      #line 514 
      mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_FAN_FAULT,type_index,tmp);
    }
    #line 509 
    type_index ++;
  }
  #line 519 
  num = 0U;
  #line 520 
  type_index = 0U;
  #line 520 
  while (type_index <= 4U) {
    #line 521 
    if ((((unsigned long)pwm_active >> type_index) & 1UL) != 0UL) {
      #line 522 
      unsigned int tmp_0;
      #line 522 
      tmp_0 = num;
      #line 522 
      num ++;
      #line 522 
      ;
      #line 522 
      ;
      #line 522 
      ;
      #line 522 
      mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_PWM,type_index,tmp_0);
    }
    #line 520 
    type_index ++;
  }
  #line 526 
  return 0;
}

#line 529  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static int mlxsw_hwmon_module_init(struct mlxsw_hwmon *mlxsw_hwmon)
{
  #line 531 
  char mgpir_pl[160U];
  #line 532 
  u8 module_sensor_max;
  #line 533 
  int i;
  #line 533 
  int err;
  #line 535 
  if (! mlxsw_core_res_query_enabled(mlxsw_hwmon->core)) 
                                                         #line 536 
                                                         return 0;
  #line 538 
  mlxsw_reg_mgpir_pack((char *)(& mgpir_pl));
  #line 539 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mgpir,(char *)(& mgpir_pl));
  #line 540 
  if (err != 0) 
                #line 541 
                return err;
  #line 543 
  mlxsw_reg_mgpir_unpack((char *)(& mgpir_pl),(u8 *)0U,(enum mlxsw_reg_mgpir_device_type *)MLXSW_REG_MGPIR_DEVICE_TYPE_NONE,(u8 *)0U,& module_sensor_max);
  #line 551 
  mlxsw_hwmon->module_sensor_max = (unsigned char)((int)mlxsw_hwmon->sensor_count + (int)module_sensor_max);
  #line 553 
  i = (int)mlxsw_hwmon->sensor_count;
  #line 553 
  while ((int)mlxsw_hwmon->module_sensor_max > i) {
    #line 555 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE,(unsigned int)i,(unsigned int)i);
    #line 557 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_FAULT,(unsigned int)i,(unsigned int)i);
    #line 560 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_CRIT,(unsigned int)i,(unsigned int)i);
    #line 563 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_EMERG,(unsigned int)i,(unsigned int)i);
    #line 566 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MODULE_LABEL,(unsigned int)i,(unsigned int)i);
    #line 554 
    i ++;
  }
  #line 571 
  return 0;
}

#line 574  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
static int mlxsw_hwmon_gearbox_init(struct mlxsw_hwmon *mlxsw_hwmon)
{
  #line 576 
  int index;
  #line 576 
  int max_index;
  #line 576 
  int sensor_index;
  #line 577 
  char mgpir_pl[160U];
  #line 578 
  char mtmp_pl[32U];
  #line 579 
  u8 gbox_num;
  #line 580 
  int err;
  #line 582 
  mlxsw_reg_mgpir_pack((char *)(& mgpir_pl));
  #line 583 
  err = mlxsw_reg_query(mlxsw_hwmon->core,& mlxsw_reg_mgpir,(char *)(& mgpir_pl));
  #line 584 
  if (err != 0) 
                #line 585 
                return err;
  #line 587 
  mlxsw_reg_mgpir_unpack((char *)(& mgpir_pl),& gbox_num,(enum mlxsw_reg_mgpir_device_type *)MLXSW_REG_MGPIR_DEVICE_TYPE_NONE,(u8 *)0U,(u8 *)0U);
  #line 588 
  if ((unsigned int)gbox_num == 0U) 
                                    #line 589 
                                    return 0;
  #line 591 
  index = (int)mlxsw_hwmon->module_sensor_max;
  #line 592 
  max_index = (int)mlxsw_hwmon->module_sensor_max + (int)gbox_num;
  #line 593 
  while (index < max_index) {
    #line 594 
    sensor_index = index % (int)mlxsw_hwmon->module_sensor_max + 256;
    #line 596 
    mlxsw_reg_mtmp_pack((char *)(& mtmp_pl),(unsigned short)((int)((unsigned short)sensor_index)),(_Bool)1,(_Bool)1);
    #line 597 
    err = mlxsw_reg_write(mlxsw_hwmon->core,& mlxsw_reg_mtmp,(char *)(& mtmp_pl));
    #line 599 
    if (err != 0) {
      #line 600 
      _dev_err((mlxsw_hwmon->bus_info)->dev,(char *)"Failed to setup temp sensor number %d\n",sensor_index);
      #line 602 
      return err;
    }
    #line 604 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP,(unsigned int)index,(unsigned int)index);
    #line 606 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_MAX,(unsigned int)index,(unsigned int)index);
    #line 609 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_RST,(unsigned int)index,(unsigned int)index);
    #line 612 
    mlxsw_hwmon_attr_add(mlxsw_hwmon,(enum mlxsw_hwmon_attr_type)MLXSW_HWMON_ATTR_TYPE_TEMP_GBOX_LABEL,(unsigned int)index,(unsigned int)index);
    #line 615 
    index ++;
  }
  #line 618 
  return 0;
}

#line 621  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
int mlxsw_hwmon_init(struct mlxsw_core *mlxsw_core, struct mlxsw_bus_info *mlxsw_bus_info, struct mlxsw_hwmon **p_hwmon)
{
  #line 625 
  struct mlxsw_hwmon *mlxsw_hwmon;
  #line 626 
  struct device *hwmon_dev;
  #line 627 
  int err;
  #line 629 
  mlxsw_hwmon = (struct mlxsw_hwmon *)kzalloc(58672UL,3264U);
  #line 630 
  if (mlxsw_hwmon == (struct mlxsw_hwmon *)0) 
                                              #line 631 
                                              return -12;
  #line 632 
  mlxsw_hwmon->core = mlxsw_core;
  #line 633 
  mlxsw_hwmon->bus_info = mlxsw_bus_info;
  #line 635 
  err = mlxsw_hwmon_temp_init(mlxsw_hwmon);
  #line 636 
  if (err != 0) 
                #line 637 
                goto err_temp_init;
  #line 639 
  err = mlxsw_hwmon_fans_init(mlxsw_hwmon);
  #line 640 
  if (err != 0) 
                #line 641 
                goto err_fans_init;
  #line 643 
  err = mlxsw_hwmon_module_init(mlxsw_hwmon);
  #line 644 
  if (err != 0) 
                #line 645 
                goto err_temp_module_init;
  #line 647 
  err = mlxsw_hwmon_gearbox_init(mlxsw_hwmon);
  #line 648 
  if (err != 0) 
                #line 649 
                goto err_temp_gearbox_init;
  #line 651 
  mlxsw_hwmon->groups[0] = & mlxsw_hwmon->group;
  #line 652 
  mlxsw_hwmon->group.attrs = (struct attribute **)(& mlxsw_hwmon->attrs);
  #line 654 
  hwmon_dev = hwmon_device_register_with_groups(mlxsw_bus_info->dev,(char *)"mlxsw",(void *)mlxsw_hwmon,(struct attribute_group **)(& mlxsw_hwmon->groups));
  #line 657 
  if ((int)IS_ERR((void *)hwmon_dev) != 0) {
    #line 658 
    err = (int)PTR_ERR((void *)hwmon_dev);
    #line 659 
    goto err_hwmon_register;
  }
  #line 662 
  mlxsw_hwmon->hwmon_dev = hwmon_dev;
  #line 663 
  *p_hwmon = mlxsw_hwmon;
  #line 664 
  return 0;
  #line 666 
  err_hwmon_register: 
                      #line 666 
  ;
  #line 667 
  err_temp_gearbox_init: 
                         #line 667 
  ;
  #line 668 
  err_temp_module_init: 
                        #line 668 
  ;
  #line 669 
  err_fans_init: 
                 #line 669 
  ;
  #line 670 
  err_temp_init: 
                 #line 670 
  ;
  #line 671 
  kfree((void *)mlxsw_hwmon);
  #line 672 
  return err;
}

#line 675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_hwmon.c"
void mlxsw_hwmon_fini(struct mlxsw_hwmon *mlxsw_hwmon)
{
  #line 677 
  hwmon_device_unregister(mlxsw_hwmon->hwmon_dev);
  #line 678 
  kfree((void *)mlxsw_hwmon);
  #line 679 
  return;
}

#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
static long PTR_ERR(void *ptr)
{
  #line 205 
  return ldv_ptr_err(ptr);
}

#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
static bool IS_ERR(void *ptr)
{
  #line 212 
  return ldv_is_err(ptr);
}

#line 484  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_hwmon.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 487 
  return ldv_kzalloc(size,flags);
}

#line 4750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 4750 
void netdev_err(struct net_device *, char * , ...);
#line 8234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtmp_0 = {.id = (unsigned short)36874U, .len = (unsigned short)32U, .name = (char *)"mtmp"};
#line 8244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_sensor_index_item_0 = {.size = {.bits = (unsigned char)12U}, .name = (char *)"reg"};
#line 8244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_sensor_index_set_0(char *buf, u32 val)
{
  #line 8244 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_sensor_index_item_0,(unsigned short)0,val);
  #line 8245 
  return;
}

#line 8257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_temperature_item_0 = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtmp_temperature_get_0(char *buf)
{
  #line 8257 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtmp_temperature_item_0,
                         (unsigned short)0);
}

#line 8263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_mte_item_0 = {.offset = (unsigned short)8U, .shift = (unsigned char)31U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_mte_set_0(char *buf, u32 val)
{
  #line 8263 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_mte_item_0,(unsigned short)0,val);
  #line 8264 
  return;
}

#line 8269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_mtr_item_0 = {.offset = (unsigned short)8U, .shift = (unsigned char)30U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_mtr_set_0(char *buf, u32 val)
{
  #line 8269 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_mtr_item_0,(unsigned short)0,val);
  #line 8270 
  return;
}

#line 8276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_max_temperature_item_0 = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtmp_max_temperature_get_0(char *buf)
{
  #line 8276 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtmp_max_temperature_item_0,
                         (unsigned short)0);
}

#line 8293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_temperature_threshold_hi_item_0 = {.offset = (unsigned short)12U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_temperature_threshold_hi_set_0(char *buf, u32 val)
{
  #line 8293 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_temperature_threshold_hi_item_0,(unsigned short)0,val);
  #line 8294 
  return;
}

#line 8307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_sensor_name_item_0 = {.offset = (unsigned short)24U, .size = {.bytes = (unsigned short)8U}, .name = (char *)"reg"};
#line 8307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_sensor_name_memcpy_from_0(char *buf, char *dst)
{
  #line 8307 
  __mlxsw_item_memcpy_from(buf,dst,& mlxsw_reg_mtmp_sensor_name_item_0,(unsigned short)0);
  #line 8308 
  return;
}

#line 8309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_pack_0(char *payload, u16 sensor_index, bool max_temp_enable, bool max_temp_reset)
{
  #line 8313 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mtmp_0.len);
  #line 8314 
  mlxsw_reg_mtmp_sensor_index_set_0(payload,(unsigned int)sensor_index);
  #line 8315 
  mlxsw_reg_mtmp_mte_set_0(payload,(unsigned int)max_temp_enable);
  #line 8316 
  mlxsw_reg_mtmp_mtr_set_0(payload,(unsigned int)max_temp_reset);
  #line 8317 
  mlxsw_reg_mtmp_temperature_threshold_hi_set_0(payload,840U);
  #line 8318 
  return;
}

#line 8321  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_unpack_0(char *payload, int *p_temp, int *p_max_temp, char *sensor_name)
{
  #line 8324 
  s16 temp;
  #line 8326 
  if (p_temp != (int *)0) {
    #line 8328 
    s16 v_;
    #line 8328 
    int tmp_0;
    #line 8327 
    temp = (short)mlxsw_reg_mtmp_temperature_get_0(payload);
    #line 8328 
    v_ = temp;
    #line 8328 
    if ((int)v_ >= 0) 
                      #line 8328 
                      tmp_0 = (int)v_ * 125; else 
                                                  #line 8328 
                                                  tmp_0 = (int)((short)(((unsigned long)v_ + 65536UL) * (unsigned long)125U));
    #line 8328 
    *p_temp = tmp_0;
  }
  #line 8330 
  if (p_max_temp != (int *)0) {
    #line 8332 
    s16 v__0;
    #line 8332 
    int tmp_3;
    #line 8331 
    temp = (short)mlxsw_reg_mtmp_max_temperature_get_0(payload);
    #line 8332 
    v__0 = temp;
    #line 8332 
    if ((int)v__0 >= 0) 
                        #line 8332 
                        tmp_3 = (int)v__0 * 125; else 
                                                      #line 8332 
                                                      tmp_3 = (int)((short)(((unsigned long)v__0 + 65536UL) * (unsigned long)125U));
    #line 8332 
    *p_max_temp = tmp_3;
  }
  #line 8334 
  if (sensor_name != (char *)0) 
                                #line 8335 
                                mlxsw_reg_mtmp_sensor_name_memcpy_from_0(payload,sensor_name);
  #line 8336 
  return;
}

#line 8420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mcia = {.id = (unsigned short)36884U, .len = (unsigned short)64U, .name = (char *)"mcia"};
#line 8428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_l_item = {.shift = (unsigned char)31U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_l_set(char *buf, u32 val)
{
  #line 8428 
  __mlxsw_item_set32(buf,& mlxsw_reg_mcia_l_item,(unsigned short)0,val);
  #line 8429 
  return;
}

#line 8434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_module_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_module_set(char *buf, u32 val)
{
  #line 8434 
  __mlxsw_item_set32(buf,& mlxsw_reg_mcia_module_item,(unsigned short)0,val);
  #line 8435 
  return;
}

#line 8440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_status_item = {.size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mcia_status_get(char *buf)
{
  #line 8440 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mcia_status_item,(unsigned short)0);
}

#line 8446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_i2c_device_address_item = {.offset = (unsigned short)4U, .shift = (unsigned char)24U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_i2c_device_address_set(char *buf, u32 val)
{
  #line 8446 
  __mlxsw_item_set32(buf,& mlxsw_reg_mcia_i2c_device_address_item,(unsigned short)0,val);
  #line 8447 
  return;
}

#line 8452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_page_number_item = {.offset = (unsigned short)4U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_page_number_set(char *buf, u32 val)
{
  #line 8452 
  __mlxsw_item_set32(buf,& mlxsw_reg_mcia_page_number_item,(unsigned short)0,val);
  #line 8453 
  return;
}

#line 8458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_device_address_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8458  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_device_address_set(char *buf, u32 val)
{
  #line 8458 
  __mlxsw_item_set32(buf,& mlxsw_reg_mcia_device_address_item,(unsigned short)0,val);
  #line 8459 
  return;
}

#line 8464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_size_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_size_set(char *buf, u32 val)
{
  #line 8464 
  __mlxsw_item_set32(buf,& mlxsw_reg_mcia_size_item,(unsigned short)0,val);
  #line 8465 
  return;
}

#line 8501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mcia_eeprom_item = {.offset = (unsigned short)16U, .size = {.bytes = (unsigned short)48U}, .name = (char *)"reg"};
#line 8501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_eeprom_memcpy_from(char *buf, char *dst)
{
  #line 8501 
  __mlxsw_item_memcpy_from(buf,dst,& mlxsw_reg_mcia_eeprom_item,(unsigned short)0);
  #line 8502 
  return;
}

#line 8511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mcia_pack(char *payload, u8 module, u8 lock, u8 page_number, u16 device_addr, u8 size, u8 i2c_device_addr)
{
  #line 8515 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mcia.len);
  #line 8516 
  mlxsw_reg_mcia_module_set(payload,(unsigned int)module);
  #line 8517 
  mlxsw_reg_mcia_l_set(payload,(unsigned int)lock);
  #line 8518 
  mlxsw_reg_mcia_page_number_set(payload,(unsigned int)page_number);
  #line 8519 
  mlxsw_reg_mcia_device_address_set(payload,(unsigned int)device_addr);
  #line 8520 
  mlxsw_reg_mcia_size_set(payload,(unsigned int)size);
  #line 8521 
  mlxsw_reg_mcia_i2c_device_address_set(payload,(unsigned int)i2c_device_addr);
  #line 8522 
  return;
}

#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.h"
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
int mlxsw_env_get_module_info(struct mlxsw_core *mlxsw_core, int module, struct ethtool_modinfo *modinfo);
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.h"
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
int mlxsw_env_get_module_eeprom(struct net_device *netdev, struct mlxsw_core *mlxsw_core, int module, struct ethtool_eeprom *ee, u8 *data);
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
static int mlxsw_env_validate_cable_ident(struct mlxsw_core *core, int id, bool *qsfp)
{
  #line 16 
  char eeprom_tmp[48U];
  #line 17 
  char mcia_pl[64U];
  #line 18 
  u8 ident;
  #line 19 
  int err;
  #line 21 
  mlxsw_reg_mcia_pack((char *)(& mcia_pl),(unsigned char)((int)((unsigned char)id)),(unsigned char)0,(unsigned char)160,(unsigned short)0,(unsigned char)1,(unsigned char)80);
  #line 23 
  err = mlxsw_reg_query(core,& mlxsw_reg_mcia,(char *)(& mcia_pl));
  #line 24 
  if (err != 0) 
                #line 25 
                return err;
  #line 26 
  mlxsw_reg_mcia_eeprom_memcpy_from((char *)(& mcia_pl),(char *)(& eeprom_tmp));
  #line 27 
  ident = (unsigned char)eeprom_tmp[0];
  #line 28 
  switch ((int)ident) {
    #line 29 
    case 3: 
            #line 29 
    ;
    #line 30 
    *qsfp = (_Bool)0;
    #line 31 
    break;
    #line 32 
    case 12: 
             #line 32 
    ;
    #line 33 
    case 13: 
             #line 33 
    ;
    #line 34 
    case 17: 
             #line 34 
    ;
    #line 35 
    case 24: 
             #line 35 
    ;
    #line 36 
    *qsfp = (_Bool)1;
    #line 37 
    break;
    #line 38 
    default: 
             #line 38 
    ;
    #line 39 
    return -22;
  }
  #line 42 
  return 0;
}

#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
static int mlxsw_env_query_module_eeprom(struct mlxsw_core *mlxsw_core, int module, u16 offset, u16 size, void *data, unsigned int *p_read_size)
{
  #line 57 
  unsigned short __UNIQUE_ID___x449;
  #line 57 
  int tmp;
  #line 50 
  char eeprom_tmp[48U];
  #line 51 
  char mcia_pl[64U];
  #line 52 
  u16 i2c_addr;
  #line 54 
  int status;
  #line 55 
  int err;
  #line 53 
  u8 page = (unsigned char)0U;
  {
    #line 57 
    __UNIQUE_ID___x449 = size;
    #line 57 
    unsigned short __UNIQUE_ID___y450 = (unsigned short)48U;
    #line 57 
    if ((int)__UNIQUE_ID___x449 < (int)__UNIQUE_ID___y450) 
                                                           #line 57 
                                                           tmp = (int)__UNIQUE_ID___x449; else 
                                                                    #line 57 
                                                                    tmp = (int)__UNIQUE_ID___y450;
    }
  #line 57 
  size = (unsigned short)tmp;
  #line 59 
  if ((unsigned int)offset <= 255U && (int)offset + (int)size > 256) 
    #line 62 
    size = (unsigned short)(256U - (unsigned int)offset);
  #line 64 
  i2c_addr = (unsigned short)80U;
  #line 65 
  if ((unsigned int)offset > 255U) {
    #line 66 
    page = (unsigned char)((unsigned int)((unsigned char)(((int)offset + -256) / 128)) + 1U);
    #line 67 
    offset = (unsigned short)((unsigned int)offset - (unsigned int)((unsigned short)page) * 128U);
    #line 76 
    if ((int)offset + (int)size > 256) 
                                       #line 77 
                                       size = (unsigned short)(256U - (unsigned int)offset);
  }
  #line 80 
  mlxsw_reg_mcia_pack((char *)(& mcia_pl),(unsigned char)((int)((unsigned char)module)),(unsigned char)0,(unsigned char)((int)page),(unsigned short)((int)offset),(unsigned char)((int)((unsigned char)size)),(unsigned char)((int)((unsigned char)i2c_addr)));
  #line 82 
  err = mlxsw_reg_query(mlxsw_core,& mlxsw_reg_mcia,(char *)(& mcia_pl));
  #line 83 
  if (err != 0) 
                #line 84 
                return err;
  #line 86 
  status = (int)mlxsw_reg_mcia_status_get((char *)(& mcia_pl));
  #line 87 
  if (status != 0) 
                   #line 88 
                   return -5;
  #line 90 
  mlxsw_reg_mcia_eeprom_memcpy_from((char *)(& mcia_pl),(char *)(& eeprom_tmp));
  #line 91 
  memcpy(data,(void *)(& eeprom_tmp),(unsigned long)size);
  #line 92 
  *p_read_size = (unsigned int)size;
  #line 94 
  return 0;
}

#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
int mlxsw_env_module_temp_thresholds_get(struct mlxsw_core *core, int module, int off, int *temp)
{
  #line 100 
  char eeprom_tmp[48U];
  #line 104 
  union __anonunion_temp_thresh_1424 temp_thresh;
  #line 106 
  char mtmp_pl[32U];
  #line 107 
  unsigned int module_temp;
  #line 108 
  bool qsfp;
  #line 109 
  int err;
  #line 105 
  char mcia_pl[64U] = {(char)0};
  #line 111 
  mlxsw_reg_mtmp_pack_0((char *)(& mtmp_pl),(unsigned short)((int)((unsigned int)((unsigned short)module) + 64U)),(_Bool)0,(_Bool)0);
  #line 113 
  err = mlxsw_reg_query(core,& mlxsw_reg_mtmp_0,(char *)(& mtmp_pl));
  #line 114 
  if (err != 0) 
                #line 115 
                return err;
  #line 116 
  mlxsw_reg_mtmp_unpack_0((char *)(& mtmp_pl),(int *)(& module_temp),(int *)0,(char *)0);
  #line 117 
  if (module_temp == 0U) {
    #line 118 
    *temp = 0;
    #line 119 
    return 0;
  }
  #line 132 
  err = mlxsw_env_validate_cable_ident(core,module,& qsfp);
  #line 133 
  if (err != 0) 
                #line 134 
                return err;
  #line 136 
  if ((int)qsfp != 0) 
                      #line 137 
                      mlxsw_reg_mcia_pack((char *)(& mcia_pl),(unsigned char)((int)((unsigned char)module)),(unsigned char)0,(unsigned char)3,(unsigned short)((int)((unsigned int)((unsigned short)off) + 128U)),(unsigned char)2,(unsigned char)80); else 
                                                                    #line 143 
                                                                    mlxsw_reg_mcia_pack((char *)(& mcia_pl),(unsigned char)((int)((unsigned char)module)),(unsigned char)0,(unsigned char)0,(unsigned short)((int)((unsigned short)off)),(unsigned char)2,(unsigned char)81);
  #line 148 
  err = mlxsw_reg_query(core,& mlxsw_reg_mcia,(char *)(& mcia_pl));
  #line 149 
  if (err != 0) 
                #line 150 
                return err;
  #line 152 
  mlxsw_reg_mcia_eeprom_memcpy_from((char *)(& mcia_pl),(char *)(& eeprom_tmp));
  #line 153 
  memcpy((void *)(& temp_thresh.buf),(void *)(& eeprom_tmp),2UL);
  #line 154 
  *temp = (int)temp_thresh.temp * 1000;
  #line 156 
  return 0;
}

#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
int mlxsw_env_get_module_info(struct mlxsw_core *mlxsw_core, int module, struct ethtool_modinfo *modinfo)
{
  #line 162 
  u8 module_info[2U];
  #line 164 
  u8 module_rev_id;
  #line 164 
  u8 module_id;
  #line 164 
  u8 diag_mon;
  #line 165 
  unsigned int read_size;
  #line 166 
  int err;
  #line 163 
  u16 offset = (unsigned short)2U;
  #line 168 
  err = mlxsw_env_query_module_eeprom(mlxsw_core,module,(unsigned short)0,(unsigned short)((int)offset),(void *)(& module_info),& read_size);
  #line 170 
  if (err != 0) 
                #line 171 
                return err;
  #line 173 
  if ((unsigned int)offset > read_size) 
                                        #line 174 
                                        return -5;
  #line 176 
  module_rev_id = module_info[1];
  #line 177 
  module_id = module_info[0];
  #line 179 
  switch ((int)module_id) {
    #line 180 
    case 12: 
             #line 180 
    ;
    #line 181 
    modinfo->type = 4U;
    #line 182 
    modinfo->eeprom_len = 640U;
    #line 183 
    break;
    #line 184 
    case 13: 
             #line 184 
    ;
    #line 185 
    case 17: 
             #line 185 
    ;
    #line 186 
    if ((unsigned int)module_id == 17U || (unsigned int)module_rev_id > 2U) {
      #line 189 
      modinfo->type = 3U;
      #line 190 
      modinfo->eeprom_len = 640U;
    }
    else {
      #line 192 
      modinfo->type = 4U;
      #line 193 
      modinfo->eeprom_len = 640U;
    }
    #line 195 
    break;
    #line 196 
    case 3: 
            #line 196 
    ;
    #line 198 
    err = mlxsw_env_query_module_eeprom(mlxsw_core,module,(unsigned short)92,(unsigned short)1,(void *)(& diag_mon),& read_size);
    #line 201 
    if (err != 0) 
                  #line 202 
                  return err;
    #line 204 
    if (read_size == 0U) 
                         #line 205 
                         return -5;
    #line 207 
    modinfo->type = 2U;
    #line 208 
    if ((unsigned int)diag_mon != 0U) 
                                      #line 209 
                                      modinfo->eeprom_len = 512U; else 
                                                                    #line 211 
                                                                    modinfo->eeprom_len = 256U;
    #line 212 
    break;
    #line 213 
    default: 
             #line 213 
    ;
    #line 214 
    return -22;
  }
  #line 217 
  return 0;
}

#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_env.c"
int mlxsw_env_get_module_eeprom(struct net_device *netdev, struct mlxsw_core *mlxsw_core, int module, struct ethtool_eeprom *ee, u8 *data)
{
  #line 226 
  unsigned int read_size;
  #line 228 
  int err;
  #line 225 
  int offset = (int)ee->offset;
  #line 227 
  int i = 0;
  #line 230 
  if (ee->len == 0U) 
                     #line 231 
                     return -22;
  #line 233 
  memset((void *)data,0,(unsigned long)ee->len);
  #line 235 
  while (ee->len > (unsigned int)i) {
    #line 236 
    err = mlxsw_env_query_module_eeprom(mlxsw_core,module,(unsigned short)((int)((unsigned short)offset)),(unsigned short)((int)((unsigned short)ee->len) - (int)((unsigned short)i)),(void *)(data + (unsigned long)i),& read_size);
    #line 239 
    if (err != 0) {
      #line 240 
      netdev_err(netdev,(char *)"Eeprom query failed\n");
      #line 241 
      return err;
    }
    #line 244 
    i = (int)((unsigned int)i + read_size);
    #line 245 
    offset = (int)((unsigned int)offset + read_size);
  }
  #line 248 
  return 0;
}

/* compiler builtin: 
   unsigned long __builtin_bswap64(unsigned long);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
__inline static bool static_key_false(struct static_key *key)
{
  #line 200 
  return arch_static_branch(key,(_Bool)0);
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 64 
void __dynamic_dev_dbg(struct _ddebug *, struct device *, char * , ...);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 33 
bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
#line 36 
#line 36 
bool __list_del_entry_valid(struct list_head *);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_1437 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_1439 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del(struct list_head *entry)
{
  #line 139 
  __list_del_entry(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-defs.h"
#line 309 
void __bad_size_call_parameter(void);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 49 
#line 703  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static int cif_strcmp(char *cs, char *ct);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg.h"
#line 17 
void __xadd_wrong_size(void);
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_1493 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static bool arch_atomic_dec_and_test(atomic_t *v)
{
  #line 125 
  bool c;
  #line 126 
  ldv_inline_asm();
  #line 125 
  return c;
}

#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic64_64.h"
__inline static void arch_atomic64_set(atomic64_t *v, s64 i)
{
  #line 35 
  union __anonunion___u_1497 __u = {.__val = i};
  #line 34 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),8);
  #line 34 
  s64 tmp = __u.__val;
  #line 36 
  return;
}

#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic64_64.h"
__inline static s64 arch_atomic64_add_return(s64 i, atomic64_t *v)
{
  #line 160 
  s64 __ret;
  #line 160 
  __ret = i;
  #line 160 
  switch (8UL) {
    #line 160 
    case (unsigned long)1: 
                           #line 160 
    ;
    #line 161 
    ldv_inline_asm();
    #line 160 
    break;
    #line 160 
    case (unsigned long)2: 
                           #line 160 
    ;
    #line 161 
    ldv_inline_asm();
    #line 160 
    break;
    #line 160 
    case (unsigned long)4: 
                           #line 160 
    ;
    #line 161 
    ldv_inline_asm();
    #line 160 
    break;
    #line 160 
    case (unsigned long)8: 
                           #line 160 
    ;
    #line 161 
    ldv_inline_asm();
    #line 160 
    break;
    #line 160 
    default: 
             #line 160 
    ;
    #line 160 
    __xadd_wrong_size();
  }
  #line 160 
  ;
  #line 160 
  return __ret + i;
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static bool atomic_dec_and_test(atomic_t *v)
{
  #line 747 
  kasan_check_read((void *)v,4U);
  #line 748 
  return arch_atomic_dec_and_test(v);
}

#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic64_set(atomic64_t *v, s64 i)
{
  #line 854 
  kasan_check_read((void *)v,8U);
  #line 855 
  arch_atomic64_set(v,i);
  #line 856 
  return;
}

#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static s64 atomic64_add_return(s64 i, atomic64_t *v)
{
  #line 881 
  kasan_check_read((void *)v,8U);
  #line 882 
  return arch_atomic64_add_return(i,v);
}

#line 1392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
__inline static s64 atomic64_inc_return(atomic64_t *v)
{
  #line 1394 
  return atomic64_add_return(1LL,v);
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
#line 39 
extern unsigned int nr_cpu_ids;
#line 91 
#line 91 
extern struct cpumask __cpu_online_mask;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static void cpu_max_bits_warn(unsigned int cpu, unsigned int bits)
{
  #line 137 
  int __ret_warn_on = cpu >= bits;
  #line 137 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 138 
    ldv_inline_asm();
    #line 139 
    ldv_inline_asm();
  }
  #line 137 
  long tmp = (long)(__ret_warn_on != 0);
  #line 139 
  return;
}

#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static unsigned int cpumask_check(unsigned int cpu)
{
  #line 144 
  cpu_max_bits_warn(cpu,nr_cpu_ids);
  #line 145 
  return cpu;
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
__inline static int cpumask_test_cpu(int cpu, struct cpumask *cpumask)
{
  #line 360 
  ;
  #line 360 
  return (int)test_bit((long)cpumask_check((unsigned int)cpu),
                 (unsigned long *)(& cpumask->bits));
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  #line 79 
  int tmp;
  #line 79 
  if (0 != 0 && (val == 1 || val == -1)) 
                                         #line 79 
                                         tmp = val; else 
                                                         #line 79 
                                                         tmp = 0;
  #line 79 
  int pao_ID__ = tmp;
  #line 79 
  switch (4UL) {
    #line 79 
    case (unsigned long)1: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)2: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)4: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)8: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 79 
    __bad_percpu_size();
  }
  #line 82 
  return;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  #line 84 
  int tmp;
  #line 84 
  if (0 != 0 && (val == -1 || val == 1)) 
                                         #line 84 
                                         tmp = - val; else 
                                                           #line 84 
                                                           tmp = 0;
  #line 84 
  int pao_ID__ = tmp;
  #line 84 
  switch (4UL) {
    #line 84 
    case (unsigned long)1: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)2: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)4: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)8: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    default: 
             #line 84 
    ;
    #line 84 
    __bad_percpu_size();
  }
  #line 87 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 348 
#line 348 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);
#line 352 
#line 352 
void lock_release(struct lockdep_map *, unsigned long);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 28 
#line 28 
void _raw_spin_lock_bh(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 40 
#line 40 
void _raw_spin_unlock_bh(raw_spinlock_t *);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 685  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_lock_mlxsw_core_driver_list_lock(spinlock_t *lock);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 667  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_lock_bh_trans_list_lock_of_NOT_ARG_SIGN(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 694  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_unlock_mlxsw_core_driver_list_lock(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 676  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_unlock_bh_trans_list_lock_of_NOT_ARG_SIGN(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 26 
int ldv_strcmp(char *cs, char *ct);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 25 
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
#line 40 
void synchronize_rcu(void);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  #line 59 
  __preempt_count_add(1);
  #line 60 
  ldv_inline_asm();
  #line 62 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  #line 66 
  ldv_inline_asm();
  #line 64 
  __preempt_count_sub(1);
  #line 66 
  return;
}

#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 36 
void kfree_call_rcu(struct callback_head *, void (*)(struct callback_head *));
#line 56 
#line 56 
bool rcu_is_watching(void);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  #line 208 
  __here_0: 
            #line 208 
  ;
  #line 208 
  ;
  #line 208 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 210 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  #line 213 
  __here_0: 
            #line 213 
  ;
  #line 213 
  ;
  #line 213 
  lock_release(map,(unsigned long)((void *)0));
  #line 215 
  return;
}

#line 216 
#line 216 
extern struct lockdep_map rcu_lock_map;
#line 220 
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 223 
#line 223 
int rcu_read_lock_sched_held(void);
#line 224 
#line 224 
int rcu_read_lock_any_held(void);
#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  #line 615 
  __rcu_read_lock();
  #line 617 
  rcu_lock_acquire(& rcu_lock_map);
  {
    #line 618 
    bool __warned;
    #line 618 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 618 
      if (! __warned) {
        #line 618 
        if (! rcu_is_watching()) {
          #line 618 
          __warned = (_Bool)1;
          #line 618 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",618,(char *)"rcu_read_lock() used illegally while idle");
        }
      }
  }
  #line 621 
  return;
}

#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    #line 667 
    bool __warned;
    #line 667 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 667 
      if (! __warned) {
        #line 667 
        if (! rcu_is_watching()) {
          #line 667 
          __warned = (_Bool)1;
          #line 667 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",667,(char *)"rcu_read_unlock() used illegally while idle");
        }
      }
  }
  #line 670 
  __rcu_read_unlock();
  #line 671 
  rcu_lock_release(& rcu_lock_map);
  #line 672 
  return;
}

#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void __init_completion(struct completion *x)
{
  #line 87 
  x->done = 0U;
  {
    #line 88 
    struct lock_class_key __key;
    #line 88 
    __init_waitqueue_head(& x->wait,(char *)"&x->wait",& __key);
  }
  #line 90 
  return;
}

#line 103 
#line 103 
void wait_for_completion(struct completion *);
#line 118 
#line 118 
void complete(struct completion *);
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 302 
unsigned long __msecs_to_jiffies(unsigned int);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int m)
{
  #line 311 
  return (unsigned long)(((long)m + 3L) / 4L);
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int m)
{
  #line 366 
  if (0 != 0) {
    #line 367 
    if ((int)m < 0) 
                    #line 368 
                    return 4611686018427387902UL;
    #line 369 
    return _msecs_to_jiffies(m);
  }
  else {
    #line 371 
    return __msecs_to_jiffies(m);
  }
}

#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 407 
#line 407 
struct workqueue_struct *alloc_workqueue(char *, unsigned int, int , ...);
#line 436 
#line 436 
void destroy_workqueue(struct workqueue_struct *);
#line 454 
#line 454 
void flush_workqueue(struct workqueue_struct *);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 496 
#line 305  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work);
#line 511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 313  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void __list_add_rcu(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 70 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 71 
                                         return;
  #line 73 
  new->next = next;
  #line 74 
  new->prev = prev;
  {
    #line 75 
    uintptr_t _r_a_p__v = (unsigned long)new;
    #line 77 
    ldv_inline_asm();
    {
      #line 76 
      union __anonunion___u_1699 __u = {.__val = (struct list_head *)_r_a_p__v};
      #line 75 
      __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
      #line 75 
      struct list_head *tmp_4 = __u.__val;
    }
  }
  #line 76 
  next->prev = new;
  #line 77 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_add_rcu(struct list_head *new, struct list_head *head)
{
  #line 97 
  __list_add_rcu(new,head,head->next);
  #line 98 
  return;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_add_tail_rcu(struct list_head *new, struct list_head *head)
{
  #line 119 
  __list_add_rcu(new,head->prev,head);
  #line 120 
  return;
}

#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
__inline static void list_del_rcu(struct list_head *entry)
{
  #line 148 
  __list_del_entry(entry);
  #line 149 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 150 
  return;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
#line 76 
int ___ratelimit(struct ratelimit_state *, char *);
#line 1714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 468  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 482  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 503  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags);
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
#line 38 
void get_random_bytes(void *, int);
#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1023 
void consume_skb(struct sk_buff *);
#line 1107 
#line 1107 
struct sk_buff *skb_copy(struct sk_buff *, gfp_t);
#line 2245 
#line 2245 
void *skb_push(struct sk_buff *, unsigned int);
#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  #line 2340 
  skb->data += (unsigned long)len;
  #line 2341 
  skb->tail += (unsigned int)len;
  #line 2342 
  return;
}

#line 2511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reset_mac_header(struct sk_buff *skb)
{
  #line 2513 
  skb->mac_header = (unsigned short)(skb->data - skb->head);
  #line 2514 
  return;
}

#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  #line 2781 
  return __netdev_alloc_skb(dev,length,2592U);
}

#line 796  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
__inline static void *devlink_priv(struct devlink *devlink)
{
  #line 798 
  if ((long)(devlink == (struct devlink *)0) != 0L) {
    #line 799 
    ldv_inline_asm();
    #line 800 
    ldv_inline_asm();
    #line 801 
    ldv_inline_asm();
    #line 798 
    ;
  }
  #line 799 
  return (void *)(& devlink->priv);
}

#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/devlink.h"
__inline static struct devlink *priv_to_devlink(void *priv)
{
  #line 805 
  void *__mptr;
  #line 804 
  if ((long)(priv == (void *)0) != 0L) {
    #line 805 
    ldv_inline_asm();
    #line 806 
    ldv_inline_asm();
    #line 807 
    ldv_inline_asm();
    #line 804 
    ;
  }
  #line 805 
  __mptr = priv;
  #line 805 
  return ((struct devlink *)(__mptr + 18446744073709551072U));
}

#line 829 
#line 829 
struct devlink *devlink_alloc(struct devlink_ops *, size_t);
#line 830 
#line 830 
int devlink_register(struct devlink *, struct device *);
#line 831 
#line 831 
void devlink_unregister(struct devlink *);
#line 832 
#line 832 
void devlink_reload_enable(struct devlink *);
#line 833 
#line 833 
void devlink_reload_disable(struct devlink *);
#line 834 
#line 834 
void devlink_free(struct devlink *);
#line 835 
#line 835 
int devlink_port_register(struct devlink *, struct devlink_port *, unsigned int);
#line 838 
#line 838 
void devlink_port_unregister(struct devlink_port *);
#line 839 
#line 839 
void devlink_port_type_eth_set(struct devlink_port *, struct net_device *);
#line 841 
#line 841 
void devlink_port_type_ib_set(struct devlink_port *, struct ib_device *);
#line 843 
#line 843 
void devlink_port_type_clear(struct devlink_port *);
#line 844 
#line 844 
void devlink_port_attrs_set(struct devlink_port *, enum devlink_port_flavour, u32, bool, u32, unsigned char *, unsigned char);
#line 892 
#line 892 
void devlink_resources_unregister(struct devlink *, struct devlink_resource *);
#line 912 
#line 912 
void devlink_params_publish(struct devlink *);
#line 913 
#line 913 
void devlink_params_unpublish(struct devlink *);
#line 947 
#line 947 
int devlink_info_driver_name_put(struct devlink_info_req *, char *);
#line 949 
#line 949 
int devlink_info_version_fixed_put(struct devlink_info_req *, char *, char *);
#line 955 
#line 955 
int devlink_info_version_running_put(struct devlink_info_req *, char *, char *);
#line 1004 
#line 1004 
bool devlink_is_reload_failed(struct devlink *);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
#line 17 
extern struct tracepoint __tracepoint_devlink_hwmsg;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
__inline static void trace_devlink_hwmsg(struct devlink *devlink, bool incoming, unsigned long type, u8 *buf, size_t len)
{
  #line 17 
  int pscr_ret___0;
  #line 17 
  if ((int)static_key_false(& __tracepoint_devlink_hwmsg.key) != 0) {
    #line 17 
    int pscr_ret__;
    #line 17 
    struct tracepoint_func *________p1;
    #line 17 
    struct tracepoint_func *it_func_ptr;
    #line 17 
    void *it_func;
    #line 17 
    void *__data;
    #line 17 
    int __idx = 0;
    {
      #line 17 
      void *__vpp_verify = (void *)0;
      #line 17 
      void *tmp = __vpp_verify;
    }
    #line 17 
    switch (4UL) {
      #line 17 
      int pfo_ret___0;
      #line 17 
      int pfo_ret___1;
      #line 17 
      int pfo_ret___2;
      #line 17 
      int pfo_ret__;
      #line 17 
      case (unsigned long)1: 
                             #line 17 
      ;
      #line 17 
      switch (4UL) {
        #line 17 
        case (unsigned long)1: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)2: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)4: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)8: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        default: 
                 #line 17 
        ;
        #line 17 
        __bad_percpu_size();
      }
      #line 17 
      pscr_ret__ = pfo_ret__;
      #line 17 
      break;
      #line 17 
      case (unsigned long)2: 
                             #line 17 
      ;
      #line 17 
      switch (4UL) {
        #line 17 
        case (unsigned long)1: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)2: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)4: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)8: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        default: 
                 #line 17 
        ;
        #line 17 
        __bad_percpu_size();
      }
      #line 17 
      pscr_ret__ = pfo_ret___0;
      #line 17 
      break;
      #line 17 
      case (unsigned long)4: 
                             #line 17 
      ;
      #line 17 
      switch (4UL) {
        #line 17 
        case (unsigned long)1: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)2: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)4: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)8: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        default: 
                 #line 17 
        ;
        #line 17 
        __bad_percpu_size();
      }
      #line 17 
      pscr_ret__ = pfo_ret___1;
      #line 17 
      break;
      #line 17 
      case (unsigned long)8: 
                             #line 17 
      ;
      #line 17 
      switch (4UL) {
        #line 17 
        case (unsigned long)1: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)2: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)4: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        case (unsigned long)8: 
                               #line 17 
        ;
        #line 18 
        ldv_inline_asm();
        #line 17 
        break;
        #line 17 
        default: 
                 #line 17 
        ;
        #line 17 
        __bad_percpu_size();
      }
      #line 17 
      pscr_ret__ = pfo_ret___2;
      #line 17 
      break;
      #line 17 
      default: 
               #line 17 
      ;
      #line 17 
      __bad_size_call_parameter();
      #line 17 
      break;
    }
    #line 17 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 17 
                                                               return;
    {
      #line 17 
      int __ret_warn_on = 0;
      #line 17 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 18 
        ldv_inline_asm();
        #line 19 
        ldv_inline_asm();
      }
      #line 17 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 17 
    __preempt_count_add(1);
    #line 18 
    ldv_inline_asm();
    {
      #line 18 
      union __anonunion___u_2122 __u;
      #line 17 
      __read_once_size((void *)(& __tracepoint_devlink_hwmsg.funcs),(void *)(& __u.__c),8);
      #line 17 
      ________p1 = (__u.__val);
      }
    #line 17 
    it_func_ptr = ________p1;
    #line 17 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 17 
      while (1) {
        #line 17 
        it_func = it_func_ptr->func;
        #line 17 
        __data = it_func_ptr->data;
        #line 17 
        (*((void (*)(void *, struct devlink *, bool , unsigned long , u8 *, size_t ))it_func))(__data,devlink,(_Bool)((bool)((int)incoming) != 0),type,buf,len);
        #line 17 
        it_func_ptr ++;
        #line 18 
        ;
        #line 18 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 17 
                                                break;
      }
    #line 19 
    ldv_inline_asm();
    #line 17 
    __preempt_count_sub(1);
  }
  {
    #line 17 
    void *__vpp_verify_0 = (void *)0;
    #line 17 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 17 
  switch (4UL) {
    #line 17 
    int pfo_ret___5;
    #line 17 
    int pfo_ret___6;
    #line 17 
    int pfo_ret___3;
    #line 17 
    int pfo_ret___4;
    #line 17 
    case (unsigned long)1: 
                           #line 17 
    ;
    #line 17 
    switch (4UL) {
      #line 17 
      case (unsigned long)1: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)2: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)4: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)8: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      default: 
               #line 17 
      ;
      #line 17 
      __bad_percpu_size();
    }
    #line 17 
    pscr_ret___0 = pfo_ret___3;
    #line 17 
    break;
    #line 17 
    case (unsigned long)2: 
                           #line 17 
    ;
    #line 17 
    switch (4UL) {
      #line 17 
      case (unsigned long)1: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)2: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)4: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)8: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      default: 
               #line 17 
      ;
      #line 17 
      __bad_percpu_size();
    }
    #line 17 
    pscr_ret___0 = pfo_ret___4;
    #line 17 
    break;
    #line 17 
    case (unsigned long)4: 
                           #line 17 
    ;
    #line 17 
    switch (4UL) {
      #line 17 
      case (unsigned long)1: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)2: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)4: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)8: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      default: 
               #line 17 
      ;
      #line 17 
      __bad_percpu_size();
    }
    #line 17 
    pscr_ret___0 = pfo_ret___5;
    #line 17 
    break;
    #line 17 
    case (unsigned long)8: 
                           #line 17 
    ;
    #line 17 
    switch (4UL) {
      #line 17 
      case (unsigned long)1: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)2: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)4: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      case (unsigned long)8: 
                             #line 17 
      ;
      #line 18 
      ldv_inline_asm();
      #line 17 
      break;
      #line 17 
      default: 
               #line 17 
      ;
      #line 17 
      __bad_percpu_size();
    }
    #line 17 
    pscr_ret___0 = pfo_ret___6;
    #line 17 
    break;
    #line 17 
    default: 
             #line 17 
    ;
    #line 17 
    __bad_size_call_parameter();
    #line 17 
    break;
  }
  #line 17 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 17 
    __rcu_read_lock();
    {
      #line 18 
      union __anonunion___u_2124 __u_0;
      #line 17 
      __read_once_size((void *)(& __tracepoint_devlink_hwmsg.funcs),(void *)(& __u_0.__c),8);
      #line 17 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 17 
        bool __warned;
        #line 17 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 17 
          if (! __warned) {
            #line 17 
            if (rcu_read_lock_sched_held() == 0) {
              #line 17 
              __warned = (_Bool)1;
              #line 17 
              lockdep_rcu_suspicious((char *)"./include/trace/events/devlink.h",17,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 17 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 17 
    __rcu_read_unlock();
  }
  #line 19 
  return;
}

#line 52 
#line 52 
extern struct tracepoint __tracepoint_devlink_hwerr;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/trace/events/devlink.h"
__inline static void trace_devlink_hwerr(struct devlink *devlink, int err, char *msg)
{
  #line 52 
  int pscr_ret___0;
  #line 52 
  if ((int)static_key_false(& __tracepoint_devlink_hwerr.key) != 0) {
    #line 52 
    int pscr_ret__;
    #line 52 
    struct tracepoint_func *________p1;
    #line 52 
    struct tracepoint_func *it_func_ptr;
    #line 52 
    void *it_func;
    #line 52 
    void *__data;
    #line 52 
    int __idx = 0;
    {
      #line 52 
      void *__vpp_verify = (void *)0;
      #line 52 
      void *tmp = __vpp_verify;
    }
    #line 52 
    switch (4UL) {
      #line 52 
      int pfo_ret___1;
      #line 52 
      int pfo_ret___2;
      #line 52 
      int pfo_ret__;
      #line 52 
      int pfo_ret___0;
      #line 52 
      case (unsigned long)1: 
                             #line 52 
      ;
      #line 52 
      switch (4UL) {
        #line 52 
        case (unsigned long)1: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)2: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)4: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)8: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        default: 
                 #line 52 
        ;
        #line 52 
        __bad_percpu_size();
      }
      #line 52 
      pscr_ret__ = pfo_ret__;
      #line 52 
      break;
      #line 52 
      case (unsigned long)2: 
                             #line 52 
      ;
      #line 52 
      switch (4UL) {
        #line 52 
        case (unsigned long)1: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)2: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)4: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)8: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        default: 
                 #line 52 
        ;
        #line 52 
        __bad_percpu_size();
      }
      #line 52 
      pscr_ret__ = pfo_ret___0;
      #line 52 
      break;
      #line 52 
      case (unsigned long)4: 
                             #line 52 
      ;
      #line 52 
      switch (4UL) {
        #line 52 
        case (unsigned long)1: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)2: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)4: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)8: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        default: 
                 #line 52 
        ;
        #line 52 
        __bad_percpu_size();
      }
      #line 52 
      pscr_ret__ = pfo_ret___1;
      #line 52 
      break;
      #line 52 
      case (unsigned long)8: 
                             #line 52 
      ;
      #line 52 
      switch (4UL) {
        #line 52 
        case (unsigned long)1: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)2: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)4: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        case (unsigned long)8: 
                               #line 52 
        ;
        #line 53 
        ldv_inline_asm();
        #line 52 
        break;
        #line 52 
        default: 
                 #line 52 
        ;
        #line 52 
        __bad_percpu_size();
      }
      #line 52 
      pscr_ret__ = pfo_ret___2;
      #line 52 
      break;
      #line 52 
      default: 
               #line 52 
      ;
      #line 52 
      __bad_size_call_parameter();
      #line 52 
      break;
    }
    #line 52 
    if (cpumask_test_cpu(pscr_ret__,& __cpu_online_mask) == 0) 
                                                               #line 52 
                                                               return;
    {
      #line 52 
      int __ret_warn_on = 0;
      #line 52 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 53 
        ldv_inline_asm();
        #line 54 
        ldv_inline_asm();
      }
      #line 52 
      long tmp_5 = (long)(__ret_warn_on != 0);
    }
    #line 52 
    __preempt_count_add(1);
    #line 53 
    ldv_inline_asm();
    {
      #line 53 
      union __anonunion___u_2126 __u;
      #line 52 
      __read_once_size((void *)(& __tracepoint_devlink_hwerr.funcs),(void *)(& __u.__c),8);
      #line 52 
      ________p1 = (__u.__val);
      }
    #line 52 
    it_func_ptr = ________p1;
    #line 52 
    if (it_func_ptr != (struct tracepoint_func *)0) 
      #line 52 
      while (1) {
        #line 52 
        it_func = it_func_ptr->func;
        #line 52 
        __data = it_func_ptr->data;
        #line 52 
        (*((void (*)(void *, struct devlink *, int , char *))it_func))(__data,devlink,err,msg);
        #line 52 
        it_func_ptr ++;
        #line 53 
        ;
        #line 53 
        if (! (it_func_ptr->func != (void *)0)) 
                                                #line 52 
                                                break;
      }
    #line 54 
    ldv_inline_asm();
    #line 52 
    __preempt_count_sub(1);
  }
  {
    #line 52 
    void *__vpp_verify_0 = (void *)0;
    #line 52 
    void *tmp_13 = __vpp_verify_0;
  }
  #line 52 
  switch (4UL) {
    #line 52 
    int pfo_ret___3;
    #line 52 
    int pfo_ret___4;
    #line 52 
    int pfo_ret___5;
    #line 52 
    int pfo_ret___6;
    #line 52 
    case (unsigned long)1: 
                           #line 52 
    ;
    #line 52 
    switch (4UL) {
      #line 52 
      case (unsigned long)1: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)2: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)4: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)8: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      default: 
               #line 52 
      ;
      #line 52 
      __bad_percpu_size();
    }
    #line 52 
    pscr_ret___0 = pfo_ret___3;
    #line 52 
    break;
    #line 52 
    case (unsigned long)2: 
                           #line 52 
    ;
    #line 52 
    switch (4UL) {
      #line 52 
      case (unsigned long)1: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)2: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)4: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)8: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      default: 
               #line 52 
      ;
      #line 52 
      __bad_percpu_size();
    }
    #line 52 
    pscr_ret___0 = pfo_ret___4;
    #line 52 
    break;
    #line 52 
    case (unsigned long)4: 
                           #line 52 
    ;
    #line 52 
    switch (4UL) {
      #line 52 
      case (unsigned long)1: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)2: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)4: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)8: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      default: 
               #line 52 
      ;
      #line 52 
      __bad_percpu_size();
    }
    #line 52 
    pscr_ret___0 = pfo_ret___5;
    #line 52 
    break;
    #line 52 
    case (unsigned long)8: 
                           #line 52 
    ;
    #line 52 
    switch (4UL) {
      #line 52 
      case (unsigned long)1: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)2: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)4: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      case (unsigned long)8: 
                             #line 52 
      ;
      #line 53 
      ldv_inline_asm();
      #line 52 
      break;
      #line 52 
      default: 
               #line 52 
      ;
      #line 52 
      __bad_percpu_size();
    }
    #line 52 
    pscr_ret___0 = pfo_ret___6;
    #line 52 
    break;
    #line 52 
    default: 
             #line 52 
    ;
    #line 52 
    __bad_size_call_parameter();
    #line 52 
    break;
  }
  #line 52 
  if (cpumask_test_cpu(pscr_ret___0,& __cpu_online_mask) != 0) {
    #line 52 
    __rcu_read_lock();
    {
      #line 53 
      union __anonunion___u_2128 __u_0;
      #line 52 
      __read_once_size((void *)(& __tracepoint_devlink_hwerr.funcs),(void *)(& __u_0.__c),8);
      #line 52 
      struct tracepoint_func *________p1_0 = (__u_0.__val);
      {
        #line 52 
        bool __warned;
        #line 52 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 52 
          if (! __warned) {
            #line 52 
            if (rcu_read_lock_sched_held() == 0) {
              #line 52 
              __warned = (_Bool)1;
              #line 52 
              lockdep_rcu_suspicious((char *)"./include/trace/events/devlink.h",52,(char *)"suspicious rcu_dereference_check() usage");
            }
          }
      }
      #line 52 
      struct tracepoint_func *tmp_11 = ________p1_0;
    }
    #line 52 
    __rcu_read_unlock();
  }
  #line 54 
  return;
}

#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static u64 __mlxsw_item_get64(char *buf, struct mlxsw_item *item, unsigned short index)
{
  #line 151 
  u64 tmp;
  #line 149 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),8UL);
  #line 150 
  __be64 *b = (__be64 *)buf;
  #line 153 
  tmp = (u64)__builtin_bswap64((unsigned long)*(b + (unsigned long)offset));
  #line 154 
  tmp >>= (int)item->shift;
  #line 155 
  tmp = (18446744073709551615ULL >> (64 - (int)item->size.bits)) & tmp;
  #line 156 
  if ((int)item->no_real_shift != 0) 
                                     #line 157 
                                     tmp <<= (int)item->shift;
  #line 158 
  return tmp;
}

#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static void __mlxsw_item_set64(char *buf, struct mlxsw_item *item, unsigned short index, u64 val)
{
  #line 167 
  u64 tmp;
  #line 164 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),8UL);
  #line 165 
  __be64 *b = (__be64 *)buf;
  #line 166 
  u64 mask = (18446744073709551615ULL >> (64 - (int)item->size.bits)) << (int)item->shift;
  #line 169 
  if (! item->no_real_shift) 
                             #line 170 
                             val <<= (int)item->shift;
  #line 171 
  val &= mask;
  #line 172 
  tmp = (u64)__builtin_bswap64((unsigned long)*(b + (unsigned long)offset));
  #line 173 
  tmp = ~ mask & tmp;
  #line 174 
  tmp |= val;
  #line 175 
  *(b + (unsigned long)offset) = (__be64)__builtin_bswap64((unsigned long)tmp);
  #line 176 
  return;
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static void __mlxsw_item_memcpy_to(char *buf, char *src, struct mlxsw_item *item, unsigned short index)
{
  #line 191 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),1UL);
  #line 193 
  memcpy((void *)(buf + (unsigned long)offset),(void *)src,(unsigned long)item->size.bytes);
  #line 194 
  return;
}

#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/item.h"
__inline static char *__mlxsw_item_data(char *buf, struct mlxsw_item *item, unsigned short index)
{
  #line 199 
  unsigned int offset = __mlxsw_item_offset(item,(unsigned short)((int)index),1UL);
  #line 201 
  return buf + (unsigned long)offset;
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sgcr = {.id = (unsigned short)8192U, .len = (unsigned short)16U, .name = (char *)"sgcr"};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spad = {.id = (unsigned short)8194U, .len = (unsigned short)16U, .name = (char *)"spad"};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_smid = {.id = (unsigned short)8199U, .len = (unsigned short)576U, .name = (char *)"smid"};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sspr = {.id = (unsigned short)8200U, .len = (unsigned short)8U, .name = (char *)"sspr"};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sfdat = {.id = (unsigned short)8201U, .len = (unsigned short)8U, .name = (char *)"sfdat"};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sfd = {.id = (unsigned short)8202U, .len = (unsigned short)1040U, .name = (char *)"sfd"};
#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sfn = {.id = (unsigned short)8203U, .len = (unsigned short)1040U, .name = (char *)"sfn"};
#line 778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spms = {.id = (unsigned short)8205U, .len = (unsigned short)1028U, .name = (char *)"spms"};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spvid = {.id = (unsigned short)8206U, .len = (unsigned short)8U, .name = (char *)"spvid"};
#line 863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spvm = {.id = (unsigned short)8207U, .len = (unsigned short)1024U, .name = (char *)"spvm"};
#line 959  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spaft = {.id = (unsigned short)8208U, .len = (unsigned short)8U, .name = (char *)"spaft"};
#line 1012  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sfgc = {.id = (unsigned short)8209U, .len = (unsigned short)16U, .name = (char *)"sfgc"};
#line 1107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sftr = {.id = (unsigned short)8210U, .len = (unsigned short)1056U, .name = (char *)"sftr"};
#line 1177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sfdf = {.id = (unsigned short)8211U, .len = (unsigned short)20U, .name = (char *)"sfdf"};
#line 1267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sldr = {.id = (unsigned short)8212U, .len = (unsigned short)12U, .name = (char *)"sldr"};
#line 1347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_slcr = {.id = (unsigned short)8213U, .len = (unsigned short)16U, .name = (char *)"slcr"};
#line 1467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_slcor = {.id = (unsigned short)8214U, .len = (unsigned short)16U, .name = (char *)"slcor"};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spmlr = {.id = (unsigned short)8216U, .len = (unsigned short)8U, .name = (char *)"spmlr"};
#line 1601  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_svfa = {.id = (unsigned short)8220U, .len = (unsigned short)16U, .name = (char *)"svfa"};
#line 1690  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_svpe = {.id = (unsigned short)8222U, .len = (unsigned short)4U, .name = (char *)"svpe"};
#line 1723  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sfmr = {.id = (unsigned short)8223U, .len = (unsigned short)24U, .name = (char *)"sfmr"};
#line 1810  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_spvmlr = {.id = (unsigned short)8224U, .len = (unsigned short)1024U, .name = (char *)"spvmlr"};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_cwtp = {.id = (unsigned short)10242U, .len = (unsigned short)64U, .name = (char *)"cwtp"};
#line 1947  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_cwtpm = {.id = (unsigned short)10243U, .len = (unsigned short)68U, .name = (char *)"cwtpm"};
#line 2052  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pgcr = {.id = (unsigned short)12289U, .len = (unsigned short)32U, .name = (char *)"pgcr"};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ppbt = {.id = (unsigned short)12290U, .len = (unsigned short)20U, .name = (char *)"ppbt"};
#line 2136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pacl = {.id = (unsigned short)12292U, .len = (unsigned short)112U, .name = (char *)"pacl"};
#line 2182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pagt = {.id = (unsigned short)12293U, .len = (unsigned short)112U, .name = (char *)"pagt"};
#line 2245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ptar = {.id = (unsigned short)12294U, .len = (unsigned short)48U, .name = (char *)"ptar"};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ppbs = {.id = (unsigned short)12300U, .len = (unsigned short)20U, .name = (char *)"ppbs"};
#line 2380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_prcr = {.id = (unsigned short)12301U, .len = (unsigned short)64U, .name = (char *)"prcr"};
#line 2457  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pefa = {.id = (unsigned short)12303U, .len = (unsigned short)176U, .name = (char *)"pefa"};
#line 2516  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pemrbt = {.id = (unsigned short)12308U, .len = (unsigned short)20U, .name = (char *)"pemrbt"};
#line 2554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ptce2 = {.id = (unsigned short)12311U, .len = (unsigned short)472U, .name = (char *)"ptce2"};
#line 2658  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_perpt = {.id = (unsigned short)12321U, .len = (unsigned short)128U, .name = (char *)"perpt"};
#line 2771  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_perar = {.id = (unsigned short)12326U, .len = (unsigned short)8U, .name = (char *)"perar"};
#line 2812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ptce3 = {.id = (unsigned short)12327U, .len = (unsigned short)240U, .name = (char *)"ptce3"};
#line 2974  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_percr = {.id = (unsigned short)12330U, .len = (unsigned short)128U, .name = (char *)"percr"};
#line 3029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pererp = {.id = (unsigned short)12331U, .len = (unsigned short)28U, .name = (char *)"pererp"};
#line 3119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_peabfe = {.id = (unsigned short)12322U, .len = (unsigned short)1040U, .name = (char *)"peabfe"};
#line 3187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_iedr = {.id = (unsigned short)14340U, .len = (unsigned short)528U, .name = (char *)"iedr"};
#line 3242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qpts = {.id = (unsigned short)16386U, .len = (unsigned short)8U, .name = (char *)"qpts"};
#line 3280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qpcr = {.id = (unsigned short)16388U, .len = (unsigned short)40U, .name = (char *)"qpcr"};
#line 3420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qtct = {.id = (unsigned short)16394U, .len = (unsigned short)8U, .name = (char *)"qtct"};
#line 3469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qeec = {.id = (unsigned short)16397U, .len = (unsigned short)32U, .name = (char *)"qeec"};
#line 3633  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qrwe = {.id = (unsigned short)16399U, .len = (unsigned short)8U, .name = (char *)"qrwe"};
#line 3676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qpdsm = {.id = (unsigned short)16401U, .len = (unsigned short)68U, .name = (char *)"qpdsm"};
#line 3765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qpdpm = {.id = (unsigned short)16403U, .len = (unsigned short)132U, .name = (char *)"qpdpm"};
#line 3815  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qtctm = {.id = (unsigned short)16410U, .len = (unsigned short)8U, .name = (char *)"qtctm"};
#line 3847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_qpsc = {.id = (unsigned short)16411U, .len = (unsigned short)40U, .name = (char *)"qpsc"};
#line 3952  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pmlp = {.id = (unsigned short)20482U, .len = (unsigned short)64U, .name = (char *)"pmlp"};
#line 4009  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pmtu = {.id = (unsigned short)20483U, .len = (unsigned short)16U, .name = (char *)"pmtu"};
#line 4063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ptys = {.id = (unsigned short)20484U, .len = (unsigned short)64U, .name = (char *)"ptys"};
#line 4328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ppad = {.id = (unsigned short)20485U, .len = (unsigned short)16U, .name = (char *)"ppad"};
#line 4366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_paos = {.id = (unsigned short)20486U, .len = (unsigned short)16U, .name = (char *)"paos"};
#line 4446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pfcc = {.id = (unsigned short)20487U, .len = (unsigned short)32U, .name = (char *)"pfcc"};
#line 4583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ppcnt = {.id = (unsigned short)20488U, .len = (unsigned short)256U, .name = (char *)"ppcnt"};
#line 5088  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_plib = {.id = (unsigned short)20490U, .len = (unsigned short)16U, .name = (char *)"plib"};
#line 5109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pptb = {.id = (unsigned short)20491U, .len = (unsigned short)16U, .name = (char *)"pptb"};
#line 5203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pbmc = {.id = (unsigned short)20492U, .len = (unsigned short)108U, .name = (char *)"pbmc"};
#line 5313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pspa = {.id = (unsigned short)20493U, .len = (unsigned short)8U, .name = (char *)"pspa"};
#line 5349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pplr = {.id = (unsigned short)20504U, .len = (unsigned short)8U, .name = (char *)"pplr"};
#line 5385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_pmtm = {.id = (unsigned short)20583U, .len = (unsigned short)16U, .name = (char *)"pmtm"};
#line 5391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_pmtm_module_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 5391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_pmtm_module_set(char *buf, u32 val)
{
  #line 5391 
  __mlxsw_item_set32(buf,& mlxsw_reg_pmtm_module_item,(unsigned short)0,val);
  #line 5392 
  return;
}

#line 5412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_pmtm_module_type_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)4U}, .name = (char *)"reg"};
#line 5412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_pmtm_module_type_get(char *buf)
{
  #line 5412 
  return __mlxsw_item_get32(buf,& mlxsw_reg_pmtm_module_type_item,
                         (unsigned short)0);
}

#line 5414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_pmtm_pack(char *payload, u8 module)
{
  #line 5416 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_pmtm.len);
  #line 5417 
  mlxsw_reg_pmtm_module_set(payload,(unsigned int)module);
  #line 5418 
  return;
}

#line 5421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_pmtm_unpack(char *payload, enum mlxsw_reg_pmtm_module_type *module_type)
{
  #line 5424 
  *module_type = (enum mlxsw_reg_pmtm_module_type)mlxsw_reg_pmtm_module_type_get(payload);
  #line 5425 
  return;
}

#line 5434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_htgt = {.id = (unsigned short)28674U, .len = (unsigned short)32U, .name = (char *)"htgt"};
#line 5598  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_hpkt = {.id = (unsigned short)28675U, .len = (unsigned short)16U, .name = (char *)"hpkt"};
#line 5613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_hpkt_ack_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 5613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_hpkt_ack_set(char *buf, u32 val)
{
  #line 5613 
  __mlxsw_item_set32(buf,& mlxsw_reg_hpkt_ack_item,(unsigned short)0,val);
  #line 5614 
  return;
}

#line 5641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_hpkt_action_item = {.shift = (unsigned char)20U, .size = {.bits = (unsigned char)3U}, .name = (char *)"reg"};
#line 5641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_hpkt_action_set(char *buf, u32 val)
{
  #line 5641 
  __mlxsw_item_set32(buf,& mlxsw_reg_hpkt_action_item,(unsigned short)0,val);
  #line 5642 
  return;
}

#line 5647  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_hpkt_trap_group_item = {.shift = (unsigned char)12U, .size = {.bits = (unsigned char)6U}, .name = (char *)"reg"};
#line 5647  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_hpkt_trap_group_set(char *buf, u32 val)
{
  #line 5647 
  __mlxsw_item_set32(buf,& mlxsw_reg_hpkt_trap_group_item,(unsigned short)0,val);
  #line 5648 
  return;
}

#line 5656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_hpkt_trap_id_item = {.size = {.bits = (unsigned char)9U}, .name = (char *)"reg"};
#line 5656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_hpkt_trap_id_set(char *buf, u32 val)
{
  #line 5656 
  __mlxsw_item_set32(buf,& mlxsw_reg_hpkt_trap_id_item,(unsigned short)0,val);
  #line 5657 
  return;
}

#line 5672  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_hpkt_ctrl_item = {.offset = (unsigned short)4U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)2U}, .name = (char *)"reg"};
#line 5672  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_hpkt_ctrl_set(char *buf, u32 val)
{
  #line 5672 
  __mlxsw_item_set32(buf,& mlxsw_reg_hpkt_ctrl_item,(unsigned short)0,val);
  #line 5673 
  return;
}

#line 5674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_hpkt_pack(char *payload, u8 action, u16 trap_id, enum mlxsw_reg_htgt_trap_group trap_group, bool is_ctrl)
{
  #line 5683 
  unsigned int tmp;
  #line 5678 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_hpkt.len);
  #line 5679 
  mlxsw_reg_hpkt_ack_set(payload,0U);
  #line 5680 
  mlxsw_reg_hpkt_action_set(payload,(unsigned int)action);
  #line 5681 
  mlxsw_reg_hpkt_trap_group_set(payload,(unsigned int)trap_group);
  #line 5682 
  mlxsw_reg_hpkt_trap_id_set(payload,(unsigned int)trap_id);
  #line 5683 
  if ((int)is_ctrl != 0) 
                         #line 5683 
                         tmp = 2U; else 
                                        #line 5683 
                                        tmp = 1U;
  #line 5683 
  ;
  #line 5683 
  mlxsw_reg_hpkt_ctrl_set(payload,tmp);
  #line 5685 
  return;
}

#line 5695  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rgcr = {.id = (unsigned short)32769U, .len = (unsigned short)40U, .name = (char *)"rgcr"};
#line 5768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ritr = {.id = (unsigned short)32770U, .len = (unsigned short)64U, .name = (char *)"ritr"};
#line 6172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rtar = {.id = (unsigned short)32772U, .len = (unsigned short)32U, .name = (char *)"rtar"};
#line 6224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ratr = {.id = (unsigned short)32776U, .len = (unsigned short)44U, .name = (char *)"ratr"};
#line 6460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rdpm = {.id = (unsigned short)32777U, .len = (unsigned short)64U, .name = (char *)"rdpm"};
#line 6490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ricnt = {.id = (unsigned short)32779U, .len = (unsigned short)256U, .name = (char *)"ricnt"};
#line 6613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rrcr = {.id = (unsigned short)32783U, .len = (unsigned short)36U, .name = (char *)"rrcr"};
#line 6672  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ralta = {.id = (unsigned short)32784U, .len = (unsigned short)4U, .name = (char *)"ralta"};
#line 6724  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ralst = {.id = (unsigned short)32785U, .len = (unsigned short)260U, .name = (char *)"ralst"};
#line 6791  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_raltb = {.id = (unsigned short)32786U, .len = (unsigned short)4U, .name = (char *)"raltb"};
#line 6832  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_ralue = {.id = (unsigned short)32787U, .len = (unsigned short)56U, .name = (char *)"ralue"};
#line 7112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rauht = {.id = (unsigned short)32788U, .len = (unsigned short)116U, .name = (char *)"rauht"};
#line 7266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_raleu = {.id = (unsigned short)32789U, .len = (unsigned short)40U, .name = (char *)"raleu"};
#line 7338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rauhtd = {.id = (unsigned short)32792U, .len = (unsigned short)1056U, .name = (char *)"rauhtd"};
#line 7503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rtdp = {.id = (unsigned short)32800U, .len = (unsigned short)68U, .name = (char *)"rtdp"};
#line 7639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rigr2 = {.id = (unsigned short)32803U, .len = (unsigned short)176U, .name = (char *)"rigr2"};
#line 7717  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_recr2 = {.id = (unsigned short)32805U, .len = (unsigned short)56U, .name = (char *)"recr2"};
#line 7849  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_rmft2 = {.id = (unsigned short)32807U, .len = (unsigned short)372U, .name = (char *)"rmft2"};
#line 8020  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfcr_0 = {.id = (unsigned short)36865U, .len = (unsigned short)8U, .name = (char *)"mfcr"};
#line 8080  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsc_0 = {.id = (unsigned short)36866U, .len = (unsigned short)8U, .name = (char *)"mfsc"};
#line 8111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsm_0 = {.id = (unsigned short)36867U, .len = (unsigned short)8U, .name = (char *)"mfsm"};
#line 8140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsl = {.id = (unsigned short)36868U, .len = (unsigned short)12U, .name = (char *)"mfsl"};
#line 8187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_fore_0 = {.id = (unsigned short)36871U, .len = (unsigned short)12U, .name = (char *)"fore"};
#line 8216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtcap_0 = {.id = (unsigned short)36873U, .len = (unsigned short)8U, .name = (char *)"mtcap"};
#line 8234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtmp_1 = {.id = (unsigned short)36874U, .len = (unsigned short)32U, .name = (char *)"mtmp"};
#line 8350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtbr_0 = {.id = (unsigned short)36879U, .len = (unsigned short)204U, .name = (char *)"mtbr"};
#line 8420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mcia_0 = {.id = (unsigned short)36884U, .len = (unsigned short)64U, .name = (char *)"mcia"};
#line 8532  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mpat = {.id = (unsigned short)36890U, .len = (unsigned short)120U, .name = (char *)"mpat"};
#line 8737  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mpar = {.id = (unsigned short)36891U, .len = (unsigned short)12U, .name = (char *)"mpar"};
#line 8788  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mgir = {.id = (unsigned short)36896U, .len = (unsigned short)156U, .name = (char *)"mgir"};
#line 8793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgir_hw_info_device_hw_revision_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgir_hw_info_device_hw_revision_get(char *buf)
{
  #line 8793 
  return __mlxsw_item_get32(buf,
                         & mlxsw_reg_mgir_hw_info_device_hw_revision_item,
                         (unsigned short)0);
}

#line 8801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgir_fw_info_psid_item = {.offset = (unsigned short)48U, .size = {.bytes = (unsigned short)16U}, .name = (char *)"reg"};
#line 8801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgir_fw_info_psid_memcpy_from(char *buf, char *dst)
{
  #line 8801 
  __mlxsw_item_memcpy_from(buf,dst,& mlxsw_reg_mgir_fw_info_psid_item,(unsigned short)0);
  #line 8802 
  return;
}

#line 8806  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgir_fw_info_extended_major_item = {.offset = (unsigned short)68U, .size = {.bits = (unsigned char)32U}, .name = (char *)"reg"};
#line 8806  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgir_fw_info_extended_major_get(char *buf)
{
  #line 8806 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgir_fw_info_extended_major_item,
                         (unsigned short)0);
}

#line 8811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgir_fw_info_extended_minor_item = {.offset = (unsigned short)72U, .size = {.bits = (unsigned char)32U}, .name = (char *)"reg"};
#line 8811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgir_fw_info_extended_minor_get(char *buf)
{
  #line 8811 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgir_fw_info_extended_minor_item,
                         (unsigned short)0);
}

#line 8816  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgir_fw_info_extended_sub_minor_item = {.offset = (unsigned short)76U, .size = {.bits = (unsigned char)32U}, .name = (char *)"reg"};
#line 8816  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgir_fw_info_extended_sub_minor_get(char *buf)
{
  #line 8816 
  return __mlxsw_item_get32(buf,
                         & mlxsw_reg_mgir_fw_info_extended_sub_minor_item,
                         (unsigned short)0);
}

#line 8818  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgir_pack(char *payload)
{
  #line 8820 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mgir.len);
  #line 8821 
  return;
}

#line 8824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgir_unpack(char *payload, u32 *hw_rev, char *fw_info_psid, u32 *fw_major, u32 *fw_minor, u32 *fw_sub_minor)
{
  #line 8827 
  *hw_rev = mlxsw_reg_mgir_hw_info_device_hw_revision_get(payload);
  #line 8828 
  mlxsw_reg_mgir_fw_info_psid_memcpy_from(payload,fw_info_psid);
  #line 8829 
  *fw_major = mlxsw_reg_mgir_fw_info_extended_major_get(payload);
  #line 8830 
  *fw_minor = mlxsw_reg_mgir_fw_info_extended_minor_get(payload);
  #line 8831 
  *fw_sub_minor = mlxsw_reg_mgir_fw_info_extended_sub_minor_get(payload);
  #line 8832 
  return;
}

#line 8842  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mrsr = {.id = (unsigned short)36899U, .len = (unsigned short)8U, .name = (char *)"mrsr"};
#line 8865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mlcr = {.id = (unsigned short)36907U, .len = (unsigned short)12U, .name = (char *)"mlcr"};
#line 8907  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtpps = {.id = (unsigned short)36947U, .len = (unsigned short)60U, .name = (char *)"mtpps"};
#line 8963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtutc = {.id = (unsigned short)36949U, .len = (unsigned short)28U, .name = (char *)"mtutc"};
#line 9009  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mcqi = {.id = (unsigned short)36961U, .len = (unsigned short)44U, .name = (char *)"mcqi"};
#line 9090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mcc = {.id = (unsigned short)36962U, .len = (unsigned short)28U, .name = (char *)"mcc"};
#line 9175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mcda = {.id = (unsigned short)36963U, .len = (unsigned short)144U, .name = (char *)"mcda"};
#line 9223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mpsc = {.id = (unsigned short)36992U, .len = (unsigned short)28U, .name = (char *)"mpsc"};
#line 9262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mgpc = {.id = (unsigned short)36993U, .len = (unsigned short)24U, .name = (char *)"mgpc"};
#line 9319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mprs = {.id = (unsigned short)36995U, .len = (unsigned short)20U, .name = (char *)"mprs"};
#line 9360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mogcr = {.id = (unsigned short)36998U, .len = (unsigned short)32U, .name = (char *)"mogcr"};
#line 9390  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtpppc = {.id = (unsigned short)37008U, .len = (unsigned short)40U, .name = (char *)"mtpppc"};
#line 9434  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtpptr = {.id = (unsigned short)37009U, .len = (unsigned short)80U, .name = (char *)"mtpptr"};
#line 9534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtptpt = {.id = (unsigned short)37010U, .len = (unsigned short)8U, .name = (char *)"mtptpt"};
#line 9572  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mgpir_0 = {.id = (unsigned short)37120U, .len = (unsigned short)160U, .name = (char *)"mgpir"};
#line 9630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tngcr = {.id = (unsigned short)40961U, .len = (unsigned short)68U, .name = (char *)"tngcr"};
#line 9815  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tnumt = {.id = (unsigned short)40963U, .len = (unsigned short)32U, .name = (char *)"tnumt"};
#line 9905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tnqcr = {.id = (unsigned short)40976U, .len = (unsigned short)12U, .name = (char *)"tnqcr"};
#line 9930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tnqdr = {.id = (unsigned short)40977U, .len = (unsigned short)8U, .name = (char *)"tnqdr"};
#line 9959  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tneem = {.id = (unsigned short)40978U, .len = (unsigned short)12U, .name = (char *)"tneem"};
#line 9989  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tndem = {.id = (unsigned short)40979U, .len = (unsigned short)12U, .name = (char *)"tndem"};
#line 10045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tnpc = {.id = (unsigned short)40992U, .len = (unsigned short)24U, .name = (char *)"tnpc"};
#line 10089  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_tigcr = {.id = (unsigned short)43009U, .len = (unsigned short)16U, .name = (char *)"tigcr"};
#line 10119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sbpr = {.id = (unsigned short)45057U, .len = (unsigned short)20U, .name = (char *)"sbpr"};
#line 10185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sbcm = {.id = (unsigned short)45058U, .len = (unsigned short)40U, .name = (char *)"sbcm"};
#line 10271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sbpm = {.id = (unsigned short)45059U, .len = (unsigned short)40U, .name = (char *)"sbpm"};
#line 10362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sbmm = {.id = (unsigned short)45060U, .len = (unsigned short)40U, .name = (char *)"sbmm"};
#line 10421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sbsr = {.id = (unsigned short)45061U, .len = (unsigned short)1052U, .name = (char *)"sbsr"};
#line 10511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_sbib = {.id = (unsigned short)45062U, .len = (unsigned short)16U, .name = (char *)"sbib"};
#line 10536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info *mlxsw_reg_infos[124U] = {& mlxsw_reg_sgcr, & mlxsw_reg_spad, & mlxsw_reg_smid, & mlxsw_reg_sspr, & mlxsw_reg_sfdat, & mlxsw_reg_sfd, & mlxsw_reg_sfn, & mlxsw_reg_spms, & mlxsw_reg_spvid, & mlxsw_reg_spvm, & mlxsw_reg_spaft, & mlxsw_reg_sfgc, & mlxsw_reg_sftr, & mlxsw_reg_sfdf, & mlxsw_reg_sldr, & mlxsw_reg_slcr, & mlxsw_reg_slcor, & mlxsw_reg_spmlr, & mlxsw_reg_svfa, & mlxsw_reg_svpe, & mlxsw_reg_sfmr, & mlxsw_reg_spvmlr, & mlxsw_reg_cwtp, & mlxsw_reg_cwtpm, & mlxsw_reg_pgcr, & mlxsw_reg_ppbt, & mlxsw_reg_pacl, & mlxsw_reg_pagt, & mlxsw_reg_ptar, & mlxsw_reg_ppbs, & mlxsw_reg_prcr, & mlxsw_reg_pefa, & mlxsw_reg_pemrbt, & mlxsw_reg_ptce2, & mlxsw_reg_perpt, & mlxsw_reg_peabfe, & mlxsw_reg_perar, & mlxsw_reg_ptce3, & mlxsw_reg_percr, & mlxsw_reg_pererp, & mlxsw_reg_iedr, & mlxsw_reg_qpts, & mlxsw_reg_qpcr, & mlxsw_reg_qtct, & mlxsw_reg_qeec, & mlxsw_reg_qrwe, & mlxsw_reg_qpdsm, & mlxsw_reg_qpdpm, & mlxsw_reg_qtctm, & mlxsw_reg_qpsc, & mlxsw_reg_pmlp, & mlxsw_reg_pmtu, & mlxsw_reg_ptys, & mlxsw_reg_ppad, & mlxsw_reg_paos, & mlxsw_reg_pfcc, & mlxsw_reg_ppcnt, & mlxsw_reg_plib, & mlxsw_reg_pptb, & mlxsw_reg_pbmc, & mlxsw_reg_pspa, & mlxsw_reg_pplr, & mlxsw_reg_pmtm, & mlxsw_reg_htgt, & mlxsw_reg_hpkt, & mlxsw_reg_rgcr, & mlxsw_reg_ritr, & mlxsw_reg_rtar, & mlxsw_reg_ratr, & mlxsw_reg_rtdp, & mlxsw_reg_rdpm, & mlxsw_reg_ricnt, & mlxsw_reg_rrcr, & mlxsw_reg_ralta, & mlxsw_reg_ralst, & mlxsw_reg_raltb, & mlxsw_reg_ralue, & mlxsw_reg_rauht, & mlxsw_reg_raleu, & mlxsw_reg_rauhtd, & mlxsw_reg_rigr2, & mlxsw_reg_recr2, & mlxsw_reg_rmft2, & mlxsw_reg_mfcr_0, & mlxsw_reg_mfsc_0, & mlxsw_reg_mfsm_0, & mlxsw_reg_mfsl, & mlxsw_reg_fore_0, & mlxsw_reg_mtcap_0, & mlxsw_reg_mtmp_1, & mlxsw_reg_mtbr_0, & mlxsw_reg_mcia_0, & mlxsw_reg_mpat, & mlxsw_reg_mpar, & mlxsw_reg_mgir, & mlxsw_reg_mrsr, & mlxsw_reg_mlcr, & mlxsw_reg_mtpps, & mlxsw_reg_mtutc, & mlxsw_reg_mpsc, & mlxsw_reg_mcqi, & mlxsw_reg_mcc, & mlxsw_reg_mcda, & mlxsw_reg_mgpc, & mlxsw_reg_mprs, & mlxsw_reg_mogcr, & mlxsw_reg_mtpppc, & mlxsw_reg_mtpptr, & mlxsw_reg_mtptpt, & mlxsw_reg_mgpir_0, & mlxsw_reg_tngcr, & mlxsw_reg_tnumt, & mlxsw_reg_tnqcr, & mlxsw_reg_tnqdr, & mlxsw_reg_tneem, & mlxsw_reg_tndem, & mlxsw_reg_tnpc, & mlxsw_reg_tigcr, & mlxsw_reg_sbpr, & mlxsw_reg_sbcm, & mlxsw_reg_sbpm, & mlxsw_reg_sbmm, & mlxsw_reg_sbsr, & mlxsw_reg_sbib};
#line 10663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static char *mlxsw_reg_id_str(u16 reg_id)
{
  #line 10665 
  struct mlxsw_reg_info *reg_info;
  #line 10666 
  int i;
  #line 10668 
  i = 0;
  #line 10668 
  while ((unsigned int)i <= 123U) {
    #line 10669 
    reg_info = mlxsw_reg_infos[i];
    #line 10670 
    if ((int)reg_info->id == (int)reg_id) 
                                          #line 10671 
                                          return reg_info->name;
    #line 10668 
    i ++;
  }
  #line 10673 
  return (char *)"*UNKNOWN*";
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static char *mlxsw_cmd_mbox_alloc(void)
{
  #line 13 
  return (char *)kzalloc_0(4096UL,3264U);
}

#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static void mlxsw_cmd_mbox_free(char *mbox)
{
  #line 18 
  kfree((void *)mbox);
  #line 19 
  return;
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static void mlxsw_cmd_mbox_zero(char *mbox)
{
  #line 23 
  memset((void *)mbox,0,4096UL);
  #line 24 
  return;
}

#line 28 
#line 2203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_cmd_exec(struct mlxsw_core *mlxsw_core, u16 opcode, u8 opcode_mod, u32 in_mod, bool out_mbox_direct, bool reset_ok, char *in_mbox, size_t in_mbox_size, char *out_mbox, size_t out_mbox_size);
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static int mlxsw_cmd_exec_out(struct mlxsw_core *mlxsw_core, u16 opcode, u8 opcode_mod, u32 in_mod, bool out_mbox_direct, char *out_mbox, size_t out_mbox_size)
{
  #line 46 
  return mlxsw_cmd_exec(mlxsw_core,(unsigned short)((int)opcode),
                     (unsigned char)((int)opcode_mod),in_mod,
                     (_Bool)((bool)((int)out_mbox_direct) != 0),(_Bool)0,
                     (char *)0,0UL,out_mbox,out_mbox_size);
}

#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static char *mlxsw_cmd_opcode_str(u16 opcode)
{
  #line 81 
  switch ((int)opcode) {
    #line 82 
    case 4: 
            #line 82 
    ;
    #line 83 
    return (char *)"QUERY_FW";
    #line 84 
    case 6: 
            #line 84 
    ;
    #line 85 
    return (char *)"QUERY_BOARDINFO";
    #line 86 
    case 3: 
            #line 86 
    ;
    #line 87 
    return (char *)"QUERY_AQ_CAP";
    #line 88 
    case 4095: 
               #line 88 
    ;
    #line 89 
    return (char *)"MAP_FA";
    #line 90 
    case 4094: 
               #line 90 
    ;
    #line 91 
    return (char *)"UNMAP_FA";
    #line 92 
    case 256: 
              #line 92 
    ;
    #line 93 
    return (char *)"CONFIG_PROFILE";
    #line 94 
    case 64: 
             #line 94 
    ;
    #line 95 
    return (char *)"ACCESS_REG";
    #line 96 
    case 513: 
              #line 96 
    ;
    #line 97 
    return (char *)"SW2HW_DQ";
    #line 98 
    case 514: 
              #line 98 
    ;
    #line 99 
    return (char *)"HW2SW_DQ";
    #line 100 
    case 30: 
             #line 100 
    ;
    #line 101 
    return (char *)"2ERR_DQ";
    #line 102 
    case 34: 
             #line 102 
    ;
    #line 103 
    return (char *)"QUERY_DQ";
    #line 104 
    case 22: 
             #line 104 
    ;
    #line 105 
    return (char *)"SW2HW_CQ";
    #line 106 
    case 23: 
             #line 106 
    ;
    #line 107 
    return (char *)"HW2SW_CQ";
    #line 108 
    case 24: 
             #line 108 
    ;
    #line 109 
    return (char *)"QUERY_CQ";
    #line 110 
    case 19: 
             #line 110 
    ;
    #line 111 
    return (char *)"SW2HW_EQ";
    #line 112 
    case 20: 
             #line 112 
    ;
    #line 113 
    return (char *)"HW2SW_EQ";
    #line 114 
    case 21: 
             #line 114 
    ;
    #line 115 
    return (char *)"QUERY_EQ";
    #line 116 
    case 257: 
              #line 116 
    ;
    #line 117 
    return (char *)"QUERY_RESOURCES";
    #line 118 
    default: 
             #line 118 
    ;
    #line 119 
    return (char *)"*UNKNOWN*";
  }
}

#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static char *mlxsw_cmd_status_str(u8 status)
{
  #line 158 
  switch ((int)status) {
    #line 159 
    case 0: 
            #line 159 
    ;
    #line 160 
    return (char *)"OK";
    #line 161 
    case 1: 
            #line 161 
    ;
    #line 162 
    return (char *)"INTERNAL_ERR";
    #line 163 
    case 2: 
            #line 163 
    ;
    #line 164 
    return (char *)"BAD_OP";
    #line 165 
    case 3: 
            #line 165 
    ;
    #line 166 
    return (char *)"BAD_PARAM";
    #line 167 
    case 4: 
            #line 167 
    ;
    #line 168 
    return (char *)"BAD_SYS_STATE";
    #line 169 
    case 5: 
            #line 169 
    ;
    #line 170 
    return (char *)"BAD_RESOURCE";
    #line 171 
    case 6: 
            #line 171 
    ;
    #line 172 
    return (char *)"RESOURCE_BUSY";
    #line 173 
    case 8: 
            #line 173 
    ;
    #line 174 
    return (char *)"EXCEED_LIM";
    #line 175 
    case 9: 
            #line 175 
    ;
    #line 176 
    return (char *)"BAD_RES_STATE";
    #line 177 
    case 10: 
             #line 177 
    ;
    #line 178 
    return (char *)"BAD_INDEX";
    #line 179 
    case 11: 
             #line 179 
    ;
    #line 180 
    return (char *)"BAD_NVMEM";
    #line 181 
    case 38: 
             #line 181 
    ;
    #line 182 
    return (char *)"RUNNING_RESET";
    #line 183 
    case 48: 
             #line 183 
    ;
    #line 184 
    return (char *)"BAD_PKT";
    #line 185 
    default: 
             #line 185 
    ;
    #line 186 
    return (char *)"*UNKNOWN*";
  }
}

#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static int mlxsw_cmd_query_resources(struct mlxsw_core *mlxsw_core, char *out_mbox, int index)
{
  #line 513 
  return mlxsw_cmd_exec_out(mlxsw_core,(unsigned short)257,(unsigned char)0,
                         (unsigned int)index,(_Bool)0,out_mbox,4096UL);
}

#line 521  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
static struct mlxsw_item mlxsw_cmd_mbox_query_resource_id_item = {.step = (short)8, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"cmd_mbox"};
#line 521  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static u32 mlxsw_cmd_mbox_query_resource_id_get(char *buf, unsigned short index)
{
  #line 521 
  return __mlxsw_item_get32(buf,& mlxsw_cmd_mbox_query_resource_id_item,
                         (unsigned short)((int)index));
}

#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
static struct mlxsw_item mlxsw_cmd_mbox_query_resource_data_item = {.step = (short)8, .size = {.bits = (unsigned char)40U}, .name = (char *)"cmd_mbox"};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static u64 mlxsw_cmd_mbox_query_resource_data_get(char *buf, unsigned short index)
{
  #line 526 
  return __mlxsw_item_get64(buf,& mlxsw_cmd_mbox_query_resource_data_item,
                         (unsigned short)((int)index));
}

#line 855  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/cmd.h"
__inline static int mlxsw_cmd_access_reg(struct mlxsw_core *mlxsw_core, bool reset_ok, char *in_mbox, char *out_mbox)
{
  #line 859 
  return mlxsw_cmd_exec(mlxsw_core,(unsigned short)64,(unsigned char)0,0U,
                     (_Bool)0,(_Bool)((bool)((int)reset_ok) != 0),in_mbox,
                     4096UL,out_mbox,4096UL);
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
static u16 mlxsw_res_ids[45U] = {(unsigned short)4097U, (unsigned short)4098U, (unsigned short)4099U, (unsigned short)4101U, (unsigned short)4103U, (unsigned short)8705U, (unsigned short)8720U, (unsigned short)8721U, (unsigned short)8722U, (unsigned short)9232U, (unsigned short)9248U, (unsigned short)9283U, (unsigned short)9289U, (unsigned short)9474U, (unsigned short)9504U, (unsigned short)9505U, (unsigned short)9744U, (unsigned short)9745U, (unsigned short)9746U, (unsigned short)10245U, (unsigned short)10243U, (unsigned short)10257U, (unsigned short)10497U, (unsigned short)10498U, (unsigned short)10499U, (unsigned short)10500U, (unsigned short)10501U, (unsigned short)10512U, (unsigned short)10513U, (unsigned short)10514U, (unsigned short)10560U, (unsigned short)10561U, (unsigned short)10562U, (unsigned short)10576U, (unsigned short)10577U, (unsigned short)10578U, (unsigned short)10579U, (unsigned short)10592U, (unsigned short)10771U, (unsigned short)11265U, (unsigned short)11266U, (unsigned short)11280U, (unsigned short)11312U, (unsigned short)11778U, (unsigned short)11779U};
#line 120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
__inline static bool mlxsw_res_valid(struct mlxsw_res *res, enum mlxsw_res_id res_id)
{
  #line 123 
  return res->valid[(unsigned int)res_id];
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
__inline static u64 mlxsw_res_get(struct mlxsw_res *res, enum mlxsw_res_id res_id)
{
  #line 132 
  int __ret_warn_on;
  #line 132 
  __ret_warn_on = ! res->valid[(unsigned int)res_id];
  #line 132 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 133 
    ldv_inline_asm();
    #line 134 
    ldv_inline_asm();
  }
  #line 132 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 133 
                                                return 0ULL;
  #line 134 
  return res->values[(unsigned int)res_id];
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
__inline static void mlxsw_res_set(struct mlxsw_res *res, enum mlxsw_res_id res_id, u64 value)
{
  #line 143 
  res->valid[(unsigned int)res_id] = (_Bool)1;
  #line 144 
  res->values[(unsigned int)res_id] = value;
  #line 145 
  return;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/resources.h"
__inline static void mlxsw_res_parse(struct mlxsw_res *res, u16 id, u64 value)
{
  #line 152 
  int i;
  #line 154 
  i = 0;
  #line 154 
  while ((unsigned int)i <= 44U) {
    #line 155 
    if ((int)mlxsw_res_ids[i] == (int)id) {
      #line 156 
      mlxsw_res_set(res,(enum mlxsw_res_id)i,value);
      #line 157 
      return;
    }
    #line 154 
    i ++;
  }
  #line 159 
  return;
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
unsigned int mlxsw_core_max_ports(struct mlxsw_core *mlxsw_core);
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void *mlxsw_core_driver_priv(struct mlxsw_core *mlxsw_core);
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_fw_rev_minor_subminor_validate(struct mlxsw_fw_rev *rev, struct mlxsw_fw_rev *req_rev);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_driver_register(struct mlxsw_driver *mlxsw_driver);
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 836  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_driver_unregister(struct mlxsw_driver *mlxsw_driver);
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_bus_device_register(struct mlxsw_bus_info *mlxsw_bus_info, struct mlxsw_bus *mlxsw_bus, void *bus_priv, bool reload, struct devlink *devlink, struct netlink_ext_ack *extack);
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_bus_device_unregister(struct mlxsw_core *mlxsw_core, bool reload);
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_skb_transmit_busy(struct mlxsw_core *mlxsw_core, struct mlxsw_tx_info *tx_info);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_skb_transmit(struct mlxsw_core *mlxsw_core, struct sk_buff *skb, struct mlxsw_tx_info *tx_info);
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_ptp_transmitted(struct mlxsw_core *mlxsw_core, struct sk_buff *skb, u8 local_port);
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_rx_listener_register(struct mlxsw_core *mlxsw_core, struct mlxsw_rx_listener *rxl, void *priv);
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_rx_listener_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_rx_listener *rxl, void *priv);
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_event_listener_register(struct mlxsw_core *mlxsw_core, struct mlxsw_event_listener *el, void *priv);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_event_listener_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_event_listener *el, void *priv);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_trap_register(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, void *priv);
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1660  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_trap_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, void *priv);
#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_trap_action_set(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, enum mlxsw_reg_hpkt_action action);
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_trans_query(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, struct list_head *bulk_list, mlxsw_reg_trans_cb_t *cb, unsigned long cb_priv);
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_trans_write(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, struct list_head *bulk_list, mlxsw_reg_trans_cb_t *cb, unsigned long cb_priv);
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1781  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_trans_bulk_wait(struct list_head *bulk_list);
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_skb_receive(struct mlxsw_core *mlxsw_core, struct sk_buff *skb, struct mlxsw_rx_info *rx_info);
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1968  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_lag_mapping_set(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 port_index, u8 local_port);
#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u8 mlxsw_core_lag_mapping_get(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 port_index);
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 1988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_lag_mapping_clear(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 local_port);
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void *mlxsw_core_port_driver_priv(struct mlxsw_core_port *mlxsw_core_port);
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2050  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_port_init(struct mlxsw_core *mlxsw_core, u8 local_port, u32 port_number, bool split, u32 split_port_subnumber, unsigned char *switch_id, unsigned char switch_id_len);
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_fini(struct mlxsw_core *mlxsw_core, u8 local_port);
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2069  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_cpu_port_init(struct mlxsw_core *mlxsw_core, void *port_driver_priv, unsigned char *switch_id, unsigned char switch_id_len);
#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_cpu_port_fini(struct mlxsw_core *mlxsw_core);
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2096  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_eth_set(struct mlxsw_core *mlxsw_core, u8 local_port, void *port_driver_priv, struct net_device *dev);
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_ib_set(struct mlxsw_core *mlxsw_core, u8 local_port, void *port_driver_priv);
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_clear(struct mlxsw_core *mlxsw_core, u8 local_port, void *port_driver_priv);
#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
enum devlink_port_type mlxsw_core_port_type_get(struct mlxsw_core *mlxsw_core, u8 local_port);
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct devlink_port *mlxsw_core_port_devlink_port_get(struct mlxsw_core *mlxsw_core, u8 local_port);
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_module_max_width(struct mlxsw_core *mlxsw_core, u8 module);
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_schedule_dw(struct delayed_work *dwork, unsigned long delay);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_schedule_work(struct work_struct *work);
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_flush_owq(void);
#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_resources_query(struct mlxsw_core *mlxsw_core, char *mbox, struct mlxsw_res *res);
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_kvd_sizes_get(struct mlxsw_core *mlxsw_core, struct mlxsw_config_profile *profile, u64 *p_single_size, u64 *p_double_size, u64 *p_linear_size);
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_fw_flash_start(struct mlxsw_core *mlxsw_core);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_fw_flash_end(struct mlxsw_core *mlxsw_core);
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u32 mlxsw_core_read_frc_h(struct mlxsw_core *mlxsw_core);
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u32 mlxsw_core_read_frc_l(struct mlxsw_core *mlxsw_core);
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_emad_string_tlv_enable(struct mlxsw_core *mlxsw_core);
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2003  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_res_valid(struct mlxsw_core *mlxsw_core, enum mlxsw_res_id res_id);
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 2010  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u64 mlxsw_core_res_get(struct mlxsw_core *mlxsw_core, enum mlxsw_res_id res_id);
#line 438  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.h"
#line 438 
int mlxsw_thermal_init(struct mlxsw_core *core, struct mlxsw_bus_info *bus_info, struct mlxsw_thermal **p_thermal);
#line 441 
#line 441 
void mlxsw_thermal_fini(struct mlxsw_thermal *thermal);
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/emad.h"
__inline static char *mlxsw_emad_op_tlv_status_str(u8 status)
{
  #line 50 
  switch ((int)status) {
    #line 51 
    case 0: 
            #line 51 
    ;
    #line 52 
    return (char *)"operation performed";
    #line 53 
    case 1: 
            #line 53 
    ;
    #line 54 
    return (char *)"device is busy";
    #line 55 
    case 2: 
            #line 55 
    ;
    #line 56 
    return (char *)"version not supported";
    #line 57 
    case 3: 
            #line 57 
    ;
    #line 58 
    return (char *)"unknown TLV";
    #line 59 
    case 4: 
            #line 59 
    ;
    #line 60 
    return (char *)"register not supported";
    #line 61 
    case 5: 
            #line 61 
    ;
    #line 62 
    return (char *)"class not supported";
    #line 63 
    case 6: 
            #line 63 
    ;
    #line 64 
    return (char *)"method not supported";
    #line 65 
    case 7: 
            #line 65 
    ;
    #line 66 
    return (char *)"bad parameter";
    #line 67 
    case 8: 
            #line 67 
    ;
    #line 68 
    return (char *)"resource not available";
    #line 69 
    case 9: 
            #line 69 
    ;
    #line 70 
    return (char *)"acknowledged. retransmit";
    #line 71 
    case 112: 
              #line 71 
    ;
    #line 72 
    return (char *)"internal error";
    #line 73 
    default: 
             #line 73 
    ;
    #line 74 
    return (char *)"*UNKNOWN*";
  }
}

#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct list_head mlxsw_core_driver_list = {.next = & mlxsw_core_driver_list, .prev = & mlxsw_core_driver_list};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static spinlock_t mlxsw_core_driver_list_lock = {.__anonCompField_spinlock_25 = {.rlock = {.magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.name = (char *)"mlxsw_core_driver_list_lock"}}}};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static char mlxsw_core_driver_name[11U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e'};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct workqueue_struct *mlxsw_wq;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct workqueue_struct *mlxsw_owq;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void *mlxsw_core_port_driver_priv(struct mlxsw_core_port *mlxsw_core_port)
{
  #line 52 
  return mlxsw_core_port->port_driver_priv;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static bool mlxsw_core_port_check(struct mlxsw_core_port *mlxsw_core_port)
{
  #line 58 
  return (_Bool)(mlxsw_core_port->port_driver_priv != (void *)0);
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_ports_init(struct mlxsw_core *mlxsw_core)
{
  #line 94 
  if ((int)mlxsw_core_res_valid(mlxsw_core,
                             (enum mlxsw_res_id)MLXSW_RES_ID_MAX_SYSTEM_PORT) != 0) {
    #line 95 
    mlxsw_core->max_ports = (unsigned int)mlxsw_core_res_get(mlxsw_core,
                         (enum mlxsw_res_id)MLXSW_RES_ID_MAX_SYSTEM_PORT) + 1U;
  }
  else 
       #line 98 
       mlxsw_core->max_ports = 65U;
  #line 100 
  mlxsw_core->ports = (struct mlxsw_core_port *)kcalloc((unsigned long)mlxsw_core->max_ports,392UL,3264U);
  #line 102 
  if (mlxsw_core->ports == (struct mlxsw_core_port *)0) 
                                                        #line 103 
                                                        return -12;
  #line 105 
  return 0;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_ports_fini(struct mlxsw_core *mlxsw_core)
{
  #line 110 
  kfree((void *)mlxsw_core->ports);
  #line 111 
  return;
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
unsigned int mlxsw_core_max_ports(struct mlxsw_core *mlxsw_core)
{
  #line 115 
  return mlxsw_core->max_ports;
}

#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void *mlxsw_core_driver_priv(struct mlxsw_core *mlxsw_core)
{
  #line 121 
  return (void *)(& mlxsw_core->driver_priv);
}

#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_res_query_enabled(struct mlxsw_core *mlxsw_core)
{
  #line 127 
  return (mlxsw_core->driver)->res_query_enabled;
}

#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_fw_rev_minor_subminor_validate(struct mlxsw_fw_rev *rev, struct mlxsw_fw_rev *req_rev)
{
  #line 135 
  return (_Bool)(((int)rev->minor > (int)req_rev->minor || (int)rev->minor == (int)req_rev->minor && (int)rev->subminor >= (int)req_rev->subminor) != 0);
}

#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_eth_hdr_dmac_item = {.size = {.bytes = (unsigned short)6U}, .name = (char *)"emad"};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_eth_hdr_dmac_memcpy_to(char *buf, char *src)
{
  #line 161 
  __mlxsw_item_memcpy_to(buf,src,& mlxsw_emad_eth_hdr_dmac_item,(unsigned short)0);
  #line 162 
  return;
}

#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_eth_hdr_smac_item = {.offset = (unsigned short)6U, .size = {.bytes = (unsigned short)6U}, .name = (char *)"emad"};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_eth_hdr_smac_memcpy_to(char *buf, char *src)
{
  #line 167 
  __mlxsw_item_memcpy_to(buf,src,& mlxsw_emad_eth_hdr_smac_item,(unsigned short)0);
  #line 168 
  return;
}

#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_eth_hdr_ethertype_item = {.offset = (unsigned short)12U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"emad"};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_eth_hdr_ethertype_set(char *buf, u32 val)
{
  #line 173 
  __mlxsw_item_set32(buf,& mlxsw_emad_eth_hdr_ethertype_item,(unsigned short)0,val);
  #line 174 
  return;
}

#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_eth_hdr_mlx_proto_item = {.offset = (unsigned short)12U, .shift = (unsigned char)8U, .size = {.bits = (unsigned char)8U}, .name = (char *)"emad"};
#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_eth_hdr_mlx_proto_set(char *buf, u32 val)
{
  #line 179 
  __mlxsw_item_set32(buf,& mlxsw_emad_eth_hdr_mlx_proto_item,(unsigned short)0,val);
  #line 180 
  return;
}

#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_eth_hdr_ver_item = {.offset = (unsigned short)12U, .shift = (unsigned char)4U, .size = {.bits = (unsigned char)4U}, .name = (char *)"emad"};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_eth_hdr_ver_set(char *buf, u32 val)
{
  #line 185 
  __mlxsw_item_set32(buf,& mlxsw_emad_eth_hdr_ver_item,(unsigned short)0,val);
  #line 186 
  return;
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_type_item = {.shift = (unsigned char)27U, .size = {.bits = (unsigned char)5U}, .name = (char *)"emad"};
#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_type_set(char *buf, u32 val)
{
  #line 191 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_type_item,(unsigned short)0,val);
  #line 192 
  return;
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_len_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)11U}, .name = (char *)"emad"};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_len_set(char *buf, u32 val)
{
  #line 197 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_len_item,(unsigned short)0,val);
  #line 198 
  return;
}

#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_dr_item = {.shift = (unsigned char)15U, .size = {.bits = (unsigned char)1U}, .name = (char *)"emad"};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_dr_set(char *buf, u32 val)
{
  #line 205 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_dr_item,(unsigned short)0,val);
  #line 206 
  return;
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_status_item = {.shift = (unsigned char)8U, .size = {.bits = (unsigned char)7U}, .name = (char *)"emad"};
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static u32 mlxsw_emad_op_tlv_status_get(char *buf)
{
  #line 222 
  return __mlxsw_item_get32(buf,& mlxsw_emad_op_tlv_status_item,
                         (unsigned short)0);
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_status_set(char *buf, u32 val)
{
  #line 222 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_status_item,(unsigned short)0,val);
  #line 223 
  return;
}

#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_register_id_item = {.offset = (unsigned short)4U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"emad"};
#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static u32 mlxsw_emad_op_tlv_register_id_get(char *buf)
{
  #line 227 
  return __mlxsw_item_get32(buf,& mlxsw_emad_op_tlv_register_id_item,
                         (unsigned short)0);
}

#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_register_id_set(char *buf, u32 val)
{
  #line 227 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_register_id_item,(unsigned short)0,val);
  #line 228 
  return;
}

#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_r_item = {.offset = (unsigned short)4U, .shift = (unsigned char)15U, .size = {.bits = (unsigned char)1U}, .name = (char *)"emad"};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static u32 mlxsw_emad_op_tlv_r_get(char *buf)
{
  #line 232 
  return __mlxsw_item_get32(buf,& mlxsw_emad_op_tlv_r_item,(unsigned short)0);
}

#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_r_set(char *buf, u32 val)
{
  #line 232 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_r_item,(unsigned short)0,val);
  #line 233 
  return;
}

#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_method_item = {.offset = (unsigned short)4U, .shift = (unsigned char)8U, .size = {.bits = (unsigned char)7U}, .name = (char *)"emad"};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_method_set(char *buf, u32 val)
{
  #line 241 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_method_item,(unsigned short)0,val);
  #line 242 
  return;
}

#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_class_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)8U}, .name = (char *)"emad"};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_class_set(char *buf, u32 val)
{
  #line 246 
  __mlxsw_item_set32(buf,& mlxsw_emad_op_tlv_class_item,(unsigned short)0,val);
  #line 247 
  return;
}

#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_op_tlv_tid_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)64U}, .name = (char *)"emad"};
#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static u64 mlxsw_emad_op_tlv_tid_get(char *buf)
{
  #line 251 
  return __mlxsw_item_get64(buf,& mlxsw_emad_op_tlv_tid_item,(unsigned short)0);
}

#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_op_tlv_tid_set(char *buf, u64 val)
{
  #line 251 
  __mlxsw_item_set64(buf,& mlxsw_emad_op_tlv_tid_item,(unsigned short)0,val);
  #line 252 
  return;
}

#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_string_tlv_type_item = {.shift = (unsigned char)27U, .size = {.bits = (unsigned char)5U}, .name = (char *)"emad"};
#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static u32 mlxsw_emad_string_tlv_type_get(char *buf)
{
  #line 257 
  return __mlxsw_item_get32(buf,& mlxsw_emad_string_tlv_type_item,
                         (unsigned short)0);
}

#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_string_tlv_type_set(char *buf, u32 val)
{
  #line 257 
  __mlxsw_item_set32(buf,& mlxsw_emad_string_tlv_type_item,(unsigned short)0,val);
  #line 258 
  return;
}

#line 262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_string_tlv_len_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)11U}, .name = (char *)"emad"};
#line 262  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_string_tlv_len_set(char *buf, u32 val)
{
  #line 262 
  __mlxsw_item_set32(buf,& mlxsw_emad_string_tlv_len_item,(unsigned short)0,val);
  #line 263 
  return;
}

#line 269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_string_tlv_string_item = {.offset = (unsigned short)4U, .size = {.bytes = (unsigned short)128U}, .name = (char *)"emad"};
#line 269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static char *mlxsw_emad_string_tlv_string_data(char *buf)
{
  #line 269 
  return __mlxsw_item_data(buf,& mlxsw_emad_string_tlv_string_item,
                        (unsigned short)0);
}

#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_reg_tlv_type_item = {.shift = (unsigned char)27U, .size = {.bits = (unsigned char)5U}, .name = (char *)"emad"};
#line 276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_reg_tlv_type_set(char *buf, u32 val)
{
  #line 276 
  __mlxsw_item_set32(buf,& mlxsw_emad_reg_tlv_type_item,(unsigned short)0,val);
  #line 277 
  return;
}

#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_reg_tlv_len_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)11U}, .name = (char *)"emad"};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static u32 mlxsw_emad_reg_tlv_len_get(char *buf)
{
  #line 281 
  return __mlxsw_item_get32(buf,& mlxsw_emad_reg_tlv_len_item,(unsigned short)0);
}

#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_reg_tlv_len_set(char *buf, u32 val)
{
  #line 281 
  __mlxsw_item_set32(buf,& mlxsw_emad_reg_tlv_len_item,(unsigned short)0,val);
  #line 282 
  return;
}

#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_end_tlv_type_item = {.shift = (unsigned char)27U, .size = {.bits = (unsigned char)5U}, .name = (char *)"emad"};
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_end_tlv_type_set(char *buf, u32 val)
{
  #line 287 
  __mlxsw_item_set32(buf,& mlxsw_emad_end_tlv_type_item,(unsigned short)0,val);
  #line 288 
  return;
}

#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_item mlxsw_emad_end_tlv_len_item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)11U}, .name = (char *)"emad"};
#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static void mlxsw_emad_end_tlv_len_set(char *buf, u32 val)
{
  #line 293 
  __mlxsw_item_set32(buf,& mlxsw_emad_end_tlv_len_item,(unsigned short)0,val);
  #line 294 
  return;
}

#line 301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
__inline static char *mlxsw_core_reg_access_type_str(enum mlxsw_core_reg_access_type type)
{
  #line 303 
  switch ((unsigned int)type) {
    #line 304 
    case (unsigned int)0: 
                          #line 304 
    ;
    #line 305 
    return (char *)"query";
    #line 306 
    case (unsigned int)1: 
                          #line 306 
    ;
    #line 307 
    return (char *)"write";
  }
  #line 310 
  ldv_inline_asm();
  #line 311 
  ldv_inline_asm();
  #line 312 
  ldv_inline_asm();
  #line 309 
  ;
  #line 312 
  ;
  #line 312 
  return (char *)0;
}

#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_pack_end_tlv(char *end_tlv)
{
  #line 314 
  mlxsw_emad_end_tlv_type_set(end_tlv,0U);
  #line 315 
  mlxsw_emad_end_tlv_len_set(end_tlv,1U);
  #line 316 
  return;
}

#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_pack_reg_tlv(char *reg_tlv, struct mlxsw_reg_info *reg, char *payload)
{
  #line 322 
  mlxsw_emad_reg_tlv_type_set(reg_tlv,3U);
  #line 323 
  mlxsw_emad_reg_tlv_len_set(reg_tlv,(unsigned int)reg->len / 4U + 1U);
  #line 324 
  memcpy((void *)(reg_tlv + 4UL),(void *)payload,(unsigned long)reg->len);
  #line 325 
  return;
}

#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_pack_string_tlv(char *string_tlv)
{
  #line 329 
  mlxsw_emad_string_tlv_type_set(string_tlv,2U);
  #line 330 
  mlxsw_emad_string_tlv_len_set(string_tlv,33U);
  #line 331 
  return;
}

#line 333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_pack_op_tlv(char *op_tlv, struct mlxsw_reg_info *reg, enum mlxsw_core_reg_access_type type, u64 tid)
{
  #line 338 
  mlxsw_emad_op_tlv_type_set(op_tlv,1U);
  #line 339 
  mlxsw_emad_op_tlv_len_set(op_tlv,4U);
  #line 340 
  mlxsw_emad_op_tlv_dr_set(op_tlv,0U);
  #line 341 
  mlxsw_emad_op_tlv_status_set(op_tlv,0U);
  #line 342 
  mlxsw_emad_op_tlv_register_id_set(op_tlv,(unsigned int)reg->id);
  #line 343 
  mlxsw_emad_op_tlv_r_set(op_tlv,0U);
  #line 344 
  if (type == (unsigned int)MLXSW_CORE_REG_ACCESS_TYPE_QUERY) 
                                                              #line 345 
                                                              mlxsw_emad_op_tlv_method_set(op_tlv,1U); else 
                                                                    #line 348 
                                                                    mlxsw_emad_op_tlv_method_set(op_tlv,2U);
  #line 350 
  mlxsw_emad_op_tlv_class_set(op_tlv,1U);
  #line 352 
  mlxsw_emad_op_tlv_tid_set(op_tlv,tid);
  #line 353 
  return;
}

#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_emad_construct_eth_hdr(struct sk_buff *skb)
{
  #line 357 
  char *eth_hdr = skb_push(skb,16U);
  #line 359 
  mlxsw_emad_eth_hdr_dmac_memcpy_to(eth_hdr,(char *)"\001\002\311\000\000\001");
  #line 360 
  mlxsw_emad_eth_hdr_smac_memcpy_to(eth_hdr,(char *)"\000\002\311\001\002\003");
  #line 361 
  mlxsw_emad_eth_hdr_ethertype_set(eth_hdr,35122U);
  #line 362 
  mlxsw_emad_eth_hdr_mlx_proto_set(eth_hdr,0U);
  #line 363 
  mlxsw_emad_eth_hdr_ver_set(eth_hdr,0U);
  #line 365 
  skb_reset_mac_header(skb);
  #line 367 
  return 0;
}

#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_construct(struct sk_buff *skb, struct mlxsw_reg_info *reg, char *payload, enum mlxsw_core_reg_access_type type, u64 tid, bool enable_string_tlv)
{
  #line 376 
  char *buf;
  #line 378 
  buf = (char *)skb_push(skb,4U);
  #line 379 
  mlxsw_emad_pack_end_tlv(buf);
  #line 381 
  buf = (char *)skb_push(skb,(unsigned int)reg->len + 4U);
  #line 382 
  mlxsw_emad_pack_reg_tlv(buf,reg,payload);
  #line 384 
  if ((int)enable_string_tlv != 0) {
    #line 385 
    buf = (char *)skb_push(skb,132U);
    #line 386 
    mlxsw_emad_pack_string_tlv(buf);
  }
  #line 389 
  buf = (char *)skb_push(skb,16U);
  #line 390 
  mlxsw_emad_pack_op_tlv(buf,reg,type,tid);
  #line 392 
  mlxsw_emad_construct_eth_hdr(skb);
  #line 393 
  return;
}

#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static bool mlxsw_emad_tlv_is_string_tlv(char *tlv)
{
  #line 403 
  u8 tlv_type = (unsigned char)mlxsw_emad_string_tlv_type_get(tlv);
  #line 405 
  return (_Bool)((unsigned int)tlv_type == 2U);
}

#line 408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_tlv_parse(struct sk_buff *skb)
{
  #line 410 
  struct mlxsw_emad_tlv_offsets *offsets = (struct mlxsw_emad_tlv_offsets *)(& skb->cb);
  #line 413 
  offsets->op_tlv = (unsigned short)16U;
  #line 414 
  offsets->string_tlv = (unsigned short)0U;
  #line 415 
  offsets->reg_tlv = (unsigned short)32U;
  #line 419 
  if ((int)mlxsw_emad_tlv_is_string_tlv((char *)(skb->data + (unsigned long)offsets->reg_tlv)) != 0) {
    #line 420 
    offsets->string_tlv = offsets->reg_tlv;
    #line 421 
    offsets->reg_tlv = (unsigned short)((unsigned int)offsets->reg_tlv + 132U);
  }
  #line 423 
  return;
}

#line 425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static char *mlxsw_emad_op_tlv(struct sk_buff *skb)
{
  #line 427 
  struct mlxsw_emad_tlv_offsets *offsets = (struct mlxsw_emad_tlv_offsets *)(& skb->cb);
  #line 430 
  return (char *)(skb->data + (unsigned long)offsets->op_tlv);
}

#line 433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static char *mlxsw_emad_string_tlv(struct sk_buff *skb)
{
  #line 435 
  struct mlxsw_emad_tlv_offsets *offsets = (struct mlxsw_emad_tlv_offsets *)(& skb->cb);
  #line 438 
  if ((unsigned int)offsets->string_tlv == 0U) 
                                               #line 439 
                                               return (char *)0;
  #line 441 
  return (char *)(skb->data + (unsigned long)offsets->string_tlv);
}

#line 444  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static char *mlxsw_emad_reg_tlv(struct sk_buff *skb)
{
  #line 446 
  struct mlxsw_emad_tlv_offsets *offsets = (struct mlxsw_emad_tlv_offsets *)(& skb->cb);
  #line 449 
  return (char *)(skb->data + (unsigned long)offsets->reg_tlv);
}

#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static char *mlxsw_emad_reg_payload(char *reg_tlv)
{
  #line 454 
  return reg_tlv + 4UL;
}

#line 457  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static char *mlxsw_emad_reg_payload_cmd(char *mbox)
{
  #line 459 
  return mbox + 20UL;
}

#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static u64 mlxsw_emad_get_tid(struct sk_buff *skb)
{
  #line 464 
  char *op_tlv;
  #line 466 
  op_tlv = mlxsw_emad_op_tlv(skb);
  #line 467 
  return mlxsw_emad_op_tlv_tid_get(op_tlv);
}

#line 470  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static bool mlxsw_emad_is_resp(struct sk_buff *skb)
{
  #line 472 
  char *op_tlv;
  #line 474 
  op_tlv = mlxsw_emad_op_tlv(skb);
  #line 475 
  return (_Bool)(mlxsw_emad_op_tlv_r_get(op_tlv) == 1U);
}

#line 478  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_emad_process_status(char *op_tlv, enum mlxsw_emad_op_tlv_status *p_status)
{
  #line 481 
  *p_status = (enum mlxsw_emad_op_tlv_status)mlxsw_emad_op_tlv_status_get(op_tlv);
  #line 483 
  switch ((unsigned int)*p_status) {
    #line 484 
    case (unsigned int)0: 
                          #line 484 
    ;
    #line 485 
    return 0;
    #line 486 
    case (unsigned int)1: 
                          #line 486 
    ;
    #line 487 
    case (unsigned int)9: 
                          #line 487 
    ;
    #line 488 
    return -11;
    #line 489 
    case (unsigned int)2: 
                          #line 489 
    ;
    #line 490 
    case (unsigned int)3: 
                          #line 490 
    ;
    #line 491 
    case (unsigned int)4: 
                          #line 491 
    ;
    #line 492 
    case (unsigned int)5: 
                          #line 492 
    ;
    #line 493 
    case (unsigned int)6: 
                          #line 493 
    ;
    #line 494 
    case (unsigned int)7: 
                          #line 494 
    ;
    #line 495 
    case (unsigned int)8: 
                          #line 495 
    ;
    #line 496 
    case (unsigned int)112: 
                            #line 496 
    ;
    #line 497 
    default: 
             #line 497 
    ;
    #line 498 
    return -5;
  }
}

#line 503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_emad_process_status_skb(struct sk_buff *skb, enum mlxsw_emad_op_tlv_status *p_status)
{
  #line 506 
  ;
  #line 506 
  return mlxsw_emad_process_status(mlxsw_emad_op_tlv(skb),p_status);
}

#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_process_string_tlv(struct sk_buff *skb, struct mlxsw_reg_trans *trans)
{
  #line 533 
  char *string_tlv;
  #line 534 
  char *string;
  #line 536 
  string_tlv = mlxsw_emad_string_tlv(skb);
  #line 537 
  if (string_tlv == (char *)0) 
                               #line 538 
                               return;
  #line 540 
  trans->emad_err_string = (char *)kzalloc_0(128UL,2592U);
  #line 542 
  if (trans->emad_err_string == (char *)0) 
                                           #line 543 
                                           return;
  #line 545 
  string = mlxsw_emad_string_tlv_string_data(string_tlv);
  #line 546 
  strlcpy(trans->emad_err_string,string,128UL);
  #line 547 
  return;
}

#line 553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_trans_timeout_schedule(struct mlxsw_reg_trans *trans)
{
  #line 555 
  unsigned long timeout = msecs_to_jiffies(200U);
  #line 557 
  if ((int)(trans->core)->fw_flash_in_progress != 0) 
                                                     #line 558 
                                                     timeout = msecs_to_jiffies(3000U);
  #line 560 
  cif_queue_delayed_work((trans->core)->emad_wq,& trans->timeout_dw,timeout);
  #line 561 
  return;
}

#line 563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_emad_transmit(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_trans *trans)
{
  #line 566 
  struct sk_buff *skb;
  #line 567 
  int err;
  #line 569 
  skb = skb_copy(trans->tx_skb,3264U);
  #line 570 
  if (skb == (struct sk_buff *)0) 
                                  #line 571 
                                  return -12;
  #line 573 
  ;
  #line 573 
  ;
  #line 573 
  trace_devlink_hwmsg(priv_to_devlink((void *)mlxsw_core),(_Bool)0,0UL,skb->data + (unsigned long)(mlxsw_core->driver)->txhdr_len,(unsigned long)(skb->len - (unsigned int)(mlxsw_core->driver)->txhdr_len));
  #line 577 
  atomic_set(& trans->active,1);
  #line 578 
  err = mlxsw_core_skb_transmit(mlxsw_core,skb,& trans->tx_info);
  #line 579 
  if (err != 0) {
    #line 580 
    consume_skb(skb);
    #line 581 
    return err;
  }
  #line 583 
  mlxsw_emad_trans_timeout_schedule(trans);
  #line 584 
  return 0;
}

#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_trans_finish(struct mlxsw_reg_trans *trans, int err)
{
  #line 589 
  struct mlxsw_core *mlxsw_core = trans->core;
  #line 591 
  consume_skb(trans->tx_skb);
  #line 592 
  cif_spin_lock_bh_trans_list_lock_of_NOT_ARG_SIGN(& mlxsw_core->emad.trans_list_lock);
  #line 593 
  list_del_rcu(& trans->list);
  #line 594 
  cif_spin_unlock_bh_trans_list_lock_of_NOT_ARG_SIGN(& mlxsw_core->emad.trans_list_lock);
  #line 595 
  trans->err = err;
  #line 596 
  complete(& trans->completion);
  #line 597 
  return;
}

#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_transmit_retry(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_trans *trans)
{
  #line 602 
  int err;
  #line 604 
  if (trans->retries <= 4U) {
    #line 605 
    (trans->retries) ++;
    #line 606 
    err = mlxsw_emad_transmit(trans->core,trans);
    #line 607 
    if (err == 0) 
                  #line 608 
                  return;
  }
  else 
       #line 610 
       err = -5;
  #line 612 
  mlxsw_emad_trans_finish(trans,err);
  #line 613 
  return;
}

#line 615  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_trans_timeout_work(struct work_struct *work)
{
  #line 617 
  void *__mptr;
  #line 617 
  __mptr = (void *)work;
  #line 617 
  struct mlxsw_reg_trans *trans = ((struct mlxsw_reg_trans *)(__mptr + 18446744073709551560U));
  #line 621 
  if (! atomic_dec_and_test(& trans->active)) 
                                              #line 622 
                                              return;
  #line 624 
  mlxsw_emad_transmit_retry(trans->core,trans);
  #line 625 
  return;
}

#line 627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_process_response(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_trans *trans, struct sk_buff *skb)
{
  #line 631 
  int err;
  #line 633 
  if (! atomic_dec_and_test(& trans->active)) 
                                              #line 634 
                                              return;
  #line 636 
  err = mlxsw_emad_process_status_skb(skb,& trans->emad_status);
  #line 637 
  if (err == -11) 
                  #line 638 
                  mlxsw_emad_transmit_retry(mlxsw_core,trans);
  else {
    #line 640 
    if (err == 0) {
      #line 641 
      char *reg_tlv = mlxsw_emad_reg_tlv(skb);
      #line 643 
      if (trans->cb != (mlxsw_reg_trans_cb_t *)0) {
        #line 644 
        ;
        #line 644 
        ;
        #line 644 
        ;
        #line 644 
        (*(trans->cb))(mlxsw_core,mlxsw_emad_reg_payload(reg_tlv),(unsigned long)(trans->reg)->len,trans->cb_priv);
      }
    }
    else 
         #line 648 
         mlxsw_emad_process_string_tlv(skb,trans);
    #line 650 
    mlxsw_emad_trans_finish(trans,err);
  }
  #line 652 
  return;
}

#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_rx_listener_func(struct sk_buff *skb, u8 local_port, void *priv)
{
  #line 669 
  void *__mptr;
  #line 659 
  struct mlxsw_reg_trans *trans;
  #line 658 
  struct mlxsw_core *mlxsw_core = (struct mlxsw_core *)priv;
  #line 661 
  ;
  #line 661 
  ;
  #line 661 
  trace_devlink_hwmsg(priv_to_devlink((void *)mlxsw_core),(_Bool)1,0UL,skb->data,(unsigned long)skb->len);
  #line 664 
  mlxsw_emad_tlv_parse(skb);
  #line 666 
  if (! mlxsw_emad_is_resp(skb)) 
                                 #line 667 
                                 goto free_skb;
  {
    #line 669 
    bool __warned;
    #line 669 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 669 
      if (! __warned) {
        #line 669 
        if (rcu_read_lock_any_held() == 0) {
          #line 669 
          __warned = (_Bool)1;
          #line 669 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c",669,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 670 
    union __anonunion___u_2155 __u;
    #line 669 
    __read_once_size((void *)(& mlxsw_core->emad.trans_list.next),(void *)(& __u.__c),8);
    #line 669 
    __mptr = (void *)(__u.__val);
    }
  #line 672 
  trans = ((struct mlxsw_reg_trans *)__mptr);
  #line 669 
  while (& trans->list != & mlxsw_core->emad.trans_list) {
    #line 669 
    void *__mptr_0;
    #line 670 
    ;
    #line 670 
    if (mlxsw_emad_get_tid(skb) == trans->tid) {
      #line 671 
      mlxsw_emad_process_response(mlxsw_core,trans,skb);
      #line 672 
      break;
    }
    {
      #line 670 
      union __anonunion___u_2157 __u_0;
      #line 669 
      __read_once_size((void *)(& trans->list.next),(void *)(& __u_0.__c),8);
      #line 669 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 669 
    trans = ((struct mlxsw_reg_trans *)__mptr_0);
  }
  #line 676 
  free_skb: 
            #line 676 
  ;
  #line 677 
  consume_skb(skb);
  #line 678 
  return;
}

#line 680  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_listener mlxsw_emad_rx_listener = {.trap_id = (unsigned short)5U, .u = {.rx_listener = {.func = & mlxsw_emad_rx_listener_func, .local_port = (unsigned char)255U, .trap_id = (unsigned short)5U}}, .action = MLXSW_REG_HPKT_ACTION_TRAP_TO_CPU, .unreg_action = MLXSW_REG_HPKT_ACTION_DISCARD};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_emad_init(struct mlxsw_core *mlxsw_core)
{
  #line 686 
  struct workqueue_struct *emad_wq;
  #line 687 
  u64 tid;
  #line 688 
  int err;
  #line 690 
  if (((unsigned long)(mlxsw_core->bus)->features & 1UL) == 0UL) 
                                                                 #line 691 
                                                                 return 0;
  #line 693 
  emad_wq = alloc_workqueue((char *)"mlxsw_core_emad",0U,0);
  #line 694 
  if (emad_wq == (struct workqueue_struct *)0) 
                                               #line 695 
                                               return -12;
  #line 696 
  mlxsw_core->emad_wq = emad_wq;
  #line 702 
  get_random_bytes((void *)(& tid),4);
  #line 703 
  tid <<= 32;
  #line 704 
  atomic64_set(& mlxsw_core->emad.tid,(long long)tid);
  #line 706 
  INIT_LIST_HEAD(& mlxsw_core->emad.trans_list);
  #line 707 
  spinlock_check(& mlxsw_core->emad.trans_list_lock);
  {
    #line 707 
    struct lock_class_key __key;
    #line 707 
    __raw_spin_lock_init(& mlxsw_core->emad.trans_list_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&mlxsw_core->emad.trans_list_lock)->rlock",& __key);
  }
  #line 709 
  err = mlxsw_core_trap_register(mlxsw_core,& mlxsw_emad_rx_listener,(void *)mlxsw_core);
  #line 711 
  if (err != 0) 
                #line 712 
                return err;
  #line 714 
  err = (*((mlxsw_core->driver)->basic_trap_groups_set))(mlxsw_core);
  #line 715 
  if (err != 0) 
                #line 716 
                goto err_emad_trap_set;
  #line 717 
  mlxsw_core->emad.use_emad = (_Bool)1;
  #line 719 
  return 0;
  #line 721 
  err_emad_trap_set: 
                     #line 721 
  ;
  #line 722 
  mlxsw_core_trap_unregister(mlxsw_core,& mlxsw_emad_rx_listener,(void *)mlxsw_core);
  #line 724 
  destroy_workqueue(mlxsw_core->emad_wq);
  #line 725 
  return err;
}

#line 728  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_emad_fini(struct mlxsw_core *mlxsw_core)
{
  #line 731 
  if (((unsigned long)(mlxsw_core->bus)->features & 1UL) == 0UL) 
                                                                 #line 732 
                                                                 return;
  #line 734 
  mlxsw_core->emad.use_emad = (_Bool)0;
  #line 735 
  mlxsw_core_trap_unregister(mlxsw_core,& mlxsw_emad_rx_listener,(void *)mlxsw_core);
  #line 737 
  destroy_workqueue(mlxsw_core->emad_wq);
  #line 738 
  return;
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct sk_buff *mlxsw_emad_alloc(struct mlxsw_core *mlxsw_core, u16 reg_len, bool enable_string_tlv)
{
  #line 743 
  struct sk_buff *skb;
  #line 744 
  u16 emad_len;
  #line 746 
  emad_len = (unsigned short)((unsigned int)((int)((unsigned short)(mlxsw_core->driver)->txhdr_len) + (int)reg_len) + 40U);
  #line 749 
  if ((int)enable_string_tlv != 0) 
                                   #line 750 
                                   emad_len = (unsigned short)((unsigned int)emad_len + 132U);
  #line 751 
  if ((unsigned int)emad_len > 1518U) 
                                      #line 752 
                                      return (struct sk_buff *)0;
  #line 754 
  skb = netdev_alloc_skb((struct net_device *)0,(unsigned int)emad_len);
  #line 755 
  if (skb == (struct sk_buff *)0) 
                                  #line 756 
                                  return (struct sk_buff *)0;
  #line 757 
  memset((void *)skb->data,0,(unsigned long)emad_len);
  #line 758 
  skb_reserve(skb,(int)emad_len);
  #line 760 
  return skb;
}

#line 763  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_emad_reg_access(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, enum mlxsw_core_reg_access_type type, struct mlxsw_reg_trans *trans, struct list_head *bulk_list, mlxsw_reg_trans_cb_t *cb, unsigned long cb_priv, u64 tid)
{
  #line 772 
  bool enable_string_tlv;
  #line 773 
  struct sk_buff *skb;
  #line 774 
  int err;
  {
    #line 776 
    bool branch;
    #line 776 
    struct _ddebug __UNIQUE_ID_ddebug455 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_emad_reg_access", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"EMAD reg access (tid=%llx,reg_id=%x(%s),type=%s)\n", .lineno = (unsigned int)776U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 776 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug455.key.dd_key_false.key,(_Bool)0);
    #line 776 
    if ((long)((long)((int)branch != 0)) != 0L) {
      #line 776 
      ;
      #line 776 
      ;
      #line 776 
      ;
      #line 776 
      __dynamic_dev_dbg(& __UNIQUE_ID_ddebug455,(mlxsw_core->bus_info)->dev,(char *)"EMAD reg access (tid=%llx,reg_id=%x(%s),type=%s)\n",tid,(int)reg->id,mlxsw_reg_id_str((unsigned short)((int)reg->id)),mlxsw_core_reg_access_type_str(type));
    }
  }
  #line 783 
  enable_string_tlv = mlxsw_core->emad.enable_string_tlv;
  #line 785 
  skb = mlxsw_emad_alloc(mlxsw_core,(unsigned short)((int)reg->len),(_Bool)((bool)((int)enable_string_tlv) != 0));
  #line 786 
  if (skb == (struct sk_buff *)0) 
                                  #line 787 
                                  return -12;
  #line 789 
  list_add_tail(& trans->bulk_list,bulk_list);
  #line 790 
  trans->core = mlxsw_core;
  #line 791 
  trans->tx_skb = skb;
  #line 792 
  trans->tx_info.local_port = (unsigned char)0U;
  #line 793 
  trans->tx_info.is_emad = (_Bool)1;
  {
    #line 794 
    struct lock_class_key __key;
    #line 794 
    __init_work(& trans->timeout_dw.work,0);
    #line 794 
    atomic_long_t __constr_expr_34 = {.counter = 137438953408LL};
    #line 794 
    trans->timeout_dw.work.data = __constr_expr_34;
    #line 794 
    lockdep_init_map(& trans->timeout_dw.work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 794 
    INIT_LIST_HEAD(& trans->timeout_dw.work.entry);
    #line 794 
    trans->timeout_dw.work.func = & mlxsw_emad_trans_timeout_work;
  }
  {
    #line 794 
    struct lock_class_key __key_0;
    #line 794 
    init_timer_key(& trans->timeout_dw.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&trans->timeout_dw)->timer",& __key_0);
  }
  #line 795 
  trans->tid = tid;
  #line 796 
  __init_completion(& trans->completion);
  #line 797 
  trans->cb = cb;
  #line 798 
  trans->cb_priv = cb_priv;
  #line 799 
  trans->reg = reg;
  #line 800 
  trans->type = type;
  #line 802 
  mlxsw_emad_construct(skb,reg,payload,type,trans->tid,(_Bool)((bool)((int)enable_string_tlv) != 0));
  #line 804 
  (*((mlxsw_core->driver)->txhdr_construct))(skb,& trans->tx_info);
  #line 806 
  cif_spin_lock_bh_trans_list_lock_of_NOT_ARG_SIGN(& mlxsw_core->emad.trans_list_lock);
  #line 807 
  list_add_tail_rcu(& trans->list,& mlxsw_core->emad.trans_list);
  #line 808 
  cif_spin_unlock_bh_trans_list_lock_of_NOT_ARG_SIGN(& mlxsw_core->emad.trans_list_lock);
  #line 809 
  err = mlxsw_emad_transmit(mlxsw_core,trans);
  #line 810 
  if (err != 0) 
                #line 811 
                goto err_out;
  #line 812 
  return 0;
  #line 814 
  err_out: 
           #line 814 
  ;
  #line 815 
  cif_spin_lock_bh_trans_list_lock_of_NOT_ARG_SIGN(& mlxsw_core->emad.trans_list_lock);
  #line 816 
  list_del_rcu(& trans->list);
  #line 817 
  cif_spin_unlock_bh_trans_list_lock_of_NOT_ARG_SIGN(& mlxsw_core->emad.trans_list_lock);
  #line 818 
  list_del(& trans->bulk_list);
  #line 819 
  consume_skb(trans->tx_skb);
  #line 820 
  return err;
}

#line 827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_driver_register(struct mlxsw_driver *mlxsw_driver)
{
  #line 829 
  cif_spin_lock_mlxsw_core_driver_list_lock(& mlxsw_core_driver_list_lock);
  #line 830 
  list_add_tail(& mlxsw_driver->list,& mlxsw_core_driver_list);
  #line 831 
  cif_spin_unlock_mlxsw_core_driver_list_lock(& mlxsw_core_driver_list_lock);
  #line 832 
  return 0;
}

#line 836  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_driver_unregister(struct mlxsw_driver *mlxsw_driver)
{
  #line 838 
  cif_spin_lock_mlxsw_core_driver_list_lock(& mlxsw_core_driver_list_lock);
  #line 839 
  list_del(& mlxsw_driver->list);
  #line 840 
  cif_spin_unlock_mlxsw_core_driver_list_lock(& mlxsw_core_driver_list_lock);
  #line 841 
  return;
}

#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_driver *__driver_find(char *kind)
{
  #line 848 
  void *__mptr;
  #line 846 
  struct mlxsw_driver *mlxsw_driver;
  #line 848 
  __mptr = (void *)mlxsw_core_driver_list.next;
  #line 848 
  mlxsw_driver = ((struct mlxsw_driver *)__mptr);
  #line 848 
  while (& mlxsw_driver->list != & mlxsw_core_driver_list) {
    #line 848 
    void *__mptr_0;
    #line 849 
    if (cif_strcmp(mlxsw_driver->kind,kind) == 0) 
                                                  #line 850 
                                                  return mlxsw_driver;
    #line 848 
    __mptr_0 = (void *)mlxsw_driver->list.next;
    #line 848 
    mlxsw_driver = ((struct mlxsw_driver *)__mptr_0);
  }
  #line 852 
  return (struct mlxsw_driver *)0;
}

#line 855  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_driver *mlxsw_core_driver_get(char *kind)
{
  #line 857 
  struct mlxsw_driver *mlxsw_driver;
  #line 859 
  cif_spin_lock_mlxsw_core_driver_list_lock(& mlxsw_core_driver_list_lock);
  #line 860 
  mlxsw_driver = __driver_find(kind);
  #line 861 
  cif_spin_unlock_mlxsw_core_driver_list_lock(& mlxsw_core_driver_list_lock);
  #line 862 
  return mlxsw_driver;
}

#line 865  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_port_split(struct devlink *devlink, unsigned int port_index, unsigned int count, struct netlink_ext_ack *extack)
{
  #line 870 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 872 
  if (mlxsw_core->max_ports <= port_index) {
    {
      #line 873 
      char __msg[55U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 873 
      struct netlink_ext_ack *__extack = extack;
      #line 873 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 873 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 874 
    return -22;
  }
  #line 876 
  if ((mlxsw_core->driver)->port_split == (int (*)(struct mlxsw_core *, u8 , unsigned int , struct netlink_ext_ack *))0) 
    #line 877 
    return -95;
  #line 878 
  return (*((mlxsw_core->driver)->port_split))(mlxsw_core,
                                              (unsigned char)((int)((unsigned char)port_index)),
                                              count,extack);
}

#line 882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_port_unsplit(struct devlink *devlink, unsigned int port_index, struct netlink_ext_ack *extack)
{
  #line 886 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 888 
  if (mlxsw_core->max_ports <= port_index) {
    {
      #line 889 
      char __msg[55U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 889 
      struct netlink_ext_ack *__extack = extack;
      #line 889 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 889 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 890 
    return -22;
  }
  #line 892 
  if ((mlxsw_core->driver)->port_unsplit == (int (*)(struct mlxsw_core *, u8 , struct netlink_ext_ack *))0) 
    #line 893 
    return -95;
  #line 894 
  return (*((mlxsw_core->driver)->port_unsplit))(mlxsw_core,
                                                (unsigned char)((int)((unsigned char)port_index)),
                                                extack);
}

#line 899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_pool_get(struct devlink *devlink, unsigned int sb_index, u16 pool_index, struct devlink_sb_pool_info *pool_info)
{
  #line 903 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 904 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 906 
  if (mlxsw_driver->sb_pool_get == (int (*)(struct mlxsw_core *, unsigned int , u16 , struct devlink_sb_pool_info *))0) 
    #line 907 
    return -95;
  #line 908 
  return (*(mlxsw_driver->sb_pool_get))(mlxsw_core,sb_index,
                                       (unsigned short)((int)pool_index),
                                       pool_info);
}

#line 913  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_pool_set(struct devlink *devlink, unsigned int sb_index, u16 pool_index, u32 size, enum devlink_sb_threshold_type threshold_type, struct netlink_ext_ack *extack)
{
  #line 918 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 919 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 921 
  if (mlxsw_driver->sb_pool_set == (int (*)(struct mlxsw_core *, unsigned int , u16 , u32 , enum devlink_sb_threshold_type , struct netlink_ext_ack *))0) 
    #line 922 
    return -95;
  #line 923 
  return (*(mlxsw_driver->sb_pool_set))(mlxsw_core,sb_index,
                                       (unsigned short)((int)pool_index),
                                       size,threshold_type,extack);
}

#line 928  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void *__dl_port(struct devlink_port *devlink_port)
{
  #line 930 
  void *__mptr;
  #line 930 
  __mptr = (void *)devlink_port;
  #line 930 
  return (void *)((struct mlxsw_core_port *)__mptr);
}

#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_port_type_set(struct devlink_port *devlink_port, enum devlink_port_type port_type)
{
  #line 936 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 937 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 938 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 940 
  if (mlxsw_driver->port_type_set == (int (*)(struct mlxsw_core *, u8 , enum devlink_port_type ))0) 
    #line 941 
    return -95;
  #line 943 
  return (*(mlxsw_driver->port_type_set))(mlxsw_core,
                                         (unsigned char)((int)mlxsw_core_port->local_port),
                                         port_type);
}

#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_port_pool_get(struct devlink_port *devlink_port, unsigned int sb_index, u16 pool_index, u32 *p_threshold)
{
  #line 952 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 953 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 954 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 956 
  if (mlxsw_driver->sb_port_pool_get == (int (*)(struct mlxsw_core_port *, unsigned int , u16 , u32 *))0) 
    #line 958 
    return -95;
  else {
    #line 957 
    if (! mlxsw_core_port_check(mlxsw_core_port)) 
                                                  #line 958 
                                                  return -95;
  }
  #line 959 
  return (*(mlxsw_driver->sb_port_pool_get))(mlxsw_core_port,sb_index,
                                            (unsigned short)((int)pool_index),
                                            p_threshold);
}

#line 963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_port_pool_set(struct devlink_port *devlink_port, unsigned int sb_index, u16 pool_index, u32 threshold, struct netlink_ext_ack *extack)
{
  #line 968 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 969 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 970 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 972 
  if (mlxsw_driver->sb_port_pool_set == (int (*)(struct mlxsw_core_port *, unsigned int , u16 , u32 , struct netlink_ext_ack *))0) 
    #line 974 
    return -95;
  else {
    #line 973 
    if (! mlxsw_core_port_check(mlxsw_core_port)) 
                                                  #line 974 
                                                  return -95;
  }
  #line 975 
  return (*(mlxsw_driver->sb_port_pool_set))(mlxsw_core_port,sb_index,
                                            (unsigned short)((int)pool_index),
                                            threshold,extack);
}

#line 980  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_tc_pool_bind_get(struct devlink_port *devlink_port, unsigned int sb_index, u16 tc_index, enum devlink_sb_pool_type pool_type, u16 *p_pool_index, u32 *p_threshold)
{
  #line 985 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 986 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 987 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 989 
  if (mlxsw_driver->sb_tc_pool_bind_get == (int (*)(struct mlxsw_core_port *, unsigned int , u16 , enum devlink_sb_pool_type , u16 *, u32 *))0) 
    #line 991 
    return -95;
  else {
    #line 990 
    if (! mlxsw_core_port_check(mlxsw_core_port)) 
                                                  #line 991 
                                                  return -95;
  }
  #line 992 
  return (*(mlxsw_driver->sb_tc_pool_bind_get))(mlxsw_core_port,sb_index,
                                               (unsigned short)((int)tc_index),
                                               pool_type,p_pool_index,
                                               p_threshold);
}

#line 998  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_tc_pool_bind_set(struct devlink_port *devlink_port, unsigned int sb_index, u16 tc_index, enum devlink_sb_pool_type pool_type, u16 pool_index, u32 threshold, struct netlink_ext_ack *extack)
{
  #line 1004 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 1005 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1006 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 1008 
  if (mlxsw_driver->sb_tc_pool_bind_set == (int (*)(struct mlxsw_core_port *, unsigned int , u16 , enum devlink_sb_pool_type , u16 , u32 , struct netlink_ext_ack *))0) 
    #line 1010 
    return -95;
  else {
    #line 1009 
    if (! mlxsw_core_port_check(mlxsw_core_port)) 
                                                  #line 1010 
                                                  return -95;
  }
  #line 1011 
  return (*(mlxsw_driver->sb_tc_pool_bind_set))(mlxsw_core_port,sb_index,
                                               (unsigned short)((int)tc_index),
                                               pool_type,
                                               (unsigned short)((int)pool_index),
                                               threshold,extack);
}

#line 1016  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_occ_snapshot(struct devlink *devlink, unsigned int sb_index)
{
  #line 1019 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1020 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1022 
  if (mlxsw_driver->sb_occ_snapshot == (int (*)(struct mlxsw_core *, unsigned int ))0) 
    #line 1023 
    return -95;
  #line 1024 
  return (*(mlxsw_driver->sb_occ_snapshot))(mlxsw_core,sb_index);
}

#line 1027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_occ_max_clear(struct devlink *devlink, unsigned int sb_index)
{
  #line 1030 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1031 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1033 
  if (mlxsw_driver->sb_occ_max_clear == (int (*)(struct mlxsw_core *, unsigned int ))0) 
    #line 1034 
    return -95;
  #line 1035 
  return (*(mlxsw_driver->sb_occ_max_clear))(mlxsw_core,sb_index);
}

#line 1039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_occ_port_pool_get(struct devlink_port *devlink_port, unsigned int sb_index, u16 pool_index, u32 *p_cur, u32 *p_max)
{
  #line 1043 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 1044 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1045 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 1047 
  if (mlxsw_driver->sb_occ_port_pool_get == (int (*)(struct mlxsw_core_port *, unsigned int , u16 , u32 *, u32 *))0) 
    #line 1049 
    return -95;
  else {
    #line 1048 
    if (! mlxsw_core_port_check(mlxsw_core_port)) 
                                                  #line 1049 
                                                  return -95;
  }
  #line 1050 
  return (*(mlxsw_driver->sb_occ_port_pool_get))(mlxsw_core_port,sb_index,
                                                (unsigned short)((int)pool_index),
                                                p_cur,p_max);
}

#line 1055  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_sb_occ_tc_port_bind_get(struct devlink_port *devlink_port, unsigned int sb_index, u16 tc_index, enum devlink_sb_pool_type pool_type, u32 *p_cur, u32 *p_max)
{
  #line 1060 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink_port->devlink);
  #line 1061 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1062 
  struct mlxsw_core_port *mlxsw_core_port = __dl_port(devlink_port);
  #line 1064 
  if (mlxsw_driver->sb_occ_tc_port_bind_get == (int (*)(struct mlxsw_core_port *, unsigned int , u16 , enum devlink_sb_pool_type , u32 *, u32 *))0) 
    #line 1066 
    return -95;
  else {
    #line 1065 
    if (! mlxsw_core_port_check(mlxsw_core_port)) 
                                                  #line 1066 
                                                  return -95;
  }
  #line 1067 
  return (*(mlxsw_driver->sb_occ_tc_port_bind_get))(mlxsw_core_port,sb_index,
                                                   (unsigned short)((int)tc_index),
                                                   pool_type,p_cur,p_max);
}

#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_info_get(struct devlink *devlink, struct devlink_info_req *req, struct netlink_ext_ack *extack)
{
  #line 1077 
  char fw_info_psid[16U];
  #line 1078 
  u32 hw_rev;
  #line 1078 
  u32 fw_major;
  #line 1078 
  u32 fw_minor;
  #line 1078 
  u32 fw_sub_minor;
  #line 1079 
  char mgir_pl[156U];
  #line 1080 
  char buf[32U];
  #line 1081 
  int err;
  #line 1076 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1083 
  err = devlink_info_driver_name_put(req,(mlxsw_core->bus_info)->device_kind);
  #line 1085 
  if (err != 0) 
                #line 1086 
                return err;
  #line 1088 
  mlxsw_reg_mgir_pack((char *)(& mgir_pl));
  #line 1089 
  err = mlxsw_reg_query(mlxsw_core,& mlxsw_reg_mgir,(char *)(& mgir_pl));
  #line 1090 
  if (err != 0) 
                #line 1091 
                return err;
  #line 1092 
  mlxsw_reg_mgir_unpack((char *)(& mgir_pl),& hw_rev,(char *)(& fw_info_psid),& fw_major,& fw_minor,& fw_sub_minor);
  #line 1095 
  sprintf((char *)(& buf),(char *)"%X",hw_rev);
  #line 1096 
  err = devlink_info_version_fixed_put(req,(char *)"hw.revision",(char *)(& buf));
  #line 1097 
  if (err != 0) 
                #line 1098 
                return err;
  #line 1100 
  err = devlink_info_version_fixed_put(req,(char *)"fw.psid",(char *)(& fw_info_psid));
  #line 1101 
  if (err != 0) 
                #line 1102 
                return err;
  #line 1104 
  sprintf((char *)(& buf),(char *)"%d.%d.%d",fw_major,fw_minor,fw_sub_minor);
  #line 1105 
  err = devlink_info_version_running_put(req,(char *)"fw.version",(char *)(& buf));
  #line 1106 
  if (err != 0) 
                #line 1107 
                return err;
  #line 1109 
  return 0;
}

#line 1113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_core_bus_device_reload_down(struct devlink *devlink, bool netns_change, struct netlink_ext_ack *extack)
{
  #line 1117 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1119 
  if (((unsigned long)(mlxsw_core->bus)->features & 2UL) == 0UL) 
                                                                 #line 1120 
                                                                 return -95;
  #line 1122 
  mlxsw_core_bus_device_unregister(mlxsw_core,(_Bool)1);
  #line 1123 
  return 0;
}

#line 1127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_core_bus_device_reload_up(struct devlink *devlink, struct netlink_ext_ack *extack)
{
  #line 1130 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1132 
  return mlxsw_core_bus_device_register(mlxsw_core->bus_info,mlxsw_core->bus,
                                       mlxsw_core->bus_priv,(_Bool)1,devlink,
                                       extack);
}

#line 1138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_flash_update(struct devlink *devlink, char *file_name, char *component, struct netlink_ext_ack *extack)
{
  #line 1143 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1144 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1146 
  if (mlxsw_driver->flash_update == (int (*)(struct mlxsw_core *, char *, char *, struct netlink_ext_ack *))0) 
    #line 1147 
    return -95;
  #line 1148 
  return (*(mlxsw_driver->flash_update))(mlxsw_core,file_name,component,
                                        extack);
}

#line 1152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_trap_init(struct devlink *devlink, struct devlink_trap *trap, void *trap_ctx)
{
  #line 1156 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1157 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1159 
  if (mlxsw_driver->trap_init == (int (*)(struct mlxsw_core *, struct devlink_trap *, void *))0) 
    #line 1160 
    return -95;
  #line 1161 
  return (*(mlxsw_driver->trap_init))(mlxsw_core,trap,trap_ctx);
}

#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_devlink_trap_fini(struct devlink *devlink, struct devlink_trap *trap, void *trap_ctx)
{
  #line 1168 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1169 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1171 
  if (mlxsw_driver->trap_fini == (void (*)(struct mlxsw_core *, struct devlink_trap *, void *))0) 
    #line 1172 
    return;
  #line 1173 
  (*(mlxsw_driver->trap_fini))(mlxsw_core,trap,trap_ctx);
  #line 1174 
  return;
}

#line 1176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_trap_action_set(struct devlink *devlink, struct devlink_trap *trap, enum devlink_trap_action action)
{
  #line 1180 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1181 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1183 
  if (mlxsw_driver->trap_action_set == (int (*)(struct mlxsw_core *, struct devlink_trap *, enum devlink_trap_action ))0) 
    #line 1184 
    return -95;
  #line 1185 
  return (*(mlxsw_driver->trap_action_set))(mlxsw_core,trap,action);
}

#line 1189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_devlink_trap_group_init(struct devlink *devlink, struct devlink_trap_group *group)
{
  #line 1192 
  struct mlxsw_core *mlxsw_core = devlink_priv(devlink);
  #line 1193 
  struct mlxsw_driver *mlxsw_driver = mlxsw_core->driver;
  #line 1195 
  if (mlxsw_driver->trap_group_init == (int (*)(struct mlxsw_core *, struct devlink_trap_group *))0) 
    #line 1196 
    return -95;
  #line 1197 
  return (*(mlxsw_driver->trap_group_init))(mlxsw_core,group);
}

#line 1200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct devlink_ops mlxsw_devlink_ops = {.reload_down = & mlxsw_devlink_core_bus_device_reload_down, .reload_up = & mlxsw_devlink_core_bus_device_reload_up, .port_type_set = & mlxsw_devlink_port_type_set, .port_split = & mlxsw_devlink_port_split, .port_unsplit = & mlxsw_devlink_port_unsplit, .sb_pool_get = & mlxsw_devlink_sb_pool_get, .sb_pool_set = & mlxsw_devlink_sb_pool_set, .sb_port_pool_get = & mlxsw_devlink_sb_port_pool_get, .sb_port_pool_set = & mlxsw_devlink_sb_port_pool_set, .sb_tc_pool_bind_get = & mlxsw_devlink_sb_tc_pool_bind_get, .sb_tc_pool_bind_set = & mlxsw_devlink_sb_tc_pool_bind_set, .sb_occ_snapshot = & mlxsw_devlink_sb_occ_snapshot, .sb_occ_max_clear = & mlxsw_devlink_sb_occ_max_clear, .sb_occ_port_pool_get = & mlxsw_devlink_sb_occ_port_pool_get, .sb_occ_tc_port_bind_get = & mlxsw_devlink_sb_occ_tc_port_bind_get, .info_get = & mlxsw_devlink_info_get, .flash_update = & mlxsw_devlink_flash_update, .trap_init = & mlxsw_devlink_trap_init, .trap_fini = & mlxsw_devlink_trap_fini, .trap_action_set = & mlxsw_devlink_trap_action_set, .trap_group_init = & mlxsw_devlink_trap_group_init};
#line 1225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int __mlxsw_core_bus_device_register(struct mlxsw_bus_info *mlxsw_bus_info, struct mlxsw_bus *mlxsw_bus, void *bus_priv, bool reload, struct devlink *devlink, struct netlink_ext_ack *extack)
{
  #line 1232 
  struct mlxsw_core *mlxsw_core;
  #line 1233 
  struct mlxsw_driver *mlxsw_driver;
  #line 1234 
  struct mlxsw_res *res;
  #line 1235 
  size_t alloc_size;
  #line 1236 
  int err;
  #line 1231 
  char *device_kind = mlxsw_bus_info->device_kind;
  #line 1238 
  mlxsw_driver = mlxsw_core_driver_get(device_kind);
  #line 1239 
  if (mlxsw_driver == (struct mlxsw_driver *)0) 
                                                #line 1240 
                                                return -22;
  #line 1242 
  if (! reload) {
    #line 1243 
    alloc_size = mlxsw_driver->priv_size + 648UL;
    #line 1244 
    devlink = devlink_alloc(& mlxsw_devlink_ops,alloc_size);
    #line 1245 
    if (devlink == (struct devlink *)0) {
      #line 1246 
      err = -12;
      #line 1247 
      goto err_devlink_alloc;
    }
  }
  #line 1251 
  mlxsw_core = (struct mlxsw_core *)devlink_priv(devlink);
  #line 1252 
  INIT_LIST_HEAD(& mlxsw_core->rx_listener_list);
  #line 1253 
  INIT_LIST_HEAD(& mlxsw_core->event_listener_list);
  #line 1254 
  mlxsw_core->driver = mlxsw_driver;
  #line 1255 
  mlxsw_core->bus = mlxsw_bus;
  #line 1256 
  mlxsw_core->bus_priv = bus_priv;
  #line 1257 
  mlxsw_core->bus_info = mlxsw_bus_info;
  #line 1259 
  if ((int)mlxsw_driver->res_query_enabled != 0) 
                                                 #line 1259 
                                                 res = & mlxsw_core->res; else 
                                                                    #line 1259 
                                                                    res = (struct mlxsw_res *)0;
  #line 1260 
  err = (*(mlxsw_bus->init))(bus_priv,mlxsw_core,mlxsw_driver->profile,res);
  #line 1261 
  if (err != 0) 
                #line 1262 
                goto err_bus_init;
  #line 1264 
  if (mlxsw_driver->resources_register != (int (*)(struct mlxsw_core *))0 && ! reload) {
    #line 1265 
    err = (*(mlxsw_driver->resources_register))(mlxsw_core);
    #line 1266 
    if (err != 0) 
                  #line 1267 
                  goto err_register_resources;
  }
  #line 1270 
  err = mlxsw_ports_init(mlxsw_core);
  #line 1271 
  if (err != 0) 
                #line 1272 
                goto err_ports_init;
  #line 1274 
  if ((int)mlxsw_core_res_valid(mlxsw_core,
                             (enum mlxsw_res_id)MLXSW_RES_ID_MAX_LAG) != 0) {
    #line 1274 
    if ((int)mlxsw_core_res_valid(mlxsw_core,
                             (enum mlxsw_res_id)MLXSW_RES_ID_MAX_LAG_MEMBERS) != 0) {
      #line 1276 
      alloc_size = (unsigned long)(mlxsw_core_res_get(mlxsw_core,
                           (enum mlxsw_res_id)MLXSW_RES_ID_MAX_LAG) * mlxsw_core_res_get(mlxsw_core,
                           (enum mlxsw_res_id)MLXSW_RES_ID_MAX_LAG_MEMBERS));
      #line 1279 
      mlxsw_core->lag.mapping = (u8 *)kzalloc_0(alloc_size,3264U);
      #line 1280 
      if (mlxsw_core->lag.mapping == (u8 *)0U) {
        #line 1281 
        err = -12;
        #line 1282 
        goto err_alloc_lag_mapping;
      }
    }
  }
  #line 1286 
  err = mlxsw_emad_init(mlxsw_core);
  #line 1287 
  if (err != 0) 
                #line 1288 
                goto err_emad_init;
  #line 1290 
  if (! reload) {
    #line 1291 
    err = devlink_register(devlink,mlxsw_bus_info->dev);
    #line 1292 
    if (err != 0) 
                  #line 1293 
                  goto err_devlink_register;
  }
  #line 1296 
  if (mlxsw_driver->params_register != (int (*)(struct mlxsw_core *))0 && ! reload) {
    #line 1297 
    err = (*(mlxsw_driver->params_register))(mlxsw_core);
    #line 1298 
    if (err != 0) 
                  #line 1299 
                  goto err_register_params;
  }
  #line 1302 
  if (mlxsw_driver->init != (int (*)(struct mlxsw_core *, struct mlxsw_bus_info *, struct netlink_ext_ack *))0) {
    #line 1303 
    err = (*(mlxsw_driver->init))(mlxsw_core,mlxsw_bus_info,extack);
    #line 1304 
    if (err != 0) 
                  #line 1305 
                  goto err_driver_init;
  }
  #line 1308 
  err = mlxsw_hwmon_init(mlxsw_core,mlxsw_bus_info,& mlxsw_core->hwmon);
  #line 1309 
  if (err != 0) 
                #line 1310 
                goto err_hwmon_init;
  #line 1312 
  err = mlxsw_thermal_init(mlxsw_core,mlxsw_bus_info,& mlxsw_core->thermal);
  #line 1314 
  if (err != 0) 
                #line 1315 
                goto err_thermal_init;
  #line 1317 
  if (mlxsw_driver->params_register != (int (*)(struct mlxsw_core *))0) 
    #line 1318 
    devlink_params_publish(devlink);
  #line 1320 
  if (! reload) 
                #line 1321 
                devlink_reload_enable(devlink);
  #line 1323 
  return 0;
  #line 1325 
  err_thermal_init: 
                    #line 1325 
  ;
  #line 1326 
  mlxsw_hwmon_fini(mlxsw_core->hwmon);
  #line 1327 
  err_hwmon_init: 
                  #line 1327 
  ;
  #line 1328 
  if ((mlxsw_core->driver)->fini != (void (*)(struct mlxsw_core *))0) 
    #line 1329 
    (*((mlxsw_core->driver)->fini))(mlxsw_core);
  #line 1330 
  err_driver_init: 
                   #line 1330 
  ;
  #line 1331 
  if (mlxsw_driver->params_unregister != (void (*)(struct mlxsw_core *))0 && ! reload) 
    #line 1332 
    (*(mlxsw_driver->params_unregister))(mlxsw_core);
  #line 1333 
  err_register_params: 
                       #line 1333 
  ;
  #line 1334 
  if (! reload) 
                #line 1335 
                devlink_unregister(devlink);
  #line 1336 
  err_devlink_register: 
                        #line 1336 
  ;
  #line 1337 
  mlxsw_emad_fini(mlxsw_core);
  #line 1338 
  err_emad_init: 
                 #line 1338 
  ;
  #line 1339 
  kfree((void *)mlxsw_core->lag.mapping);
  #line 1340 
  err_alloc_lag_mapping: 
                         #line 1340 
  ;
  #line 1341 
  mlxsw_ports_fini(mlxsw_core);
  #line 1342 
  err_ports_init: 
                  #line 1342 
  ;
  #line 1343 
  if (! reload) 
                #line 1344 
                devlink_resources_unregister(devlink,(struct devlink_resource *)0);
  #line 1345 
  err_register_resources: 
                          #line 1345 
  ;
  #line 1346 
  (*(mlxsw_bus->fini))(bus_priv);
  #line 1347 
  err_bus_init: 
                #line 1347 
  ;
  #line 1348 
  if (! reload) 
                #line 1349 
                devlink_free(devlink);
  #line 1350 
  err_devlink_alloc: 
                     #line 1350 
  ;
  #line 1351 
  return err;
}

#line 1354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_bus_device_register(struct mlxsw_bus_info *mlxsw_bus_info, struct mlxsw_bus *mlxsw_bus, void *bus_priv, bool reload, struct devlink *devlink, struct netlink_ext_ack *extack)
{
  #line 1361 
  int err;
  #line 1360 
  bool called_again = (_Bool)0;
  #line 1363 
  again: 
         #line 1363 
  ;
  #line 1364 
  err = __mlxsw_core_bus_device_register(mlxsw_bus_info,mlxsw_bus,bus_priv,(_Bool)((bool)((int)reload) != 0),devlink,extack);
  #line 1371 
  if (err == -11 && ! called_again) {
    #line 1372 
    called_again = (_Bool)1;
    #line 1373 
    goto again;
  }
  #line 1376 
  return err;
}

#line 1380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_bus_device_unregister(struct mlxsw_core *mlxsw_core, bool reload)
{
  #line 1383 
  struct devlink *devlink = priv_to_devlink((void *)mlxsw_core);
  #line 1385 
  if (! reload) 
                #line 1386 
                devlink_reload_disable(devlink);
  #line 1387 
  if ((int)devlink_is_reload_failed(devlink) != 0) 
    #line 1388 
    if (! reload) 
                  #line 1392 
                  goto reload_fail_deinit; else 
                                                #line 1394 
                                                return;
  #line 1397 
  if ((mlxsw_core->driver)->params_unregister != (void (*)(struct mlxsw_core *))0) 
    #line 1398 
    devlink_params_unpublish(devlink);
  #line 1399 
  mlxsw_thermal_fini(mlxsw_core->thermal);
  #line 1400 
  mlxsw_hwmon_fini(mlxsw_core->hwmon);
  #line 1401 
  if ((mlxsw_core->driver)->fini != (void (*)(struct mlxsw_core *))0) 
    #line 1402 
    (*((mlxsw_core->driver)->fini))(mlxsw_core);
  #line 1403 
  if ((mlxsw_core->driver)->params_unregister != (void (*)(struct mlxsw_core *))0 && ! reload) 
    #line 1404 
    (*((mlxsw_core->driver)->params_unregister))(mlxsw_core);
  #line 1405 
  if (! reload) 
                #line 1406 
                devlink_unregister(devlink);
  #line 1407 
  mlxsw_emad_fini(mlxsw_core);
  #line 1408 
  kfree((void *)mlxsw_core->lag.mapping);
  #line 1409 
  mlxsw_ports_fini(mlxsw_core);
  #line 1410 
  if (! reload) 
                #line 1411 
                devlink_resources_unregister(devlink,(struct devlink_resource *)0);
  #line 1412 
  (*((mlxsw_core->bus)->fini))(mlxsw_core->bus_priv);
  #line 1414 
  return;
  #line 1416 
  reload_fail_deinit: 
                      #line 1416 
  ;
  #line 1417 
  if ((mlxsw_core->driver)->params_unregister != (void (*)(struct mlxsw_core *))0) 
    #line 1418 
    (*((mlxsw_core->driver)->params_unregister))(mlxsw_core);
  #line 1419 
  devlink_unregister(devlink);
  #line 1420 
  devlink_resources_unregister(devlink,(struct devlink_resource *)0);
  #line 1421 
  devlink_free(devlink);
  #line 1422 
  return;
}

#line 1425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_skb_transmit_busy(struct mlxsw_core *mlxsw_core, struct mlxsw_tx_info *tx_info)
{
  #line 1428 
  return (*((mlxsw_core->bus)->skb_transmit_busy))(mlxsw_core->bus_priv,tx_info);
}

#line 1433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_skb_transmit(struct mlxsw_core *mlxsw_core, struct sk_buff *skb, struct mlxsw_tx_info *tx_info)
{
  #line 1436 
  return (*((mlxsw_core->bus)->skb_transmit))(mlxsw_core->bus_priv,skb,tx_info);
}

#line 1441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_ptp_transmitted(struct mlxsw_core *mlxsw_core, struct sk_buff *skb, u8 local_port)
{
  #line 1444 
  if ((mlxsw_core->driver)->ptp_transmitted != (void (*)(struct mlxsw_core *, struct sk_buff *, u8 ))0) 
    #line 1445 
    (*((mlxsw_core->driver)->ptp_transmitted))(mlxsw_core,skb,(unsigned char)((int)local_port));
  #line 1446 
  return;
}

#line 1450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static bool __is_rx_listener_equal(struct mlxsw_rx_listener *rxl_a, struct mlxsw_rx_listener *rxl_b)
{
  #line 1454 
  return (_Bool)(((rxl_a->func == rxl_b->func && (int)rxl_a->local_port == (int)rxl_b->local_port) && (int)rxl_a->trap_id == (int)rxl_b->trap_id) != 0);
}

#line 1459  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_rx_listener_item *__find_rx_listener_item(struct mlxsw_core *mlxsw_core, struct mlxsw_rx_listener *rxl, void *priv)
{
  #line 1465 
  void *__mptr;
  #line 1463 
  struct mlxsw_rx_listener_item *rxl_item;
  #line 1465 
  __mptr = (void *)mlxsw_core->rx_listener_list.next;
  #line 1465 
  rxl_item = ((struct mlxsw_rx_listener_item *)__mptr);
  #line 1465 
  while (& rxl_item->list != & mlxsw_core->rx_listener_list) {
    #line 1465 
    void *__mptr_0;
    #line 1466 
    if ((int)__is_rx_listener_equal(& rxl_item->rxl,rxl) != 0) 
      #line 1466 
      if (rxl_item->priv == priv) 
                                  #line 1468 
                                  return rxl_item;
    #line 1465 
    __mptr_0 = (void *)rxl_item->list.next;
    #line 1465 
    rxl_item = ((struct mlxsw_rx_listener_item *)__mptr_0);
  }
  #line 1470 
  return (struct mlxsw_rx_listener_item *)0;
}

#line 1473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_rx_listener_register(struct mlxsw_core *mlxsw_core, struct mlxsw_rx_listener *rxl, void *priv)
{
  #line 1477 
  struct mlxsw_rx_listener_item *rxl_item;
  #line 1479 
  rxl_item = __find_rx_listener_item(mlxsw_core,rxl,priv);
  #line 1480 
  if (rxl_item != (struct mlxsw_rx_listener_item *)0) 
                                                      #line 1481 
                                                      return -17;
  #line 1482 
  rxl_item = (struct mlxsw_rx_listener_item *)kmalloc(40UL,3264U);
  #line 1483 
  if (rxl_item == (struct mlxsw_rx_listener_item *)0) 
                                                      #line 1484 
                                                      return -12;
  #line 1485 
  rxl_item->rxl = *rxl;
  #line 1486 
  rxl_item->priv = priv;
  #line 1488 
  list_add_rcu(& rxl_item->list,& mlxsw_core->rx_listener_list);
  #line 1489 
  return 0;
}

#line 1493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_rx_listener_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_rx_listener *rxl, void *priv)
{
  #line 1497 
  struct mlxsw_rx_listener_item *rxl_item;
  #line 1499 
  rxl_item = __find_rx_listener_item(mlxsw_core,rxl,priv);
  #line 1500 
  if (rxl_item == (struct mlxsw_rx_listener_item *)0) 
                                                      #line 1501 
                                                      return;
  #line 1502 
  list_del_rcu(& rxl_item->list);
  #line 1503 
  synchronize_rcu();
  #line 1504 
  kfree((void *)rxl_item);
  #line 1505 
  return;
}

#line 1508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_core_event_listener_func(struct sk_buff *skb, u8 local_port, void *priv)
{
  #line 1512 
  struct mlxsw_reg_info reg;
  #line 1513 
  char *payload;
  #line 1514 
  char *reg_tlv;
  #line 1515 
  char *op_tlv;
  #line 1511 
  struct mlxsw_event_listener_item *event_listener_item = (struct mlxsw_event_listener_item *)priv;
  #line 1517 
  mlxsw_emad_tlv_parse(skb);
  #line 1518 
  op_tlv = mlxsw_emad_op_tlv(skb);
  #line 1519 
  reg_tlv = mlxsw_emad_reg_tlv(skb);
  #line 1521 
  reg.id = (unsigned short)mlxsw_emad_op_tlv_register_id_get(op_tlv);
  #line 1522 
  reg.len = (unsigned short)((unsigned int)((unsigned short)(mlxsw_emad_reg_tlv_len_get(reg_tlv) + 4294967295U)) * 4U);
  #line 1523 
  payload = mlxsw_emad_reg_payload(reg_tlv);
  #line 1524 
  (*(event_listener_item->el.func))(& reg,payload,event_listener_item->priv);
  #line 1525 
  consume_skb(skb);
  #line 1526 
  return;
}

#line 1528  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static bool __is_event_listener_equal(struct mlxsw_event_listener *el_a, struct mlxsw_event_listener *el_b)
{
  #line 1531 
  return (_Bool)((el_a->func == el_b->func && el_a->trap_id == el_b->trap_id) != 0);
}

#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static struct mlxsw_event_listener_item *__find_event_listener_item(struct mlxsw_core *mlxsw_core, struct mlxsw_event_listener *el, void *priv)
{
  #line 1542 
  void *__mptr;
  #line 1540 
  struct mlxsw_event_listener_item *el_item;
  #line 1542 
  __mptr = (void *)mlxsw_core->event_listener_list.next;
  #line 1542 
  el_item = ((struct mlxsw_event_listener_item *)__mptr);
  #line 1542 
  while (& el_item->list != & mlxsw_core->event_listener_list) {
    #line 1542 
    void *__mptr_0;
    #line 1543 
    if ((int)__is_event_listener_equal(& el_item->el,el) != 0) 
      #line 1543 
      if (el_item->priv == priv) 
                                 #line 1545 
                                 return el_item;
    #line 1542 
    __mptr_0 = (void *)el_item->list.next;
    #line 1542 
    el_item = ((struct mlxsw_event_listener_item *)__mptr_0);
  }
  #line 1547 
  return (struct mlxsw_event_listener_item *)0;
}

#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_event_listener_register(struct mlxsw_core *mlxsw_core, struct mlxsw_event_listener *el, void *priv)
{
  #line 1554 
  int err;
  #line 1555 
  struct mlxsw_event_listener_item *el_item;
  #line 1556 
  struct mlxsw_rx_listener rxl = {.func = & mlxsw_core_event_listener_func, .local_port = (unsigned char)255U, .trap_id = (unsigned short)el->trap_id, .action = 0};
  #line 1562 
  el_item = __find_event_listener_item(mlxsw_core,el,priv);
  #line 1563 
  if (el_item != (struct mlxsw_event_listener_item *)0) 
                                                        #line 1564 
                                                        return -17;
  #line 1565 
  el_item = (struct mlxsw_event_listener_item *)kmalloc(40UL,3264U);
  #line 1566 
  if (el_item == (struct mlxsw_event_listener_item *)0) 
                                                        #line 1567 
                                                        return -12;
  #line 1568 
  el_item->el = *el;
  #line 1569 
  el_item->priv = priv;
  #line 1571 
  err = mlxsw_core_rx_listener_register(mlxsw_core,& rxl,(void *)el_item);
  #line 1572 
  if (err != 0) 
                #line 1573 
                goto err_rx_listener_register;
  #line 1578 
  list_add_rcu(& el_item->list,& mlxsw_core->event_listener_list);
  #line 1580 
  return 0;
  #line 1582 
  err_rx_listener_register: 
                            #line 1582 
  ;
  #line 1583 
  kfree((void *)el_item);
  #line 1584 
  return err;
}

#line 1588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_event_listener_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_event_listener *el, void *priv)
{
  #line 1592 
  struct mlxsw_event_listener_item *el_item;
  #line 1593 
  struct mlxsw_rx_listener rxl = {.func = & mlxsw_core_event_listener_func, .local_port = (unsigned char)255U, .trap_id = (unsigned short)el->trap_id, .action = 0};
  #line 1599 
  el_item = __find_event_listener_item(mlxsw_core,el,priv);
  #line 1600 
  if (el_item == (struct mlxsw_event_listener_item *)0) 
                                                        #line 1601 
                                                        return;
  #line 1602 
  mlxsw_core_rx_listener_unregister(mlxsw_core,& rxl,(void *)el_item);
  #line 1603 
  list_del(& el_item->list);
  #line 1604 
  kfree((void *)el_item);
  #line 1605 
  return;
}

#line 1608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_core_listener_register(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, void *priv)
{
  #line 1612 
  if ((int)listener->is_event != 0) {
    #line 1613 
    return mlxsw_core_event_listener_register(mlxsw_core,
                                         & listener->u.event_listener,priv);
  }
  else {
    #line 1617 
    return mlxsw_core_rx_listener_register(mlxsw_core,& listener->u.rx_listener,
                                        priv);
  }
}

#line 1622  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_core_listener_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, void *priv)
{
  #line 1626 
  if ((int)listener->is_event != 0) 
                                    #line 1627 
                                    mlxsw_core_event_listener_unregister(mlxsw_core,& listener->u.event_listener,priv); else 
                                                                    #line 1631 
                                                                    mlxsw_core_rx_listener_unregister(mlxsw_core,& listener->u.rx_listener,priv);
  #line 1633 
  return;
}

#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_trap_register(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, void *priv)
{
  #line 1639 
  char hpkt_pl[16U];
  #line 1640 
  int err;
  #line 1642 
  err = mlxsw_core_listener_register(mlxsw_core,listener,priv);
  #line 1643 
  if (err != 0) 
                #line 1644 
                return err;
  #line 1646 
  mlxsw_reg_hpkt_pack((char *)(& hpkt_pl),(unsigned char)((int)((unsigned char)listener->action)),(unsigned short)((int)listener->trap_id),(enum mlxsw_reg_htgt_trap_group)listener->trap_group,(_Bool)((bool)((int)listener->is_ctrl) != 0));
  #line 1648 
  err = mlxsw_reg_write(mlxsw_core,& mlxsw_reg_hpkt,(char *)(& hpkt_pl));
  #line 1649 
  if (err != 0) 
                #line 1650 
                goto err_trap_set;
  #line 1652 
  return 0;
  #line 1654 
  err_trap_set: 
                #line 1654 
  ;
  #line 1655 
  mlxsw_core_listener_unregister(mlxsw_core,listener,priv);
  #line 1656 
  return err;
}

#line 1660  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_trap_unregister(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, void *priv)
{
  #line 1664 
  char hpkt_pl[16U];
  #line 1666 
  if (! listener->is_event) {
    #line 1667 
    mlxsw_reg_hpkt_pack((char *)(& hpkt_pl),(unsigned char)((int)((unsigned char)listener->unreg_action)),(unsigned short)((int)listener->trap_id),(enum mlxsw_reg_htgt_trap_group)listener->trap_group,(_Bool)((bool)((int)listener->is_ctrl) != 0));
    #line 1670 
    mlxsw_reg_write(mlxsw_core,& mlxsw_reg_hpkt,(char *)(& hpkt_pl));
  }
  #line 1673 
  mlxsw_core_listener_unregister(mlxsw_core,listener,priv);
  #line 1674 
  return;
}

#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_trap_action_set(struct mlxsw_core *mlxsw_core, struct mlxsw_listener *listener, enum mlxsw_reg_hpkt_action action)
{
  #line 1681 
  char hpkt_pl[16U];
  #line 1683 
  mlxsw_reg_hpkt_pack((char *)(& hpkt_pl),(unsigned char)((int)((unsigned char)action)),(unsigned short)((int)listener->trap_id),(enum mlxsw_reg_htgt_trap_group)listener->trap_group,(_Bool)((bool)((int)listener->is_ctrl) != 0));
  #line 1685 
  return mlxsw_reg_write(mlxsw_core,& mlxsw_reg_hpkt,(char *)(& hpkt_pl));
}

#line 1689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static u64 mlxsw_core_tid_get(struct mlxsw_core *mlxsw_core)
{
  #line 1691 
  return (unsigned long long)atomic64_inc_return(& mlxsw_core->emad.tid);
}

#line 1694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_core_reg_access_emad(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, enum mlxsw_core_reg_access_type type, struct list_head *bulk_list, mlxsw_reg_trans_cb_t *cb, unsigned long cb_priv)
{
  #line 1703 
  struct mlxsw_reg_trans *trans;
  #line 1704 
  int err;
  #line 1702 
  u64 tid = mlxsw_core_tid_get(mlxsw_core);
  #line 1706 
  trans = (struct mlxsw_reg_trans *)kzalloc_0(424UL,3264U);
  #line 1707 
  if (trans == (struct mlxsw_reg_trans *)0) 
                                            #line 1708 
                                            return -12;
  #line 1710 
  err = mlxsw_emad_reg_access(mlxsw_core,reg,payload,type,trans,bulk_list,cb,cb_priv,tid);
  #line 1712 
  if (err != 0) {
    #line 1713 
    kfree((void *)trans);
    #line 1714 
    return err;
  }
  #line 1716 
  return 0;
}

#line 1719  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_trans_query(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, struct list_head *bulk_list, mlxsw_reg_trans_cb_t *cb, unsigned long cb_priv)
{
  #line 1724 
  return mlxsw_core_reg_access_emad(mlxsw_core,reg,payload,
                                 (enum mlxsw_core_reg_access_type)MLXSW_CORE_REG_ACCESS_TYPE_QUERY,
                                 bulk_list,cb,cb_priv);
}

#line 1730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_trans_write(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, struct list_head *bulk_list, mlxsw_reg_trans_cb_t *cb, unsigned long cb_priv)
{
  #line 1735 
  return mlxsw_core_reg_access_emad(mlxsw_core,reg,payload,
                                 (enum mlxsw_core_reg_access_type)MLXSW_CORE_REG_ACCESS_TYPE_WRITE,
                                 bulk_list,cb,cb_priv);
}

#line 1743  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_reg_trans_wait(struct mlxsw_reg_trans *trans)
{
  #line 1745 
  char err_string[256U];
  #line 1747 
  int err;
  #line 1746 
  struct mlxsw_core *mlxsw_core = trans->core;
  #line 1749 
  wait_for_completion(& trans->completion);
  #line 1750 
  cancel_delayed_work_sync(& trans->timeout_dw);
  #line 1751 
  err = trans->err;
  #line 1753 
  if (trans->retries != 0U) 
                            #line 1754 
                            _dev_warn((mlxsw_core->bus_info)->dev,(char *)"EMAD retries (%d/%d) (tid=%llx)\n",trans->retries,5,trans->tid);
  #line 1756 
  if (err != 0) {
    #line 1767 
    char *tmp_2;
    #line 1757 
    ;
    #line 1757 
    ;
    #line 1757 
    ;
    #line 1757 
    ;
    #line 1757 
    _dev_err((mlxsw_core->bus_info)->dev,(char *)"EMAD reg access failed (tid=%llx,reg_id=%x(%s),type=%s,status=%x(%s))\n",trans->tid,(int)(trans->reg)->id,mlxsw_reg_id_str((unsigned short)((int)(trans->reg)->id)),mlxsw_core_reg_access_type_str(trans->type),(unsigned int)trans->emad_status,mlxsw_emad_op_tlv_status_str((unsigned char)((int)((unsigned char)trans->emad_status))));
    #line 1767 
    if (trans->emad_err_string != (char *)0) 
                                             #line 1767 
                                             tmp_2 = trans->emad_err_string; else 
                                                                    #line 1767 
                                                                    tmp_2 = (char *)"";
    #line 1764 
    ;
    #line 1764 
    ;
    #line 1764 
    snprintf((char *)(& err_string),256UL,(char *)"(tid=%llx,reg_id=%x(%s)) %s (%s)\n",trans->tid,(int)(trans->reg)->id,mlxsw_reg_id_str((unsigned short)((int)(trans->reg)->id)),mlxsw_emad_op_tlv_status_str((unsigned char)((int)((unsigned char)trans->emad_status))),tmp_2);
    #line 1770 
    ;
    #line 1770 
    trace_devlink_hwerr(priv_to_devlink((void *)mlxsw_core),(int)trans->emad_status,(char *)(& err_string));
    #line 1773 
    kfree((void *)trans->emad_err_string);
  }
  #line 1776 
  list_del(& trans->bulk_list);
  {
    #line 1777 
    struct mlxsw_reg_trans *___p = trans;
    #line 1777 
    if (___p != (struct mlxsw_reg_trans *)0) 
                                             #line 1777 
                                             kfree_call_rcu(& ___p->rcu,(void (*)(struct callback_head *))408);
  }
  #line 1778 
  return err;
}

#line 1781  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_trans_bulk_wait(struct list_head *bulk_list)
{
  #line 1788 
  void *__mptr;
  #line 1788 
  void *__mptr_0;
  #line 1783 
  struct mlxsw_reg_trans *trans;
  #line 1784 
  struct mlxsw_reg_trans *tmp;
  #line 1786 
  int err;
  #line 1785 
  int sum_err = 0;
  #line 1788 
  __mptr = (void *)bulk_list->next;
  #line 1788 
  trans = ((struct mlxsw_reg_trans *)(__mptr + 18446744073709551600U));
  #line 1788 
  __mptr_0 = (void *)trans->bulk_list.next;
  #line 1789 
  tmp = ((struct mlxsw_reg_trans *)(__mptr_0 + 18446744073709551600U));
  #line 1788 
  while (& trans->bulk_list != bulk_list) {
    #line 1788 
    void *__mptr_1;
    #line 1789 
    err = mlxsw_reg_trans_wait(trans);
    #line 1790 
    if (err != 0 && sum_err == 0) 
                                  #line 1791 
                                  sum_err = err;
    #line 1788 
    trans = tmp;
    #line 1788 
    __mptr_1 = (void *)tmp->bulk_list.next;
    #line 1788 
    tmp = ((struct mlxsw_reg_trans *)(__mptr_1 + 18446744073709551600U));
  }
  #line 1793 
  return sum_err;
}

#line 1797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_core_reg_access_cmd(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, enum mlxsw_core_reg_access_type type)
{
  #line 1802 
  enum mlxsw_emad_op_tlv_status status;
  #line 1803 
  int err;
  #line 1803 
  int n_retry;
  #line 1804 
  bool reset_ok;
  #line 1805 
  char *in_mbox;
  #line 1805 
  char *out_mbox;
  #line 1805 
  char *tmp;
  {
    #line 1807 
    bool branch;
    #line 1807 
    struct _ddebug __UNIQUE_ID_ddebug456 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_core_reg_access_cmd", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"Reg cmd access (reg_id=%x(%s),type=%s)\n", .lineno = (unsigned int)1807U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 1807 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug456.key.dd_key_false.key,(_Bool)0);
    #line 1807 
    if ((long)((long)((int)branch != 0)) != 0L) {
      #line 1807 
      ;
      #line 1807 
      ;
      #line 1807 
      __dynamic_dev_dbg(& __UNIQUE_ID_ddebug456,(mlxsw_core->bus_info)->dev,(char *)"Reg cmd access (reg_id=%x(%s),type=%s)\n",(int)reg->id,mlxsw_reg_id_str((unsigned short)((int)reg->id)),mlxsw_core_reg_access_type_str(type));
    }
  }
  #line 1811 
  in_mbox = mlxsw_cmd_mbox_alloc();
  #line 1812 
  if (in_mbox == (char *)0) 
                            #line 1813 
                            return -12;
  #line 1815 
  out_mbox = mlxsw_cmd_mbox_alloc();
  #line 1816 
  if (out_mbox == (char *)0) {
    #line 1817 
    err = -12;
    #line 1818 
    goto free_in_mbox;
  }
  #line 1821 
  ;
  #line 1821 
  ;
  #line 1821 
  ;
  #line 1821 
  mlxsw_emad_pack_op_tlv(in_mbox,reg,type,mlxsw_core_tid_get(mlxsw_core));
  #line 1823 
  tmp = in_mbox + 16UL;
  #line 1824 
  mlxsw_emad_pack_reg_tlv(tmp,reg,payload);
  #line 1831 
  reset_ok = (_Bool)((unsigned int)reg->id == 36899U);
  #line 1833 
  n_retry = 0;
  #line 1834 
  retry: 
         #line 1834 
  ;
  #line 1835 
  err = mlxsw_cmd_access_reg(mlxsw_core,(_Bool)((bool)((int)reset_ok) != 0),in_mbox,out_mbox);
  #line 1836 
  if (err == 0) {
    #line 1837 
    err = mlxsw_emad_process_status(out_mbox,& status);
    #line 1838 
    if (err != 0) {
      #line 1839 
      if (err == -11) {
        #line 1839 
        int tmp_4;
        #line 1839 
        tmp_4 = n_retry;
        #line 1839 
        n_retry ++;
        #line 1839 
        ;
        #line 1839 
        if (tmp_4 <= 4) 
                        #line 1840 
                        goto retry;
      }
      #line 1841 
      ;
      #line 1841 
      ;
      #line 1841 
      _dev_err((mlxsw_core->bus_info)->dev,(char *)"Reg cmd access status failed (status=%x(%s))\n",(unsigned int)status,mlxsw_emad_op_tlv_status_str((unsigned char)((int)((unsigned char)status))));
    }
  }
  #line 1846 
  if (err == 0) {
    #line 1847 
    ;
    #line 1847 
    ;
    #line 1847 
    memcpy((void *)payload,(void *)mlxsw_emad_reg_payload_cmd(out_mbox),(unsigned long)reg->len);
  }
  #line 1850 
  mlxsw_cmd_mbox_free(out_mbox);
  #line 1851 
  free_in_mbox: 
                #line 1851 
  ;
  #line 1852 
  mlxsw_cmd_mbox_free(in_mbox);
  #line 1853 
  if (err != 0) {
    #line 1854 
    ;
    #line 1854 
    ;
    #line 1854 
    _dev_err((mlxsw_core->bus_info)->dev,(char *)"Reg cmd access failed (reg_id=%x(%s),type=%s)\n",(int)reg->id,mlxsw_reg_id_str((unsigned short)((int)reg->id)),mlxsw_core_reg_access_type_str(type));
  }
  #line 1857 
  return err;
}

#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_core_reg_access_cb(struct mlxsw_core *mlxsw_core, char *payload, size_t payload_len, unsigned long cb_priv)
{
  #line 1864 
  char *orig_payload = (char *)cb_priv;
  #line 1866 
  memcpy((void *)orig_payload,(void *)payload,payload_len);
  #line 1867 
  return;
}

#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_core_reg_access(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload, enum mlxsw_core_reg_access_type type)
{
  #line 1875 
  int err;
  #line 1874 
  struct list_head bulk_list = {.next = & bulk_list, .prev = & bulk_list};
  #line 1881 
  if (! mlxsw_core->emad.use_emad) {
    #line 1882 
    return mlxsw_core_reg_access_cmd(mlxsw_core,reg,payload,type);
  }
  #line 1885 
  err = mlxsw_core_reg_access_emad(mlxsw_core,reg,payload,type,& bulk_list,& mlxsw_core_reg_access_cb,(unsigned long)payload);
  #line 1889 
  if (err != 0) 
                #line 1890 
                return err;
  #line 1891 
  return mlxsw_reg_trans_bulk_wait(& bulk_list);
}

#line 1894  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_query(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload)
{
  #line 1897 
  return mlxsw_core_reg_access(mlxsw_core,reg,payload,
                            (enum mlxsw_core_reg_access_type)MLXSW_CORE_REG_ACCESS_TYPE_QUERY);
}

#line 1902  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_reg_write(struct mlxsw_core *mlxsw_core, struct mlxsw_reg_info *reg, char *payload)
{
  #line 1905 
  return mlxsw_core_reg_access(mlxsw_core,reg,payload,
                            (enum mlxsw_core_reg_access_type)MLXSW_CORE_REG_ACCESS_TYPE_WRITE);
}

#line 1910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_skb_receive(struct mlxsw_core *mlxsw_core, struct sk_buff *skb, struct mlxsw_rx_info *rx_info)
{
  #line 1940 
  void *__mptr;
  #line 1913 
  struct mlxsw_rx_listener_item *rxl_item;
  #line 1914 
  struct mlxsw_rx_listener *rxl;
  #line 1915 
  u8 local_port;
  #line 1916 
  bool found = (_Bool)0;
  #line 1918 
  if ((int)rx_info->is_lag != 0) {
    {
      #line 1919 
      bool branch;
      #line 1919 
      struct ratelimit_state _rs = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
      #line 1919 
      struct _ddebug descriptor = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_core_skb_receive", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"%s: lag_id = %d, lag_port_index = 0x%x\n", .lineno = (unsigned int)1919U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1919 
      branch = arch_static_branch(& descriptor.key.dd_key_false.key,(_Bool)0);
      #line 1919 
      if ((long)((long)((int)branch != 0)) != 0L) {
        #line 1919 
        if (___ratelimit(& _rs,(char *)"mlxsw_core_skb_receive") != 0) 
          #line 1919 
          __dynamic_dev_dbg(& descriptor,(mlxsw_core->bus_info)->dev,(char *)"%s: lag_id = %d, lag_port_index = 0x%x\n",(char *)"mlxsw_core_skb_receive",(int)rx_info->u.lag_id,rx_info->trap_id);
      }
    }
    #line 1925 
    local_port = mlxsw_core_lag_mapping_get(mlxsw_core,(unsigned short)((int)rx_info->u.lag_id),(unsigned char)((int)rx_info->lag_port_index));
  }
  else 
       #line 1929 
       local_port = (unsigned char)rx_info->u.sys_port;
  {
    #line 1932 
    bool branch_0;
    #line 1932 
    struct ratelimit_state _rs_0 = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
    #line 1932 
    struct _ddebug descriptor_0 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_core_skb_receive", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"%s: local_port = %d, trap_id = 0x%x\n", .lineno = (unsigned int)1932U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 1932 
    branch_0 = arch_static_branch(& descriptor_0.key.dd_key_false.key,(_Bool)0);
    #line 1932 
    if ((long)((long)((int)branch_0 != 0)) != 0L) {
      #line 1932 
      if (___ratelimit(& _rs_0,(char *)"mlxsw_core_skb_receive") != 0) 
        #line 1932 
        __dynamic_dev_dbg(& descriptor_0,(mlxsw_core->bus_info)->dev,(char *)"%s: local_port = %d, trap_id = 0x%x\n",(char *)"mlxsw_core_skb_receive",(int)local_port,rx_info->trap_id);
    }
  }
  #line 1935 
  if (rx_info->trap_id > 510 || (unsigned int)local_port >= mlxsw_core->max_ports) 
    #line 1937 
    goto drop;
  #line 1939 
  rcu_read_lock();
  {
    #line 1940 
    bool __warned;
    #line 1940 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 1940 
      if (! __warned) {
        #line 1940 
        if (rcu_read_lock_any_held() == 0) {
          #line 1940 
          __warned = (_Bool)1;
          #line 1940 
          lockdep_rcu_suspicious((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c",1940,(char *)"RCU-list traversed in non-reader section!");
        }
      }
  }
  {
    #line 1941 
    union __anonunion___u_2159 __u;
    #line 1940 
    __read_once_size((void *)(& mlxsw_core->rx_listener_list.next),(void *)(& __u.__c),8);
    #line 1940 
    __mptr = (void *)(__u.__val);
    }
  #line 1943 
  rxl_item = ((struct mlxsw_rx_listener_item *)__mptr);
  #line 1940 
  while (& rxl_item->list != & mlxsw_core->rx_listener_list) {
    #line 1940 
    void *__mptr_0;
    #line 1941 
    rxl = & rxl_item->rxl;
    #line 1942 
    if (((unsigned int)rxl->local_port == 255U || (int)rxl->local_port == (int)local_port) && (int)rxl->trap_id == rx_info->trap_id) {
      #line 1945 
      found = (_Bool)1;
      #line 1946 
      break;
    }
    {
      #line 1941 
      union __anonunion___u_2161 __u_0;
      #line 1940 
      __read_once_size((void *)(& rxl_item->list.next),(void *)(& __u_0.__c),8);
      #line 1940 
      __mptr_0 = (void *)(__u_0.__val);
      }
    #line 1940 
    rxl_item = ((struct mlxsw_rx_listener_item *)__mptr_0);
  }
  #line 1949 
  rcu_read_unlock();
  #line 1950 
  if (! found) 
               #line 1951 
               goto drop;
  #line 1953 
  (*(rxl->func))(skb,(unsigned char)((int)local_port),rxl_item->priv);
  #line 1954 
  return;
  #line 1956 
  drop: 
        #line 1956 
  ;
  #line 1957 
  consume_skb(skb);
  #line 1958 
  return;
}

#line 1961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_core_lag_mapping_index(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 port_index)
{
  #line 1964 
  ;
  #line 1964 
  return (int)(mlxsw_core_res_get(mlxsw_core,
                         (enum mlxsw_res_id)MLXSW_RES_ID_MAX_LAG_MEMBERS) * (u64)lag_id + (u64)port_index);
}

#line 1968  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_lag_mapping_set(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 port_index, u8 local_port)
{
  #line 1971 
  int index = mlxsw_core_lag_mapping_index(mlxsw_core,(unsigned short)((int)lag_id),(unsigned char)((int)port_index));
  #line 1974 
  *(mlxsw_core->lag.mapping + (unsigned long)index) = local_port;
  #line 1975 
  return;
}

#line 1978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u8 mlxsw_core_lag_mapping_get(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 port_index)
{
  #line 1981 
  int index = mlxsw_core_lag_mapping_index(mlxsw_core,(unsigned short)((int)lag_id),(unsigned char)((int)port_index));
  #line 1984 
  return *(mlxsw_core->lag.mapping + (unsigned long)index);
}

#line 1988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_lag_mapping_clear(struct mlxsw_core *mlxsw_core, u16 lag_id, u8 local_port)
{
  #line 1991 
  int i;
  #line 1993 
  i = 0;
  #line 1993 
  while (1) {
    #line 1993 
    ;
    #line 1993 
    if (! ((unsigned long long)i < mlxsw_core_res_get(mlxsw_core,
                           (enum mlxsw_res_id)MLXSW_RES_ID_MAX_LAG_MEMBERS))) 
      #line 1993 
      break;
    {
      #line 1994 
      int index = mlxsw_core_lag_mapping_index(mlxsw_core,(unsigned short)((int)lag_id),(unsigned char)((int)((unsigned char)i)));
      #line 1997 
      if ((int)*(mlxsw_core->lag.mapping + (unsigned long)index) == (int)local_port) 
        #line 1998 
        *(mlxsw_core->lag.mapping + (unsigned long)index) = (unsigned char)0U;
    }
    #line 1993 
    i ++;
  }
  #line 2000 
  return;
}

#line 2003  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_res_valid(struct mlxsw_core *mlxsw_core, enum mlxsw_res_id res_id)
{
  #line 2006 
  return mlxsw_res_valid(& mlxsw_core->res,res_id);
}

#line 2010  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u64 mlxsw_core_res_get(struct mlxsw_core *mlxsw_core, enum mlxsw_res_id res_id)
{
  #line 2013 
  return mlxsw_res_get(& mlxsw_core->res,res_id);
}

#line 2017  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int __mlxsw_core_port_init(struct mlxsw_core *mlxsw_core, u8 local_port, enum devlink_port_flavour flavour, u32 port_number, bool split, u32 split_port_subnumber, unsigned char *switch_id, unsigned char switch_id_len)
{
  #line 2028 
  int err;
  #line 2024 
  struct devlink *devlink = priv_to_devlink((void *)mlxsw_core);
  #line 2025 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2027 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2030 
  mlxsw_core_port->local_port = local_port;
  #line 2031 
  devlink_port_attrs_set(devlink_port,flavour,port_number,(_Bool)((bool)((int)split) != 0),split_port_subnumber,switch_id,(unsigned char)((int)switch_id_len));
  #line 2034 
  err = devlink_port_register(devlink,devlink_port,(unsigned int)local_port);
  #line 2035 
  if (err != 0) 
                #line 2036 
                memset((void *)mlxsw_core_port,0,392UL);
  #line 2037 
  return err;
}

#line 2040  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void __mlxsw_core_port_fini(struct mlxsw_core *mlxsw_core, u8 local_port)
{
  #line 2042 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2044 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2046 
  devlink_port_unregister(devlink_port);
  #line 2047 
  memset((void *)mlxsw_core_port,0,392UL);
  #line 2048 
  return;
}

#line 2050  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_port_init(struct mlxsw_core *mlxsw_core, u8 local_port, u32 port_number, bool split, u32 split_port_subnumber, unsigned char *switch_id, unsigned char switch_id_len)
{
  #line 2056 
  return __mlxsw_core_port_init(mlxsw_core,(unsigned char)((int)local_port),
                             (enum devlink_port_flavour)DEVLINK_PORT_FLAVOUR_PHYSICAL,
                             port_number,(_Bool)((bool)((int)split) != 0),
                             split_port_subnumber,switch_id,
                             (unsigned char)((int)switch_id_len));
}

#line 2063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_fini(struct mlxsw_core *mlxsw_core, u8 local_port)
{
  #line 2065 
  __mlxsw_core_port_fini(mlxsw_core,(unsigned char)((int)local_port));
  #line 2066 
  return;
}

#line 2069  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_cpu_port_init(struct mlxsw_core *mlxsw_core, void *port_driver_priv, unsigned char *switch_id, unsigned char switch_id_len)
{
  #line 2076 
  int err;
  #line 2074 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports;
  #line 2078 
  err = __mlxsw_core_port_init(mlxsw_core,(unsigned char)0,(enum devlink_port_flavour)DEVLINK_PORT_FLAVOUR_CPU,0U,(_Bool)0,0U,switch_id,(unsigned char)((int)switch_id_len));
  #line 2082 
  if (err != 0) 
                #line 2083 
                return err;
  #line 2085 
  mlxsw_core_port->port_driver_priv = port_driver_priv;
  #line 2086 
  return 0;
}

#line 2090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_cpu_port_fini(struct mlxsw_core *mlxsw_core)
{
  #line 2092 
  __mlxsw_core_port_fini(mlxsw_core,(unsigned char)0);
  #line 2093 
  return;
}

#line 2096  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_eth_set(struct mlxsw_core *mlxsw_core, u8 local_port, void *port_driver_priv, struct net_device *dev)
{
  #line 2099 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2101 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2103 
  mlxsw_core_port->port_driver_priv = port_driver_priv;
  #line 2104 
  devlink_port_type_eth_set(devlink_port,dev);
  #line 2105 
  return;
}

#line 2108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_ib_set(struct mlxsw_core *mlxsw_core, u8 local_port, void *port_driver_priv)
{
  #line 2111 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2113 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2115 
  mlxsw_core_port->port_driver_priv = port_driver_priv;
  #line 2116 
  devlink_port_type_ib_set(devlink_port,(struct ib_device *)0);
  #line 2117 
  return;
}

#line 2120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_port_clear(struct mlxsw_core *mlxsw_core, u8 local_port, void *port_driver_priv)
{
  #line 2123 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2125 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2127 
  mlxsw_core_port->port_driver_priv = port_driver_priv;
  #line 2128 
  devlink_port_type_clear(devlink_port);
  #line 2129 
  return;
}

#line 2132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
enum devlink_port_type mlxsw_core_port_type_get(struct mlxsw_core *mlxsw_core, u8 local_port)
{
  #line 2135 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2137 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2139 
  return devlink_port->type;
}

#line 2145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
struct devlink_port *mlxsw_core_port_devlink_port_get(struct mlxsw_core *mlxsw_core, u8 local_port)
{
  #line 2148 
  struct mlxsw_core_port *mlxsw_core_port = mlxsw_core->ports + (unsigned long)local_port;
  #line 2150 
  struct devlink_port *devlink_port = & mlxsw_core_port->devlink_port;
  #line 2152 
  return devlink_port;
}

#line 2156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_module_max_width(struct mlxsw_core *mlxsw_core, u8 module)
{
  #line 2158 
  enum mlxsw_reg_pmtm_module_type module_type;
  #line 2159 
  char pmtm_pl[16U];
  #line 2160 
  int err;
  #line 2162 
  mlxsw_reg_pmtm_pack((char *)(& pmtm_pl),(unsigned char)((int)module));
  #line 2163 
  err = mlxsw_reg_query(mlxsw_core,& mlxsw_reg_pmtm,(char *)(& pmtm_pl));
  #line 2164 
  if (err != 0) 
                #line 2165 
                return err;
  #line 2166 
  mlxsw_reg_pmtm_unpack((char *)(& pmtm_pl),& module_type);
  #line 2170 
  switch ((unsigned int)module_type) {
    #line 2171 
    case (unsigned int)0: 
                          #line 2171 
    ;
    #line 2172 
    case (unsigned int)1: 
                          #line 2172 
    ;
    #line 2173 
    return 4;
    #line 2174 
    case (unsigned int)8: 
                          #line 2174 
    ;
    #line 2175 
    return 2;
    #line 2176 
    case (unsigned int)2: 
                          #line 2176 
    ;
    #line 2177 
    case (unsigned int)4: 
                          #line 2177 
    ;
    #line 2178 
    return 1;
    #line 2179 
    default: 
             #line 2179 
    ;
    #line 2180 
    return -22;
  }
}

#line 2185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_core_buf_dump_dbg(struct mlxsw_core *mlxsw_core, char *buf, size_t size)
{
  #line 2189 
  int i;
  #line 2188 
  __be32 *m = (__be32 *)buf;
  #line 2190 
  int count = (int)(size / 4UL);
  #line 2192 
  i = count + -1;
  #line 2192 
  while (i >= 0) {
    #line 2193 
    if (*(m + (unsigned long)i) != 0U) 
                                       #line 2194 
                                       break;
    #line 2192 
    i --;
  }
  #line 2195 
  i ++;
  #line 2196 
  if (i != 0) 
              #line 2196 
              count = i; else 
                              #line 2196 
                              count = 1;
  #line 2197 
  i = 0;
  #line 2197 
  while (i < count) {
    {
      #line 2198 
      bool branch;
      #line 2198 
      struct _ddebug __UNIQUE_ID_ddebug457 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_core_buf_dump_dbg", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"%04x - %08x %08x %08x %08x\n", .lineno = (unsigned int)2198U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 2198 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug457.key.dd_key_false.key,(_Bool)0);
      #line 2198 
      if ((long)((long)((int)branch != 0)) != 0L) {
        #line 2198 
        ;
        #line 2198 
        ;
        #line 2198 
        __dynamic_dev_dbg(& __UNIQUE_ID_ddebug457,(mlxsw_core->bus_info)->dev,(char *)"%04x - %08x %08x %08x %08x\n",i * 4,__builtin_bswap32(*(m + (unsigned long)i)),__builtin_bswap32(*(m + ((unsigned long)i + (unsigned long)1U))),__builtin_bswap32(*(m + ((unsigned long)i + (unsigned long)2U))),__builtin_bswap32(*(m + ((unsigned long)i + (unsigned long)3U))));
      }
    }
    #line 2197 
    i += 4;
  }
  #line 2200 
  return;
}

#line 2203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_cmd_exec(struct mlxsw_core *mlxsw_core, u16 opcode, u8 opcode_mod, u32 in_mod, bool out_mbox_direct, bool reset_ok, char *in_mbox, size_t in_mbox_size, char *out_mbox, size_t out_mbox_size)
{
  #line 2208 
  u8 status;
  #line 2209 
  int err;
  #line 2211 
  if ((long)((in_mbox_size & 3UL) != 0UL) != 0L || (long)((out_mbox_size & 3UL) != 0UL) != 0L) {
    #line 2212 
    ldv_inline_asm();
    #line 2213 
    ldv_inline_asm();
    #line 2214 
    ldv_inline_asm();
    #line 2211 
    ;
  }
  #line 2212 
  if ((mlxsw_core->bus)->cmd_exec == (int (*)(void *, u16 , u8 , u32 , bool , char *, size_t , char *, size_t , u8 *))0) 
    #line 2213 
    return -95;
  {
    #line 2215 
    bool branch;
    #line 2215 
    struct _ddebug __UNIQUE_ID_ddebug459 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_cmd_exec", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"Cmd exec (opcode=%x(%s),opcode_mod=%x,in_mod=%x)\n", .lineno = (unsigned int)2215U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
    #line 2215 
    branch = arch_static_branch(& __UNIQUE_ID_ddebug459.key.dd_key_false.key,(_Bool)0);
    #line 2215 
    if ((long)((long)((int)branch != 0)) != 0L) {
      #line 2215 
      ;
      #line 2215 
      ;
      #line 2215 
      ;
      #line 2215 
      ;
      #line 2215 
      __dynamic_dev_dbg(& __UNIQUE_ID_ddebug459,(mlxsw_core->bus_info)->dev,(char *)"Cmd exec (opcode=%x(%s),opcode_mod=%x,in_mod=%x)\n",(int)opcode,mlxsw_cmd_opcode_str((unsigned short)((int)opcode)),(int)opcode_mod,in_mod);
    }
  }
  #line 2217 
  if (in_mbox != (char *)0) {
    {
      #line 2218 
      bool branch_0;
      #line 2218 
      struct _ddebug __UNIQUE_ID_ddebug460 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_cmd_exec", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"Input mailbox:\n", .lineno = (unsigned int)2218U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 2218 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug460.key.dd_key_false.key,(_Bool)0);
      #line 2218 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 2218 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug460,(mlxsw_core->bus_info)->dev,(char *)"Input mailbox:\n");
    }
    #line 2219 
    mlxsw_core_buf_dump_dbg(mlxsw_core,in_mbox,in_mbox_size);
  }
  #line 2222 
  err = (*((mlxsw_core->bus)->cmd_exec))(mlxsw_core->bus_priv,(unsigned short)((int)opcode),(unsigned char)((int)opcode_mod),in_mod,(_Bool)((bool)((int)out_mbox_direct) != 0),in_mbox,in_mbox_size,out_mbox,out_mbox_size,& status);
  #line 2227 
  if (err == 0 && out_mbox != (char *)0) {
    {
      #line 2228 
      bool branch_1;
      #line 2228 
      struct _ddebug __UNIQUE_ID_ddebug461 = {.modname = (char *)"mlxsw_core", .function = (char *)"mlxsw_cmd_exec", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c", .format = (char *)"Output mailbox:\n", .lineno = (unsigned int)2228U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 2228 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug461.key.dd_key_false.key,(_Bool)0);
      #line 2228 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 2228 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug461,(mlxsw_core->bus_info)->dev,(char *)"Output mailbox:\n");
    }
    #line 2229 
    mlxsw_core_buf_dump_dbg(mlxsw_core,out_mbox,out_mbox_size);
  }
  #line 2232 
  if (((int)reset_ok != 0 && err == -5) && (unsigned int)status == 38U) 
    #line 2234 
    err = 0;
  else 
    #line 2235 
    if (err == -5 && (unsigned int)status != 0U) {
      #line 2236 
      ;
      #line 2236 
      ;
      #line 2236 
      ;
      #line 2236 
      ;
      #line 2236 
      ;
      #line 2236 
      _dev_err((mlxsw_core->bus_info)->dev,(char *)"Cmd exec failed (opcode=%x(%s),opcode_mod=%x,in_mod=%x,status=%x(%s))\n",(int)opcode,mlxsw_cmd_opcode_str((unsigned short)((int)opcode)),(int)opcode_mod,in_mod,(int)status,mlxsw_cmd_status_str((unsigned char)((int)status)));
    }
    else 
      #line 2239 
      if (err == -110) {
        #line 2240 
        ;
        #line 2240 
        ;
        #line 2240 
        ;
        #line 2240 
        ;
        #line 2240 
        _dev_err((mlxsw_core->bus_info)->dev,(char *)"Cmd exec timed-out (opcode=%x(%s),opcode_mod=%x,in_mod=%x)\n",(int)opcode,mlxsw_cmd_opcode_str((unsigned short)((int)opcode)),(int)opcode_mod,in_mod);
      }
  #line 2245 
  return err;
}

#line 2249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_schedule_dw(struct delayed_work *dwork, unsigned long delay)
{
  #line 2251 
  return (int)cif_queue_delayed_work(mlxsw_wq,dwork,delay);
}

#line 2255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
bool mlxsw_core_schedule_work(struct work_struct *work)
{
  #line 2257 
  return cif_queue_work(mlxsw_owq,work);
}

#line 2261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_flush_owq(void)
{
  #line 2263 
  flush_workqueue(mlxsw_owq);
  #line 2264 
  return;
}

#line 2267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_kvd_sizes_get(struct mlxsw_core *mlxsw_core, struct mlxsw_config_profile *profile, u64 *p_single_size, u64 *p_double_size, u64 *p_linear_size)
{
  #line 2272 
  struct mlxsw_driver *driver = mlxsw_core->driver;
  #line 2274 
  if (driver->kvd_sizes_get == (int (*)(struct mlxsw_core *, struct mlxsw_config_profile *, u64 *, u64 *, u64 *))0) 
    #line 2275 
    return -22;
  #line 2277 
  return (*(driver->kvd_sizes_get))(mlxsw_core,profile,p_single_size,
                                 p_double_size,p_linear_size);
}

#line 2283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_fw_flash_start(struct mlxsw_core *mlxsw_core)
{
  #line 2285 
  mlxsw_core->fw_flash_in_progress = (_Bool)1;
  #line 2286 
  return;
}

#line 2289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_fw_flash_end(struct mlxsw_core *mlxsw_core)
{
  #line 2291 
  mlxsw_core->fw_flash_in_progress = (_Bool)0;
  #line 2292 
  return;
}

#line 2295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
int mlxsw_core_resources_query(struct mlxsw_core *mlxsw_core, char *mbox, struct mlxsw_res *res)
{
  #line 2298 
  int index;
  #line 2298 
  int i;
  #line 2299 
  u64 data;
  #line 2300 
  u16 id;
  #line 2301 
  int err;
  #line 2303 
  if (res == (struct mlxsw_res *)0) 
                                    #line 2304 
                                    return 0;
  #line 2306 
  mlxsw_cmd_mbox_zero(mbox);
  #line 2308 
  index = 0;
  #line 2308 
  while (index <= 99) {
    #line 2310 
    err = mlxsw_cmd_query_resources(mlxsw_core,mbox,index);
    #line 2311 
    if (err != 0) 
                  #line 2312 
                  return err;
    #line 2314 
    i = 0;
    #line 2314 
    while (i <= 31) {
      {
        #line 2315 
        id = (unsigned short)mlxsw_cmd_mbox_query_resource_id_get(mbox,
                                           (unsigned short)((int)((unsigned short)i)));
        #line 2316 
        data = mlxsw_cmd_mbox_query_resource_data_get(mbox,(unsigned short)((int)((unsigned short)i)));
        #line 2318 
        if ((unsigned int)id == 65535U) 
                                        #line 2319 
                                        return 0;
        #line 2321 
        mlxsw_res_parse(res,(unsigned short)((int)id),data);
      }
      #line 2314 
      i ++;
    }
    #line 2308 
    index ++;
  }
  #line 2328 
  return -5;
}

#line 2332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u32 mlxsw_core_read_frc_h(struct mlxsw_core *mlxsw_core)
{
  #line 2334 
  return (*((mlxsw_core->bus)->read_frc_h))(mlxsw_core->bus_priv);
}

#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
u32 mlxsw_core_read_frc_l(struct mlxsw_core *mlxsw_core)
{
  #line 2340 
  return (*((mlxsw_core->bus)->read_frc_l))(mlxsw_core->bus_priv);
}

#line 2344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
void mlxsw_core_emad_string_tlv_enable(struct mlxsw_core *mlxsw_core)
{
  #line 2346 
  mlxsw_core->emad.enable_string_tlv = (_Bool)1;
  #line 2347 
  return;
}

#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static int mlxsw_core_module_init(void)
{
  #line 2352 
  int err;
  #line 2354 
  mlxsw_wq = alloc_workqueue((char *)(& mlxsw_core_driver_name),0U,0);
  #line 2355 
  if (mlxsw_wq == (struct workqueue_struct *)0) 
                                                #line 2356 
                                                return -12;
  #line 2357 
  mlxsw_owq = alloc_workqueue((char *)"%s_ordered",655362U,1,(char *)(& mlxsw_core_driver_name));
  #line 2359 
  if (mlxsw_owq == (struct workqueue_struct *)0) {
    #line 2360 
    err = -12;
    #line 2361 
    goto err_alloc_ordered_workqueue;
  }
  #line 2363 
  return 0;
  #line 2365 
  err_alloc_ordered_workqueue: 
                               #line 2365 
  ;
  #line 2366 
  destroy_workqueue(mlxsw_wq);
  #line 2367 
  return err;
}

#line 2370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core.c"
static void mlxsw_core_module_exit(void)
{
  #line 2372 
  destroy_workqueue(mlxsw_owq);
  #line 2373 
  destroy_workqueue(mlxsw_wq);
  #line 2374 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
#line 93 
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);
#line 94 
#line 94 
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);
#line 98  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
void emg_mlxsw_core_module_exit(void)
{
  #line 99 
  mlxsw_core_module_exit();
  #line 100 
  return;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
int emg_mlxsw_core_module_init(void)
{
  #line 103 
  return mlxsw_core_module_init();
}

#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 138 
  ldv_init_list_head(list);
  #line 139 
  return;
}

#line 305  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static bool cif_queue_work(struct workqueue_struct *wq, struct work_struct *work)
{
  #line 309 
  return emg_queue_work(wq,work);
}

#line 313  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static bool cif_queue_delayed_work(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  #line 317 
  return emg_queue_delayed_work(wq,dwork,delay);
}

#line 468  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 471 
  return ldv_kmalloc(size,flags);
}

#line 482  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 485 
  return ldv_kcalloc(n,size,flags);
}

#line 503  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  #line 506 
  return ldv_kzalloc(size,flags);
}

#line 667  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_lock_bh_trans_list_lock_of_NOT_ARG_SIGN(spinlock_t *lock)
{
  #line 670 
  ldv_spin_model_lock((char *)"trans_list_lock_of_NOT_ARG_SIGN");
  #line 672 
  spin_lock_bh(lock);
  #line 673 
  return;
}

#line 676  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_unlock_bh_trans_list_lock_of_NOT_ARG_SIGN(spinlock_t *lock)
{
  #line 679 
  ldv_spin_model_unlock((char *)"trans_list_lock_of_NOT_ARG_SIGN");
  #line 681 
  spin_unlock_bh(lock);
  #line 682 
  return;
}

#line 685  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_lock_mlxsw_core_driver_list_lock(spinlock_t *lock)
{
  #line 688 
  ldv_spin_model_lock((char *)"mlxsw_core_driver_list_lock");
  #line 690 
  spin_lock(lock);
  #line 691 
  return;
}

#line 694  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static void cif_spin_unlock_mlxsw_core_driver_list_lock(spinlock_t *lock)
{
  #line 697 
  ldv_spin_model_unlock((char *)"mlxsw_core_driver_list_lock");
  #line 699 
  spin_unlock(lock);
  #line 700 
  return;
}

#line 703  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core.i.aux"
static int cif_strcmp(char *cs, char *ct)
{
  #line 706 
  return ldv_strcmp(cs,ct);
}

#line 7  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
#line 7 
void ldv_atomic_inc(atomic_t *v);
#line 8 
#line 8 
void ldv_atomic_dec(atomic_t *v);
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch_clear_bit(long nr, unsigned long *addr)
{
  #line 74 
  if (0 != 0) 
              #line 76 
              ldv_inline_asm(); else 
                                     #line 79 
                                     ldv_inline_asm();
  #line 80 
  return;
}

#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch_clear_bit_unlock(long nr, unsigned long *addr)
{
  #line 87 
  ldv_inline_asm();
  #line 88 
  arch_clear_bit(nr,addr);
  #line 89 
  return;
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool arch_test_and_set_bit(long nr, unsigned long *addr)
{
  #line 138 
  bool c;
  #line 139 
  ldv_inline_asm();
  #line 138 
  return c;
}

#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool arch_test_and_set_bit_lock(long nr, unsigned long *addr)
{
  #line 144 
  return arch_test_and_set_bit(nr,addr);
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-lock.h"
__inline static void clear_bit_unlock(long nr, unsigned long *addr)
{
  #line 25 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 26 
  arch_clear_bit_unlock(nr,addr);
  #line 27 
  return;
}

#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-lock.h"
__inline static bool test_and_set_bit_lock(long nr, unsigned long *addr)
{
  #line 55 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 56 
  return arch_test_and_set_bit_lock(nr,addr);
}

#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitops.h"
__inline static __u32 rol32(__u32 word, unsigned int shift)
{
  #line 102 
  return (word << (shift & 31U)) | (word >> (- shift & 31U));
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add_0(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_2174 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  #line 79 
  __list_add_0(new,head,head->next);
  #line 80 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_0(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_2176 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry_0(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del_0(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del_0(struct list_head *entry)
{
  #line 139 
  __list_del_entry_0(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 61 
int memcmp(void *, void *, size_t);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_2228 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 237 
#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void atomic_inc(atomic_t *v);
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 181  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void atomic_dec(atomic_t *v);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void *ERR_PTR(long error);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static long PTR_ERR_0(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static bool IS_ERR_0(void *ptr);
#line 677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
__inline static void rep_nop(void)
{
  #line 679 
  ldv_inline_asm();
  #line 680 
  return;
}

#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
__inline static void cpu_relax(void)
{
  #line 684 
  rep_nop();
  #line 685 
  return;
}

#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
#line 8 
void __local_bh_disable_ip(unsigned long, unsigned int);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  #line 19 
  __here_0: 
            #line 19 
  ;
  #line 19 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  #line 21 
  return;
}

#line 23 
#line 23 
void __local_bh_enable_ip(unsigned long, unsigned int);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  #line 32 
  __here_0: 
            #line 32 
  ;
  #line 32 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  #line 34 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25 
void *ldv_err_ptr(long error);
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
#line 221 
int rcu_read_lock_held(void);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 385 
extern struct workqueue_struct *system_wq;
#line 496 
#line 295  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static bool cif_queue_work_0(struct workqueue_struct *wq, struct work_struct *work);
#line 550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
__inline static bool schedule_work(struct work_struct *work)
{
  #line 552 
  return cif_queue_work_0(system_wq,work);
}

#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
#line 130 
int rhashtable_init(struct rhashtable *, struct rhashtable_params *);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 364  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/packed_struct.h"
__inline static u32 __get_unaligned_cpu32(void *p)
{
  #line 18 
  struct __una_u32 *ptr = (struct __una_u32 *)p;
  #line 19 
  return ptr->x;
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
__inline static u32 jhash(void *key, u32 length, u32 initval)
{
  #line 72 
  u32 a;
  #line 72 
  u32 b;
  #line 72 
  u32 c;
  #line 73 
  u8 *k = (u8 *)key;
  #line 76 
  c = (length + initval) + 3735928559U;
  #line 76 
  b = c;
  #line 76 
  a = b;
  #line 79 
  while (length > 12U) {
    #line 80 
    a = __get_unaligned_cpu32((void *)k) + a;
    #line 81 
    b = __get_unaligned_cpu32((void *)(k + 4U)) + b;
    #line 82 
    c = __get_unaligned_cpu32((void *)(k + 8U)) + c;
    #line 83 
    a -= c;
    #line 83 
    a = rol32(c,4U) ^ a;
    #line 83 
    c += b;
    #line 83 
    b -= a;
    #line 83 
    b = rol32(a,6U) ^ b;
    #line 83 
    a += c;
    #line 83 
    c -= b;
    #line 83 
    c = rol32(b,8U) ^ c;
    #line 83 
    b += a;
    #line 83 
    a -= c;
    #line 83 
    a = rol32(c,16U) ^ a;
    #line 83 
    c += b;
    #line 83 
    b -= a;
    #line 83 
    b = rol32(a,19U) ^ b;
    #line 83 
    a += c;
    #line 83 
    c -= b;
    #line 83 
    c = rol32(b,4U) ^ c;
    #line 83 
    b += a;
    #line 84 
    length += 4294967284U;
    #line 85 
    k += 12U;
  }
  #line 88 
  switch (length) {
    #line 89 
    case (u32)12: 
                  #line 89 
    ;
    #line 89 
    c = ((unsigned int)*(k + 11U) << 24) + c;
    #line 90 
    case (u32)11: 
                  #line 90 
    ;
    #line 90 
    c = ((unsigned int)*(k + 10U) << 16) + c;
    #line 91 
    case (u32)10: 
                  #line 91 
    ;
    #line 91 
    c = ((unsigned int)*(k + 9U) << 8) + c;
    #line 92 
    case (u32)9: 
                 #line 92 
    ;
    #line 92 
    c = (unsigned int)*(k + 8U) + c;
    #line 93 
    case (u32)8: 
                 #line 93 
    ;
    #line 93 
    b = ((unsigned int)*(k + 7U) << 24) + b;
    #line 94 
    case (u32)7: 
                 #line 94 
    ;
    #line 94 
    b = ((unsigned int)*(k + 6U) << 16) + b;
    #line 95 
    case (u32)6: 
                 #line 95 
    ;
    #line 95 
    b = ((unsigned int)*(k + 5U) << 8) + b;
    #line 96 
    case (u32)5: 
                 #line 96 
    ;
    #line 96 
    b = (unsigned int)*(k + 4U) + b;
    #line 97 
    case (u32)4: 
                 #line 97 
    ;
    #line 97 
    a = ((unsigned int)*(k + 3U) << 24) + a;
    #line 98 
    case (u32)3: 
                 #line 98 
    ;
    #line 98 
    a = ((unsigned int)*(k + 2U) << 16) + a;
    #line 99 
    case (u32)2: 
                 #line 99 
    ;
    #line 99 
    a = ((unsigned int)*(k + 1U) << 8) + a;
    #line 100 
    case (u32)1: 
                 #line 100 
    ;
    #line 100 
    a = (unsigned int)*k + a;
    #line 101 
    c ^= b;
    #line 101 
    c -= rol32(b,14U);
    #line 101 
    a ^= c;
    #line 101 
    a -= rol32(c,11U);
    #line 101 
    b ^= a;
    #line 101 
    b -= rol32(a,25U);
    #line 101 
    c ^= b;
    #line 101 
    c -= rol32(b,16U);
    #line 101 
    a ^= c;
    #line 101 
    a -= rol32(c,4U);
    #line 101 
    b ^= a;
    #line 101 
    b -= rol32(a,14U);
    #line 101 
    c ^= b;
    #line 101 
    c -= rol32(b,24U);
    #line 102 
    case (u32)0: 
                 #line 102 
    ;
    #line 103 
    break;
  }
  #line 106 
  return c;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
__inline static u32 jhash2(u32 *k, u32 length, u32 initval)
{
  #line 118 
  u32 a;
  #line 118 
  u32 b;
  #line 118 
  u32 c;
  #line 121 
  c = ((length << 2) + initval) + 3735928559U;
  #line 121 
  b = c;
  #line 121 
  a = b;
  #line 124 
  while (length > 3U) {
    #line 125 
    a = *k + a;
    #line 126 
    b = *(k + 1U) + b;
    #line 127 
    c = *(k + 2U) + c;
    #line 128 
    a -= c;
    #line 128 
    a = rol32(c,4U) ^ a;
    #line 128 
    c += b;
    #line 128 
    b -= a;
    #line 128 
    b = rol32(a,6U) ^ b;
    #line 128 
    a += c;
    #line 128 
    c -= b;
    #line 128 
    c = rol32(b,8U) ^ c;
    #line 128 
    b += a;
    #line 128 
    a -= c;
    #line 128 
    a = rol32(c,16U) ^ a;
    #line 128 
    c += b;
    #line 128 
    b -= a;
    #line 128 
    b = rol32(a,19U) ^ b;
    #line 128 
    a += c;
    #line 128 
    c -= b;
    #line 128 
    c = rol32(b,4U) ^ c;
    #line 128 
    b += a;
    #line 129 
    length += 4294967293U;
    #line 130 
    k += 3U;
  }
  #line 134 
  switch (length) {
    #line 135 
    case (u32)3: 
                 #line 135 
    ;
    #line 135 
    c = *(k + 2U) + c;
    #line 136 
    case (u32)2: 
                 #line 136 
    ;
    #line 136 
    b = *(k + 1U) + b;
    #line 137 
    case (u32)1: 
                 #line 137 
    ;
    #line 137 
    a = *k + a;
    #line 138 
    c ^= b;
    #line 138 
    c -= rol32(b,14U);
    #line 138 
    a ^= c;
    #line 138 
    a -= rol32(c,11U);
    #line 138 
    b ^= a;
    #line 138 
    b -= rol32(a,25U);
    #line 138 
    c ^= b;
    #line 138 
    c -= rol32(b,16U);
    #line 138 
    a ^= c;
    #line 138 
    a -= rol32(c,4U);
    #line 138 
    b ^= a;
    #line 138 
    b -= rol32(a,14U);
    #line 138 
    c ^= b;
    #line 138 
    c -= rol32(b,24U);
    #line 139 
    case (u32)0: 
                 #line 139 
    ;
    #line 140 
    break;
  }
  #line 143 
  return c;
}

#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bit_spinlock.h"
__inline static void bit_spin_lock(int bitnum, unsigned long *addr)
{
  #line 25 
  __preempt_count_add(1);
  #line 26 
  ldv_inline_asm();
  #line 27 
  while (1) {
    #line 27 
    if (! ((long)((int)test_and_set_bit_lock((long)bitnum,addr) != 0) != 0L)) 
      #line 27 
      break;
    #line 30 
    ldv_inline_asm();
    #line 28 
    __preempt_count_sub(1);
    #line 29 
    while (1) {
      #line 30 
      cpu_relax();
      #line 30 
      if (! ((int)test_bit((long)bitnum,addr) != 0)) 
                                                     #line 29 
                                                     break;
    }
    #line 32 
    __preempt_count_add(1);
    #line 33 
    ldv_inline_asm();
  }
  #line 36 
  return;
}

#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bit_spinlock.h"
__inline static void bit_spin_unlock(int bitnum, unsigned long *addr)
{
  #line 60 
  int tmp_0;
  #line 60 
  if (test_bit((long)bitnum,addr)) 
                                   #line 60 
                                   tmp_0 = 0; else 
                                                   #line 60 
                                                   tmp_0 = 1;
  #line 60 
  if ((long)tmp_0 != 0L) {
    #line 61 
    ldv_inline_asm();
    #line 62 
    ldv_inline_asm();
    #line 63 
    ldv_inline_asm();
    #line 60 
    ;
  }
  #line 63 
  clear_bit_unlock((long)bitnum,addr);
  #line 67 
  ldv_inline_asm();
  #line 65 
  __preempt_count_sub(1);
  #line 67 
  return;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static bool rht_is_a_nulls(struct rhash_head *ptr)
{
  #line 110 
  return (_Bool)(((unsigned long)ptr & 1UL) != 0UL);
}

#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void *rht_obj(struct rhashtable *ht, struct rhash_head *he)
{
  #line 116 
  return (void *)((char *)he + - ((int)ht->p.head_offset));
}

#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static unsigned int rht_bucket_index(struct bucket_table *tbl, unsigned int hash)
{
  #line 122 
  return (tbl->size + 4294967295U) & hash;
}

#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static unsigned int rht_key_get_hash(struct rhashtable *ht, void *key, struct rhashtable_params params, unsigned int hash_rnd)
{
  #line 129 
  unsigned int hash;
  #line 132 
  if (0 == 0) 
              #line 133 
              hash = (*(ht->p.hashfn))(key,ht->key_len,hash_rnd);
  else 
    #line 134 
    if ((unsigned int)params.key_len != 0U) {
      #line 135 
      unsigned int key_len = (unsigned int)params.key_len;
      #line 137 
      if (params.hashfn != (u32 (*)(void *, u32 , u32 ))0) 
                                                           #line 138 
                                                           hash = (*(params.hashfn))(key,key_len,hash_rnd);
      else 
        #line 139 
        if (((unsigned long)key_len & 3UL) != 0UL) 
                                                   #line 140 
                                                   hash = jhash(key,key_len,hash_rnd); else 
                                                                    #line 142 
                                                                    hash = jhash2((u32 *)key,key_len / 4U,hash_rnd);
    }
    else {
      #line 144 
      unsigned int key_len_0 = (unsigned int)ht->p.key_len;
      #line 146 
      if (params.hashfn != (u32 (*)(void *, u32 , u32 ))0) 
                                                           #line 147 
                                                           hash = (*(params.hashfn))(key,key_len_0,hash_rnd); else 
                                                                    #line 149 
                                                                    hash = jhash(key,key_len_0,hash_rnd);
    }
  #line 152 
  return hash;
}

#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static unsigned int rht_key_hashfn(struct rhashtable *ht, struct bucket_table *tbl, void *key, struct rhashtable_params params)
{
  #line 159 
  unsigned int hash = rht_key_get_hash(ht,key,params,tbl->hash_rnd);
  #line 161 
  return rht_bucket_index(tbl,hash);
}

#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static unsigned int rht_head_hashfn(struct rhashtable *ht, struct bucket_table *tbl, struct rhash_head *he, struct rhashtable_params params)
{
  #line 171 
  unsigned int tmp_0;
  #line 173 
  unsigned int tmp_4;
  #line 168 
  char *ptr = rht_obj(ht,he);
  #line 173 
  if ((long)(params.obj_hashfn != (u32 (*)(void *, u32 , u32 ))0) != 0L) {
    #line 171 
    ;
    #line 171 
    if ((unsigned int)params.key_len != 0U) 
                                            #line 171 
                                            tmp_0 = (unsigned int)params.key_len; else 
                                                                    #line 171 
                                                                    tmp_0 = (unsigned int)ht->p.key_len;
    #line 171 
    ;
    #line 170 
    ;
    #line 173 
    tmp_4 = rht_bucket_index(tbl,
                         (*(params.obj_hashfn))((void *)ptr,tmp_0,tbl->hash_rnd));
  }
  else 
       #line 173 
       tmp_4 = rht_key_hashfn(ht,tbl,(void *)(ptr + (unsigned long)params.key_offset),params);
  #line 173 
  return tmp_4;
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static bool rht_grow_above_75(struct rhashtable *ht, struct bucket_table *tbl)
{
  #line 186 
  int tmp_0;
  #line 186 
  ;
  #line 186 
  if ((unsigned int)atomic_read(& ht->nelems) > (tbl->size / 4U) * 3U) 
    #line 186 
    if (ht->p.max_size == 0U || tbl->size < ht->p.max_size) 
                                                            #line 186 
                                                            tmp_0 = 1; else 
                                                                    #line 186 
                                                                    tmp_0 = 0;
  else 
       #line 186 
       tmp_0 = 0;
  #line 186 
  return (_Bool)(tmp_0 != 0);
}

#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static bool rht_shrink_below_30(struct rhashtable *ht, struct bucket_table *tbl)
{
  #line 199 
  int tmp_0;
  #line 199 
  ;
  #line 199 
  if ((unsigned int)atomic_read(& ht->nelems) < (tbl->size * 3U) / 10U) 
    #line 199 
    if (tbl->size > (unsigned int)ht->p.min_size) 
                                                  #line 199 
                                                  tmp_0 = 1; else 
                                                                  #line 199 
                                                                  tmp_0 = 0;
  else 
       #line 199 
       tmp_0 = 0;
  #line 199 
  return (_Bool)(tmp_0 != 0);
}

#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static bool rht_grow_above_100(struct rhashtable *ht, struct bucket_table *tbl)
{
  #line 211 
  int tmp_0;
  #line 211 
  ;
  #line 211 
  if ((unsigned int)atomic_read(& ht->nelems) > tbl->size) 
    #line 211 
    if (ht->p.max_size == 0U || tbl->size < ht->p.max_size) 
                                                            #line 211 
                                                            tmp_0 = 1; else 
                                                                    #line 211 
                                                                    tmp_0 = 0;
  else 
       #line 211 
       tmp_0 = 0;
  #line 211 
  return (_Bool)(tmp_0 != 0);
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static bool rht_grow_above_max(struct rhashtable *ht, struct bucket_table *tbl)
{
  #line 223 
  ;
  #line 223 
  return (_Bool)((unsigned int)atomic_read(& ht->nelems) >= ht->max_elems);
}

#line 227 
#line 227 
int lockdep_rht_mutex_is_held(struct rhashtable *);
#line 228 
#line 228 
int lockdep_rht_bucket_is_held(struct bucket_table *, u32);
#line 242 
#line 242 
void *rhashtable_insert_slow(struct rhashtable *, void *, struct rhash_head *);
#line 262 
#line 262 
void rhashtable_destroy(struct rhashtable *);
#line 264 
#line 264 
struct rhash_lock_head **rht_bucket_nested(struct bucket_table *, unsigned int);
#line 266 
#line 266 
struct rhash_lock_head **__rht_bucket_nested(struct bucket_table *, unsigned int);
#line 268 
#line 268 
struct rhash_lock_head **rht_bucket_nested_insert(struct rhashtable *, struct bucket_table *, unsigned int);
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_lock_head **rht_bucket(struct bucket_table *tbl, unsigned int hash)
{
  #line 290 
  struct rhash_lock_head **tmp_0;
  #line 290 
  if ((long)(tbl->nest != 0U) != 0L) 
                                     #line 290 
                                     tmp_0 = rht_bucket_nested(tbl,hash); else 
                                                                    #line 290 
                                                                    tmp_0 = & tbl->buckets[hash];
  #line 290 
  return tmp_0;
}

#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_lock_head **rht_bucket_var(struct bucket_table *tbl, unsigned int hash)
{
  #line 297 
  struct rhash_lock_head **tmp_0;
  #line 297 
  if ((long)(tbl->nest != 0U) != 0L) 
                                     #line 297 
                                     tmp_0 = __rht_bucket_nested(tbl,hash); else 
                                                                    #line 297 
                                                                    tmp_0 = & tbl->buckets[hash];
  #line 297 
  return tmp_0;
}

#line 301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_lock_head **rht_bucket_insert(struct rhashtable *ht, struct bucket_table *tbl, unsigned int hash)
{
  #line 304 
  struct rhash_lock_head **tmp_0;
  #line 304 
  if ((long)(tbl->nest != 0U) != 0L) 
                                     #line 304 
                                     tmp_0 = rht_bucket_nested_insert(ht,tbl,hash); else 
                                                                    #line 304 
                                                                    tmp_0 = & tbl->buckets[hash];
  #line 304 
  return tmp_0;
}

#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void rht_lock(struct bucket_table *tbl, struct rhash_lock_head **bkt)
{
  #line 330 
  local_bh_disable();
  #line 331 
  bit_spin_lock(0,(unsigned long *)bkt);
  #line 332 
  __here_0: 
            #line 332 
  ;
  #line 332 
  ;
  #line 332 
  lock_acquire(& tbl->dep_map,0U,0,0,1,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 334 
  return;
}

#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void rht_unlock(struct bucket_table *tbl, struct rhash_lock_head **bkt)
{
  #line 347 
  __here_0: 
            #line 347 
  ;
  #line 347 
  ;
  #line 347 
  lock_release(& tbl->dep_map,(unsigned long)((void *)0));
  #line 348 
  bit_spin_unlock(0,(unsigned long *)bkt);
  #line 349 
  local_bh_enable();
  #line 350 
  return;
}

#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_head *__rht_ptr(struct rhash_lock_head **bkt)
{
  #line 355 
  unsigned long tmp;
  #line 355 
  if (((unsigned long)*bkt & 18446744073709551614UL) != 0UL) 
                                                             #line 355 
                                                             tmp = (unsigned long)*bkt & 18446744073709551614UL; else 
                                                                    #line 355 
                                                                    tmp = (unsigned long)bkt | 1UL;
  #line 355 
  return (struct rhash_head *)tmp;
}

#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_head *rht_ptr_rcu(struct rhash_lock_head **bkt)
{
  #line 372 
  struct rhash_head *________p1;
  #line 370 
  struct rhash_head *p = __rht_ptr(bkt);
  {
    #line 373 
    union __anonunion___u_2540 __u;
    #line 372 
    __read_once_size((void *)(& p),(void *)(& __u.__c),8);
    #line 372 
    ________p1 = (__u.__val);
    {
      #line 372 
      bool __warned;
      #line 372 
      if (debug_lockdep_rcu_enabled() != 0) 
        #line 372 
        if (! __warned) {
          #line 372 
          if (rcu_read_lock_held() == 0) {
            #line 372 
            __warned = (_Bool)1;
            #line 372 
            lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",372,(char *)"suspicious rcu_dereference_check() usage");
          }
        }
    }
    }
  #line 372 
  return ________p1;
}

#line 375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_head *rht_ptr(struct rhash_lock_head **bkt, struct bucket_table *tbl, unsigned int hash)
{
  {
    #line 380 
    bool __warned;
    #line 380 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 380 
      if (! __warned) {
        #line 380 
        if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
          #line 380 
          __warned = (_Bool)1;
          #line 380 
          lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",380,(char *)"suspicious rcu_dereference_protected() usage");
        }
      }
  }
  #line 380 
  return __rht_ptr(bkt);
}

#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void rht_assign_unlock(struct bucket_table *tbl, struct rhash_lock_head **bkt, struct rhash_head *obj)
{
  #line 403 
  struct rhash_head **p = (struct rhash_head **)bkt;
  #line 405 
  if ((int)rht_is_a_nulls(obj) != 0) 
                                     #line 406 
                                     obj = (struct rhash_head *)0;
  #line 407 
  __here_0: 
            #line 407 
  ;
  #line 407 
  ;
  #line 407 
  lock_release(& tbl->dep_map,(unsigned long)((void *)0));
  {
    #line 408 
    uintptr_t _r_a_p__v = (unsigned long)obj;
    #line 410 
    ldv_inline_asm();
    {
      #line 409 
      union __anonunion___u_2548 __u = {.__val = (struct rhash_head *)_r_a_p__v};
      #line 408 
      __write_once_size((void *)p,(void *)(& __u.__c),8);
      #line 408 
      struct rhash_head *tmp_4 = __u.__val;
    }
  }
  #line 411 
  ldv_inline_asm();
  #line 409 
  __preempt_count_sub(1);
  #line 411 
  local_bh_enable();
  #line 412 
  return;
}

#line 578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static int rhashtable_compare(struct rhashtable_compare_arg *arg, void *obj)
{
  #line 581 
  struct rhashtable *ht = arg->ht;
  #line 582 
  char *ptr = (char *)obj;
  #line 584 
  return memcmp((void *)(ptr + (unsigned long)ht->p.key_offset),arg->key,
             (unsigned long)ht->p.key_len);
}

#line 588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static struct rhash_head *__rhashtable_lookup(struct rhashtable *ht, void *key, struct rhashtable_params params)
{
  #line 621 
  struct bucket_table *________p1_1;
  #line 601 
  struct bucket_table *________p1;
  #line 596 
  struct rhash_lock_head **bkt;
  #line 597 
  struct bucket_table *tbl;
  #line 598 
  struct rhash_head *he;
  #line 599 
  unsigned int hash;
  #line 592 
  struct rhashtable_compare_arg arg = {.ht = ht, .key = key};
  {
    #line 602 
    union __anonunion___u_2550 __u;
    #line 601 
    __read_once_size((void *)(& ht->tbl),(void *)(& __u.__c),8);
    #line 601 
    ________p1 = (__u.__val);
    {
      #line 601 
      bool __warned;
      #line 601 
      if (lockdep_rht_mutex_is_held(ht) == 0) {
        #line 601 
        if (rcu_read_lock_held() == 0) {
          #line 601 
          if (debug_lockdep_rcu_enabled() != 0) 
            #line 601 
            if (! __warned) {
              #line 601 
              __warned = (_Bool)1;
              #line 601 
              lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",601,(char *)"suspicious rcu_dereference_check() usage");
            }
        }
      }
    }
    }
  #line 601 
  tbl = ________p1;
  #line 602 
  restart: 
           #line 602 
  ;
  #line 603 
  hash = rht_key_hashfn(ht,tbl,key,params);
  #line 604 
  bkt = rht_bucket(tbl,hash);
  #line 605 
  while (1) {
    #line 607 
    ldv_inline_asm();
    #line 606 
    he = rht_ptr_rcu(bkt);
    #line 606 
    while (1) {
      #line 606 
      struct rhash_head *________p1_0;
      #line 606 
      if (rht_is_a_nulls(he)) 
                              #line 606 
                              break;
      {
        #line 607 
        int tmp_10;
        #line 607 
        if (params.obj_cmpfn != (int (*)(struct rhashtable_compare_arg *, void *))0) {
          #line 607 
          tmp_10 = (*(params.obj_cmpfn))(& arg,rht_obj(ht,he)) != 0;
        }
        else {
          #line 607 
          tmp_10 = rhashtable_compare(& arg,rht_obj(ht,he)) != 0;
        }
        #line 607 
        if (tmp_10) 
                    #line 610 
                    goto __Cont;
        #line 611 
        return he;
      }
      #line 606 
      __Cont: { /* sequence */
                {
                  #line 607 
                  union __anonunion___u_2552 __u_0;
                  #line 606 
                  __read_once_size((void *)(& he->next),(void *)(& __u_0.__c),8);
                  #line 606 
                  ________p1_0 = (__u_0.__val);
                  }
                #line 606 
                he = ________p1_0;
              }
    }
    #line 616 
    if (! ((void *)((unsigned long)bkt | 1UL) != (void *)he)) 
                                                              #line 605 
                                                              break;
  }
  #line 617 
  ldv_inline_asm();
  {
    #line 622 
    union __anonunion___u_2554 __u_1;
    #line 621 
    __read_once_size((void *)(& tbl->future_tbl),(void *)(& __u_1.__c),8);
    #line 621 
    ________p1_1 = (__u_1.__val);
    {
      #line 621 
      bool __warned_0;
      #line 621 
      if (lockdep_rht_mutex_is_held(ht) == 0) {
        #line 621 
        if (rcu_read_lock_held() == 0) {
          #line 621 
          if (debug_lockdep_rcu_enabled() != 0) 
            #line 621 
            if (! __warned_0) {
              #line 621 
              __warned_0 = (_Bool)1;
              #line 621 
              lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",621,(char *)"suspicious rcu_dereference_check() usage");
            }
        }
      }
    }
    }
  #line 621 
  tbl = ________p1_1;
  #line 622 
  if ((long)(tbl != (struct bucket_table *)0) != 0L) 
                                                     #line 623 
                                                     goto restart;
  #line 625 
  return (struct rhash_head *)0;
}

#line 641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void *rhashtable_lookup(struct rhashtable *ht, void *key, struct rhashtable_params params)
{
  #line 647 
  void *tmp_1;
  #line 645 
  struct rhash_head *he = __rhashtable_lookup(ht,key,params);
  #line 647 
  if (he != (struct rhash_head *)0) 
                                    #line 647 
                                    tmp_1 = rht_obj(ht,he); else 
                                                                 #line 647 
                                                                 tmp_1 = (void *)0;
  #line 647 
  return tmp_1;
}

#line 664  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void *rhashtable_lookup_fast(struct rhashtable *ht, void *key, struct rhashtable_params params)
{
  #line 668 
  void *obj;
  #line 670 
  rcu_read_lock();
  #line 671 
  obj = rhashtable_lookup(ht,key,params);
  #line 672 
  rcu_read_unlock();
  #line 674 
  return obj;
}

#line 704  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static void *__rhashtable_insert_fast(struct rhashtable *ht, void *key, struct rhash_head *obj, struct rhashtable_params params, bool rhlist)
{
  #line 732 
  struct bucket_table *_________p1;
  #line 722 
  struct bucket_table *________p1;
  #line 712 
  struct rhash_lock_head **bkt;
  #line 713 
  struct rhash_head **pprev;
  #line 714 
  struct bucket_table *tbl;
  #line 715 
  struct rhash_head *head;
  #line 716 
  unsigned int hash;
  #line 717 
  int elasticity;
  #line 718 
  void *data;
  #line 708 
  struct rhashtable_compare_arg arg = {.ht = ht, .key = key};
  #line 720 
  rcu_read_lock();
  {
    #line 723 
    union __anonunion___u_2556 __u;
    #line 722 
    __read_once_size((void *)(& ht->tbl),(void *)(& __u.__c),8);
    #line 722 
    ________p1 = (__u.__val);
    {
      #line 722 
      bool __warned;
      #line 722 
      if (lockdep_rht_mutex_is_held(ht) == 0) {
        #line 722 
        if (rcu_read_lock_held() == 0) {
          #line 722 
          if (debug_lockdep_rcu_enabled() != 0) 
            #line 722 
            if (! __warned) {
              #line 722 
              __warned = (_Bool)1;
              #line 722 
              lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",722,(char *)"suspicious rcu_dereference_check() usage");
            }
        }
      }
    }
    }
  #line 722 
  tbl = ________p1;
  #line 723 
  hash = rht_head_hashfn(ht,tbl,obj,params);
  #line 724 
  elasticity = 16;
  #line 725 
  bkt = rht_bucket_insert(ht,tbl,hash);
  #line 726 
  data = ERR_PTR(-12L);
  #line 727 
  if (bkt == (struct rhash_lock_head **)0) 
                                           #line 728 
                                           goto out;
  #line 729 
  pprev = (struct rhash_head **)0;
  #line 730 
  rht_lock(tbl,bkt);
  {
    #line 733 
    union __anonunion___u_2558 __u_0;
    #line 732 
    __read_once_size((void *)(& tbl->future_tbl),(void *)(& __u_0.__c),8);
    #line 732 
    _________p1 = (__u_0.__val);
    }
  #line 732 
  if ((long)(_________p1 != (struct bucket_table *)0) != 0L) {
    #line 733 
    slow_path: 
               #line 733 
    ;
    #line 734 
    rht_unlock(tbl,bkt);
    #line 735 
    rcu_read_unlock();
    #line 736 
    return rhashtable_insert_slow(ht,key,obj);
  }
  #line 739 
  head = rht_ptr(bkt,tbl,hash);
  #line 739 
  while (1) {
    #line 739 
    if (rht_is_a_nulls(head)) 
                              #line 739 
                              break;
    {
      #line 758 
      void *__mptr;
      #line 759 
      void *__mptr_0;
      #line 740 
      struct rhlist_head *plist;
      #line 741 
      struct rhlist_head *list;
      #line 743 
      elasticity --;
      #line 744 
      if (key == (void *)0) 
                            #line 744 
                            goto _LOR;
      else {
        #line 744 
        int tmp_13;
        #line 744 
        if (params.obj_cmpfn != (int (*)(struct rhashtable_compare_arg *, void *))0) {
          #line 744 
          tmp_13 = (*(params.obj_cmpfn))(& arg,rht_obj(ht,head)) != 0;
        }
        else {
          #line 744 
          tmp_13 = rhashtable_compare(& arg,rht_obj(ht,head)) != 0;
        }
        #line 744 
        if (tmp_13) {
          #line 744 
          _LOR: {
                  #line 748 
                  pprev = & head->next;
                  #line 749 
                  goto __Cont;
                }
        }
      }
      #line 752 
      data = rht_obj(ht,head);
      #line 754 
      if (! rhlist) 
                    #line 755 
                    goto out_unlock;
      #line 758 
      __mptr = (void *)obj;
      #line 758 
      list = ((struct rhlist_head *)__mptr);
      #line 759 
      __mptr_0 = (void *)head;
      #line 759 
      plist = ((struct rhlist_head *)__mptr_0);
      {
        #line 762 
        union __anonunion___u_2560 __u_1 = {.__val = plist};
        #line 761 
        __write_once_size((void *)(& list->next),(void *)(& __u_1.__c),8);
        #line 761 
        struct rhlist_head *tmp_16 = __u_1.__val;
      }
      {
        #line 762 
        bool __warned_1;
        #line 762 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 762 
          if (! __warned_1) {
            #line 762 
            if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
              #line 762 
              __warned_1 = (_Bool)1;
              #line 762 
              lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",762,(char *)"suspicious rcu_dereference_protected() usage");
            }
          }
      }
      #line 762 
      head = head->next;
      {
        #line 764 
        union __anonunion___u_2562 __u_2 = {.__val = head};
        #line 763 
        __write_once_size((void *)(& list->rhead.next),(void *)(& __u_2.__c),8);
        #line 763 
        struct rhash_head *tmp_18 = __u_2.__val;
      }
      #line 764 
      if (pprev != (struct rhash_head **)0) {
        {
          #line 765 
          uintptr_t _r_a_p__v = (unsigned long)obj;
          #line 767 
          ldv_inline_asm();
          {
            #line 766 
            union __anonunion___u_2566 __u_3 = {.__val = (struct rhash_head *)_r_a_p__v};
            #line 765 
            __write_once_size((void *)pprev,(void *)(& __u_3.__c),8);
            #line 765 
            struct rhash_head *tmp_22 = __u_3.__val;
          }
        }
        #line 766 
        rht_unlock(tbl,bkt);
      }
      else 
           #line 768 
           rht_assign_unlock(tbl,bkt,obj);
      #line 769 
      data = (void *)0;
      #line 770 
      goto out;
    }
    #line 739 
    __Cont: { /* sequence */
              {
                #line 739 
                bool __warned_0;
                #line 739 
                if (debug_lockdep_rcu_enabled() != 0) 
                  #line 739 
                  if (! __warned_0) {
                    #line 739 
                    if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
                      #line 739 
                      __warned_0 = (_Bool)1;
                      #line 739 
                      lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",739,(char *)"suspicious rcu_dereference_protected() usage");
                    }
                  }
              }
              #line 739 
              head = head->next;
            }
  }
  #line 773 
  if (elasticity <= 0) 
                       #line 774 
                       goto slow_path;
  #line 776 
  data = ERR_PTR(-7L);
  #line 777 
  if ((long)((int)rht_grow_above_max(ht,tbl) != 0) != 0L) 
                                                          #line 778 
                                                          goto out_unlock;
  #line 780 
  if ((long)((int)rht_grow_above_100(ht,tbl) != 0) != 0L) 
                                                          #line 781 
                                                          goto slow_path;
  #line 784 
  head = rht_ptr(bkt,tbl,hash);
  {
    #line 787 
    union __anonunion___u_2568 __u_4 = {.__val = head};
    #line 786 
    __write_once_size((void *)(& obj->next),(void *)(& __u_4.__c),8);
    #line 786 
    struct rhash_head *tmp_24 = __u_4.__val;
  }
  #line 787 
  if ((int)rhlist != 0) {
    #line 790 
    void *__mptr_1;
    #line 788 
    struct rhlist_head *list_0;
    #line 790 
    __mptr_1 = (void *)obj;
    #line 790 
    list_0 = ((struct rhlist_head *)__mptr_1);
    {
      #line 792 
      union __anonunion___u_2570 __u_5 = {.__val = (struct rhlist_head *)0};
      #line 791 
      __write_once_size((void *)(& list_0->next),(void *)(& __u_5.__c),8);
      #line 791 
      struct rhlist_head *tmp_26 = __u_5.__val;
    }
  }
  #line 794 
  atomic_inc(& ht->nelems);
  #line 795 
  rht_assign_unlock(tbl,bkt,obj);
  #line 797 
  if ((int)rht_grow_above_75(ht,tbl) != 0) 
                                           #line 798 
                                           schedule_work(& ht->run_work);
  #line 800 
  data = (void *)0;
  #line 801 
  out: 
       #line 801 
  ;
  #line 802 
  rcu_read_unlock();
  #line 804 
  return data;
  #line 806 
  out_unlock: 
              #line 806 
  ;
  #line 807 
  rht_unlock(tbl,bkt);
  #line 808 
  goto out;
}

#line 826  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static int rhashtable_insert_fast(struct rhashtable *ht, struct rhash_head *obj, struct rhashtable_params params)
{
  #line 830 
  void *ret;
  #line 836 
  int tmp_1;
  #line 832 
  ret = __rhashtable_insert_fast(ht,(void *)0,obj,params,(_Bool)0);
  #line 833 
  if ((int)IS_ERR_0(ret) != 0) {
    #line 834 
    return (int)PTR_ERR_0(ret);
  }
  #line 836 
  if (ret == (void *)0) 
                        #line 836 
                        tmp_1 = 0; else 
                                        #line 836 
                                        tmp_1 = -17;
  #line 836 
  return tmp_1;
}

#line 993  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static int __rhashtable_remove_fast_one(struct rhashtable *ht, struct bucket_table *tbl, struct rhash_head *obj, struct rhashtable_params params, bool rhlist)
{
  #line 998 
  struct rhash_lock_head **bkt;
  #line 999 
  struct rhash_head **pprev;
  #line 1000 
  struct rhash_head *he;
  #line 1001 
  unsigned int hash;
  #line 1002 
  int err = -2;
  #line 1004 
  hash = rht_head_hashfn(ht,tbl,obj,params);
  #line 1005 
  bkt = rht_bucket_var(tbl,hash);
  #line 1006 
  if (bkt == (struct rhash_lock_head **)0) 
                                           #line 1007 
                                           return -2;
  #line 1008 
  pprev = (struct rhash_head **)0;
  #line 1009 
  rht_lock(tbl,bkt);
  #line 1011 
  he = rht_ptr(bkt,tbl,hash);
  #line 1011 
  while (1) {
    #line 1011 
    if (rht_is_a_nulls(he)) 
                            #line 1011 
                            break;
    {
      #line 1014 
      void *__mptr;
      #line 1012 
      struct rhlist_head *list;
      #line 1014 
      __mptr = (void *)he;
      #line 1014 
      list = ((struct rhlist_head *)__mptr);
      #line 1016 
      if (he != obj) {
        #line 1017 
        struct rhlist_head **lpprev;
        #line 1019 
        pprev = & he->next;
        #line 1021 
        if (! rhlist) 
                      #line 1022 
                      goto __Cont;
        #line 1024 
        while (1) {
          #line 1025 
          lpprev = & list->next;
          {
            #line 1026 
            bool __warned_0;
            #line 1026 
            if (debug_lockdep_rcu_enabled() != 0) 
              #line 1026 
              if (! __warned_0) {
                #line 1026 
                if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
                  #line 1026 
                  __warned_0 = (_Bool)1;
                  #line 1026 
                  lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1026,(char *)"suspicious rcu_dereference_protected() usage");
                }
              }
          }
          #line 1026 
          list = list->next;
          #line 1028 
          if (! (list != (struct rhlist_head *)0 && & list->rhead != obj)) 
            #line 1024 
            break;
        }
        #line 1030 
        if (list == (struct rhlist_head *)0) 
                                             #line 1031 
                                             goto __Cont;
        {
          #line 1033 
          bool __warned_1;
          #line 1033 
          if (debug_lockdep_rcu_enabled() != 0) 
            #line 1033 
            if (! __warned_1) {
              #line 1033 
              if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
                #line 1033 
                __warned_1 = (_Bool)1;
                #line 1033 
                lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1033,(char *)"suspicious rcu_dereference_protected() usage");
              }
            }
        }
        #line 1033 
        list = list->next;
        {
          #line 1035 
          union __anonunion___u_2572 __u = {.__val = list};
          #line 1034 
          __write_once_size((void *)lpprev,(void *)(& __u.__c),8);
          #line 1034 
          struct rhlist_head *tmp_6 = __u.__val;
        }
        #line 1035 
        err = 0;
        #line 1036 
        break;
      }
      {
        #line 1039 
        bool __warned_2;
        #line 1039 
        if (debug_lockdep_rcu_enabled() != 0) 
          #line 1039 
          if (! __warned_2) {
            #line 1039 
            if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
              #line 1039 
              __warned_2 = (_Bool)1;
              #line 1039 
              lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1039,(char *)"suspicious rcu_dereference_protected() usage");
            }
          }
      }
      #line 1039 
      obj = obj->next;
      #line 1040 
      err = 1;
      #line 1042 
      if ((int)rhlist != 0) {
        {
          #line 1043 
          bool __warned_3;
          #line 1043 
          if (debug_lockdep_rcu_enabled() != 0) 
            #line 1043 
            if (! __warned_3) {
              #line 1043 
              if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
                #line 1043 
                __warned_3 = (_Bool)1;
                #line 1043 
                lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1043,(char *)"suspicious rcu_dereference_protected() usage");
              }
            }
        }
        #line 1043 
        list = list->next;
        #line 1044 
        if (list != (struct rhlist_head *)0) {
          {
            #line 1046 
            union __anonunion___u_2574 __u_0 = {.__val = obj};
            #line 1045 
            __write_once_size((void *)(& list->rhead.next),(void *)(& __u_0.__c),8);
            #line 1045 
            struct rhash_head *tmp_10 = __u_0.__val;
          }
          #line 1046 
          obj = & list->rhead;
          #line 1047 
          err = 0;
        }
      }
      #line 1051 
      if (pprev != (struct rhash_head **)0) {
        {
          #line 1052 
          uintptr_t _r_a_p__v = (unsigned long)obj;
          #line 1054 
          ldv_inline_asm();
          {
            #line 1053 
            union __anonunion___u_2578 __u_1 = {.__val = (struct rhash_head *)_r_a_p__v};
            #line 1052 
            __write_once_size((void *)pprev,(void *)(& __u_1.__c),8);
            #line 1052 
            struct rhash_head *tmp_14 = __u_1.__val;
          }
        }
        #line 1053 
        rht_unlock(tbl,bkt);
      }
      else 
           #line 1055 
           rht_assign_unlock(tbl,bkt,obj);
      #line 1057 
      goto unlocked;
    }
    #line 1011 
    __Cont: { /* sequence */
              {
                #line 1011 
                bool __warned;
                #line 1011 
                if (debug_lockdep_rcu_enabled() != 0) 
                  #line 1011 
                  if (! __warned) {
                    #line 1011 
                    if (lockdep_rht_bucket_is_held(tbl,hash) == 0) {
                      #line 1011 
                      __warned = (_Bool)1;
                      #line 1011 
                      lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1011,(char *)"suspicious rcu_dereference_protected() usage");
                    }
                  }
              }
              #line 1011 
              he = he->next;
            }
  }
  #line 1060 
  rht_unlock(tbl,bkt);
  #line 1061 
  unlocked: 
            #line 1061 
  ;
  #line 1062 
  if (err > 0) {
    #line 1063 
    atomic_dec(& ht->nelems);
    #line 1064 
    if ((long)((int)ht->p.automatic_shrinking != 0) != 0L) {
      #line 1064 
      if ((long)((int)rht_shrink_below_30(ht,tbl) != 0) != 0L) 
                                                               #line 1066 
                                                               schedule_work(& ht->run_work);
    }
    #line 1067 
    err = 0;
  }
  #line 1070 
  return err;
}

#line 1074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static int __rhashtable_remove_fast(struct rhashtable *ht, struct rhash_head *obj, struct rhashtable_params params, bool rhlist)
{
  #line 1083 
  struct bucket_table *________p1;
  #line 1078 
  struct bucket_table *tbl;
  #line 1079 
  int err;
  #line 1081 
  rcu_read_lock();
  {
    #line 1084 
    union __anonunion___u_2580 __u;
    #line 1083 
    __read_once_size((void *)(& ht->tbl),(void *)(& __u.__c),8);
    #line 1083 
    ________p1 = (__u.__val);
    {
      #line 1083 
      bool __warned;
      #line 1083 
      if (lockdep_rht_mutex_is_held(ht) == 0) {
        #line 1083 
        if (rcu_read_lock_held() == 0) {
          #line 1083 
          if (debug_lockdep_rcu_enabled() != 0) 
            #line 1083 
            if (! __warned) {
              #line 1083 
              __warned = (_Bool)1;
              #line 1083 
              lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1083,(char *)"suspicious rcu_dereference_check() usage");
            }
        }
      }
    }
    }
  #line 1083 
  tbl = ________p1;
  #line 1090 
  while (1) {
    #line 1090 
    err = __rhashtable_remove_fast_one(ht,tbl,obj,params,(_Bool)((bool)((int)rhlist) != 0));
    #line 1090 
    if (err != 0) {
      #line 1092 
      struct bucket_table *________p1_0;
      {
        #line 1093 
        union __anonunion___u_2582 __u_0;
        #line 1092 
        __read_once_size((void *)(& tbl->future_tbl),(void *)(& __u_0.__c),8);
        #line 1092 
        ________p1_0 = (__u_0.__val);
        {
          #line 1092 
          bool __warned_0;
          #line 1092 
          if (lockdep_rht_mutex_is_held(ht) == 0) {
            #line 1092 
            if (rcu_read_lock_held() == 0) {
              #line 1092 
              if (debug_lockdep_rcu_enabled() != 0) 
                #line 1092 
                if (! __warned_0) {
                  #line 1092 
                  __warned_0 = (_Bool)1;
                  #line 1092 
                  lockdep_rcu_suspicious((char *)"./include/linux/rhashtable.h",1092,(char *)"suspicious rcu_dereference_check() usage");
                }
            }
          }
        }
        }
      #line 1091 
      tbl = ________p1_0;
      #line 1091 
      if (! (tbl != (struct bucket_table *)0)) 
                                               #line 1090 
                                               break;
    }
    else 
         #line 1090 
         break;
  }
  #line 1095 
  rcu_read_unlock();
  #line 1097 
  return err;
}

#line 1115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
__inline static int rhashtable_remove_fast(struct rhashtable *ht, struct rhash_head *obj, struct rhashtable_params params)
{
  #line 1119 
  return __rhashtable_remove_fast(ht,obj,params,(_Bool)0);
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa *mlxsw_afa_create(unsigned int max_acts_per_set, struct mlxsw_afa_ops *ops, void *ops_priv);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
void mlxsw_afa_destroy(struct mlxsw_afa *mlxsw_afa);
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_block *mlxsw_afa_block_create(struct mlxsw_afa *mlxsw_afa);
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
void mlxsw_afa_block_destroy(struct mlxsw_afa_block *block);
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_commit(struct mlxsw_afa_block *block);
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
char *mlxsw_afa_block_first_set(struct mlxsw_afa_block *block);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 406  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
char *mlxsw_afa_block_cur_set(struct mlxsw_afa_block *block);
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
u32 mlxsw_afa_block_first_kvdl_index(struct mlxsw_afa_block *block);
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_activity_get(struct mlxsw_afa_block *block, bool *activity);
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_continue(struct mlxsw_afa_block *block);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_jump(struct mlxsw_afa_block *block, u16 group_id);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_terminate(struct mlxsw_afa_block *block);
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 816  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_drop(struct mlxsw_afa_block *block);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 830  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_trap(struct mlxsw_afa_block *block, u16 trap_id);
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 845  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_trap_and_forward(struct mlxsw_afa_block *block, u16 trap_id);
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_mirror(struct mlxsw_afa_block *block, u8 local_in_port, struct net_device *out_dev, bool ingress, struct netlink_ext_ack *extack);
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 1000  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_fwd(struct mlxsw_afa_block *block, u8 local_port, bool in_port, struct netlink_ext_ack *extack);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_vlan_modify(struct mlxsw_afa_block *block, u16 vid, u8 pcp, u8 et, struct netlink_ext_ack *extack);
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 1074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_allocated_counter(struct mlxsw_afa_block *block, u32 counter_index);
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 1087  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_counter(struct mlxsw_afa_block *block, u32 *p_counter_index, struct netlink_ext_ack *extack);
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 1149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_fid_set(struct mlxsw_afa_block *block, u16 fid, struct netlink_ext_ack *extack);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h"
#line 1220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_mcrouter(struct mlxsw_afa_block *block, u16 expected_irif, u16 min_mtu, bool rmid_valid, u32 kvdl_index);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_set_type_item = {.offset = (unsigned short)160U, .shift = (unsigned char)28U, .size = {.bits = (unsigned char)4U}, .name = (char *)"afa"};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_set_type_set(char *buf, u32 val)
{
  #line 23 
  __mlxsw_item_set32(buf,& mlxsw_afa_set_type_item,(unsigned short)0,val);
  #line 24 
  return;
}

#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_set_next_action_set_ptr_item = {.offset = (unsigned short)164U, .size = {.bits = (unsigned char)24U}, .name = (char *)"afa"};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_set_next_action_set_ptr_set(char *buf, u32 val)
{
  #line 28 
  __mlxsw_item_set32(buf,& mlxsw_afa_set_next_action_set_ptr_item,(unsigned short)0,val);
  #line 29 
  return;
}

#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_set_goto_g_item = {.offset = (unsigned short)164U, .shift = (unsigned char)29U, .size = {.bits = (unsigned char)1U}, .name = (char *)"afa"};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_set_goto_g_set(char *buf, u32 val)
{
  #line 35 
  __mlxsw_item_set32(buf,& mlxsw_afa_set_goto_g_item,(unsigned short)0,val);
  #line 36 
  return;
}

#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_set_goto_binding_cmd_item = {.offset = (unsigned short)164U, .shift = (unsigned char)24U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_set_goto_binding_cmd_set(char *buf, u32 val)
{
  #line 47 
  __mlxsw_item_set32(buf,& mlxsw_afa_set_goto_binding_cmd_item,(unsigned short)0,val);
  #line 48 
  return;
}

#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_set_goto_next_binding_item = {.offset = (unsigned short)164U, .size = {.bits = (unsigned char)16U}, .name = (char *)"afa"};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_set_goto_next_binding_set(char *buf, u32 val)
{
  #line 53 
  __mlxsw_item_set32(buf,& mlxsw_afa_set_goto_next_binding_item,(unsigned short)0,val);
  #line 54 
  return;
}

#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_all_action_type_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)6U}, .name = (char *)"afa"};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_all_action_type_set(char *buf, u32 val)
{
  #line 58 
  __mlxsw_item_set32(buf,& mlxsw_afa_all_action_type_item,(unsigned short)0,val);
  #line 59 
  return;
}

#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct rhashtable_params mlxsw_afa_set_ht_params = {.key_len = (unsigned short)169U, .key_offset = (unsigned short)8U, .automatic_shrinking = (_Bool)1};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct rhashtable_params mlxsw_afa_fwd_entry_ht_params = {.key_len = (unsigned short)1U, .key_offset = (unsigned short)8U, .automatic_shrinking = (_Bool)1};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa *mlxsw_afa_create(unsigned int max_acts_per_set, struct mlxsw_afa_ops *ops, void *ops_priv)
{
  #line 128 
  struct mlxsw_afa *mlxsw_afa;
  #line 129 
  int err;
  #line 131 
  mlxsw_afa = (struct mlxsw_afa *)kzalloc_1(792UL,3264U);
  #line 132 
  if (mlxsw_afa == (struct mlxsw_afa *)0) {
    #line 133 
    return (struct mlxsw_afa *)ERR_PTR(-12L);
  }
  #line 134 
  err = rhashtable_init(& mlxsw_afa->set_ht,& mlxsw_afa_set_ht_params);
  #line 135 
  if (err != 0) 
                #line 136 
                goto err_set_rhashtable_init;
  #line 137 
  err = rhashtable_init(& mlxsw_afa->fwd_entry_ht,& mlxsw_afa_fwd_entry_ht_params);
  #line 139 
  if (err != 0) 
                #line 140 
                goto err_fwd_entry_rhashtable_init;
  #line 141 
  mlxsw_afa->max_acts_per_set = max_acts_per_set;
  #line 142 
  mlxsw_afa->ops = ops;
  #line 143 
  mlxsw_afa->ops_priv = ops_priv;
  #line 144 
  return mlxsw_afa;
  #line 146 
  err_fwd_entry_rhashtable_init: 
                                 #line 146 
  ;
  #line 147 
  rhashtable_destroy(& mlxsw_afa->set_ht);
  #line 148 
  err_set_rhashtable_init: 
                           #line 148 
  ;
  #line 149 
  kfree((void *)mlxsw_afa);
  #line 150 
  return (struct mlxsw_afa *)ERR_PTR((long)err);
}

#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
void mlxsw_afa_destroy(struct mlxsw_afa *mlxsw_afa)
{
  #line 156 
  rhashtable_destroy(& mlxsw_afa->fwd_entry_ht);
  #line 157 
  rhashtable_destroy(& mlxsw_afa->set_ht);
  #line 158 
  kfree((void *)mlxsw_afa);
  #line 159 
  return;
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_set_goto_set(struct mlxsw_afa_set *set, enum mlxsw_afa_set_goto_binding_cmd cmd, u16 group_id)
{
  #line 166 
  char *actions = (char *)(& set->ht_key.enc_actions);
  #line 168 
  mlxsw_afa_set_type_set(actions,1U);
  #line 169 
  mlxsw_afa_set_goto_g_set(actions,1U);
  #line 170 
  mlxsw_afa_set_goto_binding_cmd_set(actions,(unsigned int)cmd);
  #line 171 
  mlxsw_afa_set_goto_next_binding_set(actions,(unsigned int)group_id);
  #line 172 
  return;
}

#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_set_next_set(struct mlxsw_afa_set *set, u32 next_set_kvdl_index)
{
  #line 177 
  char *actions = (char *)(& set->ht_key.enc_actions);
  #line 179 
  mlxsw_afa_set_type_set(actions,0U);
  #line 180 
  mlxsw_afa_set_next_action_set_ptr_set(actions,next_set_kvdl_index);
  #line 181 
  return;
}

#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_set *mlxsw_afa_set_create(bool is_first)
{
  #line 185 
  struct mlxsw_afa_set *set;
  #line 187 
  set = (struct mlxsw_afa_set *)kzalloc_1(208UL,3264U);
  #line 188 
  if (set == (struct mlxsw_afa_set *)0) 
                                        #line 189 
                                        return (struct mlxsw_afa_set *)0;
  #line 191 
  mlxsw_afa_set_goto_set(set,(enum mlxsw_afa_set_goto_binding_cmd)MLXSW_AFA_SET_GOTO_BINDING_CMD_TERM,(unsigned short)0);
  #line 192 
  set->ht_key.is_first = is_first;
  #line 193 
  set->ref_count = 1U;
  #line 194 
  return set;
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_set_destroy(struct mlxsw_afa_set *set)
{
  #line 199 
  kfree((void *)set);
  #line 200 
  return;
}

#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static int mlxsw_afa_set_share(struct mlxsw_afa *mlxsw_afa, struct mlxsw_afa_set *set)
{
  #line 205 
  int err;
  #line 207 
  err = rhashtable_insert_fast(& mlxsw_afa->set_ht,& set->ht_node,mlxsw_afa_set_ht_params);
  #line 209 
  if (err != 0) 
                #line 210 
                return err;
  #line 211 
  err = (*((mlxsw_afa->ops)->kvdl_set_add))(mlxsw_afa->ops_priv,& set->kvdl_index,(char *)(& set->ht_key.enc_actions),(_Bool)((bool)((int)set->ht_key.is_first) != 0));
  #line 215 
  if (err != 0) 
                #line 216 
                goto err_kvdl_set_add;
  #line 217 
  set->shared = (_Bool)1;
  #line 218 
  set->prev = (struct mlxsw_afa_set *)0;
  #line 219 
  return 0;
  #line 221 
  err_kvdl_set_add: 
                    #line 221 
  ;
  #line 222 
  rhashtable_remove_fast(& mlxsw_afa->set_ht,& set->ht_node,mlxsw_afa_set_ht_params);
  #line 224 
  return err;
}

#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_set_unshare(struct mlxsw_afa *mlxsw_afa, struct mlxsw_afa_set *set)
{
  #line 230 
  (*((mlxsw_afa->ops)->kvdl_set_del))(mlxsw_afa->ops_priv,set->kvdl_index,(_Bool)((bool)((int)set->ht_key.is_first) != 0));
  #line 233 
  rhashtable_remove_fast(& mlxsw_afa->set_ht,& set->ht_node,mlxsw_afa_set_ht_params);
  #line 235 
  set->shared = (_Bool)0;
  #line 236 
  return;
}

#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_set_put(struct mlxsw_afa *mlxsw_afa, struct mlxsw_afa_set *set)
{
  #line 241 
  (set->ref_count) --;
  #line 241 
  if (set->ref_count != 0U) 
                            #line 242 
                            return;
  #line 243 
  if ((int)set->shared != 0) 
                             #line 244 
                             mlxsw_afa_set_unshare(mlxsw_afa,set);
  #line 245 
  mlxsw_afa_set_destroy(set);
  #line 246 
  return;
}

#line 248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_set *mlxsw_afa_set_get(struct mlxsw_afa *mlxsw_afa, struct mlxsw_afa_set *orig_set)
{
  #line 251 
  struct mlxsw_afa_set *set;
  #line 252 
  int err;
  #line 258 
  set = (struct mlxsw_afa_set *)rhashtable_lookup_fast(& mlxsw_afa->set_ht,(void *)(& orig_set->ht_key),mlxsw_afa_set_ht_params);
  #line 260 
  if (set != (struct mlxsw_afa_set *)0) {
    #line 261 
    (set->ref_count) ++;
    #line 262 
    mlxsw_afa_set_put(mlxsw_afa,orig_set);
  }
  else {
    #line 264 
    set = orig_set;
    #line 265 
    err = mlxsw_afa_set_share(mlxsw_afa,set);
    #line 266 
    if (err != 0) {
      #line 267 
      return (struct mlxsw_afa_set *)ERR_PTR((long)err);
    }
  }
  #line 269 
  return set;
}

#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_resource_add(struct mlxsw_afa_block *block, struct mlxsw_afa_resource *resource)
{
  #line 296 
  list_add(& resource->list,& block->resource_list);
  #line 297 
  return;
}

#line 299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_resource_del(struct mlxsw_afa_resource *resource)
{
  #line 301 
  list_del_0(& resource->list);
  #line 302 
  return;
}

#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_resources_destroy(struct mlxsw_afa_block *block)
{
  #line 308 
  void *__mptr_0;
  #line 308 
  void *__mptr;
  #line 306 
  struct mlxsw_afa_resource *resource;
  #line 306 
  struct mlxsw_afa_resource *tmp;
  #line 308 
  __mptr = (void *)block->resource_list.next;
  #line 308 
  resource = ((struct mlxsw_afa_resource *)__mptr);
  #line 308 
  __mptr_0 = (void *)resource->list.next;
  #line 309 
  tmp = ((struct mlxsw_afa_resource *)__mptr_0);
  #line 308 
  while (& resource->list != & block->resource_list) {
    #line 308 
    void *__mptr_1;
    #line 309 
    (*(resource->destructor))(block,resource);
    #line 308 
    resource = tmp;
    #line 308 
    __mptr_1 = (void *)tmp->list.next;
    #line 308 
    tmp = ((struct mlxsw_afa_resource *)__mptr_1);
  }
  #line 310 
  return;
}

#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
struct mlxsw_afa_block *mlxsw_afa_block_create(struct mlxsw_afa *mlxsw_afa)
{
  #line 315 
  struct mlxsw_afa_block *block;
  #line 317 
  block = (struct mlxsw_afa_block *)kzalloc_1(56UL,3264U);
  #line 318 
  if (block == (struct mlxsw_afa_block *)0) 
                                            #line 319 
                                            return (struct mlxsw_afa_block *)0;
  #line 320 
  INIT_LIST_HEAD_0(& block->resource_list);
  #line 321 
  block->afa = mlxsw_afa;
  #line 324 
  block->first_set = mlxsw_afa_set_create((_Bool)1);
  #line 325 
  if (block->first_set == (struct mlxsw_afa_set *)0) 
                                                     #line 326 
                                                     goto err_first_set_create;
  #line 331 
  if ((int)(mlxsw_afa->ops)->dummy_first_set != 0) {
    #line 332 
    block->cur_set = mlxsw_afa_set_create((_Bool)0);
    #line 333 
    if (block->cur_set == (struct mlxsw_afa_set *)0) 
                                                     #line 334 
                                                     goto err_second_set_create;
    #line 335 
    (block->cur_set)->prev = block->first_set;
    #line 336 
    (block->first_set)->next = block->cur_set;
  }
  else 
       #line 338 
       block->cur_set = block->first_set;
  #line 341 
  return block;
  #line 343 
  err_second_set_create: 
                         #line 343 
  ;
  #line 344 
  mlxsw_afa_set_destroy(block->first_set);
  #line 345 
  err_first_set_create: 
                        #line 345 
  ;
  #line 346 
  kfree((void *)block);
  #line 347 
  return (struct mlxsw_afa_block *)0;
}

#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
void mlxsw_afa_block_destroy(struct mlxsw_afa_block *block)
{
  #line 354 
  struct mlxsw_afa_set *next_set;
  #line 353 
  struct mlxsw_afa_set *set = block->first_set;
  #line 356 
  while (1) {
    #line 357 
    next_set = set->next;
    #line 358 
    mlxsw_afa_set_put(block->afa,set);
    #line 359 
    set = next_set;
    #line 360 
    if (! (set != (struct mlxsw_afa_set *)0)) 
                                              #line 356 
                                              break;
  }
  #line 361 
  mlxsw_afa_resources_destroy(block);
  #line 362 
  kfree((void *)block);
  #line 363 
  return;
}

#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_commit(struct mlxsw_afa_block *block)
{
  #line 369 
  struct mlxsw_afa_set *prev_set;
  #line 368 
  struct mlxsw_afa_set *set = block->cur_set;
  #line 371 
  block->cur_set = (struct mlxsw_afa_set *)0;
  #line 372 
  block->finished = (_Bool)1;
  #line 379 
  while (1) {
    {
      #line 380 
      prev_set = set->prev;
      #line 381 
      set = mlxsw_afa_set_get(block->afa,set);
      #line 382 
      if ((int)IS_ERR_0((void *)set) != 0) {
        #line 387 
        return (int)PTR_ERR_0((void *)set);
      }
      #line 388 
      if (prev_set != (struct mlxsw_afa_set *)0) {
        #line 389 
        prev_set->next = set;
        #line 390 
        mlxsw_afa_set_next_set(prev_set,set->kvdl_index);
        #line 391 
        set = prev_set;
      }
    }
    #line 393 
    if (! (prev_set != (struct mlxsw_afa_set *)0)) 
                                                   #line 379 
                                                   break;
  }
  #line 395 
  block->first_set = set;
  #line 396 
  return 0;
}

#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
char *mlxsw_afa_block_first_set(struct mlxsw_afa_block *block)
{
  #line 402 
  return (char *)(& (block->first_set)->ht_key.enc_actions);
}

#line 406  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
char *mlxsw_afa_block_cur_set(struct mlxsw_afa_block *block)
{
  #line 408 
  return (char *)(& (block->cur_set)->ht_key.enc_actions);
}

#line 412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
u32 mlxsw_afa_block_first_kvdl_index(struct mlxsw_afa_block *block)
{
  #line 417 
  int __ret_warn_on;
  #line 417 
  __ret_warn_on = (block->first_set)->next == (struct mlxsw_afa_set *)0;
  #line 417 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 418 
    ldv_inline_asm();
    #line 419 
    ldv_inline_asm();
  }
  #line 417 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 418 
                                                return 0U;
  #line 419 
  return ((block->first_set)->next)->kvdl_index;
}

#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_activity_get(struct mlxsw_afa_block *block, bool *activity)
{
  #line 425 
  u32 kvdl_index = mlxsw_afa_block_first_kvdl_index(block);
  #line 427 
  return (*(((block->afa)->ops)->kvdl_set_activity_get))((block->afa)->ops_priv,
                                                        kvdl_index,activity);
}

#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_continue(struct mlxsw_afa_block *block)
{
  #line 434 
  if ((int)block->finished != 0) 
                                 #line 435 
                                 return -22;
  #line 436 
  mlxsw_afa_set_goto_set(block->cur_set,(enum mlxsw_afa_set_goto_binding_cmd)MLXSW_AFA_SET_GOTO_BINDING_CMD_NONE,(unsigned short)0);
  #line 438 
  block->finished = (_Bool)1;
  #line 439 
  return 0;
}

#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_jump(struct mlxsw_afa_block *block, u16 group_id)
{
  #line 445 
  if ((int)block->finished != 0) 
                                 #line 446 
                                 return -22;
  #line 447 
  mlxsw_afa_set_goto_set(block->cur_set,(enum mlxsw_afa_set_goto_binding_cmd)MLXSW_AFA_SET_GOTO_BINDING_CMD_JUMP,(unsigned short)((int)group_id));
  #line 449 
  block->finished = (_Bool)1;
  #line 450 
  return 0;
}

#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_terminate(struct mlxsw_afa_block *block)
{
  #line 456 
  if ((int)block->finished != 0) 
                                 #line 457 
                                 return -22;
  #line 458 
  mlxsw_afa_set_goto_set(block->cur_set,(enum mlxsw_afa_set_goto_binding_cmd)MLXSW_AFA_SET_GOTO_BINDING_CMD_TERM,(unsigned short)0);
  #line 460 
  block->finished = (_Bool)1;
  #line 461 
  return 0;
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_fwd_entry *mlxsw_afa_fwd_entry_create(struct mlxsw_afa *mlxsw_afa, u8 local_port)
{
  #line 468 
  struct mlxsw_afa_fwd_entry *fwd_entry;
  #line 469 
  int err;
  #line 471 
  fwd_entry = (struct mlxsw_afa_fwd_entry *)kzalloc_1(24UL,3264U);
  #line 472 
  if (fwd_entry == (struct mlxsw_afa_fwd_entry *)0) {
    #line 473 
    return (struct mlxsw_afa_fwd_entry *)ERR_PTR(-12L);
  }
  #line 474 
  fwd_entry->ht_key.local_port = local_port;
  #line 475 
  fwd_entry->ref_count = 1U;
  #line 477 
  err = rhashtable_insert_fast(& mlxsw_afa->fwd_entry_ht,& fwd_entry->ht_node,mlxsw_afa_fwd_entry_ht_params);
  #line 480 
  if (err != 0) 
                #line 481 
                goto err_rhashtable_insert;
  #line 483 
  err = (*((mlxsw_afa->ops)->kvdl_fwd_entry_add))(mlxsw_afa->ops_priv,& fwd_entry->kvdl_index,(unsigned char)((int)local_port));
  #line 486 
  if (err != 0) 
                #line 487 
                goto err_kvdl_fwd_entry_add;
  #line 488 
  return fwd_entry;
  #line 490 
  err_kvdl_fwd_entry_add: 
                          #line 490 
  ;
  #line 491 
  rhashtable_remove_fast(& mlxsw_afa->fwd_entry_ht,& fwd_entry->ht_node,mlxsw_afa_fwd_entry_ht_params);
  #line 493 
  err_rhashtable_insert: 
                         #line 493 
  ;
  #line 494 
  kfree((void *)fwd_entry);
  #line 495 
  return (struct mlxsw_afa_fwd_entry *)ERR_PTR((long)err);
}

#line 498  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_fwd_entry_destroy(struct mlxsw_afa *mlxsw_afa, struct mlxsw_afa_fwd_entry *fwd_entry)
{
  #line 501 
  (*((mlxsw_afa->ops)->kvdl_fwd_entry_del))(mlxsw_afa->ops_priv,fwd_entry->kvdl_index);
  #line 503 
  rhashtable_remove_fast(& mlxsw_afa->fwd_entry_ht,& fwd_entry->ht_node,mlxsw_afa_fwd_entry_ht_params);
  #line 505 
  kfree((void *)fwd_entry);
  #line 506 
  return;
}

#line 509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_fwd_entry *mlxsw_afa_fwd_entry_get(struct mlxsw_afa *mlxsw_afa, u8 local_port)
{
  #line 512 
  struct mlxsw_afa_fwd_entry *fwd_entry;
  #line 511 
  struct mlxsw_afa_fwd_entry_ht_key ht_key = {.local_port = (unsigned char)0U};
  #line 514 
  ht_key.local_port = local_port;
  #line 515 
  fwd_entry = (struct mlxsw_afa_fwd_entry *)rhashtable_lookup_fast(& mlxsw_afa->fwd_entry_ht,(void *)(& ht_key),mlxsw_afa_fwd_entry_ht_params);
  #line 517 
  if (fwd_entry != (struct mlxsw_afa_fwd_entry *)0) {
    #line 518 
    (fwd_entry->ref_count) ++;
    #line 519 
    return fwd_entry;
  }
  #line 521 
  return mlxsw_afa_fwd_entry_create(mlxsw_afa,
                                   (unsigned char)((int)local_port));
}

#line 524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_fwd_entry_put(struct mlxsw_afa *mlxsw_afa, struct mlxsw_afa_fwd_entry *fwd_entry)
{
  #line 527 
  (fwd_entry->ref_count) --;
  #line 527 
  if (fwd_entry->ref_count != 0U) 
                                  #line 528 
                                  return;
  #line 529 
  mlxsw_afa_fwd_entry_destroy(mlxsw_afa,fwd_entry);
  #line 530 
  return;
}

#line 538  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_fwd_entry_ref_destroy(struct mlxsw_afa_block *block, struct mlxsw_afa_fwd_entry_ref *fwd_entry_ref)
{
  #line 541 
  mlxsw_afa_resource_del(& fwd_entry_ref->resource);
  #line 542 
  mlxsw_afa_fwd_entry_put(block->afa,fwd_entry_ref->fwd_entry);
  #line 543 
  kfree((void *)fwd_entry_ref);
  #line 544 
  return;
}

#line 547  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_fwd_entry_ref_destructor(struct mlxsw_afa_block *block, struct mlxsw_afa_resource *resource)
{
  #line 552 
  void *__mptr;
  #line 550 
  struct mlxsw_afa_fwd_entry_ref *fwd_entry_ref;
  #line 552 
  __mptr = (void *)resource;
  #line 552 
  fwd_entry_ref = ((struct mlxsw_afa_fwd_entry_ref *)__mptr);
  #line 554 
  mlxsw_afa_fwd_entry_ref_destroy(block,fwd_entry_ref);
  #line 555 
  return;
}

#line 558  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_fwd_entry_ref *mlxsw_afa_fwd_entry_ref_create(struct mlxsw_afa_block *block, u8 local_port)
{
  #line 560 
  struct mlxsw_afa_fwd_entry_ref *fwd_entry_ref;
  #line 561 
  struct mlxsw_afa_fwd_entry *fwd_entry;
  #line 562 
  int err;
  #line 564 
  fwd_entry_ref = (struct mlxsw_afa_fwd_entry_ref *)kzalloc_1(32UL,3264U);
  #line 565 
  if (fwd_entry_ref == (struct mlxsw_afa_fwd_entry_ref *)0) {
    #line 566 
    return (struct mlxsw_afa_fwd_entry_ref *)ERR_PTR(-12L);
  }
  #line 567 
  fwd_entry = mlxsw_afa_fwd_entry_get(block->afa,(unsigned char)((int)local_port));
  #line 568 
  if ((int)IS_ERR_0((void *)fwd_entry) != 0) {
    #line 569 
    err = (int)PTR_ERR_0((void *)fwd_entry);
    #line 570 
    goto err_fwd_entry_get;
  }
  #line 572 
  fwd_entry_ref->fwd_entry = fwd_entry;
  #line 573 
  fwd_entry_ref->resource.destructor = & mlxsw_afa_fwd_entry_ref_destructor;
  #line 574 
  mlxsw_afa_resource_add(block,& fwd_entry_ref->resource);
  #line 575 
  return fwd_entry_ref;
  #line 577 
  err_fwd_entry_get: 
                     #line 577 
  ;
  #line 578 
  kfree((void *)fwd_entry_ref);
  #line 579 
  return (struct mlxsw_afa_fwd_entry_ref *)ERR_PTR((long)err);
}

#line 588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_counter_destroy(struct mlxsw_afa_block *block, struct mlxsw_afa_counter *counter)
{
  #line 591 
  mlxsw_afa_resource_del(& counter->resource);
  #line 592 
  (*(((block->afa)->ops)->counter_index_put))((block->afa)->ops_priv,counter->counter_index);
  #line 594 
  kfree((void *)counter);
  #line 595 
  return;
}

#line 598  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_counter_destructor(struct mlxsw_afa_block *block, struct mlxsw_afa_resource *resource)
{
  #line 603 
  void *__mptr;
  #line 601 
  struct mlxsw_afa_counter *counter;
  #line 603 
  __mptr = (void *)resource;
  #line 603 
  counter = ((struct mlxsw_afa_counter *)__mptr);
  #line 604 
  mlxsw_afa_counter_destroy(block,counter);
  #line 605 
  return;
}

#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_counter *mlxsw_afa_counter_create(struct mlxsw_afa_block *block)
{
  #line 610 
  struct mlxsw_afa_counter *counter;
  #line 611 
  int err;
  #line 613 
  counter = (struct mlxsw_afa_counter *)kzalloc_1(32UL,3264U);
  #line 614 
  if (counter == (struct mlxsw_afa_counter *)0) {
    #line 615 
    return (struct mlxsw_afa_counter *)ERR_PTR(-12L);
  }
  #line 617 
  err = (*(((block->afa)->ops)->counter_index_get))((block->afa)->ops_priv,& counter->counter_index);
  #line 619 
  if (err != 0) 
                #line 620 
                goto err_counter_index_get;
  #line 621 
  counter->resource.destructor = & mlxsw_afa_counter_destructor;
  #line 622 
  mlxsw_afa_resource_add(block,& counter->resource);
  #line 623 
  return counter;
  #line 625 
  err_counter_index_get: 
                         #line 625 
  ;
  #line 626 
  kfree((void *)counter);
  #line 627 
  return (struct mlxsw_afa_counter *)ERR_PTR((long)err);
}

#line 633  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static char *mlxsw_afa_block_append_action(struct mlxsw_afa_block *block, u8 action_code, u8 action_size)
{
  #line 636 
  char *oneact;
  #line 637 
  char *actions;
  #line 639 
  if ((int)block->finished != 0) {
    #line 640 
    return (char *)ERR_PTR(-22L);
  }
  #line 641 
  if (block->cur_act_index + (unsigned int)action_size > (block->afa)->max_acts_per_set) {
    #line 643 
    struct mlxsw_afa_set *set;
    #line 648 
    set = mlxsw_afa_set_create((_Bool)0);
    #line 649 
    if (set == (struct mlxsw_afa_set *)0) {
      #line 650 
      return (char *)ERR_PTR(-105L);
    }
    #line 651 
    set->prev = block->cur_set;
    #line 652 
    block->cur_act_index = 0U;
    #line 653 
    (block->cur_set)->next = set;
    #line 654 
    block->cur_set = set;
  }
  #line 657 
  actions = (char *)(& (block->cur_set)->ht_key.enc_actions);
  #line 658 
  oneact = actions + (unsigned long)(block->cur_act_index * 32U);
  #line 659 
  block->cur_act_index += (unsigned int)action_size;
  #line 660 
  mlxsw_afa_all_action_type_set(oneact,(unsigned int)action_code);
  #line 661 
  return oneact + 4U;
}

#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_vlan_tag_cmd_item = {.shift = (unsigned char)29U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_vlan_tag_cmd_set(char *buf, u32 val)
{
  #line 692 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_vlan_tag_cmd_item,(unsigned short)0,val);
  #line 693 
  return;
}

#line 695  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_vid_cmd_item = {.offset = (unsigned short)4U, .shift = (unsigned char)29U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 695  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_vid_cmd_set(char *buf, u32 val)
{
  #line 695 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_vid_cmd_item,(unsigned short)0,val);
  #line 696 
  return;
}

#line 698  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_vid_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)12U}, .name = (char *)"afa"};
#line 698  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_vid_set(char *buf, u32 val)
{
  #line 698 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_vid_item,(unsigned short)0,val);
  #line 699 
  return;
}

#line 701  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_ethertype_cmd_item = {.offset = (unsigned short)8U, .shift = (unsigned char)29U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 701  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_ethertype_cmd_set(char *buf, u32 val)
{
  #line 701 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_ethertype_cmd_item,(unsigned short)0,val);
  #line 702 
  return;
}

#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_ethertype_item = {.offset = (unsigned short)8U, .shift = (unsigned char)24U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_ethertype_set(char *buf, u32 val)
{
  #line 706 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_ethertype_item,(unsigned short)0,val);
  #line 707 
  return;
}

#line 709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_pcp_cmd_item = {.offset = (unsigned short)8U, .shift = (unsigned char)13U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 709  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_pcp_cmd_set(char *buf, u32 val)
{
  #line 709 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_pcp_cmd_item,(unsigned short)0,val);
  #line 710 
  return;
}

#line 712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_vlan_pcp_item = {.offset = (unsigned short)8U, .shift = (unsigned char)8U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_pcp_set(char *buf, u32 val)
{
  #line 712 
  __mlxsw_item_set32(buf,& mlxsw_afa_vlan_pcp_item,(unsigned short)0,val);
  #line 713 
  return;
}

#line 715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_vlan_pack(char *payload, enum mlxsw_afa_vlan_vlan_tag_cmd vlan_tag_cmd, enum mlxsw_afa_vlan_cmd vid_cmd, u16 vid, enum mlxsw_afa_vlan_cmd pcp_cmd, u8 pcp, enum mlxsw_afa_vlan_cmd ethertype_cmd, u8 ethertype)
{
  #line 721 
  mlxsw_afa_vlan_vlan_tag_cmd_set(payload,(unsigned int)vlan_tag_cmd);
  #line 722 
  mlxsw_afa_vlan_vid_cmd_set(payload,(unsigned int)vid_cmd);
  #line 723 
  mlxsw_afa_vlan_vid_set(payload,(unsigned int)vid);
  #line 724 
  mlxsw_afa_vlan_pcp_cmd_set(payload,(unsigned int)pcp_cmd);
  #line 725 
  mlxsw_afa_vlan_pcp_set(payload,(unsigned int)pcp);
  #line 726 
  mlxsw_afa_vlan_ethertype_cmd_set(payload,(unsigned int)ethertype_cmd);
  #line 727 
  mlxsw_afa_vlan_ethertype_set(payload,(unsigned int)ethertype);
  #line 728 
  return;
}

#line 730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_vlan_modify(struct mlxsw_afa_block *block, u16 vid, u8 pcp, u8 et, struct netlink_ext_ack *extack)
{
  #line 734 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)2,(unsigned char)1);
  #line 738 
  if ((int)IS_ERR_0((void *)act) != 0) {
    {
      #line 739 
      char __msg[45U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 739 
      struct netlink_ext_ack *__extack = extack;
      #line 739 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 739 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 740 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 742 
  mlxsw_afa_vlan_pack(act,(enum mlxsw_afa_vlan_vlan_tag_cmd)MLXSW_AFA_VLAN_VLAN_TAG_CMD_NOP,(enum mlxsw_afa_vlan_cmd)MLXSW_AFA_VLAN_CMD_SET_OUTER,(unsigned short)((int)vid),(enum mlxsw_afa_vlan_cmd)MLXSW_AFA_VLAN_CMD_SET_OUTER,(unsigned char)((int)pcp),(enum mlxsw_afa_vlan_cmd)MLXSW_AFA_VLAN_CMD_SET_OUTER,(unsigned char)((int)et));
  #line 746 
  return 0;
}

#line 770  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_trapdisc_trap_action_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)4U}, .name = (char *)"afa"};
#line 770  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_trap_action_set(char *buf, u32 val)
{
  #line 770 
  __mlxsw_item_set32(buf,& mlxsw_afa_trapdisc_trap_action_item,(unsigned short)0,val);
  #line 771 
  return;
}

#line 780  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_trapdisc_forward_action_item = {.size = {.bits = (unsigned char)4U}, .name = (char *)"afa"};
#line 780  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_forward_action_set(char *buf, u32 val)
{
  #line 780 
  __mlxsw_item_set32(buf,& mlxsw_afa_trapdisc_forward_action_item,(unsigned short)0,val);
  #line 781 
  return;
}

#line 785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_trapdisc_trap_id_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)9U}, .name = (char *)"afa"};
#line 785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_trap_id_set(char *buf, u32 val)
{
  #line 785 
  __mlxsw_item_set32(buf,& mlxsw_afa_trapdisc_trap_id_item,(unsigned short)0,val);
  #line 786 
  return;
}

#line 790  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_trapdisc_mirror_agent_item = {.offset = (unsigned short)8U, .shift = (unsigned char)29U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 790  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_mirror_agent_set(char *buf, u32 val)
{
  #line 790 
  __mlxsw_item_set32(buf,& mlxsw_afa_trapdisc_mirror_agent_item,(unsigned short)0,val);
  #line 791 
  return;
}

#line 795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_trapdisc_mirror_enable_item = {.offset = (unsigned short)8U, .shift = (unsigned char)24U, .size = {.bits = (unsigned char)1U}, .name = (char *)"afa"};
#line 795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_mirror_enable_set(char *buf, u32 val)
{
  #line 795 
  __mlxsw_item_set32(buf,& mlxsw_afa_trapdisc_mirror_enable_item,(unsigned short)0,val);
  #line 796 
  return;
}

#line 798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_pack(char *payload, enum mlxsw_afa_trapdisc_trap_action trap_action, enum mlxsw_afa_trapdisc_forward_action forward_action, u16 trap_id)
{
  #line 803 
  mlxsw_afa_trapdisc_trap_action_set(payload,(unsigned int)trap_action);
  #line 804 
  mlxsw_afa_trapdisc_forward_action_set(payload,(unsigned int)forward_action);
  #line 805 
  mlxsw_afa_trapdisc_trap_id_set(payload,(unsigned int)trap_id);
  #line 806 
  return;
}

#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_trapdisc_mirror_pack(char *payload, bool mirror_enable, u8 mirror_agent)
{
  #line 812 
  mlxsw_afa_trapdisc_mirror_enable_set(payload,(unsigned int)mirror_enable);
  #line 813 
  mlxsw_afa_trapdisc_mirror_agent_set(payload,(unsigned int)mirror_agent);
  #line 814 
  return;
}

#line 816  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_drop(struct mlxsw_afa_block *block)
{
  #line 818 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)3,(unsigned char)1);
  #line 822 
  if ((int)IS_ERR_0((void *)act) != 0) {
    #line 823 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 824 
  mlxsw_afa_trapdisc_pack(act,(enum mlxsw_afa_trapdisc_trap_action)MLXSW_AFA_TRAPDISC_TRAP_ACTION_NOP,(enum mlxsw_afa_trapdisc_forward_action)MLXSW_AFA_TRAPDISC_FORWARD_ACTION_DISCARD,(unsigned short)0);
  #line 826 
  return 0;
}

#line 830  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_trap(struct mlxsw_afa_block *block, u16 trap_id)
{
  #line 832 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)3,(unsigned char)1);
  #line 836 
  if ((int)IS_ERR_0((void *)act) != 0) {
    #line 837 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 838 
  mlxsw_afa_trapdisc_pack(act,(enum mlxsw_afa_trapdisc_trap_action)MLXSW_AFA_TRAPDISC_TRAP_ACTION_TRAP,(enum mlxsw_afa_trapdisc_forward_action)MLXSW_AFA_TRAPDISC_FORWARD_ACTION_DISCARD,(unsigned short)((int)trap_id));
  #line 841 
  return 0;
}

#line 845  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_trap_and_forward(struct mlxsw_afa_block *block, u16 trap_id)
{
  #line 848 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)3,(unsigned char)1);
  #line 852 
  if ((int)IS_ERR_0((void *)act) != 0) {
    #line 853 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 854 
  mlxsw_afa_trapdisc_pack(act,(enum mlxsw_afa_trapdisc_trap_action)MLXSW_AFA_TRAPDISC_TRAP_ACTION_TRAP,(enum mlxsw_afa_trapdisc_forward_action)MLXSW_AFA_TRAPDISC_FORWARD_ACTION_FORWARD,(unsigned short)((int)trap_id));
  #line 857 
  return 0;
}

#line 869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_mirror_destroy(struct mlxsw_afa_block *block, struct mlxsw_afa_mirror *mirror)
{
  #line 872 
  mlxsw_afa_resource_del(& mirror->resource);
  #line 873 
  (*(((block->afa)->ops)->mirror_del))((block->afa)->ops_priv,(unsigned char)((int)mirror->local_in_port),mirror->span_id,(_Bool)((bool)((int)mirror->ingress) != 0));
  #line 877 
  kfree((void *)mirror);
  #line 878 
  return;
}

#line 881  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static void mlxsw_afa_mirror_destructor(struct mlxsw_afa_block *block, struct mlxsw_afa_resource *resource)
{
  #line 886 
  void *__mptr;
  #line 884 
  struct mlxsw_afa_mirror *mirror;
  #line 886 
  __mptr = (void *)resource;
  #line 886 
  mirror = ((struct mlxsw_afa_mirror *)__mptr);
  #line 887 
  mlxsw_afa_mirror_destroy(block,mirror);
  #line 888 
  return;
}

#line 891  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_afa_mirror *mlxsw_afa_mirror_create(struct mlxsw_afa_block *block, u8 local_in_port, struct net_device *out_dev, bool ingress)
{
  #line 894 
  struct mlxsw_afa_mirror *mirror;
  #line 895 
  int err;
  #line 897 
  mirror = (struct mlxsw_afa_mirror *)kzalloc_1(32UL,3264U);
  #line 898 
  if (mirror == (struct mlxsw_afa_mirror *)0) {
    #line 899 
    return (struct mlxsw_afa_mirror *)ERR_PTR(-12L);
  }
  #line 901 
  err = (*(((block->afa)->ops)->mirror_add))((block->afa)->ops_priv,(unsigned char)((int)local_in_port),out_dev,(_Bool)((bool)((int)ingress) != 0),& mirror->span_id);
  #line 904 
  if (err != 0) 
                #line 905 
                goto err_mirror_add;
  #line 907 
  mirror->ingress = ingress;
  #line 908 
  mirror->local_in_port = local_in_port;
  #line 909 
  mirror->resource.destructor = & mlxsw_afa_mirror_destructor;
  #line 910 
  mlxsw_afa_resource_add(block,& mirror->resource);
  #line 911 
  return mirror;
  #line 913 
  err_mirror_add: 
                  #line 913 
  ;
  #line 914 
  kfree((void *)mirror);
  #line 915 
  return (struct mlxsw_afa_mirror *)ERR_PTR((long)err);
}

#line 919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static int mlxsw_afa_block_append_allocated_mirror(struct mlxsw_afa_block *block, u8 mirror_agent)
{
  #line 922 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)3,(unsigned char)1);
  #line 925 
  if ((int)IS_ERR_0((void *)act) != 0) {
    #line 926 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 927 
  mlxsw_afa_trapdisc_pack(act,(enum mlxsw_afa_trapdisc_trap_action)MLXSW_AFA_TRAPDISC_TRAP_ACTION_NOP,(enum mlxsw_afa_trapdisc_forward_action)MLXSW_AFA_TRAPDISC_FORWARD_ACTION_FORWARD,(unsigned short)0);
  #line 929 
  mlxsw_afa_trapdisc_mirror_pack(act,(_Bool)1,(unsigned char)((int)mirror_agent));
  #line 930 
  return 0;
}

#line 934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_mirror(struct mlxsw_afa_block *block, u8 local_in_port, struct net_device *out_dev, bool ingress, struct netlink_ext_ack *extack)
{
  #line 938 
  struct mlxsw_afa_mirror *mirror;
  #line 939 
  int err;
  #line 941 
  mirror = mlxsw_afa_mirror_create(block,(unsigned char)((int)local_in_port),out_dev,(_Bool)((bool)((int)ingress) != 0));
  #line 943 
  if ((int)IS_ERR_0((void *)mirror) != 0) {
    {
      #line 944 
      char __msg[40U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 944 
      struct netlink_ext_ack *__extack = extack;
      #line 944 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 944 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 945 
    return (int)PTR_ERR_0((void *)mirror);
  }
  #line 947 
  err = mlxsw_afa_block_append_allocated_mirror(block,(unsigned char)((int)((unsigned char)mirror->span_id)));
  #line 948 
  if (err != 0) {
    {
      #line 949 
      char __msg_0[40U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 949 
      struct netlink_ext_ack *__extack_0 = extack;
      #line 949 
      if (__extack_0 != (struct netlink_ext_ack *)0) 
                                                     #line 949 
                                                     __extack_0->_msg = (char *)(& __msg_0);
    }
    #line 950 
    goto err_append_allocated_mirror;
  }
  #line 953 
  return 0;
  #line 955 
  err_append_allocated_mirror: 
                               #line 955 
  ;
  #line 956 
  mlxsw_afa_mirror_destroy(block,mirror);
  #line 957 
  return err;
}

#line 978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_forward_type_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)2U}, .name = (char *)"afa"};
#line 978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_forward_type_set(char *buf, u32 val)
{
  #line 978 
  __mlxsw_item_set32(buf,& mlxsw_afa_forward_type_item,(unsigned short)0,val);
  #line 979 
  return;
}

#line 984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_forward_pbs_ptr_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)24U}, .name = (char *)"afa"};
#line 984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_forward_pbs_ptr_set(char *buf, u32 val)
{
  #line 984 
  __mlxsw_item_set32(buf,& mlxsw_afa_forward_pbs_ptr_item,(unsigned short)0,val);
  #line 985 
  return;
}

#line 989  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_forward_in_port_item = {.offset = (unsigned short)12U, .size = {.bits = (unsigned char)1U}, .name = (char *)"afa"};
#line 989  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_forward_in_port_set(char *buf, u32 val)
{
  #line 989 
  __mlxsw_item_set32(buf,& mlxsw_afa_forward_in_port_item,(unsigned short)0,val);
  #line 990 
  return;
}

#line 992  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_forward_pack(char *payload, enum mlxsw_afa_forward_type type, u32 pbs_ptr, bool in_port)
{
  #line 995 
  mlxsw_afa_forward_type_set(payload,(unsigned int)type);
  #line 996 
  mlxsw_afa_forward_pbs_ptr_set(payload,pbs_ptr);
  #line 997 
  mlxsw_afa_forward_in_port_set(payload,(unsigned int)in_port);
  #line 998 
  return;
}

#line 1000  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_fwd(struct mlxsw_afa_block *block, u8 local_port, bool in_port, struct netlink_ext_ack *extack)
{
  #line 1004 
  struct mlxsw_afa_fwd_entry_ref *fwd_entry_ref;
  #line 1005 
  u32 kvdl_index;
  #line 1006 
  char *act;
  #line 1007 
  int err;
  #line 1009 
  if ((int)in_port != 0) {
    {
      #line 1010 
      char __msg[56U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 1010 
      struct netlink_ext_ack *__extack = extack;
      #line 1010 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 1010 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 1011 
    return -95;
  }
  #line 1013 
  fwd_entry_ref = mlxsw_afa_fwd_entry_ref_create(block,(unsigned char)((int)local_port));
  #line 1014 
  if ((int)IS_ERR_0((void *)fwd_entry_ref) != 0) {
    {
      #line 1015 
      char __msg_0[41U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 1015 
      struct netlink_ext_ack *__extack_0 = extack;
      #line 1015 
      if (__extack_0 != (struct netlink_ext_ack *)0) 
                                                     #line 1015 
                                                     __extack_0->_msg = (char *)(& __msg_0);
    }
    #line 1016 
    return (int)PTR_ERR_0((void *)fwd_entry_ref);
  }
  #line 1018 
  kvdl_index = (fwd_entry_ref->fwd_entry)->kvdl_index;
  #line 1020 
  act = mlxsw_afa_block_append_action(block,(unsigned char)7,(unsigned char)1);
  #line 1022 
  if ((int)IS_ERR_0((void *)act) != 0) {
    {
      #line 1023 
      char __msg_1[41U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 1023 
      struct netlink_ext_ack *__extack_1 = extack;
      #line 1023 
      if (__extack_1 != (struct netlink_ext_ack *)0) 
                                                     #line 1023 
                                                     __extack_1->_msg = (char *)(& __msg_1);
    }
    #line 1024 
    err = (int)PTR_ERR_0((void *)act);
    #line 1025 
    goto err_append_action;
  }
  #line 1027 
  mlxsw_afa_forward_pack(act,(enum mlxsw_afa_forward_type)MLXSW_AFA_FORWARD_TYPE_PBS,kvdl_index,(_Bool)((bool)((int)in_port) != 0));
  #line 1029 
  return 0;
  #line 1031 
  err_append_action: 
                     #line 1031 
  ;
  #line 1032 
  mlxsw_afa_fwd_entry_ref_destroy(block,fwd_entry_ref);
  #line 1033 
  return err;
}

#line 1058  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_polcnt_counter_set_type_item = {.offset = (unsigned short)4U, .shift = (unsigned char)24U, .size = {.bits = (unsigned char)8U}, .name = (char *)"afa"};
#line 1058  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_polcnt_counter_set_type_set(char *buf, u32 val)
{
  #line 1058 
  __mlxsw_item_set32(buf,& mlxsw_afa_polcnt_counter_set_type_item,(unsigned short)0,val);
  #line 1059 
  return;
}

#line 1063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_polcnt_counter_index_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)24U}, .name = (char *)"afa"};
#line 1063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_polcnt_counter_index_set(char *buf, u32 val)
{
  #line 1063 
  __mlxsw_item_set32(buf,& mlxsw_afa_polcnt_counter_index_item,(unsigned short)0,val);
  #line 1064 
  return;
}

#line 1066  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_polcnt_pack(char *payload, enum mlxsw_afa_polcnt_counter_set_type set_type, u32 counter_index)
{
  #line 1070 
  mlxsw_afa_polcnt_counter_set_type_set(payload,(unsigned int)set_type);
  #line 1071 
  mlxsw_afa_polcnt_counter_index_set(payload,counter_index);
  #line 1072 
  return;
}

#line 1074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_allocated_counter(struct mlxsw_afa_block *block, u32 counter_index)
{
  #line 1077 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)8,(unsigned char)1);
  #line 1079 
  if ((int)IS_ERR_0((void *)act) != 0) {
    #line 1080 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 1081 
  mlxsw_afa_polcnt_pack(act,(enum mlxsw_afa_polcnt_counter_set_type)MLXSW_AFA_POLCNT_COUNTER_SET_TYPE_PACKETS_BYTES,counter_index);
  #line 1083 
  return 0;
}

#line 1087  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_counter(struct mlxsw_afa_block *block, u32 *p_counter_index, struct netlink_ext_ack *extack)
{
  #line 1091 
  struct mlxsw_afa_counter *counter;
  #line 1092 
  u32 counter_index;
  #line 1093 
  int err;
  #line 1095 
  counter = mlxsw_afa_counter_create(block);
  #line 1096 
  if ((int)IS_ERR_0((void *)counter) != 0) {
    {
      #line 1097 
      char __msg[39U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 1097 
      struct netlink_ext_ack *__extack = extack;
      #line 1097 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 1097 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 1098 
    return (int)PTR_ERR_0((void *)counter);
  }
  #line 1100 
  counter_index = counter->counter_index;
  #line 1102 
  err = mlxsw_afa_block_append_allocated_counter(block,counter_index);
  #line 1103 
  if (err != 0) {
    {
      #line 1104 
      char __msg_0[39U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 1104 
      struct netlink_ext_ack *__extack_0 = extack;
      #line 1104 
      if (__extack_0 != (struct netlink_ext_ack *)0) 
                                                     #line 1104 
                                                     __extack_0->_msg = (char *)(& __msg_0);
    }
    #line 1105 
    goto err_append_allocated_counter;
  }
  #line 1107 
  if (p_counter_index != (u32 *)0U) 
                                    #line 1108 
                                    *p_counter_index = counter_index;
  #line 1109 
  return 0;
  #line 1111 
  err_append_allocated_counter: 
                                #line 1111 
  ;
  #line 1112 
  mlxsw_afa_counter_destroy(block,counter);
  #line 1113 
  return err;
}

#line 1134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_virfwd_fid_cmd_item = {.offset = (unsigned short)8U, .shift = (unsigned char)29U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 1134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_virfwd_fid_cmd_set(char *buf, u32 val)
{
  #line 1134 
  __mlxsw_item_set32(buf,& mlxsw_afa_virfwd_fid_cmd_item,(unsigned short)0,val);
  #line 1135 
  return;
}

#line 1139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_virfwd_fid_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"afa"};
#line 1139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_virfwd_fid_set(char *buf, u32 val)
{
  #line 1139 
  __mlxsw_item_set32(buf,& mlxsw_afa_virfwd_fid_item,(unsigned short)0,val);
  #line 1140 
  return;
}

#line 1141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_virfwd_pack(char *payload, enum mlxsw_afa_virfwd_fid_cmd fid_cmd, u16 fid)
{
  #line 1145 
  mlxsw_afa_virfwd_fid_cmd_set(payload,(unsigned int)fid_cmd);
  #line 1146 
  mlxsw_afa_virfwd_fid_set(payload,(unsigned int)fid);
  #line 1147 
  return;
}

#line 1149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_fid_set(struct mlxsw_afa_block *block, u16 fid, struct netlink_ext_ack *extack)
{
  #line 1152 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)14,(unsigned char)1);
  #line 1155 
  if ((int)IS_ERR_0((void *)act) != 0) {
    {
      #line 1156 
      char __msg[41U] = {(char)'m', (char)'l', (char)'x', (char)'s', (char)'w', (char)'_', (char)'c', (char)'o', (char)'r', (char)'e', (char)'\000'};
      #line 1156 
      struct netlink_ext_ack *__extack = extack;
      #line 1156 
      if (__extack != (struct netlink_ext_ack *)0) 
                                                   #line 1156 
                                                   __extack->_msg = (char *)(& __msg);
    }
    #line 1157 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 1159 
  mlxsw_afa_virfwd_pack(act,(enum mlxsw_afa_virfwd_fid_cmd)MLXSW_AFA_VIRFWD_FID_CMD_SET,(unsigned short)((int)fid));
  #line 1160 
  return 0;
}

#line 1180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_mcrouter_rpf_action_item = {.shift = (unsigned char)28U, .size = {.bits = (unsigned char)3U}, .name = (char *)"afa"};
#line 1180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_mcrouter_rpf_action_set(char *buf, u32 val)
{
  #line 1180 
  __mlxsw_item_set32(buf,& mlxsw_afa_mcrouter_rpf_action_item,(unsigned short)0,val);
  #line 1181 
  return;
}

#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_mcrouter_expected_irif_item = {.size = {.bits = (unsigned char)16U}, .name = (char *)"afa"};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_mcrouter_expected_irif_set(char *buf, u32 val)
{
  #line 1183 
  __mlxsw_item_set32(buf,& mlxsw_afa_mcrouter_expected_irif_item,(unsigned short)0,val);
  #line 1184 
  return;
}

#line 1186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_mcrouter_min_mtu_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"afa"};
#line 1186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_mcrouter_min_mtu_set(char *buf, u32 val)
{
  #line 1186 
  __mlxsw_item_set32(buf,& mlxsw_afa_mcrouter_min_mtu_item,(unsigned short)0,val);
  #line 1187 
  return;
}

#line 1196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_mcrouter_vrmid_item = {.offset = (unsigned short)12U, .shift = (unsigned char)31U, .size = {.bits = (unsigned char)1U}, .name = (char *)"afa"};
#line 1196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_mcrouter_vrmid_set(char *buf, u32 val)
{
  #line 1196 
  __mlxsw_item_set32(buf,& mlxsw_afa_mcrouter_vrmid_item,(unsigned short)0,val);
  #line 1197 
  return;
}

#line 1204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
static struct mlxsw_item mlxsw_afa_mcrouter_rigr_rmid_index_item = {.offset = (unsigned short)12U, .size = {.bits = (unsigned char)24U}, .name = (char *)"afa"};
#line 1204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_mcrouter_rigr_rmid_index_set(char *buf, u32 val)
{
  #line 1204 
  __mlxsw_item_set32(buf,& mlxsw_afa_mcrouter_rigr_rmid_index_item,(unsigned short)0,val);
  #line 1205 
  return;
}

#line 1207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
__inline static void mlxsw_afa_mcrouter_pack(char *payload, enum mlxsw_afa_mcrouter_rpf_action rpf_action, u16 expected_irif, u16 min_mtu, enum mlxsw_afa_mrouter_vrmid vrmid, u32 rigr_rmid_index)
{
  #line 1213 
  mlxsw_afa_mcrouter_rpf_action_set(payload,(unsigned int)rpf_action);
  #line 1214 
  mlxsw_afa_mcrouter_expected_irif_set(payload,(unsigned int)expected_irif);
  #line 1215 
  mlxsw_afa_mcrouter_min_mtu_set(payload,(unsigned int)min_mtu);
  #line 1216 
  mlxsw_afa_mcrouter_vrmid_set(payload,(unsigned int)vrmid);
  #line 1217 
  mlxsw_afa_mcrouter_rigr_rmid_index_set(payload,rigr_rmid_index);
  #line 1218 
  return;
}

#line 1220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c"
int mlxsw_afa_block_append_mcrouter(struct mlxsw_afa_block *block, u16 expected_irif, u16 min_mtu, bool rmid_valid, u32 kvdl_index)
{
  #line 1224 
  char *act = mlxsw_afa_block_append_action(block,(unsigned char)16,(unsigned char)2);
  #line 1227 
  if ((int)IS_ERR_0((void *)act) != 0) {
    #line 1228 
    return (int)PTR_ERR_0((void *)act);
  }
  #line 1229 
  mlxsw_afa_mcrouter_pack(act,(enum mlxsw_afa_mcrouter_rpf_action)MLXSW_AFA_MCROUTER_RPF_ACTION_TRAP,(unsigned short)((int)expected_irif),(unsigned short)((int)min_mtu),(enum mlxsw_afa_mrouter_vrmid)rmid_valid,kvdl_index);
  #line 1231 
  return 0;
}

#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 128 
  ldv_init_list_head(list);
  #line 129 
  return;
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void atomic_inc(atomic_t *v)
{
  #line 177 
  ldv_atomic_inc(v);
  #line 178 
  return;
}

#line 181  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void atomic_dec(atomic_t *v)
{
  #line 184 
  ldv_atomic_dec(v);
  #line 185 
  return;
}

#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void *ERR_PTR(long error)
{
  #line 198 
  return ldv_err_ptr(error);
}

#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static long PTR_ERR_0(void *ptr)
{
  #line 205 
  return ldv_ptr_err(ptr);
}

#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static bool IS_ERR_0(void *ptr)
{
  #line 212 
  return ldv_is_err(ptr);
}

#line 295  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static bool cif_queue_work_0(struct workqueue_struct *wq, struct work_struct *work)
{
  #line 299 
  return emg_queue_work(wq,work);
}

#line 364  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_actions.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  #line 367 
  return ldv_kzalloc(size,flags);
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 104  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static unsigned long cif_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 146  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static unsigned long cif_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool __test_and_clear_bit(long nr, unsigned long *addr)
{
  #line 85 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 86 
  return variable_test_bit(nr,addr);
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static void INIT_LIST_HEAD_1(struct list_head *list);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add_1(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_2917 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_0(struct list_head *new, struct list_head *head)
{
  #line 79 
  __list_add_1(new,head,head->next);
  #line 80 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_1(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_2919 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry_1(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del_1(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del_1(struct list_head *entry)
{
  #line 139 
  __list_del_entry_1(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty(struct list_head *head)
{
  #line 269 
  union __anonunion___u_2921 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 177 
void *memchr_inv(void *, int, size_t);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static void *ERR_PTR_0(long error);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 21 
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 22 
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
#line 257 
extern int ( /* missing proto */ __builtin_mul_overflow)(unsigned long x_0, unsigned long x_1, size_t *x_2);
#line 297 
#line 297 
extern int ( /* missing proto */ __builtin_add_overflow)(unsigned long x_0, unsigned long x_1, size_t *x_2);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
__inline static size_t __ab_c_size(size_t a, size_t b, size_t c)
{
  #line 295 
  size_t __a;
  #line 295 
  size_t __b;
  #line 295 
  size_t *__d;
  #line 297 
  size_t __a_0;
  #line 297 
  size_t __b_0;
  #line 297 
  size_t *__d_0;
  #line 293 
  size_t bytes;
  {
    #line 295 
    __a = a;
    #line 295 
    __b = b;
    #line 295 
    __d = & bytes;
    #line 295 
    int tmp = & __a == __d;
    }
  #line 295 
  if (__builtin_mul_overflow(__a,__b,__d) != 0) 
                                                #line 296 
                                                return 18446744073709551615UL;
  {
    #line 297 
    __a_0 = bytes;
    #line 297 
    __b_0 = c;
    #line 297 
    __d_0 = & bytes;
    #line 297 
    int tmp_3 = & __a_0 == __d_0;
    }
  #line 297 
  if (__builtin_add_overflow(__a_0,__b_0,__d_0) != 0) 
                                                      #line 298 
                                                      return 18446744073709551615UL;
  #line 300 
  return bytes;
}

#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 364  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags);
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
static struct mlxsw_afk_element_info mlxsw_afk_element_infos[25U] = {{.item = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"SRC_SYS_PORT"}}, {.element = MLXSW_AFK_ELEMENT_DMAC_32_47, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)2U}, .name = (char *)"DMAC_32_47"}}, {.element = MLXSW_AFK_ELEMENT_DMAC_0_31, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)6U, .size = {.bits = (unsigned char)4U}, .name = (char *)"DMAC_0_31"}}, {.element = MLXSW_AFK_ELEMENT_SMAC_32_47, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)10U, .size = {.bits = (unsigned char)2U}, .name = (char *)"SMAC_32_47"}}, {.element = MLXSW_AFK_ELEMENT_SMAC_0_31, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)12U, .size = {.bits = (unsigned char)4U}, .name = (char *)"SMAC_0_31"}}, {.element = MLXSW_AFK_ELEMENT_ETHERTYPE, .item = {.size = {.bits = (unsigned char)16U}, .name = (char *)"ETHERTYPE"}}, {.element = MLXSW_AFK_ELEMENT_IP_PROTO, .item = {.offset = (unsigned short)16U, .size = {.bits = (unsigned char)8U}, .name = (char *)"IP_PROTO"}}, {.element = MLXSW_AFK_ELEMENT_SRC_IP_96_127, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)32U, .size = {.bits = (unsigned char)4U}, .name = (char *)"SRC_IP_96_127"}}, {.element = MLXSW_AFK_ELEMENT_SRC_IP_64_95, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)36U, .size = {.bits = (unsigned char)4U}, .name = (char *)"SRC_IP_64_95"}}, {.element = MLXSW_AFK_ELEMENT_SRC_IP_32_63, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)40U, .size = {.bits = (unsigned char)4U}, .name = (char *)"SRC_IP_32_63"}}, {.element = MLXSW_AFK_ELEMENT_SRC_IP_0_31, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)44U, .size = {.bits = (unsigned char)4U}, .name = (char *)"SRC_IP_0_31"}}, {.element = MLXSW_AFK_ELEMENT_DST_IP_96_127, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)48U, .size = {.bits = (unsigned char)4U}, .name = (char *)"DST_IP_96_127"}}, {.element = MLXSW_AFK_ELEMENT_DST_IP_64_95, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)52U, .size = {.bits = (unsigned char)4U}, .name = (char *)"DST_IP_64_95"}}, {.element = MLXSW_AFK_ELEMENT_DST_IP_32_63, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)56U, .size = {.bits = (unsigned char)4U}, .name = (char *)"DST_IP_32_63"}}, {.element = MLXSW_AFK_ELEMENT_DST_IP_0_31, .type = MLXSW_AFK_ELEMENT_TYPE_BUF, .item = {.offset = (unsigned short)60U, .size = {.bits = (unsigned char)4U}, .name = (char *)"DST_IP_0_31"}}, {.element = MLXSW_AFK_ELEMENT_DST_L4_PORT, .item = {.offset = (unsigned short)20U, .size = {.bits = (unsigned char)16U}, .name = (char *)"DST_L4_PORT"}}, {.element = MLXSW_AFK_ELEMENT_SRC_L4_PORT, .item = {.offset = (unsigned short)20U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)16U}, .name = (char *)"SRC_L4_PORT"}}, {.element = MLXSW_AFK_ELEMENT_VID, .item = {.offset = (unsigned short)16U, .shift = (unsigned char)8U, .size = {.bits = (unsigned char)12U}, .name = (char *)"VID"}}, {.element = MLXSW_AFK_ELEMENT_PCP, .item = {.offset = (unsigned short)16U, .shift = (unsigned char)20U, .size = {.bits = (unsigned char)3U}, .name = (char *)"PCP"}}, {.element = MLXSW_AFK_ELEMENT_TCP_FLAGS, .item = {.offset = (unsigned short)16U, .shift = (unsigned char)23U, .size = {.bits = (unsigned char)9U}, .name = (char *)"TCP_FLAGS"}}, {.element = MLXSW_AFK_ELEMENT_IP_TTL_, .item = {.offset = (unsigned short)24U, .size = {.bits = (unsigned char)8U}, .name = (char *)"IP_TTL_"}}, {.element = MLXSW_AFK_ELEMENT_IP_ECN, .item = {.offset = (unsigned short)24U, .shift = (unsigned char)9U, .size = {.bits = (unsigned char)2U}, .name = (char *)"IP_ECN"}}, {.element = MLXSW_AFK_ELEMENT_IP_DSCP, .item = {.offset = (unsigned short)24U, .shift = (unsigned char)11U, .size = {.bits = (unsigned char)6U}, .name = (char *)"IP_DSCP"}}, {.element = MLXSW_AFK_ELEMENT_VIRT_ROUTER_8_10, .item = {.offset = (unsigned short)24U, .shift = (unsigned char)17U, .size = {.bits = (unsigned char)3U}, .name = (char *)"VIRT_ROUTER_8_10"}}, {.element = MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7, .item = {.offset = (unsigned short)24U, .shift = (unsigned char)20U, .size = {.bits = (unsigned char)8U}, .name = (char *)"VIRT_ROUTER_0_7"}}};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
__inline static void mlxsw_afk_element_usage_add(struct mlxsw_afk_element_usage *elusage, enum mlxsw_afk_element element)
{
  #line 170 
  __set_bit((long)element,(unsigned long *)(& elusage->usage));
  #line 171 
  return;
}

#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
__inline static bool mlxsw_afk_element_usage_subset(struct mlxsw_afk_element_usage *elusage_small, struct mlxsw_afk_element_usage *elusage_big)
{
  #line 195 
  int i;
  #line 197 
  i = 0;
  #line 197 
  while (i <= 24) {
    #line 198 
    if ((int)test_bit((long)i,(unsigned long *)(& elusage_small->usage)) != 0) {
      #line 199 
      if (! test_bit((long)i,(unsigned long *)(& elusage_big->usage))) 
        #line 200 
        return (_Bool)0;
    }
    #line 197 
    i ++;
  }
  #line 201 
  return (_Bool)1;
}

#line 213 
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk *mlxsw_afk_create(unsigned int max_blocks, struct mlxsw_afk_ops *ops);
#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_destroy(struct mlxsw_afk *mlxsw_afk);
#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk_key_info *mlxsw_afk_key_info_get(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_element_usage *elusage);
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_key_info_put(struct mlxsw_afk_key_info *key_info);
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
bool mlxsw_afk_key_info_subset(struct mlxsw_afk_key_info *key_info, struct mlxsw_afk_element_usage *elusage);
#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
u16 mlxsw_afk_key_info_block_encoding_get(struct mlxsw_afk_key_info *key_info, int block_index);
#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
unsigned int mlxsw_afk_key_info_blocks_count_get(struct mlxsw_afk_key_info *key_info);
#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_values_add_u32(struct mlxsw_afk_element_values *values, enum mlxsw_afk_element element, u32 key_value, u32 mask_value);
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 365  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_values_add_buf(struct mlxsw_afk_element_values *values, enum mlxsw_afk_element element, char *key_value, char *mask_value, unsigned int len);
#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_encode(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_key_info *key_info, struct mlxsw_afk_element_values *values, char *key, char *mask);
#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h"
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_clear(struct mlxsw_afk *mlxsw_afk, char *key, int block_start, int block_end);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static bool mlxsw_afk_blocks_check(struct mlxsw_afk *mlxsw_afk)
{
  #line 22 
  int i;
  #line 23 
  int j;
  #line 25 
  i = 0;
  #line 25 
  while (mlxsw_afk->blocks_count > (unsigned int)i) {
    {
      #line 26 
      struct mlxsw_afk_block *block = mlxsw_afk->blocks + (unsigned long)i;
      #line 28 
      j = 0;
      #line 28 
      while (block->instances_count > (unsigned int)j) {
        {
          #line 29 
          struct mlxsw_afk_element_inst *elinst;
          #line 31 
          elinst = block->instances + (unsigned long)j;
          #line 32 
          if (elinst->type != (elinst->info)->type || ! elinst->avoid_size_check && (int)elinst->item.size.bits != (int)(elinst->info)->item.size.bits) 
            #line 36 
            return (_Bool)0;
        }
        #line 28 
        j ++;
      }
    }
    #line 25 
    i ++;
  }
  #line 39 
  return (_Bool)1;
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk *mlxsw_afk_create(unsigned int max_blocks, struct mlxsw_afk_ops *ops)
{
  #line 45 
  struct mlxsw_afk *mlxsw_afk;
  #line 47 
  mlxsw_afk = (struct mlxsw_afk *)kzalloc_2(48UL,3264U);
  #line 48 
  if (mlxsw_afk == (struct mlxsw_afk *)0) 
                                          #line 49 
                                          return (struct mlxsw_afk *)0;
  #line 50 
  INIT_LIST_HEAD_1(& mlxsw_afk->key_info_list);
  #line 51 
  mlxsw_afk->max_blocks = max_blocks;
  #line 52 
  mlxsw_afk->ops = ops;
  #line 53 
  mlxsw_afk->blocks = ops->blocks;
  #line 54 
  mlxsw_afk->blocks_count = ops->blocks_count;
  {
    #line 55 
    int tmp_1;
    #line 55 
    if (mlxsw_afk_blocks_check(mlxsw_afk)) 
                                           #line 55 
                                           tmp_1 = 0; else 
                                                           #line 55 
                                                           tmp_1 = 1;
    #line 55 
    int __ret_warn_on = tmp_1;
    #line 55 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 56 
      ldv_inline_asm();
      #line 57 
      ldv_inline_asm();
    }
    #line 55 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 56 
  return mlxsw_afk;
}

#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_destroy(struct mlxsw_afk *mlxsw_afk)
{
  {
    #line 62 
    int __ret_warn_on = list_empty(& mlxsw_afk->key_info_list) == 0;
    #line 62 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 63 
      ldv_inline_asm();
      #line 64 
      ldv_inline_asm();
    }
    #line 62 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 63 
  kfree((void *)mlxsw_afk);
  #line 64 
  return;
}

#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static bool mlxsw_afk_key_info_elements_eq(struct mlxsw_afk_key_info *key_info, struct mlxsw_afk_element_usage *elusage)
{
  #line 82 
  return (_Bool)(memcmp((void *)(& key_info->elusage),(void *)elusage,8UL) == 0);
}

#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static struct mlxsw_afk_key_info *mlxsw_afk_key_info_find(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_element_usage *elusage)
{
  #line 91 
  void *__mptr;
  #line 89 
  struct mlxsw_afk_key_info *key_info;
  #line 91 
  __mptr = (void *)mlxsw_afk->key_info_list.next;
  #line 91 
  key_info = ((struct mlxsw_afk_key_info *)__mptr);
  #line 91 
  while ((void *)key_info != (void *)mlxsw_afk) {
    #line 91 
    void *__mptr_0;
    #line 92 
    if ((int)mlxsw_afk_key_info_elements_eq(key_info,elusage) != 0) 
                                                                    #line 93 
                                                                    return key_info;
    #line 91 
    __mptr_0 = (void *)key_info->list.next;
    #line 91 
    key_info = ((struct mlxsw_afk_key_info *)__mptr_0);
  }
  #line 95 
  return (struct mlxsw_afk_key_info *)0;
}

#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static void mlxsw_afk_picker_count_hits(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_picker *picker, enum mlxsw_afk_element element)
{
  #line 109 
  int i;
  #line 110 
  int j;
  #line 112 
  i = 0;
  #line 112 
  while (mlxsw_afk->blocks_count > (unsigned int)i) {
    {
      #line 113 
      struct mlxsw_afk_block *block = mlxsw_afk->blocks + (unsigned long)i;
      #line 115 
      j = 0;
      #line 115 
      while (block->instances_count > (unsigned int)j) {
        {
          #line 116 
          struct mlxsw_afk_element_inst *elinst;
          #line 118 
          elinst = block->instances + (unsigned long)j;
          #line 119 
          if ((elinst->info)->element == element) {
            #line 120 
            __set_bit((long)element,(unsigned long *)(& picker->hits[i].element));
            #line 121 
            (picker->hits[i].total) ++;
          }
        }
        #line 115 
        j ++;
      }
    }
    #line 112 
    i ++;
  }
  #line 125 
  return;
}

#line 127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static void mlxsw_afk_picker_subtract_hits(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_picker *picker, int block_index)
{
  #line 131 
  unsigned long hits_element[1U];
  #line 132 
  int i;
  #line 133 
  int j;
  #line 135 
  memcpy((void *)(& hits_element),(void *)(& picker->hits[block_index].element),8UL);
  #line 138 
  i = 0;
  #line 138 
  while (mlxsw_afk->blocks_count > (unsigned int)i) {
    {
      #line 139 
      j = (int)cif_find_first_bit((unsigned long *)(& hits_element),25UL);
      #line 139 
      while (j <= 24) {
        #line 140 
        if ((int)__test_and_clear_bit((long)j,
                             (unsigned long *)(& picker->hits[i].element)) != 0) 
          #line 141 
          (picker->hits[i].total) --;
        #line 139 
        j = (int)cif_find_next_bit((unsigned long *)(& hits_element),25UL,
                          (unsigned long)(j + 1));
      }
    }
    #line 138 
    i ++;
  }
  #line 143 
  return;
}

#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static int mlxsw_afk_picker_most_hits_get(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_picker *picker)
{
  #line 151 
  int i;
  #line 149 
  int most_index = -22;
  #line 150 
  int most_hits = 0;
  #line 153 
  i = 0;
  #line 153 
  while (mlxsw_afk->blocks_count > (unsigned int)i) {
    #line 154 
    if (picker->hits[i].total > (unsigned int)most_hits) {
      #line 155 
      most_hits = (int)picker->hits[i].total;
      #line 156 
      most_index = i;
    }
    #line 153 
    i ++;
  }
  #line 159 
  return most_index;
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static int mlxsw_afk_picker_key_info_add(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_picker *picker, int block_index, struct mlxsw_afk_key_info *key_info)
{
  #line 167 
  enum mlxsw_afk_element element;
  #line 169 
  if (key_info->blocks_count == mlxsw_afk->max_blocks) 
                                                       #line 170 
                                                       return -22;
  #line 172 
  element = (enum mlxsw_afk_element)cif_find_first_bit((unsigned long *)(& picker->hits[block_index].element),
                         25UL);
  #line 172 
  while (element <= (unsigned int)MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7) {
    #line 174 
    key_info->element_to_block[(unsigned int)element] = (int)key_info->blocks_count;
    #line 175 
    mlxsw_afk_element_usage_add(& key_info->elusage,element);
    #line 172 
    element = (enum mlxsw_afk_element)cif_find_next_bit((unsigned long *)(& picker->hits[block_index].element),
                          25UL,(unsigned long)((unsigned int)element + 1U));
  }
  #line 178 
  key_info->blocks[key_info->blocks_count] = mlxsw_afk->blocks + (unsigned long)block_index;
  #line 180 
  (key_info->blocks_count) ++;
  #line 181 
  return 0;
}

#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static int mlxsw_afk_picker(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_key_info *key_info, struct mlxsw_afk_element_usage *elusage)
{
  #line 188 
  struct mlxsw_afk_picker *picker;
  #line 189 
  enum mlxsw_afk_element element;
  #line 190 
  size_t alloc_size;
  #line 191 
  int err;
  #line 193 
  alloc_size = (unsigned long)mlxsw_afk->blocks_count * 16UL;
  #line 194 
  picker = (struct mlxsw_afk_picker *)kzalloc_2(alloc_size,3264U);
  #line 195 
  if (picker == (struct mlxsw_afk_picker *)0) 
                                              #line 196 
                                              return -12;
  #line 211 
  element = (enum mlxsw_afk_element)cif_find_first_bit((unsigned long *)(& elusage->usage),25UL);
  #line 211 
  while (element <= (unsigned int)MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7) {
    #line 212 
    mlxsw_afk_picker_count_hits(mlxsw_afk,picker,element);
    #line 211 
    element = (enum mlxsw_afk_element)cif_find_next_bit((unsigned long *)(& elusage->usage),25UL,
                          (unsigned long)((unsigned int)element + 1U));
  }
  #line 214 
  while (1) {
    {
      #line 215 
      int block_index;
      #line 217 
      block_index = mlxsw_afk_picker_most_hits_get(mlxsw_afk,picker);
      #line 218 
      if (block_index < 0) {
        #line 219 
        err = block_index;
        #line 220 
        goto out;
      }
      #line 222 
      err = mlxsw_afk_picker_key_info_add(mlxsw_afk,picker,block_index,key_info);
      #line 224 
      if (err != 0) 
                    #line 225 
                    goto out;
      #line 226 
      mlxsw_afk_picker_subtract_hits(mlxsw_afk,picker,block_index);
    }
    #line 227 
    if (mlxsw_afk_key_info_elements_eq(key_info,elusage)) 
                                                          #line 214 
                                                          break;
  }
  #line 229 
  err = 0;
  #line 230 
  out: 
       #line 230 
  ;
  #line 231 
  kfree((void *)picker);
  #line 232 
  return err;
}

#line 236  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static struct mlxsw_afk_key_info *mlxsw_afk_key_info_create(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_element_usage *elusage)
{
  #line 239 
  struct mlxsw_afk_key_info *key_info;
  #line 240 
  int err;
  #line 242 
  key_info = (struct mlxsw_afk_key_info *)kzalloc_2(__ab_c_size((unsigned long)mlxsw_afk->max_blocks,8UL,136UL),
                  3264U);
  #line 244 
  if (key_info == (struct mlxsw_afk_key_info *)0) {
    #line 245 
    return (struct mlxsw_afk_key_info *)ERR_PTR_0(-12L);
  }
  #line 246 
  err = mlxsw_afk_picker(mlxsw_afk,key_info,elusage);
  #line 247 
  if (err != 0) 
                #line 248 
                goto err_picker;
  #line 249 
  list_add_0(& key_info->list,& mlxsw_afk->key_info_list);
  #line 250 
  key_info->ref_count = 1U;
  #line 251 
  return key_info;
  #line 253 
  err_picker: 
              #line 253 
  ;
  #line 254 
  kfree((void *)key_info);
  #line 255 
  return (struct mlxsw_afk_key_info *)ERR_PTR_0((long)err);
}

#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static void mlxsw_afk_key_info_destroy(struct mlxsw_afk_key_info *key_info)
{
  #line 260 
  list_del_1(& key_info->list);
  #line 261 
  kfree((void *)key_info);
  #line 262 
  return;
}

#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
struct mlxsw_afk_key_info *mlxsw_afk_key_info_get(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_element_usage *elusage)
{
  #line 268 
  struct mlxsw_afk_key_info *key_info;
  #line 270 
  key_info = mlxsw_afk_key_info_find(mlxsw_afk,elusage);
  #line 271 
  if (key_info != (struct mlxsw_afk_key_info *)0) {
    #line 272 
    (key_info->ref_count) ++;
    #line 273 
    return key_info;
  }
  #line 275 
  return mlxsw_afk_key_info_create(mlxsw_afk,elusage);
}

#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_key_info_put(struct mlxsw_afk_key_info *key_info)
{
  #line 281 
  (key_info->ref_count) --;
  #line 281 
  if (key_info->ref_count != 0U) 
                                 #line 282 
                                 return;
  #line 283 
  mlxsw_afk_key_info_destroy(key_info);
  #line 284 
  return;
}

#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
bool mlxsw_afk_key_info_subset(struct mlxsw_afk_key_info *key_info, struct mlxsw_afk_element_usage *elusage)
{
  #line 290 
  return mlxsw_afk_element_usage_subset(elusage,& key_info->elusage);
}

#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static struct mlxsw_afk_element_inst *mlxsw_afk_block_elinst_get(struct mlxsw_afk_block *block, enum mlxsw_afk_element element)
{
  #line 298 
  int i;
  #line 300 
  i = 0;
  #line 300 
  while (block->instances_count > (unsigned int)i) {
    {
      #line 301 
      struct mlxsw_afk_element_inst *elinst;
      #line 303 
      elinst = block->instances + (unsigned long)i;
      #line 304 
      if ((elinst->info)->element == element) 
                                              #line 305 
                                              return elinst;
    }
    #line 300 
    i ++;
  }
  #line 307 
  return (struct mlxsw_afk_element_inst *)0;
}

#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static struct mlxsw_afk_element_inst *mlxsw_afk_key_info_elinst_get(struct mlxsw_afk_key_info *key_info, enum mlxsw_afk_element element, int *p_block_index)
{
  #line 319 
  int __ret_warn_on;
  #line 325 
  int __ret_warn_on_0;
  #line 315 
  struct mlxsw_afk_element_inst *elinst;
  #line 316 
  struct mlxsw_afk_block *block;
  #line 317 
  int block_index;
  {
    #line 319 
    int tmp_0;
    #line 319 
    if (test_bit((long)element,(unsigned long *)(& key_info->elusage.usage))) 
      #line 319 
      tmp_0 = 0; else 
                      #line 319 
                      tmp_0 = 1;
    #line 319 
    __ret_warn_on = tmp_0;
    #line 319 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 320 
      ldv_inline_asm();
      #line 321 
      ldv_inline_asm();
    }
    }
  #line 319 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 320 
                                                return (struct mlxsw_afk_element_inst *)0;
  #line 321 
  block_index = key_info->element_to_block[(unsigned int)element];
  #line 322 
  block = key_info->blocks[block_index];
  #line 324 
  elinst = mlxsw_afk_block_elinst_get(block,element);
  #line 325 
  __ret_warn_on_0 = elinst == (struct mlxsw_afk_element_inst *)0;
  #line 325 
  if ((long)(__ret_warn_on_0 != 0) != 0L) {
    #line 326 
    ldv_inline_asm();
    #line 327 
    ldv_inline_asm();
  }
  #line 325 
  if ((long)((long)(__ret_warn_on_0 != 0)) != 0L) 
                                                  #line 326 
                                                  return (struct mlxsw_afk_element_inst *)0;
  #line 328 
  *p_block_index = block_index;
  #line 329 
  return elinst;
}

#line 333  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
u16 mlxsw_afk_key_info_block_encoding_get(struct mlxsw_afk_key_info *key_info, int block_index)
{
  #line 336 
  return (key_info->blocks[block_index])->encoding;
}

#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
unsigned int mlxsw_afk_key_info_blocks_count_get(struct mlxsw_afk_key_info *key_info)
{
  #line 343 
  return key_info->blocks_count;
}

#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_values_add_u32(struct mlxsw_afk_element_values *values, enum mlxsw_afk_element element, u32 key_value, u32 mask_value)
{
  #line 357 
  int __ret_warn_on;
  #line 351 
  struct mlxsw_afk_element_info *elinfo = & mlxsw_afk_element_infos[(unsigned int)element];
  #line 353 
  struct mlxsw_item *storage_item = & elinfo->item;
  #line 355 
  if (mask_value == 0U) 
                        #line 356 
                        return;
  #line 357 
  __ret_warn_on = elinfo->type != (unsigned int)MLXSW_AFK_ELEMENT_TYPE_U32;
  #line 357 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 358 
    ldv_inline_asm();
    #line 359 
    ldv_inline_asm();
  }
  #line 357 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 358 
                                                return;
  #line 359 
  __mlxsw_item_set32((char *)(& values->storage.key),storage_item,(unsigned short)0,key_value);
  #line 360 
  __mlxsw_item_set32((char *)(& values->storage.mask),storage_item,(unsigned short)0,mask_value);
  #line 361 
  mlxsw_afk_element_usage_add(& values->elusage,element);
  #line 362 
  return;
}

#line 365  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_values_add_buf(struct mlxsw_afk_element_values *values, enum mlxsw_afk_element element, char *key_value, char *mask_value, unsigned int len)
{
  #line 376 
  int __ret_warn_on;
  #line 370 
  struct mlxsw_afk_element_info *elinfo = & mlxsw_afk_element_infos[(unsigned int)element];
  #line 372 
  struct mlxsw_item *storage_item = & elinfo->item;
  #line 374 
  if (memchr_inv((void *)mask_value,0,(unsigned long)len) == (void *)0) 
    #line 375 
    return;
  #line 376 
  __ret_warn_on = elinfo->type != (unsigned int)MLXSW_AFK_ELEMENT_TYPE_BUF;
  #line 376 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 377 
    ldv_inline_asm();
    #line 378 
    ldv_inline_asm();
  }
  #line 376 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 378 
                                                return;
  else {
    #line 377 
    int __ret_warn_on_0;
    #line 377 
    __ret_warn_on_0 = (unsigned int)elinfo->item.size.bytes != len;
    #line 377 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 378 
      ldv_inline_asm();
      #line 379 
      ldv_inline_asm();
    }
    #line 376 
    if ((long)((long)(__ret_warn_on_0 != 0)) != 0L) 
                                                    #line 378 
                                                    return;
  }
  #line 379 
  __mlxsw_item_memcpy_to((char *)(& values->storage.key),key_value,storage_item,(unsigned short)0);
  #line 381 
  __mlxsw_item_memcpy_to((char *)(& values->storage.mask),mask_value,storage_item,(unsigned short)0);
  #line 383 
  mlxsw_afk_element_usage_add(& values->elusage,element);
  #line 384 
  return;
}

#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static void mlxsw_sp_afk_encode_u32(struct mlxsw_item *storage_item, struct mlxsw_item *output_item, char *storage, char *output, int diff)
{
  #line 391 
  u32 value;
  #line 393 
  value = __mlxsw_item_get32(storage,storage_item,(unsigned short)0);
  #line 394 
  __mlxsw_item_set32(output,output_item,(unsigned short)0,value + (unsigned int)diff);
  #line 395 
  return;
}

#line 397  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static void mlxsw_sp_afk_encode_buf(struct mlxsw_item *storage_item, struct mlxsw_item *output_item, char *storage, char *output)
{
  #line 401 
  char *storage_data = __mlxsw_item_data(storage,storage_item,(unsigned short)0);
  #line 402 
  char *output_data = __mlxsw_item_data(output,output_item,(unsigned short)0);
  #line 403 
  size_t len = (unsigned long)output_item->size.bytes;
  #line 405 
  memcpy((void *)output_data,(void *)storage_data,len);
  #line 406 
  return;
}

#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
static void mlxsw_sp_afk_encode_one(struct mlxsw_afk_element_inst *elinst, char *output, char *storage, int u32_diff)
{
  #line 412 
  struct mlxsw_item *storage_item = & (elinst->info)->item;
  #line 413 
  struct mlxsw_item *output_item = & elinst->item;
  #line 415 
  if (elinst->type == (unsigned int)MLXSW_AFK_ELEMENT_TYPE_U32) 
                                                                #line 416 
                                                                mlxsw_sp_afk_encode_u32(storage_item,output_item,storage,output,u32_diff);
  else 
    #line 418 
    if (elinst->type == (unsigned int)MLXSW_AFK_ELEMENT_TYPE_BUF) 
                                                                  #line 419 
                                                                  mlxsw_sp_afk_encode_buf(storage_item,output_item,storage,output);
  #line 420 
  return;
}

#line 425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_encode(struct mlxsw_afk *mlxsw_afk, struct mlxsw_afk_key_info *key_info, struct mlxsw_afk_element_values *values, char *key, char *mask)
{
  #line 432 
  char block_mask[16U];
  #line 433 
  char block_key[16U];
  #line 434 
  struct mlxsw_afk_element_inst *elinst;
  #line 435 
  enum mlxsw_afk_element element;
  #line 436 
  int block_index;
  #line 436 
  int i;
  #line 430 
  unsigned int blocks_count = mlxsw_afk_key_info_blocks_count_get(key_info);
  #line 438 
  i = 0;
  #line 438 
  while ((unsigned int)i < blocks_count) {
    {
      #line 439 
      memset((void *)(& block_key),0,16UL);
      #line 440 
      memset((void *)(& block_mask),0,16UL);
      #line 442 
      element = (enum mlxsw_afk_element)cif_find_first_bit((unsigned long *)(& values->elusage.usage),25UL);
      #line 442 
      while (element <= (unsigned int)MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7) {
        #line 443 
        elinst = mlxsw_afk_key_info_elinst_get(key_info,element,& block_index);
        #line 446 
        if (elinst == (struct mlxsw_afk_element_inst *)0 || block_index != i) 
          #line 447 
          goto __Cont;
        #line 449 
        mlxsw_sp_afk_encode_one(elinst,(char *)(& block_key),(char *)(& values->storage.key),elinst->u32_key_diff);
        #line 452 
        mlxsw_sp_afk_encode_one(elinst,(char *)(& block_mask),(char *)(& values->storage.mask),0);
        #line 442 
        __Cont: { /* sequence */
                  #line 442 
                  element = (enum mlxsw_afk_element)cif_find_next_bit((unsigned long *)(& values->elusage.usage),25UL,
                          (unsigned long)((unsigned int)element + 1U));
                }
      }
      #line 456 
      (*((mlxsw_afk->ops)->encode_block))(key,i,(char *)(& block_key));
      #line 457 
      (*((mlxsw_afk->ops)->encode_block))(mask,i,(char *)(& block_mask));
    }
    #line 438 
    i ++;
  }
  #line 459 
  return;
}

#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c"
void mlxsw_afk_clear(struct mlxsw_afk *mlxsw_afk, char *key, int block_start, int block_end)
{
  #line 465 
  int i;
  #line 467 
  i = block_start;
  #line 467 
  while (i <= block_end) {
    #line 468 
    (*((mlxsw_afk->ops)->clear_block))(key,i);
    #line 467 
    i ++;
  }
  #line 469 
  return;
}

#line 104  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static unsigned long cif_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 107 
  return ldv_find_next_bit(addr,size,offset);
}

#line 125  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static void INIT_LIST_HEAD_1(struct list_head *list)
{
  #line 128 
  ldv_init_list_head(list);
  #line 129 
  return;
}

#line 146  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static unsigned long cif_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 149 
  return ldv_find_first_bit(addr,size);
}

#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static void *ERR_PTR_0(long error)
{
  #line 198 
  return ldv_err_ptr(error);
}

#line 364  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_acl_flex_keys.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  #line 367 
  return ldv_kzalloc(size,flags);
}

#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 83 
char *strnstr(char *, char *, size_t);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static long PTR_ERR_1(void *ptr);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static bool IS_ERR_1(void *ptr);
#line 26 
#line 692 
static void cif_mutex_lock_lock_of_thermal_zone_device(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 27 
void *ldv_devm_kzalloc(size_t size, gfp_t flags);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 699  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void cif_mutex_unlock_lock_of_thermal_zone_device(struct mutex *lock);
#line 937  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 706  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void *cif_devm_kzalloc(struct device *dev, size_t size, gfp_t flags);
#line 952  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 952 
void devm_kfree(struct device *, void *);
#line 430  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thermal.h"
#line 430 
struct thermal_zone_device *thermal_zone_device_register(char *, int, int, void *, struct thermal_zone_device_ops *, struct thermal_zone_params *, int, int);
#line 433 
#line 433 
void thermal_zone_device_unregister(struct thermal_zone_device *);
#line 435 
#line 435 
int thermal_zone_bind_cooling_device(struct thermal_zone_device *, int, struct thermal_cooling_device *, unsigned long, unsigned long, unsigned int);
#line 439 
#line 439 
int thermal_zone_unbind_cooling_device(struct thermal_zone_device *, int, struct thermal_cooling_device *);
#line 441 
#line 441 
void thermal_zone_device_update(struct thermal_zone_device *, enum thermal_notify_event);
#line 445 
#line 445 
struct thermal_cooling_device *thermal_cooling_device_register(char *, void *, struct thermal_cooling_device_ops *);
#line 455 
#line 455 
void thermal_cooling_device_unregister(struct thermal_cooling_device *);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 470  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags);
#line 8020  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfcr_1 = {.id = (unsigned short)36865U, .len = (unsigned short)8U, .name = (char *)"mfcr"};
#line 8037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfcr_pwm_frequency_item_0 = {.size = {.bits = (unsigned char)7U}, .name = (char *)"reg"};
#line 8037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfcr_pwm_frequency_get_0(char *buf)
{
  #line 8037 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfcr_pwm_frequency_item_0,
                         (unsigned short)0);
}

#line 8045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfcr_tacho_active_item_0 = {.offset = (unsigned short)4U, .shift = (unsigned char)16U, .size = {.bits = (unsigned char)10U}, .name = (char *)"reg"};
#line 8045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfcr_tacho_active_get_0(char *buf)
{
  #line 8045 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfcr_tacho_active_item_0,
                         (unsigned short)0);
}

#line 8053  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfcr_pwm_active_item_0 = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)5U}, .name = (char *)"reg"};
#line 8053  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfcr_pwm_active_get_0(char *buf)
{
  #line 8053 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfcr_pwm_active_item_0,
                         (unsigned short)0);
}

#line 8064  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfcr_unpack_0(char *payload, enum mlxsw_reg_mfcr_pwm_frequency *p_pwm_frequency, u16 *p_tacho_active, u8 *p_pwm_active)
{
  #line 8068 
  *p_pwm_frequency = (enum mlxsw_reg_mfcr_pwm_frequency)mlxsw_reg_mfcr_pwm_frequency_get_0(payload);
  #line 8069 
  *p_tacho_active = (unsigned short)mlxsw_reg_mfcr_tacho_active_get_0(payload);
  #line 8070 
  *p_pwm_active = (unsigned char)mlxsw_reg_mfcr_pwm_active_get_0(payload);
  #line 8071 
  return;
}

#line 8080  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsc_1 = {.id = (unsigned short)36866U, .len = (unsigned short)8U, .name = (char *)"mfsc"};
#line 8086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsc_pwm_item_0 = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)3U}, .name = (char *)"reg"};
#line 8086  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsc_pwm_set_0(char *buf, u32 val)
{
  #line 8086 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsc_pwm_item_0,(unsigned short)0,val);
  #line 8087 
  return;
}

#line 8093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsc_pwm_duty_cycle_item_0 = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 8093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mfsc_pwm_duty_cycle_get_0(char *buf)
{
  #line 8093 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mfsc_pwm_duty_cycle_item_0,
                         (unsigned short)0);
}

#line 8093  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsc_pwm_duty_cycle_set_0(char *buf, u32 val)
{
  #line 8093 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsc_pwm_duty_cycle_item_0,(unsigned short)0,val);
  #line 8094 
  return;
}

#line 8095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsc_pack_0(char *payload, u8 pwm, u8 pwm_duty_cycle)
{
  #line 8098 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mfsc_1.len);
  #line 8099 
  mlxsw_reg_mfsc_pwm_set_0(payload,(unsigned int)pwm);
  #line 8100 
  mlxsw_reg_mfsc_pwm_duty_cycle_set_0(payload,(unsigned int)pwm_duty_cycle);
  #line 8101 
  return;
}

#line 8140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mfsl_0 = {.id = (unsigned short)36868U, .len = (unsigned short)12U, .name = (char *)"mfsl"};
#line 8146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsl_tacho_item = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)4U}, .name = (char *)"reg"};
#line 8146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsl_tacho_set(char *buf, u32 val)
{
  #line 8146 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsl_tacho_item,(unsigned short)0,val);
  #line 8147 
  return;
}

#line 8152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsl_tach_min_item = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsl_tach_min_set(char *buf, u32 val)
{
  #line 8152 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsl_tach_min_item,(unsigned short)0,val);
  #line 8153 
  return;
}

#line 8158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mfsl_tach_max_item = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsl_tach_max_set(char *buf, u32 val)
{
  #line 8158 
  __mlxsw_item_set32(buf,& mlxsw_reg_mfsl_tach_max_item,(unsigned short)0,val);
  #line 8159 
  return;
}

#line 8160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mfsl_pack(char *payload, u8 tacho, u16 tach_min, u16 tach_max)
{
  #line 8163 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mfsl_0.len);
  #line 8164 
  mlxsw_reg_mfsl_tacho_set(payload,(unsigned int)tacho);
  #line 8165 
  mlxsw_reg_mfsl_tach_min_set(payload,(unsigned int)tach_min);
  #line 8166 
  mlxsw_reg_mfsl_tach_max_set(payload,(unsigned int)tach_max);
  #line 8167 
  return;
}

#line 8234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mtmp_2 = {.id = (unsigned short)36874U, .len = (unsigned short)32U, .name = (char *)"mtmp"};
#line 8244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_sensor_index_item_1 = {.size = {.bits = (unsigned char)12U}, .name = (char *)"reg"};
#line 8244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_sensor_index_set_1(char *buf, u32 val)
{
  #line 8244 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_sensor_index_item_1,(unsigned short)0,val);
  #line 8245 
  return;
}

#line 8257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_temperature_item_1 = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtmp_temperature_get_1(char *buf)
{
  #line 8257 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtmp_temperature_item_1,
                         (unsigned short)0);
}

#line 8263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_mte_item_1 = {.offset = (unsigned short)8U, .shift = (unsigned char)31U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_mte_set_1(char *buf, u32 val)
{
  #line 8263 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_mte_item_1,(unsigned short)0,val);
  #line 8264 
  return;
}

#line 8269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_mtr_item_1 = {.offset = (unsigned short)8U, .shift = (unsigned char)30U, .size = {.bits = (unsigned char)1U}, .name = (char *)"reg"};
#line 8269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_mtr_set_1(char *buf, u32 val)
{
  #line 8269 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_mtr_item_1,(unsigned short)0,val);
  #line 8270 
  return;
}

#line 8276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_max_temperature_item_1 = {.offset = (unsigned short)8U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mtmp_max_temperature_get_1(char *buf)
{
  #line 8276 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mtmp_max_temperature_item_1,
                         (unsigned short)0);
}

#line 8293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_temperature_threshold_hi_item_1 = {.offset = (unsigned short)12U, .size = {.bits = (unsigned char)16U}, .name = (char *)"reg"};
#line 8293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_temperature_threshold_hi_set_1(char *buf, u32 val)
{
  #line 8293 
  __mlxsw_item_set32(buf,& mlxsw_reg_mtmp_temperature_threshold_hi_item_1,(unsigned short)0,val);
  #line 8294 
  return;
}

#line 8307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mtmp_sensor_name_item_1 = {.offset = (unsigned short)24U, .size = {.bytes = (unsigned short)8U}, .name = (char *)"reg"};
#line 8307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_sensor_name_memcpy_from_1(char *buf, char *dst)
{
  #line 8307 
  __mlxsw_item_memcpy_from(buf,dst,& mlxsw_reg_mtmp_sensor_name_item_1,(unsigned short)0);
  #line 8308 
  return;
}

#line 8309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_pack_1(char *payload, u16 sensor_index, bool max_temp_enable, bool max_temp_reset)
{
  #line 8313 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mtmp_2.len);
  #line 8314 
  mlxsw_reg_mtmp_sensor_index_set_1(payload,(unsigned int)sensor_index);
  #line 8315 
  mlxsw_reg_mtmp_mte_set_1(payload,(unsigned int)max_temp_enable);
  #line 8316 
  mlxsw_reg_mtmp_mtr_set_1(payload,(unsigned int)max_temp_reset);
  #line 8317 
  mlxsw_reg_mtmp_temperature_threshold_hi_set_1(payload,840U);
  #line 8318 
  return;
}

#line 8321  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mtmp_unpack_1(char *payload, int *p_temp, int *p_max_temp, char *sensor_name)
{
  #line 8324 
  s16 temp;
  #line 8326 
  if (p_temp != (int *)0) {
    #line 8328 
    s16 v_;
    #line 8328 
    int tmp_0;
    #line 8327 
    temp = (short)mlxsw_reg_mtmp_temperature_get_1(payload);
    #line 8328 
    v_ = temp;
    #line 8328 
    if ((int)v_ >= 0) 
                      #line 8328 
                      tmp_0 = (int)v_ * 125; else 
                                                  #line 8328 
                                                  tmp_0 = (int)((short)(((unsigned long)v_ + 65536UL) * (unsigned long)125U));
    #line 8328 
    *p_temp = tmp_0;
  }
  #line 8330 
  if (p_max_temp != (int *)0) {
    #line 8332 
    s16 v__0;
    #line 8332 
    int tmp_3;
    #line 8331 
    temp = (short)mlxsw_reg_mtmp_max_temperature_get_1(payload);
    #line 8332 
    v__0 = temp;
    #line 8332 
    if ((int)v__0 >= 0) 
                        #line 8332 
                        tmp_3 = (int)v__0 * 125; else 
                                                      #line 8332 
                                                      tmp_3 = (int)((short)(((unsigned long)v__0 + 65536UL) * (unsigned long)125U));
    #line 8332 
    *p_max_temp = tmp_3;
  }
  #line 8334 
  if (sensor_name != (char *)0) 
                                #line 8335 
                                mlxsw_reg_mtmp_sensor_name_memcpy_from_1(payload,sensor_name);
  #line 8336 
  return;
}

#line 9572  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_reg_info mlxsw_reg_mgpir_1 = {.id = (unsigned short)37120U, .len = (unsigned short)160U, .name = (char *)"mgpir"};
#line 9582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_device_type_item_0 = {.shift = (unsigned char)24U, .size = {.bits = (unsigned char)4U}, .name = (char *)"reg"};
#line 9582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_device_type_get_0(char *buf)
{
  #line 9582 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_device_type_item_0,
                         (unsigned short)0);
}

#line 9588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_devices_per_flash_item_0 = {.shift = (unsigned char)16U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 9588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_devices_per_flash_get_0(char *buf)
{
  #line 9588 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_devices_per_flash_item_0,
                         (unsigned short)0);
}

#line 9594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_num_of_devices_item_0 = {.size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 9594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_num_of_devices_get_0(char *buf)
{
  #line 9594 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_num_of_devices_item_0,
                         (unsigned short)0);
}

#line 9600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
static struct mlxsw_item mlxsw_reg_mgpir_num_of_modules_item_0 = {.offset = (unsigned short)4U, .size = {.bits = (unsigned char)8U}, .name = (char *)"reg"};
#line 9600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static u32 mlxsw_reg_mgpir_num_of_modules_get_0(char *buf)
{
  #line 9600 
  return __mlxsw_item_get32(buf,& mlxsw_reg_mgpir_num_of_modules_item_0,
                         (unsigned short)0);
}

#line 9602  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgpir_pack_0(char *payload)
{
  #line 9604 
  memset((void *)payload,0,(unsigned long)mlxsw_reg_mgpir_1.len);
  #line 9605 
  return;
}

#line 9608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/reg.h"
__inline static void mlxsw_reg_mgpir_unpack_0(char *payload, u8 *num_of_devices, enum mlxsw_reg_mgpir_device_type *device_type, u8 *devices_per_flash, u8 *num_of_modules)
{
  #line 9612 
  if (num_of_devices != (u8 *)0U) {
    #line 9613 
    *num_of_devices = (unsigned char)mlxsw_reg_mgpir_num_of_devices_get_0(payload);
  }
  #line 9614 
  if (device_type != (enum mlxsw_reg_mgpir_device_type *)MLXSW_REG_MGPIR_DEVICE_TYPE_NONE) {
    #line 9615 
    *device_type = (enum mlxsw_reg_mgpir_device_type)mlxsw_reg_mgpir_device_type_get_0(payload);
  }
  #line 9616 
  if (devices_per_flash != (u8 *)0U) {
    #line 9617 
    *devices_per_flash = (unsigned char)mlxsw_reg_mgpir_devices_per_flash_get_0(payload);
  }
  #line 9619 
  if (num_of_modules != (u8 *)0U) {
    #line 9620 
    *num_of_modules = (unsigned char)mlxsw_reg_mgpir_num_of_modules_get_0(payload);
  }
  #line 9621 
  return;
}

#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static char *mlxsw_thermal_external_allowed_cdev[1U] = {(char *)"mlxreg_fan"};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static struct mlxsw_thermal_trip default_thermal_trips[4U] = {{.temp = 75000, .hyst = 5000, .max_state = 4}, {.temp = 85000, .hyst = 5000, .min_state = 4, .max_state = 10}, {.type = 2, .temp = 105000, .hyst = 5000, .min_state = 10, .max_state = 10}, {.type = 3, .temp = 110000, .min_state = 10, .max_state = 10}};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
__inline static u8 mlxsw_state_to_duty(int state)
{
  #line 124 
  int __x;
  #line 124 
  int __d;
  #line 124 
  int tmp;
  #line 124 
  __x = state * 255;
  #line 124 
  __d = 10;
  #line 124 
  if ((__x <= 0) ^ (__d > 0)) 
                              #line 124 
                              tmp = (__d / 2 + __x) / __d; else 
                                                                #line 124 
                                                                tmp = (__d / -2 + __x) / __d;
  #line 124 
  return (unsigned char)tmp;
}

#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
__inline static int mlxsw_duty_to_state(u8 duty)
{
  #line 130 
  int __x;
  #line 130 
  int __d;
  #line 130 
  int tmp;
  #line 130 
  __x = (int)duty * 10;
  #line 130 
  __d = 255;
  #line 130 
  if ((__x <= 0) ^ (__d > 0)) 
                              #line 130 
                              tmp = (__d / 2 + __x) / __d; else 
                                                                #line 130 
                                                                tmp = (__d / -2 + __x) / __d;
  #line 130 
  return tmp;
}

#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_get_cooling_device_idx(struct mlxsw_thermal *thermal, struct thermal_cooling_device *cdev)
{
  #line 137 
  int i;
  #line 139 
  i = 0;
  #line 139 
  while (i <= 4) {
    #line 140 
    if (thermal->cdevs[i] == cdev) 
                                   #line 141 
                                   return i;
    #line 139 
    i ++;
  }
  #line 144 
  i = 0;
  #line 144 
  while (i == 0) {
    #line 145 
    if (strnstr((char *)(& cdev->type),mlxsw_thermal_external_allowed_cdev[i],
              20UL) != (char *)0) 
      #line 147 
      return 0;
    #line 144 
    i ++;
  }
  #line 150 
  return -19;
}

#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_module_trips_reset(struct mlxsw_thermal_module *tz)
{
  #line 156 
  tz->trips[0].temp = 0;
  #line 157 
  tz->trips[1].temp = 0;
  #line 158 
  tz->trips[2].temp = 0;
  #line 159 
  tz->trips[3].temp = 0;
  #line 160 
  return;
}

#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_trips_update(struct device *dev, struct mlxsw_core *core, struct mlxsw_thermal_module *tz)
{
  #line 166 
  int crit_temp;
  #line 166 
  int emerg_temp;
  #line 167 
  int err;
  #line 169 
  err = mlxsw_env_module_temp_thresholds_get(core,tz->module,4,& crit_temp);
  #line 172 
  if (err != 0) 
                #line 173 
                return err;
  #line 175 
  err = mlxsw_env_module_temp_thresholds_get(core,tz->module,0,& emerg_temp);
  #line 178 
  if (err != 0) 
                #line 179 
                return err;
  #line 188 
  if (crit_temp > 9999) 
                        #line 189 
                        tz->trips[0].temp = crit_temp + -10000; else 
                                                                  #line 192 
                                                                  tz->trips[0].temp = crit_temp;
  #line 193 
  tz->trips[1].temp = crit_temp;
  #line 194 
  tz->trips[2].temp = emerg_temp;
  #line 195 
  if (emerg_temp > crit_temp) 
                              #line 196 
                              tz->trips[3].temp = emerg_temp + 10000; else 
                                                                    #line 199 
                                                                    tz->trips[3].temp = emerg_temp;
  #line 201 
  return 0;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_tz_score_update(struct mlxsw_thermal *thermal, struct thermal_zone_device *tzdev, struct mlxsw_thermal_trip *trips, int temp)
{
  #line 210 
  unsigned int score;
  #line 210 
  unsigned int delta;
  #line 210 
  unsigned int i;
  #line 209 
  struct mlxsw_thermal_trip *trip = trips;
  #line 210 
  unsigned int shift = 1U;
  #line 215 
  score = 4294967295U;
  #line 216 
  i = 0U;
  #line 216 
  while (i <= 3U) {
    #line 218 
    if (trip->temp > temp) {
      #line 219 
      int __x;
      #line 219 
      int __d;
      #line 219 
      int tmp;
      #line 219 
      __x = temp;
      #line 219 
      __d = trip->temp - temp;
      #line 219 
      if ((__x <= 0) ^ (__d > 0)) 
                                  #line 219 
                                  tmp = (__d / 2 + __x) / __d; else 
                                                                    #line 219 
                                                                    tmp = (__d / -2 + __x) / __d;
      #line 219 
      delta = (unsigned int)tmp;
      #line 220 
      score = delta * shift;
      #line 221 
      break;
    }
    #line 223 
    shift *= 256U;
    #line 216 
    i ++;
    #line 217 
    trip ++;
  }
  #line 226 
  if (thermal->tz_highest_score < score) {
    #line 227 
    thermal->tz_highest_score = score;
    #line 228 
    thermal->tz_highest_dev = tzdev;
  }
  #line 230 
  return;
}

#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_bind(struct thermal_zone_device *tzdev, struct thermal_cooling_device *cdev)
{
  #line 237 
  int i;
  #line 237 
  int err;
  #line 235 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 236 
  struct device *dev = (thermal->bus_info)->dev;
  #line 240 
  if (mlxsw_get_cooling_device_idx(thermal,cdev) < 0) 
                                                      #line 241 
                                                      return 0;
  #line 243 
  i = 0;
  #line 243 
  while ((unsigned int)i <= 3U) {
    {
      #line 244 
      struct mlxsw_thermal_trip *trip = & thermal->trips[i];
      #line 246 
      err = thermal_zone_bind_cooling_device(tzdev,i,cdev,(unsigned long)trip->max_state,(unsigned long)trip->min_state,0U);
      #line 250 
      if (err < 0) {
        #line 251 
        _dev_err(dev,(char *)"Failed to bind cooling device to trip %d\n",i);
        #line 252 
        return err;
      }
    }
    #line 243 
    i ++;
  }
  #line 255 
  return 0;
}

#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_unbind(struct thermal_zone_device *tzdev, struct thermal_cooling_device *cdev)
{
  #line 263 
  int i;
  #line 264 
  int err;
  #line 261 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 262 
  struct device *dev = (thermal->bus_info)->dev;
  #line 267 
  if (mlxsw_get_cooling_device_idx(thermal,cdev) < 0) 
                                                      #line 268 
                                                      return 0;
  #line 270 
  i = 0;
  #line 270 
  while ((unsigned int)i <= 3U) {
    #line 271 
    err = thermal_zone_unbind_cooling_device(tzdev,i,cdev);
    #line 272 
    if (err < 0) {
      #line 273 
      _dev_err(dev,(char *)"Failed to unbind cooling device\n");
      #line 274 
      return err;
    }
    #line 270 
    i ++;
  }
  #line 277 
  return 0;
}

#line 280  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_mode(struct thermal_zone_device *tzdev, enum thermal_device_mode *mode)
{
  #line 283 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 285 
  *mode = thermal->mode;
  #line 287 
  return 0;
}

#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_set_mode(struct thermal_zone_device *tzdev, enum thermal_device_mode mode)
{
  #line 293 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 295 
  cif_mutex_lock_lock_of_thermal_zone_device(& tzdev->lock);
  #line 297 
  if (mode == (unsigned int)THERMAL_DEVICE_ENABLED) 
                                                    #line 298 
                                                    tzdev->polling_delay = thermal->polling_delay; else 
                                                                    #line 300 
                                                                    tzdev->polling_delay = 0;
  #line 302 
  cif_mutex_unlock_lock_of_thermal_zone_device(& tzdev->lock);
  #line 304 
  thermal->mode = mode;
  #line 305 
  thermal_zone_device_update(tzdev,(enum thermal_notify_event)THERMAL_EVENT_UNSPECIFIED);
  #line 307 
  return 0;
}

#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_temp(struct thermal_zone_device *tzdev, int *p_temp)
{
  #line 315 
  char mtmp_pl[32U];
  #line 316 
  int temp;
  #line 317 
  int err;
  #line 313 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 314 
  struct device *dev = (thermal->bus_info)->dev;
  #line 319 
  mlxsw_reg_mtmp_pack_1((char *)(& mtmp_pl),(unsigned short)0,(_Bool)0,(_Bool)0);
  #line 321 
  err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mtmp_2,(char *)(& mtmp_pl));
  #line 322 
  if (err != 0) {
    #line 323 
    _dev_err(dev,(char *)"Failed to query temp sensor\n");
    #line 324 
    return err;
  }
  #line 326 
  mlxsw_reg_mtmp_unpack_1((char *)(& mtmp_pl),& temp,(int *)0,(char *)0);
  #line 327 
  if (temp > 0) 
                #line 328 
                mlxsw_thermal_tz_score_update(thermal,tzdev,(struct mlxsw_thermal_trip *)(& thermal->trips),temp);
  #line 331 
  *p_temp = temp;
  #line 332 
  return 0;
}

#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_trip_type(struct thermal_zone_device *tzdev, int trip, enum thermal_trip_type *p_type)
{
  #line 339 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 341 
  if ((unsigned int)trip > 3U) 
                               #line 342 
                               return -22;
  #line 344 
  *p_type = (enum thermal_trip_type)thermal->trips[trip].type;
  #line 345 
  return 0;
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_trip_temp(struct thermal_zone_device *tzdev, int trip, int *p_temp)
{
  #line 351 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 353 
  if ((unsigned int)trip > 3U) 
                               #line 354 
                               return -22;
  #line 356 
  *p_temp = thermal->trips[trip].temp;
  #line 357 
  return 0;
}

#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_set_trip_temp(struct thermal_zone_device *tzdev, int trip, int temp)
{
  #line 363 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 365 
  if ((unsigned int)trip > 3U || temp > 110000) 
                                                #line 367 
                                                return -22;
  #line 369 
  thermal->trips[trip].temp = temp;
  #line 370 
  return 0;
}

#line 373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_trip_hyst(struct thermal_zone_device *tzdev, int trip, int *p_hyst)
{
  #line 376 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 378 
  *p_hyst = thermal->trips[trip].hyst;
  #line 379 
  return 0;
}

#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_set_trip_hyst(struct thermal_zone_device *tzdev, int trip, int hyst)
{
  #line 385 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)tzdev->devdata;
  #line 387 
  thermal->trips[trip].hyst = hyst;
  #line 388 
  return 0;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_trend_get(struct thermal_zone_device *tzdev, int trip, enum thermal_trend *trend)
{
  #line 394 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 395 
  struct mlxsw_thermal *thermal = tz->parent;
  #line 397 
  if ((unsigned int)trip > 3U) 
                               #line 398 
                               return -22;
  #line 400 
  if (thermal->tz_highest_dev == tzdev) 
                                        #line 401 
                                        return 1;
  #line 403 
  *trend = THERMAL_TREND_STABLE;
  #line 404 
  return 0;
}

#line 407  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static struct thermal_zone_device_ops mlxsw_thermal_ops = {.bind = & mlxsw_thermal_bind, .unbind = & mlxsw_thermal_unbind, .get_temp = & mlxsw_thermal_get_temp, .get_mode = & mlxsw_thermal_get_mode, .set_mode = & mlxsw_thermal_set_mode, .get_trip_type = & mlxsw_thermal_get_trip_type, .get_trip_temp = & mlxsw_thermal_get_trip_temp, .set_trip_temp = & mlxsw_thermal_set_trip_temp, .get_trip_hyst = & mlxsw_thermal_get_trip_hyst, .set_trip_hyst = & mlxsw_thermal_set_trip_hyst, .get_trend = & mlxsw_thermal_trend_get};
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_bind(struct thermal_zone_device *tzdev, struct thermal_cooling_device *cdev)
{
  #line 426 
  int i;
  #line 426 
  int j;
  #line 426 
  int err;
  #line 424 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 425 
  struct mlxsw_thermal *thermal = tz->parent;
  #line 429 
  if (mlxsw_get_cooling_device_idx(thermal,cdev) < 0) 
                                                      #line 430 
                                                      return 0;
  #line 432 
  i = 0;
  #line 432 
  while ((unsigned int)i <= 3U) {
    {
      #line 433 
      struct mlxsw_thermal_trip *trip = & tz->trips[i];
      #line 435 
      err = thermal_zone_bind_cooling_device(tzdev,i,cdev,(unsigned long)trip->max_state,(unsigned long)trip->min_state,0U);
      #line 439 
      if (err < 0) 
                   #line 440 
                   goto err_bind_cooling_device;
    }
    #line 432 
    i ++;
  }
  #line 442 
  return 0;
  #line 444 
  err_bind_cooling_device: 
                           #line 444 
  ;
  #line 445 
  j = i + -1;
  #line 445 
  while (j >= 0) {
    #line 446 
    thermal_zone_unbind_cooling_device(tzdev,j,cdev);
    #line 445 
    j --;
  }
  #line 447 
  return err;
}

#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_unbind(struct thermal_zone_device *tzdev, struct thermal_cooling_device *cdev)
{
  #line 455 
  int i;
  #line 456 
  int err;
  #line 453 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 454 
  struct mlxsw_thermal *thermal = tz->parent;
  #line 459 
  if (mlxsw_get_cooling_device_idx(thermal,cdev) < 0) 
                                                      #line 460 
                                                      return 0;
  #line 462 
  i = 0;
  #line 462 
  while ((unsigned int)i <= 3U) {
    #line 463 
    err = thermal_zone_unbind_cooling_device(tzdev,i,cdev);
    {
      #line 464 
      int __ret_warn_on = err != 0;
      #line 464 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 465 
        ldv_inline_asm();
        #line 466 
        ldv_inline_asm();
      }
      #line 464 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 462 
    i ++;
  }
  #line 466 
  return err;
}

#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_mode_get(struct thermal_zone_device *tzdev, enum thermal_device_mode *mode)
{
  #line 472 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 474 
  *mode = tz->mode;
  #line 476 
  return 0;
}

#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_mode_set(struct thermal_zone_device *tzdev, enum thermal_device_mode mode)
{
  #line 482 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 483 
  struct mlxsw_thermal *thermal = tz->parent;
  #line 485 
  cif_mutex_lock_lock_of_thermal_zone_device(& tzdev->lock);
  #line 487 
  if (mode == (unsigned int)THERMAL_DEVICE_ENABLED) 
                                                    #line 488 
                                                    tzdev->polling_delay = thermal->polling_delay; else 
                                                                    #line 490 
                                                                    tzdev->polling_delay = 0;
  #line 492 
  cif_mutex_unlock_lock_of_thermal_zone_device(& tzdev->lock);
  #line 494 
  tz->mode = mode;
  #line 495 
  thermal_zone_device_update(tzdev,(enum thermal_notify_event)THERMAL_EVENT_UNSPECIFIED);
  #line 497 
  return 0;
}

#line 500  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_temp_get(struct thermal_zone_device *tzdev, int *p_temp)
{
  #line 506 
  char mtmp_pl[32U];
  #line 507 
  int temp;
  #line 508 
  int err;
  #line 503 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 504 
  struct mlxsw_thermal *thermal = tz->parent;
  #line 505 
  struct device *dev = (thermal->bus_info)->dev;
  #line 511 
  mlxsw_reg_mtmp_pack_1((char *)(& mtmp_pl),(unsigned short)((int)((unsigned int)((unsigned short)tz->module) + 64U)),(_Bool)0,(_Bool)0);
  #line 513 
  err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mtmp_2,(char *)(& mtmp_pl));
  #line 514 
  if (err != 0) {
    #line 518 
    temp = 0;
    #line 519 
    *p_temp = temp;
    #line 520 
    return 0;
  }
  #line 522 
  mlxsw_reg_mtmp_unpack_1((char *)(& mtmp_pl),& temp,(int *)0,(char *)0);
  #line 523 
  *p_temp = temp;
  #line 525 
  if (temp == 0) 
                 #line 526 
                 return 0;
  #line 529 
  err = mlxsw_thermal_module_trips_update(dev,thermal->core,tz);
  #line 530 
  if (err == 0 && temp > 0) 
                            #line 531 
                            mlxsw_thermal_tz_score_update(thermal,tzdev,(struct mlxsw_thermal_trip *)(& tz->trips),temp);
  #line 533 
  return 0;
}

#line 537  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_trip_type_get(struct thermal_zone_device *tzdev, int trip, enum thermal_trip_type *p_type)
{
  #line 540 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 542 
  if ((unsigned int)trip > 3U) 
                               #line 543 
                               return -22;
  #line 545 
  *p_type = (enum thermal_trip_type)tz->trips[trip].type;
  #line 546 
  return 0;
}

#line 550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_trip_temp_get(struct thermal_zone_device *tzdev, int trip, int *p_temp)
{
  #line 553 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 555 
  if ((unsigned int)trip > 3U) 
                               #line 556 
                               return -22;
  #line 558 
  *p_temp = tz->trips[trip].temp;
  #line 559 
  return 0;
}

#line 563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_trip_temp_set(struct thermal_zone_device *tzdev, int trip, int temp)
{
  #line 566 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 568 
  if ((unsigned int)trip > 3U || tz->trips[3].temp < temp) 
                                                           #line 570 
                                                           return -22;
  #line 572 
  tz->trips[trip].temp = temp;
  #line 573 
  return 0;
}

#line 577  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_trip_hyst_get(struct thermal_zone_device *tzdev, int trip, int *p_hyst)
{
  #line 580 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 582 
  *p_hyst = tz->trips[trip].hyst;
  #line 583 
  return 0;
}

#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_trip_hyst_set(struct thermal_zone_device *tzdev, int trip, int hyst)
{
  #line 590 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 592 
  tz->trips[trip].hyst = hyst;
  #line 593 
  return 0;
}

#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static struct thermal_zone_device_ops mlxsw_thermal_module_ops = {.bind = & mlxsw_thermal_module_bind, .unbind = & mlxsw_thermal_module_unbind, .get_temp = & mlxsw_thermal_module_temp_get, .get_mode = & mlxsw_thermal_module_mode_get, .set_mode = & mlxsw_thermal_module_mode_set, .get_trip_type = & mlxsw_thermal_module_trip_type_get, .get_trip_temp = & mlxsw_thermal_module_trip_temp_get, .set_trip_temp = & mlxsw_thermal_module_trip_temp_set, .get_trip_hyst = & mlxsw_thermal_module_trip_hyst_get, .set_trip_hyst = & mlxsw_thermal_module_trip_hyst_set, .get_trend = & mlxsw_thermal_trend_get};
#line 610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_gearbox_temp_get(struct thermal_zone_device *tzdev, int *p_temp)
{
  #line 615 
  char mtmp_pl[32U];
  #line 616 
  u16 index;
  #line 617 
  int temp;
  #line 618 
  int err;
  #line 613 
  struct mlxsw_thermal_module *tz = (struct mlxsw_thermal_module *)tzdev->devdata;
  #line 614 
  struct mlxsw_thermal *thermal = tz->parent;
  #line 620 
  index = (unsigned short)((unsigned int)((unsigned short)tz->module) + 256U);
  #line 621 
  mlxsw_reg_mtmp_pack_1((char *)(& mtmp_pl),(unsigned short)((int)index),(_Bool)0,(_Bool)0);
  #line 623 
  err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mtmp_2,(char *)(& mtmp_pl));
  #line 624 
  if (err != 0) 
                #line 625 
                return err;
  #line 627 
  mlxsw_reg_mtmp_unpack_1((char *)(& mtmp_pl),& temp,(int *)0,(char *)0);
  #line 628 
  if (temp > 0) 
                #line 629 
                mlxsw_thermal_tz_score_update(thermal,tzdev,(struct mlxsw_thermal_trip *)(& tz->trips),temp);
  #line 631 
  *p_temp = temp;
  #line 632 
  return 0;
}

#line 635  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static struct thermal_zone_device_ops mlxsw_thermal_gearbox_ops = {.bind = & mlxsw_thermal_module_bind, .unbind = & mlxsw_thermal_module_unbind, .get_temp = & mlxsw_thermal_gearbox_temp_get, .get_mode = & mlxsw_thermal_module_mode_get, .set_mode = & mlxsw_thermal_module_mode_set, .get_trip_type = & mlxsw_thermal_module_trip_type_get, .get_trip_temp = & mlxsw_thermal_module_trip_temp_get, .set_trip_temp = & mlxsw_thermal_module_trip_temp_set, .get_trip_hyst = & mlxsw_thermal_module_trip_hyst_get, .set_trip_hyst = & mlxsw_thermal_module_trip_hyst_set, .get_trend = & mlxsw_thermal_trend_get};
#line 649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_max_state(struct thermal_cooling_device *cdev, unsigned long *p_state)
{
  #line 652 
  *p_state = 10UL;
  #line 653 
  return 0;
}

#line 656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_get_cur_state(struct thermal_cooling_device *cdev, unsigned long *p_state)
{
  #line 662 
  char mfsc_pl[8U];
  #line 663 
  int err;
  #line 663 
  int idx;
  #line 664 
  u8 duty;
  #line 660 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)cdev->devdata;
  #line 661 
  struct device *dev = (thermal->bus_info)->dev;
  #line 666 
  idx = mlxsw_get_cooling_device_idx(thermal,cdev);
  #line 667 
  if (idx < 0) 
               #line 668 
               return idx;
  #line 670 
  mlxsw_reg_mfsc_pack_0((char *)(& mfsc_pl),(unsigned char)((int)((unsigned char)idx)),(unsigned char)0);
  #line 671 
  err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mfsc_1,(char *)(& mfsc_pl));
  #line 672 
  if (err != 0) {
    #line 673 
    _dev_err(dev,(char *)"Failed to query PWM duty\n");
    #line 674 
    return err;
  }
  #line 677 
  duty = (unsigned char)mlxsw_reg_mfsc_pwm_duty_cycle_get_0((char *)(& mfsc_pl));
  #line 678 
  *p_state = (unsigned long)mlxsw_duty_to_state((unsigned char)((int)duty));
  #line 679 
  return 0;
}

#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_set_cur_state(struct thermal_cooling_device *cdev, unsigned long state)
{
  #line 688 
  char mfsc_pl[8U];
  #line 689 
  unsigned long cur_state;
  #line 689 
  unsigned long i;
  #line 690 
  int idx;
  #line 691 
  u8 duty;
  #line 692 
  int err;
  #line 686 
  struct mlxsw_thermal *thermal = (struct mlxsw_thermal *)cdev->devdata;
  #line 687 
  struct device *dev = (thermal->bus_info)->dev;
  #line 694 
  idx = mlxsw_get_cooling_device_idx(thermal,cdev);
  #line 695 
  if (idx < 0) 
               #line 696 
               return idx;
  #line 706 
  if (state + 18446744073709551604UL <= 8UL) {
    #line 708 
    state += 18446744073709551606UL;
    #line 709 
    i = 0UL;
    #line 709 
    while (i <= 10UL) {
      #line 710 
      unsigned long __UNIQUE_ID___x450;
      #line 710 
      unsigned long tmp;
      {
        #line 710 
        __UNIQUE_ID___x450 = state;
        #line 710 
        unsigned long __UNIQUE_ID___y451 = i;
        #line 710 
        if (__UNIQUE_ID___x450 > __UNIQUE_ID___y451) 
                                                     #line 710 
                                                     tmp = __UNIQUE_ID___x450; else 
                                                                    #line 710 
                                                                    tmp = __UNIQUE_ID___y451;
        }
      #line 710 
      thermal->cooling_levels[i] = (unsigned char)tmp;
      #line 709 
      i ++;
    }
    #line 712 
    mlxsw_reg_mfsc_pack_0((char *)(& mfsc_pl),(unsigned char)((int)((unsigned char)idx)),(unsigned char)0);
    #line 713 
    err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mfsc_1,(char *)(& mfsc_pl));
    #line 714 
    if (err != 0) 
                  #line 715 
                  return err;
    #line 717 
    duty = (unsigned char)mlxsw_reg_mfsc_pwm_duty_cycle_get_0((char *)(& mfsc_pl));
    #line 718 
    cur_state = (unsigned long)mlxsw_duty_to_state((unsigned char)((int)duty));
    #line 723 
    if (state < cur_state) 
                           #line 724 
                           return 0;
    #line 726 
    state = cur_state;
  }
  #line 729 
  if (state > 10UL) 
                    #line 730 
                    return -22;
  #line 733 
  state = (unsigned long)thermal->cooling_levels[state];
  #line 734 
  ;
  #line 734 
  mlxsw_reg_mfsc_pack_0((char *)(& mfsc_pl),(unsigned char)((int)((unsigned char)idx)),(unsigned char)((int)mlxsw_state_to_duty((int)state)));
  #line 735 
  err = mlxsw_reg_write(thermal->core,& mlxsw_reg_mfsc_1,(char *)(& mfsc_pl));
  #line 736 
  if (err != 0) {
    #line 737 
    _dev_err(dev,(char *)"Failed to write PWM duty\n");
    #line 738 
    return err;
  }
  #line 740 
  return 0;
}

#line 743  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static struct thermal_cooling_device_ops mlxsw_cooling_ops = {.get_max_state = & mlxsw_thermal_get_max_state, .get_cur_state = & mlxsw_thermal_get_cur_state, .set_cur_state = & mlxsw_thermal_set_cur_state};
#line 750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_tz_init(struct mlxsw_thermal_module *module_tz)
{
  #line 752 
  char tz_name[16U];
  #line 753 
  int err;
  #line 755 
  snprintf((char *)(& tz_name),16UL,(char *)"mlxsw-module%d",module_tz->module + 1);
  #line 757 
  module_tz->tzdev = thermal_zone_device_register((char *)(& tz_name),4,15,(void *)module_tz,& mlxsw_thermal_module_ops,(struct thermal_zone_params *)0,0,0);
  #line 763 
  if ((int)IS_ERR_1((void *)module_tz->tzdev) != 0) {
    #line 764 
    err = (int)PTR_ERR_1((void *)module_tz->tzdev);
    #line 765 
    return err;
  }
  #line 768 
  module_tz->mode = THERMAL_DEVICE_ENABLED;
  #line 769 
  return 0;
}

#line 772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_module_tz_fini(struct thermal_zone_device *tzdev)
{
  #line 774 
  thermal_zone_device_unregister(tzdev);
  #line 775 
  return;
}

#line 778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_module_init(struct device *dev, struct mlxsw_core *core, struct mlxsw_thermal *thermal, u8 module)
{
  #line 781 
  struct mlxsw_thermal_module *module_tz;
  #line 783 
  module_tz = thermal->tz_module_arr + (unsigned long)module;
  #line 785 
  if (module_tz->parent != (struct mlxsw_thermal *)0) 
                                                      #line 786 
                                                      return 0;
  #line 787 
  module_tz->module = (int)module;
  #line 788 
  module_tz->parent = thermal;
  #line 789 
  memcpy((void *)(& module_tz->trips),(void *)(& default_thermal_trips),80UL);
  #line 792 
  mlxsw_thermal_module_trips_reset(module_tz);
  #line 794 
  return mlxsw_thermal_module_trips_update(dev,core,module_tz);
}

#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_module_fini(struct mlxsw_thermal_module *module_tz)
{
  #line 799 
  if (module_tz != (struct mlxsw_thermal_module *)0 && module_tz->tzdev != (struct thermal_zone_device *)0) {
    #line 800 
    mlxsw_thermal_module_tz_fini(module_tz->tzdev);
    #line 801 
    module_tz->tzdev = (struct thermal_zone_device *)0;
    #line 802 
    module_tz->parent = (struct mlxsw_thermal *)0;
  }
  #line 804 
  return;
}

#line 807  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_modules_init(struct device *dev, struct mlxsw_core *core, struct mlxsw_thermal *thermal)
{
  #line 810 
  struct mlxsw_thermal_module *module_tz;
  #line 811 
  char mgpir_pl[160U];
  #line 812 
  int i;
  #line 812 
  int err;
  #line 814 
  if (! mlxsw_core_res_query_enabled(core)) 
                                            #line 815 
                                            return 0;
  #line 817 
  mlxsw_reg_mgpir_pack_0((char *)(& mgpir_pl));
  #line 818 
  err = mlxsw_reg_query(core,& mlxsw_reg_mgpir_1,(char *)(& mgpir_pl));
  #line 819 
  if (err != 0) 
                #line 820 
                return err;
  #line 822 
  mlxsw_reg_mgpir_unpack_0((char *)(& mgpir_pl),(u8 *)0U,(enum mlxsw_reg_mgpir_device_type *)MLXSW_REG_MGPIR_DEVICE_TYPE_NONE,(u8 *)0U,& thermal->tz_module_num);
  #line 825 
  thermal->tz_module_arr = (struct mlxsw_thermal_module *)kcalloc_0((unsigned long)thermal->tz_module_num,104UL,3264U);
  #line 828 
  if (thermal->tz_module_arr == (struct mlxsw_thermal_module *)0) 
                                                                  #line 829 
                                                                  return -12;
  #line 831 
  i = 0;
  #line 831 
  while ((int)thermal->tz_module_num > i) {
    #line 832 
    err = mlxsw_thermal_module_init(dev,core,thermal,(unsigned char)((int)((unsigned char)i)));
    #line 833 
    if (err != 0) 
                  #line 834 
                  goto err_unreg_tz_module_arr;
    #line 831 
    i ++;
  }
  #line 837 
  i = 0;
  #line 837 
  while ((int)thermal->tz_module_num > i) {
    #line 838 
    module_tz = thermal->tz_module_arr + (unsigned long)i;
    #line 839 
    if (module_tz->parent == (struct mlxsw_thermal *)0) 
                                                        #line 840 
                                                        goto __Cont;
    #line 841 
    err = mlxsw_thermal_module_tz_init(module_tz);
    #line 842 
    if (err != 0) 
                  #line 843 
                  goto err_unreg_tz_module_arr;
    #line 837 
    __Cont: 
            #line 837 
    i ++;
  }
  #line 846 
  return 0;
  #line 848 
  err_unreg_tz_module_arr: 
                           #line 848 
  ;
  #line 849 
  i = (int)thermal->tz_module_num + -1;
  #line 849 
  while (i >= 0) {
    #line 850 
    mlxsw_thermal_module_fini(thermal->tz_module_arr + (unsigned long)i);
    #line 849 
    i --;
  }
  #line 851 
  kfree((void *)thermal->tz_module_arr);
  #line 852 
  return err;
}

#line 856  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_modules_fini(struct mlxsw_thermal *thermal)
{
  #line 858 
  int i;
  #line 860 
  if (! mlxsw_core_res_query_enabled(thermal->core)) 
                                                     #line 861 
                                                     return;
  #line 863 
  i = (int)thermal->tz_module_num + -1;
  #line 863 
  while (i >= 0) {
    #line 864 
    mlxsw_thermal_module_fini(thermal->tz_module_arr + (unsigned long)i);
    #line 863 
    i --;
  }
  #line 865 
  kfree((void *)thermal->tz_module_arr);
  #line 866 
  return;
}

#line 869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_gearbox_tz_init(struct mlxsw_thermal_module *gearbox_tz)
{
  #line 871 
  char tz_name[16U];
  #line 873 
  snprintf((char *)(& tz_name),16UL,(char *)"mlxsw-gearbox%d",gearbox_tz->module + 1);
  #line 875 
  gearbox_tz->tzdev = thermal_zone_device_register((char *)(& tz_name),4,15,(void *)gearbox_tz,& mlxsw_thermal_gearbox_ops,(struct thermal_zone_params *)0,0,0);
  #line 881 
  if ((int)IS_ERR_1((void *)gearbox_tz->tzdev) != 0) {
    #line 882 
    return (int)PTR_ERR_1((void *)gearbox_tz->tzdev);
  }
  #line 884 
  gearbox_tz->mode = THERMAL_DEVICE_ENABLED;
  #line 885 
  return 0;
}

#line 889  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_gearbox_tz_fini(struct mlxsw_thermal_module *gearbox_tz)
{
  #line 891 
  thermal_zone_device_unregister(gearbox_tz->tzdev);
  #line 892 
  return;
}

#line 895  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static int mlxsw_thermal_gearboxes_init(struct device *dev, struct mlxsw_core *core, struct mlxsw_thermal *thermal)
{
  #line 898 
  struct mlxsw_thermal_module *gearbox_tz;
  #line 899 
  char mgpir_pl[160U];
  #line 900 
  int i;
  #line 901 
  int err;
  #line 903 
  if (! mlxsw_core_res_query_enabled(core)) 
                                            #line 904 
                                            return 0;
  #line 906 
  mlxsw_reg_mgpir_pack_0((char *)(& mgpir_pl));
  #line 907 
  err = mlxsw_reg_query(core,& mlxsw_reg_mgpir_1,(char *)(& mgpir_pl));
  #line 908 
  if (err != 0) 
                #line 909 
                return err;
  #line 911 
  mlxsw_reg_mgpir_unpack_0((char *)(& mgpir_pl),& thermal->tz_gearbox_num,(enum mlxsw_reg_mgpir_device_type *)MLXSW_REG_MGPIR_DEVICE_TYPE_NONE,(u8 *)0U,(u8 *)0U);
  #line 913 
  if ((unsigned int)thermal->tz_gearbox_num == 0U) 
                                                   #line 914 
                                                   return 0;
  #line 916 
  thermal->tz_gearbox_arr = (struct mlxsw_thermal_module *)kcalloc_0((unsigned long)thermal->tz_gearbox_num,104UL,3264U);
  #line 919 
  if (thermal->tz_gearbox_arr == (struct mlxsw_thermal_module *)0) 
                                                                   #line 920 
                                                                   return -12;
  #line 922 
  i = 0;
  #line 922 
  while ((int)thermal->tz_gearbox_num > i) {
    #line 923 
    gearbox_tz = thermal->tz_gearbox_arr + (unsigned long)i;
    #line 924 
    memcpy((void *)(& gearbox_tz->trips),(void *)(& default_thermal_trips),80UL);
    #line 926 
    gearbox_tz->module = i;
    #line 927 
    gearbox_tz->parent = thermal;
    #line 928 
    err = mlxsw_thermal_gearbox_tz_init(gearbox_tz);
    #line 929 
    if (err != 0) 
                  #line 930 
                  goto err_unreg_tz_gearbox;
    #line 922 
    i ++;
  }
  #line 933 
  return 0;
  #line 935 
  err_unreg_tz_gearbox: 
                        #line 935 
  ;
  #line 936 
  i --;
  #line 936 
  while (i >= 0) {
    #line 937 
    mlxsw_thermal_gearbox_tz_fini(thermal->tz_gearbox_arr + (unsigned long)i);
    #line 936 
    i --;
  }
  #line 938 
  kfree((void *)thermal->tz_gearbox_arr);
  #line 939 
  return err;
}

#line 943  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
static void mlxsw_thermal_gearboxes_fini(struct mlxsw_thermal *thermal)
{
  #line 945 
  int i;
  #line 947 
  if (! mlxsw_core_res_query_enabled(thermal->core)) 
                                                     #line 948 
                                                     return;
  #line 950 
  i = (int)thermal->tz_gearbox_num + -1;
  #line 950 
  while (i >= 0) {
    #line 951 
    mlxsw_thermal_gearbox_tz_fini(thermal->tz_gearbox_arr + (unsigned long)i);
    #line 950 
    i --;
  }
  #line 952 
  kfree((void *)thermal->tz_gearbox_arr);
  #line 953 
  return;
}

#line 955  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
int mlxsw_thermal_init(struct mlxsw_core *core, struct mlxsw_bus_info *bus_info, struct mlxsw_thermal **p_thermal)
{
  #line 960 
  enum mlxsw_reg_mfcr_pwm_frequency freq;
  #line 962 
  struct mlxsw_thermal *thermal;
  #line 963 
  u16 tacho_active;
  #line 964 
  u8 pwm_active;
  #line 965 
  int err;
  #line 965 
  int i;
  #line 959 
  char mfcr_pl[8U] = {(char)0};
  #line 961 
  struct device *dev = bus_info->dev;
  #line 967 
  thermal = (struct mlxsw_thermal *)cif_devm_kzalloc(dev,208UL,3264U);
  #line 969 
  if (thermal == (struct mlxsw_thermal *)0) 
                                            #line 970 
                                            return -12;
  #line 972 
  thermal->core = core;
  #line 973 
  thermal->bus_info = bus_info;
  #line 974 
  memcpy((void *)(& thermal->trips),(void *)(& default_thermal_trips),80UL);
  #line 976 
  err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mfcr_1,(char *)(& mfcr_pl));
  #line 977 
  if (err != 0) {
    #line 978 
    _dev_err(dev,(char *)"Failed to probe PWMs\n");
    #line 979 
    goto err_free_thermal;
  }
  #line 981 
  mlxsw_reg_mfcr_unpack_0((char *)(& mfcr_pl),& freq,& tacho_active,& pwm_active);
  #line 983 
  i = 0;
  #line 983 
  while (i <= 9) {
    #line 984 
    if ((((unsigned long)tacho_active >> i) & 1UL) != 0UL) {
      #line 985 
      char mfsl_pl[12U];
      #line 987 
      mlxsw_reg_mfsl_pack((char *)(& mfsl_pl),(unsigned char)((int)((unsigned char)i)),(unsigned short)0,(unsigned short)0);
      #line 990 
      err = mlxsw_reg_query(thermal->core,& mlxsw_reg_mfsl_0,(char *)(& mfsl_pl));
      #line 992 
      if (err != 0) 
                    #line 993 
                    goto err_free_thermal;
      #line 996 
      mlxsw_reg_mfsl_tach_min_set((char *)(& mfsl_pl),0U);
      #line 997 
      err = mlxsw_reg_write(thermal->core,& mlxsw_reg_mfsl_0,(char *)(& mfsl_pl));
      #line 999 
      if (err != 0) 
                    #line 1000 
                    goto err_free_thermal;
    }
    #line 983 
    i ++;
  }
  #line 1003 
  i = 0;
  #line 1003 
  while (i <= 4) {
    #line 1004 
    if ((((unsigned long)pwm_active >> i) & 1UL) != 0UL) {
      #line 1005 
      struct thermal_cooling_device *cdev;
      #line 1007 
      cdev = thermal_cooling_device_register((char *)"mlxsw_fan",(void *)thermal,& mlxsw_cooling_ops);
      #line 1010 
      if ((int)IS_ERR_1((void *)cdev) != 0) {
        #line 1011 
        err = (int)PTR_ERR_1((void *)cdev);
        #line 1012 
        _dev_err(dev,(char *)"Failed to register cooling device\n");
        #line 1013 
        goto err_unreg_cdevs;
      }
      #line 1015 
      thermal->cdevs[i] = cdev;
    }
    #line 1003 
    i ++;
  }
  #line 1020 
  i = 0;
  #line 1020 
  while (i <= 9) {
    #line 1021 
    int __UNIQUE_ID___x452;
    #line 1021 
    int tmp_2;
    {
      #line 1021 
      __UNIQUE_ID___x452 = 2;
      #line 1021 
      int __UNIQUE_ID___y453 = i;
      #line 1021 
      if (__UNIQUE_ID___x452 > __UNIQUE_ID___y453) 
                                                   #line 1021 
                                                   tmp_2 = __UNIQUE_ID___x452; else 
                                                                    #line 1021 
                                                                    tmp_2 = __UNIQUE_ID___y453;
      }
    #line 1021 
    thermal->cooling_levels[i] = (unsigned char)tmp_2;
    #line 1020 
    i ++;
  }
  #line 1024 
  if ((unsigned int)bus_info->low_frequency != 0U) 
                                                   #line 1024 
                                                   thermal->polling_delay = 20000; else 
                                                                    #line 1024 
                                                                    thermal->polling_delay = 1000;
  #line 1028 
  thermal->tzdev = thermal_zone_device_register((char *)"mlxsw",4,15,(void *)thermal,& mlxsw_thermal_ops,(struct thermal_zone_params *)0,0,thermal->polling_delay);
  #line 1035 
  if ((int)IS_ERR_1((void *)thermal->tzdev) != 0) {
    #line 1036 
    err = (int)PTR_ERR_1((void *)thermal->tzdev);
    #line 1037 
    _dev_err(dev,(char *)"Failed to register thermal zone\n");
    #line 1038 
    goto err_unreg_cdevs;
  }
  #line 1041 
  err = mlxsw_thermal_modules_init(dev,core,thermal);
  #line 1042 
  if (err != 0) 
                #line 1043 
                goto err_unreg_tzdev;
  #line 1045 
  err = mlxsw_thermal_gearboxes_init(dev,core,thermal);
  #line 1046 
  if (err != 0) 
                #line 1047 
                goto err_unreg_modules_tzdev;
  #line 1049 
  thermal->mode = THERMAL_DEVICE_ENABLED;
  #line 1050 
  *p_thermal = thermal;
  #line 1051 
  return 0;
  #line 1053 
  err_unreg_modules_tzdev: 
                           #line 1053 
  ;
  #line 1054 
  mlxsw_thermal_modules_fini(thermal);
  #line 1055 
  err_unreg_tzdev: 
                   #line 1055 
  ;
  #line 1056 
  if (thermal->tzdev != (struct thermal_zone_device *)0) {
    #line 1057 
    thermal_zone_device_unregister(thermal->tzdev);
    #line 1058 
    thermal->tzdev = (struct thermal_zone_device *)0;
  }
  #line 1060 
  err_unreg_cdevs: 
                   #line 1060 
  ;
  #line 1061 
  i = 0;
  #line 1061 
  while (i <= 4) {
    #line 1062 
    if (thermal->cdevs[i] != (struct thermal_cooling_device *)0) 
                                                                 #line 1063 
                                                                 thermal_cooling_device_unregister(thermal->cdevs[i]);
    #line 1061 
    i ++;
  }
  #line 1064 
  err_free_thermal: 
                    #line 1064 
  ;
  #line 1065 
  devm_kfree(dev,(void *)thermal);
  #line 1066 
  return err;
}

#line 1069  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/ethernet/mellanox/mlxsw/core_thermal.c"
void mlxsw_thermal_fini(struct mlxsw_thermal *thermal)
{
  #line 1071 
  int i;
  #line 1073 
  mlxsw_thermal_gearboxes_fini(thermal);
  #line 1074 
  mlxsw_thermal_modules_fini(thermal);
  #line 1075 
  if (thermal->tzdev != (struct thermal_zone_device *)0) {
    #line 1076 
    thermal_zone_device_unregister(thermal->tzdev);
    #line 1077 
    thermal->tzdev = (struct thermal_zone_device *)0;
  }
  #line 1080 
  i = 0;
  #line 1080 
  while (i <= 4) {
    #line 1081 
    if (thermal->cdevs[i] != (struct thermal_cooling_device *)0) {
      #line 1082 
      thermal_cooling_device_unregister(thermal->cdevs[i]);
      #line 1083 
      thermal->cdevs[i] = (struct thermal_cooling_device *)0;
    }
    #line 1080 
    i ++;
  }
  #line 1087 
  devm_kfree((thermal->bus_info)->dev,(void *)thermal);
  #line 1088 
  return;
}

#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static long PTR_ERR_1(void *ptr)
{
  #line 205 
  return ldv_ptr_err(ptr);
}

#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static bool IS_ERR_1(void *ptr)
{
  #line 212 
  return ldv_is_err(ptr);
}

#line 470  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags)
{
  #line 473 
  return ldv_kcalloc(n,size,flags);
}

#line 692  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void cif_mutex_lock_lock_of_thermal_zone_device(struct mutex *lock)
{
  #line 695 
  ldv_mutex_model_lock(lock,(char *)"lock_of_thermal_zone_device");
  #line 696 
  return;
}

#line 699  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void cif_mutex_unlock_lock_of_thermal_zone_device(struct mutex *lock)
{
  #line 702 
  ldv_mutex_model_unlock(lock,(char *)"lock_of_thermal_zone_device");
  #line 703 
  return;
}

#line 706  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/0/concurrency safety/weaver/core_thermal.i.aux"
static void *cif_devm_kzalloc(struct device *dev, size_t size, gfp_t flags)
{
  #line 709 
  return ldv_devm_kzalloc(size,flags);
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 16  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/emg/0/environment_model.c"
#line 90 
void *emg_entry_point_insmod(void *arg0);
#line 19 
#line 119 
int main(void);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  #line 26 
  struct delayed_work *emg_2_delayed_work;
  #line 27 
  struct work_struct *emg_2_emg_param_0_0;
  #line 29 
  if (ldv_undef_int() != 0) {
    #line 31 
    emg_2_delayed_work = arg1;
    #line 35 
    emg_2_emg_param_0_0 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    #line 35 
    emg_2_emg_param_0_0 = emg_2_emg_param_0_0;
    #line 39 
    if (emg_2_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      #line 40 
      (*(emg_2_delayed_work->work.func))(emg_2_emg_param_0_0);
    #line 45 
    ldv_free((void *)emg_2_emg_param_0_0);
    #line 49 
    return (_Bool)1;
  }
  else 
       #line 53 
       return (_Bool)0;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  #line 64 
  struct work_struct *emg_3_work_struct;
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    emg_3_work_struct = arg1;
    #line 72 
    if (emg_3_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 73 
      (*(emg_3_work_struct->func))(emg_3_work_struct);
    #line 78 
    return (_Bool)1;
  }
  else 
       #line 82 
       return (_Bool)0;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 93 
  int emg_1_ret;
  #line 96 
  emg_1_ret = emg_mlxsw_core_module_init();
  #line 97 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 100 
  if (ldv_undef_int() != 0) {
    #line 102 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 106 
    emg_mlxsw_core_module_exit();
  }
  else 
       #line 110 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 114 
  return (void *)0;
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/ethernet/mellanox/mlxsw/mlxsw_core.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 121 
  ldv_initialize();
  #line 123 
  emg_entry_point_insmod((void *)0);
  #line 125 
  return 0;
}

