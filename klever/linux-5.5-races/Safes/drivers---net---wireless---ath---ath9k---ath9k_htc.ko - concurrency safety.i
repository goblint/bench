/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __le64;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s8 int8_t;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s16 int16_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_112 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_112 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/highuid.h"
struct user_namespace;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_113 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_113 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_114 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_114 kgid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct __anonstruct_nodemask_t_115 {
   unsigned long bits[16U] ;
};
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct __anonstruct_nodemask_t_115 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_128 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_129 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_127 {
   struct __anonstruct_128 __anonCompField___anonunion_127_28 ;
   struct __anonstruct_129 __anonCompField___anonunion_127_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_127 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_130 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_130 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_133 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   struct list_head slab_list ;
   struct __anonstruct_136 __anonCompField___anonunion_135_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_137 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_138 __anonCompField___anonunion_137_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   union __anonunion_135 __anonCompField___anonstruct_134_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_137 __anonCompField___anonstruct_134_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_140 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_142 __anonCompField___anonstruct_141_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_143 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_131 {
   struct __anonstruct_132 __anonCompField___anonunion_131_31 ;
   struct __anonstruct_133 __anonCompField___anonunion_131_32 ;
   struct __anonstruct_134 __anonCompField___anonunion_131_37 ;
   struct __anonstruct_139 __anonCompField___anonunion_131_38 ;
   struct __anonstruct_140 __anonCompField___anonunion_131_39 ;
   struct __anonstruct_141 __anonCompField___anonunion_131_41 ;
   struct __anonstruct_143 __anonCompField___anonunion_131_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_144 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_131 __anonCompField_page_43 ;
   union __anonunion_144 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_145 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_145 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_146 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_146 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 823 
struct ctl_table_root;
#line 824 
struct ctl_table_header;
#line 825 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_237 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_47 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_236 __anonCompField_ctl_table_header_48 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct cred;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 322 
struct dentry;
#line 323 
struct iattr;
#line 324 
struct super_block;
#line 325 
struct poll_table_struct;
#line 326 
struct fs_context;
#line 328 
struct kernfs_open_node;
#line 329 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_256 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_256 __anonCompField_kernfs_node_51 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 247 
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_259 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_259 __anonCompField_kernel_param_52 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct exception_table_entry;
#line 45 
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_267 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_267 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef unsigned long kernel_ulong_t;
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_307 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_307 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_308 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_309 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_310 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_311 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_314 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_315 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_313 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_314 _addr_bnd ;
   struct __anonstruct__addr_pkey_315 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_312 {
   void *_addr ;
   union __anonunion_313 __anonCompField___anonstruct__sigfault_312_53 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_316 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_317 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_308 _kill ;
   struct __anonstruct__timer_309 _timer ;
   struct __anonstruct__rt_310 _rt ;
   struct __anonstruct__sigchld_311 _sigchld ;
   struct __anonstruct__sigfault_312 _sigfault ;
   struct __anonstruct__sigpoll_316 _sigpoll ;
   struct __anonstruct__sigsys_317 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_322 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_322 __anonCompField_kernel_siginfo_56 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_327 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_327 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct perf_event_context;
#line 157 
struct pipe_inode_info;
#line 159 
struct reclaim_state;
#line 160 
struct robust_list_head;
#line 165 
struct sighand_struct;
#line 166 
struct task_delay_info;
#line 167 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_329 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_329 __anonCompField_task_struct_58 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct proc_dir_entry;
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_349 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_348 {
   struct __anonstruct_349 __anonCompField___anonunion_348_59 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_348 __anonCompField_lockref_60 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_351 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_350 {
   struct __anonstruct_351 __anonCompField___anonunion_350_61 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_350 __anonCompField_qstr_62 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_352 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_353 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_352 __anonCompField_dentry_63 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_353 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_360 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_361 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_360 __anonCompField_io_cq_64 ;
   union __anonunion_361 __anonCompField_io_cq_65 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bdi_writeback;
#line 287 
struct bio;
#line 288 
struct export_operations;
#line 289 
struct hd_geometry;
#line 290 
struct iovec;
#line 291 
struct kiocb;
#line 292 
struct kstatfs;
#line 293 
struct swap_info_struct;
#line 294 
struct iov_iter;
#line 295 
struct fscrypt_info;
#line 296 
struct fscrypt_operations;
#line 297 
struct fsverity_info;
#line 298 
struct fsverity_operations;
#line 299 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_362 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_362 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_363 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_363 __anonCompField_kqid_66 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
struct writeback_control;
#line 539 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_365 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_364 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_365 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_364 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_368 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_369 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_370 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_371 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_368 __anonCompField_inode_67 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_369 __anonCompField_inode_68 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_370 __anonCompField_inode_69 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_371 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_372 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_372 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_374 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_373 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_374 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_373 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct scatterlist;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 100 
struct percpu_ref;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 1565 
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_460 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_462 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_461 {
   unsigned long nr_segs ;
   struct __anonstruct_462 __anonCompField___anonunion_461_72 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_460 __anonCompField_iov_iter_71 ;
   union __anonunion_461 __anonCompField_iov_iter_73 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_10519 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_10519 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_481 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_481 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_482 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_482 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_493 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_494 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_495 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_496 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_493 ports ;
   struct __anonstruct_icmpt_494 icmpt ;
   struct __anonstruct_dnports_495 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_496 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_497 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_497 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_504 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_503 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_504 __anonCompField___anonstruct_503_88 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_502 {
   struct __anonstruct_503 __anonCompField___anonunion_502_89 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_505 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_506 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_508 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_507 {
   struct __anonstruct_508 __anonCompField___anonunion_507_93 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_510 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_509 {
   __wsum csum ;
   struct __anonstruct_510 __anonCompField___anonunion_509_95 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_511 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_512 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_513 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_502 __anonCompField_sk_buff_90 ;
   union __anonunion_505 __anonCompField_sk_buff_91 ;
   union __anonunion_506 __anonCompField_sk_buff_92 ;
   char cb[48U] ;
   union __anonunion_507 __anonCompField_sk_buff_94 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_509 __anonCompField_sk_buff_96 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_511 __anonCompField_sk_buff_97 ;
   __u32 secmark ;
   union __anonunion_512 __anonCompField_sk_buff_98 ;
   union __anonunion_513 __anonCompField_sk_buff_99 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_543 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_543 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_544 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_544 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_545 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_545 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_546 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_546 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_547 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_547 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_548 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_548 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_549 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_549 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_550 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_550 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_551 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_552 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_551 ifr_ifrn ;
   union __anonunion_ifr_ifru_552 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_571 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_571 __anonCompField_ethtool_rxnfc_102 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_574 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_574 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 422 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_575 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_575 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_576 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_576 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_577 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_577 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_578 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_578 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_580 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_580 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_593 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_592 {
   struct __anonstruct_593 __anonCompField___anonunion_592_103 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_592 __anonCompField_keyring_index_key_104 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_594 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_597 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_596 {
   struct keyring_index_key index_key ;
   struct __anonstruct_597 __anonCompField___anonunion_596_107 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_599 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_598 {
   union key_payload payload ;
   struct __anonstruct_599 __anonCompField___anonunion_598_109 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_594 __anonCompField_key_105 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_595 __anonCompField_key_106 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_596 __anonCompField_key_108 ;
   union __anonunion_598 __anonCompField_key_110 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_602 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_602 __anonCompField_cred_111 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_603 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_603 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_605 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_604 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_605 __anonCompField___anonunion_604_112 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_604 __anonCompField_uid_gid_map_113 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_607 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_609 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_609 __anonCompField___anonstruct_608_116 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_610 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_612 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_613 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_615 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_614 {
   union __anonunion_615 __anonCompField___anonstruct_614_121 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_616 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_617 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_618 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_619 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_620 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_607 __anonCompField_bpf_attr_115 ;
   struct __anonstruct_608 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_610 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_611 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_612 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_test_613 test ;
   struct __anonstruct_614 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_info_616 info ;
   struct __anonstruct_query_617 query ;
   struct __anonstruct_raw_tracepoint_618 raw_tracepoint ;
   struct __anonstruct_619 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_task_fd_query_620 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_647 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_647 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_649 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_648 {
   struct __anonstruct_tail_call_649 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_648 __anonCompField_bpf_jit_poke_descriptor_148 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_650 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_650 __anonCompField_bpf_prog_aux_149 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_652 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_652 __anonCompField_bpf_cgroup_storage_151 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_654 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_653 {
   struct __anonstruct_654 __anonCompField___anonunion_653_152 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_653 __anonCompField_sock_cgroup_data_153 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_677 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_677 __anonCompField_netlink_callback_154 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_682 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_683 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_684 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_685 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_681 {
   struct __anonstruct_682 __anonCompField___anonunion_681_156 ;
   struct __anonstruct_683 __anonCompField___anonunion_681_157 ;
   struct __anonstruct_684 __anonCompField___anonunion_681_158 ;
   struct __anonstruct_xsk_685 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_681 __anonCompField_netdev_bpf_159 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_686 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_687 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_686 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   int reg_state : 8 ;
   bool dismantle ;
   int rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_687 __anonCompField_net_device_160 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
struct led_pattern;
#line 535 
enum led_brightness {
    LED_OFF = 0,
    LED_ON = 1,
    LED_HALF = 127,
    LED_FULL = 255
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_classdev {
   char *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   unsigned long work_flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_blocking)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   int (*pattern_set)(struct led_classdev *, struct led_pattern *, u32 , int ) ;
   int (*pattern_clear)(struct led_classdev *) ;
   struct device *dev ;
   struct attribute_group **groups ;
   struct list_head node ;
   char *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   int new_blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   int brightness_hw_changed ;
   struct kernfs_node *brightness_hw_changed_kn ;
   struct mutex led_access ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger {
   char *name ;
   int (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
   struct attribute_group **groups ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_pattern {
   u32 delta_t ;
   int brightness ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
} __attribute__((__packed__));
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
} __attribute__((__packed__));
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_auth_699 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_deauth_700 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_701 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_702 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_703 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_704 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_disassoc_705 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_beacon_706 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_req_707 {
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_708 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_wme_action_711 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_712 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_713 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_measurement_714 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_req_715 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_716 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_delba_717 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_self_prot_718 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_719 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_sa_query_720 {
   u8 action ;
   u8 trans_id[2U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_721 {
   u8 action ;
   u8 smps_control ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_722 {
   u8 action_code ;
   u8 chanwidth ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_723 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_724 {
   u8 action_code ;
   u8 operating_mode ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_group_notif_725 {
   u8 action_code ;
   u8 membership[8U] ;
   u8 position[16U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_726 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ftm_727 {
   u8 action_code ;
   u8 dialog_token ;
   u8 follow_up ;
   u8 tod[6U] ;
   u8 toa[6U] ;
   __le16 tod_error ;
   __le16 toa_error ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_710 {
   struct __anonstruct_wme_action_711 wme_action ;
   struct __anonstruct_chan_switch_712 chan_switch ;
   struct __anonstruct_ext_chan_switch_713 ext_chan_switch ;
   struct __anonstruct_measurement_714 measurement ;
   struct __anonstruct_addba_req_715 addba_req ;
   struct __anonstruct_addba_resp_716 addba_resp ;
   struct __anonstruct_delba_717 delba ;
   struct __anonstruct_self_prot_718 self_prot ;
   struct __anonstruct_mesh_action_719 mesh_action ;
   struct __anonstruct_sa_query_720 sa_query ;
   struct __anonstruct_ht_smps_721 ht_smps ;
   struct __anonstruct_ht_notify_cw_722 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_723 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_724 vht_opmode_notif ;
   struct __anonstruct_vht_group_notif_725 vht_group_notif ;
   struct __anonstruct_tpc_report_726 tpc_report ;
   struct __anonstruct_ftm_727 ftm ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_action_709 {
   u8 category ;
   union __anonunion_u_710 u ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_698 {
   struct __anonstruct_auth_699 auth ;
   struct __anonstruct_deauth_700 deauth ;
   struct __anonstruct_assoc_req_701 assoc_req ;
   struct __anonstruct_assoc_resp_702 assoc_resp ;
   struct __anonstruct_reassoc_resp_703 reassoc_resp ;
   struct __anonstruct_reassoc_req_704 reassoc_req ;
   struct __anonstruct_disassoc_705 disassoc ;
   struct __anonstruct_beacon_706 beacon ;
   struct __anonstruct_probe_req_707 probe_req ;
   struct __anonstruct_probe_resp_708 probe_resp ;
   struct __anonstruct_action_709 action ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_698 u ;
} __attribute__((__packed__, __aligned__(2)));
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_740 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_740 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312 
struct nla_policy;
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_742 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_742 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_743 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_743 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_751 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_750 {
   void *validation_data ;
   struct __anonstruct_751 __anonCompField___anonunion_750_163 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_750 __anonCompField_nla_policy_164 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_825 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_826 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_824 {
   struct __anonstruct_825 __anonCompField___anonunion_824_166 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_826 __anonCompField___anonunion_824_167 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_824 __anonCompField_tcf_result_168 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_828 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_828 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_841 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_841 __anonCompField_bdi_writeback_170 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_842 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_842 __anonCompField_bio_171 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_845 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_846 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_848 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_849 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_847 {
   struct __anonstruct_elv_848 elv ;
   struct __anonstruct_flush_849 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_850 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_845 __anonCompField_request_172 ;
   union __anonunion_846 __anonCompField_request_173 ;
   union __anonunion_847 __anonCompField_request_174 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_850 __anonCompField_request_175 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_866 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_866 __anonCompField_bpf_prog_176 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_888 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_888 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_890 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_889 {
   __addrpair skc_addrpair ;
   struct __anonstruct_890 __anonCompField___anonunion_889_178 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_891 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_893 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_892 {
   __portpair skc_portpair ;
   struct __anonstruct_893 __anonCompField___anonunion_892_181 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_894 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_895 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_896 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_897 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_898 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_889 __anonCompField_sock_common_179 ;
   union __anonunion_891 __anonCompField_sock_common_180 ;
   union __anonunion_892 __anonCompField_sock_common_182 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_894 __anonCompField_sock_common_183 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_895 __anonCompField_sock_common_184 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_896 __anonCompField_sock_common_185 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_897 __anonCompField_sock_common_186 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_898 __anonCompField_sock_common_187 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_899 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_900 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_901 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_899 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_900 __anonCompField_sock_188 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_901 __anonCompField_sock_189 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_936 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_936 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 267 
struct ieee80211_vif;
#line 440 
struct ieee80211_sta;
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1012 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1011 {
   struct __anonstruct_1012 __anonCompField___anonunion_1011_192 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_1010 {
   union __anonunion_1011 __anonCompField___anonstruct_control_1010_193 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_1013 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_1014 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1015 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1009 {
   struct __anonstruct_control_1010 control ;
   struct __anonstruct_ack_1013 ack ;
   struct __anonstruct_status_1014 status ;
   struct __anonstruct_1015 __anonCompField___anonunion_1009_194 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_1009 __anonCompField_ieee80211_tx_info_195 ;
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1023 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1023 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1024 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1024 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_ani {
   bool caldone ;
   unsigned int longcal_timer ;
   unsigned int shortcal_timer ;
   unsigned int resetcal_timer ;
   unsigned int checkani_timer ;
   struct timer_list timer ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_cycle_counters {
   u32 cycles ;
   u32 rx_busy ;
   u32 rx_frame ;
   u32 tx_frame ;
};
#line 51 
enum ath_device_state {
    ATH_HW_UNAVAILABLE = 0,
    ATH_HW_INITIALIZED = 1
};
#line 67 
enum ath_bus_type {
    ATH_PCI = 0,
    ATH_AHB = 1,
    ATH_USB = 2
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct reg_dmn_pair_mapping {
   u16 reg_domain ;
   u16 reg_5ghz_ctl ;
   u16 reg_2ghz_ctl ;
};
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_regulatory {
   char alpha2[2U] ;
   enum nl80211_dfs_regions region ;
   u16 country_code ;
   u16 max_power_level ;
   u16 current_rd ;
   int16_t power_limit ;
   struct reg_dmn_pair_mapping *regpair ;
};
#line 89 
enum ath_crypt_caps {
    ATH_CRYPT_CAP_CIPHER_AESCCM = 1,
    ATH_CRYPT_CAP_MIC_COMBINED = 2
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_ops {
   unsigned int (*read)(void *, u32 ) ;
   void (*multi_read)(void *, u32 *, u32 *, u16 ) ;
   void (*write)(void *, u32 , u32 ) ;
   void (*enable_write_buffer)(void *) ;
   void (*write_flush)(void *) ;
   u32 (*rmw)(void *, u32 , u32 , u32 ) ;
   void (*enable_rmw_buffer)(void *) ;
   void (*rmw_flush)(void *) ;
};
#line 135 
struct ath_common;
#line 136 
struct ath_bus_ops;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_ps_ops {
   void (*wakeup)(struct ath_common *) ;
   void (*restore)(struct ath_common *) ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
struct ath_common {
   void *ah ;
   void *priv ;
   struct ieee80211_hw *hw ;
   int debug_mask ;
   enum ath_device_state state ;
   unsigned long op_flags ;
   struct ath_ani ani ;
   u16 cachelsz ;
   u16 curaid ;
   u8 macaddr[6U] ;
   u8 curbssid[6U] ;
   u8 bssidmask[6U] ;
   u32 rx_bufsize ;
   u32 keymax ;
   unsigned long keymap[2U] ;
   unsigned long tkip_keymap[2U] ;
   unsigned long ccmp_keymap[2U] ;
   enum ath_crypt_caps crypt_caps ;
   unsigned int clockrate ;
   spinlock_t cc_lock ;
   struct ath_cycle_counters cc_ani ;
   struct ath_cycle_counters cc_survey ;
   struct ath_regulatory regulatory ;
   struct ath_regulatory reg_world_copy ;
   struct ath_ops *ops ;
   struct ath_bus_ops *bus_ops ;
   struct ath_ps_ops *ps_ops ;
   bool btcoex_enabled ;
   bool disable_ani ;
   bool bt_ant_diversity ;
   int last_rssi ;
   struct ieee80211_supported_band sbands[4U] ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
struct ath_tx_status {
   u32 ts_tstamp ;
   u16 ts_seqnum ;
   u8 ts_status ;
   u8 ts_rateindex ;
   int8_t ts_rssi ;
   u8 ts_shortretry ;
   u8 ts_longretry ;
   u8 ts_virtcol ;
   u8 ts_flags ;
   int8_t ts_rssi_ctl0 ;
   int8_t ts_rssi_ctl1 ;
   int8_t ts_rssi_ctl2 ;
   int8_t ts_rssi_ext0 ;
   int8_t ts_rssi_ext1 ;
   int8_t ts_rssi_ext2 ;
   u8 qid ;
   u16 desc_id ;
   u8 tid ;
   u32 ba_low ;
   u32 ba_high ;
   u32 evm0 ;
   u32 evm1 ;
   u32 evm2 ;
   u32 duration ;
};
#line 313 
enum ath9k_tx_queue {
    ATH9K_TX_QUEUE_INACTIVE = 0,
    ATH9K_TX_QUEUE_DATA = 1,
    ATH9K_TX_QUEUE_BEACON = 2,
    ATH9K_TX_QUEUE_CAB = 3,
    ATH9K_TX_QUEUE_UAPSD = 4,
    ATH9K_TX_QUEUE_PSPOLL = 5
};
#line 322 
enum ath9k_tx_queue_flags {
    TXQ_FLAG_TXINT_ENABLE = 1,
    TXQ_FLAG_TXDESCINT_ENABLE = 2,
    TXQ_FLAG_TXEOLINT_ENABLE = 4,
    TXQ_FLAG_TXURNINT_ENABLE = 8,
    TXQ_FLAG_BACKOFF_DISABLE = 16,
    TXQ_FLAG_COMPRESSION_ENABLE = 32,
    TXQ_FLAG_RDYTIME_EXP_POLICY_ENABLE = 64,
    TXQ_FLAG_FRAG_BURST_BACKOFF_ENABLE = 128
};
#line 333 
enum ath9k_pkt_type {
    ATH9K_PKT_TYPE_NORMAL = 0,
    ATH9K_PKT_TYPE_ATIM = 1,
    ATH9K_PKT_TYPE_PSPOLL = 2,
    ATH9K_PKT_TYPE_BEACON = 3,
    ATH9K_PKT_TYPE_PROBE_RESP = 4,
    ATH9K_PKT_TYPE_CHIRP = 5,
    ATH9K_PKT_TYPE_GRP_POLL = 6
};
#line 619  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
struct ath9k_tx_queue_info {
   u32 tqi_ver ;
   enum ath9k_tx_queue tqi_type ;
   int tqi_subtype ;
   enum ath9k_tx_queue_flags tqi_qflags ;
   u32 tqi_priority ;
   u32 tqi_aifs ;
   u32 tqi_cwmin ;
   u32 tqi_cwmax ;
   u16 tqi_shretry ;
   u16 tqi_lgretry ;
   u32 tqi_cbrPeriod ;
   u32 tqi_cbrOverflowLimit ;
   u32 tqi_burstTime ;
   u32 tqi_readyTime ;
   u32 tqi_physCompBuf ;
   u32 tqi_intFlags ;
};
#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
struct ath9k_11n_rate_series {
   u32 Tries ;
   u32 Rate ;
   u32 PktDuration ;
   u32 ChSel ;
   u32 RateFlags ;
};
#line 670 
enum aggr_type {
    AGGR_BUF_NONE = 0,
    AGGR_BUF_FIRST = 1,
    AGGR_BUF_MIDDLE = 2,
    AGGR_BUF_LAST = 3
};
#line 677 
enum ath9k_key_type {
    ATH9K_KEY_TYPE_CLEAR = 0,
    ATH9K_KEY_TYPE_WEP = 1,
    ATH9K_KEY_TYPE_AES = 2,
    ATH9K_KEY_TYPE_TKIP = 3
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
struct ath_tx_info {
   u8 qcu ;
   bool is_first ;
   bool is_last ;
   enum aggr_type aggr ;
   u8 ndelim ;
   u16 aggr_len ;
   dma_addr_t link ;
   int pkt_len ;
   u32 flags ;
   dma_addr_t buf_addr[4U] ;
   int buf_len[4U] ;
   struct ath9k_11n_rate_series rates[4U] ;
   u8 rtscts_rate ;
   bool dur_update ;
   enum ath9k_pkt_type type ;
   enum ath9k_key_type keytype ;
   u8 keyix ;
   u8 txpower[4U] ;
};
#line 711 
struct ath_hw;
#line 712 
struct ath9k_channel;
#line 713 
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 752 
enum ath9k_ani_cmd {
    ATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION = 1,
    ATH9K_ANI_FIRSTEP_LEVEL = 2,
    ATH9K_ANI_SPUR_IMMUNITY_LEVEL = 4,
    ATH9K_ANI_MRC_CCK = 8,
    ATH9K_ANI_ALL = 4095
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ani.h"
struct ath9k_mib_stats {
   u32 ackrcv_bad ;
   u32 rts_bad ;
   u32 rts_good ;
   u32 fcs_bad ;
   u32 beacons ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ani.h"
struct ath9k_ani_default {
   u16 m1ThreshLow ;
   u16 m2ThreshLow ;
   u16 m1Thresh ;
   u16 m2Thresh ;
   u16 m2CountThr ;
   u16 m2CountThrLow ;
   u16 m1ThreshLowExt ;
   u16 m2ThreshLowExt ;
   u16 m1ThreshExt ;
   u16 m2ThreshExt ;
   u16 firstep ;
   u16 firstepLow ;
   u16 cycpwrThr1 ;
   u16 cycpwrThr1Ext ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ani.h"
struct ar5416AniState {
   u8 noiseImmunityLevel ;
   u8 ofdmNoiseImmunityLevel ;
   u8 cckNoiseImmunityLevel ;
   bool ofdmsTurn ;
   u8 mrcCCK ;
   u8 spurImmunityLevel ;
   u8 firstepLevel ;
   bool ofdmWeakSigDetect ;
   u32 listenTime ;
   u32 ofdmPhyErrCount ;
   u32 cckPhyErrCount ;
   struct ath9k_ani_default iniDef ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ani.h"
struct ar5416Stats {
   u32 ast_ani_spurup ;
   u32 ast_ani_spurdown ;
   u32 ast_ani_ofdmon ;
   u32 ast_ani_ofdmoff ;
   u32 ast_ani_cckhigh ;
   u32 ast_ani_ccklow ;
   u32 ast_ani_stepup ;
   u32 ast_ani_stepdown ;
   u32 ast_ani_ofdmerrs ;
   u32 ast_ani_cckerrs ;
   u32 ast_ani_reset ;
   u32 ast_ani_lneg_or_lzero ;
   u32 avgbrssi ;
   struct ath9k_mib_stats ast_mibstats ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct eepFlags {
   u8 opFlags ;
   u8 eepMisc ;
} __attribute__((__packed__));
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct ar9300_base_eep_hdr {
   __le16 regDmn[2U] ;
   u8 txrxMask ;
   struct eepFlags opCapFlags ;
   u8 rfSilent ;
   u8 blueToothOptions ;
   u8 deviceCap ;
   u8 deviceType ;
   int8_t pwrTableOffset ;
   u8 params_for_tuning_caps[2U] ;
   u8 featureEnable ;
   u8 miscConfiguration ;
   u8 eepromWriteEnableGpio ;
   u8 wlanDisableGpio ;
   u8 wlanLedGpio ;
   u8 rxBandSelectGpio ;
   u8 txrxgain ;
   __le32 swreg ;
} __attribute__((__packed__));
#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct ar9300_modal_eep_header {
   __le32 antCtrlCommon ;
   __le32 antCtrlCommon2 ;
   __le16 antCtrlChain[3U] ;
   u8 xatten1DB[3U] ;
   u8 xatten1Margin[3U] ;
   int8_t tempSlope ;
   int8_t voltSlope ;
   u8 spurChans[5U] ;
   int8_t noiseFloorThreshCh[3U] ;
   u8 reserved[11U] ;
   int8_t quick_drop ;
   u8 xpaBiasLvl ;
   u8 txFrameToDataStart ;
   u8 txFrameToPaOn ;
   u8 txClip ;
   int8_t antennaGain ;
   u8 switchSettling ;
   int8_t adcDesiredSize ;
   u8 txEndToXpaOff ;
   u8 txEndToRxOn ;
   u8 txFrameToXpaOn ;
   u8 thresh62 ;
   __le32 papdRateMaskHt20 ;
   __le32 papdRateMaskHt40 ;
   __le16 switchcomspdt ;
   u8 xlna_bias_strength ;
   u8 futureModal[7U] ;
} __attribute__((__packed__));
#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct ar9300_cal_data_per_freq_op_loop {
   int8_t refPower ;
   u8 voltMeas ;
   u8 tempMeas ;
   int8_t rxNoisefloorCal ;
   int8_t rxNoisefloorPower ;
   u8 rxTempMeas ;
} __attribute__((__packed__));
#line 269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct cal_tgt_pow_legacy {
   u8 tPow2x[4U] ;
} __attribute__((__packed__));
#line 273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct cal_tgt_pow_ht {
   u8 tPow2x[14U] ;
} __attribute__((__packed__));
#line 277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct cal_ctl_data_2g {
   u8 ctlEdges[4U] ;
} __attribute__((__packed__));
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct cal_ctl_data_5g {
   u8 ctlEdges[8U] ;
} __attribute__((__packed__));
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct ar9300_BaseExtension_1 {
   u8 ant_div_control ;
   u8 future[2U] ;
   u8 misc_enable ;
   int8_t tempslopextension[8U] ;
   int8_t quick_drop_low ;
   int8_t quick_drop_high ;
} __attribute__((__packed__));
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct ar9300_BaseExtension_2 {
   int8_t tempSlopeLow ;
   int8_t tempSlopeHigh ;
   u8 xatten1DBLow[3U] ;
   u8 xatten1MarginLow[3U] ;
   u8 xatten1DBHigh[3U] ;
   u8 xatten1MarginHigh[3U] ;
} __attribute__((__packed__));
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/ar9003_eeprom.h"
struct ar9300_eeprom {
   u8 eepromVersion ;
   u8 templateVersion ;
   u8 macAddr[6U] ;
   u8 custData[20U] ;
   struct ar9300_base_eep_hdr baseEepHeader ;
   struct ar9300_modal_eep_header modalHeader2G ;
   struct ar9300_BaseExtension_1 base_ext1 ;
   u8 calFreqPier2G[3U] ;
   struct ar9300_cal_data_per_freq_op_loop calPierData2G[3U][3U] ;
   u8 calTarget_freqbin_Cck[2U] ;
   u8 calTarget_freqbin_2G[3U] ;
   u8 calTarget_freqbin_2GHT20[3U] ;
   u8 calTarget_freqbin_2GHT40[3U] ;
   struct cal_tgt_pow_legacy calTargetPowerCck[2U] ;
   struct cal_tgt_pow_legacy calTargetPower2G[3U] ;
   struct cal_tgt_pow_ht calTargetPower2GHT20[3U] ;
   struct cal_tgt_pow_ht calTargetPower2GHT40[3U] ;
   u8 ctlIndex_2G[12U] ;
   u8 ctl_freqbin_2G[12U][4U] ;
   struct cal_ctl_data_2g ctlPowerData_2G[12U] ;
   struct ar9300_modal_eep_header modalHeader5G ;
   struct ar9300_BaseExtension_2 base_ext2 ;
   u8 calFreqPier5G[8U] ;
   struct ar9300_cal_data_per_freq_op_loop calPierData5G[3U][8U] ;
   u8 calTarget_freqbin_5G[8U] ;
   u8 calTarget_freqbin_5GHT20[8U] ;
   u8 calTarget_freqbin_5GHT40[8U] ;
   struct cal_tgt_pow_legacy calTargetPower5G[8U] ;
   struct cal_tgt_pow_ht calTargetPower5GHT20[8U] ;
   struct cal_tgt_pow_ht calTargetPower5GHT40[8U] ;
   u8 ctlIndex_5G[9U] ;
   u8 ctl_freqbin_5G[9U][8U] ;
   struct cal_ctl_data_5g ctlPowerData_5G[9U] ;
} __attribute__((__packed__));
#line 371 
enum eeprom_param {
    EEP_NFTHRESH_5 = 0,
    EEP_NFTHRESH_2 = 1,
    EEP_MAC_MSW = 2,
    EEP_MAC_MID = 3,
    EEP_MAC_LSW = 4,
    EEP_REG_0 = 5,
    EEP_OP_CAP = 6,
    EEP_OP_MODE = 7,
    EEP_RF_SILENT = 8,
    EEP_OB_5 = 9,
    EEP_DB_5 = 10,
    EEP_OB_2 = 11,
    EEP_DB_2 = 12,
    EEP_TX_MASK = 13,
    EEP_RX_MASK = 14,
    EEP_FSTCLK_5G = 15,
    EEP_RXGAIN_TYPE = 16,
    EEP_OL_PWRCTRL = 17,
    EEP_TXGAIN_TYPE = 18,
    EEP_RC_CHAIN_MASK = 19,
    EEP_DAC_HPWR_5G = 20,
    EEP_FRAC_N_5G = 21,
    EEP_DEV_TYPE = 22,
    EEP_TEMPSENSE_SLOPE = 23,
    EEP_TEMPSENSE_SLOPE_PAL_ON = 24,
    EEP_PWR_TABLE_OFFSET = 25,
    EEP_PAPRD = 26,
    EEP_MODAL_VER = 27,
    EEP_ANT_DIV_CTL1 = 28,
    EEP_CHAIN_MASK_REDUCE = 29,
    EEP_ANTENNA_GAIN_2G = 30,
    EEP_ANTENNA_GAIN_5G = 31
};
#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct base_eep_header {
   __le16 length ;
   __le16 checksum ;
   __le16 version ;
   u8 opCapFlags ;
   u8 eepMisc ;
   __le16 regDmn[2U] ;
   u8 macAddr[6U] ;
   u8 rxMask ;
   u8 txMask ;
   __le16 rfSilent ;
   __le16 blueToothOptions ;
   __le16 deviceCap ;
   __le32 binBuildNumber ;
   u8 deviceType ;
   u8 pwdclkind ;
   u8 fastClk5g ;
   u8 divChain ;
   u8 rxGainType ;
   u8 dacHiPwrMode_5G ;
   u8 openLoopPwrCntl ;
   u8 dacLpMode ;
   u8 txGainType ;
   u8 rcChainMask ;
   u8 desiredScaleCCK ;
   u8 pwr_table_offset ;
   u8 frac_n_5g ;
   u8 futureBase_3[21U] ;
} __attribute__((__packed__));
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct base_eep_header_4k {
   __le16 length ;
   __le16 checksum ;
   __le16 version ;
   u8 opCapFlags ;
   u8 eepMisc ;
   __le16 regDmn[2U] ;
   u8 macAddr[6U] ;
   u8 rxMask ;
   u8 txMask ;
   __le16 rfSilent ;
   __le16 blueToothOptions ;
   __le16 deviceCap ;
   __le32 binBuildNumber ;
   u8 deviceType ;
   u8 txGainType ;
} __attribute__((__packed__));
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct spur_chan {
   __le16 spurChan ;
   u8 spurRangeLow ;
   u8 spurRangeHigh ;
} __attribute__((__packed__));
#line 338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct modal_eep_header {
   __le32 antCtrlChain[3U] ;
   __le32 antCtrlCommon ;
   u8 antennaGainCh[3U] ;
   u8 switchSettling ;
   u8 txRxAttenCh[3U] ;
   u8 rxTxMarginCh[3U] ;
   u8 adcDesiredSize ;
   u8 pgaDesiredSize ;
   u8 xlnaGainCh[3U] ;
   u8 txEndToXpaOff ;
   u8 txEndToRxOn ;
   u8 txFrameToXpaOn ;
   u8 thresh62 ;
   u8 noiseFloorThreshCh[3U] ;
   u8 xpdGain ;
   u8 xpd ;
   u8 iqCalICh[3U] ;
   u8 iqCalQCh[3U] ;
   u8 pdGainOverlap ;
   u8 ob ;
   u8 db ;
   u8 xpaBiasLvl ;
   u8 pwrDecreaseFor2Chain ;
   u8 pwrDecreaseFor3Chain ;
   u8 txFrameToDataStart ;
   u8 txFrameToPaOn ;
   u8 ht40PowerIncForPdadc ;
   u8 bswAtten[3U] ;
   u8 bswMargin[3U] ;
   u8 swSettleHt40 ;
   u8 xatten2Db[3U] ;
   u8 xatten2Margin[3U] ;
   u8 ob_ch1 ;
   u8 db_ch1 ;
   u8 lna_ctl ;
   u8 miscBits ;
   __le16 xpaBiasLvlFreq[3U] ;
   u8 futureModal[6U] ;
   struct spur_chan spurChans[5U] ;
} __attribute__((__packed__));
#line 388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct modal_eep_4k_header {
   __le32 antCtrlChain[1U] ;
   __le32 antCtrlCommon ;
   u8 antennaGainCh[1U] ;
   u8 switchSettling ;
   u8 txRxAttenCh[1U] ;
   u8 rxTxMarginCh[1U] ;
   u8 adcDesiredSize ;
   u8 pgaDesiredSize ;
   u8 xlnaGainCh[1U] ;
   u8 txEndToXpaOff ;
   u8 txEndToRxOn ;
   u8 txFrameToXpaOn ;
   u8 thresh62 ;
   u8 noiseFloorThreshCh[1U] ;
   u8 xpdGain ;
   u8 xpd ;
   u8 iqCalICh[1U] ;
   u8 iqCalQCh[1U] ;
   u8 pdGainOverlap ;
   u8 ob_0 : 4 ;
   u8 ob_1 : 4 ;
   u8 db1_0 : 4 ;
   u8 db1_1 : 4 ;
   u8 xpaBiasLvl ;
   u8 txFrameToDataStart ;
   u8 txFrameToPaOn ;
   u8 ht40PowerIncForPdadc ;
   u8 bswAtten[1U] ;
   u8 bswMargin[1U] ;
   u8 swSettleHt40 ;
   u8 xatten2Db[1U] ;
   u8 xatten2Margin[1U] ;
   u8 db2_0 : 4 ;
   u8 db2_1 : 4 ;
   u8 version ;
   u8 ob_2 : 4 ;
   u8 ob_3 : 4 ;
   u8 ob_4 : 4 ;
   u8 antdiv_ctl1 : 4 ;
   u8 db1_2 : 4 ;
   u8 db1_3 : 4 ;
   u8 db1_4 : 4 ;
   u8 antdiv_ctl2 : 4 ;
   u8 db2_2 : 4 ;
   u8 db2_3 : 4 ;
   u8 db2_4 : 4 ;
   u8 reserved : 4 ;
   u8 tx_diversity ;
   u8 flc_pwr_thresh ;
   u8 bb_scale_smrt_antenna ;
   u8 futureModal[1U] ;
   struct spur_chan spurChans[5U] ;
} __attribute__((__packed__));
#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct base_eep_ar9287_header {
   __le16 length ;
   __le16 checksum ;
   __le16 version ;
   u8 opCapFlags ;
   u8 eepMisc ;
   __le16 regDmn[2U] ;
   u8 macAddr[6U] ;
   u8 rxMask ;
   u8 txMask ;
   __le16 rfSilent ;
   __le16 blueToothOptions ;
   __le16 deviceCap ;
   __le32 binBuildNumber ;
   u8 deviceType ;
   u8 openLoopPwrCntl ;
   int8_t pwrTableOffset ;
   int8_t tempSensSlope ;
   int8_t tempSensSlopePalOn ;
   u8 futureBase[29U] ;
} __attribute__((__packed__));
#line 475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct modal_eep_ar9287_header {
   __le32 antCtrlChain[2U] ;
   __le32 antCtrlCommon ;
   int8_t antennaGainCh[2U] ;
   u8 switchSettling ;
   u8 txRxAttenCh[2U] ;
   u8 rxTxMarginCh[2U] ;
   int8_t adcDesiredSize ;
   u8 txEndToXpaOff ;
   u8 txEndToRxOn ;
   u8 txFrameToXpaOn ;
   u8 thresh62 ;
   int8_t noiseFloorThreshCh[2U] ;
   u8 xpdGain ;
   u8 xpd ;
   int8_t iqCalICh[2U] ;
   int8_t iqCalQCh[2U] ;
   u8 pdGainOverlap ;
   u8 xpaBiasLvl ;
   u8 txFrameToDataStart ;
   u8 txFrameToPaOn ;
   u8 ht40PowerIncForPdadc ;
   u8 bswAtten[2U] ;
   u8 bswMargin[2U] ;
   u8 swSettleHt40 ;
   u8 version ;
   u8 db1 ;
   u8 db2 ;
   u8 ob_cck ;
   u8 ob_psk ;
   u8 ob_qam ;
   u8 ob_pal_off ;
   u8 futureModal[30U] ;
   struct spur_chan spurChans[5U] ;
} __attribute__((__packed__));
#line 511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_data_per_freq {
   u8 pwrPdg[4U][5U] ;
   u8 vpdPdg[4U][5U] ;
} __attribute__((__packed__));
#line 516  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_data_per_freq_4k {
   u8 pwrPdg[2U][5U] ;
   u8 vpdPdg[2U][5U] ;
} __attribute__((__packed__));
#line 521  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_target_power_leg {
   u8 bChannel ;
   u8 tPow2x[4U] ;
} __attribute__((__packed__));
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_target_power_ht {
   u8 bChannel ;
   u8 tPow2x[8U] ;
} __attribute__((__packed__));
#line 531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_ctl_edges {
   u8 bChannel ;
   u8 ctl ;
} __attribute__((__packed__));
#line 536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_data_op_loop_ar9287 {
   u8 pwrPdg[2U][5U] ;
   u8 vpdPdg[2U][5U] ;
   u8 pcdac[2U][5U] ;
   u8 empty[2U][5U] ;
} __attribute__((__packed__));
#line 543  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_data_per_freq_ar9287 {
   u8 pwrPdg[4U][1U] ;
   u8 vpdPdg[4U][1U] ;
} __attribute__((__packed__));
#line 548  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
union cal_data_per_freq_ar9287_u {
   struct cal_data_op_loop_ar9287 calDataOpen ;
   struct cal_data_per_freq_ar9287 calDataClose ;
} __attribute__((__packed__));
#line 553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_ctl_data_ar9287 {
   struct cal_ctl_edges ctlEdges[2U][4U] ;
} __attribute__((__packed__));
#line 558  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_ctl_data {
   struct cal_ctl_edges ctlEdges[3U][8U] ;
} __attribute__((__packed__));
#line 563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct cal_ctl_data_4k {
   struct cal_ctl_edges ctlEdges[1U][4U] ;
} __attribute__((__packed__));
#line 568  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct ar5416_eeprom_def {
   struct base_eep_header baseEepHeader ;
   u8 custData[64U] ;
   struct modal_eep_header modalHeader[2U] ;
   u8 calFreqPier5G[8U] ;
   u8 calFreqPier2G[4U] ;
   struct cal_data_per_freq calPierData5G[3U][8U] ;
   struct cal_data_per_freq calPierData2G[3U][4U] ;
   struct cal_target_power_leg calTargetPower5G[8U] ;
   struct cal_target_power_ht calTargetPower5GHT20[8U] ;
   struct cal_target_power_ht calTargetPower5GHT40[8U] ;
   struct cal_target_power_leg calTargetPowerCck[3U] ;
   struct cal_target_power_leg calTargetPower2G[4U] ;
   struct cal_target_power_ht calTargetPower2GHT20[4U] ;
   struct cal_target_power_ht calTargetPower2GHT40[4U] ;
   u8 ctlIndex[24U] ;
   struct cal_ctl_data ctlData[24U] ;
   u8 padding ;
} __attribute__((__packed__));
#line 597  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct ar5416_eeprom_4k {
   struct base_eep_header_4k baseEepHeader ;
   u8 custData[20U] ;
   struct modal_eep_4k_header modalHeader ;
   u8 calFreqPier2G[3U] ;
   struct cal_data_per_freq_4k calPierData2G[1U][3U] ;
   struct cal_target_power_leg calTargetPowerCck[3U] ;
   struct cal_target_power_leg calTargetPower2G[3U] ;
   struct cal_target_power_ht calTargetPower2GHT20[3U] ;
   struct cal_target_power_ht calTargetPower2GHT40[3U] ;
   u8 ctlIndex[12U] ;
   struct cal_ctl_data_4k ctlData[12U] ;
   u8 padding ;
} __attribute__((__packed__));
#line 617  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct ar9287_eeprom {
   struct base_eep_ar9287_header baseEepHeader ;
   u8 custData[32U] ;
   struct modal_eep_ar9287_header modalHeader ;
   u8 calFreqPier2G[3U] ;
   union cal_data_per_freq_ar9287_u calPierData2G[2U][3U] ;
   struct cal_target_power_leg calTargetPowerCck[3U] ;
   struct cal_target_power_leg calTargetPower2G[3U] ;
   struct cal_target_power_ht calTargetPower2GHT20[3U] ;
   struct cal_target_power_ht calTargetPower2GHT40[3U] ;
   u8 ctlIndex[12U] ;
   struct cal_ctl_data_ar9287 ctlData[12U] ;
   u8 padding ;
} __attribute__((__packed__));
#line 654  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/eeprom.h"
struct eeprom_ops {
   int (*check_eeprom)(struct ath_hw *) ;
   u32 (*get_eeprom)(struct ath_hw *, enum eeprom_param ) ;
   bool (*fill_eeprom)(struct ath_hw *) ;
   u32 (*dump_eeprom)(struct ath_hw *, bool , u8 *, u32 , u32 ) ;
   int (*get_eeprom_ver)(struct ath_hw *) ;
   int (*get_eeprom_rev)(struct ath_hw *) ;
   void (*set_board_values)(struct ath_hw *, struct ath9k_channel *) ;
   void (*set_addac)(struct ath_hw *, struct ath9k_channel *) ;
   void (*set_txpower)(struct ath_hw *, struct ath9k_channel *, u16 , u8 , u8 , bool ) ;
   u16 (*get_spur_channel)(struct ath_hw *, u16 , bool ) ;
   u8 (*get_eepmisc)(struct ath_hw *) ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
struct ar5416IniArray {
   u32 *ia_array ;
   u32 ia_rows ;
   u32 ia_columns ;
};
#line 35 
enum ath9k_cal_state {
    CAL_INACTIVE = 0,
    CAL_WAITING = 1,
    CAL_RUNNING = 2,
    CAL_DONE = 3
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
struct ath9k_percal_data {
   u32 calType ;
   u32 calNumSamples ;
   u32 calCountMax ;
   void (*calCollect)(struct ath_hw *) ;
   void (*calPostProc)(struct ath_hw *, u8 ) ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
struct ath9k_cal_list {
   struct ath9k_percal_data *calData ;
   enum ath9k_cal_state calState ;
   struct ath9k_cal_list *calNext ;
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
struct ath9k_nfcal_hist {
   int16_t nfCalBuffer[5U] ;
   u8 currIndex ;
   int16_t privNF ;
   u8 invalidNFcount ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
struct ath9k_pacal_info {
   int32_t prev_offset ;
   int8_t max_skipcount ;
   int8_t skipcount ;
};
#line 120 
enum ath_usb_dev {
    AR9280_USB = 1,
    AR9287_USB = 2,
    STORAGE_DEVICE = 3
};
#line 167 
enum ath_btcoex_scheme {
    ATH_BTCOEX_CFG_NONE = 0,
    ATH_BTCOEX_CFG_2WIRE = 1,
    ATH_BTCOEX_CFG_3WIRE = 2,
    ATH_BTCOEX_CFG_MCI = 3
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/btcoex.h"
struct ath9k_hw_mci {
   u32 raw_intr ;
   u32 rx_msg_intr ;
   u32 cont_status ;
   u32 gpm_addr ;
   u32 gpm_len ;
   u32 gpm_idx ;
   u32 sched_addr ;
   u32 wlan_channels[4U] ;
   u32 wlan_cal_seq ;
   u32 wlan_cal_done ;
   u32 config ;
   u8 *gpm_buf ;
   bool ready ;
   bool update_2g5g ;
   bool is_2g ;
   bool query_bt ;
   bool unhalt_bt_gpm ;
   bool halted_bt_gpm ;
   bool need_flush_btinfo ;
   bool bt_version_known ;
   bool wlan_channels_update ;
   u8 wlan_ver_major ;
   u8 wlan_ver_minor ;
   u8 bt_ver_major ;
   u8 bt_ver_minor ;
   u8 bt_state ;
   u8 stomp_ftp ;
   bool concur_tx ;
   u32 last_recovery ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/btcoex.h"
struct ath9k_hw_aic {
   bool aic_enabled ;
   u8 aic_cal_state ;
   u8 aic_caled_chan ;
   u32 aic_sram[79U] ;
   u32 aic_cal_start_time ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/btcoex.h"
struct ath_btcoex_hw {
   enum ath_btcoex_scheme scheme ;
   struct ath9k_hw_mci mci ;
   struct ath9k_hw_aic aic ;
   bool enabled ;
   u8 wlanactive_gpio ;
   u8 btactive_gpio ;
   u8 btpriority_gpio ;
   u32 bt_coex_mode ;
   u32 bt_coex_weights ;
   u32 bt_coex_mode2 ;
   u32 bt_coex_mode3 ;
   u32 bt_weight[4U] ;
   u32 wlan_weight[4U] ;
   u8 tx_prio[5U] ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/dynack.h"
struct ath_dyn_rxbuf {
   u16 h_rb ;
   u16 t_rb ;
   u32 tstamp[64U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/dynack.h"
struct ts_info {
   u32 tstamp ;
   u32 dur ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/dynack.h"
struct haddr_pair {
   u8 h_dest[6U] ;
   u8 h_src[6U] ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/dynack.h"
struct ath_dyn_txbuf {
   u16 h_rb ;
   u16 t_rb ;
   struct haddr_pair addr[64U] ;
   struct ts_info ts[64U] ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/dynack.h"
struct ath_dynack {
   bool enabled ;
   int ackto ;
   unsigned long lto ;
   struct list_head nodes ;
   spinlock_t qlock ;
   struct ath_dyn_rxbuf ack_rbf ;
   struct ath_dyn_txbuf st_rbf ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_hw_wow {
   u32 wow_event_mask ;
   u32 wow_event_mask2 ;
   u8 max_patterns ;
};
#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_hw_capabilities {
   u32 hw_caps ;
   u16 rts_aggr_limit ;
   u8 tx_chainmask ;
   u8 rx_chainmask ;
   u8 chip_chainmask ;
   u8 max_txchains ;
   u8 max_rxchains ;
   u8 num_gpio_pins ;
   u32 gpio_mask ;
   u32 gpio_requested ;
   u8 rx_hp_qdepth ;
   u8 rx_lp_qdepth ;
   u8 rx_status_len ;
   u8 tx_desc_len ;
   u8 txs_len ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_ops_config {
   int dma_beacon_response_time ;
   int sw_beacon_response_time ;
   bool cwm_ignore_extcca ;
   u32 pcie_waen ;
   u8 analog_shiftreg ;
   u32 ofdm_trig_low ;
   u32 ofdm_trig_high ;
   u32 cck_trig_high ;
   u32 cck_trig_low ;
   bool enable_paprd ;
   int serialize_regmode ;
   bool rx_intr_mitigation ;
   bool tx_intr_mitigation ;
   u8 max_txtrig_level ;
   u16 ani_poll_interval ;
   u16 hw_hang_checks ;
   u16 rimt_first ;
   u16 rimt_last ;
   u32 aspm_l1_fix ;
   u32 xlna_gpio ;
   u32 ant_ctrl_comm2g_switch_enable ;
   bool xatten_margin_cfg ;
   bool alt_mingainidx ;
   u8 pll_pwrsave ;
   bool tx_gain_buffalo ;
   bool led_active_high ;
};
#line 364 
enum ath9k_int {
    ATH9K_INT_RX = 1,
    ATH9K_INT_RXDESC = 2,
    ATH9K_INT_RXHP = 1,
    ATH9K_INT_RXLP = 2,
    ATH9K_INT_RXNOFRM = 8,
    ATH9K_INT_RXEOL = 16,
    ATH9K_INT_RXORN = 32,
    ATH9K_INT_TX = 64,
    ATH9K_INT_TXDESC = 128,
    ATH9K_INT_TIM_TIMER = 256,
    ATH9K_INT_MCI = 512,
    ATH9K_INT_BB_WATCHDOG = 1024,
    ATH9K_INT_TXURN = 2048,
    ATH9K_INT_MIB = 4096,
    ATH9K_INT_RXPHY = 16384,
    ATH9K_INT_RXKCM = 32768,
    ATH9K_INT_SWBA = 65536,
    ATH9K_INT_BMISS = 262144,
    ATH9K_INT_BNR = 1048576,
    ATH9K_INT_TIM = 2097152,
    ATH9K_INT_DTIM = 4194304,
    ATH9K_INT_DTIMSYNC = 8388608,
    ATH9K_INT_GPIO = 16777216,
    ATH9K_INT_CABEND = 33554432,
    ATH9K_INT_TSFOOR = 67108864,
    ATH9K_INT_GENTIMER = 134217728,
    ATH9K_INT_CST = 268435456,
    ATH9K_INT_GTT = 536870912,
    ATH9K_INT_FATAL = 1073741824,
    ATH9K_INT_GLOBAL = 2147483648,
    ATH9K_INT_BMISC = 115343360,
    ATH9K_INT_COMMON = 17160378,
    ATH9K_INT_NOCARD = 4294967295
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_hw_cal_data {
   u16 channel ;
   u16 channelFlags ;
   unsigned long cal_flags ;
   int32_t CalValid ;
   int8_t iCoff ;
   int8_t qCoff ;
   u8 caldac[2U] ;
   u16 small_signal_gain[3U] ;
   u32 pa_table[3U][24U] ;
   u32 num_measures[3U] ;
   int tx_corr_coeff[8U][3U] ;
   u32 tx_clcal[3U][16U] ;
   u32 rtt_table[3U][6U] ;
   struct ath9k_nfcal_hist nfCalHist[6U] ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_channel {
   struct ieee80211_channel *chan ;
   u16 channel ;
   u16 channelFlags ;
   s16 noisefloor ;
};
#line 455 
enum ath9k_power_mode {
    ATH9K_PM_AWAKE = 0,
    ATH9K_PM_FULL_SLEEP = 1,
    ATH9K_PM_NETWORK_SLEEP = 2,
    ATH9K_PM_UNDEFINED = 3
};
#line 500  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_beacon_state {
   u32 bs_nexttbtt ;
   u32 bs_nextdtim ;
   u32 bs_intval ;
   u32 bs_dtimperiod ;
   u16 bs_bmissthreshold ;
   u32 bs_sleepduration ;
   u32 bs_tsfoor_threshold ;
};
#line 523  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath9k_hw_version {
   u32 magic ;
   u16 devid ;
   u16 subvendorid ;
   u32 macVersion ;
   u16 macRev ;
   u16 phyRev ;
   u16 analog5GhzRev ;
   u16 analog2GhzRev ;
   enum ath_usb_dev usbdev ;
};
#line 548  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_gen_timer {
   void (*trigger)(void *) ;
   void (*overflow)(void *) ;
   void *arg ;
   u8 index ;
};
#line 555  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_gen_timer_table {
   struct ath_gen_timer *timers[16U] ;
   u16 timer_mask ;
   bool tsf2_enabled ;
};
#line 561  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_hw_antcomb_conf {
   u8 main_lna_conf ;
   u8 alt_lna_conf ;
   u8 fast_div_bias ;
   u8 main_gaintb ;
   u8 alt_gaintb ;
   int lna1_lna2_delta ;
   int lna1_lna2_switch_delta ;
   u8 div_group ;
};
#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_hw_radar_conf {
   unsigned int pulse_inband ;
   unsigned int pulse_inband_step ;
   unsigned int pulse_height ;
   unsigned int pulse_rssi ;
   unsigned int pulse_maxlen ;
   unsigned int radar_rssi ;
   unsigned int radar_inband ;
   int fir_power ;
   bool ext_channel ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_hw_private_ops {
   void (*init_hang_checks)(struct ath_hw *) ;
   bool (*detect_mac_hang)(struct ath_hw *) ;
   bool (*detect_bb_hang)(struct ath_hw *) ;
   void (*init_cal_settings)(struct ath_hw *) ;
   bool (*init_cal)(struct ath_hw *, struct ath9k_channel *) ;
   void (*init_mode_gain_regs)(struct ath_hw *) ;
   void (*setup_calibration)(struct ath_hw *, struct ath9k_cal_list *) ;
   int (*rf_set_freq)(struct ath_hw *, struct ath9k_channel *) ;
   void (*spur_mitigate_freq)(struct ath_hw *, struct ath9k_channel *) ;
   bool (*set_rf_regs)(struct ath_hw *, struct ath9k_channel *, u16 ) ;
   void (*set_channel_regs)(struct ath_hw *, struct ath9k_channel *) ;
   void (*init_bb)(struct ath_hw *, struct ath9k_channel *) ;
   int (*process_ini)(struct ath_hw *, struct ath9k_channel *) ;
   void (*olc_init)(struct ath_hw *) ;
   void (*set_rfmode)(struct ath_hw *, struct ath9k_channel *) ;
   void (*mark_phy_inactive)(struct ath_hw *) ;
   void (*set_delta_slope)(struct ath_hw *, struct ath9k_channel *) ;
   bool (*rfbus_req)(struct ath_hw *) ;
   void (*rfbus_done)(struct ath_hw *) ;
   void (*restore_chainmask)(struct ath_hw *) ;
   u32 (*compute_pll_control)(struct ath_hw *, struct ath9k_channel *) ;
   bool (*ani_control)(struct ath_hw *, enum ath9k_ani_cmd , int ) ;
   void (*do_getnf)(struct ath_hw *, int16_t *) ;
   void (*set_radar_params)(struct ath_hw *, struct ath_hw_radar_conf *) ;
   int (*fast_chan_change)(struct ath_hw *, struct ath9k_channel *, u8 *) ;
   void (*ani_cache_ini_regs)(struct ath_hw *) ;
   bool (*is_aic_enabled)(struct ath_hw *) ;
};
#line 700  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_spec_scan {
   bool enabled ;
   bool short_repeat ;
   bool endless ;
   u8 count ;
   u8 period ;
   u8 fft_period ;
};
#line 722  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_hw_ops {
   void (*config_pci_powersave)(struct ath_hw *, bool ) ;
   void (*rx_enable)(struct ath_hw *) ;
   void (*set_desc_link)(void *, u32 ) ;
   int (*calibrate)(struct ath_hw *, struct ath9k_channel *, u8 , bool ) ;
   bool (*get_isr)(struct ath_hw *, enum ath9k_int *, u32 *) ;
   void (*set_txdesc)(struct ath_hw *, void *, struct ath_tx_info *) ;
   int (*proc_txdesc)(struct ath_hw *, void *, struct ath_tx_status *) ;
   int (*get_duration)(struct ath_hw *, void *, int ) ;
   void (*antdiv_comb_conf_get)(struct ath_hw *, struct ath_hw_antcomb_conf *) ;
   void (*antdiv_comb_conf_set)(struct ath_hw *, struct ath_hw_antcomb_conf *) ;
   void (*spectral_scan_config)(struct ath_hw *, struct ath_spec_scan *) ;
   void (*spectral_scan_trigger)(struct ath_hw *) ;
   void (*spectral_scan_wait)(struct ath_hw *) ;
   void (*tx99_start)(struct ath_hw *, u32 ) ;
   void (*tx99_stop)(struct ath_hw *) ;
   void (*tx99_set_txpower)(struct ath_hw *, u8 ) ;
   void (*set_bt_ant_diversity)(struct ath_hw *, bool ) ;
};
#line 754  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_nf_limits {
   s16 max ;
   s16 min ;
   s16 nominal ;
   s16 cal[3U] ;
   s16 pwr[3U] ;
};
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
union __anonunion_eeprom_1029 {
   struct ar5416_eeprom_def def ;
   struct ar5416_eeprom_4k map4k ;
   struct ar9287_eeprom map9287 ;
   struct ar9300_eeprom ar9300_eep ;
};
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
union __anonunion_meas0_1030 {
   u32 unsign[3U] ;
   int32_t sign[3U] ;
};
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
union __anonunion_meas1_1031 {
   u32 unsign[3U] ;
   int32_t sign[3U] ;
};
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
union __anonunion_meas2_1032 {
   u32 unsign[3U] ;
   int32_t sign[3U] ;
};
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
union __anonunion_meas3_1033 {
   u32 unsign[3U] ;
   int32_t sign[3U] ;
};
#line 774 
struct ar9003_txs;
#line 774  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_hw {
   struct ath_ops reg_ops ;
   struct device *dev ;
   struct ieee80211_hw *hw ;
   struct ath_common common ;
   struct ath9k_hw_version hw_version ;
   struct ath9k_ops_config config ;
   struct ath9k_hw_capabilities caps ;
   struct ath9k_channel channels[38U] ;
   struct ath9k_channel *curchan ;
   union __anonunion_eeprom_1029 eeprom ;
   struct eeprom_ops *eep_ops ;
   bool sw_mgmt_crypto_tx ;
   bool sw_mgmt_crypto_rx ;
   bool is_pciexpress ;
   bool aspm_enabled ;
   bool is_monitoring ;
   bool need_an_top2_fixup ;
   u16 tx_trig_level ;
   u32 nf_regs[6U] ;
   struct ath_nf_limits nf_2g ;
   struct ath_nf_limits nf_5g ;
   u16 rfsilent ;
   u32 rfkill_gpio ;
   u32 rfkill_polarity ;
   u32 ah_flags ;
   s16 nf_override ;
   bool reset_power_on ;
   bool htc_reset_init ;
   enum nl80211_iftype opmode ;
   enum ath9k_power_mode power_mode ;
   s8 noise ;
   struct ath9k_hw_cal_data *caldata ;
   struct ath9k_pacal_info pacal_info ;
   struct ar5416Stats stats ;
   struct ath9k_tx_queue_info txq[10U] ;
   enum ath9k_int imask ;
   u32 imrs2_reg ;
   u32 txok_interrupt_mask ;
   u32 txerr_interrupt_mask ;
   u32 txdesc_interrupt_mask ;
   u32 txeol_interrupt_mask ;
   u32 txurn_interrupt_mask ;
   atomic_t intr_ref_cnt ;
   bool chip_fullsleep ;
   u32 modes_index ;
   u32 supp_cals ;
   struct ath9k_cal_list iq_caldata ;
   struct ath9k_cal_list adcgain_caldata ;
   struct ath9k_cal_list adcdc_caldata ;
   struct ath9k_cal_list *cal_list ;
   struct ath9k_cal_list *cal_list_last ;
   struct ath9k_cal_list *cal_list_curr ;
   union __anonunion_meas0_1030 meas0 ;
   union __anonunion_meas1_1031 meas1 ;
   union __anonunion_meas2_1032 meas2 ;
   union __anonunion_meas3_1033 meas3 ;
   u16 cal_samples ;
   u8 enabled_cals ;
   u32 sta_id1_defaults ;
   u32 misc_mode ;
   struct ath_hw_private_ops private_ops ;
   struct ath_hw_ops ops ;
   u32 *analogBank6Data ;
   int coverage_class ;
   u32 slottime ;
   u32 globaltxtimeout ;
   u32 aniperiod ;
   enum ath9k_ani_cmd ani_function ;
   u32 ani_skip_count ;
   struct ar5416AniState ani ;
   struct ath_btcoex_hw btcoex_hw ;
   u32 intr_txqs ;
   u8 txchainmask ;
   u8 rxchainmask ;
   struct ath_hw_radar_conf radar_conf ;
   u32 originalGain[22U] ;
   int initPDADC ;
   int PDADCdelta ;
   int led_pin ;
   u32 gpio_mask ;
   u32 gpio_val ;
   struct ar5416IniArray ini_dfs ;
   struct ar5416IniArray iniModes ;
   struct ar5416IniArray iniCommon ;
   struct ar5416IniArray iniBB_RfGain ;
   struct ar5416IniArray iniBank6 ;
   struct ar5416IniArray iniAddac ;
   struct ar5416IniArray iniPcieSerdes ;
   struct ar5416IniArray iniPcieSerdesLowPower ;
   struct ar5416IniArray iniModesFastClock ;
   struct ar5416IniArray iniAdditional ;
   struct ar5416IniArray iniModesRxGain ;
   struct ar5416IniArray ini_modes_rx_gain_bounds ;
   struct ar5416IniArray iniModesTxGain ;
   struct ar5416IniArray iniCckfirNormal ;
   struct ar5416IniArray iniCckfirJapan2484 ;
   struct ar5416IniArray iniModes_9271_ANI_reg ;
   struct ar5416IniArray ini_radio_post_sys2ant ;
   struct ar5416IniArray ini_modes_rxgain_xlna ;
   struct ar5416IniArray ini_modes_rxgain_bb_core ;
   struct ar5416IniArray ini_modes_rxgain_bb_postamble ;
   struct ar5416IniArray iniMac[3U] ;
   struct ar5416IniArray iniBB[3U] ;
   struct ar5416IniArray iniRadio[3U] ;
   struct ar5416IniArray iniSOC[3U] ;
   u32 intr_gen_timer_trigger ;
   u32 intr_gen_timer_thresh ;
   struct ath_gen_timer_table hw_gen_timers ;
   struct ar9003_txs *ts_ring ;
   u32 ts_paddr_start ;
   u32 ts_paddr_end ;
   u16 ts_tail ;
   u16 ts_size ;
   u32 bb_watchdog_last_status ;
   u32 bb_watchdog_timeout_ms ;
   u8 bb_hang_rx_ofdm ;
   unsigned int paprd_target_power ;
   unsigned int paprd_training_power ;
   unsigned int paprd_ratemask ;
   unsigned int paprd_ratemask_ht40 ;
   bool paprd_table_write_done ;
   u32 paprd_gain_table_entries[32U] ;
   u8 paprd_gain_table_index[32U] ;
   u32 WARegVal ;
   u32 ent_mode ;
   struct ath9k_hw_wow wow ;
   bool is_clk_25mhz ;
   int (*get_mac_revision)(void) ;
   int (*external_reset)(void) ;
   bool disable_2ghz ;
   bool disable_5ghz ;
   struct firmware *eeprom_blob ;
   struct ath_dynack dynack ;
   bool tpc_enabled ;
   u8 tx_power[36U] ;
   u8 tx_power_stbc[36U] ;
   bool msi_enabled ;
   u32 msi_mask ;
   u32 msi_reg ;
};
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
struct ath_bus_ops {
   enum ath_bus_type ath_bus_type ;
   void (*read_cachesize)(struct ath_common *, int *) ;
   bool (*eeprom_read)(struct ath_common *, u32 , u16 *) ;
   void (*bt_coex_prep)(struct ath_common *) ;
   void (*aspm_init)(struct ath_common *) ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-init.h"
struct ath_beacon_config;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-debug.h"
struct ath_rx_stats {
   u32 rx_pkts_all ;
   u32 rx_bytes_all ;
   u32 crc_err ;
   u32 decrypt_crc_err ;
   u32 phy_err ;
   u32 mic_err ;
   u32 pre_delim_crc_err ;
   u32 post_delim_crc_err ;
   u32 decrypt_busy_err ;
   u32 phy_err_stats[39U] ;
   u32 rx_len_err ;
   u32 rx_oom_err ;
   u32 rx_rate_err ;
   u32 rx_too_many_frags_err ;
   u32 rx_beacons ;
   u32 rx_frags ;
   u32 rx_spectral ;
   u32 rx_spectral_sample_good ;
   u32 rx_spectral_sample_err ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/spectral_common.h"
enum spectral_mode {
    SPECTRAL_DISABLED = 0,
    SPECTRAL_BACKGROUND = 1,
    SPECTRAL_MANUAL = 2,
    SPECTRAL_CHANSCAN = 3
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-spectral.h"
struct rchan;
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-spectral.h"
struct ath_spec_scan_priv {
   struct ath_hw *ah ;
   struct rchan *rfs_chan_spec_scan ;
   enum spectral_mode spectral_mode ;
   struct ath_spec_scan spec_config ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common.h"
struct ath_beacon_config {
   struct ieee80211_vif *main_vif ;
   int beacon_interval ;
   u16 dtim_period ;
   u16 bmiss_timeout ;
   u8 dtim_count ;
   u8 enable_beacon ;
   bool ibss_creator ;
   u32 nexttbtt ;
   u32 intval ;
};
#line 93 
struct ath9k_htc_priv;
#line 94 
struct htc_target;
#line 95 
struct ath9k_htc_tx_ctl;
#line 96 
enum ath9k_hif_transports {
    ATH9K_HIF_USB = 0
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct ath9k_htc_hif {
   struct list_head list ;
   enum ath9k_hif_transports transport ;
   char *name ;
   u8 control_dl_pipe ;
   u8 control_ul_pipe ;
   void (*start)(void *) ;
   void (*stop)(void *) ;
   void (*sta_drain)(void *, u8 ) ;
   int (*send)(void *, u8 , struct sk_buff *) ;
};
#line 41 
enum htc_endpoint_id {
    ENDPOINT_UNUSED = -1,
    ENDPOINT0 = 0,
    ENDPOINT1 = 1,
    ENDPOINT2 = 2,
    ENDPOINT3 = 3,
    ENDPOINT4 = 4,
    ENDPOINT5 = 5,
    ENDPOINT6 = 6,
    ENDPOINT7 = 7,
    ENDPOINT8 = 8,
    ENDPOINT_MAX = 22
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_ep_callbacks {
   void *priv ;
   void (*tx)(void *, struct sk_buff *, enum htc_endpoint_id , bool ) ;
   void (*rx)(void *, struct sk_buff *, enum htc_endpoint_id ) ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_endpoint {
   u16 service_id ;
   struct htc_ep_callbacks ep_callbacks ;
   u32 max_txqdepth ;
   int max_msglen ;
   u8 ul_pipeid ;
   u8 dl_pipeid ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_target {
   void *hif_dev ;
   struct ath9k_htc_priv *drv_priv ;
   struct device *dev ;
   struct ath9k_htc_hif *hif ;
   struct htc_endpoint endpoint[22U] ;
   struct completion target_wait ;
   struct completion cmd_wait ;
   struct list_head list ;
   enum htc_endpoint_id conn_rsp_epid ;
   u16 credits ;
   u16 credit_size ;
   u8 htc_flags ;
   atomic_t tgt_ready ;
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct wmi_event_swba {
   __be64 tsf ;
   u8 beacon_pending ;
} __attribute__((__packed__));
#line 80 
enum wmi_cmd_id {
    WMI_ECHO_CMDID = 1,
    WMI_ACCESS_MEMORY_CMDID = 2,
    WMI_GET_FW_VERSION = 3,
    WMI_DISABLE_INTR_CMDID = 4,
    WMI_ENABLE_INTR_CMDID = 5,
    WMI_ATH_INIT_CMDID = 6,
    WMI_ABORT_TXQ_CMDID = 7,
    WMI_STOP_TX_DMA_CMDID = 8,
    WMI_ABORT_TX_DMA_CMDID = 9,
    WMI_DRAIN_TXQ_CMDID = 10,
    WMI_DRAIN_TXQ_ALL_CMDID = 11,
    WMI_START_RECV_CMDID = 12,
    WMI_STOP_RECV_CMDID = 13,
    WMI_FLUSH_RECV_CMDID = 14,
    WMI_SET_MODE_CMDID = 15,
    WMI_NODE_CREATE_CMDID = 16,
    WMI_NODE_REMOVE_CMDID = 17,
    WMI_VAP_REMOVE_CMDID = 18,
    WMI_VAP_CREATE_CMDID = 19,
    WMI_REG_READ_CMDID = 20,
    WMI_REG_WRITE_CMDID = 21,
    WMI_RC_STATE_CHANGE_CMDID = 22,
    WMI_RC_RATE_UPDATE_CMDID = 23,
    WMI_TARGET_IC_UPDATE_CMDID = 24,
    WMI_TX_AGGR_ENABLE_CMDID = 25,
    WMI_TGT_DETACH_CMDID = 26,
    WMI_NODE_UPDATE_CMDID = 27,
    WMI_INT_STATS_CMDID = 28,
    WMI_TX_STATS_CMDID = 29,
    WMI_RX_STATS_CMDID = 30,
    WMI_BITRATE_MASK_CMDID = 31,
    WMI_REG_RMW_CMDID = 32
};
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct register_write {
   __be32 reg ;
   __be32 val ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct register_rmw {
   __be32 reg ;
   __be32 set ;
   __be32 clr ;
} __attribute__((__packed__));
#line 148  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct wmi {
   struct ath9k_htc_priv *drv_priv ;
   struct htc_target *htc ;
   enum htc_endpoint_id ctrl_epid ;
   struct mutex op_mutex ;
   struct completion cmd_wait ;
   u16 last_seq_id ;
   struct sk_buff_head wmi_event_queue ;
   struct tasklet_struct wmi_event_tasklet ;
   u16 tx_seq_id ;
   u8 *cmd_rsp_buf ;
   u32 cmd_rsp_len ;
   bool stopped ;
   struct list_head pending_tx_events ;
   spinlock_t event_lock ;
   spinlock_t wmi_lock ;
   atomic_t mwrite_cnt ;
   struct register_write multi_write[62U] ;
   u32 multi_write_idx ;
   struct mutex multi_write_mutex ;
   atomic_t m_rmw_cnt ;
   struct register_rmw multi_rmw[15U] ;
   u32 multi_rmw_idx ;
   struct mutex multi_rmw_mutex ;
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct tx_beacon_header {
   u8 vif_index ;
   u8 len_changed ;
   u16 rev ;
} __attribute__((__packed__));
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_vif {
   u8 index ;
   u16 seq_no ;
   bool beacon_configured ;
   int bslot ;
   __le64 tsfadjust ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_rx {
   struct list_head rxbuf ;
   spinlock_t rxbuflock ;
};
#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_tx {
   u8 flags ;
   int queued_cnt ;
   struct sk_buff_head mgmt_ep_queue ;
   struct sk_buff_head cab_ep_queue ;
   struct sk_buff_head data_be_queue ;
   struct sk_buff_head data_bk_queue ;
   struct sk_buff_head data_vi_queue ;
   struct sk_buff_head data_vo_queue ;
   struct sk_buff_head tx_failed ;
   unsigned long tx_slot[4U] ;
   struct timer_list cleanup_timer ;
   spinlock_t tx_lock ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_tx_ctl {
   u8 type ;
   u8 epid ;
   u8 txok ;
   u8 sta_idx ;
   unsigned long timestamp ;
};
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath_tx_stats {
   u32 buf_queued ;
   u32 buf_completed ;
   u32 skb_queued ;
   u32 skb_success ;
   u32 skb_success_bytes ;
   u32 skb_failed ;
   u32 cab_queued ;
   u32 queue_stats[4U] ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath_skbrx_stats {
   u32 skb_allocated ;
   u32 skb_completed ;
   u32 skb_completed_bytes ;
   u32 skb_dropped ;
};
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_debug {
   struct dentry *debugfs_phy ;
   struct ath_tx_stats tx_stats ;
   struct ath_rx_stats rx_stats ;
   struct ath_skbrx_stats skbrx_stats ;
};
#line 371 
enum ldv_21711 {
    OK = 0,
    UPDATE = 1,
    COMMIT = 2
};
#line 404  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct htc_beacon {
   enum ldv_21711 updateslot ;
   struct ieee80211_vif *bslot[2U] ;
   u32 bmisscnt ;
   u32 beaconq ;
   int slottime ;
   int slotupdate ;
};
#line 418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath_btcoex {
   u32 bt_priority_cnt ;
   unsigned long bt_priority_time ;
   int bt_stomp_type ;
   u32 btcoex_no_stomp ;
   u32 btcoex_period ;
   u32 btscan_no_stomp ;
};
#line 451  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_priv {
   struct device *dev ;
   struct ieee80211_hw *hw ;
   struct ath_hw *ah ;
   struct htc_target *htc ;
   struct wmi *wmi ;
   u16 fw_version_major ;
   u16 fw_version_minor ;
   enum htc_endpoint_id wmi_cmd_ep ;
   enum htc_endpoint_id beacon_ep ;
   enum htc_endpoint_id cab_ep ;
   enum htc_endpoint_id uapsd_ep ;
   enum htc_endpoint_id mgmt_ep ;
   enum htc_endpoint_id data_be_ep ;
   enum htc_endpoint_id data_bk_ep ;
   enum htc_endpoint_id data_vi_ep ;
   enum htc_endpoint_id data_vo_ep ;
   u8 vif_slot ;
   u8 mon_vif_idx ;
   u8 sta_slot ;
   u8 vif_sta_pos[2U] ;
   u8 num_ibss_vif ;
   u8 num_mbss_vif ;
   u8 num_sta_vif ;
   u8 num_sta_assoc_vif ;
   u8 num_ap_vif ;
   u16 curtxpow ;
   u16 txpowlimit ;
   u16 nvifs ;
   u16 nstations ;
   bool rearm_ani ;
   bool reconfig_beacon ;
   unsigned int rxfilter ;
   unsigned long op_flags ;
   unsigned long fw_flags ;
   struct ath9k_hw_cal_data caldata ;
   struct ath_spec_scan_priv spec_priv ;
   spinlock_t beacon_lock ;
   struct ath_beacon_config cur_beacon_conf ;
   struct htc_beacon beacon ;
   struct ath9k_htc_rx rx ;
   struct ath9k_htc_tx tx ;
   struct tasklet_struct swba_tasklet ;
   struct tasklet_struct rx_tasklet ;
   struct delayed_work ani_work ;
   struct tasklet_struct tx_failed_tasklet ;
   struct work_struct ps_work ;
   struct work_struct fatal_work ;
   struct mutex htc_pm_lock ;
   unsigned long ps_usecount ;
   bool ps_enabled ;
   bool ps_idle ;
   enum led_brightness brightness ;
   bool led_registered ;
   char led_name[32U] ;
   struct led_classdev led_cdev ;
   struct work_struct led_work ;
   int cabq ;
   int hwq_map[4U] ;
   struct ath_btcoex btcoex ;
   struct delayed_work coex_period_work ;
   struct delayed_work duty_cycle_work ;
   struct ath9k_debug debug ;
   struct mutex mutex ;
   struct ieee80211_vif *csa_vif ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_1103 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_frame_hdr {
   u8 endpoint_id ;
   u8 flags ;
   __be16 payload_len ;
   u8 control[4U] ;
} __attribute__((__packed__));
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_ready_msg {
   __be16 message_id ;
   __be16 credits ;
   __be16 credit_size ;
   u8 max_endpoints ;
   u8 pad ;
} __attribute__((__packed__));
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_config_pipe_msg {
   __be16 message_id ;
   u8 pipe_id ;
   u8 credits ;
} __attribute__((__packed__));
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_panic_bad_vaddr {
   __be32 pattern ;
   __be32 exccause ;
   __be32 pc ;
   __be32 badvaddr ;
} __attribute__((__packed__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_panic_bad_epid {
   __be32 pattern ;
   __be32 epid ;
} __attribute__((__packed__));
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_service_connreq {
   u16 service_id ;
   u16 con_flags ;
   u32 max_send_qdepth ;
   struct htc_ep_callbacks ep_callbacks ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_conn_svc_msg {
   __be16 msg_id ;
   __be16 service_id ;
   __be16 con_flags ;
   u8 dl_pipeid ;
   u8 ul_pipeid ;
   u8 svc_meta_len ;
   u8 pad ;
} __attribute__((__packed__));
#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_conn_svc_rspmsg {
   __be16 msg_id ;
   __be16 service_id ;
   u8 status ;
   u8 endpoint_id ;
   __be16 max_msg_len ;
   u8 svc_meta_len ;
   u8 pad ;
} __attribute__((__packed__));
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
struct htc_comp_msg {
   __be16 msg_id ;
} __attribute__((__packed__));
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
enum rate_info_bw {
    RATE_INFO_BW_20 = 0,
    RATE_INFO_BW_5 = 1,
    RATE_INFO_BW_10 = 2,
    RATE_INFO_BW_40 = 3,
    RATE_INFO_BW_80 = 4,
    RATE_INFO_BW_160 = 5,
    RATE_INFO_BW_HE_RU = 6
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
struct ath_rx_status {
   u32 rs_tstamp ;
   u16 rs_datalen ;
   u8 rs_status ;
   u8 rs_phyerr ;
   int8_t rs_rssi ;
   u8 rs_keyix ;
   u8 rs_rate ;
   u8 rs_antenna ;
   u8 rs_more ;
   int8_t rs_rssi_ctl[3U] ;
   int8_t rs_rssi_ext[3U] ;
   u8 rs_isaggr ;
   u8 rs_firstaggr ;
   u8 rs_moreaggr ;
   u8 rs_num_delims ;
   u8 rs_flags ;
   bool is_mybeacon ;
   u32 evm0 ;
   u32 evm1 ;
   u32 evm2 ;
   u32 evm3 ;
   u32 evm4 ;
   u16 enc_flags ;
   enum rate_info_bw bw ;
};
#line 713 
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_int_stats {
   __be32 rx ;
   __be32 rxorn ;
   __be32 rxeol ;
   __be32 txurn ;
   __be32 txto ;
   __be32 cst ;
} __attribute__((__packed__));
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_tx_stats {
   __be32 xretries ;
   __be32 fifoerr ;
   __be32 filtered ;
   __be32 timer_exp ;
   __be32 shortretries ;
   __be32 longretries ;
   __be32 qnull ;
   __be32 encap_fail ;
   __be32 nobuf ;
} __attribute__((__packed__));
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_rx_stats {
   __be32 nobuf ;
   __be32 host_send ;
   __be32 host_done ;
} __attribute__((__packed__));
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3623 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3625 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3627 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3629 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3639 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3641 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct wmi_cmd_hdr {
   __be16 command_id ;
   __be16 seq_no ;
} __attribute__((__packed__));
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_4151 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_4153 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_4155 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_device;
#line 280 
struct usb_driver;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_driver {
   char *name ;
   int (*probe)(struct usb_interface *, struct usb_device_id *) ;
   void (*disconnect)(struct usb_interface *) ;
   int (*unlocked_ioctl)(struct usb_interface *, unsigned int , void *) ;
   int (*suspend)(struct usb_interface *, pm_message_t ) ;
   int (*resume)(struct usb_interface *) ;
   int (*reset_resume)(struct usb_interface *) ;
   int (*pre_reset)(struct usb_interface *) ;
   int (*post_reset)(struct usb_interface *) ;
   struct usb_device_id *id_table ;
   struct attribute_group **dev_groups ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4657 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4659 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4661 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4663 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4673 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_4675 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
struct hif_device_usb;
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
struct tx_buf {
   u8 *buf ;
   u16 len ;
   u16 offset ;
   struct urb *urb ;
   struct sk_buff_head skb_queue ;
   struct hif_device_usb *hif_dev ;
   struct list_head list ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
struct hif_usb_tx {
   u8 flags ;
   u8 tx_buf_cnt ;
   u16 tx_skb_cnt ;
   struct sk_buff_head tx_skb_queue ;
   struct list_head tx_buf ;
   struct list_head tx_pending ;
   spinlock_t tx_lock ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
struct cmd_buf {
   struct sk_buff *skb ;
   struct hif_device_usb *hif_dev ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
struct hif_device_usb {
   struct usb_device *udev ;
   struct usb_interface *interface ;
   struct usb_device_id *usb_device_id ;
   void *fw_data ;
   size_t fw_size ;
   struct completion fw_done ;
   struct htc_target *htc_handle ;
   struct hif_usb_tx tx ;
   struct usb_anchor regout_submitted ;
   struct usb_anchor rx_submitted ;
   struct usb_anchor reg_in_submitted ;
   struct usb_anchor mgmt_submitted ;
   struct sk_buff *remain_skb ;
   char fw_name[32U] ;
   int fw_minor_index ;
   int rx_remain_len ;
   int rx_pkt_len ;
   int rx_transfer_len ;
   int rx_pad_len ;
   spinlock_t rx_lock ;
   u8 flags ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_5185 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_5187 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct napi_struct;
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_5691 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_5693 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_5695 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_5697 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2026  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_5707 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 2027  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_5709 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct gro_list {
   struct list_head list ;
   int count ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned long gro_bitmask ;
   int (*poll)(struct napi_struct *, int ) ;
   int poll_owner ;
   struct net_device *dev ;
   struct gro_list gro_hash[8U] ;
   struct sk_buff *skb ;
   struct list_head rx_list ;
   int rx_count ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status;
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u64 boottime_ns ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 enc_flags ;
   u8 encoding : 2 ;
   u8 bw : 3 ;
   u8 he_ru : 3 ;
   u8 he_gi : 2 ;
   u8 he_dcm : 1 ;
   u8 rate_idx ;
   u8 nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
   u8 zero_length_psdu_type ;
};
#line 151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
struct ath_htc_rx_status {
   __be64 rs_tstamp ;
   __be16 rs_datalen ;
   u8 rs_status ;
   u8 rs_phyerr ;
   int8_t rs_rssi ;
   int8_t rs_rssi_ctl[3U] ;
   int8_t rs_rssi_ext[3U] ;
   u8 rs_keyix ;
   u8 rs_rate ;
   u8 rs_antenna ;
   u8 rs_more ;
   u8 rs_isaggr ;
   u8 rs_moreaggr ;
   u8 rs_num_delims ;
   u8 rs_flags ;
   u8 rs_dummy ;
   __be32 evm0 ;
   __be32 evm1 ;
   __be32 evm2 ;
};
#line 713 
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct __wmi_event_txstatus {
   u8 cookie ;
   u8 ts_rate ;
   u8 ts_flags ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct wmi_event_txstatus {
   u8 cnt ;
   struct __wmi_event_txstatus txstatus[12U] ;
} __attribute__((__packed__));
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct ath9k_htc_tx_event {
   int count ;
   struct __wmi_event_txstatus txs ;
   struct list_head list ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct tx_frame_hdr {
   u8 data_type ;
   u8 node_idx ;
   u8 vif_idx ;
   u8 tidno ;
   __be32 flags ;
   u8 key_type ;
   u8 keyix ;
   u8 cookie ;
   u8 pad ;
} __attribute__((__packed__));
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct tx_mgmt_hdr {
   u8 node_idx ;
   u8 vif_idx ;
   u8 tidno ;
   u8 flags ;
   u8 key_type ;
   u8 keyix ;
   u8 cookie ;
   u8 pad ;
} __attribute__((__packed__));
#line 253 
enum tid_aggr_state {
    AGGR_STOP = 0,
    AGGR_PROGRESS = 1,
    AGGR_START = 2,
    AGGR_OPERATIONAL = 3
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_sta {
   u8 index ;
   enum tid_aggr_state tid_state[8U] ;
   struct work_struct rc_update_work ;
   struct ath9k_htc_priv *htc_priv ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_rxbuf {
   bool in_process ;
   struct sk_buff *skb ;
   struct ath_htc_rx_status rxstatus ;
   struct list_head list ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_init_data {
   struct fwnode_handle *fwnode ;
   char *default_label ;
   char *devicename ;
   bool devname_mandatory ;
};
#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
enum ath_stomp_type {
    ATH_BTCOEX_STOMP_ALL = 0,
    ATH_BTCOEX_STOMP_LOW = 1,
    ATH_BTCOEX_STOMP_NONE = 2,
    ATH_BTCOEX_STOMP_LOW_FTP = 3,
    ATH_BTCOEX_STOMP_AUDIO = 4,
    ATH_BTCOEX_STOMP_MAX = 5
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_7309 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 3039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
} __attribute__((__packed__));
#line 3362 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};
#line 4593 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};
#line 5133 
enum nl80211_ext_feature_index {
    NL80211_EXT_FEATURE_VHT_IBSS = 0,
    NL80211_EXT_FEATURE_RRM = 1,
    NL80211_EXT_FEATURE_MU_MIMO_AIR_SNIFFER = 2,
    NL80211_EXT_FEATURE_SCAN_START_TIME = 3,
    NL80211_EXT_FEATURE_BSS_PARENT_TSF = 4,
    NL80211_EXT_FEATURE_SET_SCAN_DWELL = 5,
    NL80211_EXT_FEATURE_BEACON_RATE_LEGACY = 6,
    NL80211_EXT_FEATURE_BEACON_RATE_HT = 7,
    NL80211_EXT_FEATURE_BEACON_RATE_VHT = 8,
    NL80211_EXT_FEATURE_FILS_STA = 9,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA = 10,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA_CONNECTED = 11,
    NL80211_EXT_FEATURE_SCHED_SCAN_RELATIVE_RSSI = 12,
    NL80211_EXT_FEATURE_CQM_RSSI_LIST = 13,
    NL80211_EXT_FEATURE_FILS_SK_OFFLOAD = 14,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_PSK = 15,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_1X = 16,
    NL80211_EXT_FEATURE_FILS_MAX_CHANNEL_TIME = 17,
    NL80211_EXT_FEATURE_ACCEPT_BCAST_PROBE_RESP = 18,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_HIGH_TX_RATE = 19,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_DEFERRAL_SUPPRESSION = 20,
    NL80211_EXT_FEATURE_MFP_OPTIONAL = 21,
    NL80211_EXT_FEATURE_LOW_SPAN_SCAN = 22,
    NL80211_EXT_FEATURE_LOW_POWER_SCAN = 23,
    NL80211_EXT_FEATURE_HIGH_ACCURACY_SCAN = 24,
    NL80211_EXT_FEATURE_DFS_OFFLOAD = 25,
    NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211 = 26,
    NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_DATA_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_TXQS = 28,
    NL80211_EXT_FEATURE_SCAN_RANDOM_SN = 29,
    NL80211_EXT_FEATURE_SCAN_MIN_PREQ_CONTENT = 30,
    NL80211_EXT_FEATURE_CAN_REPLACE_PTK0 = 31,
    NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER = 32,
    NL80211_EXT_FEATURE_AIRTIME_FAIRNESS = 33,
    NL80211_EXT_FEATURE_AP_PMKSA_CACHING = 34,
    NL80211_EXT_FEATURE_SCHED_SCAN_BAND_SPECIFIC_RSSI_THOLD = 35,
    NL80211_EXT_FEATURE_EXT_KEY_ID = 36,
    NL80211_EXT_FEATURE_STA_TX_PWR = 37,
    NL80211_EXT_FEATURE_SAE_OFFLOAD = 38,
    NL80211_EXT_FEATURE_VLAN_OFFLOAD = 39,
    NL80211_EXT_FEATURE_AQL = 40,
    NUM_NL80211_EXT_FEATURES = 41,
    MAX_NL80211_EXT_FEATURES = 40
};
#line 5912 
enum nl80211_nan_function_type {
    NL80211_NAN_FUNC_PUBLISH = 0,
    NL80211_NAN_FUNC_SUBSCRIBE = 1,
    NL80211_NAN_FUNC_FOLLOW_UP = 2,
    __NL80211_NAN_FUNC_TYPE_AFTER_LAST = 3,
    NL80211_NAN_FUNC_MAX_TYPE = 2
};
#line 6001 
enum nl80211_preamble {
    NL80211_PREAMBLE_LEGACY = 0,
    NL80211_PREAMBLE_HT = 1,
    NL80211_PREAMBLE_VHT = 2,
    NL80211_PREAMBLE_DMG = 3
};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u64 time_bss_rx ;
   u32 filled ;
   s8 noise ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_control_7981 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_7981 control[4U] ;
};
#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
   u8 he_gi ;
   u8 he_dcm ;
   u8 he_ru_alloc ;
   u8 n_bonded_ch ;
};
#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};
#line 1373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_txq_stats {
   u32 filled ;
   u32 backlog_bytes ;
   u32 backlog_packets ;
   u32 flows ;
   u32 drops ;
   u32 ecn_marks ;
   u32 overlimit ;
   u32 overmemory ;
   u32 collisions ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 max_flows ;
};
#line 1399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
   struct cfg80211_txq_stats txq_stats ;
};
#line 1476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct station_info {
   u64 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 assoc_at ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 tx_duration ;
   u64 rx_duration ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   u8 connected_to_gate ;
   struct cfg80211_tid_stats *pertid ;
   s8 ack_signal ;
   s8 avg_ack_signal ;
   u16 airtime_weight ;
   u32 rx_mpdu_count ;
   u32 fcs_err_count ;
   u32 airtime_link_metric ;
};
#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_info {
   u64 scan_start_tsf ;
   u8 tsf_bssid[6U] ;
   bool aborted ;
};
#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u16 duration ;
   bool duration_mandatory ;
   u32 flags ;
   u32 rates[4U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   u8 bssid[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   struct cfg80211_scan_info info ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 *kek ;
   u8 *kck ;
   u8 *replay_ctr ;
};
#line 2921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_conf {
   u8 master_pref ;
   u8 bands ;
};
#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func_filter {
   u8 *filter ;
   u8 len ;
};
#line 2978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func {
   enum nl80211_nan_function_type type ;
   u8 service_id[6U] ;
   u8 publish_type ;
   bool close_range ;
   bool publish_bcast ;
   bool subscribe_active ;
   u8 followup_id ;
   u8 followup_reqid ;
   struct mac_address followup_dest ;
   u32 ttl ;
   u8 *serv_spec_info ;
   u8 serv_spec_info_len ;
   bool srf_include ;
   u8 *srf_bf ;
   u8 srf_bf_len ;
   u8 srf_bf_idx ;
   struct mac_address *srf_macs ;
   int srf_num_macs ;
   struct cfg80211_nan_func_filter *rx_filters ;
   struct cfg80211_nan_func_filter *tx_filters ;
   u8 num_tx_filters ;
   u8 num_rx_filters ;
   u8 instance_id ;
   u64 cookie ;
};
#line 3072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ftm_responder_stats {
   u32 filled ;
   u32 success_num ;
   u32 partial_num ;
   u32 failed_num ;
   u32 asap_num ;
   u32 non_asap_num ;
   u64 total_duration_ms ;
   u32 unknown_triggers_num ;
   u32 reschedule_requests_num ;
   u32 out_of_window_triggers_num ;
};
#line 3210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_ftm_request_peer {
   enum nl80211_preamble preamble ;
   u16 burst_period ;
   u8 requested : 1 ;
   u8 asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
   u8 num_bursts_exp ;
   u8 burst_duration ;
   u8 ftms_per_burst ;
   u8 ftmr_retries ;
};
#line 3230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request_peer {
   u8 addr[6U] ;
   struct cfg80211_chan_def chandef ;
   u8 report_ap_tsf : 1 ;
   struct cfg80211_pmsr_ftm_request_peer ftm ;
};
#line 3253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request {
   u64 cookie ;
   void *drv_data ;
   u32 n_peers ;
   u32 nl_portid ;
   u32 timeout ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct list_head list ;
   struct cfg80211_pmsr_request_peer peers[] ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};
#line 235 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};
#line 304 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};
#line 311 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};
#line 395 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};
#line 402 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_u_8250 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_8250 u ;
};
#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 *ies[4U] ;
   size_t len[4U] ;
   u8 *common_ies ;
   size_t common_ie_len ;
};
#line 1556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
   u32 delay ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_tkip_8259 {
   u32 iv32 ;
   u16 iv16 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ccmp_8260 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_cmac_8261 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_gmac_8262 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_gcmp_8263 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_hw_8264 {
   u8 seq[16U] ;
   u8 seq_len ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_8258 {
   struct __anonstruct_tkip_8259 tkip ;
   struct __anonstruct_ccmp_8260 ccmp ;
   struct __anonstruct_aes_cmac_8261 aes_cmac ;
   struct __anonstruct_aes_gmac_8262 aes_gmac ;
   struct __anonstruct_gcmp_8263 gcmp ;
   struct __anonstruct_hw_8264 hw ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_8258 __anonCompField_ieee80211_key_seq_196 ;
};
#line 1857 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};
#line 1862 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};
#line 2037 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};
#line 2057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};
#line 2083 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    IEEE80211_HW_TDLS_WIDER_BW = 29,
    IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU = 30,
    IEEE80211_HW_BEACON_TX_STATUS = 31,
    IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR = 32,
    IEEE80211_HW_SUPPORTS_REORDERING_BUFFER = 33,
    IEEE80211_HW_USES_RSS = 34,
    IEEE80211_HW_TX_AMSDU = 35,
    IEEE80211_HW_TX_FRAG_LIST = 36,
    IEEE80211_HW_REPORTS_LOW_ACK = 37,
    IEEE80211_HW_SUPPORTS_TX_FRAG = 38,
    IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA = 39,
    IEEE80211_HW_DEAUTH_NEED_MGD_TX_PREP = 40,
    IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP = 41,
    IEEE80211_HW_BUFF_MMPDU_TXQ = 42,
    IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW = 43,
    IEEE80211_HW_STA_MMPDU_TXQ = 44,
    IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN = 45,
    IEEE80211_HW_SUPPORTS_MULTI_BSSID = 46,
    IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID = 47,
    IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT = 48,
    NUM_IEEE80211_HW_FLAGS = 49
};
#line 2546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};
#line 2566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};
#line 2662 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};
#line 3161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ampdu_params {
   enum ieee80211_ampdu_mlme_action action ;
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
   u16 buf_size ;
   bool amsdu ;
   u16 timeout ;
};
#line 3170 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};
#line 3182 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};
#line 3187 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};
#line 3778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   void (*config_iface_filter)(struct ieee80211_hw *, struct ieee80211_vif *, unsigned int , unsigned int ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_set_txpwr)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*offset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, s64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 ) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*abort_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*channel_switch_rx_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_hw *, struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
   void (*sync_rx_queues)(struct ieee80211_hw *) ;
   int (*start_nan)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *) ;
   int (*stop_nan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*nan_change_conf)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *, u32 ) ;
   int (*add_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_func *) ;
   void (*del_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, u8 ) ;
   bool (*can_aggregate_in_amsdu)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff *) ;
   int (*get_ftm_responder_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_ftm_responder_stats *) ;
   int (*start_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
   void (*abort_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
};
#line 4143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tpt_blink {
   int throughput ;
   int blink_time ;
};
#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
struct wmi_fw_version {
   __be16 major ;
   __be16 minor ;
} __attribute__((__packed__));
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
enum ath9k_int;
#line 713 
enum ath9k_int;
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
enum htc_phymode {
    HTC_MODE_11NA = 0,
    HTC_MODE_11NG = 1
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_cap_target {
   __be32 ampdu_limit ;
   u8 ampdu_subframes ;
   u8 enable_coex ;
   u8 tx_chainmask ;
   u8 pad ;
} __attribute__((__packed__));
#line 113  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_vif {
   u8 index ;
   u8 opmode ;
   u8 myaddr[6U] ;
   u8 ath_cap ;
   __be16 rtsthreshold ;
   u8 pad ;
} __attribute__((__packed__));
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_sta {
   u8 macaddr[6U] ;
   u8 bssid[6U] ;
   u8 sta_index ;
   u8 vif_index ;
   u8 is_vif_sta ;
   __be16 flags ;
   __be16 htcap ;
   __be16 maxampdu ;
   u8 pad ;
} __attribute__((__packed__));
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_aggr {
   u8 sta_index ;
   u8 tidno ;
   u8 aggr_enable ;
   u8 padding ;
} __attribute__((__packed__));
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_rateset {
   u8 rs_nrates ;
   u8 rs_rates[30U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_rate {
   struct ath9k_htc_rateset legacy_rates ;
   struct ath9k_htc_rateset ht_rates ;
} __attribute__((__packed__));
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_rate {
   u8 sta_index ;
   u8 isnew ;
   __be32 capflags ;
   struct ath9k_htc_rate rates ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_htc_target_rate_mask {
   u8 vif_index ;
   u8 band ;
   __be32 mask ;
   u16 pad ;
} __attribute__((__packed__));
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
struct ath9k_vif_iter_data {
   u8 *hw_macaddr ;
   u8 mask[6U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_11091 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_11091 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_11092 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_11092 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_11108 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_11108 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_11112 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_11112 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_11113 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_11114 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_11113 __anonCompField_media_link_90 ;
   union __anonunion_11114 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_11116 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_11115 {
   struct __anonstruct_dev_11116 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_11115 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_11130 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_11131 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_11129 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_11130 i2c ;
   struct __anonstruct_custom_11131 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_11129 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_12032 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_12032 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 19  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_character_driver_scenario_fops_debug_15 {
   struct file_operations *arg0 ;
   int signal_pending ;
};
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_timer_scenario_9_24 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   unsigned int __builtin_bswap32(unsigned int);   */
/* compiler builtin: 
   unsigned long __builtin_bswap64(unsigned long);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 59 
#line 59 
void *__memmove(void *, void *, size_t);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 28 
void _raw_spin_lock_bh(raw_spinlock_t *);
#line 40 
#line 40 
void _raw_spin_unlock_bh(raw_spinlock_t *);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 801  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 810  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 819  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 2245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 2245 
void *skb_push(struct sk_buff *, unsigned int);
#line 2299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff *skb)
{
  #line 2301 
  return (unsigned int)(skb->data - skb->head);
}

#line 3617  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 5177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
#line 5177 
unsigned int ieee80211_hdrlen(__le16);
#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  #line 1116 
  return (struct ieee80211_tx_info *)(& skb->cb);
}

#line 4737 
#line 4737 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);
#line 4750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 4753 
  return ieee80211_beacon_get_tim(hw,vif,(u16 *)0U,(u16 *)0U);
}

#line 4791 
#line 4791 
void ieee80211_csa_finish(struct ieee80211_vif *);
#line 4799 
#line 4799 
bool ieee80211_csa_is_complete(struct ieee80211_vif *);
#line 4990 
#line 4990 
struct sk_buff *ieee80211_get_buffered_bc(struct ieee80211_hw *, struct ieee80211_vif *);
#line 5320 
#line 5320 
void ieee80211_iterate_active_interfaces_atomic(struct ieee80211_hw *, u32, void (*)(void *, u8 *, struct ieee80211_vif *), void *);
#line 5371 
#line 5371 
void ieee80211_queue_work(struct ieee80211_hw *, struct work_struct *);
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
#line 210 
void ath_printk(char *, struct ath_common *, char * , ...);
#line 723  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
#line 723 
bool ath9k_hw_set_txq_props(struct ath_hw *, int, struct ath9k_tx_queue_info *);
#line 725 
#line 725 
bool ath9k_hw_get_txq_props(struct ath_hw *, int, struct ath9k_tx_queue_info *);
#line 730 
#line 730 
bool ath9k_hw_resettxqueue(struct ath_hw *, u32);
#line 996  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
__inline static struct ath_common *ath9k_hw_common(struct ath_hw *ah)
{
  #line 998 
  return & ah->common;
}

#line 1063 
#line 1063 
void ath9k_hw_reset_tsf(struct ath_hw *);
#line 1069 
#line 1069 
void ath9k_hw_beaconinit(struct ath_hw *, u32, u32);
#line 1070 
#line 1070 
void ath9k_hw_set_sta_beacon_timers(struct ath_hw *, struct ath9k_beacon_state *);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-beacon.h"
#line 19 
int ath9k_cmn_beacon_config_sta(struct ath_hw *, struct ath_beacon_config *, struct ath9k_beacon_state *);
#line 22 
#line 22 
void ath9k_cmn_beacon_config_adhoc(struct ath_hw *, struct ath_beacon_config *);
#line 24 
#line 24 
void ath9k_cmn_beacon_config_ap(struct ath_hw *, struct ath_beacon_config *, unsigned int);
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 209 
int htc_send(struct htc_target *target, struct sk_buff *skb);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 185 
int ath9k_wmi_cmd(struct wmi *wmi, enum wmi_cmd_id cmd_id, u8 *cmd_buf, u32 cmd_len, u8 *rsp_buf, u32 rsp_len, u32 timeout);
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
__inline static struct ath9k_htc_tx_ctl *HTC_SKB_CB(struct sk_buff *skb)
{
  #line 320 
  struct ieee80211_tx_info *tx_info = IEEE80211_SKB_CB(skb);
  #line 324 
  return (struct ath9k_htc_tx_ctl *)(& tx_info->__anonCompField_ieee80211_tx_info_195.driver_data);
}

#line 544 
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_assign_bslot(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif);
#line 546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_remove_bslot(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif);
#line 548  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_set_tsfadjust(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif);
#line 550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beaconq_config(struct ath9k_htc_priv *priv);
#line 551  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beacon_config(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif);
#line 553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beacon_reconfig(struct ath9k_htc_priv *priv);
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_swba(struct ath9k_htc_priv *priv, struct wmi_event_swba *swba);
#line 561  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beaconep(void *drv_priv, struct sk_buff *skb, enum htc_endpoint_id ep_id, bool txok);
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 571 
int ath9k_htc_tx_start(struct ath9k_htc_priv *priv, struct ieee80211_sta *sta, struct sk_buff *skb, u8 slot, bool is_cab);
#line 582 
#line 582 
int ath9k_htc_tx_get_slot(struct ath9k_htc_priv *priv);
#line 583 
#line 583 
void ath9k_htc_tx_clear_slot(struct ath9k_htc_priv *priv, int slot);
#line 588 
#line 509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
bool ath9k_htc_csa_is_finished(struct ath9k_htc_priv *priv);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beaconq_config(struct ath9k_htc_priv *priv)
{
  #line 24 
  struct ath9k_tx_queue_info qi;
  #line 24 
  struct ath9k_tx_queue_info qi_be;
  #line 23 
  struct ath_hw *ah = priv->ah;
  #line 26 
  memset((void *)(& qi),0,60UL);
  #line 27 
  memset((void *)(& qi_be),0,60UL);
  #line 29 
  ath9k_hw_get_txq_props(ah,(int)priv->beacon.beaconq,& qi);
  #line 31 
  if ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_AP || (priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT) {
    #line 33 
    qi.tqi_aifs = 1U;
    #line 34 
    qi.tqi_cwmin = 0U;
    #line 35 
    qi.tqi_cwmax = 0U;
  }
  else 
    #line 36 
    if ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
      #line 37 
      int qnum = priv->hwq_map[2];
      #line 39 
      ath9k_hw_get_txq_props(ah,qnum,& qi_be);
      #line 41 
      qi.tqi_aifs = qi_be.tqi_aifs;
      #line 48 
      if (ah->slottime == 20U) 
                               #line 49 
                               qi.tqi_cwmin = qi_be.tqi_cwmin * 2U; else 
                                                                    #line 51 
                                                                    qi.tqi_cwmin = qi_be.tqi_cwmin * 4U;
      #line 53 
      qi.tqi_cwmax = qi_be.tqi_cwmax;
    }
  #line 57 
  if (ath9k_hw_set_txq_props(ah,(int)priv->beacon.beaconq,& qi)) 
                                                                 #line 61 
                                                                 ath9k_hw_resettxqueue(ah,priv->beacon.beaconq);
  else {
    #line 58 
    ;
    #line 58 
    ath_printk((char *)"\001",ath9k_hw_common(ah),(char *)"Unable to update beacon queue %u!\n",priv->beacon.beaconq);
  }
  #line 62 
  return;
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_beacon_init(struct ath9k_htc_priv *priv, struct ath_beacon_config *conf, bool reset_tsf)
{
  #line 73 
  int ret;
  #line 75 
  u8 cmd_rsp;
  #line 72 
  struct ath_hw *ah = priv->ah;
  #line 74 
  __be32 htc_imask = 0U;
  #line 77 
  if (conf->intval > 40959U) 
                             #line 78 
                             ah->config.sw_beacon_response_time = 40; else 
                                                                    #line 80 
                                                                    ah->config.sw_beacon_response_time = 10;
  #line 82 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DISABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 83 
  if ((int)reset_tsf != 0) 
                           #line 84 
                           ath9k_hw_reset_tsf(ah);
  #line 85 
  ath9k_htc_beaconq_config(priv);
  #line 86 
  ath9k_hw_beaconinit(ah,conf->nexttbtt,conf->intval);
  #line 87 
  priv->beacon.bmisscnt = 0U;
  #line 88 
  htc_imask = __builtin_bswap32((unsigned int)ah->imask);
  #line 89 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_ENABLE_INTR_CMDID,(u8 *)(& htc_imask),4U,& cmd_rsp,1U,500U);
  #line 90 
  return;
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_beacon_config_sta(struct ath9k_htc_priv *priv, struct ath_beacon_config *bss_conf)
{
  #line 95 
  struct ath9k_beacon_state bs;
  #line 98 
  int ret;
  #line 99 
  u8 cmd_rsp;
  #line 96 
  enum ath9k_int imask = (enum ath9k_int)0;
  #line 97 
  __be32 htc_imask = 0U;
  #line 101 
  if (ath9k_cmn_beacon_config_sta(priv->ah,bss_conf,& bs) == -1) 
                                                                 #line 102 
                                                                 return;
  #line 104 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DISABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 105 
  ath9k_hw_set_sta_beacon_timers(priv->ah,& bs);
  #line 106 
  imask = (enum ath9k_int)((unsigned int)imask | 262144U);
  #line 107 
  htc_imask = __builtin_bswap32((unsigned int)imask);
  #line 108 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_ENABLE_INTR_CMDID,(u8 *)(& htc_imask),4U,& cmd_rsp,1U,500U);
  #line 109 
  return;
}

#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_beacon_config_ap(struct ath9k_htc_priv *priv, struct ath_beacon_config *conf)
{
  #line 114 
  struct ath_hw *ah = priv->ah;
  #line 115 
  ah->imask = (enum ath9k_int)0;
  #line 117 
  ath9k_cmn_beacon_config_ap(ah,conf,2U);
  #line 118 
  ath9k_htc_beacon_init(priv,conf,(_Bool)0);
  #line 119 
  return;
}

#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_beacon_config_adhoc(struct ath9k_htc_priv *priv, struct ath_beacon_config *conf)
{
  #line 124 
  struct ath_hw *ah = priv->ah;
  #line 125 
  ah->imask = (enum ath9k_int)0;
  #line 127 
  ath9k_cmn_beacon_config_adhoc(ah,conf);
  #line 128 
  ath9k_htc_beacon_init(priv,conf,(_Bool)((bool)((int)conf->ibss_creator) != 0));
  #line 129 
  return;
}

#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beaconep(void *drv_priv, struct sk_buff *skb, enum htc_endpoint_id ep_id, bool txok)
{
  #line 134 
  dev_kfree_skb_any(skb);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_send_buffered(struct ath9k_htc_priv *priv, int slot)
{
  #line 141 
  struct ieee80211_vif *vif;
  #line 142 
  struct sk_buff *skb;
  #line 143 
  struct ieee80211_hdr *hdr;
  #line 144 
  int padpos;
  #line 144 
  int padsize;
  #line 144 
  int ret;
  #line 144 
  int tx_slot;
  #line 140 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 146 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 148 
  vif = priv->beacon.bslot[slot];
  #line 150 
  skb = ieee80211_get_buffered_bc(priv->hw,vif);
  #line 152 
  while (skb != (struct sk_buff *)0) {
    #line 153 
    hdr = (struct ieee80211_hdr *)skb->data;
    #line 155 
    padpos = (int)ieee80211_hdrlen((unsigned short)((int)hdr->frame_control));
    #line 156 
    padsize = padpos & 3;
    #line 157 
    if (padsize != 0 && skb->len > (unsigned int)padpos) {
      #line 158 
      ;
      #line 158 
      if (skb_headroom(skb) < (unsigned int)padsize) {
        #line 159 
        dev_kfree_skb_any(skb);
        #line 160 
        goto next;
      }
      #line 162 
      skb_push(skb,(unsigned int)padsize);
      #line 163 
      __memmove((void *)skb->data,(void *)(skb->data + (unsigned long)padsize),(unsigned long)padpos);
    }
    #line 166 
    tx_slot = ath9k_htc_tx_get_slot(priv);
    #line 167 
    if (tx_slot < 0) {
      #line 168 
      if ((common->debug_mask & 128) != 0) 
                                           #line 168 
                                           ath_printk((char *)"\001",common,(char *)"No free CAB slot\n");
      #line 169 
      dev_kfree_skb_any(skb);
      #line 170 
      goto next;
    }
    #line 173 
    ret = ath9k_htc_tx_start(priv,(struct ieee80211_sta *)0,skb,(unsigned char)((int)((unsigned char)tx_slot)),(_Bool)1);
    #line 174 
    if (ret != 0) {
      #line 175 
      ath9k_htc_tx_clear_slot(priv,tx_slot);
      #line 176 
      dev_kfree_skb_any(skb);
      #line 178 
      if ((common->debug_mask & 128) != 0) 
                                           #line 178 
                                           ath_printk((char *)"\001",common,(char *)"Failed to send CAB frame\n");
    }
    else {
      #line 180 
      cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx(& priv->tx.tx_lock);
      #line 181 
      (priv->tx.queued_cnt) ++;
      #line 182 
      cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx(& priv->tx.tx_lock);
    }
    #line 184 
    next: 
          #line 184 
    ;
    #line 185 
    skb = ieee80211_get_buffered_bc(priv->hw,vif);
  }
  #line 188 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 189 
  return;
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_send_beacon(struct ath9k_htc_priv *priv, int slot)
{
  #line 195 
  struct ieee80211_vif *vif;
  #line 196 
  struct ath9k_htc_vif *avp;
  #line 197 
  struct tx_beacon_header beacon_hdr;
  #line 198 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 199 
  struct ieee80211_tx_info *info;
  #line 200 
  struct ieee80211_mgmt *mgmt;
  #line 201 
  struct sk_buff *beacon;
  #line 202 
  u8 *tx_fhdr;
  #line 203 
  int ret;
  #line 194 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 205 
  memset((void *)(& beacon_hdr),0,4UL);
  #line 207 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 209 
  vif = priv->beacon.bslot[slot];
  #line 210 
  avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 212 
  if ((long)((int)test_bit(5L,& common->op_flags) != 0) != 0L) {
    #line 213 
    cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
    #line 214 
    return;
  }
  #line 218 
  beacon = ieee80211_beacon_get(priv->hw,vif);
  #line 219 
  if (beacon == (struct sk_buff *)0) {
    #line 220 
    cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
    #line 221 
    return;
  }
  #line 228 
  mgmt = (struct ieee80211_mgmt *)beacon->data;
  #line 229 
  mgmt->u.beacon.timestamp = avp->tsfadjust;
  #line 231 
  info = IEEE80211_SKB_CB(beacon);
  #line 232 
  if ((info->flags & 2U) != 0U) {
    #line 233 
    struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)beacon->data;
    #line 235 
    avp->seq_no = (unsigned short)((unsigned int)avp->seq_no + 16U);
    #line 236 
    hdr->seq_ctrl = (unsigned short)((unsigned int)hdr->seq_ctrl & 15U);
    #line 237 
    hdr->seq_ctrl = (unsigned short)((int)hdr->seq_ctrl | (int)avp->seq_no);
  }
  #line 240 
  tx_ctl = HTC_SKB_CB(beacon);
  #line 241 
  memset((void *)tx_ctl,0,16UL);
  #line 243 
  tx_ctl->type = (unsigned char)3U;
  #line 244 
  tx_ctl->epid = (unsigned char)priv->beacon_ep;
  #line 246 
  beacon_hdr.vif_index = avp->index;
  #line 247 
  tx_fhdr = (u8 *)skb_push(beacon,4U);
  #line 248 
  memcpy((void *)tx_fhdr,(void *)(& beacon_hdr),4UL);
  #line 250 
  ret = htc_send(priv->htc,beacon);
  #line 251 
  if (ret != 0) {
    #line 252 
    if (ret == -12) 
      #line 253 
      if ((common->debug_mask & 16384) != 0) 
                                             #line 253 
                                             ath_printk((char *)"\001",common,(char *)"Failed to send beacon, no free TX buffer\n");
    #line 256 
    dev_kfree_skb_any(beacon);
  }
  #line 259 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 261 
  ath9k_htc_csa_is_finished(priv);
  #line 262 
  return;
}

#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static int ath9k_htc_choose_bslot(struct ath9k_htc_priv *priv, struct wmi_event_swba *swba)
{
  #line 268 
  u64 tsf;
  #line 269 
  u32 tsftu;
  #line 270 
  u16 intval;
  #line 271 
  int slot;
  #line 267 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 273 
  intval = (unsigned short)priv->cur_beacon_conf.beacon_interval;
  #line 275 
  tsf = (u64)__builtin_bswap64((unsigned long)swba->tsf);
  #line 276 
  tsftu = ((unsigned int)(tsf >> 32) << 22) | ((unsigned int)tsf >> 10);
  #line 277 
  slot = (int)(((tsftu % (unsigned int)intval) * 2U) / (unsigned int)intval);
  #line 278 
  slot = 1 - slot;
  #line 280 
  if ((common->debug_mask & 256) != 0) 
                                       #line 280 
                                       ath_printk((char *)"\001",common,(char *)"Choose slot: %d, tsf: %llu, tsftu: %u, intval: %u\n",slot,tsf,tsftu,(int)intval);
  #line 284 
  return slot;
}

#line 287  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_swba(struct ath9k_htc_priv *priv, struct wmi_event_swba *swba)
{
  #line 291 
  int slot;
  #line 290 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 293 
  if ((unsigned int)swba->beacon_pending != 0U) {
    #line 294 
    (priv->beacon.bmisscnt) ++;
    #line 295 
    if (priv->beacon.bmisscnt > 10U) {
      #line 296 
      if ((common->debug_mask & 16384) != 0) 
                                             #line 296 
                                             ath_printk((char *)"\001",common,(char *)"Beacon stuck, HW reset\n");
      #line 297 
      ieee80211_queue_work(priv->hw,& priv->fatal_work);
    }
    #line 300 
    return;
  }
  #line 303 
  if (priv->beacon.bmisscnt != 0U) {
    #line 304 
    if ((common->debug_mask & 16384) != 0) 
                                           #line 304 
                                           ath_printk((char *)"\001",common,(char *)"Resuming beacon xmit after %u misses\n",priv->beacon.bmisscnt);
    #line 307 
    priv->beacon.bmisscnt = 0U;
  }
  #line 310 
  slot = ath9k_htc_choose_bslot(priv,swba);
  #line 311 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 312 
  if (priv->beacon.bslot[slot] == (struct ieee80211_vif *)0) {
    #line 313 
    cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
    #line 314 
    return;
  }
  #line 316 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 318 
  ath9k_htc_send_buffered(priv,slot);
  #line 319 
  ath9k_htc_send_beacon(priv,slot);
  #line 320 
  return;
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_assign_bslot(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif)
{
  #line 325 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 326 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 327 
  int i = 0;
  #line 329 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 330 
  i = 0;
  #line 330 
  while (i <= 1) {
    #line 331 
    if (priv->beacon.bslot[i] == (struct ieee80211_vif *)0) {
      #line 332 
      avp->bslot = i;
      #line 333 
      break;
    }
    #line 330 
    i ++;
  }
  #line 337 
  priv->beacon.bslot[avp->bslot] = vif;
  #line 338 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 340 
  if ((common->debug_mask & 512) != 0) 
                                       #line 340 
                                       ath_printk((char *)"\001",common,(char *)"Added interface at beacon slot: %d\n",avp->bslot);
  #line 341 
  return;
}

#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_remove_bslot(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif)
{
  #line 347 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 348 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 350 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 351 
  priv->beacon.bslot[avp->bslot] = (struct ieee80211_vif *)0;
  #line 352 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(& priv->beacon_lock);
  #line 354 
  if ((common->debug_mask & 512) != 0) 
                                       #line 354 
                                       ath_printk((char *)"\001",common,(char *)"Removed interface at beacon slot: %d\n",avp->bslot);
  #line 355 
  return;
}

#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_set_tsfadjust(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif)
{
  #line 368 
  u64 tsfadjust;
  #line 365 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 366 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 367 
  struct ath_beacon_config *cur_conf = & priv->cur_beacon_conf;
  #line 370 
  if (avp->bslot == 0) 
                       #line 371 
                       return;
  #line 378 
  tsfadjust = (unsigned long long)((cur_conf->beacon_interval * avp->bslot) / 2);
  #line 379 
  avp->tsfadjust = tsfadjust << 10;
  #line 381 
  if ((common->debug_mask & 512) != 0) 
                                       #line 381 
                                       ath_printk((char *)"\001",common,(char *)"tsfadjust is: %llu for bslot: %d\n",tsfadjust,avp->bslot);
  #line 382 
  return;
}

#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static void ath9k_htc_beacon_iter(void *data, u8 *mac, struct ieee80211_vif *vif)
{
  #line 387 
  bool *beacon_configured = (bool *)data;
  #line 388 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 390 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION && (int)avp->beacon_configured != 0) 
    #line 392 
    *beacon_configured = (_Bool)1;
  #line 393 
  return;
}

#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
static bool ath9k_htc_check_beacon_config(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif)
{
  #line 401 
  bool beacon_configured;
  #line 398 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 399 
  struct ath_beacon_config *cur_conf = & priv->cur_beacon_conf;
  #line 400 
  struct ieee80211_bss_conf *bss_conf = & vif->bss_conf;
  #line 408 
  if ((((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_AP && (unsigned int)priv->num_ap_vif > 1U) && vif->type == (unsigned int)NL80211_IFTYPE_AP) && cur_conf->beacon_interval != (int)bss_conf->beacon_int) {
    #line 412 
    if ((common->debug_mask & 512) != 0) 
                                         #line 412 
                                         ath_printk((char *)"\001",common,(char *)"Changing beacon interval of multiple AP interfaces !\n");
    #line 414 
    return (_Bool)0;
  }
  #line 421 
  if ((unsigned int)priv->num_ap_vif != 0U && vif->type != (unsigned int)NL80211_IFTYPE_AP) {
    #line 423 
    if ((common->debug_mask & 512) != 0) 
                                         #line 423 
                                         ath_printk((char *)"\001",common,(char *)"HW in AP mode, cannot set STA beacon parameters\n");
    #line 425 
    return (_Bool)0;
  }
  #line 432 
  if (((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_STATION && (unsigned int)priv->num_sta_vif > 1U) && vif->type == (unsigned int)NL80211_IFTYPE_STATION) {
    #line 435 
    beacon_configured = (_Bool)0;
    #line 436 
    ieee80211_iterate_active_interfaces_atomic(priv->hw,1U,& ath9k_htc_beacon_iter,(void *)(& beacon_configured));
    #line 440 
    if ((int)beacon_configured != 0) {
      #line 441 
      if ((common->debug_mask & 512) != 0) 
                                           #line 441 
                                           ath_printk((char *)"\001",common,(char *)"Beacon already configured for a station interface\n");
      #line 443 
      return (_Bool)0;
    }
  }
  #line 447 
  return (_Bool)1;
}

#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beacon_config(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif)
{
  #line 453 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 454 
  struct ath_beacon_config *cur_conf = & priv->cur_beacon_conf;
  #line 455 
  struct ieee80211_bss_conf *bss_conf = & vif->bss_conf;
  #line 456 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 458 
  if (! ath9k_htc_check_beacon_config(priv,vif)) 
                                                 #line 459 
                                                 return;
  #line 461 
  cur_conf->beacon_interval = (int)bss_conf->beacon_int;
  #line 462 
  if (cur_conf->beacon_interval == 0) 
                                      #line 463 
                                      cur_conf->beacon_interval = 100;
  #line 465 
  cur_conf->dtim_period = (unsigned short)bss_conf->dtim_period;
  #line 466 
  cur_conf->bmiss_timeout = (unsigned short)((unsigned int)((unsigned short)cur_conf->beacon_interval) * 10U);
  #line 469 
  switch ((unsigned int)vif->type) {
    #line 470 
    case (unsigned int)2: 
                          #line 470 
    ;
    #line 471 
    ath9k_htc_beacon_config_sta(priv,cur_conf);
    #line 472 
    avp->beacon_configured = (_Bool)1;
    #line 473 
    break;
    #line 474 
    case (unsigned int)1: 
                          #line 474 
    ;
    #line 475 
    ath9k_htc_beacon_config_adhoc(priv,cur_conf);
    #line 476 
    break;
    #line 477 
    case (unsigned int)7: 
                          #line 477 
    ;
    #line 478 
    case (unsigned int)3: 
                          #line 478 
    ;
    #line 479 
    ath9k_htc_beacon_config_ap(priv,cur_conf);
    #line 480 
    break;
    #line 481 
    default: 
             #line 481 
    ;
    #line 482 
    if ((common->debug_mask & 512) != 0) 
                                         #line 482 
                                         ath_printk((char *)"\001",common,(char *)"Unsupported beaconing mode\n");
    #line 483 
    return;
  }
  #line 485 
  return;
}

#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
void ath9k_htc_beacon_reconfig(struct ath9k_htc_priv *priv)
{
  #line 489 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 490 
  struct ath_beacon_config *cur_conf = & priv->cur_beacon_conf;
  #line 492 
  switch ((unsigned int)(priv->ah)->opmode) {
    #line 493 
    case (unsigned int)2: 
                          #line 493 
    ;
    #line 494 
    ath9k_htc_beacon_config_sta(priv,cur_conf);
    #line 495 
    break;
    #line 496 
    case (unsigned int)1: 
                          #line 496 
    ;
    #line 497 
    ath9k_htc_beacon_config_adhoc(priv,cur_conf);
    #line 498 
    break;
    #line 499 
    case (unsigned int)7: 
                          #line 499 
    ;
    #line 500 
    case (unsigned int)3: 
                          #line 500 
    ;
    #line 501 
    ath9k_htc_beacon_config_ap(priv,cur_conf);
    #line 502 
    break;
    #line 503 
    default: 
             #line 503 
    ;
    #line 504 
    if ((common->debug_mask & 512) != 0) 
                                         #line 504 
                                         ath_printk((char *)"\001",common,(char *)"Unsupported beaconing mode\n");
    #line 505 
    return;
  }
  #line 507 
  return;
}

#line 509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_beacon.c"
bool ath9k_htc_csa_is_finished(struct ath9k_htc_priv *priv)
{
  #line 511 
  struct ieee80211_vif *vif;
  #line 513 
  vif = priv->csa_vif;
  #line 514 
  if (vif == (struct ieee80211_vif *)0 || ! vif->csa_active) 
                                                             #line 515 
                                                             return (_Bool)0;
  #line 517 
  if (! ieee80211_csa_is_complete(vif)) 
                                        #line 518 
                                        return (_Bool)0;
  #line 520 
  ieee80211_csa_finish(vif);
  #line 522 
  priv->csa_vif = (struct ieee80211_vif *)0;
  #line 523 
  return (_Bool)1;
}

#line 801  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv(spinlock_t *lock)
{
  #line 804 
  ldv_spin_model_lock((char *)"beacon_lock_of_ath9k_htc_priv");
  #line 806 
  spin_lock_bh(lock);
  #line 807 
  return;
}

#line 810  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx(spinlock_t *lock)
{
  #line 813 
  ldv_spin_model_lock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 815 
  spin_lock_bh(lock);
  #line 816 
  return;
}

#line 819  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx(spinlock_t *lock)
{
  #line 822 
  ldv_spin_model_unlock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 824 
  spin_unlock_bh(lock);
  #line 825 
  return;
}

#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_beacon.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv(spinlock_t *lock)
{
  #line 831 
  ldv_spin_model_unlock((char *)"beacon_lock_of_ath9k_htc_priv");
  #line 833 
  spin_unlock_bh(lock);
  #line 834 
  return;
}

/* compiler builtin: 
   unsigned short __builtin_bswap16(unsigned short);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 7  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_hst.i.aux"
#line 7 
void ldv_atomic_inc(atomic_t *v);
#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_1103 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 237 
#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_hst.i.aux"
static void atomic_inc(atomic_t *v);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void __init_completion(struct completion *x)
{
  #line 87 
  x->done = 0U;
  {
    #line 88 
    struct lock_class_key __key;
    #line 88 
    __init_waitqueue_head(& x->wait,(char *)"&x->wait",& __key);
  }
  #line 90 
  return;
}

#line 107 
#line 107 
unsigned long wait_for_completion_timeout(struct completion *, unsigned long);
#line 118 
#line 118 
void complete(struct completion *);
#line 1712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 668 
#line 488  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_hst.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1019 
void kfree_skb(struct sk_buff *);
#line 1032 
#line 1032 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);
#line 1046  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  #line 1049 
  return __alloc_skb(size,priority,0,-1);
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2253 
#line 2253 
void *skb_pull(struct sk_buff *, unsigned int);
#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  #line 2340 
  skb->data += (unsigned long)len;
  #line 2341 
  skb->tail += (unsigned int)len;
  #line 2342 
  return;
}

#line 2652 
#line 2652 
void skb_trim(struct sk_buff *, unsigned int);
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_init(struct htc_target *target);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_connect_service(struct htc_target *target, struct htc_service_connreq *service_connreq, enum htc_endpoint_id *conn_rsp_epid);
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_send_epid(struct htc_target *target, struct sk_buff *skb, enum htc_endpoint_id epid);
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void htc_stop(struct htc_target *target);
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void htc_start(struct htc_target *target);
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void htc_sta_drain(struct htc_target *target, u8 idx);
#line 216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_rx_msg(struct htc_target *htc_handle, struct sk_buff *skb, u32 len, u8 pipe_id);
#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_txcompletion_cb(struct htc_target *htc_handle, struct sk_buff *skb, bool txok);
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
struct htc_target *ath9k_htc_hw_alloc(void *hif_handle, struct ath9k_htc_hif *hif, struct device *dev);
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_hw_free(struct htc_target *htc);
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int ath9k_htc_hw_init(struct htc_target *target, struct device *dev, u16 devid, char *product, u32 drv_info);
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.h"
#line 509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_hw_deinit(struct htc_target *target, bool hot_unplug);
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 630 
int ath9k_htc_probe_device(struct htc_target *htc_handle, struct device *dev, u16 devid, char *product, u32 drv_info);
#line 632 
#line 632 
void ath9k_htc_disconnect_device(struct htc_target *htc_handle, bool hotunplug);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static int htc_issue_send(struct htc_target *target, struct sk_buff *skb, u16 len, u8 flags, u8 epid)
{
  #line 25 
  struct htc_frame_hdr *hdr;
  #line 27 
  int status;
  #line 26 
  struct htc_endpoint *endpoint = & target->endpoint[(int)epid];
  #line 29 
  hdr = (struct htc_frame_hdr *)skb_push(skb,8U);
  #line 30 
  hdr->endpoint_id = epid;
  #line 31 
  hdr->flags = flags;
  #line 32 
  hdr->payload_len = __builtin_bswap16((unsigned short)((int)len));
  #line 34 
  status = (*((target->hif)->send))(target->hif_dev,(unsigned char)((int)endpoint->ul_pipeid),skb);
  #line 36 
  return status;
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static struct htc_endpoint *get_next_avail_ep(struct htc_endpoint *endpoint)
{
  #line 41 
  enum htc_endpoint_id avail_epid;
  #line 43 
  avail_epid = 21;
  #line 43 
  while (avail_epid > ENDPOINT0) {
    #line 44 
    if ((unsigned int)(endpoint + (unsigned long)avail_epid)->service_id == 0U) 
      #line 45 
      return endpoint + (unsigned long)avail_epid;
    #line 43 
    avail_epid --;
  }
  #line 46 
  return (struct htc_endpoint *)0;
}

#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static u8 service_to_ulpipe(u16 service_id)
{
  #line 51 
  switch ((int)service_id) {
    #line 52 
    case 256: 
              #line 52 
    ;
    #line 53 
    return (unsigned char)4U;
    #line 54 
    case 257: 
              #line 54 
    ;
    #line 55 
    case 258: 
              #line 55 
    ;
    #line 56 
    case 259: 
              #line 56 
    ;
    #line 57 
    case 260: 
              #line 57 
    ;
    #line 58 
    case 261: 
              #line 58 
    ;
    #line 59 
    case 262: 
              #line 59 
    ;
    #line 60 
    case 263: 
              #line 60 
    ;
    #line 61 
    case 264: 
              #line 61 
    ;
    #line 62 
    return (unsigned char)1U;
    #line 63 
    default: 
             #line 63 
    ;
    #line 64 
    return (unsigned char)0U;
  }
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static u8 service_to_dlpipe(u16 service_id)
{
  #line 70 
  switch ((int)service_id) {
    #line 71 
    case 256: 
              #line 71 
    ;
    #line 72 
    return (unsigned char)3U;
    #line 73 
    case 257: 
              #line 73 
    ;
    #line 74 
    case 258: 
              #line 74 
    ;
    #line 75 
    case 259: 
              #line 75 
    ;
    #line 76 
    case 260: 
              #line 76 
    ;
    #line 77 
    case 261: 
              #line 77 
    ;
    #line 78 
    case 262: 
              #line 78 
    ;
    #line 79 
    case 263: 
              #line 79 
    ;
    #line 80 
    case 264: 
              #line 80 
    ;
    #line 81 
    return (unsigned char)2U;
    #line 82 
    default: 
             #line 82 
    ;
    #line 83 
    return (unsigned char)0U;
  }
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static void htc_process_target_rdy(struct htc_target *target, void *buf)
{
  #line 90 
  struct htc_endpoint *endpoint;
  #line 91 
  struct htc_ready_msg *htc_ready_msg = (struct htc_ready_msg *)buf;
  #line 93 
  target->credit_size = __builtin_bswap16((unsigned short)((int)htc_ready_msg->credit_size));
  #line 95 
  endpoint = & target->endpoint[0];
  #line 96 
  endpoint->service_id = (unsigned short)1U;
  #line 97 
  endpoint->max_msglen = 255;
  #line 98 
  atomic_inc(& target->tgt_ready);
  #line 99 
  complete(& target->target_wait);
  #line 100 
  return;
}

#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static void htc_process_conn_rsp(struct htc_target *target, struct htc_frame_hdr *htc_hdr)
{
  #line 105 
  struct htc_conn_svc_rspmsg *svc_rspmsg;
  #line 106 
  struct htc_endpoint *endpoint;
  #line 107 
  u16 service_id;
  #line 108 
  u16 max_msglen;
  #line 109 
  enum htc_endpoint_id epid;
  #line 109 
  enum htc_endpoint_id tepid;
  #line 106 
  struct htc_endpoint *tmp_endpoint = (struct htc_endpoint *)0;
  #line 111 
  svc_rspmsg = (struct htc_conn_svc_rspmsg *)((void *)htc_hdr + 8UL);
  #line 114 
  if ((unsigned int)svc_rspmsg->status == 0U) {
    #line 115 
    epid = (enum htc_endpoint_id)svc_rspmsg->endpoint_id;
    #line 116 
    service_id = __builtin_bswap16((unsigned short)((int)svc_rspmsg->service_id));
    #line 117 
    max_msglen = __builtin_bswap16((unsigned short)((int)svc_rspmsg->max_msg_len));
    #line 118 
    endpoint = & target->endpoint[(int)epid];
    #line 120 
    tepid = 21;
    #line 120 
    while (tepid > ENDPOINT0) {
      #line 121 
      tmp_endpoint = & target->endpoint[(int)tepid];
      #line 122 
      if ((int)tmp_endpoint->service_id == (int)service_id) {
        #line 123 
        tmp_endpoint->service_id = (unsigned short)0U;
        #line 124 
        break;
      }
      #line 120 
      tepid --;
    }
    #line 128 
    if (tepid == ENDPOINT0) 
                            #line 129 
                            return;
    #line 131 
    endpoint->service_id = service_id;
    #line 132 
    endpoint->max_txqdepth = tmp_endpoint->max_txqdepth;
    #line 133 
    endpoint->ep_callbacks = tmp_endpoint->ep_callbacks;
    #line 134 
    endpoint->ul_pipeid = tmp_endpoint->ul_pipeid;
    #line 135 
    endpoint->dl_pipeid = tmp_endpoint->dl_pipeid;
    #line 136 
    endpoint->max_msglen = (int)max_msglen;
    #line 137 
    target->conn_rsp_epid = epid;
    #line 138 
    complete(& target->cmd_wait);
  }
  else 
       #line 140 
       target->conn_rsp_epid = ENDPOINT_UNUSED;
  #line 141 
  return;
}

#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static int htc_config_pipe_credits(struct htc_target *target)
{
  #line 146 
  struct sk_buff *skb;
  #line 147 
  struct htc_config_pipe_msg *cp_msg;
  #line 148 
  int ret;
  #line 149 
  unsigned long time_left;
  #line 151 
  skb = alloc_skb(58U,2592U);
  #line 152 
  if (skb == (struct sk_buff *)0) {
    #line 153 
    _dev_err(target->dev,(char *)"failed to allocate send buffer\n");
    #line 154 
    return -12;
  }
  #line 156 
  skb_reserve(skb,8);
  #line 158 
  cp_msg = (struct htc_config_pipe_msg *)skb_put(skb,4U);
  #line 160 
  cp_msg->message_id = (unsigned short)1280U;
  #line 161 
  cp_msg->pipe_id = (unsigned char)1U;
  #line 162 
  cp_msg->credits = (unsigned char)target->credits;
  #line 164 
  target->htc_flags = (unsigned char)((unsigned int)target->htc_flags | 2U);
  #line 166 
  ret = htc_issue_send(target,skb,(unsigned short)((int)((unsigned short)skb->len)),(unsigned char)0,(unsigned char)0);
  #line 167 
  if (ret != 0) 
                #line 168 
                goto err;
  #line 170 
  time_left = wait_for_completion_timeout(& target->cmd_wait,250UL);
  #line 171 
  if (time_left == 0UL) {
    #line 172 
    _dev_err(target->dev,(char *)"HTC credit config timeout\n");
    #line 173 
    kfree_skb(skb);
    #line 174 
    return -110;
  }
  #line 177 
  return 0;
  #line 178 
  err: 
       #line 178 
  ;
  #line 179 
  kfree_skb(skb);
  #line 180 
  return -22;
}

#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static int htc_setup_complete(struct htc_target *target)
{
  #line 185 
  struct sk_buff *skb;
  #line 186 
  struct htc_comp_msg *comp_msg;
  #line 188 
  unsigned long time_left;
  #line 187 
  int ret = 0;
  #line 190 
  skb = alloc_skb(58U,2592U);
  #line 191 
  if (skb == (struct sk_buff *)0) {
    #line 192 
    _dev_err(target->dev,(char *)"failed to allocate send buffer\n");
    #line 193 
    return -12;
  }
  #line 195 
  skb_reserve(skb,8);
  #line 197 
  comp_msg = (struct htc_comp_msg *)skb_put(skb,2U);
  #line 198 
  comp_msg->msg_id = (unsigned short)1024U;
  #line 200 
  target->htc_flags = (unsigned char)((unsigned int)target->htc_flags | 1U);
  #line 202 
  ret = htc_issue_send(target,skb,(unsigned short)((int)((unsigned short)skb->len)),(unsigned char)0,(unsigned char)0);
  #line 203 
  if (ret != 0) 
                #line 204 
                goto err;
  #line 206 
  time_left = wait_for_completion_timeout(& target->cmd_wait,250UL);
  #line 207 
  if (time_left == 0UL) {
    #line 208 
    _dev_err(target->dev,(char *)"HTC start timeout\n");
    #line 209 
    kfree_skb(skb);
    #line 210 
    return -110;
  }
  #line 213 
  return 0;
  #line 215 
  err: 
       #line 215 
  ;
  #line 216 
  kfree_skb(skb);
  #line 217 
  return -22;
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_init(struct htc_target *target)
{
  #line 224 
  int ret;
  #line 226 
  ret = htc_config_pipe_credits(target);
  #line 227 
  if (ret != 0) 
                #line 228 
                return ret;
  #line 230 
  return htc_setup_complete(target);
}

#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_connect_service(struct htc_target *target, struct htc_service_connreq *service_connreq, enum htc_endpoint_id *conn_rsp_epid)
{
  #line 237 
  struct sk_buff *skb;
  #line 238 
  struct htc_endpoint *endpoint;
  #line 239 
  struct htc_conn_svc_msg *conn_msg;
  #line 240 
  int ret;
  #line 241 
  unsigned long time_left;
  #line 244 
  endpoint = get_next_avail_ep((struct htc_endpoint *)(& target->endpoint));
  #line 245 
  if (endpoint == (struct htc_endpoint *)0) {
    #line 246 
    _dev_err(target->dev,(char *)"Endpoint is not available for service %d\n",(int)service_connreq->service_id);
    #line 248 
    return -22;
  }
  #line 251 
  endpoint->service_id = service_connreq->service_id;
  #line 252 
  endpoint->max_txqdepth = service_connreq->max_send_qdepth;
  #line 253 
  endpoint->ul_pipeid = service_to_ulpipe((unsigned short)((int)service_connreq->service_id));
  #line 254 
  endpoint->dl_pipeid = service_to_dlpipe((unsigned short)((int)service_connreq->service_id));
  #line 255 
  endpoint->ep_callbacks = service_connreq->ep_callbacks;
  #line 257 
  skb = alloc_skb(18U,2592U);
  #line 259 
  if (skb == (struct sk_buff *)0) {
    #line 260 
    _dev_err(target->dev,(char *)"Failed to allocate buf to send");
    #line 262 
    return -12;
  }
  #line 265 
  skb_reserve(skb,8);
  #line 267 
  conn_msg = (struct htc_conn_svc_msg *)skb_put(skb,10U);
  #line 268 
  conn_msg->service_id = __builtin_bswap16((unsigned short)((int)service_connreq->service_id));
  #line 269 
  conn_msg->msg_id = (unsigned short)512U;
  #line 270 
  conn_msg->con_flags = __builtin_bswap16((unsigned short)((int)service_connreq->con_flags));
  #line 271 
  conn_msg->dl_pipeid = endpoint->dl_pipeid;
  #line 272 
  conn_msg->ul_pipeid = endpoint->ul_pipeid;
  #line 274 
  ret = htc_issue_send(target,skb,(unsigned short)((int)((unsigned short)skb->len)),(unsigned char)0,(unsigned char)0);
  #line 275 
  if (ret != 0) 
                #line 276 
                goto err;
  #line 278 
  time_left = wait_for_completion_timeout(& target->cmd_wait,250UL);
  #line 279 
  if (time_left == 0UL) {
    #line 280 
    _dev_err(target->dev,(char *)"Service connection timeout for: %d\n",(int)service_connreq->service_id);
    #line 282 
    kfree_skb(skb);
    #line 283 
    return -110;
  }
  #line 286 
  *conn_rsp_epid = target->conn_rsp_epid;
  #line 287 
  return 0;
  #line 288 
  err: 
       #line 288 
  ;
  #line 289 
  kfree_skb(skb);
  #line 290 
  return ret;
}

#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_send(struct htc_target *target, struct sk_buff *skb)
{
  #line 295 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 297 
  tx_ctl = HTC_SKB_CB(skb);
  #line 298 
  return htc_issue_send(target,skb,
                     (unsigned short)((int)((unsigned short)skb->len)),
                     (unsigned char)0,(unsigned char)((int)tx_ctl->epid));
}

#line 301  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int htc_send_epid(struct htc_target *target, struct sk_buff *skb, enum htc_endpoint_id epid)
{
  #line 304 
  return htc_issue_send(target,skb,
                     (unsigned short)((int)((unsigned short)skb->len)),
                     (unsigned char)0,
                     (unsigned char)((int)((unsigned char)epid)));
}

#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void htc_stop(struct htc_target *target)
{
  #line 309 
  (*((target->hif)->stop))(target->hif_dev);
  #line 310 
  return;
}

#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void htc_start(struct htc_target *target)
{
  #line 314 
  (*((target->hif)->start))(target->hif_dev);
  #line 315 
  return;
}

#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void htc_sta_drain(struct htc_target *target, u8 idx)
{
  #line 319 
  (*((target->hif)->sta_drain))(target->hif_dev,(unsigned char)((int)idx));
  #line 320 
  return;
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_txcompletion_cb(struct htc_target *htc_handle, struct sk_buff *skb, bool txok)
{
  #line 325 
  struct htc_endpoint *endpoint;
  #line 326 
  struct htc_frame_hdr *htc_hdr = (struct htc_frame_hdr *)0;
  #line 328 
  if (((unsigned long)htc_handle->htc_flags & 2UL) != 0UL) {
    #line 329 
    complete(& htc_handle->cmd_wait);
    #line 330 
    htc_handle->htc_flags = (unsigned char)((unsigned int)htc_handle->htc_flags & 253U);
    #line 331 
    goto ret;
  }
  #line 334 
  if (((unsigned long)htc_handle->htc_flags & 1UL) != 0UL) {
    #line 335 
    complete(& htc_handle->cmd_wait);
    #line 336 
    htc_handle->htc_flags = (unsigned char)((unsigned int)htc_handle->htc_flags & 254U);
    #line 337 
    goto ret;
  }
  #line 340 
  if (skb != (struct sk_buff *)0) {
    #line 341 
    htc_hdr = (struct htc_frame_hdr *)skb->data;
    #line 342 
    endpoint = & htc_handle->endpoint[(int)htc_hdr->endpoint_id];
    #line 343 
    skb_pull(skb,8U);
    #line 345 
    if (endpoint->ep_callbacks.tx != (void (*)(void *, struct sk_buff *, enum htc_endpoint_id , bool ))0) 
      #line 346 
      (*(endpoint->ep_callbacks.tx))(endpoint->ep_callbacks.priv,skb,(enum htc_endpoint_id)htc_hdr->endpoint_id,(_Bool)((bool)((int)txok) != 0)); else 
                                                                    #line 350 
                                                                    kfree_skb(skb);
  }
  #line 354 
  return;
  #line 355 
  ret: 
       #line 355 
  ;
  #line 356 
  kfree_skb(skb);
  #line 357 
  return;
}

#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
static void ath9k_htc_fw_panic_report(struct htc_target *htc_handle, struct sk_buff *skb)
{
  #line 362 
  uint32_t *pattern = (uint32_t *)skb->data;
  #line 364 
  switch (*pattern) {
    #line 365 
    case (uint32_t)857870745: 
                              #line 365 
    ;
    {
      #line 367 
      struct htc_panic_bad_vaddr *htc_panic;
      #line 368 
      htc_panic = (struct htc_panic_bad_vaddr *)skb->data;
      #line 369 
      _dev_err(htc_handle->dev,(char *)"ath: firmware panic! ",htc_panic->exccause,htc_panic->pc,htc_panic->badvaddr);
      #line 373 
      break;
    }
    #line 375 
    case (uint32_t)857871001: 
                              #line 375 
    ;
    {
      #line 377 
      struct htc_panic_bad_epid *htc_panic_0;
      #line 378 
      htc_panic_0 = (struct htc_panic_bad_epid *)skb->data;
      #line 379 
      _dev_err(htc_handle->dev,(char *)"ath: firmware panic! ",htc_panic_0->epid);
      #line 381 
      break;
    }
    #line 383 
    default: 
             #line 383 
    ;
    #line 384 
    _dev_err(htc_handle->dev,(char *)"ath: unknown panic pattern!\n");
    #line 385 
    break;
  }
  #line 387 
  return;
}

#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_rx_msg(struct htc_target *htc_handle, struct sk_buff *skb, u32 len, u8 pipe_id)
{
  #line 399 
  struct htc_frame_hdr *htc_hdr;
  #line 400 
  enum htc_endpoint_id epid;
  #line 401 
  struct htc_endpoint *endpoint;
  #line 402 
  __be16 *msg_id;
  #line 404 
  if (htc_handle == (struct htc_target *)0 || skb == (struct sk_buff *)0) 
    #line 405 
    return;
  #line 407 
  htc_hdr = (struct htc_frame_hdr *)skb->data;
  #line 408 
  epid = (enum htc_endpoint_id)htc_hdr->endpoint_id;
  #line 410 
  if (epid == 153) {
    #line 411 
    ath9k_htc_fw_panic_report(htc_handle,skb);
    #line 412 
    kfree_skb(skb);
    #line 413 
    return;
  }
  #line 416 
  if ((unsigned int)epid > 21U) {
    #line 417 
    if ((unsigned int)pipe_id != 3U) 
                                     #line 418 
                                     dev_kfree_skb_any(skb); else 
                                                                  #line 420 
                                                                  kfree_skb(skb);
    #line 421 
    return;
  }
  #line 424 
  if (epid == ENDPOINT0) {
    #line 427 
    if (((int)htc_hdr->flags & 2) != 0) {
      #line 428 
      if (__builtin_bswap32(*((__be32 *)skb->data)) == 12976128U) 
                                                                  #line 430 
                                                                  htc_hdr = (struct htc_frame_hdr *)(skb->data + 4U);
    }
    #line 434 
    msg_id = (__be16 *)((void *)htc_hdr + 8UL);
    #line 438 
    switch ((int)__builtin_bswap16((unsigned short)((int)*msg_id))) {
      #line 439 
      case 1: 
              #line 439 
      ;
      #line 440 
      htc_process_target_rdy(htc_handle,(void *)htc_hdr);
      #line 441 
      break;
      #line 442 
      case 3: 
              #line 442 
      ;
      #line 443 
      htc_process_conn_rsp(htc_handle,htc_hdr);
      #line 444 
      break;
      #line 445 
      default: 
               #line 445 
      ;
      #line 446 
      break;
    }
    #line 449 
    kfree_skb(skb);
  }
  else {
    #line 452 
    if (((int)htc_hdr->flags & 2) != 0) 
                                        #line 453 
                                        skb_trim(skb,len - (unsigned int)htc_hdr->control[0]);
    #line 455 
    skb_pull(skb,8U);
    #line 457 
    endpoint = & htc_handle->endpoint[(int)epid];
    #line 458 
    if (endpoint->ep_callbacks.rx != (void (*)(void *, struct sk_buff *, enum htc_endpoint_id ))0) 
      #line 459 
      (*(endpoint->ep_callbacks.rx))(endpoint->ep_callbacks.priv,skb,epid);
  }
  #line 461 
  return;
}

#line 464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
struct htc_target *ath9k_htc_hw_alloc(void *hif_handle, struct ath9k_htc_hif *hif, struct device *dev)
{
  #line 468 
  struct htc_endpoint *endpoint;
  #line 469 
  struct htc_target *target;
  #line 471 
  target = (struct htc_target *)kzalloc(1312UL,3264U);
  #line 472 
  if (target == (struct htc_target *)0) 
                                        #line 473 
                                        return (struct htc_target *)0;
  #line 475 
  __init_completion(& target->target_wait);
  #line 476 
  __init_completion(& target->cmd_wait);
  #line 478 
  target->hif = hif;
  #line 479 
  target->hif_dev = hif_handle;
  #line 480 
  target->dev = dev;
  #line 483 
  endpoint = & target->endpoint[0];
  #line 484 
  endpoint->ul_pipeid = hif->control_ul_pipe;
  #line 485 
  endpoint->dl_pipeid = hif->control_dl_pipe;
  #line 487 
  atomic_set(& target->tgt_ready,0);
  #line 489 
  return target;
}

#line 492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_hw_free(struct htc_target *htc)
{
  #line 494 
  kfree((void *)htc);
  #line 495 
  return;
}

#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
int ath9k_htc_hw_init(struct htc_target *target, struct device *dev, u16 devid, char *product, u32 drv_info)
{
  #line 501 
  if (ath9k_htc_probe_device(target,dev,(unsigned short)((int)devid),product,
                             drv_info) != 0) {
    #line 502 
    printk((char *)"\001");
    #line 503 
    return -19;
  }
  #line 506 
  return 0;
}

#line 509  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_hst.c"
void ath9k_htc_hw_deinit(struct htc_target *target, bool hot_unplug)
{
  #line 511 
  if (target != (struct htc_target *)0) 
                                        #line 512 
                                        ath9k_htc_disconnect_device(target,(_Bool)((bool)((int)hot_unplug) != 0));
  #line 513 
  return;
}

#line 185  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_hst.i.aux"
static void atomic_inc(atomic_t *v)
{
  #line 188 
  ldv_atomic_inc(v);
  #line 189 
  return;
}

#line 488  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_hst.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 491 
  return ldv_kzalloc(size,flags);
}

/* compiler builtin: 
   unsigned long __builtin_object_size(void *, int);   */
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  #line 45 
  unsigned long res;
  #line 46 
  ldv_inline_asm();
  #line 51 
  return res;
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  #line 72 
  unsigned long tmp_0;
  #line 72 
  if (0 != 0) 
              #line 72 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)(((((((((w & 256UL) != 0UL) + ((w & 512UL) != 0UL)) + ((w & 1024UL) != 0UL)) + ((w & 2048UL) != 0UL)) + ((w & 4096UL) != 0UL)) + ((w & 8192UL) != 0UL)) + ((w & 16384UL) != 0UL)) + ((w & 32768UL) != 0UL))) + ((unsigned int)(((((((((w & 65536UL) != 0UL) + ((w & 131072UL) != 0UL)) + ((w & 262144UL) != 0UL)) + ((w & 524288UL) != 0UL)) + ((w & 1048576UL) != 0UL)) + ((w & 2097152UL) != 0UL)) + ((w & 4194304UL) != 0UL)) + ((w & 8388608UL) != 0UL)) + (unsigned int)(((((((((w & 16777216UL) != 0UL) + ((w & 33554432UL) != 0UL)) + ((w & 67108864UL) != 0UL)) + ((w & 134217728UL) != 0UL)) + ((w & 268435456UL) != 0UL)) + ((w & 536870912UL) != 0UL)) + ((w & 1073741824UL) != 0UL)) + ((w & 2147483648UL) != 0UL)))) + (((unsigned int)(((((((((w & 4294967296UL) != 0UL) + ((w & 8589934592UL) != 0UL)) + ((w & 17179869184UL) != 0UL)) + ((w & 34359738368UL) != 0UL)) + ((w & 68719476736UL) != 0UL)) + ((w & 137438953472UL) != 0UL)) + ((w & 274877906944UL) != 0UL)) + ((w & 549755813888UL) != 0UL)) + (unsigned int)(((((((((w & 1099511627776UL) != 0UL) + ((w & 2199023255552UL) != 0UL)) + ((w & 4398046511104UL) != 0UL)) + ((w & 8796093022208UL) != 0UL)) + ((w & 17592186044416UL) != 0UL)) + ((w & 35184372088832UL) != 0UL)) + ((w & 70368744177664UL) != 0UL)) + ((w & 140737488355328UL) != 0UL))) + ((unsigned int)(((((((((w & 281474976710656UL) != 0UL) + ((w & 562949953421312UL) != 0UL)) + ((w & 1125899906842624UL) != 0UL)) + ((w & 2251799813685248UL) != 0UL)) + ((w & 4503599627370496UL) != 0UL)) + ((w & 9007199254740992UL) != 0UL)) + ((w & 18014398509481984UL) != 0UL)) + ((w & 36028797018963968UL) != 0UL)) + (unsigned int)(((((((((w & 72057594037927936UL) != 0UL) + ((w & 144115188075855872UL) != 0UL)) + ((w & 288230376151711744UL) != 0UL)) + ((w & 576460752303423488UL) != 0UL)) + ((w & 1152921504606846976UL) != 0UL)) + ((w & 2305843009213693952UL) != 0UL)) + ((w & 4611686018427387904UL) != 0UL)) + ((w & 9223372036854775808UL) != 0UL))))); else 
                                                                    #line 72 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  #line 72 
  return tmp_0;
}

#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 326 
int kstrtoull(char *, unsigned int, unsigned long long *);
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
__inline static int kstrtoul(char *s, unsigned int base, unsigned long *res)
{
  #line 352 
  return kstrtoull(s,base,(unsigned long long *)res);
}

#line 469 
#line 469 
int sprintf(char *, char * , ...);
#line 476 
#line 476 
int scnprintf(char *, size_t, char * , ...);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
#line 89 
void __warn_printk(char * , ...);
#line 151  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
#line 151 
int __bitmap_weight(unsigned long *, unsigned int);
#line 388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long *src, unsigned int nbits)
{
  #line 390 
  if (0 != 0 && nbits + 4294967295U <= 63U) {
    #line 391 
    return (int)hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
  }
  #line 392 
  return __bitmap_weight(src,nbits);
}

#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
#line 112 
void __check_object_size(void *, unsigned long, bool);
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void check_object_size(void *ptr, unsigned long n, bool to_user)
{
  #line 118 
  if (0 == 0) 
              #line 119 
              __check_object_size(ptr,n,(_Bool)((bool)((int)to_user) != 0));
  #line 120 
  return;
}

#line 128 
#line 128 
void __bad_copy_from(void);
#line 130 
#line 130 
void __bad_copy_to(void);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void copy_overflow(int size, unsigned long count)
{
  #line 134 
  int __ret_warn_on = 1;
  #line 134 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 134 
    __warn_printk((char *)"Buffer overflow detected (%d < %lu)!\n",size,count);
    #line 135 
    ldv_inline_asm();
    #line 136 
    ldv_inline_asm();
  }
  #line 134 
  long tmp = (long)(__ret_warn_on != 0);
  #line 136 
  return;
}

#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static bool check_copy_size(void *addr, size_t bytes, bool is_source)
{
  #line 150 
  int __ret_warn_on;
  #line 140 
  int sz = (int)__builtin_object_size(addr,0);
  #line 141 
  if ((long)(sz >= 0) != 0L && (long)((unsigned long)sz < bytes) != 0L) {
    #line 142 
    if (0 == 0) 
                #line 143 
                copy_overflow(sz,bytes);
    else 
      #line 144 
      if ((int)is_source != 0) 
                               #line 145 
                               __bad_copy_from(); else 
                                                       #line 147 
                                                       __bad_copy_to();
    #line 148 
    return (_Bool)0;
  }
  #line 150 
  __ret_warn_on = bytes > 2147483647UL;
  #line 150 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 151 
    ldv_inline_asm();
    #line 152 
    ldv_inline_asm();
  }
  #line 150 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 151 
                                                return (_Bool)0;
  #line 152 
  check_object_size(addr,bytes,(_Bool)((bool)((int)is_source) != 0));
  #line 153 
  return (_Bool)1;
}

#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 858  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_0(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 867  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_0(spinlock_t *lock);
#line 3013  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
#line 3013 
loff_t default_llseek(struct file *, loff_t, int);
#line 3300 
#line 3300 
int simple_open(struct inode *, struct file *);
#line 3337 
#line 3337 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void *, size_t);
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
#line 121 
unsigned long _copy_from_user(void *, void *, unsigned long);
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void *from, unsigned long n)
{
  #line 143 
  if ((long)((int)check_copy_size(to,n,(_Bool)0) != 0) != 0L) 
                                                              #line 144 
                                                              n = _copy_from_user(to,from,n);
  #line 145 
  return n;
}

#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 545  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags);
#line 1812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head *list_)
{
  #line 1814 
  return list_->qlen;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops);
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 876  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent);
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-debug.h"
#line 68 
void ath9k_cmn_debug_modal_eeprom(struct dentry *, struct ath_hw *);
#line 70 
#line 70 
void ath9k_cmn_debug_base_eeprom(struct dentry *, struct ath_hw *);
#line 72 
#line 72 
void ath9k_cmn_debug_stat_rx(struct ath_rx_stats *, struct ath_rx_status *);
#line 74 
#line 74 
void ath9k_cmn_debug_recv(struct dentry *, struct ath_rx_stats *);
#line 76 
#line 76 
void ath9k_cmn_debug_phy_err(struct dentry *, struct ath_rx_stats *);
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-spectral.h"
#line 172 
void ath9k_cmn_spectral_init_debug(struct ath_spec_scan_priv *, struct dentry *);
#line 173 
#line 173 
void ath9k_cmn_spectral_deinit_debug(struct ath_spec_scan_priv *);
#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_err_stat_rx(struct ath9k_htc_priv *priv, struct ath_rx_status *rs);
#line 365  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_get_et_strings(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u32 sset, u8 *data);
#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 435  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
int ath9k_htc_get_et_sset_count(struct ieee80211_hw *hw, struct ieee80211_vif *vif, int sset);
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_get_et_stats(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ethtool_stats *stats, u64 *data);
#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 596 
void ath9k_htc_ps_wakeup(struct ath9k_htc_priv *priv);
#line 597 
#line 597 
void ath9k_htc_ps_restore(struct ath9k_htc_priv *priv);
#line 638 
#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
int ath9k_htc_init_debug(struct ath_hw *ah);
#line 639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_deinit_debug(struct ath9k_htc_priv *priv);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_tgt_int_stats(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 23 
  struct ath9k_htc_target_int_stats cmd_rsp;
  #line 24 
  char buf[512U];
  #line 22 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 25 
  unsigned int len = 0U;
  #line 26 
  int ret = 0;
  #line 28 
  memset((void *)(& cmd_rsp),0,24UL);
  #line 30 
  ath9k_htc_ps_wakeup(priv);
  #line 32 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_INT_STATS_CMDID,(u8 *)0U,0U,(u8 *)(& cmd_rsp),24U,500U);
  #line 33 
  if (ret != 0) {
    #line 34 
    ath9k_htc_ps_restore(priv);
    #line 35 
    return -22L;
  }
  #line 38 
  ath9k_htc_ps_restore(priv);
  #line 42 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"RX",__builtin_bswap32(cmd_rsp.rx)) + len;
  #line 46 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"RXORN",__builtin_bswap32(cmd_rsp.rxorn)) + len;
  #line 50 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"RXEOL",__builtin_bswap32(cmd_rsp.rxeol)) + len;
  #line 54 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"TXURN",__builtin_bswap32(cmd_rsp.txurn)) + len;
  #line 58 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"TXTO",__builtin_bswap32(cmd_rsp.txto)) + len;
  #line 62 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"CST",__builtin_bswap32(cmd_rsp.cst)) + len;
  #line 64 
  if (len > 512U) 
                  #line 65 
                  len = 512U;
  #line 67 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                 (unsigned long)len);
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_tgt_int_stats = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_tgt_int_stats, .open = & simple_open};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_tgt_tx_stats(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 81 
  struct ath9k_htc_target_tx_stats cmd_rsp;
  #line 82 
  char buf[512U];
  #line 80 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 83 
  unsigned int len = 0U;
  #line 84 
  int ret = 0;
  #line 86 
  memset((void *)(& cmd_rsp),0,36UL);
  #line 88 
  ath9k_htc_ps_wakeup(priv);
  #line 90 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_TX_STATS_CMDID,(u8 *)0U,0U,(u8 *)(& cmd_rsp),36U,500U);
  #line 91 
  if (ret != 0) {
    #line 92 
    ath9k_htc_ps_restore(priv);
    #line 93 
    return -22L;
  }
  #line 96 
  ath9k_htc_ps_restore(priv);
  #line 100 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Xretries",__builtin_bswap32(cmd_rsp.xretries)) + len;
  #line 104 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"FifoErr",__builtin_bswap32(cmd_rsp.fifoerr)) + len;
  #line 108 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Filtered",__builtin_bswap32(cmd_rsp.filtered)) + len;
  #line 112 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"TimerExp",__builtin_bswap32(cmd_rsp.timer_exp)) + len;
  #line 116 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"ShortRetries",
                  __builtin_bswap32(cmd_rsp.shortretries)) + len;
  #line 120 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"LongRetries",
                   __builtin_bswap32(cmd_rsp.longretries)) + len;
  #line 124 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"QueueNull",__builtin_bswap32(cmd_rsp.qnull)) + len;
  #line 128 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"EncapFail",__builtin_bswap32(cmd_rsp.encap_fail)) + len;
  #line 132 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"NoBuf",__builtin_bswap32(cmd_rsp.nobuf)) + len;
  #line 134 
  if (len > 512U) 
                  #line 135 
                  len = 512U;
  #line 137 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                 (unsigned long)len);
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_tgt_tx_stats = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_tgt_tx_stats, .open = & simple_open};
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_tgt_rx_stats(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 151 
  struct ath9k_htc_target_rx_stats cmd_rsp;
  #line 152 
  char buf[512U];
  #line 150 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 153 
  unsigned int len = 0U;
  #line 154 
  int ret = 0;
  #line 156 
  memset((void *)(& cmd_rsp),0,12UL);
  #line 158 
  ath9k_htc_ps_wakeup(priv);
  #line 160 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_RX_STATS_CMDID,(u8 *)0U,0U,(u8 *)(& cmd_rsp),12U,500U);
  #line 161 
  if (ret != 0) {
    #line 162 
    ath9k_htc_ps_restore(priv);
    #line 163 
    return -22L;
  }
  #line 166 
  ath9k_htc_ps_restore(priv);
  #line 170 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"NoBuf",__builtin_bswap32(cmd_rsp.nobuf)) + len;
  #line 174 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"HostSend",__builtin_bswap32(cmd_rsp.host_send)) + len;
  #line 178 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"HostDone",__builtin_bswap32(cmd_rsp.host_done)) + len;
  #line 180 
  if (len > 512U) 
                  #line 181 
                  len = 512U;
  #line 183 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                (unsigned long)len);
}

#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_tgt_rx_stats = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_tgt_rx_stats, .open = & simple_open};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_xmit(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 197 
  char buf[512U];
  #line 196 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 198 
  unsigned int len = 0U;
  #line 202 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                (char *)"Buffers queued",priv->debug.tx_stats.buf_queued) + len;
  #line 205 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Buffers completed",
                  priv->debug.tx_stats.buf_completed) + len;
  #line 208 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"SKBs queued",priv->debug.tx_stats.skb_queued) + len;
  #line 211 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"SKBs success",priv->debug.tx_stats.skb_success) + len;
  #line 214 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"SKBs failed",priv->debug.tx_stats.skb_failed) + len;
  #line 217 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"CAB queued",priv->debug.tx_stats.cab_queued) + len;
  #line 221 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"BE queued",priv->debug.tx_stats.queue_stats[2]) + len;
  #line 224 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"BK queued",priv->debug.tx_stats.queue_stats[3]) + len;
  #line 227 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"VI queued",priv->debug.tx_stats.queue_stats[1]) + len;
  #line 230 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"VO queued",priv->debug.tx_stats.queue_stats[0]) + len;
  #line 232 
  if (len > 512U) 
                  #line 233 
                  len = 512U;
  #line 235 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                (unsigned long)len);
}

#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_xmit = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_xmit, .open = & simple_open};
#line 245  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_err_stat_rx(struct ath9k_htc_priv *priv, struct ath_rx_status *rs)
{
  #line 248 
  ath9k_cmn_debug_stat_rx(& priv->debug.rx_stats,rs);
  #line 249 
  return;
}

#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_skb_rx(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 255 
  char *buf;
  #line 254 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 256 
  unsigned int len = 0U;
  #line 256 
  unsigned int size = 1500U;
  #line 257 
  ssize_t retval = 0L;
  #line 259 
  buf = (char *)kzalloc_0((unsigned long)size,3264U);
  #line 260 
  if (buf == (char *)0) 
                        #line 261 
                        return -12L;
  #line 265 
  len = (unsigned int)scnprintf(buf + (unsigned long)len,(unsigned long)(size - len),
                  (char *)"%20s : %10u\n",(char *)"SKBs allocated",
                  priv->debug.skbrx_stats.skb_allocated) + len;
  #line 268 
  len = (unsigned int)scnprintf(buf + (unsigned long)len,(unsigned long)(size - len),
                  (char *)"%20s : %10u\n",(char *)"SKBs completed",
                  priv->debug.skbrx_stats.skb_completed) + len;
  #line 271 
  len = (unsigned int)scnprintf(buf + (unsigned long)len,(unsigned long)(size - len),
                  (char *)"%20s : %10u\n",(char *)"SKBs Dropped",
                  priv->debug.skbrx_stats.skb_dropped) + len;
  #line 273 
  if (len > size) 
                  #line 274 
                  len = size;
  #line 276 
  retval = simple_read_from_buffer((void *)user_buf,count,ppos,(void *)buf,(unsigned long)len);
  #line 277 
  kfree((void *)buf);
  #line 279 
  return retval;
}

#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_skb_rx = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_skb_rx, .open = & simple_open};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_slot(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 293 
  char buf[512U];
  #line 294 
  unsigned int len;
  #line 292 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 296 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_0(& priv->tx.tx_lock);
  #line 297 
  ;
  #line 297 
  len = (unsigned int)scnprintf((char *)(& buf),512UL,(char *)"TX slot bitmap : %*pb\n",
                  256,(unsigned long *)(& priv->tx.tx_slot),
                  bitmap_weight((unsigned long *)(& priv->tx.tx_slot),256U));
  #line 302 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_0(& priv->tx.tx_lock);
  #line 303 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                (unsigned long)len);
}

#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_slot = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_slot, .open = & simple_open};
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_queue(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 317 
  char buf[512U];
  #line 316 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 318 
  unsigned int len = 0U;
  #line 321 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Mgmt endpoint",
                  skb_queue_len(& priv->tx.mgmt_ep_queue)) + len;
  #line 324 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Cab endpoint",
                  skb_queue_len(& priv->tx.cab_ep_queue)) + len;
  #line 327 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Data BE endpoint",
                  skb_queue_len(& priv->tx.data_be_queue)) + len;
  #line 330 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Data BK endpoint",
                  skb_queue_len(& priv->tx.data_bk_queue)) + len;
  #line 333 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                  512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                  (char *)"Data VI endpoint",
                  skb_queue_len(& priv->tx.data_vi_queue)) + len;
  #line 336 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"Data VO endpoint",
                   skb_queue_len(& priv->tx.data_vo_queue)) + len;
  #line 339 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"Failed queue",
                   skb_queue_len(& priv->tx.tx_failed)) + len;
  #line 341 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_0(& priv->tx.tx_lock);
  #line 343 
  len = (unsigned int)scnprintf((char *)(& buf) + (unsigned long)len,
                   512UL - (unsigned long)len,(char *)"%20s : %10u\n",
                   (char *)"Queued count",priv->tx.queued_cnt) + len;
  #line 344 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_0(& priv->tx.tx_lock);
  #line 346 
  if (len > 512U) 
                  #line 347 
                  len = 512U;
  #line 349 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                 (unsigned long)len);
}

#line 353  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_queue = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_queue, .open = & simple_open};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t read_file_debug(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 365 
  char buf[32U];
  #line 366 
  unsigned int len;
  #line 363 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 364 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 368 
  len = (unsigned int)sprintf((char *)(& buf),(char *)"0x%08x\n",common->debug_mask);
  #line 369 
  return simple_read_from_buffer((void *)user_buf,count,ppos,(void *)(& buf),
                                (unsigned long)len);
}

#line 372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static ssize_t write_file_debug(struct file *file, char *user_buf, size_t count, loff_t *ppos)
{
  #line 381 
  size_t __UNIQUE_ID___x560;
  #line 381 
  unsigned long tmp_0;
  #line 377 
  unsigned long mask;
  #line 378 
  char buf[32U];
  #line 379 
  ssize_t len;
  #line 375 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)file->private_data;
  #line 376 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  {
    #line 381 
    __UNIQUE_ID___x560 = count;
    #line 381 
    unsigned long __UNIQUE_ID___y561 = 31UL;
    #line 381 
    if (__UNIQUE_ID___x560 < __UNIQUE_ID___y561) 
                                                 #line 381 
                                                 tmp_0 = __UNIQUE_ID___x560; else 
                                                                    #line 381 
                                                                    tmp_0 = __UNIQUE_ID___y561;
    }
  #line 381 
  len = (long)tmp_0;
  #line 382 
  if (copy_from_user((void *)(& buf),(void *)user_buf,(unsigned long)len) != 0UL) 
    #line 383 
    return -14L;
  #line 385 
  buf[len] = (char)0;
  #line 386 
  if (kstrtoul((char *)(& buf),0U,& mask) != 0) 
                                                #line 387 
                                                return -22L;
  #line 389 
  common->debug_mask = (int)mask;
  #line 390 
  return (long)count;
}

#line 393  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static struct file_operations fops_debug = {.owner = & __this_module, .llseek = & default_llseek, .read = & read_file_debug, .write = & write_file_debug, .open = & simple_open};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
static char ath9k_htc_gstrings_stats[18U][32U] = {{(char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'_', (char)'n', (char)'i', (char)'c'}, {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'n', (char)'i', (char)'c'}, {(char)'r', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'_', (char)'n', (char)'i', (char)'c'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'_', (char)'n', (char)'i', (char)'c'}, {(char)'d', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s'}, {(char)'d', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s'}, {(char)'d', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s'}, {(char)'d', (char)'_', (char)'t', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'d', (char)'e', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'h', (char)'y', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'r', (char)'e', (char)'_', (char)'d', (char)'e', (char)'l', (char)'i', (char)'m', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'o', (char)'s', (char)'t', (char)'_', (char)'d', (char)'e', (char)'l', (char)'i', (char)'m', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'d', (char)'e', (char)'c', (char)'r', (char)'y', (char)'p', (char)'t', (char)'_', (char)'b', (char)'u', (char)'s', (char)'y', (char)'_', (char)'e', (char)'r', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'h', (char)'y', (char)'e', (char)'r', (char)'r', (char)'_', (char)'r', (char)'a', (char)'d', (char)'a', (char)'r'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'h', (char)'y', (char)'e', (char)'r', (char)'r', (char)'_', (char)'o', (char)'f', (char)'d', (char)'m', (char)'_', (char)'t', (char)'i', (char)'m', (char)'i', (char)'n', (char)'g'}, {(char)'d', (char)'_', (char)'r', (char)'x', (char)'_', (char)'p', (char)'h', (char)'y', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'c', (char)'k', (char)'_', (char)'t', (char)'i', (char)'m', (char)'i', (char)'n', (char)'g'}};
#line 426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_get_et_strings(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u32 sset, u8 *data)
{
  #line 430 
  if (sset == 1U) 
                  #line 431 
                  memcpy((void *)data,(void *)(& ath9k_htc_gstrings_stats),576UL);
  #line 432 
  return;
}

#line 435  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
int ath9k_htc_get_et_sset_count(struct ieee80211_hw *hw, struct ieee80211_vif *vif, int sset)
{
  #line 438 
  if (sset == 1) 
                 #line 439 
                 return 18;
  #line 440 
  return 0;
}

#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_get_et_stats(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ethtool_stats *stats, u64 *data)
{
  #line 460 
  int tmp;
  #line 461 
  int tmp_0;
  #line 462 
  int tmp_1;
  #line 463 
  int tmp_2;
  #line 465 
  int tmp_3;
  #line 465 
  int tmp_4;
  #line 465 
  int tmp_5;
  #line 465 
  int tmp_6;
  #line 467 
  int tmp_7;
  #line 468 
  int tmp_8;
  #line 469 
  int tmp_9;
  #line 470 
  int tmp_10;
  #line 471 
  int tmp_11;
  #line 472 
  int tmp_12;
  #line 473 
  int tmp_13;
  #line 475 
  int tmp_14;
  #line 476 
  int tmp_15;
  #line 477 
  int tmp_16;
  #line 457 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 458 
  int i = 0;
  #line 460 
  tmp = i;
  #line 460 
  i ++;
  #line 460 
  *(data + (unsigned long)tmp) = (unsigned long long)priv->debug.tx_stats.skb_success;
  #line 461 
  tmp_0 = i;
  #line 461 
  i ++;
  #line 461 
  *(data + (unsigned long)tmp_0) = (unsigned long long)priv->debug.tx_stats.skb_success_bytes;
  #line 462 
  tmp_1 = i;
  #line 462 
  i ++;
  #line 462 
  *(data + (unsigned long)tmp_1) = (unsigned long long)priv->debug.skbrx_stats.skb_completed;
  #line 463 
  tmp_2 = i;
  #line 463 
  i ++;
  #line 463 
  *(data + (unsigned long)tmp_2) = (unsigned long long)priv->debug.skbrx_stats.skb_completed_bytes;
  #line 465 
  tmp_3 = i;
  #line 465 
  i ++;
  #line 465 
  *(data + (unsigned long)tmp_3) = (unsigned long long)priv->debug.tx_stats.queue_stats[2];
  #line 465 
  tmp_4 = i;
  #line 465 
  i ++;
  #line 465 
  *(data + (unsigned long)tmp_4) = (unsigned long long)priv->debug.tx_stats.queue_stats[3];
  #line 465 
  tmp_5 = i;
  #line 465 
  i ++;
  #line 465 
  *(data + (unsigned long)tmp_5) = (unsigned long long)priv->debug.tx_stats.queue_stats[1];
  #line 465 
  tmp_6 = i;
  #line 465 
  i ++;
  #line 465 
  *(data + (unsigned long)tmp_6) = (unsigned long long)priv->debug.tx_stats.queue_stats[0];
  #line 467 
  tmp_7 = i;
  #line 467 
  i ++;
  #line 467 
  *(data + (unsigned long)tmp_7) = (unsigned long long)priv->debug.rx_stats.crc_err;
  #line 468 
  tmp_8 = i;
  #line 468 
  i ++;
  #line 468 
  *(data + (unsigned long)tmp_8) = (unsigned long long)priv->debug.rx_stats.decrypt_crc_err;
  #line 469 
  tmp_9 = i;
  #line 469 
  i ++;
  #line 469 
  *(data + (unsigned long)tmp_9) = (unsigned long long)priv->debug.rx_stats.phy_err;
  #line 470 
  tmp_10 = i;
  #line 470 
  i ++;
  #line 470 
  *(data + (unsigned long)tmp_10) = (unsigned long long)priv->debug.rx_stats.mic_err;
  #line 471 
  tmp_11 = i;
  #line 471 
  i ++;
  #line 471 
  *(data + (unsigned long)tmp_11) = (unsigned long long)priv->debug.rx_stats.pre_delim_crc_err;
  #line 472 
  tmp_12 = i;
  #line 472 
  i ++;
  #line 472 
  *(data + (unsigned long)tmp_12) = (unsigned long long)priv->debug.rx_stats.post_delim_crc_err;
  #line 473 
  tmp_13 = i;
  #line 473 
  i ++;
  #line 473 
  *(data + (unsigned long)tmp_13) = (unsigned long long)priv->debug.rx_stats.decrypt_busy_err;
  #line 475 
  tmp_14 = i;
  #line 475 
  i ++;
  #line 475 
  *(data + (unsigned long)tmp_14) = (unsigned long long)priv->debug.rx_stats.phy_err_stats[5];
  #line 476 
  tmp_15 = i;
  #line 476 
  i ++;
  #line 476 
  *(data + (unsigned long)tmp_15) = (unsigned long long)priv->debug.rx_stats.phy_err_stats[17];
  #line 477 
  tmp_16 = i;
  #line 477 
  i ++;
  #line 477 
  *(data + (unsigned long)tmp_16) = (unsigned long long)priv->debug.rx_stats.phy_err_stats[25];
  {
    #line 479 
    int __ret_warn_on = i != 18;
    #line 479 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 480 
      ldv_inline_asm();
      #line 481 
      ldv_inline_asm();
    }
    #line 479 
    long tmp_17 = (long)(__ret_warn_on != 0);
  }
  #line 481 
  return;
}

#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
void ath9k_htc_deinit_debug(struct ath9k_htc_priv *priv)
{
  #line 484 
  ath9k_cmn_spectral_deinit_debug(& priv->spec_priv);
  #line 485 
  return;
}

#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_debug.c"
int ath9k_htc_init_debug(struct ath_hw *ah)
{
  #line 489 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 490 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 492 
  priv->debug.debugfs_phy = cif_debugfs_create_dir((char *)"ath9k_htc",((priv->hw)->wiphy)->debugfsdir);
  #line 494 
  if (priv->debug.debugfs_phy == (struct dentry *)0) 
                                                     #line 495 
                                                     return -12;
  #line 497 
  ath9k_cmn_spectral_init_debug(& priv->spec_priv,priv->debug.debugfs_phy);
  #line 499 
  cif_debugfs_create_file((char *)"tgt_int_stats",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_tgt_int_stats);
  #line 501 
  cif_debugfs_create_file((char *)"tgt_tx_stats",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_tgt_tx_stats);
  #line 503 
  cif_debugfs_create_file((char *)"tgt_rx_stats",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_tgt_rx_stats);
  #line 505 
  cif_debugfs_create_file((char *)"xmit",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_xmit);
  #line 507 
  cif_debugfs_create_file((char *)"skb_rx",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_skb_rx);
  #line 510 
  ath9k_cmn_debug_recv(priv->debug.debugfs_phy,& priv->debug.rx_stats);
  #line 511 
  ath9k_cmn_debug_phy_err(priv->debug.debugfs_phy,& priv->debug.rx_stats);
  #line 513 
  cif_debugfs_create_file((char *)"slot",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_slot);
  #line 515 
  cif_debugfs_create_file((char *)"queue",(unsigned short)256,priv->debug.debugfs_phy,(void *)priv,& fops_queue);
  #line 517 
  cif_debugfs_create_file((char *)"debug",(unsigned short)384,priv->debug.debugfs_phy,(void *)priv,& fops_debug);
  #line 520 
  ath9k_cmn_debug_base_eeprom(priv->debug.debugfs_phy,priv->ah);
  #line 521 
  ath9k_cmn_debug_modal_eeprom(priv->debug.debugfs_phy,priv->ah);
  #line 523 
  return 0;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_debug = & fops_debug;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_queue = & fops_queue;
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_skb_rx = & fops_skb_rx;
#line 96  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_slot = & fops_slot;
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_tgt_int_stats = & fops_tgt_int_stats;
#line 98  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_tgt_rx_stats = & fops_tgt_rx_stats;
#line 99  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_tgt_tx_stats = & fops_tgt_tx_stats;
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
struct file_operations *emg_alias_fops_xmit = & fops_xmit;
#line 103 
#line 103 
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1);
#line 104 
#line 104 
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);
#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_debug(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 120 
  return read_file_debug(arg0,arg1,arg2,arg3);
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_queue(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 125 
  return read_file_queue(arg0,arg1,arg2,arg3);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_skb_rx(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 130 
  return read_file_skb_rx(arg0,arg1,arg2,arg3);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_slot(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 135 
  return read_file_slot(arg0,arg1,arg2,arg3);
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_tgt_int_stats(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 140 
  return read_file_tgt_int_stats(arg0,arg1,arg2,arg3);
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_tgt_rx_stats(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 145 
  return read_file_tgt_rx_stats(arg0,arg1,arg2,arg3);
}

#line 149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_tgt_tx_stats(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 150 
  return read_file_tgt_tx_stats(arg0,arg1,arg2,arg3);
}

#line 154  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_read_file_xmit(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 155 
  return read_file_xmit(arg0,arg1,arg2,arg3);
}

#line 159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
long emg_wrapper_write_file_debug(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 160 
  return write_file_debug(arg0,arg1,arg2,arg3);
}

#line 545  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  #line 548 
  return ldv_kzalloc(size,flags);
}

#line 858  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_0(spinlock_t *lock)
{
  #line 861 
  ldv_spin_model_lock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 863 
  spin_lock_bh_0(lock);
  #line 864 
  return;
}

#line 867  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_0(spinlock_t *lock)
{
  #line 870 
  ldv_spin_model_unlock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 872 
  spin_unlock_bh_0(lock);
  #line 873 
  return;
}

#line 876  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent)
{
  #line 880 
  return emg_debugfs_create_dir(name,parent);
}

#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_debug.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops)
{
  #line 888 
  return emg_debugfs_create_file(name,(unsigned short)((int)mode),parent,data,
                              fops);
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_1(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 841  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_1(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_1(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 850  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_1(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_spin_unlock_irqrestore_wmi_lock_of_wmi(spinlock_t *lock, unsigned long flags);
#line 26 
#line 809 
static void cif_mutex_lock_op_mutex_of_wmi(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 823 
static void cif___ldv_spin_lock_wmi_lock_of_wmi(spinlock_t *lock);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 185 
#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_mutex_unlock_op_mutex_of_wmi(struct mutex *lock);
#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 859  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t);
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 683 
void tasklet_kill(struct tasklet_struct *);
#line 687 
#line 801  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 488  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags);
#line 1744  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head *list_)
{
  #line 1746 
  struct sk_buff *skb = list_->next;
  #line 1748 
  if (skb == (struct sk_buff *)list_) 
                                      #line 1749 
                                      skb = (struct sk_buff *)0;
  #line 1750 
  return skb;
}

#line 1827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1829 
  list->next = ((struct sk_buff *)list);
  #line 1829 
  list->prev = ((struct sk_buff *)list);
  #line 1830 
  list->qlen = 0U;
  #line 1831 
  return;
}

#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1843 
  spinlock_check(& list->lock);
  {
    #line 1843 
    struct lock_class_key __key;
    #line 1843 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&list->lock)->rlock",& __key);
  }
  #line 1844 
  __skb_queue_head_init(list);
  #line 1845 
  return;
}

#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_3623 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_3625 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_3627 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_3629 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert(newsk,next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev,next,list);
  #line 1977 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_3639 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_3641 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2038  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  #line 2040 
  struct sk_buff *skb = skb_peek(list);
  #line 2041 
  if (skb != (struct sk_buff *)0) 
                                  #line 2042 
                                  __skb_unlink(skb,list);
  #line 2043 
  return skb;
}

#line 2230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_put_data(struct sk_buff *skb, void *data, unsigned int len)
{
  #line 2233 
  void *tmp = skb_put(skb,len);
  #line 2235 
  memcpy(tmp,data,(unsigned long)len);
  #line 2237 
  return tmp;
}

#line 2750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_purge(struct sk_buff_head *list)
{
  #line 2752 
  struct sk_buff *skb;
  #line 2753 
  while (1) {
    #line 2753 
    skb = __skb_dequeue(list);
    #line 2753 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 2753 
                                        break;
    #line 2754 
    kfree_skb(skb);
  }
  #line 2755 
  return;
}

#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
struct wmi *ath9k_init_wmi(struct ath9k_htc_priv *priv);
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_deinit_wmi(struct ath9k_htc_priv *priv);
#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 250  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
int ath9k_wmi_connect(struct htc_target *htc, struct wmi *wmi, enum htc_endpoint_id *wmi_ctrl_epid);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_wmi_event_tasklet(unsigned long data);
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_fatal_work(struct work_struct *work);
#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.h"
#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_wmi_event_drain(struct ath9k_htc_priv *priv);
#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 542 
void ath9k_htc_reset(struct ath9k_htc_priv *priv);
#line 585 
#line 585 
void ath9k_htc_txstatus(struct ath9k_htc_priv *priv, void *wmi_event);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
static char *wmi_cmd_to_name(enum wmi_cmd_id wmi_cmd)
{
  #line 21 
  switch ((unsigned int)wmi_cmd) {
    #line 22 
    case (unsigned int)1: 
                          #line 22 
    ;
    #line 23 
    return (char *)"WMI_ECHO_CMDID";
    #line 24 
    case (unsigned int)2: 
                          #line 24 
    ;
    #line 25 
    return (char *)"WMI_ACCESS_MEMORY_CMDID";
    #line 26 
    case (unsigned int)3: 
                          #line 26 
    ;
    #line 27 
    return (char *)"WMI_GET_FW_VERSION";
    #line 28 
    case (unsigned int)4: 
                          #line 28 
    ;
    #line 29 
    return (char *)"WMI_DISABLE_INTR_CMDID";
    #line 30 
    case (unsigned int)5: 
                          #line 30 
    ;
    #line 31 
    return (char *)"WMI_ENABLE_INTR_CMDID";
    #line 32 
    case (unsigned int)6: 
                          #line 32 
    ;
    #line 33 
    return (char *)"WMI_ATH_INIT_CMDID";
    #line 34 
    case (unsigned int)7: 
                          #line 34 
    ;
    #line 35 
    return (char *)"WMI_ABORT_TXQ_CMDID";
    #line 36 
    case (unsigned int)8: 
                          #line 36 
    ;
    #line 37 
    return (char *)"WMI_STOP_TX_DMA_CMDID";
    #line 38 
    case (unsigned int)9: 
                          #line 38 
    ;
    #line 39 
    return (char *)"WMI_ABORT_TX_DMA_CMDID";
    #line 40 
    case (unsigned int)10: 
                           #line 40 
    ;
    #line 41 
    return (char *)"WMI_DRAIN_TXQ_CMDID";
    #line 42 
    case (unsigned int)11: 
                           #line 42 
    ;
    #line 43 
    return (char *)"WMI_DRAIN_TXQ_ALL_CMDID";
    #line 44 
    case (unsigned int)12: 
                           #line 44 
    ;
    #line 45 
    return (char *)"WMI_START_RECV_CMDID";
    #line 46 
    case (unsigned int)13: 
                           #line 46 
    ;
    #line 47 
    return (char *)"WMI_STOP_RECV_CMDID";
    #line 48 
    case (unsigned int)14: 
                           #line 48 
    ;
    #line 49 
    return (char *)"WMI_FLUSH_RECV_CMDID";
    #line 50 
    case (unsigned int)15: 
                           #line 50 
    ;
    #line 51 
    return (char *)"WMI_SET_MODE_CMDID";
    #line 52 
    case (unsigned int)16: 
                           #line 52 
    ;
    #line 53 
    return (char *)"WMI_NODE_CREATE_CMDID";
    #line 54 
    case (unsigned int)17: 
                           #line 54 
    ;
    #line 55 
    return (char *)"WMI_NODE_REMOVE_CMDID";
    #line 56 
    case (unsigned int)18: 
                           #line 56 
    ;
    #line 57 
    return (char *)"WMI_VAP_REMOVE_CMDID";
    #line 58 
    case (unsigned int)19: 
                           #line 58 
    ;
    #line 59 
    return (char *)"WMI_VAP_CREATE_CMDID";
    #line 60 
    case (unsigned int)20: 
                           #line 60 
    ;
    #line 61 
    return (char *)"WMI_REG_READ_CMDID";
    #line 62 
    case (unsigned int)21: 
                           #line 62 
    ;
    #line 63 
    return (char *)"WMI_REG_WRITE_CMDID";
    #line 64 
    case (unsigned int)32: 
                           #line 64 
    ;
    #line 65 
    return (char *)"WMI_REG_RMW_CMDID";
    #line 66 
    case (unsigned int)22: 
                           #line 66 
    ;
    #line 67 
    return (char *)"WMI_RC_STATE_CHANGE_CMDID";
    #line 68 
    case (unsigned int)23: 
                           #line 68 
    ;
    #line 69 
    return (char *)"WMI_RC_RATE_UPDATE_CMDID";
    #line 70 
    case (unsigned int)24: 
                           #line 70 
    ;
    #line 71 
    return (char *)"WMI_TARGET_IC_UPDATE_CMDID";
    #line 72 
    case (unsigned int)25: 
                           #line 72 
    ;
    #line 73 
    return (char *)"WMI_TX_AGGR_ENABLE_CMDID";
    #line 74 
    case (unsigned int)26: 
                           #line 74 
    ;
    #line 75 
    return (char *)"WMI_TGT_DETACH_CMDID";
    #line 76 
    case (unsigned int)27: 
                           #line 76 
    ;
    #line 77 
    return (char *)"WMI_NODE_UPDATE_CMDID";
    #line 78 
    case (unsigned int)28: 
                           #line 78 
    ;
    #line 79 
    return (char *)"WMI_INT_STATS_CMDID";
    #line 80 
    case (unsigned int)29: 
                           #line 80 
    ;
    #line 81 
    return (char *)"WMI_TX_STATS_CMDID";
    #line 82 
    case (unsigned int)30: 
                           #line 82 
    ;
    #line 83 
    return (char *)"WMI_RX_STATS_CMDID";
    #line 84 
    case (unsigned int)31: 
                           #line 84 
    ;
    #line 85 
    return (char *)"WMI_BITRATE_MASK_CMDID";
  }
  #line 88 
  return (char *)"Bogus";
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
struct wmi *ath9k_init_wmi(struct ath9k_htc_priv *priv)
{
  #line 93 
  struct wmi *wmi;
  #line 95 
  wmi = (struct wmi *)kzalloc_1(1624UL,3264U);
  #line 96 
  if (wmi == (struct wmi *)0) 
                              #line 97 
                              return (struct wmi *)0;
  #line 99 
  wmi->drv_priv = priv;
  #line 100 
  wmi->stopped = (_Bool)0;
  #line 101 
  skb_queue_head_init(& wmi->wmi_event_queue);
  #line 102 
  spinlock_check(& wmi->wmi_lock);
  {
    #line 102 
    struct lock_class_key __key;
    #line 102 
    __raw_spin_lock_init(& wmi->wmi_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&wmi->wmi_lock)->rlock",& __key);
  }
  #line 103 
  spinlock_check(& wmi->event_lock);
  {
    #line 103 
    struct lock_class_key __key_0;
    #line 103 
    __raw_spin_lock_init(& wmi->event_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&wmi->event_lock)->rlock",& __key_0);
  }
  {
    #line 104 
    struct lock_class_key __key_1;
    #line 104 
    __mutex_init(& wmi->op_mutex,(char *)"&wmi->op_mutex",& __key_1);
  }
  {
    #line 105 
    struct lock_class_key __key_2;
    #line 105 
    __mutex_init(& wmi->multi_write_mutex,(char *)"&wmi->multi_write_mutex",& __key_2);
  }
  {
    #line 106 
    struct lock_class_key __key_3;
    #line 106 
    __mutex_init(& wmi->multi_rmw_mutex,(char *)"&wmi->multi_rmw_mutex",& __key_3);
  }
  #line 107 
  __init_completion(& wmi->cmd_wait);
  #line 108 
  INIT_LIST_HEAD(& wmi->pending_tx_events);
  #line 109 
  cif_tasklet_init(& wmi->wmi_event_tasklet,& ath9k_wmi_event_tasklet,(unsigned long)wmi);
  #line 112 
  return wmi;
}

#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_deinit_wmi(struct ath9k_htc_priv *priv)
{
  #line 117 
  struct wmi *wmi = priv->wmi;
  #line 119 
  cif_mutex_lock_op_mutex_of_wmi(& wmi->op_mutex);
  #line 120 
  wmi->stopped = (_Bool)1;
  #line 121 
  cif_mutex_unlock_op_mutex_of_wmi(& wmi->op_mutex);
  #line 123 
  kfree((void *)priv->wmi);
  #line 124 
  return;
}

#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_wmi_event_drain(struct ath9k_htc_priv *priv)
{
  #line 128 
  unsigned long flags;
  #line 130 
  tasklet_kill(& (priv->wmi)->wmi_event_tasklet);
  #line 131 
  cif___ldv_spin_lock_wmi_lock_of_wmi(& (priv->wmi)->wmi_lock);
  #line 132 
  __skb_queue_purge(& (priv->wmi)->wmi_event_queue);
  #line 133 
  cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& (priv->wmi)->wmi_lock,flags);
  #line 134 
  return;
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_wmi_event_tasklet(unsigned long data)
{
  #line 140 
  struct wmi_cmd_hdr *hdr;
  #line 141 
  void *wmi_event;
  #line 142 
  struct wmi_event_swba *swba;
  #line 144 
  unsigned long flags;
  #line 145 
  u16 cmd_id;
  #line 138 
  struct wmi *wmi = (struct wmi *)data;
  #line 139 
  struct ath9k_htc_priv *priv = wmi->drv_priv;
  #line 143 
  struct sk_buff *skb = (struct sk_buff *)0;
  #line 147 
  while (1) {
    #line 148 
    cif___ldv_spin_lock_wmi_lock_of_wmi(& wmi->wmi_lock);
    #line 149 
    skb = __skb_dequeue(& wmi->wmi_event_queue);
    #line 150 
    if (skb == (struct sk_buff *)0) {
      #line 151 
      cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& wmi->wmi_lock,flags);
      #line 152 
      return;
    }
    #line 154 
    cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& wmi->wmi_lock,flags);
    #line 156 
    hdr = (struct wmi_cmd_hdr *)skb->data;
    #line 157 
    cmd_id = __builtin_bswap16((unsigned short)((int)hdr->command_id));
    #line 158 
    wmi_event = skb_pull(skb,4U);
    #line 160 
    switch ((int)cmd_id) {
      #line 161 
      case 4098: 
                 #line 161 
      ;
      #line 162 
      swba = (struct wmi_event_swba *)wmi_event;
      #line 163 
      ath9k_htc_swba(priv,swba);
      #line 164 
      break;
      #line 165 
      case 4099: 
                 #line 165 
      ;
      #line 166 
      ieee80211_queue_work((wmi->drv_priv)->hw,& (wmi->drv_priv)->fatal_work);
      #line 168 
      break;
      #line 169 
      case 4103: 
                 #line 169 
      ;
      #line 170 
      cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_1(& priv->tx.tx_lock);
      #line 171 
      if (((unsigned long)priv->tx.flags & 2UL) != 0UL) {
        #line 172 
        cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_1(& priv->tx.tx_lock);
        #line 173 
        break;
      }
      #line 175 
      cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_1(& priv->tx.tx_lock);
      #line 177 
      ath9k_htc_txstatus(priv,wmi_event);
      #line 178 
      break;
      #line 179 
      default: 
               #line 179 
      ;
      #line 180 
      break;
    }
    #line 183 
    kfree_skb(skb);
  }
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
void ath9k_fatal_work(struct work_struct *work)
{
  #line 189 
  void *__mptr;
  #line 189 
  __mptr = (void *)work;
  #line 189 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709549184U));
  #line 191 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 193 
  if ((common->debug_mask & 1024) != 0) 
                                        #line 193 
                                        ath_printk((char *)"\001",common,(char *)"FATAL Event received, resetting device\n");
  #line 194 
  ath9k_htc_reset(priv);
  #line 195 
  return;
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
static void ath9k_wmi_rsp_callback(struct wmi *wmi, struct sk_buff *skb)
{
  #line 199 
  skb_pull(skb,4U);
  #line 201 
  if (wmi->cmd_rsp_buf != (u8 *)0U && wmi->cmd_rsp_len != 0U) 
                                                              #line 202 
                                                              memcpy((void *)wmi->cmd_rsp_buf,(void *)skb->data,(unsigned long)wmi->cmd_rsp_len);
  #line 204 
  complete(& wmi->cmd_wait);
  #line 205 
  return;
}

#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
static void ath9k_wmi_ctrl_rx(void *priv, struct sk_buff *skb, enum htc_endpoint_id epid)
{
  #line 211 
  struct wmi_cmd_hdr *hdr;
  #line 212 
  unsigned long flags;
  #line 213 
  u16 cmd_id;
  #line 210 
  struct wmi *wmi = (struct wmi *)priv;
  #line 215 
  if ((long)((int)wmi->stopped != 0) != 0L) 
                                            #line 216 
                                            goto free_skb;
  #line 218 
  hdr = (struct wmi_cmd_hdr *)skb->data;
  #line 219 
  cmd_id = __builtin_bswap16((unsigned short)((int)hdr->command_id));
  #line 221 
  if (((int)cmd_id & 4096) != 0) {
    #line 222 
    cif___ldv_spin_lock_wmi_lock_of_wmi(& wmi->wmi_lock);
    #line 223 
    __skb_queue_tail(& wmi->wmi_event_queue,skb);
    #line 224 
    cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& wmi->wmi_lock,flags);
    #line 225 
    cif_tasklet_schedule(& wmi->wmi_event_tasklet);
    #line 226 
    return;
  }
  #line 230 
  cif___ldv_spin_lock_wmi_lock_of_wmi(& wmi->wmi_lock);
  #line 231 
  ;
  #line 231 
  if ((int)__builtin_bswap16((unsigned short)((int)hdr->seq_no)) != (int)wmi->last_seq_id) {
    #line 232 
    cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& wmi->wmi_lock,flags);
    #line 233 
    goto free_skb;
  }
  #line 235 
  cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& wmi->wmi_lock,flags);
  #line 238 
  ath9k_wmi_rsp_callback(wmi,skb);
  #line 240 
  free_skb: 
            #line 240 
  ;
  #line 241 
  kfree_skb(skb);
  #line 242 
  return;
}

#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
static void ath9k_wmi_ctrl_tx(void *priv, struct sk_buff *skb, enum htc_endpoint_id epid, bool txok)
{
  #line 247 
  kfree_skb(skb);
  #line 248 
  return;
}

#line 250  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
int ath9k_wmi_connect(struct htc_target *htc, struct wmi *wmi, enum htc_endpoint_id *wmi_ctrl_epid)
{
  #line 253 
  struct htc_service_connreq connect;
  #line 254 
  int ret;
  #line 256 
  wmi->htc = htc;
  #line 258 
  memset((void *)(& connect),0,32UL);
  #line 260 
  connect.ep_callbacks.priv = (void *)wmi;
  #line 261 
  connect.ep_callbacks.tx = & ath9k_wmi_ctrl_tx;
  #line 262 
  connect.ep_callbacks.rx = & ath9k_wmi_ctrl_rx;
  #line 263 
  connect.service_id = (unsigned short)256U;
  #line 265 
  ret = htc_connect_service(htc,& connect,& wmi->ctrl_epid);
  #line 266 
  if (ret != 0) 
                #line 267 
                return ret;
  #line 269 
  *wmi_ctrl_epid = wmi->ctrl_epid;
  #line 271 
  return 0;
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
static int ath9k_wmi_cmd_issue(struct wmi *wmi, struct sk_buff *skb, enum wmi_cmd_id cmd, u16 len)
{
  #line 278 
  struct wmi_cmd_hdr *hdr;
  #line 279 
  unsigned long flags;
  #line 281 
  hdr = (struct wmi_cmd_hdr *)skb_push(skb,4U);
  #line 282 
  hdr->command_id = __builtin_bswap16((unsigned short)((int)((unsigned short)cmd)));
  #line 283 
  wmi->tx_seq_id = (u16)((int)wmi->tx_seq_id + 1);
  #line 283 
  hdr->seq_no = __builtin_bswap16((unsigned short)((int)wmi->tx_seq_id));
  #line 285 
  cif___ldv_spin_lock_wmi_lock_of_wmi(& wmi->wmi_lock);
  #line 286 
  wmi->last_seq_id = wmi->tx_seq_id;
  #line 287 
  cif_spin_unlock_irqrestore_wmi_lock_of_wmi(& wmi->wmi_lock,flags);
  #line 289 
  return htc_send_epid(wmi->htc,skb,wmi->ctrl_epid);
}

#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/wmi.c"
int ath9k_wmi_cmd(struct wmi *wmi, enum wmi_cmd_id cmd_id, u8 *cmd_buf, u32 cmd_len, u8 *rsp_buf, u32 rsp_len, u32 timeout)
{
  #line 301 
  struct sk_buff *skb;
  #line 302 
  unsigned long time_left;
  #line 297 
  struct ath_hw *ah = (wmi->drv_priv)->ah;
  #line 298 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 299 
  u16 headroom = (unsigned short)12U;
  #line 303 
  int ret = 0;
  #line 305 
  if ((ah->ah_flags & 2U) != 0U) 
                                 #line 306 
                                 return 0;
  #line 308 
  skb = alloc_skb((unsigned int)headroom + cmd_len,2592U);
  #line 309 
  if (skb == (struct sk_buff *)0) 
                                  #line 310 
                                  return -12;
  #line 312 
  skb_reserve(skb,(int)headroom);
  #line 314 
  if (cmd_len != 0U && cmd_buf != (u8 *)0U) 
                                            #line 315 
                                            skb_put_data(skb,(void *)cmd_buf,cmd_len);
  #line 318 
  cif_mutex_lock_op_mutex_of_wmi(& wmi->op_mutex);
  #line 321 
  if ((long)((int)wmi->stopped != 0) != 0L) {
    #line 322 
    ret = -71;
    #line 323 
    goto out;
  }
  #line 327 
  wmi->cmd_rsp_buf = rsp_buf;
  #line 328 
  wmi->cmd_rsp_len = rsp_len;
  #line 330 
  ret = ath9k_wmi_cmd_issue(wmi,skb,cmd_id,(unsigned short)((int)((unsigned short)cmd_len)));
  #line 331 
  if (ret != 0) 
                #line 332 
                goto out;
  #line 334 
  time_left = wait_for_completion_timeout(& wmi->cmd_wait,(unsigned long)timeout);
  #line 335 
  if (time_left == 0UL) {
    #line 336 
    if ((common->debug_mask & 8192) != 0) {
      #line 336 
      ;
      #line 336 
      ath_printk((char *)"\001",common,(char *)"Timeout waiting for WMI command: %s\n",wmi_cmd_to_name(cmd_id));
    }
    #line 338 
    cif_mutex_unlock_op_mutex_of_wmi(& wmi->op_mutex);
    #line 339 
    kfree_skb(skb);
    #line 340 
    return -110;
  }
  #line 343 
  cif_mutex_unlock_op_mutex_of_wmi(& wmi->op_mutex);
  #line 345 
  return 0;
  #line 347 
  out: 
       #line 347 
  ;
  #line 348 
  if ((common->debug_mask & 8192) != 0) {
    #line 348 
    ;
    #line 348 
    ath_printk((char *)"\001",common,(char *)"WMI failure for: %s\n",wmi_cmd_to_name(cmd_id));
  }
  #line 349 
  cif_mutex_unlock_op_mutex_of_wmi(& wmi->op_mutex);
  #line 350 
  kfree_skb(skb);
  #line 352 
  return ret;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
#line 100 
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);
#line 101 
#line 101 
void emg_tasklet_schedule(struct tasklet_struct *arg0);
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 139 
  ldv_init_list_head(list);
  #line 140 
  return;
}

#line 488  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  #line 491 
  return ldv_kzalloc(size,flags);
}

#line 801  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data)
{
  #line 805 
  emg_tasklet_init(t,func,data);
  #line 806 
  return;
}

#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_mutex_lock_op_mutex_of_wmi(struct mutex *lock)
{
  #line 812 
  ldv_mutex_model_lock(lock,(char *)"op_mutex_of_wmi");
  #line 813 
  return;
}

#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_mutex_unlock_op_mutex_of_wmi(struct mutex *lock)
{
  #line 819 
  ldv_mutex_model_unlock(lock,(char *)"op_mutex_of_wmi");
  #line 820 
  return;
}

#line 823  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif___ldv_spin_lock_wmi_lock_of_wmi(spinlock_t *lock)
{
  #line 826 
  ldv_spin_model_lock((char *)"wmi_lock_of_wmi");
  #line 828 
  __ldv_spin_lock(lock);
  #line 829 
  return;
}

#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_spin_unlock_irqrestore_wmi_lock_of_wmi(spinlock_t *lock, unsigned long flags)
{
  #line 835 
  ldv_spin_model_unlock((char *)"wmi_lock_of_wmi");
  #line 837 
  spin_unlock_irqrestore(lock,flags);
  #line 838 
  return;
}

#line 841  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_1(spinlock_t *lock)
{
  #line 844 
  ldv_spin_model_lock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 846 
  spin_lock_bh_1(lock);
  #line 847 
  return;
}

#line 850  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_1(spinlock_t *lock)
{
  #line 853 
  ldv_spin_model_unlock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 855 
  spin_unlock_bh_1(lock);
  #line 856 
  return;
}

#line 859  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/wmi.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t)
{
  #line 863 
  emg_tasklet_schedule(t);
  #line 864 
  return;
}

/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 *p)
{
  #line 66 
  return *p;
}

#line 472  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 167  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 33 
bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
#line 36 
#line 36 
bool __list_del_entry_valid(struct list_head *);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_4151 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_4153 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del(struct list_head *entry)
{
  #line 139 
  __list_del_entry(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_move_tail(struct list_head *list, struct list_head *head)
{
  #line 213 
  __list_del_entry(list);
  #line 214 
  list_add_tail(list,head);
  #line 215 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty(struct list_head *head)
{
  #line 269 
  union __anonunion___u_4155 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 683  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void *cif_kmemdup(void *src, size_t len, gfp_t gfp);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 858  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_lock_tx_lock_of_hif_usb_tx(spinlock_t *lock);
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_lock_rx_lock_of_hif_device_usb(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 867  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_unlock_tx_lock_of_hif_usb_tx(spinlock_t *lock);
#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 893  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_unlock_rx_lock_of_hif_device_usb(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 849  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(spinlock_t *lock, unsigned long flags);
#line 26 
#line 423 
static void cif_mutex_lock_mutex_of_device(struct mutex *lock);
#line 35 
#line 840 
static void cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(spinlock_t *lock);
#line 51 
#line 51 
int ldv_request_firmware(struct firmware **fw);
#line 52 
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23 
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void *p)
{
  #line 10 
  return __le16_to_cpup((__le16 *)p);
}

#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
#line 103 
void wait_for_completion(struct completion *);
#line 119 
#line 119 
void complete_all(struct completion *);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 468  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_mutex_unlock_mutex_of_device(struct mutex *lock);
#line 1417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device *dev)
{
  #line 1419 
  return dev->driver_data;
}

#line 1422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  #line 1424 
  dev->driver_data = data;
  #line 1425 
  return;
}

#line 1491  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void device_lock(struct device *dev)
{
  #line 1493 
  cif_mutex_lock_mutex_of_device(& dev->mutex);
  #line 1494 
  return;
}

#line 1506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static void device_unlock(struct device *dev)
{
  #line 1508 
  cif_mutex_unlock_mutex_of_device(& dev->mutex);
  #line 1509 
  return;
}

#line 1591 
#line 1591 
void device_release_driver(struct device *);
#line 1718 
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 496  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_dir_out(struct usb_endpoint_descriptor *epd)
{
  #line 499 
  return ((int)epd->bEndpointAddress & 128) == 0;
}

#line 508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_xfer_bulk(struct usb_endpoint_descriptor *epd)
{
  #line 511 
  return ((int)epd->bmAttributes & 3) == 2;
}

#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/delay.h"
#line 11 
void __const_udelay(unsigned long);
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void *usb_get_intfdata(struct usb_interface *intf)
{
  #line 265 
  return dev_get_drvdata(& intf->dev);
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_set_intfdata(struct usb_interface *intf, void *data)
{
  #line 270 
  dev_set_drvdata(& intf->dev,data);
  #line 271 
  return;
}

#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf)
{
  #line 716 
  void *__mptr;
  #line 716 
  __mptr = (void *)intf->dev.parent;
  #line 716 
  return ((struct usb_device *)(__mptr + 18446744073709551456U));
}

#line 719 
#line 719 
struct usb_device *usb_get_dev(struct usb_device *);
#line 720 
#line 720 
void usb_put_dev(struct usb_device *);
#line 871 
#line 871 
struct usb_interface *usb_ifnum_to_if(struct usb_device *, unsigned int);
#line 1276 
#line 916  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3);
#line 1282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 924  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1);
#line 1357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void init_usb_anchor(struct usb_anchor *anchor)
{
  #line 1359 
  memset((void *)anchor,0,184UL);
  #line 1360 
  INIT_LIST_HEAD_0(& anchor->urb_list);
  {
    #line 1361 
    struct lock_class_key __key;
    #line 1361 
    __init_waitqueue_head(& anchor->wait,(char *)"&anchor->wait",& __key);
  }
  #line 1362 
  spinlock_check(& anchor->lock);
  {
    #line 1362 
    struct lock_class_key __key_0;
    #line 1362 
    __raw_spin_lock_init(& anchor->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&anchor->lock)->rlock",& __key_0);
  }
  #line 1365 
  return;
}

#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context)
{
  #line 1644 
  urb->dev = dev;
  #line 1645 
  urb->pipe = pipe;
  #line 1646 
  urb->transfer_buffer = transfer_buffer;
  #line 1647 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1648 
  urb->complete = complete_fn;
  #line 1649 
  urb->context = context;
  #line 1650 
  return;
}

#line 1677  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_int_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context, int interval)
{
  #line 1686 
  urb->dev = dev;
  #line 1687 
  urb->pipe = pipe;
  #line 1688 
  urb->transfer_buffer = transfer_buffer;
  #line 1689 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1690 
  urb->complete = complete_fn;
  #line 1691 
  urb->context = context;
  #line 1693 
  if (dev->speed == (unsigned int)USB_SPEED_HIGH || dev->speed > (unsigned int)USB_SPEED_WIRELESS) {
    #line 1695 
    int tmp_1;
    #line 1695 
    int __UNIQUE_ID___x358;
    {
      #line 1695 
      int __UNIQUE_ID___x356;
      #line 1695 
      int tmp;
      {
        #line 1695 
        __UNIQUE_ID___x356 = interval;
        #line 1695 
        int __UNIQUE_ID___y357 = 1;
        #line 1695 
        if (__UNIQUE_ID___x356 > __UNIQUE_ID___y357) 
                                                     #line 1695 
                                                     tmp = __UNIQUE_ID___x356; else 
                                                                    #line 1695 
                                                                    tmp = __UNIQUE_ID___y357;
        }
      #line 1695 
      __UNIQUE_ID___x358 = tmp;
      #line 1695 
      int __UNIQUE_ID___y359 = 16;
      #line 1695 
      if (__UNIQUE_ID___x358 < __UNIQUE_ID___y359) 
                                                   #line 1695 
                                                   tmp_1 = __UNIQUE_ID___x358; else 
                                                                    #line 1695 
                                                                    tmp_1 = __UNIQUE_ID___y359;
      }
    #line 1695 
    interval = tmp_1;
    #line 1697 
    urb->interval = 1 << (interval + -1);
  }
  else 
       #line 1699 
       urb->interval = interval;
  #line 1702 
  urb->start_frame = -1;
  #line 1703 
  return;
}

#line 1706 
#line 1706 
struct urb *usb_alloc_urb(int, gfp_t);
#line 1707 
#line 1707 
void usb_free_urb(struct urb *);
#line 1711 
#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags);
#line 1713  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 876  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_usb_kill_urb(struct urb *urb);
#line 1715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 1715 
void usb_kill_anchored_urbs(struct usb_anchor *);
#line 1721 
#line 1721 
void usb_anchor_urb(struct urb *, struct usb_anchor *);
#line 1722 
#line 1722 
void usb_unanchor_urb(struct urb *);
#line 1783 
#line 1783 
int usb_control_msg(struct usb_device *, unsigned int, __u8, __u8, __u16, __u16, void *, __u16, int);
#line 1786 
#line 1786 
int usb_interrupt_msg(struct usb_device *, unsigned int, void *, int, int *, int);
#line 1788 
#line 1788 
int usb_bulk_msg(struct usb_device *, unsigned int, void *, int, int *, int);
#line 1925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev, unsigned int endpoint)
{
  #line 1928 
  return (unsigned int)(dev->devnum << 8) | (endpoint << 15);
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 909  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 46 
int request_firmware_nowait(struct module *, bool, char *, struct device *, gfp_t, void *, void (*)(struct firmware *, void *));
#line 57 
#line 902  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 519  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags);
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert_0(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_4657 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_4659 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_4661 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_4663 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before_0(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert_0(newsk,next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev,next,list);
  #line 1977 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail_0(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before_0(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink_0(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_4673 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_4675 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2038  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue_0(struct sk_buff_head *list)
{
  #line 2040 
  struct sk_buff *skb = skb_peek(list);
  #line 2041 
  if (skb != (struct sk_buff *)0) 
                                  #line 2042 
                                  __skb_unlink_0(skb,list);
  #line 2043 
  return skb;
}

#line 2156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reset_tail_pointer(struct sk_buff *skb)
{
  #line 2158 
  skb->tail = (unsigned int)(skb->data - skb->head);
  #line 2159 
  return;
}

#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__dev_alloc_skb(unsigned int length, gfp_t gfp_mask)
{
  #line 2788 
  return __netdev_alloc_skb((struct net_device *)0,length,gfp_mask);
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int htc_use_dev_fw;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
#line 1440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
int ath9k_hif_usb_init(void);
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.h"
#line 1445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
void ath9k_hif_usb_exit(void);
#line 634  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 634 
void ath9k_htc_suspend(struct htc_target *htc_handle);
#line 635 
#line 635 
int ath9k_htc_resume(struct htc_target *htc_handle);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static struct usb_device_id ath9k_hif_usb_ids[29U] = {{.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)37489U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)4102U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36912U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1976U, .idProduct = (unsigned short)37489U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2001U, .idProduct = (unsigned short)14864U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13095U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13096U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13126U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13128U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13129U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5075U, .idProduct = (unsigned short)13136U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1226U, .idProduct = (unsigned short)17925U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1037U, .idProduct = (unsigned short)14337U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)45059U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)45058U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1404U, .idProduct = (unsigned short)33795U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1137U, .idProduct = (unsigned short)8350U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)7898U, .idProduct = (unsigned short)8981U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)28693U, .driver_info = 2UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5736U, .idProduct = (unsigned short)4608U, .driver_info = 2UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)28688U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2118U, .idProduct = (unsigned short)36888U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2106U, .idProduct = (unsigned short)42756U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)383U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)407U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1242U, .idProduct = (unsigned short)14596U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2352U, .idProduct = (unsigned short)2568U, .driver_info = 1UL}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3315U, .idProduct = (unsigned short)8447U, .driver_info = 3UL}};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
struct usb_device_id __mod_usb__ath9k_hif_usb_ids_device_table[29U];
#line 71 
#line 310 
static int __hif_usb_tx(struct hif_device_usb *hif_dev);
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void hif_usb_regout_cb(struct urb *urb)
{
  #line 75 
  struct cmd_buf *cmd = (struct cmd_buf *)urb->context;
  #line 77 
  switch (urb->status) {
    #line 78 
    case 0: 
            #line 78 
    ;
    #line 79 
    break;
    #line 80 
    case -2: 
             #line 80 
    ;
    #line 81 
    case -104: 
               #line 81 
    ;
    #line 82 
    case -19: 
              #line 82 
    ;
    #line 83 
    case -108: 
               #line 83 
    ;
    #line 84 
    goto free;
    #line 85 
    default: 
             #line 85 
    ;
    #line 86 
    break;
  }
  #line 89 
  if (cmd != (struct cmd_buf *)0) {
    #line 90 
    ath9k_htc_txcompletion_cb((cmd->hif_dev)->htc_handle,cmd->skb,(_Bool)1);
    #line 92 
    kfree((void *)cmd);
  }
  #line 95 
  return;
  #line 96 
  free: 
        #line 96 
  ;
  #line 97 
  kfree_skb(cmd->skb);
  #line 98 
  kfree((void *)cmd);
  #line 99 
  return;
}

#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int hif_usb_send_regout(struct hif_device_usb *hif_dev, struct sk_buff *skb)
{
  #line 104 
  struct urb *urb;
  #line 105 
  struct cmd_buf *cmd;
  #line 106 
  int ret = 0;
  #line 108 
  urb = usb_alloc_urb(0,3264U);
  #line 109 
  if (urb == (struct urb *)0) 
                              #line 110 
                              return -12;
  #line 112 
  cmd = (struct cmd_buf *)kzalloc_2(16UL,3264U);
  #line 113 
  if (cmd == (struct cmd_buf *)0) {
    #line 114 
    usb_free_urb(urb);
    #line 115 
    return -12;
  }
  #line 118 
  cmd->skb = skb;
  #line 119 
  cmd->hif_dev = hif_dev;
  #line 121 
  ;
  #line 121 
  ;
  #line 121 
  ;
  #line 121 
  ;
  #line 121 
  ;
  #line 121 
  usb_fill_int_urb(urb,hif_dev->udev,__create_pipe(hif_dev->udev,4U) | 1073741824U,(void *)skb->data,(int)skb->len,& hif_usb_regout_cb,(void *)cmd,1);
  #line 126 
  usb_anchor_urb(urb,& hif_dev->regout_submitted);
  #line 127 
  ret = cif_usb_submit_urb(urb,3264U);
  #line 128 
  if (ret != 0) {
    #line 129 
    usb_unanchor_urb(urb);
    #line 130 
    kfree((void *)cmd);
  }
  #line 132 
  usb_free_urb(urb);
  #line 134 
  return ret;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void hif_usb_mgmt_cb(struct urb *urb)
{
  #line 140 
  struct hif_device_usb *hif_dev;
  #line 141 
  unsigned long flags;
  #line 139 
  struct cmd_buf *cmd = (struct cmd_buf *)urb->context;
  #line 142 
  bool txok = (_Bool)1;
  #line 144 
  if ((cmd == (struct cmd_buf *)0 || cmd->skb == (struct sk_buff *)0) || cmd->hif_dev == (struct hif_device_usb *)0) 
    #line 145 
    return;
  #line 147 
  hif_dev = cmd->hif_dev;
  #line 149 
  switch (urb->status) {
    #line 150 
    case 0: 
            #line 150 
    ;
    #line 151 
    break;
    #line 152 
    case -2: 
             #line 152 
    ;
    #line 153 
    case -104: 
               #line 153 
    ;
    #line 154 
    case -19: 
              #line 154 
    ;
    #line 155 
    case -108: 
               #line 155 
    ;
    #line 156 
    txok = (_Bool)0;
    #line 162 
    cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
    #line 163 
    if (((unsigned long)hif_dev->tx.flags & 2UL) != 0UL) {
      #line 164 
      cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
      #line 165 
      dev_kfree_skb_any(cmd->skb);
      #line 166 
      kfree((void *)cmd);
      #line 167 
      return;
    }
    #line 169 
    cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
    #line 171 
    break;
    #line 172 
    default: 
             #line 172 
    ;
    #line 173 
    txok = (_Bool)0;
    #line 174 
    break;
  }
  #line 177 
  skb_pull(cmd->skb,4U);
  #line 178 
  ath9k_htc_txcompletion_cb((cmd->hif_dev)->htc_handle,cmd->skb,(_Bool)((bool)((int)txok) != 0));
  #line 180 
  kfree((void *)cmd);
  #line 181 
  return;
}

#line 183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int hif_usb_send_mgmt(struct hif_device_usb *hif_dev, struct sk_buff *skb)
{
  #line 186 
  struct urb *urb;
  #line 187 
  struct cmd_buf *cmd;
  #line 189 
  __le16 *hdr;
  #line 205 
  __le16 *tmp_1;
  #line 206 
  __le16 *tmp_2;
  #line 188 
  int ret = 0;
  #line 191 
  urb = usb_alloc_urb(0,2592U);
  #line 192 
  if (urb == (struct urb *)0) 
                              #line 193 
                              return -12;
  #line 195 
  cmd = (struct cmd_buf *)kzalloc_2(16UL,2592U);
  #line 196 
  if (cmd == (struct cmd_buf *)0) {
    #line 197 
    usb_free_urb(urb);
    #line 198 
    return -12;
  }
  #line 201 
  cmd->skb = skb;
  #line 202 
  cmd->hif_dev = hif_dev;
  #line 204 
  hdr = (__le16 *)skb_push(skb,4U);
  #line 205 
  tmp_1 = hdr;
  #line 205 
  hdr ++;
  #line 205 
  *tmp_1 = (unsigned short)((unsigned int)((unsigned short)skb->len) + 65532U);
  #line 206 
  tmp_2 = hdr;
  #line 206 
  hdr ++;
  #line 206 
  *tmp_2 = (unsigned short)27006U;
  #line 208 
  ;
  #line 208 
  ;
  #line 208 
  ;
  #line 208 
  ;
  #line 208 
  ;
  #line 208 
  usb_fill_bulk_urb(urb,hif_dev->udev,__create_pipe(hif_dev->udev,1U) | 3221225472U,(void *)skb->data,(int)skb->len,& hif_usb_mgmt_cb,(void *)cmd);
  #line 213 
  usb_anchor_urb(urb,& hif_dev->mgmt_submitted);
  #line 214 
  ret = cif_usb_submit_urb(urb,2592U);
  #line 215 
  if (ret != 0) {
    #line 216 
    usb_unanchor_urb(urb);
    #line 217 
    kfree((void *)cmd);
  }
  #line 219 
  usb_free_urb(urb);
  #line 221 
  return ret;
}

#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
__inline static void ath9k_skb_queue_purge(struct hif_device_usb *hif_dev, struct sk_buff_head *list)
{
  #line 227 
  struct sk_buff *skb;
  #line 229 
  while (1) {
    #line 229 
    skb = __skb_dequeue_0(list);
    #line 229 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 229 
                                        break;
    #line 230 
    dev_kfree_skb_any(skb);
  }
  #line 231 
  return;
}

#line 234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
__inline static void ath9k_skb_queue_complete(struct hif_device_usb *hif_dev, struct sk_buff_head *queue, bool txok)
{
  #line 238 
  struct sk_buff *skb;
  #line 240 
  while (1) {
    #line 240 
    skb = __skb_dequeue_0(queue);
    #line 240 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 240 
                                        break;
    {
      #line 242 
      int ln = (int)skb->len;
      #line 244 
      ath9k_htc_txcompletion_cb(hif_dev->htc_handle,skb,(_Bool)((bool)((int)txok) != 0));
      #line 246 
      if ((int)txok != 0) {
        #line 247 
        (((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.skb_success) ++;
        #line 248 
        ((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.skb_success_bytes += (unsigned int)ln;
      }
      else 
           #line 251 
           (((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.skb_failed) ++;
    }
  }
  #line 253 
  return;
}

#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void hif_usb_tx_cb(struct urb *urb)
{
  #line 258 
  struct hif_device_usb *hif_dev;
  #line 257 
  struct tx_buf *tx_buf = (struct tx_buf *)urb->context;
  #line 259 
  bool txok = (_Bool)1;
  #line 261 
  if (tx_buf == (struct tx_buf *)0 || tx_buf->hif_dev == (struct hif_device_usb *)0) 
    #line 262 
    return;
  #line 264 
  hif_dev = tx_buf->hif_dev;
  #line 266 
  switch (urb->status) {
    #line 267 
    case 0: 
            #line 267 
    ;
    #line 268 
    break;
    #line 269 
    case -2: 
             #line 269 
    ;
    #line 270 
    case -104: 
               #line 270 
    ;
    #line 271 
    case -19: 
              #line 271 
    ;
    #line 272 
    case -108: 
               #line 272 
    ;
    #line 273 
    txok = (_Bool)0;
    #line 279 
    cif_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
    #line 280 
    if (((unsigned long)hif_dev->tx.flags & 2UL) != 0UL) {
      #line 281 
      cif_spin_unlock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
      #line 282 
      ath9k_skb_queue_purge(hif_dev,& tx_buf->skb_queue);
      #line 283 
      return;
    }
    #line 285 
    cif_spin_unlock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
    #line 287 
    break;
    #line 288 
    default: 
             #line 288 
    ;
    #line 289 
    txok = (_Bool)0;
    #line 290 
    break;
  }
  #line 293 
  ath9k_skb_queue_complete(hif_dev,& tx_buf->skb_queue,(_Bool)((bool)((int)txok) != 0));
  #line 296 
  tx_buf->offset = ((unsigned short)0U);
  #line 296 
  tx_buf->len = ((unsigned short)0U);
  #line 297 
  __skb_queue_head_init(& tx_buf->skb_queue);
  #line 300 
  cif_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 301 
  list_move_tail(& tx_buf->list,& hif_dev->tx.tx_buf);
  #line 302 
  hif_dev->tx.tx_buf_cnt = (u8)((int)hif_dev->tx.tx_buf_cnt + 1);
  #line 303 
  if (((unsigned long)hif_dev->tx.flags & 1UL) == 0UL) 
                                                       #line 304 
                                                       __hif_usb_tx(hif_dev);
  #line 305 
  (((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.buf_completed) ++;
  #line 306 
  cif_spin_unlock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 307 
  return;
}

#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int __hif_usb_tx(struct hif_device_usb *hif_dev)
{
  #line 326 
  void *__mptr;
  #line 330 
  unsigned short __UNIQUE_ID___x562;
  #line 330 
  int tmp_1;
  #line 314 
  int i;
  #line 316 
  u8 *buf;
  #line 317 
  __le16 *hdr;
  #line 312 
  struct tx_buf *tx_buf = (struct tx_buf *)0;
  #line 313 
  struct sk_buff *nskb = (struct sk_buff *)0;
  #line 314 
  int ret = 0;
  #line 315 
  u16 tx_skb_cnt = (unsigned short)0U;
  #line 319 
  if ((unsigned int)hif_dev->tx.tx_skb_cnt == 0U) 
                                                  #line 320 
                                                  return 0;
  #line 323 
  if (list_empty(& hif_dev->tx.tx_buf) != 0) 
                                             #line 324 
                                             return 0;
  #line 326 
  __mptr = (void *)hif_dev->tx.tx_buf.next;
  #line 326 
  tx_buf = ((struct tx_buf *)(__mptr + 18446744073709551488U));
  #line 327 
  list_move_tail(& tx_buf->list,& hif_dev->tx.tx_pending);
  #line 328 
  hif_dev->tx.tx_buf_cnt = (u8)((int)hif_dev->tx.tx_buf_cnt - 1);
  {
    #line 330 
    __UNIQUE_ID___x562 = hif_dev->tx.tx_skb_cnt;
    #line 330 
    unsigned short __UNIQUE_ID___y563 = (unsigned short)20U;
    #line 330 
    if ((int)__UNIQUE_ID___x562 < (int)__UNIQUE_ID___y563) 
                                                           #line 330 
                                                           tmp_1 = (int)__UNIQUE_ID___x562; else 
                                                                    #line 330 
                                                                    tmp_1 = (int)__UNIQUE_ID___y563;
    }
  #line 330 
  tx_skb_cnt = (unsigned short)tmp_1;
  #line 332 
  i = 0;
  #line 332 
  while ((int)tx_skb_cnt > i) {
    {
      #line 343 
      __le16 *tmp_3;
      #line 344 
      __le16 *tmp_4;
      #line 333 
      nskb = __skb_dequeue_0(& hif_dev->tx.tx_skb_queue);
      #line 336 
      if ((long)(nskb == (struct sk_buff *)0) != 0L) {
        #line 337 
        ldv_inline_asm();
        #line 338 
        ldv_inline_asm();
        #line 339 
        ldv_inline_asm();
        #line 336 
        ;
      }
      #line 338 
      hif_dev->tx.tx_skb_cnt = (u16)((int)hif_dev->tx.tx_skb_cnt - 1);
      #line 340 
      buf = tx_buf->buf;
      #line 341 
      buf += (unsigned long)tx_buf->offset;
      #line 342 
      hdr = (__le16 *)buf;
      #line 343 
      tmp_3 = hdr;
      #line 343 
      hdr ++;
      #line 343 
      *tmp_3 = (unsigned short)nskb->len;
      #line 344 
      tmp_4 = hdr;
      #line 344 
      hdr ++;
      #line 344 
      *tmp_4 = (unsigned short)27006U;
      #line 345 
      buf += 4U;
      #line 346 
      memcpy((void *)buf,(void *)nskb->data,(unsigned long)nskb->len);
      #line 347 
      tx_buf->len = (unsigned short)((unsigned int)((unsigned short)nskb->len) + 4U);
      #line 349 
      if ((int)tx_skb_cnt + -1 > i) 
                                    #line 350 
                                    tx_buf->offset = (unsigned short)((unsigned int)tx_buf->offset + (unsigned int)((unsigned short)(((int)tx_buf->len + -1) / 4 + 1)) * 4U);
      #line 352 
      if ((int)tx_skb_cnt + -1 == i) 
                                     #line 353 
                                     tx_buf->len = (unsigned short)((int)tx_buf->len + (int)tx_buf->offset);
      #line 355 
      __skb_queue_tail_0(& tx_buf->skb_queue,nskb);
      #line 356 
      (((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.skb_queued) ++;
    }
    #line 332 
    i ++;
  }
  #line 359 
  ;
  #line 359 
  ;
  #line 359 
  ;
  #line 359 
  ;
  #line 359 
  ;
  #line 359 
  usb_fill_bulk_urb(tx_buf->urb,hif_dev->udev,__create_pipe(hif_dev->udev,1U) | 3221225472U,(void *)tx_buf->buf,(int)tx_buf->len,& hif_usb_tx_cb,(void *)tx_buf);
  #line 364 
  ret = cif_usb_submit_urb(tx_buf->urb,2592U);
  #line 365 
  if (ret != 0) {
    #line 366 
    tx_buf->offset = ((unsigned short)0U);
    #line 366 
    tx_buf->len = ((unsigned short)0U);
    #line 367 
    ath9k_skb_queue_complete(hif_dev,& tx_buf->skb_queue,(_Bool)0);
    #line 368 
    __skb_queue_head_init(& tx_buf->skb_queue);
    #line 369 
    list_move_tail(& tx_buf->list,& hif_dev->tx.tx_buf);
    #line 370 
    hif_dev->tx.tx_buf_cnt = (u8)((int)hif_dev->tx.tx_buf_cnt + 1);
  }
  #line 373 
  if (ret == 0) 
                #line 374 
                (((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.buf_queued) ++;
  #line 376 
  return ret;
}

#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int hif_usb_send_tx(struct hif_device_usb *hif_dev, struct sk_buff *skb)
{
  #line 381 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 382 
  unsigned long flags;
  #line 383 
  int ret = 0;
  #line 385 
  cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 387 
  if (((unsigned long)hif_dev->tx.flags & 1UL) != 0UL) {
    #line 388 
    cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
    #line 389 
    return -19;
  }
  #line 393 
  if ((unsigned int)hif_dev->tx.tx_skb_cnt > 256U) {
    #line 394 
    cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
    #line 395 
    return -12;
  }
  #line 398 
  cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
  #line 400 
  tx_ctl = HTC_SKB_CB(skb);
  #line 403 
  if ((unsigned int)tx_ctl->type + 253U <= 1U) 
                                               #line 405 
                                               ret = hif_usb_send_mgmt(hif_dev,skb);
  #line 408 
  cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 410 
  if ((unsigned int)tx_ctl->type + 255U <= 1U) {
    #line 412 
    __skb_queue_tail_0(& hif_dev->tx.tx_skb_queue,skb);
    #line 413 
    hif_dev->tx.tx_skb_cnt = (u16)((int)hif_dev->tx.tx_skb_cnt + 1);
  }
  #line 417 
  if ((unsigned int)hif_dev->tx.tx_buf_cnt == 8U && (unsigned int)hif_dev->tx.tx_skb_cnt <= 1U) 
    #line 419 
    __hif_usb_tx(hif_dev);
  #line 422 
  cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
  #line 424 
  return ret;
}

#line 427  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void hif_usb_start(void *hif_handle)
{
  #line 430 
  unsigned long flags;
  #line 429 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)hif_handle;
  #line 432 
  hif_dev->flags = (unsigned char)((unsigned int)hif_dev->flags | 1U);
  #line 434 
  cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 435 
  hif_dev->tx.flags = (unsigned char)((unsigned int)hif_dev->tx.flags & 254U);
  #line 436 
  cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
  #line 437 
  return;
}

#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void hif_usb_stop(void *hif_handle)
{
  #line 452 
  void *__mptr_0;
  #line 452 
  void *__mptr;
  #line 443 
  unsigned long flags;
  #line 441 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)hif_handle;
  #line 442 
  struct tx_buf *tx_buf = (struct tx_buf *)0;
  #line 442 
  struct tx_buf *tx_buf_tmp = (struct tx_buf *)0;
  #line 445 
  cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 446 
  ath9k_skb_queue_complete(hif_dev,& hif_dev->tx.tx_skb_queue,(_Bool)0);
  #line 447 
  hif_dev->tx.tx_skb_cnt = (unsigned short)0U;
  #line 448 
  hif_dev->tx.flags = (unsigned char)((unsigned int)hif_dev->tx.flags | 1U);
  #line 449 
  cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
  #line 452 
  __mptr = (void *)hif_dev->tx.tx_pending.next;
  #line 452 
  tx_buf = ((struct tx_buf *)(__mptr + 18446744073709551488U));
  #line 452 
  __mptr_0 = (void *)tx_buf->list.next;
  #line 453 
  tx_buf_tmp = ((struct tx_buf *)(__mptr_0 + 18446744073709551488U));
  #line 452 
  while (& tx_buf->list != & hif_dev->tx.tx_pending) {
    #line 452 
    void *__mptr_1;
    #line 454 
    cif_usb_kill_urb(tx_buf->urb);
    #line 452 
    tx_buf = tx_buf_tmp;
    #line 452 
    __mptr_1 = (void *)tx_buf_tmp->list.next;
    #line 452 
    tx_buf_tmp = ((struct tx_buf *)(__mptr_1 + 18446744073709551488U));
  }
  #line 457 
  usb_kill_anchored_urbs(& hif_dev->mgmt_submitted);
  #line 458 
  return;
}

#line 460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int hif_usb_send(void *hif_handle, u8 pipe_id, struct sk_buff *skb)
{
  #line 462 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)hif_handle;
  #line 463 
  int ret = 0;
  #line 465 
  switch ((int)pipe_id) {
    #line 466 
    case 1: 
            #line 466 
    ;
    #line 467 
    ret = hif_usb_send_tx(hif_dev,skb);
    #line 468 
    break;
    #line 469 
    case 4: 
            #line 469 
    ;
    #line 470 
    ret = hif_usb_send_regout(hif_dev,skb);
    #line 471 
    break;
    #line 472 
    default: 
             #line 472 
    ;
    #line 473 
    _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Invalid TX pipe: %d\n",(int)pipe_id);
    #line 475 
    ret = -22;
    #line 476 
    break;
  }
  #line 479 
  return ret;
}

#line 482  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
__inline static bool check_index(struct sk_buff *skb, u8 idx)
{
  #line 484 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 486 
  tx_ctl = HTC_SKB_CB(skb);
  #line 488 
  if ((unsigned int)tx_ctl->type == 1U && (int)tx_ctl->sta_idx == (int)idx) 
    #line 490 
    return (_Bool)1;
  #line 492 
  return (_Bool)0;
}

#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void hif_usb_sta_drain(void *hif_handle, u8 idx)
{
  #line 498 
  struct sk_buff *skb;
  #line 498 
  struct sk_buff *tmp;
  #line 499 
  unsigned long flags;
  #line 497 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)hif_handle;
  #line 501 
  cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 503 
  skb = hif_dev->tx.tx_skb_queue.next;
  #line 503 
  tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 503 
  while ((struct sk_buff *)(& hif_dev->tx.tx_skb_queue) != skb) {
    #line 504 
    if ((int)check_index(skb,(unsigned char)((int)idx)) != 0) {
      #line 505 
      __skb_unlink_0(skb,& hif_dev->tx.tx_skb_queue);
      #line 506 
      ath9k_htc_txcompletion_cb(hif_dev->htc_handle,skb,(_Bool)0);
      #line 508 
      hif_dev->tx.tx_skb_cnt = (u16)((int)hif_dev->tx.tx_skb_cnt - 1);
      #line 509 
      (((hif_dev->htc_handle)->drv_priv)->debug.tx_stats.skb_failed) ++;
    }
    #line 503 
    skb = tmp;
    #line 503 
    tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  }
  #line 513 
  cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
  #line 514 
  return;
}

#line 516  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static struct ath9k_htc_hif hif_usb = {.name = (char *)"ath9k_hif_usb", .control_dl_pipe = (unsigned char)3U, .control_ul_pipe = (unsigned char)4U, .start = & hif_usb_start, .stop = & hif_usb_stop, .sta_drain = & hif_usb_sta_drain, .send = & hif_usb_send};
#line 529  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_rx_stream(struct hif_device_usb *hif_dev, struct sk_buff *skb)
{
  #line 532 
  struct sk_buff *nskb;
  #line 532 
  struct sk_buff *skb_pool[10U];
  #line 533 
  int i;
  #line 534 
  int rx_remain_len;
  #line 534 
  int rx_pkt_len;
  #line 536 
  u8 *ptr;
  #line 533 
  int index = 0;
  #line 533 
  int len = (int)skb->len;
  #line 535 
  u16 pool_index = (unsigned short)0U;
  #line 538 
  cif_spin_lock_rx_lock_of_hif_device_usb(& hif_dev->rx_lock);
  #line 540 
  rx_remain_len = hif_dev->rx_remain_len;
  #line 541 
  rx_pkt_len = hif_dev->rx_transfer_len;
  #line 543 
  if (rx_remain_len != 0) {
    #line 544 
    struct sk_buff *remain_skb = hif_dev->remain_skb;
    #line 546 
    if (remain_skb != (struct sk_buff *)0) {
      #line 559 
      u16 tmp;
      #line 547 
      ptr = remain_skb->data;
      #line 549 
      index = rx_remain_len;
      #line 550 
      rx_remain_len -= hif_dev->rx_pad_len;
      #line 551 
      ptr += (unsigned long)rx_pkt_len;
      #line 553 
      memcpy((void *)ptr,(void *)skb->data,(unsigned long)rx_remain_len);
      #line 555 
      rx_pkt_len += rx_remain_len;
      #line 556 
      hif_dev->rx_remain_len = 0;
      #line 557 
      skb_put(remain_skb,(unsigned int)rx_pkt_len);
      #line 559 
      tmp = pool_index;
      #line 559 
      pool_index = (u16)((int)pool_index + 1);
      #line 559 
      skb_pool[(int)tmp] = remain_skb;
    }
    else 
         #line 562 
         index = rx_remain_len;
  }
  #line 566 
  cif_spin_unlock_rx_lock_of_hif_device_usb(& hif_dev->rx_lock);
  #line 568 
  while (index < len) {
    #line 569 
    u16 pkt_len;
    #line 570 
    u16 pkt_tag;
    #line 571 
    u16 pad_len;
    #line 572 
    int chk_idx;
    #line 574 
    ptr = skb->data;
    #line 576 
    pkt_len = get_unaligned_le16((void *)(ptr + (unsigned long)index));
    #line 577 
    pkt_tag = get_unaligned_le16((void *)(ptr + ((unsigned long)index + (unsigned long)2U)));
    #line 579 
    if ((unsigned int)pkt_tag != 19968U) {
      #line 580 
      (((hif_dev->htc_handle)->drv_priv)->debug.skbrx_stats.skb_dropped) ++;
      #line 581 
      return;
    }
    #line 584 
    pad_len = (unsigned short)(4U - ((unsigned int)pkt_len & 3U));
    #line 585 
    if ((unsigned int)pad_len == 4U) 
                                     #line 586 
                                     pad_len = (unsigned short)0U;
    #line 588 
    chk_idx = index;
    #line 589 
    index = ((index + 4) + (int)pkt_len) + (int)pad_len;
    #line 591 
    if (index > 16384) {
      #line 592 
      cif_spin_lock_rx_lock_of_hif_device_usb(& hif_dev->rx_lock);
      #line 593 
      hif_dev->rx_remain_len = index + -16384;
      #line 594 
      hif_dev->rx_transfer_len = 16380 - chk_idx;
      #line 596 
      hif_dev->rx_pad_len = (int)pad_len;
      #line 598 
      nskb = __dev_alloc_skb((unsigned int)((int)pkt_len + 32),2592U);
      #line 599 
      if (nskb == (struct sk_buff *)0) {
        #line 600 
        _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: RX memory allocation error\n");
        #line 602 
        cif_spin_unlock_rx_lock_of_hif_device_usb(& hif_dev->rx_lock);
        #line 603 
        goto err;
      }
      #line 605 
      skb_reserve(nskb,32);
      #line 606 
      (((hif_dev->htc_handle)->drv_priv)->debug.skbrx_stats.skb_allocated) ++;
      #line 608 
      memcpy((void *)nskb->data,(void *)(skb->data + ((unsigned long)chk_idx + (unsigned long)4U)),(unsigned long)hif_dev->rx_transfer_len);
      #line 612 
      hif_dev->remain_skb = nskb;
      #line 613 
      cif_spin_unlock_rx_lock_of_hif_device_usb(& hif_dev->rx_lock);
    }
    else {
      #line 626 
      u16 tmp_0;
      #line 615 
      nskb = __dev_alloc_skb((unsigned int)((int)pkt_len + 32),2592U);
      #line 616 
      if (nskb == (struct sk_buff *)0) {
        #line 617 
        _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: RX memory allocation error\n");
        #line 619 
        goto err;
      }
      #line 621 
      skb_reserve(nskb,32);
      #line 622 
      (((hif_dev->htc_handle)->drv_priv)->debug.skbrx_stats.skb_allocated) ++;
      #line 624 
      memcpy((void *)nskb->data,(void *)(skb->data + ((unsigned long)chk_idx + (unsigned long)4U)),(unsigned long)pkt_len);
      #line 625 
      skb_put(nskb,(unsigned int)pkt_len);
      #line 626 
      tmp_0 = pool_index;
      #line 626 
      pool_index = (u16)((int)pool_index + 1);
      #line 626 
      skb_pool[(int)tmp_0] = nskb;
    }
  }
  #line 630 
  err: 
       #line 630 
  ;
  #line 631 
  i = 0;
  #line 631 
  while ((int)pool_index > i) {
    #line 632 
    ((hif_dev->htc_handle)->drv_priv)->debug.skbrx_stats.skb_completed_bytes += (skb_pool[i])->len;
    #line 633 
    ath9k_htc_rx_msg(hif_dev->htc_handle,skb_pool[i],(skb_pool[i])->len,(unsigned char)2);
    #line 635 
    (((hif_dev->htc_handle)->drv_priv)->debug.skbrx_stats.skb_completed) ++;
    #line 631 
    i ++;
  }
  #line 637 
  return;
}

#line 639  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_rx_cb(struct urb *urb)
{
  #line 644 
  int ret;
  #line 641 
  struct sk_buff *skb = (struct sk_buff *)urb->context;
  #line 642 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)usb_get_intfdata(usb_ifnum_to_if(urb->dev,0U));
  #line 646 
  if (skb == (struct sk_buff *)0) 
                                  #line 647 
                                  return;
  #line 649 
  if (hif_dev == (struct hif_device_usb *)0) 
                                             #line 650 
                                             goto free;
  #line 652 
  switch (urb->status) {
    #line 653 
    case 0: 
            #line 653 
    ;
    #line 654 
    break;
    #line 655 
    case -2: 
             #line 655 
    ;
    #line 656 
    case -104: 
               #line 656 
    ;
    #line 657 
    case -19: 
              #line 657 
    ;
    #line 658 
    case -108: 
               #line 658 
    ;
    #line 659 
    goto free;
    #line 660 
    default: 
             #line 660 
    ;
    #line 661 
    goto resubmit;
  }
  #line 664 
  if ((long)(urb->actual_length != 0U) != 0L) {
    #line 665 
    skb_put(skb,urb->actual_length);
    #line 666 
    ath9k_hif_usb_rx_stream(hif_dev,skb);
  }
  #line 669 
  resubmit: 
            #line 669 
  ;
  #line 670 
  skb_reset_tail_pointer(skb);
  #line 671 
  skb_trim(skb,0U);
  #line 673 
  usb_anchor_urb(urb,& hif_dev->rx_submitted);
  #line 674 
  ret = cif_usb_submit_urb(urb,2592U);
  #line 675 
  if (ret != 0) {
    #line 676 
    usb_unanchor_urb(urb);
    #line 677 
    goto free;
  }
  #line 680 
  return;
  #line 681 
  free: 
        #line 681 
  ;
  #line 682 
  kfree_skb(skb);
  #line 683 
  return;
}

#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_reg_in_cb(struct urb *urb)
{
  #line 688 
  struct sk_buff *nskb;
  #line 691 
  int ret;
  #line 687 
  struct sk_buff *skb = (struct sk_buff *)urb->context;
  #line 689 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)usb_get_intfdata(usb_ifnum_to_if(urb->dev,0U));
  #line 693 
  if (skb == (struct sk_buff *)0) 
                                  #line 694 
                                  return;
  #line 696 
  if (hif_dev == (struct hif_device_usb *)0) 
                                             #line 697 
                                             goto free;
  #line 699 
  switch (urb->status) {
    #line 700 
    case 0: 
            #line 700 
    ;
    #line 701 
    break;
    #line 702 
    case -2: 
             #line 702 
    ;
    #line 703 
    case -104: 
               #line 703 
    ;
    #line 704 
    case -19: 
              #line 704 
    ;
    #line 705 
    case -108: 
               #line 705 
    ;
    #line 706 
    goto free;
    #line 707 
    default: 
             #line 707 
    ;
    #line 708 
    skb_reset_tail_pointer(skb);
    #line 709 
    skb_trim(skb,0U);
    #line 711 
    goto resubmit;
  }
  #line 714 
  if ((long)(urb->actual_length != 0U) != 0L) {
    #line 715 
    skb_put(skb,urb->actual_length);
    #line 718 
    ath9k_htc_rx_msg(hif_dev->htc_handle,skb,skb->len,(unsigned char)3);
    #line 722 
    nskb = alloc_skb(64U,2592U);
    #line 723 
    if (nskb == (struct sk_buff *)0) {
      #line 724 
      _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: REG_IN memory allocation failure\n");
      #line 726 
      urb->context = (void *)0;
      #line 727 
      return;
    }
    #line 730 
    ;
    #line 730 
    ;
    #line 730 
    ;
    #line 730 
    ;
    #line 730 
    usb_fill_int_urb(urb,hif_dev->udev,__create_pipe(hif_dev->udev,3U) | 1073741952U,(void *)nskb->data,64,& ath9k_hif_usb_reg_in_cb,(void *)nskb,1);
  }
  #line 737 
  resubmit: 
            #line 737 
  ;
  #line 738 
  usb_anchor_urb(urb,& hif_dev->reg_in_submitted);
  #line 739 
  ret = cif_usb_submit_urb(urb,2592U);
  #line 740 
  if (ret != 0) {
    #line 741 
    usb_unanchor_urb(urb);
    #line 742 
    goto free;
  }
  #line 745 
  return;
  #line 746 
  free: 
        #line 746 
  ;
  #line 747 
  kfree_skb(skb);
  #line 748 
  urb->context = (void *)0;
  #line 749 
  return;
}

#line 751  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_dealloc_tx_urbs(struct hif_device_usb *hif_dev)
{
  #line 769 
  void *__mptr_2;
  #line 756 
  void *__mptr;
  #line 769 
  void *__mptr_3;
  #line 756 
  void *__mptr_0;
  #line 754 
  unsigned long flags;
  #line 753 
  struct tx_buf *tx_buf = (struct tx_buf *)0;
  #line 753 
  struct tx_buf *tx_buf_tmp = (struct tx_buf *)0;
  #line 756 
  __mptr = (void *)hif_dev->tx.tx_buf.next;
  #line 756 
  tx_buf = ((struct tx_buf *)(__mptr + 18446744073709551488U));
  #line 756 
  __mptr_0 = (void *)tx_buf->list.next;
  #line 757 
  tx_buf_tmp = ((struct tx_buf *)(__mptr_0 + 18446744073709551488U));
  #line 756 
  while (& tx_buf->list != & hif_dev->tx.tx_buf) {
    #line 756 
    void *__mptr_1;
    #line 758 
    cif_usb_kill_urb(tx_buf->urb);
    #line 759 
    list_del(& tx_buf->list);
    #line 760 
    usb_free_urb(tx_buf->urb);
    #line 761 
    kfree((void *)tx_buf->buf);
    #line 762 
    kfree((void *)tx_buf);
    #line 756 
    tx_buf = tx_buf_tmp;
    #line 756 
    __mptr_1 = (void *)tx_buf_tmp->list.next;
    #line 756 
    tx_buf_tmp = ((struct tx_buf *)(__mptr_1 + 18446744073709551488U));
  }
  #line 765 
  cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock);
  #line 766 
  hif_dev->tx.flags = (unsigned char)((unsigned int)hif_dev->tx.flags | 2U);
  #line 767 
  cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(& hif_dev->tx.tx_lock,flags);
  #line 769 
  __mptr_2 = (void *)hif_dev->tx.tx_pending.next;
  #line 769 
  tx_buf = ((struct tx_buf *)(__mptr_2 + 18446744073709551488U));
  #line 769 
  __mptr_3 = (void *)tx_buf->list.next;
  #line 770 
  tx_buf_tmp = ((struct tx_buf *)(__mptr_3 + 18446744073709551488U));
  #line 769 
  while (& tx_buf->list != & hif_dev->tx.tx_pending) {
    #line 769 
    void *__mptr_4;
    #line 771 
    cif_usb_kill_urb(tx_buf->urb);
    #line 772 
    list_del(& tx_buf->list);
    #line 773 
    usb_free_urb(tx_buf->urb);
    #line 774 
    kfree((void *)tx_buf->buf);
    #line 775 
    kfree((void *)tx_buf);
    #line 769 
    tx_buf = tx_buf_tmp;
    #line 769 
    __mptr_4 = (void *)tx_buf_tmp->list.next;
    #line 769 
    tx_buf_tmp = ((struct tx_buf *)(__mptr_4 + 18446744073709551488U));
  }
  #line 778 
  usb_kill_anchored_urbs(& hif_dev->mgmt_submitted);
  #line 779 
  return;
}

#line 781  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_alloc_tx_urbs(struct hif_device_usb *hif_dev)
{
  #line 783 
  struct tx_buf *tx_buf;
  #line 784 
  int i;
  #line 786 
  INIT_LIST_HEAD_0(& hif_dev->tx.tx_buf);
  #line 787 
  INIT_LIST_HEAD_0(& hif_dev->tx.tx_pending);
  #line 788 
  spinlock_check(& hif_dev->tx.tx_lock);
  {
    #line 788 
    struct lock_class_key __key;
    #line 788 
    __raw_spin_lock_init(& hif_dev->tx.tx_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&hif_dev->tx.tx_lock)->rlock",& __key);
  }
  #line 789 
  __skb_queue_head_init(& hif_dev->tx.tx_skb_queue);
  #line 790 
  init_usb_anchor(& hif_dev->mgmt_submitted);
  #line 792 
  i = 0;
  #line 792 
  while (i <= 7) {
    #line 793 
    tx_buf = (struct tx_buf *)kzalloc_2(144UL,3264U);
    #line 794 
    if (tx_buf == (struct tx_buf *)0) 
                                      #line 795 
                                      goto err;
    #line 797 
    tx_buf->buf = (u8 *)kzalloc_2(32768UL,3264U);
    #line 798 
    if (tx_buf->buf == (u8 *)0U) 
                                 #line 799 
                                 goto err;
    #line 801 
    tx_buf->urb = usb_alloc_urb(0,3264U);
    #line 802 
    if (tx_buf->urb == (struct urb *)0) 
                                        #line 803 
                                        goto err;
    #line 805 
    tx_buf->hif_dev = hif_dev;
    #line 806 
    __skb_queue_head_init(& tx_buf->skb_queue);
    #line 808 
    list_add_tail(& tx_buf->list,& hif_dev->tx.tx_buf);
    #line 792 
    i ++;
  }
  #line 811 
  hif_dev->tx.tx_buf_cnt = (unsigned char)8U;
  #line 813 
  return 0;
  #line 814 
  err: 
       #line 814 
  ;
  #line 815 
  if (tx_buf != (struct tx_buf *)0) {
    #line 816 
    kfree((void *)tx_buf->buf);
    #line 817 
    kfree((void *)tx_buf);
  }
  #line 819 
  ath9k_hif_usb_dealloc_tx_urbs(hif_dev);
  #line 820 
  return -12;
}

#line 823  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_dealloc_rx_urbs(struct hif_device_usb *hif_dev)
{
  #line 825 
  usb_kill_anchored_urbs(& hif_dev->rx_submitted);
  #line 826 
  return;
}

#line 828  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_alloc_rx_urbs(struct hif_device_usb *hif_dev)
{
  #line 832 
  int i;
  #line 832 
  int ret;
  #line 830 
  struct urb *urb = (struct urb *)0;
  #line 831 
  struct sk_buff *skb = (struct sk_buff *)0;
  #line 834 
  init_usb_anchor(& hif_dev->rx_submitted);
  #line 835 
  spinlock_check(& hif_dev->rx_lock);
  {
    #line 835 
    struct lock_class_key __key;
    #line 835 
    __raw_spin_lock_init(& hif_dev->rx_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&hif_dev->rx_lock)->rlock",& __key);
  }
  #line 837 
  i = 0;
  #line 837 
  while (i <= 7) {
    {
      #line 840 
      urb = usb_alloc_urb(0,3264U);
      #line 841 
      if (urb == (struct urb *)0) {
        #line 842 
        ret = -12;
        #line 843 
        goto err_urb;
      }
      #line 847 
      skb = alloc_skb(16384U,3264U);
      #line 848 
      if (skb == (struct sk_buff *)0) {
        #line 849 
        ret = -12;
        #line 850 
        goto err_skb;
      }
      #line 853 
      ;
      #line 853 
      ;
      #line 853 
      ;
      #line 853 
      ;
      #line 853 
      usb_fill_bulk_urb(urb,hif_dev->udev,__create_pipe(hif_dev->udev,2U) | 3221225600U,(void *)skb->data,16384,& ath9k_hif_usb_rx_cb,(void *)skb);
      #line 860 
      usb_anchor_urb(urb,& hif_dev->rx_submitted);
      #line 863 
      ret = cif_usb_submit_urb(urb,3264U);
      #line 864 
      if (ret != 0) {
        #line 865 
        usb_unanchor_urb(urb);
        #line 866 
        goto err_submit;
      }
      #line 873 
      usb_free_urb(urb);
    }
    #line 837 
    i ++;
  }
  #line 876 
  return 0;
  #line 878 
  err_submit: 
              #line 878 
  ;
  #line 879 
  kfree_skb(skb);
  #line 880 
  err_skb: 
           #line 880 
  ;
  #line 881 
  usb_free_urb(urb);
  #line 882 
  err_urb: 
           #line 882 
  ;
  #line 883 
  ath9k_hif_usb_dealloc_rx_urbs(hif_dev);
  #line 884 
  return ret;
}

#line 887  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_dealloc_reg_in_urbs(struct hif_device_usb *hif_dev)
{
  #line 889 
  usb_kill_anchored_urbs(& hif_dev->reg_in_submitted);
  #line 890 
  return;
}

#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_alloc_reg_in_urbs(struct hif_device_usb *hif_dev)
{
  #line 896 
  int i;
  #line 896 
  int ret;
  #line 894 
  struct urb *urb = (struct urb *)0;
  #line 895 
  struct sk_buff *skb = (struct sk_buff *)0;
  #line 898 
  init_usb_anchor(& hif_dev->reg_in_submitted);
  #line 900 
  i = 0;
  #line 900 
  while (i <= 63) {
    {
      #line 903 
      urb = usb_alloc_urb(0,3264U);
      #line 904 
      if (urb == (struct urb *)0) {
        #line 905 
        ret = -12;
        #line 906 
        goto err_urb;
      }
      #line 910 
      skb = alloc_skb(64U,3264U);
      #line 911 
      if (skb == (struct sk_buff *)0) {
        #line 912 
        ret = -12;
        #line 913 
        goto err_skb;
      }
      #line 916 
      ;
      #line 916 
      ;
      #line 916 
      ;
      #line 916 
      ;
      #line 916 
      usb_fill_int_urb(urb,hif_dev->udev,__create_pipe(hif_dev->udev,3U) | 1073741952U,(void *)skb->data,64,& ath9k_hif_usb_reg_in_cb,(void *)skb,1);
      #line 923 
      usb_anchor_urb(urb,& hif_dev->reg_in_submitted);
      #line 926 
      ret = cif_usb_submit_urb(urb,3264U);
      #line 927 
      if (ret != 0) {
        #line 928 
        usb_unanchor_urb(urb);
        #line 929 
        goto err_submit;
      }
      #line 936 
      usb_free_urb(urb);
    }
    #line 900 
    i ++;
  }
  #line 939 
  return 0;
  #line 941 
  err_submit: 
              #line 941 
  ;
  #line 942 
  kfree_skb(skb);
  #line 943 
  err_skb: 
           #line 943 
  ;
  #line 944 
  usb_free_urb(urb);
  #line 945 
  err_urb: 
           #line 945 
  ;
  #line 946 
  ath9k_hif_usb_dealloc_reg_in_urbs(hif_dev);
  #line 947 
  return ret;
}

#line 950  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_alloc_urbs(struct hif_device_usb *hif_dev)
{
  #line 953 
  init_usb_anchor(& hif_dev->regout_submitted);
  #line 956 
  if (ath9k_hif_usb_alloc_tx_urbs(hif_dev) < 0) 
                                                #line 957 
                                                goto err;
  #line 960 
  if (ath9k_hif_usb_alloc_rx_urbs(hif_dev) < 0) 
                                                #line 961 
                                                goto err_rx;
  #line 964 
  if (ath9k_hif_usb_alloc_reg_in_urbs(hif_dev) < 0) 
                                                    #line 965 
                                                    goto err_reg;
  #line 967 
  return 0;
  #line 968 
  err_reg: 
           #line 968 
  ;
  #line 969 
  ath9k_hif_usb_dealloc_rx_urbs(hif_dev);
  #line 970 
  err_rx: 
          #line 970 
  ;
  #line 971 
  ath9k_hif_usb_dealloc_tx_urbs(hif_dev);
  #line 972 
  err: 
       #line 972 
  ;
  #line 973 
  return -12;
}

#line 976  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_dealloc_urbs(struct hif_device_usb *hif_dev)
{
  #line 978 
  usb_kill_anchored_urbs(& hif_dev->regout_submitted);
  #line 979 
  ath9k_hif_usb_dealloc_reg_in_urbs(hif_dev);
  #line 980 
  ath9k_hif_usb_dealloc_tx_urbs(hif_dev);
  #line 981 
  ath9k_hif_usb_dealloc_rx_urbs(hif_dev);
  #line 982 
  return;
}

#line 984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_download_fw(struct hif_device_usb *hif_dev)
{
  #line 986 
  int transfer;
  #line 986 
  int err;
  #line 991 
  u32 firm_offset;
  #line 987 
  void *data = hif_dev->fw_data;
  #line 988 
  size_t len = hif_dev->fw_size;
  #line 989 
  u32 addr = 5246976U;
  #line 990 
  u8 *buf = kzalloc_2(4096UL,3264U);
  #line 993 
  if (buf == (u8 *)0U) 
                       #line 994 
                       return -12;
  #line 996 
  while (len != 0UL) {
    #line 997 
    unsigned long __UNIQUE_ID___x565;
    #line 997 
    unsigned long tmp_0;
    {
      #line 997 
      __UNIQUE_ID___x565 = len;
      #line 997 
      unsigned long __UNIQUE_ID___y566 = 4096UL;
      #line 997 
      if (__UNIQUE_ID___x565 < __UNIQUE_ID___y566) 
                                                   #line 997 
                                                   tmp_0 = __UNIQUE_ID___x565; else 
                                                                    #line 997 
                                                                    tmp_0 = __UNIQUE_ID___y566;
      }
    #line 997 
    transfer = (int)tmp_0;
    #line 998 
    memcpy((void *)buf,data,(unsigned long)transfer);
    #line 1000 
    ;
    #line 1000 
    ;
    #line 1000 
    ;
    #line 1000 
    ;
    #line 1000 
    err = usb_control_msg(hif_dev->udev,__create_pipe(hif_dev->udev,0U) | 2147483648U,(unsigned char)48,(unsigned char)64,(unsigned short)((int)((unsigned short)(addr >> 8))),(unsigned short)0,(void *)buf,(unsigned short)((int)((unsigned short)transfer)),1000);
    #line 1005 
    if (err < 0) {
      #line 1006 
      kfree((void *)buf);
      #line 1007 
      return err;
    }
    #line 1010 
    len -= (unsigned long)transfer;
    #line 1011 
    data += (unsigned long)transfer;
    #line 1012 
    addr += (unsigned int)transfer;
  }
  #line 1014 
  kfree((void *)buf);
  #line 1016 
  if ((hif_dev->usb_device_id)->driver_info + 18446744073709551615UL <= 1UL) 
    #line 1017 
    firm_offset = 9461760U; else 
                                 #line 1019 
                                 firm_offset = 9449472U;
  #line 1024 
  ;
  #line 1024 
  ;
  #line 1024 
  err = usb_control_msg(hif_dev->udev,__create_pipe(hif_dev->udev,0U) | 2147483648U,(unsigned char)49,(unsigned char)64,(unsigned short)((int)((unsigned short)(firm_offset >> 8))),(unsigned short)0,(void *)0,(unsigned short)0,1000);
  #line 1028 
  if (err != 0) 
                #line 1029 
                return -5;
  #line 1031 
  _dev_info(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Transferred FW: %s, size: %ld\n",(char *)(& hif_dev->fw_name),hif_dev->fw_size);
  #line 1034 
  return 0;
}

#line 1037  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_dev_init(struct hif_device_usb *hif_dev)
{
  #line 1039 
  int ret;
  #line 1041 
  ret = ath9k_hif_usb_download_fw(hif_dev);
  #line 1042 
  if (ret != 0) {
    #line 1043 
    _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Firmware - %s download failed\n",(char *)(& hif_dev->fw_name));
    #line 1046 
    return ret;
  }
  #line 1050 
  ret = ath9k_hif_usb_alloc_urbs(hif_dev);
  #line 1051 
  if (ret != 0) {
    #line 1052 
    _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Unable to allocate URBs\n");
    #line 1054 
    return ret;
  }
  #line 1057 
  return 0;
}

#line 1060  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_dev_deinit(struct hif_device_usb *hif_dev)
{
  #line 1062 
  ath9k_hif_usb_dealloc_urbs(hif_dev);
  #line 1063 
  return;
}

#line 1069  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_firmware_fail(struct hif_device_usb *hif_dev)
{
  #line 1071 
  struct device *dev = & (hif_dev->udev)->dev;
  #line 1072 
  struct device *parent = dev->parent;
  #line 1074 
  complete_all(& hif_dev->fw_done);
  #line 1076 
  if (parent != (struct device *)0) 
                                    #line 1077 
                                    device_lock(parent);
  #line 1079 
  device_release_driver(dev);
  #line 1081 
  if (parent != (struct device *)0) 
                                    #line 1082 
                                    device_unlock(parent);
  #line 1083 
  return;
}

#line 1085 
#line 1157 
static void ath9k_hif_usb_firmware_cb(struct firmware *fw, void *context);
#line 1088  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_request_firmware(struct hif_device_usb *hif_dev, bool first)
{
  #line 1091 
  char index[8U];
  #line 1091 
  char *chip;
  #line 1092 
  int ret;
  #line 1094 
  if ((int)first != 0) 
    #line 1095 
    if (htc_use_dev_fw != 0) {
      #line 1096 
      hif_dev->fw_minor_index = 5;
      #line 1097 
      sprintf((char *)(& index),(char *)"%s",(char *)"dev");
    }
    else {
      #line 1099 
      hif_dev->fw_minor_index = 4;
      #line 1100 
      sprintf((char *)(& index),(char *)"%d",hif_dev->fw_minor_index);
    }
  else {
    #line 1103 
    (hif_dev->fw_minor_index) --;
    #line 1104 
    sprintf((char *)(& index),(char *)"%d",hif_dev->fw_minor_index);
  }
  #line 1108 
  if (hif_dev->fw_minor_index == 3) {
    #line 1109 
    char *filename;
    #line 1111 
    if ((hif_dev->usb_device_id)->driver_info + 18446744073709551615UL <= 1UL) 
      #line 1112 
      filename = (char *)"htc_7010.fw"; else 
                                             #line 1114 
                                             filename = (char *)"htc_9271.fw";
    #line 1119 
    snprintf((char *)(& hif_dev->fw_name),32UL,(char *)"%s",filename);
  }
  else 
    #line 1122 
    if (hif_dev->fw_minor_index <= 2) {
      #line 1123 
      _dev_err(& (hif_dev->udev)->dev,(char *)"no suitable firmware found!\n");
      #line 1125 
      return -2;
    }
    else {
      #line 1127 
      if ((hif_dev->usb_device_id)->driver_info + 18446744073709551615UL <= 1UL) 
        #line 1128 
        chip = (char *)"7010"; else 
                                    #line 1130 
                                    chip = (char *)"9271";
      #line 1136 
      snprintf((char *)(& hif_dev->fw_name),32UL,(char *)"%s/htc_%s-%d.%s.0.fw",(char *)"ath9k_htc",chip,1,(char *)(& index));
    }
  #line 1141 
  ret = request_firmware_nowait(& __this_module,(_Bool)1,(char *)(& hif_dev->fw_name),& (hif_dev->udev)->dev,3264U,(void *)hif_dev,& ath9k_hif_usb_firmware_cb);
  #line 1144 
  if (ret != 0) {
    #line 1145 
    _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Async request for firmware %s failed\n",(char *)(& hif_dev->fw_name));
    #line 1148 
    return ret;
  }
  #line 1151 
  _dev_info(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Firmware %s requested\n",(char *)(& hif_dev->fw_name));
  #line 1154 
  return ret;
}

#line 1157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_firmware_cb(struct firmware *fw, void *context)
{
  #line 1160 
  int ret;
  #line 1159 
  struct hif_device_usb *hif_dev = (struct hif_device_usb *)context;
  #line 1162 
  if (fw == (struct firmware *)0) {
    #line 1163 
    ret = ath9k_hif_request_firmware(hif_dev,(_Bool)0);
    #line 1164 
    if (ret == 0) 
                  #line 1165 
                  return;
    #line 1167 
    _dev_err(& (hif_dev->udev)->dev,(char *)"ath9k_htc: Failed to get firmware %s\n",(char *)(& hif_dev->fw_name));
    #line 1170 
    goto err_fw;
  }
  #line 1173 
  hif_dev->htc_handle = ath9k_htc_hw_alloc((void *)hif_dev,& hif_usb,& (hif_dev->udev)->dev);
  #line 1175 
  if (hif_dev->htc_handle == (struct htc_target *)0) 
                                                     #line 1176 
                                                     goto err_dev_alloc;
  #line 1178 
  hif_dev->fw_data = (void *)fw->data;
  #line 1179 
  hif_dev->fw_size = fw->size;
  #line 1183 
  ret = ath9k_hif_usb_dev_init(hif_dev);
  #line 1184 
  if (ret != 0) 
                #line 1185 
                goto err_dev_init;
  #line 1187 
  ret = ath9k_htc_hw_init(hif_dev->htc_handle,& (hif_dev->interface)->dev,(unsigned short)((int)(hif_dev->usb_device_id)->idProduct),(hif_dev->udev)->product,(unsigned int)(hif_dev->usb_device_id)->driver_info);
  #line 1192 
  if (ret != 0) {
    #line 1193 
    ret = -22;
    #line 1194 
    goto err_htc_hw_init;
  }
  #line 1197 
  cif_release_firmware(fw);
  #line 1198 
  hif_dev->flags = (unsigned char)((unsigned int)hif_dev->flags | 2U);
  #line 1199 
  complete_all(& hif_dev->fw_done);
  #line 1201 
  return;
  #line 1203 
  err_htc_hw_init: 
                   #line 1203 
  ;
  #line 1204 
  ath9k_hif_usb_dev_deinit(hif_dev);
  #line 1205 
  err_dev_init: 
                #line 1205 
  ;
  #line 1206 
  ath9k_htc_hw_free(hif_dev->htc_handle);
  #line 1207 
  err_dev_alloc: 
                 #line 1207 
  ;
  #line 1208 
  cif_release_firmware(fw);
  #line 1209 
  err_fw: 
          #line 1209 
  ;
  #line 1210 
  ath9k_hif_usb_firmware_fail(hif_dev);
  #line 1211 
  return;
}

#line 1216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int send_eject_command(struct usb_interface *interface)
{
  #line 1220 
  struct usb_endpoint_descriptor *endpoint;
  #line 1221 
  unsigned char *cmd;
  #line 1222 
  u8 bulk_out_ep;
  #line 1223 
  int r;
  #line 1218 
  struct usb_device *udev = interface_to_usbdev(interface);
  #line 1219 
  struct usb_host_interface *iface_desc = interface->altsetting;
  #line 1225 
  if ((unsigned int)iface_desc->desc.bNumEndpoints <= 1U) 
                                                          #line 1226 
                                                          return -19;
  #line 1229 
  r = 1;
  #line 1229 
  while (r >= 0) {
    {
      #line 1230 
      endpoint = & (iface_desc->endpoint + (unsigned long)r)->desc;
      #line 1231 
      if (usb_endpoint_dir_out(endpoint) != 0) {
        #line 1231 
        if (usb_endpoint_xfer_bulk(endpoint) != 0) {
          #line 1233 
          bulk_out_ep = endpoint->bEndpointAddress;
          #line 1234 
          break;
        }
      }
    }
    #line 1229 
    r --;
  }
  #line 1237 
  if (r == -1) {
    #line 1238 
    _dev_err(& udev->dev,(char *)"ath9k_htc: Could not find bulk out endpoint\n");
    #line 1240 
    return -19;
  }
  #line 1243 
  cmd = (unsigned char *)kzalloc_2(31UL,3264U);
  #line 1244 
  if (cmd == (unsigned char *)0U) 
                                  #line 1245 
                                  return -19;
  #line 1248 
  *cmd = (unsigned char)85U;
  #line 1249 
  *(cmd + 1U) = (unsigned char)83U;
  #line 1250 
  *(cmd + 2U) = (unsigned char)66U;
  #line 1251 
  *(cmd + 3U) = (unsigned char)67U;
  #line 1252 
  *(cmd + 14U) = (unsigned char)6U;
  #line 1254 
  *(cmd + 15U) = (unsigned char)27U;
  #line 1255 
  *(cmd + 19U) = (unsigned char)2U;
  #line 1257 
  _dev_info(& udev->dev,(char *)"Ejecting storage device...\n");
  #line 1258 
  ;
  #line 1258 
  ;
  #line 1258 
  r = usb_bulk_msg(udev,__create_pipe(udev,(unsigned int)bulk_out_ep) | 3221225472U,(void *)cmd,31,(int *)0,2000);
  #line 1260 
  kfree((void *)cmd);
  #line 1261 
  if (r != 0) 
              #line 1262 
              return r;
  #line 1267 
  usb_set_intfdata(interface,(void *)0);
  #line 1268 
  return 0;
}

#line 1271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_probe(struct usb_interface *interface, struct usb_device_id *id)
{
  #line 1275 
  struct hif_device_usb *hif_dev;
  #line 1274 
  struct usb_device *udev = interface_to_usbdev(interface);
  #line 1276 
  int ret = 0;
  #line 1278 
  if (id->driver_info == 3UL) {
    #line 1279 
    return send_eject_command(interface);
  }
  #line 1281 
  hif_dev = (struct hif_device_usb *)kzalloc_2(1232UL,3264U);
  #line 1282 
  if (hif_dev == (struct hif_device_usb *)0) {
    #line 1283 
    ret = -12;
    #line 1284 
    goto err_alloc;
  }
  #line 1287 
  usb_get_dev(udev);
  #line 1289 
  hif_dev->udev = udev;
  #line 1290 
  hif_dev->interface = interface;
  #line 1291 
  hif_dev->usb_device_id = id;
  #line 1293 
  udev->reset_resume = (unsigned int)1U;
  #line 1295 
  usb_set_intfdata(interface,(void *)hif_dev);
  #line 1297 
  __init_completion(& hif_dev->fw_done);
  #line 1299 
  ret = ath9k_hif_request_firmware(hif_dev,(_Bool)1);
  #line 1300 
  if (ret != 0) 
                #line 1301 
                goto err_fw_req;
  #line 1303 
  return ret;
  #line 1305 
  err_fw_req: 
              #line 1305 
  ;
  #line 1306 
  usb_set_intfdata(interface,(void *)0);
  #line 1307 
  kfree((void *)hif_dev);
  #line 1308 
  usb_put_dev(udev);
  #line 1309 
  err_alloc: 
             #line 1309 
  ;
  #line 1310 
  return ret;
}

#line 1313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_reboot(struct usb_device *udev)
{
  #line 1316 
  void *buf;
  #line 1317 
  int ret;
  #line 1315 
  u32 reboot_cmd = 4294967295U;
  #line 1319 
  buf = cif_kmemdup((void *)(& reboot_cmd),4UL,3264U);
  #line 1320 
  if (buf == (void *)0) 
                        #line 1321 
                        return;
  #line 1323 
  ;
  #line 1323 
  ;
  #line 1323 
  ret = usb_interrupt_msg(udev,__create_pipe(udev,4U) | 1073741824U,buf,4,(int *)0,1000);
  #line 1325 
  if (ret != 0) 
                #line 1326 
                _dev_err(& udev->dev,(char *)"ath9k_htc: USB reboot failed\n");
  #line 1328 
  kfree(buf);
  #line 1329 
  return;
}

#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static void ath9k_hif_usb_disconnect(struct usb_interface *interface)
{
  #line 1333 
  struct usb_device *udev = interface_to_usbdev(interface);
  #line 1334 
  struct hif_device_usb *hif_dev = usb_get_intfdata(interface);
  #line 1335 
  bool unplugged = (_Bool)(udev->state == (unsigned int)USB_STATE_NOTATTACHED);
  #line 1337 
  if (hif_dev == (struct hif_device_usb *)0) 
                                             #line 1338 
                                             return;
  #line 1340 
  wait_for_completion(& hif_dev->fw_done);
  #line 1342 
  if (((unsigned long)hif_dev->flags & 2UL) != 0UL) {
    #line 1343 
    ath9k_htc_hw_deinit(hif_dev->htc_handle,(_Bool)((bool)((int)unplugged) != 0));
    #line 1344 
    ath9k_htc_hw_free(hif_dev->htc_handle);
    #line 1345 
    ath9k_hif_usb_dev_deinit(hif_dev);
  }
  #line 1348 
  usb_set_intfdata(interface,(void *)0);
  #line 1352 
  if (! unplugged && ((unsigned long)hif_dev->flags & 2UL) != 0UL) 
                                                                   #line 1353 
                                                                   ath9k_hif_usb_reboot(udev);
  #line 1355 
  kfree((void *)hif_dev);
  #line 1356 
  _dev_info(& udev->dev,(char *)"ath9k_htc: USB layer deinitialized\n");
  #line 1357 
  usb_put_dev(udev);
  #line 1358 
  return;
}

#line 1361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_suspend(struct usb_interface *interface, pm_message_t message)
{
  #line 1364 
  struct hif_device_usb *hif_dev = usb_get_intfdata(interface);
  #line 1370 
  if (((unsigned long)hif_dev->flags & 1UL) == 0UL) 
                                                    #line 1371 
                                                    ath9k_htc_suspend(hif_dev->htc_handle);
  #line 1373 
  wait_for_completion(& hif_dev->fw_done);
  #line 1375 
  if (((unsigned long)hif_dev->flags & 2UL) != 0UL) 
                                                    #line 1376 
                                                    ath9k_hif_usb_dealloc_urbs(hif_dev);
  #line 1378 
  return 0;
}

#line 1381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static int ath9k_hif_usb_resume(struct usb_interface *interface)
{
  #line 1385 
  int ret;
  #line 1386 
  struct firmware *fw;
  #line 1383 
  struct hif_device_usb *hif_dev = usb_get_intfdata(interface);
  #line 1384 
  struct htc_target *htc_handle = hif_dev->htc_handle;
  #line 1388 
  ret = ath9k_hif_usb_alloc_urbs(hif_dev);
  #line 1389 
  if (ret != 0) 
                #line 1390 
                return ret;
  #line 1392 
  if (((unsigned long)hif_dev->flags & 2UL) != 0UL) {
    #line 1394 
    ret = cif_request_firmware(& fw,(char *)(& hif_dev->fw_name),& (hif_dev->udev)->dev);
    #line 1396 
    if (ret != 0) 
                  #line 1397 
                  goto fail_resume;
    #line 1399 
    hif_dev->fw_data = (void *)fw->data;
    #line 1400 
    hif_dev->fw_size = fw->size;
    #line 1401 
    ret = ath9k_hif_usb_download_fw(hif_dev);
    #line 1402 
    cif_release_firmware(fw);
    #line 1403 
    if (ret != 0) 
                  #line 1404 
                  goto fail_resume;
  }
  else {
    #line 1406 
    ath9k_hif_usb_dealloc_urbs(hif_dev);
    #line 1407 
    return -5;
  }
  {
    #line 1410 
    unsigned long __ms = 100UL;
    #line 1410 
    while (1) {
      #line 1410 
      unsigned long tmp_0;
      #line 1410 
      tmp_0 = __ms;
      #line 1410 
      __ms --;
      #line 1410 
      ;
      #line 1410 
      if (! (tmp_0 != 0UL)) 
                            #line 1410 
                            break;
      #line 1410 
      __const_udelay(4295000UL);
    }
  }
  #line 1412 
  ret = ath9k_htc_resume(htc_handle);
  #line 1414 
  if (ret != 0) 
                #line 1415 
                goto fail_resume;
  #line 1417 
  return 0;
  #line 1419 
  fail_resume: 
               #line 1419 
  ;
  #line 1420 
  ath9k_hif_usb_dealloc_urbs(hif_dev);
  #line 1422 
  return ret;
}

#line 1426  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
static struct usb_driver ath9k_hif_usb_driver = {.name = (char *)"ath9k_htc", .probe = & ath9k_hif_usb_probe, .disconnect = & ath9k_hif_usb_disconnect, .suspend = & ath9k_hif_usb_suspend, .resume = & ath9k_hif_usb_resume, .reset_resume = & ath9k_hif_usb_resume, .id_table = (struct usb_device_id *)(& ath9k_hif_usb_ids), .disable_hub_initiated_lpm = (unsigned int)1U, .soft_unbind = (unsigned int)1U};
#line 1440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
int ath9k_hif_usb_init(void)
{
  #line 1442 
  return cif_usb_register_driver(& ath9k_hif_usb_driver,& __this_module,
                              (char *)"ath9k_htc");
}

#line 1445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hif_usb.c"
void ath9k_hif_usb_exit(void)
{
  #line 1447 
  cif_usb_deregister(& ath9k_hif_usb_driver);
  #line 1448 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
struct usb_driver *emg_alias_ath9k_hif_usb_driver = & ath9k_hif_usb_driver;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
struct usb_device_id (*emg_alias_ath9k_hif_usb_ids)[29U] = & ath9k_hif_usb_ids;
#line 106 
#line 106 
void emg_usb_deregister(struct usb_driver *arg0);
#line 107 
#line 107 
void emg_usb_kill_urb(struct urb *arg0);
#line 108 
#line 108 
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2);
#line 109 
#line 109 
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1);
#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
void emg_wrapper_ath9k_hif_usb_disconnect(struct usb_interface *arg0)
{
  #line 114 
  ath9k_hif_usb_disconnect(arg0);
  #line 115 
  return;
}

#line 118  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
int emg_wrapper_ath9k_hif_usb_probe(struct usb_interface *arg0, struct usb_device_id *arg1)
{
  #line 119 
  return ath9k_hif_usb_probe(arg0,arg1);
}

#line 123  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
int emg_wrapper_ath9k_hif_usb_resume(struct usb_interface *arg0)
{
  #line 124 
  return ath9k_hif_usb_resume(arg0);
}

#line 128  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
int emg_wrapper_ath9k_hif_usb_suspend(struct usb_interface *arg0, struct pm_message arg1)
{
  #line 129 
  return ath9k_hif_usb_suspend(arg0,arg1);
}

#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
void emg_wrapper_hif_usb_stop(void *arg0)
{
  #line 134 
  hif_usb_stop(arg0);
  #line 135 
  return;
}

#line 167  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 170 
  ldv_init_list_head(list);
  #line 171 
  return;
}

#line 423  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_mutex_lock_mutex_of_device(struct mutex *lock)
{
  #line 426 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_device");
  #line 427 
  return;
}

#line 468  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_mutex_unlock_mutex_of_device(struct mutex *lock)
{
  #line 471 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_device");
  #line 472 
  return;
}

#line 519  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  #line 522 
  return ldv_kzalloc(size,flags);
}

#line 683  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void *cif_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 686 
  return ldv_kmemdup(src,len,gfp);
}

#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags)
{
  #line 836 
  return emg_usb_submit_urb(urb,mem_flags);
}

#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif___ldv_spin_lock_tx_lock_of_hif_usb_tx(spinlock_t *lock)
{
  #line 843 
  ldv_spin_model_lock((char *)"tx_lock_of_hif_usb_tx");
  #line 845 
  __ldv_spin_lock(lock);
  #line 846 
  return;
}

#line 849  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_unlock_irqrestore_tx_lock_of_hif_usb_tx(spinlock_t *lock, unsigned long flags)
{
  #line 852 
  ldv_spin_model_unlock((char *)"tx_lock_of_hif_usb_tx");
  #line 854 
  spin_unlock_irqrestore_0(lock,flags);
  #line 855 
  return;
}

#line 858  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_lock_tx_lock_of_hif_usb_tx(spinlock_t *lock)
{
  #line 861 
  ldv_spin_model_lock((char *)"tx_lock_of_hif_usb_tx");
  #line 863 
  spin_lock(lock);
  #line 864 
  return;
}

#line 867  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_unlock_tx_lock_of_hif_usb_tx(spinlock_t *lock)
{
  #line 870 
  ldv_spin_model_unlock((char *)"tx_lock_of_hif_usb_tx");
  #line 872 
  spin_unlock(lock);
  #line 873 
  return;
}

#line 876  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_usb_kill_urb(struct urb *urb)
{
  #line 880 
  emg_usb_kill_urb(urb);
  #line 881 
  return;
}

#line 884  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_lock_rx_lock_of_hif_device_usb(spinlock_t *lock)
{
  #line 887 
  ldv_spin_model_lock((char *)"rx_lock_of_hif_device_usb");
  #line 889 
  spin_lock(lock);
  #line 890 
  return;
}

#line 893  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_spin_unlock_rx_lock_of_hif_device_usb(spinlock_t *lock)
{
  #line 896 
  ldv_spin_model_unlock((char *)"rx_lock_of_hif_device_usb");
  #line 898 
  spin_unlock(lock);
  #line 899 
  return;
}

#line 902  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 905 
  ldv_release_firmware(fw);
  #line 906 
  return;
}

#line 909  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device)
{
  #line 912 
  return ldv_request_firmware(fw);
}

#line 916  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3)
{
  #line 920 
  return emg_usb_register_driver(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
}

#line 924  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/hif_usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1)
{
  #line 928 
  emg_usb_deregister(ldv_func_arg1);
  #line 929 
  return;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/find.h"
#line 70 
unsigned long find_first_zero_bit(unsigned long *, unsigned long);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void INIT_LIST_HEAD_1(struct list_head *list);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add_0(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_5185 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail_0(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add_0(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_0(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_5187 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry_0(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del_0(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del_0(struct list_head *entry)
{
  #line 139 
  __list_del_entry_0(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_move_tail_0(struct list_head *list, struct list_head *head)
{
  #line 213 
  __list_del_entry_0(list);
  #line 214 
  list_add_tail_0(list,head);
  #line 215 
  return;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  #line 79 
  int tmp;
  #line 79 
  if (0 != 0 && (val == 1 || val == -1)) 
                                         #line 79 
                                         tmp = val; else 
                                                         #line 79 
                                                         tmp = 0;
  #line 79 
  int pao_ID__ = tmp;
  #line 79 
  switch (4UL) {
    #line 79 
    case (unsigned long)1: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)2: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)4: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)8: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 79 
    __bad_percpu_size();
  }
  #line 82 
  return;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  #line 84 
  int tmp;
  #line 84 
  if (0 != 0 && (val == -1 || val == 1)) 
                                         #line 84 
                                         tmp = - val; else 
                                                           #line 84 
                                                           tmp = 0;
  #line 84 
  int pao_ID__ = tmp;
  #line 84 
  switch (4UL) {
    #line 84 
    case (unsigned long)1: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)2: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)4: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)8: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    default: 
             #line 84 
    ;
    #line 84 
    __bad_percpu_size();
  }
  #line 87 
  return;
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 348 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);
#line 352 
#line 352 
void lock_release(struct lockdep_map *, unsigned long);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_tx_lock_of_ath9k_htc_tx(spinlock_t *lock);
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 873  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_event_lock_of_wmi(spinlock_t *lock);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_2(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 801  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 819  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_bh_event_lock_of_wmi(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 846  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_tx_lock_of_ath9k_htc_tx(spinlock_t *lock);
#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 882  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_event_lock_of_wmi(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_2(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 810  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_bh_event_lock_of_wmi(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_1(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 864  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_sk_buff_head(spinlock_t *lock, unsigned long flags);
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 916  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(spinlock_t *lock, unsigned long flags);
#line 35 
#line 855 
static void cif___ldv_spin_lock_lock_of_sk_buff_head(spinlock_t *lock);
#line 35 
#line 907 
static void cif___ldv_spin_lock_rxbuflock_of_ath9k_htc_rx(spinlock_t *lock);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  #line 59 
  __preempt_count_add(1);
  #line 60 
  ldv_inline_asm();
  #line 62 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  #line 66 
  ldv_inline_asm();
  #line 64 
  __preempt_count_sub(1);
  #line 66 
  return;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 56 
bool rcu_is_watching(void);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  #line 208 
  __here_0: 
            #line 208 
  ;
  #line 208 
  ;
  #line 208 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 210 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  #line 213 
  __here_0: 
            #line 213 
  ;
  #line 213 
  ;
  #line 213 
  lock_release(map,(unsigned long)((void *)0));
  #line 215 
  return;
}

#line 216 
#line 216 
extern struct lockdep_map rcu_lock_map;
#line 220 
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  #line 615 
  __rcu_read_lock();
  #line 617 
  rcu_lock_acquire(& rcu_lock_map);
  {
    #line 618 
    bool __warned;
    #line 618 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 618 
      if (! __warned) {
        #line 618 
        if (! rcu_is_watching()) {
          #line 618 
          __warned = (_Bool)1;
          #line 618 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",618,(char *)"rcu_read_lock() used illegally while idle");
        }
      }
  }
  #line 621 
  return;
}

#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    #line 667 
    bool __warned;
    #line 667 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 667 
      if (! __warned) {
        #line 667 
        if (! rcu_is_watching()) {
          #line 667 
          __warned = (_Bool)1;
          #line 667 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",667,(char *)"rcu_read_unlock() used illegally while idle");
        }
      }
  }
  #line 670 
  __rcu_read_unlock();
  #line 671 
  rcu_lock_release(& rcu_lock_map);
  #line 672 
  return;
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 302 
#line 302 
unsigned long __msecs_to_jiffies(unsigned int);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int m)
{
  #line 311 
  return (unsigned long)(((long)m + 3L) / 4L);
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int m)
{
  #line 366 
  if (0 != 0) {
    #line 367 
    if ((int)m < 0) 
                    #line 368 
                    return 4611686018427387902UL;
    #line 369 
    return _msecs_to_jiffies(m);
  }
  else {
    #line 371 
    return __msecs_to_jiffies(m);
  }
}

#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 899  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static int cif_mod_timer(struct timer_list *timer, unsigned long expires);
#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 891  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_tasklet_schedule_0(struct tasklet_struct *t);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 488  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void *kzalloc_3(size_t size, gfp_t flags);
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert_1(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_5691 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_5693 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_5695 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_5697 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before_1(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert_1(newsk,next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev,next,list);
  #line 1977 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail_1(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before_1(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2011 
#line 2011 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_unlink_1(struct sk_buff *skb, struct sk_buff_head *list)
{
  #line 2020 
  struct sk_buff *next;
  #line 2020 
  struct sk_buff *prev;
  #line 2022 
  (list->qlen) --;
  #line 2023 
  next = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 2024 
  prev = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev;
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev = ((struct sk_buff *)0);
  #line 2025 
  skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next = ((struct sk_buff *)0);
  {
    #line 2027 
    union __anonunion___u_5707 __u = {.__val = prev};
    #line 2026 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.prev),(void *)(& __u.__c),8);
    #line 2026 
    struct sk_buff *tmp_2 = __u.__val;
  }
  {
    #line 2028 
    union __anonunion___u_5709 __u_0 = {.__val = next};
    #line 2027 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next),(void *)(& __u_0.__c),8);
    #line 2027 
    struct sk_buff *tmp_4 = __u_0.__val;
  }
  #line 2029 
  return;
}

#line 2045 
#line 2045 
struct sk_buff *skb_dequeue(struct sk_buff_head *);
#line 4277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff *skb)
{
  #line 4279 
  return skb->queue_mapping;
}

#line 284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_a4(__le16 fc)
{
  #line 286 
  __le16 tmp = (unsigned short)768U;
  #line 287 
  return (_Bool)(((int)fc & (int)tmp) == (int)tmp);
}

#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data(__le16 fc)
{
  #line 370 
  return (_Bool)(((int)fc & 12) == 8);
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data_qos(__le16 fc)
{
  #line 384 
  return (_Bool)(((int)fc & 140) == 136);
}

#line 456  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_probe_resp(__le16 fc)
{
  #line 458 
  return (_Bool)(((int)fc & 252) == 80);
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_beacon(__le16 fc)
{
  #line 468 
  return (_Bool)(((int)fc & 252) == 128);
}

#line 3100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static u8 *ieee80211_get_qos_ctl(struct ieee80211_hdr *hdr)
{
  #line 3102 
  if ((int)ieee80211_has_a4((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 3103 
    return (u8 *)hdr + 30U; else 
                                 #line 3105 
                                 return (u8 *)hdr + 24U;
}

#line 5170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
#line 5170 
unsigned int ieee80211_get_hdrlen_from_skb(struct sk_buff *);
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  #line 1121 
  return (struct ieee80211_rx_status *)(& skb->cb);
}

#line 4338 
#line 4338 
void ieee80211_rx_napi(struct ieee80211_hw *, struct ieee80211_sta *, struct sk_buff *, struct napi_struct *);
#line 4361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void ieee80211_rx(struct ieee80211_hw *hw, struct sk_buff *skb)
{
  #line 4363 
  ieee80211_rx_napi(hw,(struct ieee80211_sta *)0,skb,(struct napi_struct *)0);
  #line 4364 
  return;
}

#line 4580 
#line 4580 
void ieee80211_tx_status(struct ieee80211_hw *, struct sk_buff *);
#line 5199 
#line 5199 
void ieee80211_stop_queues(struct ieee80211_hw *);
#line 5207 
#line 5207 
void ieee80211_wake_queues(struct ieee80211_hw *);
#line 5399 
#line 5399 
int ieee80211_start_tx_ba_session(struct ieee80211_sta *, u16, u16);
#line 5452 
#line 5452 
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 *);
#line 6084  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static bool conf_is_ht(struct ieee80211_conf *conf)
{
  #line 6087 
  return (_Bool)(((unsigned int)conf->chandef.width + 4294967290U > 1U && conf->chandef.width != (unsigned int)NL80211_CHAN_WIDTH_20_NOHT) != 0);
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
#line 197 
bool ath_is_mybeacon(struct ath_common *, struct ieee80211_hdr *);
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
#line 727 
int ath9k_hw_setuptxqueue(struct ath_hw *, enum ath9k_tx_queue, struct ath9k_tx_queue_info *);
#line 729 
#line 729 
bool ath9k_hw_releasetxqueue(struct ath_hw *, u32);
#line 737 
#line 737 
void ath9k_hw_startpcureceive(struct ath_hw *, bool);
#line 1011  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
__inline static struct ath_hw_ops *ath9k_hw_ops(struct ath_hw *ah)
{
  #line 1013 
  return & ah->ops;
}

#line 1052 
#line 1052 
u32 ath9k_hw_getrxfilter(struct ath_hw *);
#line 1053 
#line 1053 
void ath9k_hw_setrxfilter(struct ath_hw *, u32);
#line 1058 
#line 1058 
void ath9k_hw_setmcastfilter(struct ath_hw *, u32, u32);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw-ops.h"
__inline static void ath9k_hw_rxena(struct ath_hw *ah)
{
  #line 35 
  (*(ath9k_hw_ops(ah)->rx_enable))(ah);
  #line 36 
  return;
}

#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-spectral.h"
#line 180 
int ath_cmn_process_fft(struct ath_spec_scan_priv *, struct ieee80211_hdr *, struct ath_rx_status *, u64);
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common.h"
#line 64 
bool ath9k_cmn_rx_accept(struct ath_common *, struct ieee80211_hdr *, struct ieee80211_rx_status *, struct ath_rx_status *, bool *, unsigned int);
#line 70 
#line 70 
void ath9k_cmn_rx_skb_postprocess(struct ath_common *, struct sk_buff *, struct ath_rx_status *, struct ieee80211_rx_status *, bool);
#line 75 
#line 75 
int ath9k_cmn_process_rate(struct ath_common *, struct ieee80211_hw *, struct ath_rx_status *, struct ieee80211_rx_status *);
#line 79 
#line 79 
void ath9k_cmn_process_rssi(struct ath_common *, struct ieee80211_hw *, struct ath_rx_status *, struct ieee80211_rx_status *);
#line 83 
#line 83 
int ath9k_cmn_get_hw_crypto_keytype(struct sk_buff *);
#line 557  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 1118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_rxep(void *drv_priv, struct sk_buff *skb, enum htc_endpoint_id ep_id);
#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_txep(void *drv_priv, struct sk_buff *skb, enum htc_endpoint_id ep_id, bool txok);
#line 570  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_tx_init(struct ath9k_htc_priv *priv);
#line 574  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 814  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_tx_cleanup(struct ath9k_htc_priv *priv);
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
bool ath9k_htc_txq_setup(struct ath9k_htc_priv *priv, int subtype);
#line 576  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_htc_cabq_setup(struct ath9k_htc_priv *priv);
#line 577  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int get_hw_qnum(u16 queue, int *hwq_map);
#line 578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath_htc_txq_update(struct ath9k_htc_priv *priv, int qnum, struct ath9k_tx_queue_info *qinfo);
#line 580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_check_stop_queues(struct ath9k_htc_priv *priv);
#line 581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_check_wake_queues(struct ath9k_htc_priv *priv);
#line 584  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_tx_drain(struct ath9k_htc_priv *priv);
#line 586  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_tx_failed_tasklet(unsigned long data);
#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 755  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_tx_cleanup_timer(struct timer_list *t);
#line 590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 1166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_rx_init(struct ath9k_htc_priv *priv);
#line 591  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 1154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_rx_cleanup(struct ath9k_htc_priv *priv);
#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_host_rx_init(struct ath9k_htc_priv *priv);
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 1064  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_rx_tasklet(unsigned long data);
#line 594  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 861  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
u32 ath9k_htc_calcrxfilter(struct ath9k_htc_priv *priv);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static int subtype_txq_to_hwq[4U] = {3, 2, 1};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int get_hw_qnum(u16 queue, int *hwq_map)
{
  #line 42 
  switch ((int)queue) {
    #line 43 
    case 0: 
            #line 43 
    ;
    #line 44 
    return *hwq_map;
    #line 45 
    case 1: 
            #line 45 
    ;
    #line 46 
    return *(hwq_map + 1U);
    #line 47 
    case 2: 
            #line 47 
    ;
    #line 48 
    return *(hwq_map + 2U);
    #line 49 
    case 3: 
            #line 49 
    ;
    #line 50 
    return *(hwq_map + 3U);
    #line 51 
    default: 
             #line 51 
    ;
    #line 52 
    return *(hwq_map + 2U);
  }
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_check_stop_queues(struct ath9k_htc_priv *priv)
{
  #line 58 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 59 
  (priv->tx.queued_cnt) ++;
  #line 60 
  if (priv->tx.queued_cnt > 245 && ((unsigned long)priv->tx.flags & 1UL) == 0UL) {
    #line 62 
    priv->tx.flags = (unsigned char)((unsigned int)priv->tx.flags | 1U);
    #line 63 
    ieee80211_stop_queues(priv->hw);
  }
  #line 65 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 66 
  return;
}

#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_check_wake_queues(struct ath9k_htc_priv *priv)
{
  #line 70 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 71 
  if (priv->tx.queued_cnt <= 245 && ((unsigned long)priv->tx.flags & 1UL) != 0UL) {
    #line 73 
    priv->tx.flags = (unsigned char)((unsigned int)priv->tx.flags & 254U);
    #line 74 
    ieee80211_wake_queues(priv->hw);
  }
  #line 76 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 77 
  return;
}

#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_htc_tx_get_slot(struct ath9k_htc_priv *priv)
{
  #line 81 
  int slot;
  #line 83 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 84 
  slot = (int)find_first_zero_bit((unsigned long *)(& priv->tx.tx_slot),256UL);
  #line 85 
  if (slot > 255) {
    #line 86 
    cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
    #line 87 
    return -105;
  }
  #line 89 
  __set_bit((long)slot,(unsigned long *)(& priv->tx.tx_slot));
  #line 90 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 92 
  return slot;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_tx_clear_slot(struct ath9k_htc_priv *priv, int slot)
{
  #line 97 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 98 
  __set_bit((long)slot,(unsigned long *)(& priv->tx.tx_slot));
  #line 99 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 100 
  return;
}

#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static enum htc_endpoint_id get_htc_epid(struct ath9k_htc_priv *priv, u16 qnum)
{
  #line 105 
  enum htc_endpoint_id epid;
  #line 107 
  switch ((int)qnum) {
    #line 108 
    case 0: 
            #line 108 
    ;
    #line 109 
    (priv->debug.tx_stats.queue_stats[0]) ++;
    #line 110 
    epid = priv->data_vo_ep;
    #line 111 
    break;
    #line 112 
    case 1: 
            #line 112 
    ;
    #line 113 
    (priv->debug.tx_stats.queue_stats[1]) ++;
    #line 114 
    epid = priv->data_vi_ep;
    #line 115 
    break;
    #line 116 
    case 2: 
            #line 116 
    ;
    #line 117 
    (priv->debug.tx_stats.queue_stats[2]) ++;
    #line 118 
    epid = priv->data_be_ep;
    #line 119 
    break;
    #line 120 
    case 3: 
            #line 120 
    ;
    #line 121 
    default: 
             #line 121 
    ;
    #line 122 
    (priv->debug.tx_stats.queue_stats[3]) ++;
    #line 123 
    epid = priv->data_bk_ep;
    #line 124 
    break;
  }
  #line 127 
  return epid;
}

#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static struct sk_buff_head *get_htc_epid_queue(struct ath9k_htc_priv *priv, u8 epid)
{
  #line 133 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 134 
  struct sk_buff_head *epid_queue = (struct sk_buff_head *)0;
  #line 136 
  if ((int)epid == (int)priv->mgmt_ep) 
                                       #line 137 
                                       epid_queue = & priv->tx.mgmt_ep_queue;
  else 
    #line 138 
    if ((int)epid == (int)priv->cab_ep) 
                                        #line 139 
                                        epid_queue = & priv->tx.cab_ep_queue;
    else 
      #line 140 
      if ((int)epid == (int)priv->data_be_ep) 
                                              #line 141 
                                              epid_queue = & priv->tx.data_be_queue;
      else 
        #line 142 
        if ((int)epid == (int)priv->data_bk_ep) 
                                                #line 143 
                                                epid_queue = & priv->tx.data_bk_queue;
        else 
          #line 144 
          if ((int)epid == (int)priv->data_vi_ep) 
                                                  #line 145 
                                                  epid_queue = & priv->tx.data_vi_queue;
          else 
            #line 146 
            if ((int)epid == (int)priv->data_vo_ep) 
                                                    #line 147 
                                                    epid_queue = & priv->tx.data_vo_queue; else 
                                                                    #line 149 
                                                                    ath_printk((char *)"\001",common,(char *)"Invalid EPID: %d\n",(int)epid);
  #line 151 
  return epid_queue;
}

#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static int strip_drv_header(struct ath9k_htc_priv *priv, struct sk_buff *skb)
{
  #line 161 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 162 
  int slot;
  #line 160 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 164 
  tx_ctl = HTC_SKB_CB(skb);
  #line 166 
  if ((int)tx_ctl->epid == (int)priv->mgmt_ep) {
    #line 167 
    struct tx_mgmt_hdr *tx_mhdr = (struct tx_mgmt_hdr *)skb->data;
    #line 169 
    slot = (int)tx_mhdr->cookie;
    #line 170 
    skb_pull(skb,8U);
  }
  else 
    #line 171 
    if (((((int)tx_ctl->epid == (int)priv->data_bk_ep || (int)tx_ctl->epid == (int)priv->data_be_ep) || (int)tx_ctl->epid == (int)priv->data_vi_ep) || (int)tx_ctl->epid == (int)priv->data_vo_ep) || (int)tx_ctl->epid == (int)priv->cab_ep) {
      #line 176 
      struct tx_frame_hdr *tx_fhdr = (struct tx_frame_hdr *)skb->data;
      #line 178 
      slot = (int)tx_fhdr->cookie;
      #line 179 
      skb_pull(skb,12U);
    }
    else {
      #line 181 
      ath_printk((char *)"\001",common,(char *)"Unsupported EPID: %d\n",(int)tx_ctl->epid);
      #line 182 
      slot = -22;
    }
  #line 185 
  return slot;
}

#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath_htc_txq_update(struct ath9k_htc_priv *priv, int qnum, struct ath9k_tx_queue_info *qinfo)
{
  #line 193 
  struct ath9k_tx_queue_info qi;
  #line 191 
  struct ath_hw *ah = priv->ah;
  #line 192 
  int error = 0;
  #line 195 
  ath9k_hw_get_txq_props(ah,qnum,& qi);
  #line 197 
  qi.tqi_aifs = qinfo->tqi_aifs;
  #line 198 
  qi.tqi_cwmin = qinfo->tqi_cwmin / 2U;
  #line 199 
  qi.tqi_cwmax = qinfo->tqi_cwmax;
  #line 200 
  qi.tqi_burstTime = qinfo->tqi_burstTime;
  #line 201 
  qi.tqi_readyTime = qinfo->tqi_readyTime;
  #line 203 
  if (ath9k_hw_set_txq_props(ah,qnum,& qi)) 
                                            #line 208 
                                            ath9k_hw_resettxqueue(ah,(unsigned int)qnum);
  else {
    #line 204 
    ;
    #line 204 
    ath_printk((char *)"\001",ath9k_hw_common(ah),(char *)"Unable to update hardware queue %u!\n",qnum);
    #line 206 
    error = -5;
  }
  #line 211 
  return error;
}

#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void ath9k_htc_tx_mgmt(struct ath9k_htc_priv *priv, struct ath9k_htc_vif *avp, struct sk_buff *skb, u8 sta_idx, u8 vif_idx, u8 slot)
{
  #line 220 
  struct ieee80211_mgmt *mgmt;
  #line 221 
  struct ieee80211_hdr *hdr;
  #line 222 
  struct tx_mgmt_hdr mgmt_hdr;
  #line 223 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 224 
  u8 *tx_fhdr;
  #line 219 
  struct ieee80211_tx_info *tx_info = IEEE80211_SKB_CB(skb);
  #line 226 
  tx_ctl = HTC_SKB_CB(skb);
  #line 227 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 229 
  memset((void *)tx_ctl,0,16UL);
  #line 230 
  memset((void *)(& mgmt_hdr),0,8UL);
  #line 236 
  if (avp != (struct ath9k_htc_vif *)0) {
    #line 236 
    if ((long)((int)ieee80211_is_probe_resp((unsigned short)((int)hdr->frame_control)) != 0) != 0L) {
      #line 237 
      mgmt = (struct ieee80211_mgmt *)skb->data;
      #line 238 
      mgmt->u.probe_resp.timestamp = avp->tsfadjust;
    }
  }
  #line 241 
  tx_ctl->type = (unsigned char)4U;
  #line 243 
  mgmt_hdr.node_idx = sta_idx;
  #line 244 
  mgmt_hdr.vif_idx = vif_idx;
  #line 245 
  mgmt_hdr.tidno = (unsigned char)0U;
  #line 246 
  mgmt_hdr.flags = (unsigned char)0U;
  #line 247 
  mgmt_hdr.cookie = slot;
  #line 249 
  mgmt_hdr.key_type = (unsigned char)ath9k_cmn_get_hw_crypto_keytype(skb);
  #line 250 
  if ((unsigned int)mgmt_hdr.key_type == 0U) 
                                             #line 251 
                                             mgmt_hdr.keyix = (unsigned char)255U; else 
                                                                    #line 253 
                                                                    mgmt_hdr.keyix = (tx_info->__anonCompField_ieee80211_tx_info_195.control.hw_key)->hw_key_idx;
  #line 255 
  tx_fhdr = (u8 *)skb_push(skb,8U);
  #line 256 
  memcpy((void *)tx_fhdr,(void *)(& mgmt_hdr),8UL);
  #line 257 
  tx_ctl->epid = (unsigned char)priv->mgmt_ep;
  #line 258 
  return;
}

#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void ath9k_htc_tx_data(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif, struct sk_buff *skb, u8 sta_idx, u8 vif_idx, u8 slot, bool is_cab)
{
  #line 267 
  struct ieee80211_hdr *hdr;
  #line 268 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 269 
  struct tx_frame_hdr tx_hdr;
  #line 271 
  u8 *qc;
  #line 271 
  u8 *tx_fhdr;
  #line 272 
  u16 qnum;
  #line 266 
  struct ieee80211_tx_info *tx_info = IEEE80211_SKB_CB(skb);
  #line 270 
  u32 flags = 0U;
  #line 274 
  tx_ctl = HTC_SKB_CB(skb);
  #line 275 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 277 
  memset((void *)tx_ctl,0,16UL);
  #line 278 
  memset((void *)(& tx_hdr),0,12UL);
  #line 280 
  tx_hdr.node_idx = sta_idx;
  #line 281 
  tx_hdr.vif_idx = vif_idx;
  #line 282 
  tx_hdr.cookie = slot;
  #line 290 
  tx_ctl->sta_idx = sta_idx;
  #line 292 
  if ((tx_info->flags & 64U) != 0U) {
    #line 293 
    tx_ctl->type = (unsigned char)1U;
    #line 294 
    tx_hdr.data_type = (unsigned char)1U;
  }
  else {
    #line 296 
    tx_ctl->type = (unsigned char)2U;
    #line 297 
    tx_hdr.data_type = (unsigned char)2U;
  }
  #line 300 
  if ((int)ieee80211_is_data_qos((unsigned short)((int)hdr->frame_control)) != 0) {
    #line 301 
    qc = ieee80211_get_qos_ctl(hdr);
    #line 302 
    tx_hdr.tidno = (unsigned char)((unsigned int)*qc & 15U);
  }
  #line 306 
  if (((priv->hw)->wiphy)->rts_threshold != 4294967295U) 
    #line 307 
    if (skb->len > ((priv->hw)->wiphy)->rts_threshold) 
                                                       #line 308 
                                                       flags |= 2U;
  #line 311 
  if ((vif != (struct ieee80211_vif *)0 && (int)vif->bss_conf.use_cts_prot != 0) && (flags & 2U) == 0U) 
    #line 313 
    flags |= 1U;
  #line 315 
  tx_hdr.flags = __builtin_bswap32(flags);
  #line 316 
  tx_hdr.key_type = (unsigned char)ath9k_cmn_get_hw_crypto_keytype(skb);
  #line 317 
  if ((unsigned int)tx_hdr.key_type == 0U) 
                                           #line 318 
                                           tx_hdr.keyix = (unsigned char)255U; else 
                                                                    #line 320 
                                                                    tx_hdr.keyix = (tx_info->__anonCompField_ieee80211_tx_info_195.control.hw_key)->hw_key_idx;
  #line 322 
  tx_fhdr = (u8 *)skb_push(skb,12U);
  #line 323 
  memcpy((void *)tx_fhdr,(void *)(& tx_hdr),12UL);
  #line 325 
  if ((int)is_cab != 0) {
    #line 326 
    (priv->debug.tx_stats.cab_queued) ++;
    #line 327 
    tx_ctl->epid = (unsigned char)priv->cab_ep;
    #line 328 
    return;
  }
  #line 331 
  qnum = skb_get_queue_mapping(skb);
  #line 332 
  tx_ctl->epid = (unsigned char)get_htc_epid(priv,(unsigned short)((int)qnum));
  #line 333 
  return;
}

#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_htc_tx_start(struct ath9k_htc_priv *priv, struct ieee80211_sta *sta, struct sk_buff *skb, u8 slot, bool is_cab)
{
  #line 340 
  struct ieee80211_hdr *hdr;
  #line 343 
  struct ath9k_htc_sta *ista;
  #line 345 
  u8 sta_idx;
  #line 345 
  u8 vif_idx;
  #line 341 
  struct ieee80211_tx_info *tx_info = IEEE80211_SKB_CB(skb);
  #line 342 
  struct ieee80211_vif *vif = tx_info->__anonCompField_ieee80211_tx_info_195.control.vif;
  #line 344 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)0;
  #line 347 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 353 
  if (vif != (struct ieee80211_vif *)0) {
    #line 354 
    avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
    #line 355 
    vif_idx = avp->index;
  }
  else {
    #line 357 
    if (! (priv->ah)->is_monitoring) {
      #line 358 
      ;
      #line 358 
      if ((ath9k_hw_common(priv->ah)->debug_mask & 128) != 0) {
        #line 358 
        ath_printk((char *)"\001",ath9k_hw_common(priv->ah),(char *)"VIF is null, but no monitor interface !\n");
      }
      #line 360 
      return -22;
    }
    #line 363 
    vif_idx = priv->mon_vif_idx;
  }
  #line 369 
  if (sta != (struct ieee80211_sta *)0) {
    #line 370 
    ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
    #line 371 
    sta_idx = ista->index;
  }
  else 
       #line 373 
       sta_idx = priv->vif_sta_pos[(int)vif_idx];
  #line 376 
  if ((int)ieee80211_is_data((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 377 
    ath9k_htc_tx_data(priv,vif,skb,(unsigned char)((int)sta_idx),(unsigned char)((int)vif_idx),(unsigned char)((int)slot),(_Bool)((bool)((int)is_cab) != 0)); else 
                                                                    #line 380 
                                                                    ath9k_htc_tx_mgmt(priv,avp,skb,(unsigned char)((int)sta_idx),(unsigned char)((int)vif_idx),(unsigned char)((int)slot));
  #line 384 
  return htc_send(priv->htc,skb);
}

#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static bool __ath9k_htc_check_tx_aggr(struct ath9k_htc_priv *priv, struct ath9k_htc_sta *ista, u8 tid)
{
  #line 390 
  bool ret = (_Bool)0;
  #line 392 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 393 
  if ((unsigned int)tid <= 7U && ista->tid_state[(int)tid] == (unsigned int)AGGR_STOP) 
    #line 394 
    ret = (_Bool)1;
  #line 395 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 397 
  return ret;
}

#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void ath9k_htc_check_tx_aggr(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif, struct sk_buff *skb)
{
  #line 404 
  struct ieee80211_sta *sta;
  #line 405 
  struct ieee80211_hdr *hdr;
  #line 406 
  __le16 fc;
  #line 408 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 409 
  fc = hdr->frame_control;
  #line 411 
  rcu_read_lock();
  #line 413 
  sta = ieee80211_find_sta(vif,(u8 *)(& hdr->addr1));
  #line 414 
  if (sta == (struct ieee80211_sta *)0) {
    #line 415 
    rcu_read_unlock();
    #line 416 
    return;
  }
  #line 419 
  if (sta != (struct ieee80211_sta *)0) {
    #line 419 
    if ((int)conf_is_ht(& (priv->hw)->conf) != 0) 
      #line 419 
      if ((unsigned int)skb->protocol != 36488U) {
        #line 421 
        if ((int)ieee80211_is_data_qos((unsigned short)((int)fc)) != 0) {
          #line 422 
          u8 *qc;
          #line 422 
          u8 tid;
          #line 423 
          struct ath9k_htc_sta *ista;
          #line 425 
          qc = ieee80211_get_qos_ctl(hdr);
          #line 426 
          tid = (unsigned char)((unsigned int)*qc & 15U);
          #line 427 
          ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
          #line 428 
          if ((int)__ath9k_htc_check_tx_aggr(priv,ista,(unsigned char)((int)tid)) != 0) {
            #line 429 
            ieee80211_start_tx_ba_session(sta,(unsigned short)((int)tid),(unsigned short)0);
            #line 430 
            cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
            #line 431 
            ista->tid_state[(int)tid] = AGGR_PROGRESS;
            #line 432 
            cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
          }
        }
      }
  }
  #line 437 
  rcu_read_unlock();
  #line 438 
  return;
}

#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void ath9k_htc_tx_process(struct ath9k_htc_priv *priv, struct sk_buff *skb, struct __wmi_event_txstatus *txs)
{
  #line 505 
  int __ret_warn_on;
  #line 444 
  struct ieee80211_vif *vif;
  #line 445 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 446 
  struct ieee80211_tx_info *tx_info;
  #line 447 
  struct ieee80211_tx_rate *rate;
  #line 449 
  bool txok;
  #line 450 
  int slot;
  #line 451 
  int hdrlen;
  #line 451 
  int padsize;
  #line 448 
  struct ieee80211_conf *cur_conf = & (priv->hw)->conf;
  #line 453 
  slot = strip_drv_header(priv,skb);
  #line 454 
  if (slot < 0) {
    #line 455 
    dev_kfree_skb_any(skb);
    #line 456 
    return;
  }
  #line 459 
  tx_ctl = HTC_SKB_CB(skb);
  #line 460 
  txok = (_Bool)((unsigned int)tx_ctl->txok != 0U);
  #line 461 
  tx_info = IEEE80211_SKB_CB(skb);
  #line 462 
  vif = tx_info->__anonCompField_ieee80211_tx_info_195.control.vif;
  #line 463 
  rate = & tx_info->__anonCompField_ieee80211_tx_info_195.status.rates[0];
  #line 465 
  memset((void *)(& tx_info->__anonCompField_ieee80211_tx_info_195.status),0,40UL);
  #line 471 
  if ((! txok || vif == (struct ieee80211_vif *)0) || txs == (struct __wmi_event_txstatus *)0) 
    #line 472 
    goto send_mac80211;
  #line 474 
  if (((unsigned long)txs->ts_flags & 1UL) != 0UL) {
    #line 475 
    tx_info->flags |= 512U;
    #line 476 
    if ((tx_info->flags & 64U) != 0U) 
                                      #line 477 
                                      tx_info->flags |= 1024U;
  }
  #line 480 
  if (((unsigned long)txs->ts_flags & 2UL) != 0UL) 
                                                   #line 481 
                                                   tx_info->flags |= 256U;
  #line 483 
  if (((unsigned long)txs->ts_flags & 4UL) != 0UL) 
                                                   #line 484 
                                                   rate->flags = (unsigned short)((unsigned int)rate->flags | 1U);
  #line 486 
  rate->count = (unsigned short)1U;
  #line 487 
  rate->idx = (signed char)((int)((signed char)txs->ts_rate) & 15);
  #line 489 
  if (((unsigned long)txs->ts_flags & 8UL) != 0UL) {
    #line 490 
    rate->flags = (unsigned short)((unsigned int)rate->flags | 8U);
    #line 492 
    if (((unsigned long)txs->ts_flags & 16UL) != 0UL) 
                                                      #line 493 
                                                      rate->flags = (unsigned short)((unsigned int)rate->flags | 32U);
    #line 494 
    if (((unsigned long)txs->ts_flags & 32UL) != 0UL) 
                                                      #line 495 
                                                      rate->flags = (unsigned short)((unsigned int)rate->flags | 128U);
  }
  else 
    #line 497 
    if ((cur_conf->chandef.chan)->band == (unsigned int)NL80211_BAND_5GHZ) 
      #line 498 
      rate->idx = (signed char)((unsigned int)rate->idx + 4U);
  #line 501 
  ath9k_htc_check_tx_aggr(priv,vif,skb);
  #line 503 
  send_mac80211: 
                 #line 503 
  ;
  #line 504 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 505 
  (priv->tx.queued_cnt) --;
  #line 505 
  __ret_warn_on = priv->tx.queued_cnt < 0;
  #line 505 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 506 
    ldv_inline_asm();
    #line 507 
    ldv_inline_asm();
  }
  #line 505 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 506 
                                                priv->tx.queued_cnt = 0;
  #line 507 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 509 
  ath9k_htc_tx_clear_slot(priv,slot);
  #line 512 
  hdrlen = (int)ieee80211_get_hdrlen_from_skb(skb);
  #line 514 
  padsize = hdrlen & 3;
  #line 515 
  if (padsize != 0 && skb->len > (unsigned int)(hdrlen + padsize)) {
    #line 516 
    __memmove((void *)(skb->data + (unsigned long)padsize),(void *)skb->data,(unsigned long)hdrlen);
    #line 517 
    skb_pull(skb,(unsigned int)padsize);
  }
  #line 521 
  ieee80211_tx_status(priv->hw,skb);
  #line 522 
  return;
}

#line 524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static void ath9k_htc_tx_drainq(struct ath9k_htc_priv *priv, struct sk_buff_head *queue)
{
  #line 527 
  struct sk_buff *skb;
  #line 529 
  while (1) {
    #line 529 
    skb = skb_dequeue(queue);
    #line 529 
    if (! (skb != (struct sk_buff *)0)) 
                                        #line 529 
                                        break;
    #line 530 
    ath9k_htc_tx_process(priv,skb,(struct __wmi_event_txstatus *)0);
  }
  #line 531 
  return;
}

#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_tx_drain(struct ath9k_htc_priv *priv)
{
  #line 562 
  void *__mptr;
  #line 562 
  void *__mptr_0;
  #line 536 
  struct ath9k_htc_tx_event *event;
  #line 536 
  struct ath9k_htc_tx_event *tmp;
  #line 538 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 539 
  priv->tx.flags = (unsigned char)((unsigned int)priv->tx.flags | 2U);
  #line 540 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 546 
  htc_stop(priv->htc);
  #line 547 
  tasklet_kill(& (priv->wmi)->wmi_event_tasklet);
  #line 548 
  tasklet_kill(& priv->tx_failed_tasklet);
  #line 550 
  ath9k_htc_tx_drainq(priv,& priv->tx.mgmt_ep_queue);
  #line 551 
  ath9k_htc_tx_drainq(priv,& priv->tx.cab_ep_queue);
  #line 552 
  ath9k_htc_tx_drainq(priv,& priv->tx.data_be_queue);
  #line 553 
  ath9k_htc_tx_drainq(priv,& priv->tx.data_bk_queue);
  #line 554 
  ath9k_htc_tx_drainq(priv,& priv->tx.data_vi_queue);
  #line 555 
  ath9k_htc_tx_drainq(priv,& priv->tx.data_vo_queue);
  #line 556 
  ath9k_htc_tx_drainq(priv,& priv->tx.tx_failed);
  #line 561 
  cif_spin_lock_bh_event_lock_of_wmi(& (priv->wmi)->event_lock);
  #line 562 
  __mptr = (void *)(priv->wmi)->pending_tx_events.next;
  #line 562 
  event = ((struct ath9k_htc_tx_event *)(__mptr + 18446744073709551608U));
  #line 562 
  __mptr_0 = (void *)event->list.next;
  #line 563 
  tmp = ((struct ath9k_htc_tx_event *)(__mptr_0 + 18446744073709551608U));
  #line 562 
  while (& event->list != & (priv->wmi)->pending_tx_events) {
    #line 562 
    void *__mptr_1;
    #line 563 
    list_del_0(& event->list);
    #line 564 
    kfree((void *)event);
    #line 562 
    event = tmp;
    #line 562 
    __mptr_1 = (void *)tmp->list.next;
    #line 562 
    tmp = ((struct ath9k_htc_tx_event *)(__mptr_1 + 18446744073709551608U));
  }
  #line 566 
  cif_spin_unlock_bh_event_lock_of_wmi(& (priv->wmi)->event_lock);
  #line 568 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 569 
  priv->tx.flags = (unsigned char)((unsigned int)priv->tx.flags & 253U);
  #line 570 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(& priv->tx.tx_lock);
  #line 571 
  return;
}

#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_tx_failed_tasklet(unsigned long data)
{
  #line 575 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)data;
  #line 577 
  cif_spin_lock_tx_lock_of_ath9k_htc_tx(& priv->tx.tx_lock);
  #line 578 
  if (((unsigned long)priv->tx.flags & 2UL) != 0UL) {
    #line 579 
    cif_spin_unlock_tx_lock_of_ath9k_htc_tx(& priv->tx.tx_lock);
    #line 580 
    return;
  }
  #line 582 
  cif_spin_unlock_tx_lock_of_ath9k_htc_tx(& priv->tx.tx_lock);
  #line 584 
  ath9k_htc_tx_drainq(priv,& priv->tx.tx_failed);
  #line 585 
  return;
}

#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static bool check_cookie(struct ath9k_htc_priv *priv, struct sk_buff *skb, u8 cookie, u8 epid)
{
  #line 591 
  u8 fcookie = (unsigned char)0U;
  #line 593 
  if ((int)epid == (int)priv->mgmt_ep) {
    #line 594 
    struct tx_mgmt_hdr *hdr;
    #line 595 
    hdr = (struct tx_mgmt_hdr *)skb->data;
    #line 596 
    fcookie = hdr->cookie;
  }
  else 
    #line 597 
    if (((((int)epid == (int)priv->data_bk_ep || (int)epid == (int)priv->data_be_ep) || (int)epid == (int)priv->data_vi_ep) || (int)epid == (int)priv->data_vo_ep) || (int)epid == (int)priv->cab_ep) {
      #line 602 
      struct tx_frame_hdr *hdr_0;
      #line 603 
      hdr_0 = (struct tx_frame_hdr *)skb->data;
      #line 604 
      fcookie = hdr_0->cookie;
    }
  #line 607 
  if ((int)fcookie == (int)cookie) 
                                   #line 608 
                                   return (_Bool)1;
  #line 610 
  return (_Bool)0;
}

#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static struct sk_buff *ath9k_htc_tx_get_packet(struct ath9k_htc_priv *priv, struct __wmi_event_txstatus *txs)
{
  #line 617 
  struct sk_buff_head *epid_queue;
  #line 618 
  struct sk_buff *skb;
  #line 618 
  struct sk_buff *tmp;
  #line 619 
  unsigned long flags;
  #line 616 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 620 
  u8 epid = (unsigned char)((int)txs->ts_rate >> 4);
  #line 622 
  epid_queue = get_htc_epid_queue(priv,(unsigned char)((int)epid));
  #line 623 
  if (epid_queue == (struct sk_buff_head *)0) 
                                              #line 624 
                                              return (struct sk_buff *)0;
  #line 626 
  cif___ldv_spin_lock_lock_of_sk_buff_head(& epid_queue->lock);
  #line 627 
  skb = epid_queue->next;
  #line 627 
  tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 627 
  while (skb != (struct sk_buff *)epid_queue) {
    #line 628 
    if ((int)check_cookie(priv,skb,(unsigned char)((int)txs->cookie),
                     (unsigned char)((int)epid)) != 0) {
      #line 629 
      __skb_unlink_1(skb,epid_queue);
      #line 630 
      cif_spin_unlock_irqrestore_lock_of_sk_buff_head(& epid_queue->lock,flags);
      #line 631 
      return skb;
    }
    #line 627 
    skb = tmp;
    #line 627 
    tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  }
  #line 634 
  cif_spin_unlock_irqrestore_lock_of_sk_buff_head(& epid_queue->lock,flags);
  #line 636 
  if ((common->debug_mask & 128) != 0) 
                                       #line 636 
                                       ath_printk((char *)"\001",common,(char *)"No matching packet for cookie: %d, epid: %d\n",(int)txs->cookie,(int)epid);
  #line 639 
  return (struct sk_buff *)0;
}

#line 642  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_txstatus(struct ath9k_htc_priv *priv, void *wmi_event)
{
  #line 645 
  struct __wmi_event_txstatus *__txs;
  #line 646 
  struct sk_buff *skb;
  #line 647 
  struct ath9k_htc_tx_event *tx_pend;
  #line 648 
  int i;
  #line 644 
  struct wmi_event_txstatus *txs = (struct wmi_event_txstatus *)wmi_event;
  #line 650 
  i = 0;
  #line 650 
  while ((int)txs->cnt > i) {
    {
      #line 651 
      int __ret_warn_on = (unsigned int)txs->cnt > 12U;
      #line 651 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 652 
        ldv_inline_asm();
        #line 653 
        ldv_inline_asm();
      }
      #line 651 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 653 
    __txs = & txs->txstatus[i];
    #line 655 
    skb = ath9k_htc_tx_get_packet(priv,__txs);
    #line 656 
    if (skb == (struct sk_buff *)0) {
      #line 661 
      tx_pend = (struct ath9k_htc_tx_event *)kzalloc_3(24UL,2592U);
      #line 663 
      if (tx_pend == (struct ath9k_htc_tx_event *)0) 
                                                     #line 664 
                                                     goto __Cont;
      #line 666 
      memcpy((void *)(& tx_pend->txs),(void *)__txs,3UL);
      #line 669 
      cif_spin_lock_event_lock_of_wmi(& (priv->wmi)->event_lock);
      #line 670 
      list_add_tail_0(& tx_pend->list,& (priv->wmi)->pending_tx_events);
      #line 672 
      cif_spin_unlock_event_lock_of_wmi(& (priv->wmi)->event_lock);
      #line 674 
      goto __Cont;
    }
    #line 677 
    ath9k_htc_tx_process(priv,skb,__txs);
    #line 650 
    __Cont: 
            #line 650 
    i ++;
  }
  #line 681 
  ath9k_htc_check_wake_queues(priv);
  #line 682 
  return;
}

#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_txep(void *drv_priv, struct sk_buff *skb, enum htc_endpoint_id ep_id, bool txok)
{
  #line 688 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 689 
  struct sk_buff_head *epid_queue;
  #line 687 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)drv_priv;
  #line 691 
  tx_ctl = HTC_SKB_CB(skb);
  #line 692 
  tx_ctl->txok = (unsigned char)txok;
  #line 693 
  tx_ctl->timestamp = jiffies;
  #line 695 
  if (! txok) {
    #line 696 
    skb_queue_tail(& priv->tx.tx_failed,skb);
    #line 697 
    cif_tasklet_schedule_0(& priv->tx_failed_tasklet);
    #line 698 
    return;
  }
  #line 701 
  epid_queue = get_htc_epid_queue(priv,(unsigned char)((int)((unsigned char)ep_id)));
  #line 702 
  if (epid_queue == (struct sk_buff_head *)0) {
    #line 703 
    dev_kfree_skb_any(skb);
    #line 704 
    return;
  }
  #line 707 
  skb_queue_tail(epid_queue,skb);
  #line 708 
  return;
}

#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static bool check_packet(struct ath9k_htc_priv *priv, struct sk_buff *skb)
{
  #line 713 
  struct ath9k_htc_tx_ctl *tx_ctl;
  #line 712 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 715 
  tx_ctl = HTC_SKB_CB(skb);
  {
    #line 717 
    unsigned long __dummy;
    #line 717 
    unsigned long __dummy2;
    }
  #line 717 
  if (1 != 0) {
    {
      #line 717 
      unsigned long __dummy_0;
      #line 717 
      unsigned long __dummy2_0;
      }
    #line 717 
    if (1 != 0) {
      #line 717 
      ;
      #line 717 
      if ((long)((tx_ctl->timestamp + msecs_to_jiffies(3000U)) - jiffies) < 0L) {
        #line 720 
        if ((common->debug_mask & 128) != 0) 
                                             #line 720 
                                             ath_printk((char *)"\001",common,(char *)"Dropping a packet due to TX timeout\n");
        #line 721 
        return (_Bool)1;
      }
    }
  }
  #line 724 
  return (_Bool)0;
}

#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void ath9k_htc_tx_cleanup_queue(struct ath9k_htc_priv *priv, struct sk_buff_head *epid_queue)
{
  #line 731 
  unsigned long flags;
  #line 732 
  struct sk_buff *skb;
  #line 732 
  struct sk_buff *tmp;
  #line 733 
  struct sk_buff_head queue;
  #line 730 
  bool process = (_Bool)0;
  #line 735 
  skb_queue_head_init(& queue);
  #line 737 
  cif___ldv_spin_lock_lock_of_sk_buff_head(& epid_queue->lock);
  #line 738 
  skb = epid_queue->next;
  #line 738 
  tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  #line 738 
  while (skb != (struct sk_buff *)epid_queue) {
    #line 739 
    if ((int)check_packet(priv,skb) != 0) {
      #line 740 
      __skb_unlink_1(skb,epid_queue);
      #line 741 
      __skb_queue_tail_1(& queue,skb);
      #line 742 
      process = (_Bool)1;
    }
    #line 738 
    skb = tmp;
    #line 738 
    tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
  }
  #line 745 
  cif_spin_unlock_irqrestore_lock_of_sk_buff_head(& epid_queue->lock,flags);
  #line 747 
  if ((int)process != 0) {
    #line 748 
    skb = queue.next;
    #line 748 
    tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
    #line 748 
    while ((struct sk_buff *)(& queue) != skb) {
      #line 749 
      __skb_unlink_1(skb,& queue);
      #line 750 
      ath9k_htc_tx_process(priv,skb,(struct __wmi_event_txstatus *)0);
      #line 748 
      skb = tmp;
      #line 748 
      tmp = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_502_89.next;
    }
  }
  #line 753 
  return;
}

#line 755  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_tx_cleanup_timer(struct timer_list *t)
{
  #line 763 
  void *__mptr_0;
  #line 763 
  void *__mptr_1;
  #line 757 
  void *__mptr;
  #line 759 
  struct ath9k_htc_tx_event *event;
  #line 759 
  struct ath9k_htc_tx_event *tmp_0;
  #line 760 
  struct sk_buff *skb;
  #line 757 
  __mptr = (void *)t;
  #line 757 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709549728U));
  #line 758 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 762 
  cif_spin_lock_event_lock_of_wmi(& (priv->wmi)->event_lock);
  #line 763 
  __mptr_0 = (void *)(priv->wmi)->pending_tx_events.next;
  #line 763 
  event = ((struct ath9k_htc_tx_event *)(__mptr_0 + 18446744073709551608U));
  #line 763 
  __mptr_1 = (void *)event->list.next;
  #line 764 
  tmp_0 = ((struct ath9k_htc_tx_event *)(__mptr_1 + 18446744073709551608U));
  #line 763 
  while (& event->list != & (priv->wmi)->pending_tx_events) {
    #line 763 
    void *__mptr_2;
    #line 765 
    skb = ath9k_htc_tx_get_packet(priv,& event->txs);
    #line 766 
    if (skb != (struct sk_buff *)0) {
      #line 767 
      if ((common->debug_mask & 128) != 0) 
                                           #line 767 
                                           ath_printk((char *)"\001",common,(char *)"Found packet for cookie: %d, epid: %d\n",(int)event->txs.cookie,(int)event->txs.ts_rate >> 4);
      #line 772 
      ath9k_htc_tx_process(priv,skb,& event->txs);
      #line 773 
      list_del_0(& event->list);
      #line 774 
      kfree((void *)event);
      #line 775 
      goto __Cont;
    }
    #line 778 
    (event->count) ++;
    #line 778 
    if (event->count > 39) {
      #line 779 
      list_del_0(& event->list);
      #line 780 
      kfree((void *)event);
    }
    #line 763 
    __Cont: 
            #line 763 
    event = tmp_0;
    #line 763 
    __mptr_2 = (void *)tmp_0->list.next;
    #line 763 
    tmp_0 = ((struct ath9k_htc_tx_event *)(__mptr_2 + 18446744073709551608U));
  }
  #line 783 
  cif_spin_unlock_event_lock_of_wmi(& (priv->wmi)->event_lock);
  #line 788 
  ath9k_htc_tx_cleanup_queue(priv,& priv->tx.mgmt_ep_queue);
  #line 789 
  ath9k_htc_tx_cleanup_queue(priv,& priv->tx.cab_ep_queue);
  #line 790 
  ath9k_htc_tx_cleanup_queue(priv,& priv->tx.data_be_queue);
  #line 791 
  ath9k_htc_tx_cleanup_queue(priv,& priv->tx.data_bk_queue);
  #line 792 
  ath9k_htc_tx_cleanup_queue(priv,& priv->tx.data_vi_queue);
  #line 793 
  ath9k_htc_tx_cleanup_queue(priv,& priv->tx.data_vo_queue);
  #line 796 
  ath9k_htc_check_wake_queues(priv);
  #line 798 
  ;
  #line 798 
  ;
  #line 798 
  cif_mod_timer(& priv->tx.cleanup_timer,msecs_to_jiffies(50U) + jiffies);
  #line 800 
  return;
}

#line 802  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_tx_init(struct ath9k_htc_priv *priv)
{
  #line 804 
  skb_queue_head_init(& priv->tx.mgmt_ep_queue);
  #line 805 
  skb_queue_head_init(& priv->tx.cab_ep_queue);
  #line 806 
  skb_queue_head_init(& priv->tx.data_be_queue);
  #line 807 
  skb_queue_head_init(& priv->tx.data_bk_queue);
  #line 808 
  skb_queue_head_init(& priv->tx.data_vi_queue);
  #line 809 
  skb_queue_head_init(& priv->tx.data_vo_queue);
  #line 810 
  skb_queue_head_init(& priv->tx.tx_failed);
  #line 811 
  return 0;
}

#line 814  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_tx_cleanup(struct ath9k_htc_priv *priv)
{
  #line 816 
  return;
}

#line 819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
bool ath9k_htc_txq_setup(struct ath9k_htc_priv *priv, int subtype)
{
  #line 823 
  struct ath9k_tx_queue_info qi;
  #line 824 
  int qnum;
  #line 821 
  struct ath_hw *ah = priv->ah;
  #line 822 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 826 
  memset((void *)(& qi),0,60UL);
  #line 827 
  qi.tqi_subtype = subtype_txq_to_hwq[subtype];
  #line 827 
  qi.tqi_aifs = 4294967295U;
  #line 827 
  qi.tqi_cwmin = 4294967295U;
  #line 827 
  qi.tqi_cwmax = 4294967295U;
  #line 827 
  qi.tqi_physCompBuf = 0U;
  #line 827 
  qi.tqi_qflags = (enum ath9k_tx_queue_flags)6;
  #line 829 
  qnum = ath9k_hw_setuptxqueue(priv->ah,(enum ath9k_tx_queue)ATH9K_TX_QUEUE_DATA,& qi);
  #line 830 
  if (qnum == -1) 
                  #line 831 
                  return (_Bool)0;
  #line 833 
  if ((unsigned int)qnum > 3U) {
    #line 834 
    ath_printk((char *)"\001",common,(char *)"qnum %u out of range, max %zu!\n",qnum,4UL);
    #line 836 
    ath9k_hw_releasetxqueue(ah,(unsigned int)qnum);
    #line 837 
    return (_Bool)0;
  }
  #line 840 
  priv->hwq_map[subtype] = qnum;
  #line 841 
  return (_Bool)1;
}

#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_htc_cabq_setup(struct ath9k_htc_priv *priv)
{
  #line 846 
  struct ath9k_tx_queue_info qi;
  #line 848 
  memset((void *)(& qi),0,60UL);
  #line 849 
  qi.tqi_subtype = subtype_txq_to_hwq[0];
  #line 849 
  qi.tqi_aifs = 4294967295U;
  #line 849 
  qi.tqi_cwmin = 4294967295U;
  #line 849 
  qi.tqi_cwmax = 4294967295U;
  #line 849 
  qi.tqi_physCompBuf = 0U;
  #line 849 
  qi.tqi_qflags = (enum ath9k_tx_queue_flags)6;
  #line 851 
  return ath9k_hw_setuptxqueue(priv->ah,(enum ath9k_tx_queue)ATH9K_TX_QUEUE_CAB,
                            & qi);
}

#line 861  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
u32 ath9k_htc_calcrxfilter(struct ath9k_htc_priv *priv)
{
  #line 866 
  u32 rfilt;
  #line 865 
  struct ath_hw *ah = priv->ah;
  #line 868 
  rfilt = (ath9k_hw_getrxfilter(ah) & 8448U) | 7U;
  #line 872 
  if ((priv->rxfilter & 256U) != 0U) 
                                     #line 873 
                                     rfilt |= 128U;
  #line 875 
  if ((int)ah->is_monitoring != 0) 
                                   #line 876 
                                   rfilt |= 32U;
  #line 878 
  if ((priv->rxfilter & 32U) != 0U) 
                                    #line 879 
                                    rfilt |= 8U;
  #line 881 
  if ((ah->opmode == (unsigned int)NL80211_IFTYPE_STATION && (unsigned int)priv->nvifs <= 1U) && (priv->rxfilter & 16U) == 0U) 
    #line 884 
    rfilt |= 512U; else 
                        #line 886 
                        rfilt |= 16U;
  #line 888 
  if ((int)conf_is_ht(& (priv->hw)->conf) != 0) {
    #line 889 
    rfilt |= 1024U;
    #line 890 
    rfilt |= 4096U;
  }
  #line 893 
  if ((priv->rxfilter & 128U) != 0U) 
                                     #line 894 
                                     rfilt |= 16384U;
  #line 896 
  if ((unsigned int)priv->nvifs > 1U || (priv->rxfilter & 64U) != 0U) 
    #line 897 
    rfilt |= 32768U;
  #line 899 
  return rfilt;
}

#line 907  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void ath9k_htc_opmode_init(struct ath9k_htc_priv *priv)
{
  #line 910 
  u32 rfilt;
  #line 910 
  u32 mfilt[2U];
  #line 909 
  struct ath_hw *ah = priv->ah;
  #line 913 
  rfilt = ath9k_htc_calcrxfilter(priv);
  #line 914 
  ath9k_hw_setrxfilter(ah,rfilt);
  #line 917 
  mfilt[1] = 4294967295U;
  #line 917 
  mfilt[0] = mfilt[1];
  #line 918 
  ath9k_hw_setmcastfilter(ah,mfilt[0],mfilt[1]);
  #line 919 
  return;
}

#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_host_rx_init(struct ath9k_htc_priv *priv)
{
  #line 923 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 924 
  ath9k_hw_rxena(priv->ah);
  #line 925 
  ath9k_htc_opmode_init(priv);
  #line 926 
  ;
  #line 926 
  ath9k_hw_startpcureceive(priv->ah,(_Bool)((bool)((int)test_bit(5L,& common->op_flags)) != 0));
  #line 927 
  return;
}

#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
__inline static void convert_htc_flag(struct ath_rx_status *rx_stats, struct ath_htc_rx_status *rxstatus)
{
  #line 932 
  rx_stats->enc_flags = (unsigned short)0U;
  #line 933 
  rx_stats->bw = RATE_INFO_BW_20;
  #line 934 
  if (((int)rxstatus->rs_flags & 8) != 0) 
                                          #line 935 
                                          rx_stats->bw = RATE_INFO_BW_40;
  #line 936 
  if (((int)rxstatus->rs_flags & 4) != 0) 
                                          #line 937 
                                          rx_stats->enc_flags = (unsigned short)((unsigned int)rx_stats->enc_flags | 4U);
  #line 938 
  return;
}

#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static void rx_status_htc_to_ath(struct ath_rx_status *rx_stats, struct ath_htc_rx_status *rxstatus)
{
  #line 943 
  rx_stats->rs_datalen = __builtin_bswap16((unsigned short)((int)rxstatus->rs_datalen));
  #line 944 
  rx_stats->rs_status = rxstatus->rs_status;
  #line 945 
  rx_stats->rs_phyerr = rxstatus->rs_phyerr;
  #line 946 
  rx_stats->rs_rssi = rxstatus->rs_rssi;
  #line 947 
  rx_stats->rs_keyix = rxstatus->rs_keyix;
  #line 948 
  rx_stats->rs_rate = rxstatus->rs_rate;
  #line 949 
  rx_stats->rs_antenna = rxstatus->rs_antenna;
  #line 950 
  rx_stats->rs_more = rxstatus->rs_more;
  #line 952 
  memcpy((void *)(& rx_stats->rs_rssi_ctl),(void *)(& rxstatus->rs_rssi_ctl),3UL);
  #line 954 
  memcpy((void *)(& rx_stats->rs_rssi_ext),(void *)(& rxstatus->rs_rssi_ext),3UL);
  #line 957 
  rx_stats->rs_isaggr = rxstatus->rs_isaggr;
  #line 958 
  rx_stats->rs_moreaggr = rxstatus->rs_moreaggr;
  #line 959 
  rx_stats->rs_num_delims = rxstatus->rs_num_delims;
  #line 960 
  convert_htc_flag(rx_stats,rxstatus);
  #line 961 
  return;
}

#line 963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
static bool ath9k_rx_prepare(struct ath9k_htc_priv *priv, struct ath9k_htc_rxbuf *rxbuf, struct ieee80211_rx_status *rx_status)
{
  #line 968 
  struct ieee80211_hdr *hdr;
  #line 973 
  struct ath_htc_rx_status *rxstatus;
  #line 974 
  struct ath_rx_status rx_stats;
  #line 976 
  __be16 rs_datalen;
  #line 977 
  bool is_phyerr;
  #line 969 
  struct ieee80211_hw *hw = priv->hw;
  #line 970 
  struct sk_buff *skb = rxbuf->skb;
  #line 971 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 972 
  struct ath_hw *ah = (struct ath_hw *)common->ah;
  #line 975 
  bool decrypt_error = (_Bool)0;
  #line 979 
  if (skb->len <= 39U) {
    #line 980 
    ath_printk((char *)"\001",common,(char *)"Corrupted RX frame, dropping (len: %d)\n",skb->len);
    #line 982 
    goto rx_next;
  }
  #line 985 
  rxstatus = (struct ath_htc_rx_status *)skb->data;
  #line 987 
  rs_datalen = __builtin_bswap16((unsigned short)((int)rxstatus->rs_datalen));
  #line 988 
  if ((long)((unsigned int)rs_datalen - skb->len != 4294967256U) != 0L) {
    #line 990 
    ath_printk((char *)"\001",common,(char *)"Corrupted RX data len, dropping (dlen: %d, skblen: %d)\n",(int)rs_datalen,skb->len);
    #line 993 
    goto rx_next;
  }
  #line 996 
  is_phyerr = (_Bool)(((int)rxstatus->rs_status & 2) != 0);
  #line 1001 
  if ((long)((unsigned int)rs_datalen == 0U) != 0L || (long)(((unsigned int)rs_datalen <= 9U && ! is_phyerr) != 0) != 0L) {
    #line 1002 
    ath_printk((char *)"\001",common,(char *)"Short RX data len, dropping (dlen: %d)\n",(int)rs_datalen);
    #line 1005 
    goto rx_next;
  }
  #line 1010 
  memset((void *)rx_status,0,48UL);
  #line 1014 
  rx_status_htc_to_ath(& rx_stats,rxstatus);
  #line 1015 
  ath9k_htc_err_stat_rx(priv,& rx_stats);
  #line 1016 
  rx_status->mactime = (u64)__builtin_bswap64((unsigned long)rxstatus->rs_tstamp);
  #line 1017 
  skb_pull(skb,40U);
  #line 1023 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 1029 
  if ((long)((int)is_phyerr != 0) != 0L) {
    #line 1031 
    if (ath_cmn_process_fft(& priv->spec_priv,hdr,& rx_stats,
                            rx_status->mactime) != 0) ;
    #line 1035 
    goto rx_next;
  }
  #line 1038 
  if (! ath9k_cmn_rx_accept(common,hdr,rx_status,& rx_stats,& decrypt_error,
                            priv->rxfilter)) 
    #line 1040 
    goto rx_next;
  #line 1042 
  ath9k_cmn_rx_skb_postprocess(common,skb,& rx_stats,rx_status,(_Bool)((bool)((int)decrypt_error) != 0));
  #line 1045 
  if (ath9k_cmn_process_rate(common,hw,& rx_stats,rx_status) != 0) 
                                                                   #line 1046 
                                                                   goto rx_next;
  #line 1048 
  rx_stats.is_mybeacon = ath_is_mybeacon(common,hdr);
  #line 1049 
  ath9k_cmn_process_rssi(common,hw,& rx_stats,rx_status);
  #line 1051 
  rx_status->band = (unsigned char)((ah->curchan)->chan)->band;
  #line 1052 
  rx_status->freq = (unsigned short)((ah->curchan)->chan)->center_freq;
  #line 1053 
  rx_status->antenna = rx_stats.rs_antenna;
  #line 1054 
  rx_status->flag |= 65536U;
  #line 1056 
  return (_Bool)1;
  #line 1057 
  rx_next: 
           #line 1057 
  ;
  #line 1058 
  return (_Bool)0;
}

#line 1064  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_rx_tasklet(unsigned long data)
{
  #line 1068 
  struct ieee80211_rx_status rx_status;
  #line 1069 
  struct sk_buff *skb;
  #line 1070 
  unsigned long flags;
  #line 1071 
  struct ieee80211_hdr *hdr;
  #line 1066 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)data;
  #line 1067 
  struct ath9k_htc_rxbuf *rxbuf = (struct ath9k_htc_rxbuf *)0;
  #line 1067 
  struct ath9k_htc_rxbuf *tmp_buf = (struct ath9k_htc_rxbuf *)0;
  #line 1073 
  while (1) {
    #line 1075 
    void *__mptr;
    #line 1074 
    cif___ldv_spin_lock_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock);
    #line 1075 
    __mptr = (void *)priv->rx.rxbuf.next;
    #line 1075 
    tmp_buf = ((struct ath9k_htc_rxbuf *)(__mptr + 18446744073709551560U));
    #line 1075 
    while (& tmp_buf->list != & priv->rx.rxbuf) {
      #line 1075 
      void *__mptr_0;
      #line 1076 
      if ((int)tmp_buf->in_process != 0) {
        #line 1077 
        rxbuf = tmp_buf;
        #line 1078 
        break;
      }
      #line 1075 
      __mptr_0 = (void *)tmp_buf->list.next;
      #line 1075 
      tmp_buf = ((struct ath9k_htc_rxbuf *)(__mptr_0 + 18446744073709551560U));
    }
    #line 1082 
    if (rxbuf == (struct ath9k_htc_rxbuf *)0) {
      #line 1083 
      cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock,flags);
      #line 1084 
      break;
    }
    #line 1087 
    if (rxbuf->skb == (struct sk_buff *)0) 
                                           #line 1088 
                                           goto requeue;
    #line 1090 
    if (! ath9k_rx_prepare(priv,rxbuf,& rx_status)) {
      #line 1091 
      dev_kfree_skb_any(rxbuf->skb);
      #line 1092 
      goto requeue;
    }
    #line 1095 
    memcpy((void *)IEEE80211_SKB_RXCB(rxbuf->skb),(void *)(& rx_status),48UL);
    #line 1097 
    skb = rxbuf->skb;
    #line 1098 
    hdr = (struct ieee80211_hdr *)skb->data;
    #line 1100 
    if ((int)ieee80211_is_beacon((unsigned short)((int)hdr->frame_control)) != 0) 
      #line 1100 
      if ((int)priv->ps_enabled != 0) 
                                      #line 1101 
                                      ieee80211_queue_work(priv->hw,& priv->ps_work);
    #line 1103 
    cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock,flags);
    #line 1105 
    ieee80211_rx(priv->hw,skb);
    #line 1107 
    cif___ldv_spin_lock_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock);
    #line 1108 
    requeue: 
             #line 1108 
    ;
    #line 1109 
    rxbuf->in_process = (_Bool)0;
    #line 1110 
    rxbuf->skb = (struct sk_buff *)0;
    #line 1111 
    list_move_tail_0(& rxbuf->list,& priv->rx.rxbuf);
    #line 1112 
    rxbuf = (struct ath9k_htc_rxbuf *)0;
    #line 1113 
    cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock,flags);
  }
  #line 1115 
  return;
}

#line 1118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_htc_rxep(void *drv_priv, struct sk_buff *skb, enum htc_endpoint_id ep_id)
{
  #line 1128 
  void *__mptr;
  #line 1125 
  unsigned long flags;
  #line 1121 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)drv_priv;
  #line 1122 
  struct ath_hw *ah = priv->ah;
  #line 1123 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 1124 
  struct ath9k_htc_rxbuf *rxbuf = (struct ath9k_htc_rxbuf *)0;
  #line 1124 
  struct ath9k_htc_rxbuf *tmp_buf = (struct ath9k_htc_rxbuf *)0;
  #line 1127 
  cif___ldv_spin_lock_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock);
  #line 1128 
  __mptr = (void *)priv->rx.rxbuf.next;
  #line 1128 
  tmp_buf = ((struct ath9k_htc_rxbuf *)(__mptr + 18446744073709551560U));
  #line 1128 
  while (& tmp_buf->list != & priv->rx.rxbuf) {
    #line 1128 
    void *__mptr_0;
    #line 1129 
    if (! tmp_buf->in_process) {
      #line 1130 
      rxbuf = tmp_buf;
      #line 1131 
      break;
    }
    #line 1128 
    __mptr_0 = (void *)tmp_buf->list.next;
    #line 1128 
    tmp_buf = ((struct ath9k_htc_rxbuf *)(__mptr_0 + 18446744073709551560U));
  }
  #line 1134 
  cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock,flags);
  #line 1136 
  if (rxbuf == (struct ath9k_htc_rxbuf *)0) {
    #line 1137 
    if (common->debug_mask != 0) 
                                 #line 1137 
                                 ath_printk((char *)"\001",common,(char *)"No free RX buffer\n");
    #line 1138 
    goto err;
  }
  #line 1141 
  cif___ldv_spin_lock_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock);
  #line 1142 
  rxbuf->skb = skb;
  #line 1143 
  rxbuf->in_process = (_Bool)1;
  #line 1144 
  cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(& priv->rx.rxbuflock,flags);
  #line 1146 
  cif_tasklet_schedule_0(& priv->rx_tasklet);
  #line 1147 
  return;
  #line 1148 
  err: 
       #line 1148 
  ;
  #line 1149 
  dev_kfree_skb_any(skb);
  #line 1150 
  return;
}

#line 1154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
void ath9k_rx_cleanup(struct ath9k_htc_priv *priv)
{
  #line 1158 
  void *__mptr;
  #line 1158 
  void *__mptr_0;
  #line 1156 
  struct ath9k_htc_rxbuf *rxbuf;
  #line 1156 
  struct ath9k_htc_rxbuf *tbuf;
  #line 1158 
  __mptr = (void *)priv->rx.rxbuf.next;
  #line 1158 
  rxbuf = ((struct ath9k_htc_rxbuf *)(__mptr + 18446744073709551560U));
  #line 1158 
  __mptr_0 = (void *)rxbuf->list.next;
  #line 1159 
  tbuf = ((struct ath9k_htc_rxbuf *)(__mptr_0 + 18446744073709551560U));
  #line 1158 
  while (& rxbuf->list != & priv->rx.rxbuf) {
    #line 1158 
    void *__mptr_1;
    #line 1159 
    list_del_0(& rxbuf->list);
    #line 1160 
    if (rxbuf->skb != (struct sk_buff *)0) 
                                           #line 1161 
                                           dev_kfree_skb_any(rxbuf->skb);
    #line 1162 
    kfree((void *)rxbuf);
    #line 1158 
    rxbuf = tbuf;
    #line 1158 
    __mptr_1 = (void *)tbuf->list.next;
    #line 1158 
    tbuf = ((struct ath9k_htc_rxbuf *)(__mptr_1 + 18446744073709551560U));
  }
  #line 1164 
  return;
}

#line 1166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_txrx.c"
int ath9k_rx_init(struct ath9k_htc_priv *priv)
{
  #line 1168 
  int i = 0;
  #line 1170 
  INIT_LIST_HEAD_1(& priv->rx.rxbuf);
  #line 1171 
  spinlock_check(& priv->rx.rxbuflock);
  {
    #line 1171 
    struct lock_class_key __key;
    #line 1171 
    __raw_spin_lock_init(& priv->rx.rxbuflock.__anonCompField_spinlock_25.rlock,(char *)"&(&priv->rx.rxbuflock)->rlock",& __key);
  }
  #line 1173 
  i = 0;
  #line 1173 
  while (i <= 255) {
    {
      #line 1175 
      struct ath9k_htc_rxbuf *rxbuf = kzalloc_3(72UL,3264U);
      #line 1176 
      if (rxbuf == (struct ath9k_htc_rxbuf *)0) 
                                                #line 1177 
                                                goto err;
      #line 1179 
      list_add_tail_0(& rxbuf->list,& priv->rx.rxbuf);
    }
    #line 1173 
    i ++;
  }
  #line 1182 
  return 0;
  #line 1184 
  err: 
       #line 1184 
  ;
  #line 1185 
  ath9k_rx_cleanup(priv);
  #line 1186 
  return -12;
}

#line 98  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
#line 98 
int emg_mod_timer(struct timer_list *arg0, unsigned long arg1);
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void INIT_LIST_HEAD_1(struct list_head *list)
{
  #line 139 
  ldv_init_list_head(list);
  #line 140 
  return;
}

#line 488  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void *kzalloc_3(size_t size, gfp_t flags)
{
  #line 491 
  return ldv_kzalloc(size,flags);
}

#line 801  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_2(spinlock_t *lock)
{
  #line 804 
  ldv_spin_model_lock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 806 
  spin_lock_bh_2(lock);
  #line 807 
  return;
}

#line 810  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_2(spinlock_t *lock)
{
  #line 813 
  ldv_spin_model_unlock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 815 
  spin_unlock_bh_2(lock);
  #line 816 
  return;
}

#line 819  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_bh_event_lock_of_wmi(spinlock_t *lock)
{
  #line 822 
  ldv_spin_model_lock((char *)"event_lock_of_wmi");
  #line 824 
  spin_lock_bh_2(lock);
  #line 825 
  return;
}

#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_bh_event_lock_of_wmi(spinlock_t *lock)
{
  #line 831 
  ldv_spin_model_unlock((char *)"event_lock_of_wmi");
  #line 833 
  spin_unlock_bh_2(lock);
  #line 834 
  return;
}

#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_tx_lock_of_ath9k_htc_tx(spinlock_t *lock)
{
  #line 840 
  ldv_spin_model_lock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 842 
  spin_lock_0(lock);
  #line 843 
  return;
}

#line 846  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_tx_lock_of_ath9k_htc_tx(spinlock_t *lock)
{
  #line 849 
  ldv_spin_model_unlock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 851 
  spin_unlock_0(lock);
  #line 852 
  return;
}

#line 855  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif___ldv_spin_lock_lock_of_sk_buff_head(spinlock_t *lock)
{
  #line 858 
  ldv_spin_model_lock((char *)"lock_of_sk_buff_head");
  #line 860 
  __ldv_spin_lock(lock);
  #line 861 
  return;
}

#line 864  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_sk_buff_head(spinlock_t *lock, unsigned long flags)
{
  #line 867 
  ldv_spin_model_unlock((char *)"lock_of_sk_buff_head");
  #line 869 
  spin_unlock_irqrestore_1(lock,flags);
  #line 870 
  return;
}

#line 873  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_lock_event_lock_of_wmi(spinlock_t *lock)
{
  #line 876 
  ldv_spin_model_lock((char *)"event_lock_of_wmi");
  #line 878 
  spin_lock_0(lock);
  #line 879 
  return;
}

#line 882  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_event_lock_of_wmi(spinlock_t *lock)
{
  #line 885 
  ldv_spin_model_unlock((char *)"event_lock_of_wmi");
  #line 887 
  spin_unlock_0(lock);
  #line 888 
  return;
}

#line 891  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_tasklet_schedule_0(struct tasklet_struct *t)
{
  #line 895 
  emg_tasklet_schedule(t);
  #line 896 
  return;
}

#line 899  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static int cif_mod_timer(struct timer_list *timer, unsigned long expires)
{
  #line 903 
  return emg_mod_timer(timer,expires);
}

#line 907  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif___ldv_spin_lock_rxbuflock_of_ath9k_htc_rx(spinlock_t *lock)
{
  #line 910 
  ldv_spin_model_lock((char *)"rxbuflock_of_ath9k_htc_rx");
  #line 912 
  __ldv_spin_lock(lock);
  #line 913 
  return;
}

#line 916  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_txrx.i.aux"
static void cif_spin_unlock_irqrestore_rxbuflock_of_ath9k_htc_rx(spinlock_t *lock, unsigned long flags)
{
  #line 919 
  ldv_spin_model_unlock((char *)"rxbuflock_of_ath9k_htc_rx");
  #line 921 
  spin_unlock_irqrestore_1(lock,flags);
  #line 922 
  return;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static void cif_set_bit(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static void INIT_LIST_HEAD_2(struct list_head *list);
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static int cif_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 21 
void ldv_set_bit(long nr, unsigned long *addr);
#line 22 
#line 22 
void ldv_clear_bit(long nr, unsigned long *addr);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 27 
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 462 
#line 462 
bool cancel_work_sync(struct work_struct *);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
#line 164 
int led_classdev_register_ext(struct device *, struct led_classdev *, struct led_init_data *);
#line 178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
__inline static int led_classdev_register(struct device *parent, struct led_classdev *led_cdev)
{
  #line 181 
  return led_classdev_register_ext(parent,led_cdev,(struct led_init_data *)0);
}

#line 193 
#line 193 
void led_classdev_unregister(struct led_classdev *);
#line 4749  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static struct device *wiphy_dev(struct wiphy *wiphy)
{
  #line 4751 
  return wiphy->dev.parent;
}

#line 4760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static char *wiphy_name(struct wiphy *wiphy)
{
  #line 4762 
  return dev_name(& wiphy->dev);
}

#line 6082 
#line 6082 
void wiphy_rfkill_set_hw_state(struct wiphy *, bool);
#line 6088 
#line 6088 
void wiphy_rfkill_start_polling(struct wiphy *);
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4165 
char *__ieee80211_get_radio_led_name(struct ieee80211_hw *);
#line 4247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_radio_led_name(struct ieee80211_hw *hw)
{
  #line 4250 
  return __ieee80211_get_radio_led_name(hw);
}

#line 5383 
#line 5383 
void ieee80211_queue_delayed_work(struct ieee80211_hw *, struct delayed_work *, unsigned long);
#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/btcoex.h"
#line 126 
void ath9k_hw_btcoex_init_3wire(struct ath_hw *);
#line 129 
#line 129 
void ath9k_hw_init_btcoex_hw(struct ath_hw *, int);
#line 130 
#line 130 
void ath9k_hw_btcoex_set_weight(struct ath_hw *, u32, u32, enum ath_stomp_type);
#line 134 
#line 134 
void ath9k_hw_btcoex_disable(struct ath_hw *);
#line 135 
#line 135 
void ath9k_hw_btcoex_bt_stomp(struct ath_hw *, enum ath_stomp_type);
#line 1031  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
#line 1031 
void ath9k_hw_gpio_request_out(struct ath_hw *, u32, char *, u32);
#line 1033 
#line 1033 
void ath9k_hw_gpio_free(struct ath_hw *, u32);
#line 1034 
#line 1034 
u32 ath9k_hw_gpio_get(struct ath_hw *, u32);
#line 1035 
#line 1035 
void ath9k_hw_set_gpio(struct ath_hw *, u32, u32);
#line 1167 
#line 1167 
void ath9k_hw_btcoex_enable(struct ath_hw *);
#line 1169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
__inline static enum ath_btcoex_scheme ath9k_hw_get_btcoex_scheme(struct ath_hw *ah)
{
  #line 1171 
  return ah->btcoex_hw.scheme;
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int ath9k_htc_led_blink;
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_init_btcoex(struct ath9k_htc_priv *priv, char *product);
#line 429  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_start_btcoex(struct ath9k_htc_priv *priv);
#line 430  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_stop_btcoex(struct ath9k_htc_priv *priv);
#line 564  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 564 
int ath9k_htc_update_cap_target(struct ath9k_htc_priv *priv, u8 enable_coex);
#line 602 
#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_start_rfkill_poll(struct ath9k_htc_priv *priv);
#line 603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_rfkill_poll_state(struct ieee80211_hw *hw);
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_configure_leds(struct ath9k_htc_priv *priv);
#line 609  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_init_leds(struct ath9k_htc_priv *priv);
#line 610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_deinit_leds(struct ath9k_htc_priv *priv);
#line 611  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_led_work(struct work_struct *work);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath_detect_bt_priority(struct ath9k_htc_priv *priv)
{
  #line 32 
  struct ath_btcoex *btcoex = & priv->btcoex;
  #line 33 
  struct ath_hw *ah = priv->ah;
  #line 35 
  if (ath9k_hw_gpio_get(ah,(unsigned int)ah->btcoex_hw.btpriority_gpio) != 0U) 
    #line 36 
    (btcoex->bt_priority_cnt) ++;
  {
    #line 38 
    unsigned long __dummy;
    #line 38 
    unsigned long __dummy2;
    }
  #line 38 
  if (1 != 0) {
    {
      #line 38 
      unsigned long __dummy_0;
      #line 38 
      unsigned long __dummy2_0;
      }
    #line 38 
    if (1 != 0) {
      #line 38 
      ;
      #line 38 
      if ((long)((btcoex->bt_priority_time + msecs_to_jiffies(1000U)) - jiffies) < 0L) {
        #line 40 
        cif_clear_bit(3L,& priv->op_flags);
        #line 41 
        cif_clear_bit(4L,& priv->op_flags);
        #line 43 
        if (btcoex->bt_priority_cnt > 14U) {
          #line 44 
          ;
          #line 44 
          if ((ath9k_hw_common(ah)->debug_mask & 4096) != 0) {
            #line 44 
            ath_printk((char *)"\001",ath9k_hw_common(ah),(char *)"BT scan detected\n");
          }
          #line 46 
          cif_set_bit(3L,& priv->op_flags);
          #line 47 
          cif_set_bit(4L,& priv->op_flags);
        }
        else 
          #line 48 
          if (btcoex->bt_priority_cnt > 2U) {
            #line 49 
            ;
            #line 49 
            if ((ath9k_hw_common(ah)->debug_mask & 4096) != 0) {
              #line 49 
              ath_printk((char *)"\001",ath9k_hw_common(ah),(char *)"BT priority traffic detected\n");
            }
            #line 51 
            cif_set_bit(3L,& priv->op_flags);
          }
        #line 54 
        btcoex->bt_priority_cnt = 0U;
        #line 55 
        btcoex->bt_priority_time = jiffies;
      }
    }
  }
  #line 57 
  return;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath_btcoex_period_work(struct work_struct *work)
{
  #line 66 
  void *__mptr;
  #line 70 
  u32 timer_period;
  #line 71 
  int ret;
  #line 82 
  unsigned int tmp_3;
  #line 66 
  __mptr = (void *)work;
  #line 66 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709548048U));
  #line 68 
  struct ath_btcoex *btcoex = & priv->btcoex;
  #line 69 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 73 
  ath_detect_bt_priority(priv);
  #line 75 
  ;
  #line 75 
  ret = ath9k_htc_update_cap_target(priv,(unsigned char)((int)test_bit(3L,& priv->op_flags)));
  #line 77 
  if (ret != 0) {
    #line 78 
    ath_printk((char *)"\001",common,(char *)"Unable to set BTCOEX parameters\n");
    #line 79 
    return;
  }
  #line 82 
  if ((int)test_bit(4L,& priv->op_flags) == 0) 
                                               #line 82 
                                               tmp_3 = (enum ath_stomp_type)btcoex->bt_stomp_type; else 
                                                                    #line 82 
                                                                    tmp_3 = (unsigned int)ATH_BTCOEX_STOMP_ALL;
  #line 82 
  ;
  #line 82 
  ath9k_hw_btcoex_bt_stomp(priv->ah,(enum ath_stomp_type)tmp_3);
  #line 85 
  ath9k_hw_btcoex_enable(priv->ah);
  #line 86 
  if ((int)test_bit(4L,& priv->op_flags) != 0) 
                                               #line 86 
                                               timer_period = btcoex->btscan_no_stomp; else 
                                                                    #line 86 
                                                                    timer_period = btcoex->btcoex_no_stomp;
  #line 88 
  ;
  #line 88 
  ;
  #line 88 
  ieee80211_queue_delayed_work(priv->hw,& priv->duty_cycle_work,msecs_to_jiffies(timer_period));
  #line 90 
  ;
  #line 90 
  ;
  #line 90 
  ieee80211_queue_delayed_work(priv->hw,& priv->coex_period_work,msecs_to_jiffies(btcoex->btcoex_period));
  #line 92 
  return;
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath_btcoex_duty_cycle_work(struct work_struct *work)
{
  #line 100 
  void *__mptr;
  #line 100 
  __mptr = (void *)work;
  #line 100 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709547864U));
  #line 102 
  struct ath_hw *ah = priv->ah;
  #line 103 
  struct ath_btcoex *btcoex = & priv->btcoex;
  #line 104 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 106 
  if ((common->debug_mask & 4096) != 0) 
                                        #line 106 
                                        ath_printk((char *)"\001",common,(char *)"time slice work for bt and wlan\n");
  #line 108 
  if (btcoex->bt_stomp_type == 1) 
                                  #line 108 
                                  goto _LOR;
  else {
    #line 108 
    if ((int)test_bit(4L,& priv->op_flags) != 0) 
                                                 #line 108 
                                                 _LOR: 
                                                       #line 110 
                                                       ath9k_hw_btcoex_bt_stomp(ah,(enum ath_stomp_type)ATH_BTCOEX_STOMP_NONE);
    else 
      #line 111 
      if (btcoex->bt_stomp_type == 0) 
                                      #line 112 
                                      ath9k_hw_btcoex_bt_stomp(ah,(enum ath_stomp_type)ATH_BTCOEX_STOMP_LOW);
  }
  #line 114 
  ath9k_hw_btcoex_enable(priv->ah);
  #line 115 
  return;
}

#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath_htc_init_btcoex_work(struct ath9k_htc_priv *priv)
{
  #line 119 
  struct ath_btcoex *btcoex = & priv->btcoex;
  #line 121 
  btcoex->btcoex_period = 45U;
  #line 122 
  btcoex->btcoex_no_stomp = (btcoex->btcoex_period * 45U) / 100U;
  #line 124 
  btcoex->btscan_no_stomp = (btcoex->btcoex_period * 10U) / 100U;
  {
    #line 126 
    struct lock_class_key __key;
    #line 126 
    __init_work(& priv->coex_period_work.work,0);
    #line 126 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 126 
    priv->coex_period_work.work.data = __constr_expr_41;
    #line 126 
    lockdep_init_map(& priv->coex_period_work.work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 126 
    INIT_LIST_HEAD_2(& priv->coex_period_work.work.entry);
    #line 126 
    priv->coex_period_work.work.func = & ath_btcoex_period_work;
  }
  {
    #line 126 
    struct lock_class_key __key_0;
    #line 126 
    init_timer_key(& priv->coex_period_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&priv->coex_period_work)->timer",& __key_0);
  }
  {
    #line 127 
    struct lock_class_key __key_1;
    #line 127 
    __init_work(& priv->duty_cycle_work.work,0);
    #line 127 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 127 
    priv->duty_cycle_work.work.data = __constr_expr_42;
    #line 127 
    lockdep_init_map(& priv->duty_cycle_work.work.lockdep_map,(char *)"(work_completion)",& __key_1,0);
    #line 127 
    INIT_LIST_HEAD_2(& priv->duty_cycle_work.work.entry);
    #line 127 
    priv->duty_cycle_work.work.func = & ath_btcoex_duty_cycle_work;
  }
  {
    #line 127 
    struct lock_class_key __key_2;
    #line 127 
    init_timer_key(& priv->duty_cycle_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&priv->duty_cycle_work)->timer",& __key_2);
  }
  #line 130 
  return;
}

#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath_htc_resume_btcoex_work(struct ath9k_htc_priv *priv)
{
  #line 136 
  struct ath_btcoex *btcoex = & priv->btcoex;
  #line 137 
  struct ath_hw *ah = priv->ah;
  #line 139 
  ;
  #line 139 
  if ((ath9k_hw_common(ah)->debug_mask & 4096) != 0) {
    #line 139 
    ath_printk((char *)"\001",ath9k_hw_common(ah),(char *)"Starting btcoex work\n");
  }
  #line 141 
  btcoex->bt_priority_cnt = 0U;
  #line 142 
  btcoex->bt_priority_time = jiffies;
  #line 143 
  cif_clear_bit(3L,& priv->op_flags);
  #line 144 
  cif_clear_bit(4L,& priv->op_flags);
  #line 145 
  ieee80211_queue_delayed_work(priv->hw,& priv->coex_period_work,0UL);
  #line 146 
  return;
}

#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath_htc_cancel_btcoex_work(struct ath9k_htc_priv *priv)
{
  #line 154 
  cancel_delayed_work_sync(& priv->coex_period_work);
  #line 155 
  cancel_delayed_work_sync(& priv->duty_cycle_work);
  #line 156 
  return;
}

#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_start_btcoex(struct ath9k_htc_priv *priv)
{
  #line 160 
  struct ath_hw *ah = priv->ah;
  #line 162 
  if (ath9k_hw_get_btcoex_scheme(ah) == (unsigned int)ATH_BTCOEX_CFG_3WIRE) {
    #line 163 
    ath9k_hw_btcoex_set_weight(ah,65365U,43176U,(enum ath_stomp_type)ATH_BTCOEX_STOMP_ALL);
    #line 165 
    ath9k_hw_btcoex_enable(ah);
    #line 166 
    ath_htc_resume_btcoex_work(priv);
  }
  #line 168 
  return;
}

#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_stop_btcoex(struct ath9k_htc_priv *priv)
{
  #line 172 
  struct ath_hw *ah = priv->ah;
  #line 174 
  if ((int)ah->btcoex_hw.enabled != 0) {
    #line 174 
    if (ath9k_hw_get_btcoex_scheme(ah) != (unsigned int)ATH_BTCOEX_CFG_NONE) {
      #line 176 
      if (ah->btcoex_hw.scheme == (unsigned int)ATH_BTCOEX_CFG_3WIRE) 
        #line 177 
        ath_htc_cancel_btcoex_work(priv);
      #line 178 
      ath9k_hw_btcoex_disable(ah);
    }
  }
  #line 180 
  return;
}

#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_init_btcoex(struct ath9k_htc_priv *priv, char *product)
{
  #line 186 
  int qnum;
  #line 184 
  struct ath_hw *ah = priv->ah;
  #line 185 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 191 
  if (! common->btcoex_enabled) {
    #line 192 
    ah->btcoex_hw.scheme = ATH_BTCOEX_CFG_NONE;
    #line 193 
    return;
  }
  #line 196 
  if (product != (char *)0) {
    #line 196 
    if (cif_strncmp(product,(char *)"wb193",5UL) == 0) 
                                                       #line 197 
                                                       ah->btcoex_hw.scheme = ATH_BTCOEX_CFG_3WIRE;
  }
  #line 200 
  switch ((unsigned int)ath9k_hw_get_btcoex_scheme(priv->ah)) {
    #line 201 
    case (unsigned int)0: 
                          #line 201 
    ;
    #line 202 
    break;
    #line 203 
    case (unsigned int)2: 
                          #line 203 
    ;
    #line 204 
    (priv->ah)->btcoex_hw.btactive_gpio = (unsigned char)7U;
    #line 205 
    (priv->ah)->btcoex_hw.btpriority_gpio = (unsigned char)6U;
    #line 206 
    (priv->ah)->btcoex_hw.wlanactive_gpio = (unsigned char)8U;
    #line 207 
    priv->btcoex.bt_stomp_type = 1;
    #line 208 
    ath9k_hw_btcoex_init_3wire(priv->ah);
    #line 209 
    ath_htc_init_btcoex_work(priv);
    #line 210 
    qnum = priv->hwq_map[2];
    #line 211 
    ath9k_hw_init_btcoex_hw(priv->ah,qnum);
    #line 212 
    break;
    #line 213 
    default: 
             #line 213 
    ;
    {
      #line 214 
      int __ret_warn_on = 1;
      #line 214 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 215 
        ldv_inline_asm();
        #line 216 
        ldv_inline_asm();
      }
      #line 214 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 215 
    break;
  }
  #line 217 
  return;
}

#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_led_work(struct work_struct *work)
{
  #line 228 
  void *__mptr;
  #line 228 
  __mptr = (void *)work;
  #line 228 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709548184U));
  #line 232 
  ath9k_hw_set_gpio(priv->ah,(unsigned int)(priv->ah)->led_pin,(unsigned int)(priv->brightness == (unsigned int)LED_OFF));
  #line 234 
  return;
}

#line 236  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static void ath9k_led_brightness(struct led_classdev *led_cdev, enum led_brightness brightness)
{
  #line 239 
  void *__mptr;
  #line 239 
  __mptr = (void *)led_cdev;
  #line 239 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709548888U));
  #line 244 
  priv->brightness = brightness;
  #line 245 
  ieee80211_queue_work(priv->hw,& priv->led_work);
  #line 246 
  return;
}

#line 248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_deinit_leds(struct ath9k_htc_priv *priv)
{
  #line 250 
  if (! priv->led_registered) 
                              #line 251 
                              return;
  #line 253 
  ath9k_led_brightness(& priv->led_cdev,(enum led_brightness)LED_OFF);
  #line 254 
  led_classdev_unregister(& priv->led_cdev);
  #line 255 
  cancel_work_sync(& priv->led_work);
  #line 257 
  ath9k_hw_gpio_free(priv->ah,(unsigned int)(priv->ah)->led_pin);
  #line 258 
  return;
}

#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_configure_leds(struct ath9k_htc_priv *priv)
{
  #line 264 
  ath9k_hw_gpio_request_out(priv->ah,(unsigned int)(priv->ah)->led_pin,(char *)"ath9k-led",0U);
  #line 268 
  ath9k_hw_set_gpio(priv->ah,(unsigned int)(priv->ah)->led_pin,1U);
  #line 269 
  return;
}

#line 271  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_init_leds(struct ath9k_htc_priv *priv)
{
  #line 273 
  int ret;
  #line 275 
  if ((priv->ah)->hw_version.macVersion == 384U) 
                                                 #line 276 
                                                 (priv->ah)->led_pin = 10;
  else 
    #line 277 
    if ((priv->ah)->hw_version.macVersion == 320U) 
                                                   #line 278 
                                                   (priv->ah)->led_pin = 15;
    else 
      #line 279 
      if ((unsigned int)(priv->ah)->hw_version.usbdev + 4294967295U <= 1U) 
        #line 280 
        (priv->ah)->led_pin = 12; else 
                                       #line 282 
                                       (priv->ah)->led_pin = 1;
  #line 284 
  if (ath9k_htc_led_blink == 0) 
                                #line 285 
                                priv->led_cdev.default_trigger = ieee80211_get_radio_led_name(priv->hw);
  #line 288 
  ath9k_configure_leds(priv);
  #line 290 
  ;
  #line 290 
  snprintf((char *)(& priv->led_name),32UL,(char *)"ath9k_htc-%s",wiphy_name((priv->hw)->wiphy));
  #line 292 
  priv->led_cdev.name = (char *)(& priv->led_name);
  #line 293 
  priv->led_cdev.brightness_set = & ath9k_led_brightness;
  #line 295 
  ;
  #line 295 
  ret = led_classdev_register(wiphy_dev((priv->hw)->wiphy),& priv->led_cdev);
  #line 296 
  if (ret < 0) 
               #line 297 
               return;
  {
    #line 299 
    struct lock_class_key __key;
    #line 299 
    __init_work(& priv->led_work,0);
    #line 299 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 299 
    priv->led_work.data = __constr_expr_43;
    #line 299 
    lockdep_init_map(& priv->led_work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 299 
    INIT_LIST_HEAD_2(& priv->led_work.entry);
    #line 299 
    priv->led_work.func = & ath9k_led_work;
  }
  #line 300 
  priv->led_registered = (_Bool)1;
  #line 302 
  return;
}

#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
static bool ath_is_rfkill_set(struct ath9k_htc_priv *priv)
{
  #line 312 
  bool is_blocked;
  #line 314 
  ath9k_htc_ps_wakeup(priv);
  #line 315 
  is_blocked = (_Bool)(ath9k_hw_gpio_get(priv->ah,(priv->ah)->rfkill_gpio) == (priv->ah)->rfkill_polarity);
  #line 317 
  ath9k_htc_ps_restore(priv);
  #line 319 
  return is_blocked;
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_htc_rfkill_poll_state(struct ieee80211_hw *hw)
{
  #line 324 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 325 
  bool blocked = (_Bool)((int)ath_is_rfkill_set(priv) != 0);
  #line 327 
  wiphy_rfkill_set_hw_state(hw->wiphy,(_Bool)((bool)((int)blocked) != 0));
  #line 328 
  return;
}

#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_gpio.c"
void ath9k_start_rfkill_poll(struct ath9k_htc_priv *priv)
{
  #line 332 
  if (((priv->ah)->caps.hw_caps & 2U) != 0U) 
                                             #line 333 
                                             wiphy_rfkill_start_polling((priv->hw)->wiphy);
  #line 334 
  return;
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static void cif_set_bit(long nr, unsigned long *addr)
{
  #line 125 
  ldv_set_bit(nr,addr);
  #line 126 
  return;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static void cif_clear_bit(long nr, unsigned long *addr)
{
  #line 132 
  ldv_clear_bit(nr,addr);
  #line 133 
  return;
}

#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static void INIT_LIST_HEAD_2(struct list_head *list)
{
  #line 139 
  ldv_init_list_head(list);
  #line 140 
  return;
}

#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_gpio.i.aux"
static int cif_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 146 
  return ldv_strncmp(cs,ct,count);
}

#line 8  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
#line 8 
void ldv_atomic_dec(atomic_t *v);
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 146  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void INIT_LIST_HEAD_3(struct list_head *list);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_7309 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 237 
#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void atomic_inc_0(atomic_t *v);
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void atomic_dec(atomic_t *v);
#line 26 
#line 811 
static void cif_mutex_lock_multi_write_mutex_of_wmi(struct mutex *lock);
#line 26 
#line 825 
static void cif_mutex_lock_multi_rmw_mutex_of_wmi(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_mutex_unlock_multi_write_mutex_of_wmi(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_mutex_unlock_multi_rmw_mutex_of_wmi(struct mutex *lock);
#line 687  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 839  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_tasklet_init_0(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 498  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void *kzalloc_4(size_t size, gfp_t flags);
#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  #line 240 
  memset((void *)addr,255,6UL);
  #line 241 
  return;
}

#line 4738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  #line 4740 
  wiphy->dev.parent = dev;
  #line 4741 
  return;
}

#line 5490 
#line 5490 
int regulatory_hint(struct wiphy *, char *);
#line 6094 
#line 6094 
void wiphy_rfkill_stop_polling(struct wiphy *);
#line 7322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void wiphy_ext_feature_set(struct wiphy *wiphy, enum nl80211_ext_feature_index ftidx)
{
  #line 7325 
  u8 *ft_byte;
  #line 7327 
  ft_byte = & wiphy->ext_features[(unsigned int)ftidx / 8U];
  #line 7328 
  *ft_byte = (unsigned char)((int)*ft_byte | (int)((unsigned char)(1UL << ((unsigned int)ftidx & 7U))));
  #line 7329 
  return;
}

#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  #line 2536 
  __set_bit((long)flg,(unsigned long *)(& hw->flags));
  #line 2537 
  return;
}

#line 2591 
#line 2591 
struct ieee80211_hw *wiphy_to_ieee80211_hw(struct wiphy *);
#line 2599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  #line 2601 
  set_wiphy_dev(hw->wiphy,dev);
  #line 2602 
  return;
}

#line 2610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  #line 2612 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void *)addr,6UL);
  #line 2613 
  return;
}

#line 4123 
#line 847  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops);
#line 4135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4135 
int ieee80211_register_hw(struct ieee80211_hw *);
#line 4167 
#line 4167 
char *__ieee80211_create_tpt_led_trigger(struct ieee80211_hw *, unsigned int, struct ieee80211_tpt_blink *, unsigned int);
#line 4269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_create_tpt_led_trigger(struct ieee80211_hw *hw, unsigned int flags, struct ieee80211_tpt_blink *blink_table, unsigned int blink_table_len)
{
  #line 4274 
  return __ieee80211_create_tpt_led_trigger(hw,flags,blink_table,
                                         blink_table_len);
}

#line 4289 
#line 4289 
void ieee80211_unregister_hw(struct ieee80211_hw *);
#line 4301 
#line 855  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw);
#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
#line 740 
int ath9k_hw_beaconq_setup(struct ath_hw *);
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/regd.h"
#line 260 
bool ath_is_world_regd(struct ath_regulatory *);
#line 263 
#line 263 
int ath_regd_init(struct ath_regulatory *, struct wiphy *, void (*)(struct wiphy *, struct regulatory_request *));
#line 268 
#line 268 
void ath_reg_notifier_apply(struct wiphy *, struct regulatory_request *, struct ath_regulatory *);
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
__inline static struct ath_regulatory *ath9k_hw_regulatory(struct ath_hw *ah)
{
  #line 1003 
  return & ath9k_hw_common(ah)->regulatory;
}

#line 1022 
#line 1022 
void ath9k_hw_deinit(struct ath_hw *);
#line 1023 
#line 1023 
int ath9k_hw_init(struct ath_hw *);
#line 1041 
#line 1041 
bool ath9k_hw_wait(struct ath_hw *, u32, u32, u32, u32);
#line 1055 
#line 1055 
bool ath9k_hw_disable(struct ath_hw *);
#line 1093 
#line 1093 
void ath9k_hw_name(struct ath_hw *, char *, size_t);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-init.h"
#line 17 
int ath9k_cmn_init_channels_rates(struct ath_common *);
#line 20 
#line 20 
void ath9k_cmn_reload_chainmask(struct ath_hw *);
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common.h"
#line 92 
void ath9k_cmn_init_crypto(struct ath_hw *);
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
struct ieee80211_ops ath9k_htc_ops;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int htc_modparam_nohwcrypt;
#line 537  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
__inline static void ath_read_cachesize(struct ath_common *common, int *csz)
{
  #line 539 
  (*((common->bus_ops)->read_cachesize))(common,csz);
  #line 540 
  return;
}

#line 566 
#line 566 
void ath9k_htc_ani_work(struct work_struct *work);
#line 598 
#line 598 
void ath9k_ps_work(struct work_struct *work);
#line 599 
#line 599 
bool ath9k_htc_setpower(struct ath9k_htc_priv *priv, enum ath9k_power_mode mode);
#line 605 
#line 605 
struct base_eep_header *ath9k_htc_get_eeprom_base(struct ath9k_htc_priv *priv);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static unsigned int ath9k_debug = 1024U;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_htc_btcoex_enable;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_ps_enable;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int htc_use_dev_fw = 0;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int ath9k_htc_led_blink = 1;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static struct ieee80211_tpt_blink ath9k_htc_tpt_blink[10U] = {{.blink_time = 334}, {.throughput = 1024, .blink_time = 260}, {.throughput = 5120, .blink_time = 220}, {.throughput = 10240, .blink_time = 190}, {.throughput = 20480, .blink_time = 170}, {.throughput = 51200, .blink_time = 150}, {.throughput = 71680, .blink_time = 130}, {.throughput = 102400, .blink_time = 110}, {.throughput = 204800, .blink_time = 80}, {.throughput = 307200, .blink_time = 50}};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_htc_op_ps_wakeup(struct ath_common *common)
{
  #line 66 
  ath9k_htc_ps_wakeup((struct ath9k_htc_priv *)common->priv);
  #line 67 
  return;
}

#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_htc_op_ps_restore(struct ath_common *common)
{
  #line 71 
  ath9k_htc_ps_restore((struct ath9k_htc_priv *)common->priv);
  #line 72 
  return;
}

#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static struct ath_ps_ops ath9k_htc_ps_ops = {.wakeup = & ath9k_htc_op_ps_wakeup, .restore = & ath9k_htc_op_ps_restore};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_htc_wait_for_target(struct ath9k_htc_priv *priv)
{
  #line 81 
  unsigned long time_left;
  #line 83 
  if (atomic_read(& (priv->htc)->tgt_ready) > 0) {
    #line 84 
    atomic_dec(& (priv->htc)->tgt_ready);
    #line 85 
    return 0;
  }
  #line 89 
  time_left = wait_for_completion_timeout(& (priv->htc)->target_wait,250UL);
  #line 90 
  if (time_left == 0UL) {
    #line 91 
    _dev_err(priv->dev,(char *)"ath9k_htc: Target is unresponsive\n");
    #line 92 
    return -110;
  }
  #line 95 
  atomic_dec(& (priv->htc)->tgt_ready);
  #line 97 
  return 0;
}

#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_deinit_priv(struct ath9k_htc_priv *priv)
{
  #line 102 
  ath9k_hw_deinit(priv->ah);
  #line 103 
  kfree((void *)priv->ah);
  #line 104 
  priv->ah = (struct ath_hw *)0;
  #line 105 
  return;
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_deinit_device(struct ath9k_htc_priv *priv)
{
  #line 109 
  struct ieee80211_hw *hw = priv->hw;
  #line 111 
  wiphy_rfkill_stop_polling(hw->wiphy);
  #line 112 
  ath9k_deinit_leds(priv);
  #line 113 
  ath9k_htc_deinit_debug(priv);
  #line 114 
  ieee80211_unregister_hw(hw);
  #line 115 
  ath9k_rx_cleanup(priv);
  #line 116 
  ath9k_tx_cleanup(priv);
  #line 117 
  ath9k_deinit_priv(priv);
  #line 118 
  return;
}

#line 120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
__inline static int ath9k_htc_connect_svc(struct ath9k_htc_priv *priv, u16 service_id, void (*tx)(void *, struct sk_buff *, enum htc_endpoint_id , bool ), enum htc_endpoint_id *ep_id)
{
  #line 128 
  struct htc_service_connreq req;
  #line 130 
  memset((void *)(& req),0,32UL);
  #line 132 
  req.service_id = service_id;
  #line 133 
  req.ep_callbacks.priv = (void *)priv;
  #line 134 
  req.ep_callbacks.rx = & ath9k_htc_rxep;
  #line 135 
  req.ep_callbacks.tx = tx;
  #line 137 
  return htc_connect_service(priv->htc,& req,ep_id);
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_init_htc_services(struct ath9k_htc_priv *priv, u16 devid, u32 drv_info)
{
  #line 143 
  int ret;
  #line 146 
  ret = ath9k_wmi_connect(priv->htc,priv->wmi,& priv->wmi_cmd_ep);
  #line 147 
  if (ret != 0) 
                #line 148 
                goto err;
  #line 151 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)257,& ath9k_htc_beaconep,& priv->beacon_ep);
  #line 153 
  if (ret != 0) 
                #line 154 
                goto err;
  #line 157 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)258,& ath9k_htc_txep,& priv->cab_ep);
  #line 159 
  if (ret != 0) 
                #line 160 
                goto err;
  #line 164 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)259,& ath9k_htc_txep,& priv->uapsd_ep);
  #line 166 
  if (ret != 0) 
                #line 167 
                goto err;
  #line 170 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)260,& ath9k_htc_txep,& priv->mgmt_ep);
  #line 172 
  if (ret != 0) 
                #line 173 
                goto err;
  #line 176 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)263,& ath9k_htc_txep,& priv->data_be_ep);
  #line 178 
  if (ret != 0) 
                #line 179 
                goto err;
  #line 182 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)264,& ath9k_htc_txep,& priv->data_bk_ep);
  #line 184 
  if (ret != 0) 
                #line 185 
                goto err;
  #line 188 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)262,& ath9k_htc_txep,& priv->data_vi_ep);
  #line 190 
  if (ret != 0) 
                #line 191 
                goto err;
  #line 194 
  ret = ath9k_htc_connect_svc(priv,(unsigned short)261,& ath9k_htc_txep,& priv->data_vo_ep);
  #line 196 
  if (ret != 0) 
                #line 197 
                goto err;
  #line 205 
  if (drv_info + 4294967295U <= 1U) 
                                    #line 206 
                                    (priv->htc)->credits = (unsigned short)45U; else 
                                                                    #line 208 
                                                                    (priv->htc)->credits = (unsigned short)33U;
  #line 210 
  ret = htc_init(priv->htc);
  #line 211 
  if (ret != 0) 
                #line 212 
                goto err;
  #line 214 
  _dev_info(priv->dev,(char *)"ath9k_htc: HTC initialized with %d credits\n",(int)(priv->htc)->credits);
  #line 217 
  return 0;
  #line 219 
  err: 
       #line 219 
  ;
  #line 220 
  _dev_err(priv->dev,(char *)"ath9k_htc: Unable to initialize HTC services\n");
  #line 221 
  return ret;
}

#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_reg_notifier(struct wiphy *wiphy, struct regulatory_request *request)
{
  #line 227 
  struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
  #line 228 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 230 
  ;
  #line 230 
  ;
  #line 230 
  ath_reg_notifier_apply(wiphy,request,ath9k_hw_regulatory(priv->ah));
  #line 232 
  return;
}

#line 234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static unsigned int ath9k_regread(void *hw_priv, u32 reg_offset)
{
  #line 239 
  __be32 val;
  #line 240 
  int r;
  #line 236 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 237 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 238 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 239 
  __be32 reg = __builtin_bswap32(reg_offset);
  #line 242 
  r = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_READ_CMDID,(u8 *)(& reg),4U,(u8 *)(& val),4U,100U);
  #line 246 
  if ((long)(r != 0) != 0L) {
    #line 247 
    if ((common->debug_mask & 8192) != 0) 
                                          #line 247 
                                          ath_printk((char *)"\001",common,(char *)"REGISTER READ FAILED: (0x%04x, %d)\n",reg_offset,r);
    #line 249 
    return 4294967291U;
  }
  #line 252 
  return __builtin_bswap32(val);
}

#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_multi_regread(void *hw_priv, u32 *addr, u32 *val, u16 count)
{
  #line 261 
  __be32 tmpaddr[8U];
  #line 262 
  __be32 tmpval[8U];
  #line 263 
  int i;
  #line 263 
  int ret;
  #line 258 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 259 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 260 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 265 
  i = 0;
  #line 265 
  while ((int)count > i) {
    #line 266 
    tmpaddr[i] = __builtin_bswap32(*(addr + (unsigned long)i));
    #line 265 
    i ++;
  }
  #line 269 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_READ_CMDID,(u8 *)(& tmpaddr),(unsigned int)count * 4U,(u8 *)(& tmpval),(unsigned int)count * 4U,100U);
  #line 273 
  if ((long)(ret != 0) != 0L) 
    #line 274 
    if ((common->debug_mask & 8192) != 0) 
                                          #line 274 
                                          ath_printk((char *)"\001",common,(char *)"Multiple REGISTER READ FAILED (count: %d)\n",(int)count);
  #line 278 
  i = 0;
  #line 278 
  while ((int)count > i) {
    #line 279 
    *(val + (unsigned long)i) = __builtin_bswap32(tmpval[i]);
    #line 278 
    i ++;
  }
  #line 280 
  return;
}

#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_regwrite_multi(struct ath_common *common)
{
  #line 286 
  u32 rsp_status;
  #line 287 
  int r;
  #line 285 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 289 
  r = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_WRITE_CMDID,(u8 *)(& (priv->wmi)->multi_write),(priv->wmi)->multi_write_idx * 8U,(u8 *)(& rsp_status),4U,100U);
  #line 294 
  if ((long)(r != 0) != 0L) 
    #line 295 
    if ((common->debug_mask & 8192) != 0) 
                                          #line 295 
                                          ath_printk((char *)"\001",common,(char *)"REGISTER WRITE FAILED, multi len: %d\n",(priv->wmi)->multi_write_idx);
  #line 299 
  (priv->wmi)->multi_write_idx = 0U;
  #line 300 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_regwrite_single(void *hw_priv, u32 val, u32 reg_offset)
{
  #line 311 
  int r;
  #line 304 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 305 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 306 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 307 
  __be32 buf[2U] = {__builtin_bswap32(reg_offset), __builtin_bswap32(val)};
  #line 313 
  r = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_WRITE_CMDID,(u8 *)(& buf),8U,(u8 *)(& val),4U,100U);
  #line 317 
  if ((long)(r != 0) != 0L) 
    #line 318 
    if ((common->debug_mask & 8192) != 0) 
                                          #line 318 
                                          ath_printk((char *)"\001",common,(char *)"REGISTER WRITE FAILED:(0x%04x, %d)\n",reg_offset,r);
  #line 319 
  return;
}

#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_regwrite_buffer(void *hw_priv, u32 val, u32 reg_offset)
{
  #line 325 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 326 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 327 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 329 
  cif_mutex_lock_multi_write_mutex_of_wmi(& (priv->wmi)->multi_write_mutex);
  #line 332 
  (priv->wmi)->multi_write[(priv->wmi)->multi_write_idx].reg = __builtin_bswap32(reg_offset);
  #line 334 
  (priv->wmi)->multi_write[(priv->wmi)->multi_write_idx].val = __builtin_bswap32(val);
  #line 337 
  ((priv->wmi)->multi_write_idx) ++;
  #line 340 
  if ((priv->wmi)->multi_write_idx == 62U) 
                                           #line 341 
                                           ath9k_regwrite_multi(common);
  #line 343 
  cif_mutex_unlock_multi_write_mutex_of_wmi(& (priv->wmi)->multi_write_mutex);
  #line 344 
  return;
}

#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_regwrite(void *hw_priv, u32 val, u32 reg_offset)
{
  #line 348 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 349 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 350 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 352 
  if (atomic_read(& (priv->wmi)->mwrite_cnt) != 0) 
                                                   #line 353 
                                                   ath9k_regwrite_buffer(hw_priv,val,reg_offset); else 
                                                                    #line 355 
                                                                    ath9k_regwrite_single(hw_priv,val,reg_offset);
  #line 356 
  return;
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_enable_regwrite_buffer(void *hw_priv)
{
  #line 360 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 361 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 362 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 364 
  atomic_inc_0(& (priv->wmi)->mwrite_cnt);
  #line 365 
  return;
}

#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_regwrite_flush(void *hw_priv)
{
  #line 369 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 370 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 371 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 373 
  atomic_dec(& (priv->wmi)->mwrite_cnt);
  #line 375 
  cif_mutex_lock_multi_write_mutex_of_wmi(& (priv->wmi)->multi_write_mutex);
  #line 377 
  if ((priv->wmi)->multi_write_idx != 0U) 
                                          #line 378 
                                          ath9k_regwrite_multi(common);
  #line 380 
  cif_mutex_unlock_multi_write_mutex_of_wmi(& (priv->wmi)->multi_write_mutex);
  #line 381 
  return;
}

#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_reg_rmw_buffer(void *hw_priv, u32 reg_offset, u32 set, u32 clr)
{
  #line 389 
  u32 rsp_status;
  #line 390 
  int r;
  #line 386 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 387 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 388 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 392 
  cif_mutex_lock_multi_rmw_mutex_of_wmi(& (priv->wmi)->multi_rmw_mutex);
  #line 395 
  (priv->wmi)->multi_rmw[(priv->wmi)->multi_rmw_idx].reg = __builtin_bswap32(reg_offset);
  #line 397 
  (priv->wmi)->multi_rmw[(priv->wmi)->multi_rmw_idx].set = __builtin_bswap32(set);
  #line 399 
  (priv->wmi)->multi_rmw[(priv->wmi)->multi_rmw_idx].clr = __builtin_bswap32(clr);
  #line 402 
  ((priv->wmi)->multi_rmw_idx) ++;
  #line 405 
  if ((priv->wmi)->multi_rmw_idx == 15U) {
    #line 406 
    r = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_RMW_CMDID,(u8 *)(& (priv->wmi)->multi_rmw),(priv->wmi)->multi_rmw_idx * 8U,(u8 *)(& rsp_status),4U,100U);
    #line 411 
    if ((long)(r != 0) != 0L) 
      #line 412 
      if ((common->debug_mask & 8192) != 0) 
                                            #line 412 
                                            ath_printk((char *)"\001",common,(char *)"REGISTER RMW FAILED, multi len: %d\n",(priv->wmi)->multi_rmw_idx);
    #line 416 
    (priv->wmi)->multi_rmw_idx = 0U;
  }
  #line 419 
  cif_mutex_unlock_multi_rmw_mutex_of_wmi(& (priv->wmi)->multi_rmw_mutex);
  #line 420 
  return;
}

#line 422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_reg_rmw_flush(void *hw_priv)
{
  #line 427 
  u32 rsp_status;
  #line 428 
  int r;
  #line 424 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 425 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 426 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 430 
  if ((int)test_bit(0L,& priv->fw_flags) != 0) 
                                               #line 431 
                                               return;
  #line 433 
  atomic_dec(& (priv->wmi)->m_rmw_cnt);
  #line 435 
  cif_mutex_lock_multi_rmw_mutex_of_wmi(& (priv->wmi)->multi_rmw_mutex);
  #line 437 
  if ((priv->wmi)->multi_rmw_idx != 0U) {
    #line 438 
    r = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_RMW_CMDID,(u8 *)(& (priv->wmi)->multi_rmw),(priv->wmi)->multi_rmw_idx * 12U,(u8 *)(& rsp_status),4U,100U);
    #line 443 
    if ((long)(r != 0) != 0L) 
      #line 444 
      if ((common->debug_mask & 8192) != 0) 
                                            #line 444 
                                            ath_printk((char *)"\001",common,(char *)"REGISTER RMW FAILED, multi len: %d\n",(priv->wmi)->multi_rmw_idx);
    #line 448 
    (priv->wmi)->multi_rmw_idx = 0U;
  }
  #line 451 
  cif_mutex_unlock_multi_rmw_mutex_of_wmi(& (priv->wmi)->multi_rmw_mutex);
  #line 452 
  return;
}

#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_enable_rmw_buffer(void *hw_priv)
{
  #line 456 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 457 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 458 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 460 
  if ((int)test_bit(0L,& priv->fw_flags) != 0) 
                                               #line 461 
                                               return;
  #line 463 
  atomic_inc_0(& (priv->wmi)->m_rmw_cnt);
  #line 464 
  return;
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_reg_rmw_single(void *hw_priv, u32 reg_offset, u32 set, u32 clr)
{
  #line 472 
  struct register_rmw buf;
  #line 472 
  struct register_rmw buf_ret;
  #line 473 
  int ret;
  #line 469 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 470 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 471 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 475 
  buf.reg = __builtin_bswap32(reg_offset);
  #line 476 
  buf.set = __builtin_bswap32(set);
  #line 477 
  buf.clr = __builtin_bswap32(clr);
  #line 479 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_REG_RMW_CMDID,(u8 *)(& buf),12U,(u8 *)(& buf_ret),12U,100U);
  #line 483 
  if ((long)(ret != 0) != 0L) 
    #line 484 
    if ((common->debug_mask & 8192) != 0) 
                                          #line 484 
                                          ath_printk((char *)"\001",common,(char *)"REGISTER RMW FAILED:(0x%04x, %d)\n",reg_offset,ret);
  #line 485 
  return;
}

#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static u32 ath9k_reg_rmw(void *hw_priv, u32 reg_offset, u32 set, u32 clr)
{
  #line 491 
  struct ath_hw *ah = (struct ath_hw *)hw_priv;
  #line 492 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 493 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)common->priv;
  #line 495 
  if ((int)test_bit(0L,& priv->fw_flags) != 0) {
    #line 496 
    u32 val;
    #line 498 
    val = (*(ah->reg_ops.read))((void *)ah,reg_offset);
    #line 499 
    val = ~ clr & val;
    #line 500 
    val |= set;
    #line 501 
    (*(ah->reg_ops.write))((void *)ah,val,reg_offset);
    #line 503 
    return 0U;
  }
  #line 506 
  if (atomic_read(& (priv->wmi)->m_rmw_cnt) != 0) 
                                                  #line 507 
                                                  ath9k_reg_rmw_buffer(hw_priv,reg_offset,set,clr); else 
                                                                    #line 509 
                                                                    ath9k_reg_rmw_single(hw_priv,reg_offset,set,clr);
  #line 511 
  return 0U;
}

#line 514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath_usb_read_cachesize(struct ath_common *common, int *csz)
{
  #line 516 
  *csz = 16;
  #line 517 
  return;
}

#line 519  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static bool ath_usb_eeprom_read(struct ath_common *common, u32 off, u16 *data)
{
  #line 526 
  unsigned int tmp;
  #line 532 
  unsigned int tmp_2;
  #line 525 
  unsigned int tmp_0;
  #line 532 
  unsigned int tmp_3;
  #line 521 
  struct ath_hw *ah = (struct ath_hw *)common->ah;
  #line 523 
  (*(ah->reg_ops.read))((void *)ah,(off << 2) + 8192U);
  #line 525 
  if (ah->hw_version.macVersion != 768U) {
    #line 526 
    if (ah->hw_version.macVersion > 447U) 
                                          #line 526 
                                          tmp = 16516U; else 
                                                             #line 526 
                                                             tmp = 16508U;
    #line 525 
    tmp_0 = tmp;
  }
  else 
       #line 525 
       tmp_0 = 16584U;
  #line 525 
  ;
  #line 525 
  if (! ath9k_hw_wait(ah,tmp_0,327680U,0U,100000U)) 
                                                    #line 530 
                                                    return (_Bool)0;
  #line 532 
  if (ah->hw_version.macVersion != 768U) {
    #line 532 
    if (ah->hw_version.macVersion > 447U) 
                                          #line 532 
                                          tmp_2 = 16516U; else 
                                                               #line 532 
                                                               tmp_2 = 16508U;
    #line 532 
    tmp_3 = tmp_2;
  }
  else 
       #line 532 
       tmp_3 = 16584U;
  #line 532 
  ;
  #line 532 
  *data = (unsigned short)(*(ah->reg_ops.read))((void *)ah,tmp_3);
  #line 535 
  return (_Bool)1;
}

#line 538  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static struct ath_bus_ops ath9k_usb_bus_ops = {.ath_bus_type = ATH_USB, .read_cachesize = & ath_usb_read_cachesize, .eeprom_read = & ath_usb_eeprom_read};
#line 544  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_init_queues(struct ath9k_htc_priv *priv)
{
  #line 547 
  int i;
  #line 546 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 549 
  i = 0;
  #line 549 
  while ((unsigned int)i <= 3U) {
    #line 550 
    priv->hwq_map[i] = -1;
    #line 549 
    i ++;
  }
  #line 552 
  priv->beacon.beaconq = (unsigned int)ath9k_hw_beaconq_setup(priv->ah);
  #line 553 
  if (priv->beacon.beaconq == 4294967295U) {
    #line 554 
    ath_printk((char *)"\001",common,(char *)"Unable to setup BEACON xmit queue\n");
    #line 555 
    goto err;
  }
  #line 558 
  priv->cabq = ath9k_htc_cabq_setup(priv);
  #line 559 
  if (priv->cabq == -1) {
    #line 560 
    ath_printk((char *)"\001",common,(char *)"Unable to setup CAB xmit queue\n");
    #line 561 
    goto err;
  }
  #line 564 
  if (! ath9k_htc_txq_setup(priv,2)) {
    #line 565 
    ath_printk((char *)"\001",common,(char *)"Unable to setup xmit queue for BE traffic\n");
    #line 566 
    goto err;
  }
  #line 569 
  if (! ath9k_htc_txq_setup(priv,3)) {
    #line 570 
    ath_printk((char *)"\001",common,(char *)"Unable to setup xmit queue for BK traffic\n");
    #line 571 
    goto err;
  }
  #line 573 
  if (! ath9k_htc_txq_setup(priv,1)) {
    #line 574 
    ath_printk((char *)"\001",common,(char *)"Unable to setup xmit queue for VI traffic\n");
    #line 575 
    goto err;
  }
  #line 577 
  if (! ath9k_htc_txq_setup(priv,0)) {
    #line 578 
    ath_printk((char *)"\001",common,(char *)"Unable to setup xmit queue for VO traffic\n");
    #line 579 
    goto err;
  }
  #line 582 
  return 0;
  #line 584 
  err: 
       #line 584 
  ;
  #line 585 
  return -22;
}

#line 588  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_init_misc(struct ath9k_htc_priv *priv)
{
  #line 590 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 592 
  eth_broadcast_addr((u8 *)(& common->bssidmask));
  #line 594 
  common->last_rssi = 127;
  #line 595 
  (priv->ah)->opmode = NL80211_IFTYPE_STATION;
  #line 597 
  priv->spec_priv.ah = priv->ah;
  #line 598 
  priv->spec_priv.spec_config.enabled = (_Bool)0;
  #line 599 
  priv->spec_priv.spec_config.short_repeat = (_Bool)1;
  #line 600 
  priv->spec_priv.spec_config.count = (unsigned char)8U;
  #line 601 
  priv->spec_priv.spec_config.endless = (_Bool)0;
  #line 602 
  priv->spec_priv.spec_config.period = (unsigned char)18U;
  #line 603 
  priv->spec_priv.spec_config.fft_period = (unsigned char)2U;
  #line 604 
  return;
}

#line 606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_init_priv(struct ath9k_htc_priv *priv, u16 devid, char *product, u32 drv_info)
{
  #line 611 
  struct ath_common *common;
  #line 612 
  int i;
  #line 610 
  struct ath_hw *ah = (struct ath_hw *)0;
  #line 612 
  int ret = 0;
  #line 612 
  int csz = 0;
  #line 614 
  ah = (struct ath_hw *)kzalloc_4(9592UL,3264U);
  #line 615 
  if (ah == (struct ath_hw *)0) 
                                #line 616 
                                return -12;
  #line 618 
  ah->dev = priv->dev;
  #line 619 
  ah->hw = priv->hw;
  #line 620 
  ah->hw_version.devid = devid;
  #line 621 
  ah->hw_version.usbdev = (enum ath_usb_dev)drv_info;
  #line 622 
  ah->ah_flags |= 1U;
  #line 623 
  ah->reg_ops.read = & ath9k_regread;
  #line 624 
  ah->reg_ops.multi_read = & ath9k_multi_regread;
  #line 625 
  ah->reg_ops.write = & ath9k_regwrite;
  #line 626 
  ah->reg_ops.enable_write_buffer = & ath9k_enable_regwrite_buffer;
  #line 627 
  ah->reg_ops.write_flush = & ath9k_regwrite_flush;
  #line 628 
  ah->reg_ops.enable_rmw_buffer = & ath9k_enable_rmw_buffer;
  #line 629 
  ah->reg_ops.rmw_flush = & ath9k_reg_rmw_flush;
  #line 630 
  ah->reg_ops.rmw = & ath9k_reg_rmw;
  #line 631 
  priv->ah = ah;
  #line 633 
  common = ath9k_hw_common(ah);
  #line 634 
  common->ops = & ah->reg_ops;
  #line 635 
  common->ps_ops = & ath9k_htc_ps_ops;
  #line 636 
  common->bus_ops = & ath9k_usb_bus_ops;
  #line 637 
  common->ah = (void *)ah;
  #line 638 
  common->hw = priv->hw;
  #line 639 
  common->priv = (void *)priv;
  #line 640 
  common->debug_mask = (int)ath9k_debug;
  #line 641 
  common->btcoex_enabled = (_Bool)(ath9k_htc_btcoex_enable == 1);
  #line 642 
  cif_set_bit_0(0L,& common->op_flags);
  #line 644 
  spinlock_check(& priv->beacon_lock);
  {
    #line 644 
    struct lock_class_key __key;
    #line 644 
    __raw_spin_lock_init(& priv->beacon_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&priv->beacon_lock)->rlock",& __key);
  }
  #line 645 
  spinlock_check(& priv->tx.tx_lock);
  {
    #line 645 
    struct lock_class_key __key_0;
    #line 645 
    __raw_spin_lock_init(& priv->tx.tx_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&priv->tx.tx_lock)->rlock",& __key_0);
  }
  {
    #line 646 
    struct lock_class_key __key_1;
    #line 646 
    __mutex_init(& priv->mutex,(char *)"&priv->mutex",& __key_1);
  }
  {
    #line 647 
    struct lock_class_key __key_2;
    #line 647 
    __mutex_init(& priv->htc_pm_lock,(char *)"&priv->htc_pm_lock",& __key_2);
  }
  #line 648 
  cif_tasklet_init_0(& priv->rx_tasklet,& ath9k_rx_tasklet,(unsigned long)priv);
  #line 650 
  cif_tasklet_init_0(& priv->tx_failed_tasklet,& ath9k_tx_failed_tasklet,(unsigned long)priv);
  {
    #line 652 
    struct lock_class_key __key_3;
    #line 652 
    __init_work(& priv->ani_work.work,0);
    #line 652 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 652 
    priv->ani_work.work.data = __constr_expr_41;
    #line 652 
    lockdep_init_map(& priv->ani_work.work.lockdep_map,(char *)"(work_completion)",& __key_3,0);
    #line 652 
    INIT_LIST_HEAD_3(& priv->ani_work.work.entry);
    #line 652 
    priv->ani_work.work.func = & ath9k_htc_ani_work;
  }
  {
    #line 652 
    struct lock_class_key __key_4;
    #line 652 
    init_timer_key(& priv->ani_work.timer,& delayed_work_timer_fn,2097152U,(char *)"&(&priv->ani_work)->timer",& __key_4);
  }
  {
    #line 653 
    struct lock_class_key __key_5;
    #line 653 
    __init_work(& priv->ps_work,0);
    #line 653 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 653 
    priv->ps_work.data = __constr_expr_42;
    #line 653 
    lockdep_init_map(& priv->ps_work.lockdep_map,(char *)"(work_completion)",& __key_5,0);
    #line 653 
    INIT_LIST_HEAD_3(& priv->ps_work.entry);
    #line 653 
    priv->ps_work.func = & ath9k_ps_work;
  }
  {
    #line 654 
    struct lock_class_key __key_6;
    #line 654 
    __init_work(& priv->fatal_work,0);
    #line 654 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 654 
    priv->fatal_work.data = __constr_expr_43;
    #line 654 
    lockdep_init_map(& priv->fatal_work.lockdep_map,(char *)"(work_completion)",& __key_6,0);
    #line 654 
    INIT_LIST_HEAD_3(& priv->fatal_work.entry);
    #line 654 
    priv->fatal_work.func = & ath9k_fatal_work;
  }
  {
    #line 655 
    struct lock_class_key __key_7;
    #line 655 
    init_timer_key(& priv->tx.cleanup_timer,& ath9k_htc_tx_cleanup_timer,0U,(char *)"(&priv->tx.cleanup_timer)",& __key_7);
  }
  #line 661 
  ath_read_cachesize(common,& csz);
  #line 662 
  common->cachelsz = (unsigned short)((int)((unsigned short)csz) << 2U);
  #line 664 
  ret = ath9k_hw_init(ah);
  #line 665 
  if (ret != 0) {
    #line 666 
    ath_printk((char *)"\001",common,(char *)"Unable to initialize hardware; initialization status: %d\n",ret);
    #line 669 
    goto err_hw;
  }
  #line 672 
  ret = ath9k_init_queues(priv);
  #line 673 
  if (ret != 0) 
                #line 674 
                goto err_queues;
  #line 676 
  i = 0;
  #line 676 
  while (i <= 1) {
    #line 677 
    priv->beacon.bslot[i] = (struct ieee80211_vif *)0;
    #line 676 
    i ++;
  }
  #line 678 
  priv->beacon.slottime = 9;
  #line 680 
  ath9k_cmn_init_channels_rates(common);
  #line 681 
  ath9k_cmn_init_crypto(ah);
  #line 682 
  ath9k_init_misc(priv);
  #line 683 
  ath9k_htc_init_btcoex(priv,product);
  #line 685 
  return 0;
  #line 687 
  err_queues: 
              #line 687 
  ;
  #line 688 
  ath9k_hw_deinit(ah);
  #line 689 
  err_hw: 
          #line 689 
  ;
  #line 691 
  kfree((void *)ah);
  #line 692 
  priv->ah = (struct ath_hw *)0;
  #line 694 
  return ret;
}

#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static struct ieee80211_iface_limit if_limits[2U] = {{.max = (unsigned short)2U, .types = (unsigned short)260U}, {.max = (unsigned short)2U, .types = (unsigned short)648U}};
#line 707  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static struct ieee80211_iface_combination if_comb = {.limits = (struct ieee80211_iface_limit *)(& if_limits), .num_different_channels = 1U, .max_interfaces = (unsigned short)2U, .n_limits = (unsigned char)2U};
#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_set_hw_capab(struct ath9k_htc_priv *priv, struct ieee80211_hw *hw)
{
  #line 719 
  struct base_eep_header *pBase;
  #line 717 
  struct ath_hw *ah = priv->ah;
  #line 718 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 721 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING);
  #line 722 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_MFP_CAPABLE);
  #line 723 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_REPORTS_TX_ACK_STATUS);
  #line 724 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_PS_NULLFUNC_STACK);
  #line 725 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS);
  #line 726 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_HAS_RATE_CONTROL);
  #line 727 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SPECTRUM_MGMT);
  #line 728 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  #line 729 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_AMPDU_AGGREGATION);
  #line 730 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP);
  #line 732 
  if (ath9k_ps_enable != 0) 
                            #line 733 
                            _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_PS);
  #line 735 
  (hw->wiphy)->interface_modes = (unsigned short)2958U;
  #line 744 
  (hw->wiphy)->iface_combinations = & if_comb;
  #line 745 
  (hw->wiphy)->n_iface_combinations = 1;
  #line 747 
  (hw->wiphy)->flags &= 4294967279U;
  #line 749 
  (hw->wiphy)->flags |= 10486016U;
  #line 753 
  (hw->wiphy)->flags |= 32768U;
  #line 755 
  hw->queues = (unsigned short)4U;
  #line 756 
  hw->max_listen_interval = (unsigned short)1U;
  #line 758 
  hw->vif_data_size = 24;
  #line 759 
  hw->sta_data_size = 128;
  #line 762 
  hw->extra_tx_headroom = 24U;
  #line 765 
  if (((priv->ah)->caps.hw_caps & 2048U) != 0U) 
                                                #line 766 
                                                (hw->wiphy)->bands[0] = & common->sbands[0];
  #line 768 
  if (((priv->ah)->caps.hw_caps & 4096U) != 0U) 
                                                #line 769 
                                                (hw->wiphy)->bands[1] = & common->sbands[1];
  #line 772 
  ath9k_cmn_reload_chainmask(ah);
  #line 774 
  pBase = ath9k_htc_get_eeprom_base(priv);
  #line 775 
  if (pBase != (struct base_eep_header *)0) {
    #line 776 
    (hw->wiphy)->available_antennas_rx = (unsigned int)pBase->rxMask;
    #line 777 
    (hw->wiphy)->available_antennas_tx = (unsigned int)pBase->txMask;
  }
  #line 780 
  SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& common->macaddr));
  #line 782 
  wiphy_ext_feature_set(hw->wiphy,(enum nl80211_ext_feature_index)NL80211_EXT_FEATURE_CQM_RSSI_LIST);
  #line 783 
  return;
}

#line 785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_init_firmware_version(struct ath9k_htc_priv *priv)
{
  #line 788 
  struct wmi_fw_version cmd_rsp;
  #line 789 
  int ret;
  #line 822 
  char *tmp_0;
  #line 787 
  struct ieee80211_hw *hw = priv->hw;
  #line 791 
  memset((void *)(& cmd_rsp),0,4UL);
  #line 793 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_GET_FW_VERSION,(u8 *)0U,0U,(u8 *)(& cmd_rsp),4U,500U);
  #line 794 
  if (ret != 0) 
                #line 795 
                return -22;
  #line 797 
  priv->fw_version_major = __builtin_bswap16((unsigned short)((int)cmd_rsp.major));
  #line 798 
  priv->fw_version_minor = __builtin_bswap16((unsigned short)((int)cmd_rsp.minor));
  #line 800 
  snprintf((char *)(& (hw->wiphy)->fw_version),32UL,(char *)"%d.%d",(int)priv->fw_version_major,(int)priv->fw_version_minor);
  #line 804 
  _dev_info(priv->dev,(char *)"ath9k_htc: FW Version: %d.%d\n",(int)priv->fw_version_major,(int)priv->fw_version_minor);
  #line 812 
  if ((unsigned int)priv->fw_version_major != 1U || (unsigned int)priv->fw_version_minor <= 2U) {
    #line 814 
    _dev_err(priv->dev,(char *)"ath9k_htc: Please upgrade to FW version %d.%d\n",1,3);
    #line 816 
    return -22;
  }
  #line 819 
  if ((unsigned int)priv->fw_version_major == 1U && (unsigned int)priv->fw_version_minor <= 3U) 
    #line 820 
    cif_set_bit_0(0L,& priv->fw_flags);
  #line 822 
  if ((int)test_bit(0L,& priv->fw_flags) != 0) 
                                               #line 822 
                                               tmp_0 = (char *)"Off"; else 
                                                                    #line 822 
                                                                    tmp_0 = (char *)"On";
  #line 822 
  ;
  #line 822 
  _dev_info(priv->dev,(char *)"FW RMW support: %s\n",tmp_0);
  #line 825 
  return 0;
}

#line 828  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_init_device(struct ath9k_htc_priv *priv, u16 devid, char *product, u32 drv_info)
{
  #line 832 
  struct ath_common *common;
  #line 833 
  struct ath_hw *ah;
  #line 835 
  struct ath_regulatory *reg;
  #line 836 
  char hw_name[64U];
  #line 831 
  struct ieee80211_hw *hw = priv->hw;
  #line 834 
  int error = 0;
  #line 839 
  error = ath9k_init_priv(priv,(unsigned short)((int)devid),product,drv_info);
  #line 840 
  if (error != 0) 
                  #line 841 
                  goto err_init;
  #line 843 
  ah = priv->ah;
  #line 844 
  common = ath9k_hw_common(ah);
  #line 845 
  ath9k_set_hw_capab(priv,hw);
  #line 847 
  error = ath9k_init_firmware_version(priv);
  #line 848 
  if (error != 0) 
                  #line 849 
                  goto err_fw;
  #line 852 
  error = ath_regd_init(& common->regulatory,(priv->hw)->wiphy,& ath9k_reg_notifier);
  #line 854 
  if (error != 0) 
                  #line 855 
                  goto err_regd;
  #line 857 
  reg = & common->regulatory;
  #line 860 
  error = ath9k_tx_init(priv);
  #line 861 
  if (error != 0) 
                  #line 862 
                  goto err_tx;
  #line 865 
  error = ath9k_rx_init(priv);
  #line 866 
  if (error != 0) 
                  #line 867 
                  goto err_rx;
  #line 869 
  ath9k_hw_disable(priv->ah);
  #line 872 
  priv->led_cdev.default_trigger = ieee80211_create_tpt_led_trigger(priv->hw,1U,(struct ieee80211_tpt_blink *)(& ath9k_htc_tpt_blink),10U);
  #line 878 
  error = ieee80211_register_hw(hw);
  #line 879 
  if (error != 0) 
                  #line 880 
                  goto err_register;
  #line 883 
  if (! ath_is_world_regd(reg)) {
    #line 884 
    error = regulatory_hint(hw->wiphy,(char *)(& reg->alpha2));
    #line 885 
    if (error != 0) 
                    #line 886 
                    goto err_world;
  }
  #line 889 
  error = ath9k_htc_init_debug(priv->ah);
  #line 890 
  if (error != 0) {
    #line 891 
    ath_printk((char *)"\001",common,(char *)"Unable to create debugfs files\n");
    #line 892 
    goto err_world;
  }
  #line 895 
  if ((common->debug_mask & 512) != 0) 
                                       #line 895 
                                       ath_printk((char *)"\001",common,(char *)"WMI:%d, BCN:%d, CAB:%d, UAPSD:%d, MGMT:%d, BE:%d, BK:%d, VI:%d, VO:%d\n",(int)priv->wmi_cmd_ep,(int)priv->beacon_ep,(int)priv->cab_ep,(int)priv->uapsd_ep,(int)priv->mgmt_ep,(int)priv->data_be_ep,(int)priv->data_bk_ep,(int)priv->data_vi_ep,(int)priv->data_vo_ep);
  #line 907 
  ath9k_hw_name(priv->ah,(char *)(& hw_name),64UL);
  #line 908 
  _dev_info(& (hw->wiphy)->dev,(char *)"%s\n",(char *)(& hw_name));
  #line 910 
  ath9k_init_leds(priv);
  #line 911 
  ath9k_start_rfkill_poll(priv);
  #line 913 
  return 0;
  #line 915 
  err_world: 
             #line 915 
  ;
  #line 916 
  ieee80211_unregister_hw(hw);
  #line 917 
  err_register: 
                #line 917 
  ;
  #line 918 
  ath9k_rx_cleanup(priv);
  #line 919 
  err_rx: 
          #line 919 
  ;
  #line 920 
  ath9k_tx_cleanup(priv);
  #line 921 
  err_tx: 
          #line 921 
  ;
  #line 923 
  err_regd: 
            #line 923 
  ;
  #line 925 
  err_fw: 
          #line 925 
  ;
  #line 926 
  ath9k_deinit_priv(priv);
  #line 927 
  err_init: 
            #line 927 
  ;
  #line 928 
  return error;
}

#line 931  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int ath9k_htc_probe_device(struct htc_target *htc_handle, struct device *dev, u16 devid, char *product, u32 drv_info)
{
  #line 934 
  struct ieee80211_hw *hw;
  #line 935 
  struct ath9k_htc_priv *priv;
  #line 936 
  int ret;
  #line 938 
  hw = cif_ieee80211_alloc_hw(4400UL,& ath9k_htc_ops);
  #line 939 
  if (hw == (struct ieee80211_hw *)0) 
                                      #line 940 
                                      return -12;
  #line 942 
  priv = (struct ath9k_htc_priv *)hw->priv;
  #line 943 
  priv->hw = hw;
  #line 944 
  priv->htc = htc_handle;
  #line 945 
  priv->dev = dev;
  #line 946 
  htc_handle->drv_priv = priv;
  #line 947 
  SET_IEEE80211_DEV(hw,priv->dev);
  #line 949 
  ret = ath9k_htc_wait_for_target(priv);
  #line 950 
  if (ret != 0) 
                #line 951 
                goto err_free;
  #line 953 
  priv->wmi = ath9k_init_wmi(priv);
  #line 954 
  if (priv->wmi == (struct wmi *)0) {
    #line 955 
    ret = -22;
    #line 956 
    goto err_free;
  }
  #line 959 
  ret = ath9k_init_htc_services(priv,(unsigned short)((int)devid),drv_info);
  #line 960 
  if (ret != 0) 
                #line 961 
                goto err_init;
  #line 963 
  ret = ath9k_init_device(priv,(unsigned short)((int)devid),product,drv_info);
  #line 964 
  if (ret != 0) 
                #line 965 
                goto err_init;
  #line 967 
  return 0;
  #line 969 
  err_init: 
            #line 969 
  ;
  #line 970 
  ath9k_deinit_wmi(priv);
  #line 971 
  err_free: 
            #line 971 
  ;
  #line 972 
  cif_ieee80211_free_hw(hw);
  #line 973 
  return ret;
}

#line 976  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
void ath9k_htc_disconnect_device(struct htc_target *htc_handle, bool hotunplug)
{
  #line 978 
  if (htc_handle->drv_priv != (struct ath9k_htc_priv *)0) {
    #line 981 
    if ((int)hotunplug != 0) 
                             #line 982 
                             ((htc_handle->drv_priv)->ah)->ah_flags |= 2U;
    #line 984 
    ath9k_deinit_device(htc_handle->drv_priv);
    #line 985 
    ath9k_deinit_wmi(htc_handle->drv_priv);
    #line 986 
    cif_ieee80211_free_hw((htc_handle->drv_priv)->hw);
  }
  #line 988 
  return;
}

#line 992  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
void ath9k_htc_suspend(struct htc_target *htc_handle)
{
  #line 994 
  ath9k_htc_setpower(htc_handle->drv_priv,(enum ath9k_power_mode)ATH9K_PM_FULL_SLEEP);
  #line 995 
  return;
}

#line 997  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
int ath9k_htc_resume(struct htc_target *htc_handle)
{
  #line 1000 
  int ret;
  #line 999 
  struct ath9k_htc_priv *priv = htc_handle->drv_priv;
  #line 1002 
  ret = ath9k_htc_wait_for_target(priv);
  #line 1003 
  if (ret != 0) 
                #line 1004 
                return ret;
  #line 1006 
  ret = ath9k_init_htc_services(priv,(unsigned short)((int)(priv->ah)->hw_version.devid),(unsigned int)(priv->ah)->hw_version.usbdev);
  #line 1008 
  ath9k_configure_leds(priv);
  #line 1010 
  return ret;
}

#line 1014  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static int ath9k_htc_init(void)
{
  #line 1016 
  if (ath9k_hif_usb_init() < 0) {
    #line 1017 
    printk((char *)"\001");
    #line 1018 
    return -19;
  }
  #line 1021 
  return 0;
}

#line 1025  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_init.c"
static void ath9k_htc_exit(void)
{
  #line 1027 
  ath9k_hif_usb_exit();
  #line 1028 
  printk((char *)"\001");
  #line 1029 
  return;
}

#line 96  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
#line 96 
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);
#line 97 
#line 97 
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
void emg_ath9k_htc_exit(void)
{
  #line 110 
  ath9k_htc_exit();
  #line 111 
  return;
}

#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
int emg_ath9k_htc_init(void)
{
  #line 114 
  return ath9k_htc_init();
}

#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_set_bit_0(long nr, unsigned long *addr)
{
  #line 135 
  ldv_set_bit(nr,addr);
  #line 136 
  return;
}

#line 146  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void INIT_LIST_HEAD_3(struct list_head *list)
{
  #line 149 
  ldv_init_list_head(list);
  #line 150 
  return;
}

#line 195  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void atomic_inc_0(atomic_t *v)
{
  #line 198 
  ldv_atomic_inc(v);
  #line 199 
  return;
}

#line 202  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void atomic_dec(atomic_t *v)
{
  #line 205 
  ldv_atomic_dec(v);
  #line 206 
  return;
}

#line 498  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void *kzalloc_4(size_t size, gfp_t flags)
{
  #line 501 
  return ldv_kzalloc(size,flags);
}

#line 811  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_mutex_lock_multi_write_mutex_of_wmi(struct mutex *lock)
{
  #line 814 
  ldv_mutex_model_lock(lock,(char *)"multi_write_mutex_of_wmi");
  #line 815 
  return;
}

#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_mutex_unlock_multi_write_mutex_of_wmi(struct mutex *lock)
{
  #line 821 
  ldv_mutex_model_unlock(lock,(char *)"multi_write_mutex_of_wmi");
  #line 822 
  return;
}

#line 825  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_mutex_lock_multi_rmw_mutex_of_wmi(struct mutex *lock)
{
  #line 828 
  ldv_mutex_model_lock(lock,(char *)"multi_rmw_mutex_of_wmi");
  #line 829 
  return;
}

#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_mutex_unlock_multi_rmw_mutex_of_wmi(struct mutex *lock)
{
  #line 835 
  ldv_mutex_model_unlock(lock,(char *)"multi_rmw_mutex_of_wmi");
  #line 836 
  return;
}

#line 839  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_tasklet_init_0(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data)
{
  #line 843 
  emg_tasklet_init(t,func,data);
  #line 844 
  return;
}

#line 847  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops)
{
  #line 851 
  return emg_ieee80211_alloc_hw(priv_data_len,ops);
}

#line 855  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_init.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw)
{
  #line 859 
  emg_ieee80211_free_hw(hw);
  #line 860 
  return;
}

#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static unsigned long ffz(unsigned long word)
{
  #line 249 
  ldv_inline_asm();
  #line 252 
  return word;
}

#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 244  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_set_bit_1(long nr, unsigned long *addr);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-atomic.h"
#line 251  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 258  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void INIT_LIST_HEAD_4(struct list_head *list);
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_bh_3(spinlock_t *lock)
{
  #line 343 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 344 
  return;
}

#line 345 
#line 967  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_3(spinlock_t *lock);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 985  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv_0(spinlock_t *lock);
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_bh_3(spinlock_t *lock)
{
  #line 383 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_25.rlock);
  #line 384 
  return;
}

#line 385 
#line 976  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_3(spinlock_t *lock);
#line 385  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 994  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv_0(spinlock_t *lock);
#line 26 
#line 923 
static void cif_mutex_lock_htc_pm_lock_of_ath9k_htc_priv(struct mutex *lock);
#line 26 
#line 937 
static void cif_mutex_lock_mutex_of_ath9k_htc_priv(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 930  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_mutex_unlock_htc_pm_lock_of_ath9k_htc_priv(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 960  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_mutex_unlock_mutex_of_ath9k_htc_priv(struct mutex *lock);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 291 
unsigned int jiffies_to_msecs(unsigned long);
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 952  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static int cif_mod_timer_0(struct timer_list *timer, unsigned long expires);
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 944  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static int cif_del_timer_sync(struct timer_list *timer);
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 781  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static bool cif_schedule_work(struct work_struct *work);
#line 5438  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 5438 
void ieee80211_stop_tx_ba_cb_irqsafe(struct ieee80211_vif *, u8 *, u16);
#line 6058  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static bool conf_is_ht20(struct ieee80211_conf *conf)
{
  #line 6060 
  return (_Bool)(conf->chandef.width == (unsigned int)NL80211_CHAN_WIDTH_20);
}

#line 6078  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static bool conf_is_ht40(struct ieee80211_conf *conf)
{
  #line 6080 
  return (_Bool)(conf->chandef.width == (unsigned int)NL80211_CHAN_WIDTH_40);
}

#line 199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath.h"
#line 199 
void ath_hw_setbssidmask(struct ath_common *);
#line 200 
#line 200 
void ath_key_delete(struct ath_common *, struct ieee80211_key_conf *);
#line 201 
#line 201 
int ath_key_config(struct ath_common *, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *);
#line 735  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/mac.h"
#line 735 
bool ath9k_hw_setrxabort(struct ath_hw *, bool);
#line 739 
#line 739 
bool ath9k_hw_stopdmarecv(struct ath_hw *, bool *);
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/calib.h"
#line 110 
bool ath9k_hw_reset_calvalid(struct ath_hw *);
#line 1024  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw.h"
#line 1024 
int ath9k_hw_reset(struct ath_hw *, struct ath9k_channel *, struct ath9k_hw_cal_data *, bool);
#line 1054 
#line 1054 
bool ath9k_hw_phy_disable(struct ath_hw *);
#line 1057 
#line 1057 
void ath9k_hw_setopmode(struct ath_hw *);
#line 1059 
#line 1059 
void ath9k_hw_write_associd(struct ath_hw *);
#line 1061 
#line 1061 
u64 ath9k_hw_gettsf64(struct ath_hw *);
#line 1062 
#line 1062 
void ath9k_hw_settsf64(struct ath_hw *, u64);
#line 1065 
#line 1065 
void ath9k_hw_set_tsfadjust(struct ath_hw *, bool);
#line 1066 
#line 1066 
void ath9k_hw_init_global_settings(struct ath_hw *);
#line 1075 
#line 1075 
bool ath9k_hw_setpower(struct ath_hw *, enum ath9k_power_mode);
#line 1149 
#line 1149 
void ath9k_hw_ani_monitor(struct ath_hw *, struct ath9k_channel *);
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/hw-ops.h"
__inline static int ath9k_hw_calibrate(struct ath_hw *ah, struct ath9k_channel *chan, u8 rxchainmask, bool longcal)
{
  #line 48 
  return (*(ath9k_hw_ops(ah)->calibrate))(ah,chan,
                                         (unsigned char)((int)rxchainmask),
                                         (_Bool)((bool)((int)longcal) != 0));
}

#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common-spectral.h"
#line 175 
void ath9k_cmn_spectral_scan_trigger(struct ath_common *, struct ath_spec_scan_priv *);
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/common.h"
#line 84 
struct ath9k_channel *ath9k_cmn_get_channel(struct ieee80211_hw *, struct ath_hw *, struct cfg80211_chan_def *);
#line 90 
#line 90 
void ath9k_cmn_update_txpow(struct ath_hw *, u16, u16, u16 *);
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_start_ani(struct ath9k_htc_priv *priv);
#line 568  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc.h"
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_stop_ani(struct ath9k_htc_priv *priv);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static enum htc_phymode ath9k_htc_get_curmode(struct ath9k_htc_priv *priv, struct ath9k_channel *ichan)
{
  #line 27 
  if (((unsigned long)ichan->channelFlags & 1UL) != 0UL) 
                                                         #line 28 
                                                         return HTC_MODE_11NA;
  #line 30 
  return HTC_MODE_11NG;
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
bool ath9k_htc_setpower(struct ath9k_htc_priv *priv, enum ath9k_power_mode mode)
{
  #line 36 
  bool ret;
  #line 38 
  cif_mutex_lock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  #line 39 
  ret = ath9k_hw_setpower(priv->ah,mode);
  #line 40 
  cif_mutex_unlock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  #line 42 
  return ret;
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_ps_wakeup(struct ath9k_htc_priv *priv)
{
  #line 47 
  cif_mutex_lock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  #line 48 
  (priv->ps_usecount) ++;
  #line 48 
  if (priv->ps_usecount != 1UL) 
                                #line 49 
                                goto unlock;
  #line 50 
  ath9k_hw_setpower(priv->ah,(enum ath9k_power_mode)ATH9K_PM_AWAKE);
  #line 52 
  unlock: 
          #line 52 
  ;
  #line 53 
  cif_mutex_unlock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  #line 54 
  return;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_ps_restore(struct ath9k_htc_priv *priv)
{
  #line 58 
  bool reset;
  #line 60 
  cif_mutex_lock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  #line 61 
  (priv->ps_usecount) --;
  #line 61 
  if (priv->ps_usecount != 0UL) 
                                #line 62 
                                goto unlock;
  #line 64 
  if ((int)priv->ps_idle != 0) {
    #line 65 
    ath9k_hw_setrxabort(priv->ah,(_Bool)1);
    #line 66 
    ath9k_hw_stopdmarecv(priv->ah,& reset);
    #line 67 
    ath9k_hw_setpower(priv->ah,(enum ath9k_power_mode)ATH9K_PM_FULL_SLEEP);
  }
  else 
    #line 68 
    if ((int)priv->ps_enabled != 0) 
                                    #line 69 
                                    ath9k_hw_setpower(priv->ah,(enum ath9k_power_mode)ATH9K_PM_NETWORK_SLEEP);
  #line 72 
  unlock: 
          #line 72 
  ;
  #line 73 
  cif_mutex_unlock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  #line 74 
  return;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_ps_work(struct work_struct *work)
{
  #line 79 
  void *__mptr;
  #line 79 
  __mptr = (void *)work;
  #line 78 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709549264U));
  #line 81 
  ath9k_htc_setpower(priv,(enum ath9k_power_mode)ATH9K_PM_AWAKE);
  #line 88 
  ath9k_htc_setpower(priv,(enum ath9k_power_mode)ATH9K_PM_NETWORK_SLEEP);
  #line 89 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_vif_iter(void *data, u8 *mac, struct ieee80211_vif *vif)
{
  #line 93 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)data;
  #line 94 
  struct ieee80211_bss_conf *bss_conf = & vif->bss_conf;
  #line 96 
  if ((vif->type == (unsigned int)NL80211_IFTYPE_AP || vif->type == (unsigned int)NL80211_IFTYPE_MESH_POINT) && (int)bss_conf->enable_beacon != 0) {
    #line 99 
    priv->reconfig_beacon = (_Bool)1;
    #line 100 
    priv->rearm_ani = (_Bool)1;
  }
  #line 103 
  if ((int)bss_conf->assoc != 0) {
    #line 104 
    priv->rearm_ani = (_Bool)1;
    #line 105 
    priv->reconfig_beacon = (_Bool)1;
  }
  #line 107 
  return;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_vif_reconfig(struct ath9k_htc_priv *priv)
{
  #line 111 
  priv->rearm_ani = (_Bool)0;
  #line 112 
  priv->reconfig_beacon = (_Bool)0;
  #line 114 
  ieee80211_iterate_active_interfaces_atomic(priv->hw,1U,& ath9k_htc_vif_iter,(void *)priv);
  #line 117 
  if ((int)priv->rearm_ani != 0) 
                                 #line 118 
                                 ath9k_htc_start_ani(priv);
  #line 120 
  if ((int)priv->reconfig_beacon != 0) {
    #line 121 
    ath9k_htc_ps_wakeup(priv);
    #line 122 
    ath9k_htc_beacon_reconfig(priv);
    #line 123 
    ath9k_htc_ps_restore(priv);
  }
  #line 125 
  return;
}

#line 127  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_bssid_iter(void *data, u8 *mac, struct ieee80211_vif *vif)
{
  #line 130 
  int i;
  #line 129 
  struct ath9k_vif_iter_data *iter_data = (struct ath9k_vif_iter_data *)data;
  #line 132 
  if (iter_data->hw_macaddr != (u8 *)0U) {
    #line 133 
    i = 0;
    #line 133 
    while (i <= 5) {
      #line 134 
      iter_data->mask[i] = (unsigned char)((int)iter_data->mask[i] & ~ ((int)*(iter_data->hw_macaddr + (unsigned long)i) ^ (int)*(mac + (unsigned long)i)));
      #line 133 
      i ++;
    }
  }
  else 
       #line 136 
       iter_data->hw_macaddr = mac;
  #line 137 
  return;
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_set_mac_bssid_mask(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif)
{
  #line 144 
  struct ath9k_vif_iter_data iter_data;
  #line 143 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 151 
  iter_data.hw_macaddr = (u8 *)0U;
  #line 152 
  eth_broadcast_addr((u8 *)(& iter_data.mask));
  #line 154 
  if (vif != (struct ieee80211_vif *)0) 
                                        #line 155 
                                        ath9k_htc_bssid_iter((void *)(& iter_data),(u8 *)(& vif->addr),vif);
  #line 158 
  ieee80211_iterate_active_interfaces_atomic(priv->hw,1U,& ath9k_htc_bssid_iter,(void *)(& iter_data));
  #line 162 
  memcpy((void *)(& common->bssidmask),(void *)(& iter_data.mask),6UL);
  #line 164 
  if (iter_data.hw_macaddr != (u8 *)0U) 
                                        #line 165 
                                        memcpy((void *)(& common->macaddr),(void *)iter_data.hw_macaddr,6UL);
  #line 167 
  ath_hw_setbssidmask(common);
  #line 168 
  return;
}

#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_set_opmode(struct ath9k_htc_priv *priv)
{
  #line 172 
  if ((unsigned int)priv->num_ibss_vif != 0U) 
                                              #line 173 
                                              (priv->ah)->opmode = NL80211_IFTYPE_ADHOC;
  else 
    #line 174 
    if ((unsigned int)priv->num_ap_vif != 0U) 
                                              #line 175 
                                              (priv->ah)->opmode = NL80211_IFTYPE_AP;
    else 
      #line 176 
      if ((unsigned int)priv->num_mbss_vif != 0U) 
                                                  #line 177 
                                                  (priv->ah)->opmode = NL80211_IFTYPE_MESH_POINT; else 
                                                                    #line 179 
                                                                    (priv->ah)->opmode = NL80211_IFTYPE_STATION;
  #line 181 
  ath9k_hw_setopmode(priv->ah);
  #line 182 
  return;
}

#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_reset(struct ath9k_htc_priv *priv)
{
  #line 190 
  enum htc_phymode mode;
  #line 191 
  __be16 htc_mode;
  #line 192 
  u8 cmd_rsp;
  #line 193 
  int ret;
  #line 186 
  struct ath_hw *ah = priv->ah;
  #line 187 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 188 
  struct ieee80211_channel *channel = (priv->hw)->conf.chandef.chan;
  #line 189 
  struct ath9k_hw_cal_data *caldata = (struct ath9k_hw_cal_data *)0;
  #line 195 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 196 
  ath9k_htc_ps_wakeup(priv);
  #line 198 
  ath9k_htc_stop_ani(priv);
  #line 199 
  ieee80211_stop_queues(priv->hw);
  #line 201 
  cif_del_timer_sync(& priv->tx.cleanup_timer);
  #line 202 
  ath9k_htc_tx_drain(priv);
  #line 204 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DISABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 205 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DRAIN_TXQ_ALL_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 206 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_STOP_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 208 
  ath9k_wmi_event_drain(priv);
  #line 210 
  caldata = & priv->caldata;
  #line 211 
  ret = ath9k_hw_reset(ah,ah->curchan,caldata,(_Bool)0);
  #line 212 
  if (ret != 0) 
                #line 213 
                ath_printk((char *)"\001",common,(char *)"Unable to reset device (%u Mhz) reset status %d\n",channel->center_freq,ret);
  #line 218 
  ath9k_cmn_update_txpow(ah,(unsigned short)((int)priv->curtxpow),(unsigned short)((int)priv->txpowlimit),& priv->curtxpow);
  #line 221 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_START_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 222 
  ath9k_host_rx_init(priv);
  #line 224 
  mode = ath9k_htc_get_curmode(priv,ah->curchan);
  #line 225 
  htc_mode = __builtin_bswap16((unsigned short)((int)((unsigned short)mode)));
  #line 226 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_SET_MODE_CMDID,(u8 *)(& htc_mode),2U,& cmd_rsp,1U,500U);
  #line 228 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_ENABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 229 
  htc_start(priv->htc);
  #line 230 
  ath9k_htc_vif_reconfig(priv);
  #line 231 
  ieee80211_wake_queues(priv->hw);
  #line 233 
  ;
  #line 233 
  ;
  #line 233 
  cif_mod_timer_0(& priv->tx.cleanup_timer,msecs_to_jiffies(50U) + jiffies);
  #line 236 
  ath9k_htc_ps_restore(priv);
  #line 237 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 238 
  return;
}

#line 240  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_set_channel(struct ath9k_htc_priv *priv, struct ieee80211_hw *hw, struct ath9k_channel *hchan)
{
  #line 247 
  bool fastcc;
  #line 249 
  struct ath9k_hw_cal_data *caldata;
  #line 250 
  enum htc_phymode mode;
  #line 251 
  __be16 htc_mode;
  #line 252 
  u8 cmd_rsp;
  #line 253 
  int ret;
  #line 244 
  struct ath_hw *ah = priv->ah;
  #line 245 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 246 
  struct ieee80211_conf *conf = & (common->hw)->conf;
  #line 248 
  struct ieee80211_channel *channel = hw->conf.chandef.chan;
  #line 255 
  if ((int)test_bit(0L,& common->op_flags) != 0) 
                                                 #line 256 
                                                 return -5;
  #line 258 
  fastcc = (_Bool)((hw->conf.flags & 8U) != 0U);
  #line 260 
  ath9k_htc_ps_wakeup(priv);
  #line 262 
  ath9k_htc_stop_ani(priv);
  #line 263 
  cif_del_timer_sync(& priv->tx.cleanup_timer);
  #line 264 
  ath9k_htc_tx_drain(priv);
  #line 266 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DISABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 267 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DRAIN_TXQ_ALL_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 268 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_STOP_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 270 
  ath9k_wmi_event_drain(priv);
  #line 272 
  if ((common->debug_mask & 512) != 0) {
    #line 272 
    ;
    #line 272 
    ;
    #line 272 
    ;
    #line 272 
    ;
    #line 272 
    ath_printk((char *)"\001",common,(char *)"(%u MHz) -> (%u MHz), HT: %d, HT40: %d fastcc: %d\n",(int)((priv->ah)->curchan)->channel,channel->center_freq,(int)conf_is_ht(conf),(int)conf_is_ht40(conf),(int)fastcc);
  }
  #line 277 
  if (fastcc) 
              #line 277 
              caldata = (struct ath9k_hw_cal_data *)0; else 
                                                            #line 277 
                                                            caldata = & priv->caldata;
  #line 278 
  ret = ath9k_hw_reset(ah,hchan,caldata,(_Bool)((bool)((int)fastcc) != 0));
  #line 279 
  if (ret != 0) {
    #line 280 
    ath_printk((char *)"\001",common,(char *)"Unable to reset channel (%u Mhz) reset status %d\n",channel->center_freq,ret);
    #line 283 
    goto err;
  }
  #line 286 
  ath9k_cmn_update_txpow(ah,(unsigned short)((int)priv->curtxpow),(unsigned short)((int)priv->txpowlimit),& priv->curtxpow);
  #line 289 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_START_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 290 
  if (ret != 0) 
                #line 291 
                goto err;
  #line 293 
  ath9k_host_rx_init(priv);
  #line 295 
  mode = ath9k_htc_get_curmode(priv,hchan);
  #line 296 
  htc_mode = __builtin_bswap16((unsigned short)((int)((unsigned short)mode)));
  #line 297 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_SET_MODE_CMDID,(u8 *)(& htc_mode),2U,& cmd_rsp,1U,500U);
  #line 298 
  if (ret != 0) 
                #line 299 
                goto err;
  #line 301 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_ENABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 302 
  if (ret != 0) 
                #line 303 
                goto err;
  #line 305 
  htc_start(priv->htc);
  #line 307 
  if (! test_bit(5L,& common->op_flags)) 
    #line 307 
    if ((hw->conf.flags & 8U) == 0U) 
                                     #line 309 
                                     ath9k_htc_vif_reconfig(priv);
  #line 311 
  ;
  #line 311 
  ;
  #line 311 
  cif_mod_timer_0(& priv->tx.cleanup_timer,msecs_to_jiffies(50U) + jiffies);
  #line 315 
  if ((int)test_bit(5L,& common->op_flags) != 0) 
    #line 315 
    if (priv->spec_priv.spectral_mode == (unsigned int)SPECTRAL_CHANSCAN) 
      #line 317 
      ath9k_cmn_spectral_scan_trigger(common,& priv->spec_priv);
  #line 318 
  err: 
       #line 318 
  ;
  #line 319 
  ath9k_htc_ps_restore(priv);
  #line 320 
  return ret;
}

#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void __ath9k_htc_remove_monitor_interface(struct ath9k_htc_priv *priv)
{
  #line 333 
  struct ath9k_htc_target_vif hvif;
  #line 335 
  u8 cmd_rsp;
  #line 332 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 334 
  int ret = 0;
  #line 337 
  memset((void *)(& hvif),0,12UL);
  #line 338 
  memcpy((void *)(& hvif.myaddr),(void *)(& common->macaddr),6UL);
  #line 339 
  hvif.index = priv->mon_vif_idx;
  #line 340 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_VAP_REMOVE_CMDID,(u8 *)(& hvif),12U,& cmd_rsp,1U,500U);
  #line 341 
  if (ret != 0) 
                #line 342 
                ath_printk((char *)"\001",common,(char *)"Unable to remove monitor interface at idx: %d\n",(int)priv->mon_vif_idx);
  #line 346 
  priv->nvifs = (u16)((int)priv->nvifs - 1);
  #line 347 
  priv->vif_slot = (unsigned char)((int)priv->vif_slot & ~ (1 << (int)priv->mon_vif_idx));
  #line 348 
  return;
}

#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_add_monitor_interface(struct ath9k_htc_priv *priv)
{
  #line 353 
  struct ath9k_htc_target_vif hvif;
  #line 354 
  struct ath9k_htc_target_sta tsta;
  #line 355 
  int sta_idx;
  #line 356 
  u8 cmd_rsp;
  #line 352 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 355 
  int ret = 0;
  #line 358 
  if ((unsigned int)priv->nvifs > 1U || (unsigned int)priv->nstations > 7U) {
    #line 360 
    ret = -105;
    #line 361 
    goto err_vif;
  }
  #line 364 
  sta_idx = (int)ffz((unsigned long)priv->sta_slot);
  #line 365 
  if ((unsigned int)sta_idx > 8U) {
    #line 366 
    ret = -105;
    #line 367 
    goto err_vif;
  }
  #line 373 
  memset((void *)(& hvif),0,12UL);
  #line 374 
  memcpy((void *)(& hvif.myaddr),(void *)(& common->macaddr),6UL);
  #line 376 
  hvif.opmode = (unsigned char)8U;
  #line 377 
  hvif.index = (unsigned char)ffz((unsigned long)priv->vif_slot);
  #line 379 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_VAP_CREATE_CMDID,(u8 *)(& hvif),12U,& cmd_rsp,1U,500U);
  #line 380 
  if (ret != 0) 
                #line 381 
                goto err_vif;
  #line 387 
  priv->mon_vif_idx = hvif.index;
  #line 388 
  priv->vif_slot = (unsigned char)((int)priv->vif_slot | (1 << (int)hvif.index));
  #line 394 
  if ((unsigned int)priv->nvifs == 0U) 
                                       #line 395 
                                       (priv->ah)->opmode = NL80211_IFTYPE_MONITOR;
  #line 397 
  priv->nvifs = (u16)((int)priv->nvifs + 1);
  #line 402 
  memset((void *)(& tsta),0,22UL);
  #line 404 
  memcpy((void *)(& tsta.macaddr),(void *)(& common->macaddr),6UL);
  #line 406 
  tsta.is_vif_sta = (unsigned char)1U;
  #line 407 
  tsta.sta_index = (unsigned char)sta_idx;
  #line 408 
  tsta.vif_index = hvif.index;
  #line 409 
  tsta.maxampdu = (unsigned short)65535U;
  #line 411 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_NODE_CREATE_CMDID,(u8 *)(& tsta),22U,& cmd_rsp,1U,500U);
  #line 412 
  if (ret != 0) {
    #line 413 
    ath_printk((char *)"\001",common,(char *)"Unable to add station entry for monitor mode\n");
    #line 414 
    goto err_sta;
  }
  #line 417 
  priv->sta_slot = (unsigned char)((int)priv->sta_slot | (1 << sta_idx));
  #line 418 
  priv->nstations = (u16)((int)priv->nstations + 1);
  #line 419 
  priv->vif_sta_pos[(int)priv->mon_vif_idx] = (unsigned char)sta_idx;
  #line 420 
  (priv->ah)->is_monitoring = (_Bool)1;
  #line 422 
  if ((common->debug_mask & 512) != 0) 
                                       #line 422 
                                       ath_printk((char *)"\001",common,(char *)"Attached a monitor interface at idx: %d, sta idx: %d\n",(int)priv->mon_vif_idx,sta_idx);
  #line 426 
  return 0;
  #line 428 
  err_sta: 
           #line 428 
  ;
  #line 432 
  __ath9k_htc_remove_monitor_interface(priv);
  #line 433 
  err_vif: 
           #line 433 
  ;
  #line 434 
  if ((common->debug_mask & 1024) != 0) 
                                        #line 434 
                                        ath_printk((char *)"\001",common,(char *)"Unable to attach a monitor interface\n");
  #line 436 
  return ret;
}

#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_remove_monitor_interface(struct ath9k_htc_priv *priv)
{
  #line 443 
  u8 cmd_rsp;
  #line 443 
  u8 sta_idx;
  #line 441 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 442 
  int ret = 0;
  #line 445 
  __ath9k_htc_remove_monitor_interface(priv);
  #line 447 
  sta_idx = priv->vif_sta_pos[(int)priv->mon_vif_idx];
  #line 449 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_NODE_REMOVE_CMDID,& sta_idx,1U,& cmd_rsp,1U,500U);
  #line 450 
  if (ret != 0) {
    #line 451 
    ath_printk((char *)"\001",common,(char *)"Unable to remove station entry for monitor mode\n");
    #line 452 
    return ret;
  }
  #line 455 
  priv->sta_slot = (unsigned char)((int)priv->sta_slot & ~ (1 << (int)sta_idx));
  #line 456 
  priv->nstations = (u16)((int)priv->nstations - 1);
  #line 457 
  (priv->ah)->is_monitoring = (_Bool)0;
  #line 459 
  if ((common->debug_mask & 512) != 0) 
                                       #line 459 
                                       ath_printk((char *)"\001",common,(char *)"Removed a monitor interface at idx: %d, sta idx: %d\n",(int)priv->mon_vif_idx,(int)sta_idx);
  #line 463 
  return 0;
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_add_station(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  #line 471 
  struct ath9k_htc_target_sta tsta;
  #line 473 
  struct ath9k_htc_sta *ista;
  #line 474 
  int ret;
  #line 474 
  int sta_idx;
  #line 475 
  u8 cmd_rsp;
  #line 476 
  u16 maxampdu;
  #line 470 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 472 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 478 
  if ((unsigned int)priv->nstations > 7U) 
                                          #line 479 
                                          return -105;
  #line 481 
  sta_idx = (int)ffz((unsigned long)priv->sta_slot);
  #line 482 
  if ((unsigned int)sta_idx > 8U) 
                                  #line 483 
                                  return -105;
  #line 485 
  memset((void *)(& tsta),0,22UL);
  #line 487 
  if (sta != (struct ieee80211_sta *)0) {
    #line 488 
    ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
    #line 489 
    memcpy((void *)(& tsta.macaddr),(void *)(& sta->addr),6UL);
    #line 490 
    memcpy((void *)(& tsta.bssid),(void *)(& common->curbssid),6UL);
    #line 491 
    ista->index = (unsigned char)sta_idx;
    #line 492 
    tsta.is_vif_sta = (unsigned char)0U;
    #line 493 
    maxampdu = (unsigned short)(1 << ((int)sta->ht_cap.ampdu_factor + 13));
    #line 495 
    tsta.maxampdu = __builtin_bswap16((unsigned short)((int)maxampdu));
  }
  else {
    #line 497 
    memcpy((void *)(& tsta.macaddr),(void *)(& vif->addr),6UL);
    #line 498 
    tsta.is_vif_sta = (unsigned char)1U;
    #line 499 
    tsta.maxampdu = (unsigned short)65535U;
  }
  #line 502 
  tsta.sta_index = (unsigned char)sta_idx;
  #line 503 
  tsta.vif_index = avp->index;
  #line 505 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_NODE_CREATE_CMDID,(u8 *)(& tsta),22U,& cmd_rsp,1U,500U);
  #line 506 
  if (ret != 0) {
    #line 507 
    if (sta != (struct ieee80211_sta *)0) 
                                          #line 508 
                                          ath_printk((char *)"\001",common,(char *)"Unable to add station entry for: %pM\n",(u8 *)(& sta->addr));
    #line 511 
    return ret;
  }
  #line 514 
  if (sta != (struct ieee80211_sta *)0) {
    #line 515 
    if ((common->debug_mask & 512) != 0) 
                                         #line 515 
                                         ath_printk((char *)"\001",common,(char *)"Added a station entry for: %pM (idx: %d)\n",(u8 *)(& sta->addr),(int)tsta.sta_index);
  }
  else 
    #line 519 
    if ((common->debug_mask & 512) != 0) 
                                         #line 519 
                                         ath_printk((char *)"\001",common,(char *)"Added a station entry for VIF %d (idx: %d)\n",(int)avp->index,(int)tsta.sta_index);
  #line 524 
  priv->sta_slot = (unsigned char)((int)priv->sta_slot | (1 << sta_idx));
  #line 525 
  priv->nstations = (u16)((int)priv->nstations + 1);
  #line 526 
  if (sta == (struct ieee80211_sta *)0) 
                                        #line 527 
                                        priv->vif_sta_pos[(int)avp->index] = (unsigned char)sta_idx;
  #line 529 
  return 0;
}

#line 532  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_remove_station(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  #line 538 
  struct ath9k_htc_sta *ista;
  #line 539 
  int ret;
  #line 540 
  u8 cmd_rsp;
  #line 540 
  u8 sta_idx;
  #line 536 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 537 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 542 
  if (sta != (struct ieee80211_sta *)0) {
    #line 543 
    ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
    #line 544 
    sta_idx = ista->index;
  }
  else 
       #line 546 
       sta_idx = priv->vif_sta_pos[(int)avp->index];
  #line 549 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_NODE_REMOVE_CMDID,& sta_idx,1U,& cmd_rsp,1U,500U);
  #line 550 
  if (ret != 0) {
    #line 551 
    if (sta != (struct ieee80211_sta *)0) 
                                          #line 552 
                                          ath_printk((char *)"\001",common,(char *)"Unable to remove station entry for: %pM\n",(u8 *)(& sta->addr));
    #line 555 
    return ret;
  }
  #line 558 
  if (sta != (struct ieee80211_sta *)0) {
    #line 559 
    if ((common->debug_mask & 512) != 0) 
                                         #line 559 
                                         ath_printk((char *)"\001",common,(char *)"Removed a station entry for: %pM (idx: %d)\n",(u8 *)(& sta->addr),(int)sta_idx);
  }
  else 
    #line 563 
    if ((common->debug_mask & 512) != 0) 
                                         #line 563 
                                         ath_printk((char *)"\001",common,(char *)"Removed a station entry for VIF %d (idx: %d)\n",(int)avp->index,(int)sta_idx);
  #line 568 
  priv->sta_slot = (unsigned char)((int)priv->sta_slot & ~ (1 << (int)sta_idx));
  #line 569 
  priv->nstations = (u16)((int)priv->nstations - 1);
  #line 571 
  return 0;
}

#line 574  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
int ath9k_htc_update_cap_target(struct ath9k_htc_priv *priv, u8 enable_coex)
{
  #line 577 
  struct ath9k_htc_cap_target tcap;
  #line 578 
  int ret;
  #line 579 
  u8 cmd_rsp;
  #line 581 
  memset((void *)(& tcap),0,8UL);
  #line 583 
  tcap.ampdu_limit = 4294901760U;
  #line 584 
  tcap.ampdu_subframes = (unsigned char)255U;
  #line 585 
  tcap.enable_coex = enable_coex;
  #line 586 
  tcap.tx_chainmask = (priv->ah)->caps.tx_chainmask;
  #line 588 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_TARGET_IC_UPDATE_CMDID,(u8 *)(& tcap),8U,& cmd_rsp,1U,500U);
  #line 590 
  return ret;
}

#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_setup_rate(struct ath9k_htc_priv *priv, struct ieee80211_sta *sta, struct ath9k_htc_target_rate *trate)
{
  #line 598 
  struct ieee80211_supported_band *sband;
  #line 600 
  int i;
  #line 600 
  int j;
  #line 597 
  struct ath9k_htc_sta *ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
  #line 599 
  u32 caps = 0U;
  #line 602 
  sband = ((priv->hw)->wiphy)->bands[(unsigned int)((priv->hw)->conf.chandef.chan)->band];
  #line 604 
  i = 0;
  #line 604 
  j = 0;
  #line 604 
  while (sband->n_bitrates > i) {
    #line 605 
    if ((((unsigned long)sta->supp_rates[(unsigned int)sband->band] >> i) & 1UL) != 0UL) {
      #line 607 
      trate->rates.legacy_rates.rs_rates[j] = (unsigned char)((int)(sband->bitrates + (unsigned long)i)->bitrate / 5);
      #line 608 
      j ++;
    }
    #line 604 
    i ++;
  }
  #line 611 
  trate->rates.legacy_rates.rs_nrates = (unsigned char)j;
  #line 613 
  if ((int)sta->ht_cap.ht_supported != 0) {
    #line 614 
    i = 0;
    #line 614 
    j = 0;
    #line 614 
    while (i <= 76) {
      #line 615 
      if ((((int)sta->ht_cap.mcs.rx_mask[i / 8] >> (i & 7)) & 1) != 0) {
        #line 616 
        int tmp;
        #line 616 
        tmp = j;
        #line 616 
        j ++;
        #line 616 
        trate->rates.ht_rates.rs_rates[tmp] = (unsigned char)i;
      }
      #line 617 
      if (j == 30) 
                   #line 618 
                   break;
      #line 614 
      i ++;
    }
    #line 620 
    trate->rates.ht_rates.rs_nrates = (unsigned char)j;
    #line 622 
    caps = 8U;
    #line 623 
    if (((int)sta->ht_cap.cap & 768) != 0) 
                                           #line 624 
                                           caps |= 32U;
    #line 625 
    if ((unsigned int)sta->ht_cap.mcs.rx_mask[1] != 0U) 
                                                        #line 626 
                                                        caps |= 1U;
    #line 627 
    if (((int)sta->ht_cap.cap & 2) != 0) {
      #line 627 
      if ((int)conf_is_ht40(& (priv->hw)->conf) != 0) 
                                                      #line 629 
                                                      caps |= 2U;
    }
    #line 630 
    if ((int)conf_is_ht40(& (priv->hw)->conf) != 0) {
      #line 630 
      if (((int)sta->ht_cap.cap & 64) != 0) 
                                            #line 632 
                                            caps |= 4U; else 
                                                             #line 630 
                                                             goto _LAND;
    }
    else {
      #line 630 
      _LAND: 
      #line 633 
      if ((int)conf_is_ht20(& (priv->hw)->conf) != 0) 
        #line 633 
        if (((int)sta->ht_cap.cap & 32) != 0) 
                                              #line 635 
                                              caps |= 4U;
    }
  }
  #line 638 
  trate->sta_index = ista->index;
  #line 639 
  trate->isnew = (unsigned char)1U;
  #line 640 
  trate->capflags = __builtin_bswap32(caps);
  #line 641 
  return;
}

#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_send_rate_cmd(struct ath9k_htc_priv *priv, struct ath9k_htc_target_rate *trate)
{
  #line 647 
  int ret;
  #line 648 
  u8 cmd_rsp;
  #line 646 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 650 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_RC_RATE_UPDATE_CMDID,(u8 *)trate,72U,& cmd_rsp,1U,500U);
  #line 651 
  if (ret != 0) 
                #line 652 
                ath_printk((char *)"\001",common,(char *)"Unable to initialize Rate information on target\n");
  #line 656 
  return ret;
}

#line 659  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_init_rate(struct ath9k_htc_priv *priv, struct ieee80211_sta *sta)
{
  #line 663 
  struct ath9k_htc_target_rate trate;
  #line 664 
  int ret;
  #line 662 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 666 
  memset((void *)(& trate),0,72UL);
  #line 667 
  ath9k_htc_setup_rate(priv,sta,& trate);
  #line 668 
  ret = ath9k_htc_send_rate_cmd(priv,& trate);
  #line 669 
  if (ret == 0) 
    #line 670 
    if ((common->debug_mask & 512) != 0) {
      #line 670 
      ;
      #line 670 
      ;
      #line 670 
      ath_printk((char *)"\001",common,(char *)"Updated target sta: %pM, rate caps: 0x%X\n",(u8 *)(& sta->addr),__builtin_bswap32(trate.capflags));
    }
  #line 671 
  return;
}

#line 675  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_update_rate(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf)
{
  #line 680 
  struct ath9k_htc_target_rate trate;
  #line 681 
  struct ieee80211_sta *sta;
  #line 682 
  int ret;
  #line 679 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 684 
  memset((void *)(& trate),0,72UL);
  #line 686 
  rcu_read_lock();
  #line 687 
  sta = ieee80211_find_sta(vif,bss_conf->bssid);
  #line 688 
  if (sta == (struct ieee80211_sta *)0) {
    #line 689 
    rcu_read_unlock();
    #line 690 
    return;
  }
  #line 692 
  ath9k_htc_setup_rate(priv,sta,& trate);
  #line 693 
  rcu_read_unlock();
  #line 695 
  ret = ath9k_htc_send_rate_cmd(priv,& trate);
  #line 696 
  if (ret == 0) 
    #line 697 
    if ((common->debug_mask & 512) != 0) {
      #line 697 
      ;
      #line 697 
      ;
      #line 697 
      ath_printk((char *)"\001",common,(char *)"Updated target sta: %pM, rate caps: 0x%X\n",bss_conf->bssid,__builtin_bswap32(trate.capflags));
    }
  #line 698 
  return;
}

#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_tx_aggr_oper(struct ath9k_htc_priv *priv, struct ieee80211_vif *vif, struct ieee80211_sta *sta, enum ieee80211_ampdu_mlme_action action, u16 tid)
{
  #line 709 
  struct ath9k_htc_target_aggr aggr;
  #line 710 
  struct ath9k_htc_sta *ista;
  #line 712 
  u8 cmd_rsp;
  #line 708 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 711 
  int ret = 0;
  #line 714 
  if ((unsigned int)tid > 7U) 
                              #line 715 
                              return -22;
  #line 717 
  memset((void *)(& aggr),0,4UL);
  #line 718 
  ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
  #line 720 
  aggr.sta_index = ista->index;
  #line 721 
  aggr.tidno = (unsigned char)((unsigned int)((unsigned char)tid) & 15U);
  #line 722 
  aggr.aggr_enable = (unsigned char)(action == (unsigned int)IEEE80211_AMPDU_TX_START);
  #line 724 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_TX_AGGR_ENABLE_CMDID,(u8 *)(& aggr),4U,& cmd_rsp,1U,500U);
  #line 725 
  if (ret != 0) {
    #line 726 
    if ((common->debug_mask & 512) != 0) {
      #line 726 
      char *tmp_0;
      #line 726 
      ;
      #line 726 
      ;
      #line 726 
      if ((unsigned int)aggr.aggr_enable != 0U) 
                                                #line 726 
                                                tmp_0 = (char *)"start"; else 
                                                                    #line 726 
                                                                    tmp_0 = (char *)"stop";
      #line 726 
      ;
      #line 726 
      ath_printk((char *)"\001",common,(char *)"Unable to %s TX aggregation for (%pM, %d)\n",tmp_0,(u8 *)(& sta->addr),(int)tid);
    }
  }
  else 
    #line 730 
    if ((common->debug_mask & 512) != 0) {
      #line 730 
      char *tmp_1;
      #line 730 
      ;
      #line 730 
      ;
      #line 730 
      if ((unsigned int)aggr.aggr_enable != 0U) 
                                                #line 730 
                                                tmp_1 = (char *)"Starting"; else 
                                                                    #line 730 
                                                                    tmp_1 = (char *)"Stopping";
      #line 730 
      ;
      #line 730 
      ath_printk((char *)"\001",common,(char *)"%s TX aggregation for (%pM, %d)\n",tmp_1,(u8 *)(& sta->addr),(int)tid);
    }
  #line 735 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_3(& priv->tx.tx_lock);
  #line 736 
  if ((unsigned int)aggr.aggr_enable != 0U && ret == 0) 
                                                        #line 736 
                                                        ista->tid_state[(int)tid] = AGGR_START; else 
                                                                    #line 736 
                                                                    ista->tid_state[(int)tid] = AGGR_STOP;
  #line 737 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_3(& priv->tx.tx_lock);
  #line 739 
  return ret;
}

#line 746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_start_ani(struct ath9k_htc_priv *priv)
{
  #line 748 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 749 
  unsigned long timestamp = (unsigned long)jiffies_to_msecs(jiffies);
  #line 751 
  common->ani.longcal_timer = (unsigned int)timestamp;
  #line 752 
  common->ani.shortcal_timer = (unsigned int)timestamp;
  #line 753 
  common->ani.checkani_timer = (unsigned int)timestamp;
  #line 755 
  cif_set_bit_1(2L,& common->op_flags);
  #line 757 
  ;
  #line 757 
  ;
  #line 757 
  ieee80211_queue_delayed_work(common->hw,& priv->ani_work,msecs_to_jiffies(100U));
  #line 759 
  return;
}

#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_stop_ani(struct ath9k_htc_priv *priv)
{
  #line 763 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 764 
  cancel_delayed_work_sync(& priv->ani_work);
  #line 765 
  cif_clear_bit_0(2L,& common->op_flags);
  #line 766 
  return;
}

#line 768  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
void ath9k_htc_ani_work(struct work_struct *work)
{
  #line 846 
  u32 __UNIQUE_ID___x560;
  #line 771 
  void *__mptr;
  #line 846 
  u32 tmp_3;
  #line 778 
  u32 cal_interval;
  #line 778 
  u32 short_cal_interval;
  #line 771 
  __mptr = (void *)work;
  #line 770 
  struct ath9k_htc_priv *priv = ((struct ath9k_htc_priv *)(__mptr + 18446744073709549488U));
  #line 772 
  struct ath_hw *ah = priv->ah;
  #line 773 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 774 
  bool longcal = (_Bool)0;
  #line 775 
  bool shortcal = (_Bool)0;
  #line 776 
  bool aniflag = (_Bool)0;
  #line 777 
  unsigned int timestamp = jiffies_to_msecs(jiffies);
  #line 780 
  if (ah->opmode == (unsigned int)NL80211_IFTYPE_AP) 
                                                     #line 780 
                                                     short_cal_interval = 100U; else 
                                                                    #line 780 
                                                                    short_cal_interval = 1000U;
  #line 784 
  if (ah->power_mode != (unsigned int)ATH9K_PM_AWAKE) 
                                                      #line 785 
                                                      goto set_timer;
  #line 788 
  if (timestamp - common->ani.longcal_timer > 29999U) {
    #line 789 
    longcal = (_Bool)1;
    #line 790 
    if ((common->debug_mask & 64) != 0) 
                                        #line 790 
                                        ath_printk((char *)"\001",common,(char *)"longcal @%lu\n",jiffies);
    #line 791 
    common->ani.longcal_timer = timestamp;
  }
  #line 798 
  if (! common->ani.caldone) {
    #line 799 
    if (timestamp - common->ani.shortcal_timer >= short_cal_interval) {
      #line 801 
      shortcal = (_Bool)1;
      #line 802 
      if ((common->debug_mask & 64) != 0) 
                                          #line 802 
                                          ath_printk((char *)"\001",common,(char *)"shortcal @%lu\n",jiffies);
      #line 803 
      common->ani.shortcal_timer = timestamp;
      #line 804 
      common->ani.resetcal_timer = timestamp;
    }
  }
  else 
    #line 807 
    if (timestamp - common->ani.resetcal_timer > 1199999U) {
      #line 809 
      common->ani.caldone = ath9k_hw_reset_calvalid(ah);
      #line 810 
      if ((int)common->ani.caldone != 0) 
                                         #line 811 
                                         common->ani.resetcal_timer = timestamp;
    }
  #line 816 
  if (timestamp - common->ani.checkani_timer > 99U) {
    #line 817 
    aniflag = (_Bool)1;
    #line 818 
    common->ani.checkani_timer = timestamp;
  }
  #line 822 
  if (((int)longcal != 0 || (int)shortcal != 0) || (int)aniflag != 0) {
    #line 824 
    ath9k_htc_ps_wakeup(priv);
    #line 827 
    if ((int)aniflag != 0) 
                           #line 828 
                           ath9k_hw_ani_monitor(ah,ah->curchan);
    #line 831 
    if ((int)longcal != 0 || (int)shortcal != 0) {
      #line 832 
      common->ani.caldone = (_Bool)(ath9k_hw_calibrate(ah,ah->curchan,
                           (unsigned char)((int)ah->rxchainmask),
                           (_Bool)((bool)((int)longcal) != 0)) > 0);
    }
    #line 836 
    ath9k_htc_ps_restore(priv);
  }
  #line 839 
  set_timer: 
             #line 839 
  ;
  #line 845 
  cal_interval = 30000U;
  {
    #line 846 
    __UNIQUE_ID___x560 = cal_interval;
    #line 846 
    unsigned int __UNIQUE_ID___y561 = 100U;
    #line 846 
    if (__UNIQUE_ID___x560 < __UNIQUE_ID___y561) 
                                                 #line 846 
                                                 tmp_3 = __UNIQUE_ID___x560; else 
                                                                    #line 846 
                                                                    tmp_3 = __UNIQUE_ID___y561;
    }
  #line 846 
  cal_interval = tmp_3;
  #line 851 
  if (! common->ani.caldone) {
    #line 852 
    u32 __UNIQUE_ID___x562;
    #line 852 
    u32 tmp_5;
    {
      #line 852 
      __UNIQUE_ID___x562 = cal_interval;
      #line 852 
      unsigned int __UNIQUE_ID___y563 = short_cal_interval;
      #line 852 
      if (__UNIQUE_ID___x562 < __UNIQUE_ID___y563) 
                                                   #line 852 
                                                   tmp_5 = __UNIQUE_ID___x562; else 
                                                                    #line 852 
                                                                    tmp_5 = __UNIQUE_ID___y563;
      }
    #line 852 
    cal_interval = tmp_5;
  }
  #line 854 
  ;
  #line 854 
  ;
  #line 854 
  ieee80211_queue_delayed_work(common->hw,& priv->ani_work,msecs_to_jiffies(cal_interval));
  #line 856 
  return;
}

#line 862  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  #line 866 
  struct ieee80211_hdr *hdr;
  #line 869 
  int padpos;
  #line 869 
  int padsize;
  #line 869 
  int ret;
  #line 869 
  int slot;
  #line 867 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 868 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 871 
  hdr = (struct ieee80211_hdr *)skb->data;
  #line 874 
  padpos = (int)ieee80211_hdrlen((unsigned short)((int)hdr->frame_control));
  #line 875 
  padsize = padpos & 3;
  #line 876 
  if (padsize != 0 && skb->len > (unsigned int)padpos) {
    #line 877 
    ;
    #line 877 
    if (skb_headroom(skb) < (unsigned int)padsize) {
      #line 878 
      if ((common->debug_mask & 128) != 0) 
                                           #line 878 
                                           ath_printk((char *)"\001",common,(char *)"No room for padding\n");
      #line 879 
      goto fail_tx;
    }
    #line 881 
    skb_push(skb,(unsigned int)padsize);
    #line 882 
    __memmove((void *)skb->data,(void *)(skb->data + (unsigned long)padsize),(unsigned long)padpos);
  }
  #line 885 
  slot = ath9k_htc_tx_get_slot(priv);
  #line 886 
  if (slot < 0) {
    #line 887 
    if ((common->debug_mask & 128) != 0) 
                                         #line 887 
                                         ath_printk((char *)"\001",common,(char *)"No free TX slot\n");
    #line 888 
    goto fail_tx;
  }
  #line 891 
  ret = ath9k_htc_tx_start(priv,control->sta,skb,(unsigned char)((int)((unsigned char)slot)),(_Bool)0);
  #line 892 
  if (ret != 0) {
    #line 893 
    if ((common->debug_mask & 128) != 0) 
                                         #line 893 
                                         ath_printk((char *)"\001",common,(char *)"Tx failed\n");
    #line 894 
    goto clear_slot;
  }
  #line 897 
  ath9k_htc_check_stop_queues(priv);
  #line 899 
  return;
  #line 901 
  clear_slot: 
              #line 901 
  ;
  #line 902 
  ath9k_htc_tx_clear_slot(priv,slot);
  #line 903 
  fail_tx: 
           #line 903 
  ;
  #line 904 
  dev_kfree_skb_any(skb);
  #line 905 
  return;
}

#line 907  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_start(struct ieee80211_hw *hw)
{
  #line 913 
  struct ath9k_channel *init_channel;
  #line 915 
  enum htc_phymode mode;
  #line 916 
  __be16 htc_mode;
  #line 917 
  u8 cmd_rsp;
  #line 909 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 910 
  struct ath_hw *ah = priv->ah;
  #line 911 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 912 
  struct ieee80211_channel *curchan = hw->conf.chandef.chan;
  #line 914 
  int ret = 0;
  #line 919 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 921 
  if ((common->debug_mask & 512) != 0) 
                                       #line 921 
                                       ath_printk((char *)"\001",common,(char *)"Starting driver with initial channel: %d MHz\n",curchan->center_freq);
  #line 926 
  ath9k_htc_setpower(priv,(enum ath9k_power_mode)ATH9K_PM_AWAKE);
  #line 927 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_FLUSH_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 930 
  init_channel = ath9k_cmn_get_channel(hw,ah,& hw->conf.chandef);
  #line 932 
  ret = ath9k_hw_reset(ah,init_channel,ah->caldata,(_Bool)0);
  #line 933 
  if (ret != 0) {
    #line 934 
    ath_printk((char *)"\001",common,(char *)"Unable to reset hardware; reset status %d (freq %u MHz)\n",ret,curchan->center_freq);
    #line 937 
    cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
    #line 938 
    return ret;
  }
  #line 941 
  ath9k_cmn_update_txpow(ah,(unsigned short)((int)priv->curtxpow),(unsigned short)((int)priv->txpowlimit),& priv->curtxpow);
  #line 944 
  mode = ath9k_htc_get_curmode(priv,init_channel);
  #line 945 
  htc_mode = __builtin_bswap16((unsigned short)((int)((unsigned short)mode)));
  #line 946 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_SET_MODE_CMDID,(u8 *)(& htc_mode),2U,& cmd_rsp,1U,500U);
  #line 947 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_ATH_INIT_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 948 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_START_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 950 
  ath9k_host_rx_init(priv);
  #line 952 
  ret = ath9k_htc_update_cap_target(priv,(unsigned char)0);
  #line 953 
  if (ret != 0) 
    #line 954 
    if ((common->debug_mask & 512) != 0) 
                                         #line 954 
                                         ath_printk((char *)"\001",common,(char *)"Failed to update capability in target\n");
  #line 957 
  cif_clear_bit_0(0L,& common->op_flags);
  #line 958 
  htc_start(priv->htc);
  #line 960 
  cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_3(& priv->tx.tx_lock);
  #line 961 
  priv->tx.flags = (unsigned char)((unsigned int)priv->tx.flags & 254U);
  #line 962 
  cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_3(& priv->tx.tx_lock);
  #line 964 
  ieee80211_wake_queues(hw);
  #line 966 
  ;
  #line 966 
  ;
  #line 966 
  cif_mod_timer_0(& priv->tx.cleanup_timer,msecs_to_jiffies(50U) + jiffies);
  #line 969 
  ath9k_htc_start_btcoex(priv);
  #line 971 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 973 
  return ret;
}

#line 976  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_stop(struct ieee80211_hw *hw)
{
  #line 981 
  int ret;
  #line 982 
  u8 cmd_rsp;
  #line 978 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 979 
  struct ath_hw *ah = priv->ah;
  #line 980 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 984 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 986 
  if ((int)test_bit(0L,& common->op_flags) != 0) {
    #line 987 
    if (common->debug_mask != 0) 
                                 #line 987 
                                 ath_printk((char *)"\001",common,(char *)"Device not present\n");
    #line 988 
    cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
    #line 989 
    return;
  }
  #line 992 
  ath9k_htc_ps_wakeup(priv);
  #line 994 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DISABLE_INTR_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 995 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_DRAIN_TXQ_ALL_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 996 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_STOP_RECV_CMDID,(u8 *)0U,0U,& cmd_rsp,1U,500U);
  #line 998 
  tasklet_kill(& priv->rx_tasklet);
  #line 1000 
  cif_del_timer_sync(& priv->tx.cleanup_timer);
  #line 1001 
  ath9k_htc_tx_drain(priv);
  #line 1002 
  ath9k_wmi_event_drain(priv);
  #line 1004 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1007 
  cancel_work_sync(& priv->fatal_work);
  #line 1008 
  cancel_work_sync(& priv->ps_work);
  #line 1011 
  cancel_work_sync(& priv->led_work);
  #line 1013 
  ath9k_htc_stop_ani(priv);
  #line 1015 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1017 
  ath9k_htc_stop_btcoex(priv);
  #line 1020 
  if ((int)(priv->ah)->is_monitoring != 0) 
                                           #line 1021 
                                           ath9k_htc_remove_monitor_interface(priv);
  #line 1023 
  ath9k_hw_phy_disable(ah);
  #line 1024 
  ath9k_hw_disable(ah);
  #line 1025 
  ath9k_htc_ps_restore(priv);
  #line 1026 
  ath9k_htc_setpower(priv,(enum ath9k_power_mode)ATH9K_PM_FULL_SLEEP);
  #line 1028 
  cif_set_bit_1(0L,& common->op_flags);
  #line 1030 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1030 
                                       ath_printk((char *)"\001",common,(char *)"Driver halt\n");
  #line 1031 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1032 
  return;
}

#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1040 
  struct ath9k_htc_target_vif hvif;
  #line 1042 
  u8 cmd_rsp;
  #line 1037 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1038 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 1039 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1041 
  int ret = 0;
  #line 1044 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1046 
  ath9k_htc_ps_wakeup(priv);
  #line 1047 
  memset((void *)(& hvif),0,12UL);
  #line 1048 
  memcpy((void *)(& hvif.myaddr),(void *)(& vif->addr),6UL);
  #line 1050 
  switch ((unsigned int)vif->type) {
    #line 1051 
    case (unsigned int)2: 
                          #line 1051 
    ;
    #line 1052 
    hvif.opmode = (unsigned char)1U;
    #line 1053 
    break;
    #line 1054 
    case (unsigned int)1: 
                          #line 1054 
    ;
    #line 1055 
    hvif.opmode = (unsigned char)0U;
    #line 1056 
    break;
    #line 1057 
    case (unsigned int)3: 
                          #line 1057 
    ;
    #line 1058 
    hvif.opmode = (unsigned char)6U;
    #line 1059 
    break;
    #line 1060 
    case (unsigned int)7: 
                          #line 1060 
    ;
    #line 1061 
    hvif.opmode = (unsigned char)2U;
    #line 1062 
    break;
    #line 1063 
    default: 
             #line 1063 
    ;
    #line 1064 
    ath_printk((char *)"\001",common,(char *)"Interface type %d not yet supported\n",(unsigned int)vif->type);
    #line 1066 
    ret = -95;
    #line 1067 
    goto out;
  }
  #line 1071 
  hvif.index = (unsigned char)ffz((unsigned long)priv->vif_slot);
  #line 1071 
  avp->index = hvif.index;
  #line 1072 
  hvif.rtsthreshold = (unsigned short)9U;
  #line 1073 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_VAP_CREATE_CMDID,(u8 *)(& hvif),12U,& cmd_rsp,1U,500U);
  #line 1074 
  if (ret != 0) 
                #line 1075 
                goto out;
  #line 1081 
  ret = ath9k_htc_add_station(priv,vif,(struct ieee80211_sta *)0);
  #line 1082 
  if (ret != 0) {
    #line 1083 
    ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_VAP_REMOVE_CMDID,(u8 *)(& hvif),12U,& cmd_rsp,1U,500U);
    #line 1084 
    goto out;
  }
  #line 1087 
  ath9k_htc_set_mac_bssid_mask(priv,vif);
  #line 1089 
  priv->vif_slot = (unsigned char)((int)priv->vif_slot | (1 << (int)avp->index));
  #line 1090 
  priv->nvifs = (u16)((int)priv->nvifs + 1);
  #line 1092 
  switch ((unsigned int)vif->type) {
    #line 1092 
    case (unsigned int)2: 
                          #line 1092 
    ;
    #line 1092 
    priv->num_sta_vif = (u8)((int)priv->num_sta_vif + 1);
    #line 1092 
    break;
    #line 1092 
    case (unsigned int)1: 
                          #line 1092 
    ;
    #line 1092 
    priv->num_ibss_vif = (u8)((int)priv->num_ibss_vif + 1);
    #line 1092 
    break;
    #line 1092 
    case (unsigned int)3: 
                          #line 1092 
    ;
    #line 1092 
    priv->num_ap_vif = (u8)((int)priv->num_ap_vif + 1);
    #line 1092 
    break;
    #line 1092 
    case (unsigned int)7: 
                          #line 1092 
    ;
    #line 1092 
    priv->num_mbss_vif = (u8)((int)priv->num_mbss_vif + 1);
    #line 1092 
    break;
    #line 1092 
    default: 
             #line 1092 
    ;
    #line 1092 
    break;
  }
  #line 1094 
  if ((vif->type == (unsigned int)NL80211_IFTYPE_AP || vif->type == (unsigned int)NL80211_IFTYPE_MESH_POINT) || vif->type == (unsigned int)NL80211_IFTYPE_ADHOC) 
    #line 1097 
    ath9k_htc_assign_bslot(priv,vif);
  #line 1099 
  ath9k_htc_set_opmode(priv);
  #line 1101 
  if ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_AP) {
    #line 1102 
    if (! test_bit(2L,& common->op_flags)) {
      #line 1103 
      ath9k_hw_set_tsfadjust(priv->ah,(_Bool)1);
      #line 1104 
      ath9k_htc_start_ani(priv);
    }
  }
  #line 1107 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1107 
                                       ath_printk((char *)"\001",common,(char *)"Attach a VIF of type: %d at idx: %d\n",(unsigned int)vif->type,(int)avp->index);
  #line 1110 
  out: 
       #line 1110 
  ;
  #line 1111 
  ath9k_htc_ps_restore(priv);
  #line 1112 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1114 
  return ret;
}

#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1123 
  struct ath9k_htc_target_vif hvif;
  #line 1125 
  u8 cmd_rsp;
  #line 1120 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1121 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1122 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 1124 
  int ret = 0;
  #line 1127 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1128 
  ath9k_htc_ps_wakeup(priv);
  #line 1130 
  memset((void *)(& hvif),0,12UL);
  #line 1131 
  memcpy((void *)(& hvif.myaddr),(void *)(& vif->addr),6UL);
  #line 1132 
  hvif.index = avp->index;
  #line 1133 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_VAP_REMOVE_CMDID,(u8 *)(& hvif),12U,& cmd_rsp,1U,500U);
  #line 1134 
  if (ret != 0) 
                #line 1135 
                ath_printk((char *)"\001",common,(char *)"Unable to remove interface at idx: %d\n",(int)avp->index);
  #line 1138 
  priv->nvifs = (u16)((int)priv->nvifs - 1);
  #line 1139 
  priv->vif_slot = (unsigned char)((int)priv->vif_slot & ~ (1 << (int)avp->index));
  #line 1141 
  if (priv->csa_vif == vif) 
                            #line 1142 
                            priv->csa_vif = (struct ieee80211_vif *)0;
  #line 1144 
  ath9k_htc_remove_station(priv,vif,(struct ieee80211_sta *)0);
  #line 1146 
  switch ((unsigned int)vif->type) {
    #line 1146 
    case (unsigned int)2: 
                          #line 1146 
    ;
    #line 1146 
    priv->num_sta_vif = (u8)((int)priv->num_sta_vif - 1);
    #line 1146 
    break;
    #line 1146 
    case (unsigned int)1: 
                          #line 1146 
    ;
    #line 1146 
    priv->num_ibss_vif = (u8)((int)priv->num_ibss_vif - 1);
    #line 1146 
    break;
    #line 1146 
    case (unsigned int)3: 
                          #line 1146 
    ;
    #line 1146 
    priv->num_ap_vif = (u8)((int)priv->num_ap_vif - 1);
    #line 1146 
    break;
    #line 1146 
    case (unsigned int)7: 
                          #line 1146 
    ;
    #line 1146 
    priv->num_mbss_vif = (u8)((int)priv->num_mbss_vif - 1);
    #line 1146 
    break;
    #line 1146 
    default: 
             #line 1146 
    ;
    #line 1146 
    break;
  }
  #line 1148 
  if ((vif->type == (unsigned int)NL80211_IFTYPE_AP || vif->type == (unsigned int)NL80211_IFTYPE_MESH_POINT) || vif->type == (unsigned int)NL80211_IFTYPE_ADHOC) 
    #line 1151 
    ath9k_htc_remove_bslot(priv,vif);
  #line 1153 
  ath9k_htc_set_opmode(priv);
  #line 1155 
  ath9k_htc_set_mac_bssid_mask(priv,vif);
  #line 1160 
  if (vif->type == (unsigned int)NL80211_IFTYPE_AP && (unsigned int)priv->num_ap_vif == 0U) {
    #line 1161 
    priv->rearm_ani = (_Bool)0;
    #line 1162 
    ieee80211_iterate_active_interfaces_atomic(priv->hw,1U,& ath9k_htc_vif_iter,(void *)priv);
    #line 1165 
    if (! priv->rearm_ani) 
                           #line 1166 
                           ath9k_htc_stop_ani(priv);
  }
  #line 1169 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1169 
                                       ath_printk((char *)"\001",common,(char *)"Detach Interface at idx: %d\n",(int)avp->index);
  #line 1171 
  ath9k_htc_ps_restore(priv);
  #line 1172 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1173 
  return;
}

#line 1175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_config(struct ieee80211_hw *hw, u32 changed)
{
  #line 1177 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1178 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1179 
  struct ieee80211_conf *conf = & hw->conf;
  #line 1180 
  bool chip_reset = (_Bool)0;
  #line 1181 
  int ret = 0;
  #line 1183 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1184 
  ath9k_htc_ps_wakeup(priv);
  #line 1186 
  if ((changed & 256U) != 0U) {
    #line 1187 
    cif_mutex_lock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
    #line 1189 
    priv->ps_idle = (_Bool)((conf->flags & 4U) != 0U);
    #line 1190 
    if (! priv->ps_idle) 
                         #line 1191 
                         chip_reset = (_Bool)1;
    #line 1193 
    cif_mutex_unlock_htc_pm_lock_of_ath9k_htc_priv(& priv->htc_pm_lock);
  }
  #line 1200 
  if ((changed & 8U) != 0U) 
    #line 1201 
    if ((conf->flags & 1U) != 0U && ! (priv->ah)->is_monitoring) 
                                                                 #line 1203 
                                                                 ath9k_htc_add_monitor_interface(priv);
    else 
      #line 1204 
      if ((int)(priv->ah)->is_monitoring != 0) 
                                               #line 1205 
                                               ath9k_htc_remove_monitor_interface(priv);
  #line 1208 
  if ((changed & 64U) != 0U || (int)chip_reset != 0) {
    #line 1209 
    struct ieee80211_channel *curchan = hw->conf.chandef.chan;
    #line 1210 
    int pos = (int)curchan->hw_value;
    #line 1212 
    if ((common->debug_mask & 512) != 0) 
                                         #line 1212 
                                         ath_printk((char *)"\001",common,(char *)"Set channel: %d MHz\n",curchan->center_freq);
    #line 1215 
    ath9k_cmn_get_channel(hw,priv->ah,& hw->conf.chandef);
    #line 1216 
    if (ath9k_htc_set_channel(priv,hw,& (priv->ah)->channels[pos]) < 0) {
      #line 1217 
      ath_printk((char *)"\001",common,(char *)"Unable to set channel\n");
      #line 1218 
      ret = -22;
      #line 1219 
      goto out;
    }
  }
  #line 1224 
  if ((changed & 16U) != 0U) 
    #line 1225 
    if ((conf->flags & 2U) != 0U) {
      #line 1226 
      ath9k_htc_setpower(priv,(enum ath9k_power_mode)ATH9K_PM_NETWORK_SLEEP);
      #line 1227 
      priv->ps_enabled = (_Bool)1;
    }
    else {
      #line 1229 
      priv->ps_enabled = (_Bool)0;
      #line 1230 
      cancel_work_sync(& priv->ps_work);
      #line 1231 
      ath9k_htc_setpower(priv,(enum ath9k_power_mode)ATH9K_PM_AWAKE);
    }
  #line 1235 
  if ((changed & 32U) != 0U) {
    #line 1236 
    priv->txpowlimit = (unsigned short)((unsigned int)((unsigned short)conf->power_level) * 2U);
    #line 1237 
    ath9k_cmn_update_txpow(priv->ah,(unsigned short)((int)priv->curtxpow),(unsigned short)((int)priv->txpowlimit),& priv->curtxpow);
  }
  #line 1241 
  out: 
       #line 1241 
  ;
  #line 1242 
  ath9k_htc_ps_restore(priv);
  #line 1243 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1244 
  return ret;
}

#line 1256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_configure_filter(struct ieee80211_hw *hw, unsigned int changed_flags, unsigned int *total_flags, u64 multicast)
{
  #line 1263 
  u32 rfilt;
  #line 1261 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1262 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1265 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1266 
  changed_flags &= 502U;
  #line 1267 
  *total_flags &= 502U;
  #line 1269 
  if ((int)test_bit(0L,& common->op_flags) != 0) {
    #line 1270 
    ;
    #line 1270 
    if (ath9k_hw_common(priv->ah)->debug_mask != 0) {
      #line 1270 
      ath_printk((char *)"\001",ath9k_hw_common(priv->ah),(char *)"Unable to configure filter on invalid state\n");
    }
    #line 1272 
    cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
    #line 1273 
    return;
  }
  #line 1275 
  ath9k_htc_ps_wakeup(priv);
  #line 1277 
  priv->rxfilter = *total_flags;
  #line 1278 
  rfilt = ath9k_htc_calcrxfilter(priv);
  #line 1279 
  ath9k_hw_setrxfilter(priv->ah,rfilt);
  #line 1281 
  ;
  #line 1281 
  if ((ath9k_hw_common(priv->ah)->debug_mask & 512) != 0) {
    #line 1281 
    ;
    #line 1281 
    ath_printk((char *)"\001",ath9k_hw_common(priv->ah),(char *)"Set HW RX filter: 0x%x\n",rfilt);
  }
  #line 1284 
  ath9k_htc_ps_restore(priv);
  #line 1285 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1286 
  return;
}

#line 1288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_sta_rc_update_work(struct work_struct *work)
{
  #line 1291 
  void *__mptr;
  #line 1293 
  void *__mptr_0;
  #line 1296 
  struct ath9k_htc_target_rate trate;
  #line 1291 
  __mptr = (void *)work;
  #line 1290 
  struct ath9k_htc_sta *ista = ((struct ath9k_htc_sta *)(__mptr + 18446744073709551576U));
  #line 1293 
  __mptr_0 = (void *)ista;
  #line 1292 
  struct ieee80211_sta *sta = ((struct ieee80211_sta *)(__mptr_0 + 18446744073709551280U));
  #line 1294 
  struct ath9k_htc_priv *priv = ista->htc_priv;
  #line 1295 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1298 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1299 
  ath9k_htc_ps_wakeup(priv);
  #line 1301 
  memset((void *)(& trate),0,72UL);
  #line 1302 
  ath9k_htc_setup_rate(priv,sta,& trate);
  #line 1303 
  if (ath9k_htc_send_rate_cmd(priv,& trate) == 0) {
    #line 1304 
    if ((common->debug_mask & 512) != 0) {
      #line 1304 
      ;
      #line 1304 
      ;
      #line 1304 
      ath_printk((char *)"\001",common,(char *)"Supported rates for sta: %pM updated, rate caps: 0x%X\n",(u8 *)(& sta->addr),__builtin_bswap32(trate.capflags));
    }
  }
  else 
    #line 1308 
    if ((common->debug_mask & 512) != 0) 
                                         #line 1308 
                                         ath_printk((char *)"\001",common,(char *)"Unable to update supported rates for sta: %pM\n",(u8 *)(& sta->addr));
  #line 1312 
  ath9k_htc_ps_restore(priv);
  #line 1313 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1314 
  return;
}

#line 1316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_sta_add(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  #line 1322 
  int ret;
  #line 1320 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1321 
  struct ath9k_htc_sta *ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
  #line 1324 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1325 
  ath9k_htc_ps_wakeup(priv);
  #line 1326 
  ret = ath9k_htc_add_station(priv,vif,sta);
  #line 1327 
  if (ret == 0) {
    {
      #line 1328 
      struct lock_class_key __key;
      #line 1328 
      __init_work(& ista->rc_update_work,0);
      #line 1328 
      atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
      #line 1328 
      ista->rc_update_work.data = __constr_expr_41;
      #line 1328 
      lockdep_init_map(& ista->rc_update_work.lockdep_map,(char *)"(work_completion)",& __key,0);
      #line 1328 
      INIT_LIST_HEAD_4(& ista->rc_update_work.entry);
      #line 1328 
      ista->rc_update_work.func = & ath9k_htc_sta_rc_update_work;
    }
    #line 1329 
    ista->htc_priv = priv;
    #line 1330 
    ath9k_htc_init_rate(priv,sta);
  }
  #line 1332 
  ath9k_htc_ps_restore(priv);
  #line 1333 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1335 
  return ret;
}

#line 1338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_sta_remove(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta)
{
  #line 1344 
  int ret;
  #line 1342 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1343 
  struct ath9k_htc_sta *ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
  #line 1346 
  cancel_work_sync(& ista->rc_update_work);
  #line 1348 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1349 
  ath9k_htc_ps_wakeup(priv);
  #line 1350 
  htc_sta_drain(priv->htc,(unsigned char)((int)ista->index));
  #line 1351 
  ret = ath9k_htc_remove_station(priv,vif,sta);
  #line 1352 
  ath9k_htc_ps_restore(priv);
  #line 1353 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1355 
  return ret;
}

#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_sta_rc_update(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_sta *sta, u32 changed)
{
  #line 1362 
  struct ath9k_htc_sta *ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
  #line 1364 
  if ((changed & 4U) == 0U) 
                            #line 1365 
                            return;
  #line 1367 
  cif_schedule_work(& ista->rc_update_work);
  #line 1368 
  return;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params *params)
{
  #line 1376 
  struct ath9k_tx_queue_info qi;
  #line 1377 
  int qnum;
  #line 1374 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1375 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1377 
  int ret = 0;
  #line 1379 
  if ((unsigned int)queue > 3U) 
                                #line 1380 
                                return 0;
  #line 1382 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1383 
  ath9k_htc_ps_wakeup(priv);
  #line 1385 
  memset((void *)(& qi),0,60UL);
  #line 1387 
  qi.tqi_aifs = (unsigned int)params->aifs;
  #line 1388 
  qi.tqi_cwmin = (unsigned int)params->cw_min;
  #line 1389 
  qi.tqi_cwmax = (unsigned int)params->cw_max;
  #line 1390 
  qi.tqi_burstTime = (unsigned int)((int)params->txop * 32);
  #line 1392 
  qnum = get_hw_qnum((unsigned short)((int)queue),(int *)(& priv->hwq_map));
  #line 1394 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1394 
                                       ath_printk((char *)"\001",common,(char *)"Configure tx [queue/hwq] [%d/%d],  aifs: %d, cw_min: %d, cw_max: %d, txop: %d\n",(int)queue,qnum,(int)params->aifs,(int)params->cw_min,(int)params->cw_max,(int)params->txop);
  #line 1399 
  ret = ath_htc_txq_update(priv,qnum,& qi);
  #line 1400 
  if (ret != 0) {
    #line 1401 
    ath_printk((char *)"\001",common,(char *)"TXQ Update failed\n");
    #line 1402 
    goto out;
  }
  #line 1405 
  if ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_ADHOC && priv->hwq_map[2] == qnum) 
    #line 1407 
    ath9k_htc_beaconq_config(priv);
  #line 1408 
  out: 
       #line 1408 
  ;
  #line 1409 
  ath9k_htc_ps_restore(priv);
  #line 1410 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1412 
  return ret;
}

#line 1415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd, struct ieee80211_vif *vif, struct ieee80211_sta *sta, struct ieee80211_key_conf *key)
{
  #line 1421 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1422 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1423 
  int ret = 0;
  #line 1425 
  if (htc_modparam_nohwcrypt != 0) 
                                   #line 1426 
                                   return -28;
  #line 1428 
  if (((vif->type == (unsigned int)NL80211_IFTYPE_ADHOC || vif->type == (unsigned int)NL80211_IFTYPE_MESH_POINT) && (key->cipher == 1027074U || key->cipher == 1027076U)) && ((int)key->flags & 8) == 0) 
    #line 1440 
    return -95;
  #line 1443 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1444 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1444 
                                       ath_printk((char *)"\001",common,(char *)"Set HW Key\n");
  #line 1445 
  ath9k_htc_ps_wakeup(priv);
  #line 1447 
  switch ((unsigned int)cmd) {
    #line 1448 
    case (unsigned int)0: 
                          #line 1448 
    ;
    #line 1449 
    ret = ath_key_config(common,vif,sta,key);
    #line 1450 
    if (ret >= 0) {
      #line 1451 
      key->hw_key_idx = (unsigned char)ret;
      #line 1453 
      key->flags = (unsigned short)((unsigned int)key->flags | 2U);
      #line 1454 
      if (key->cipher == 1027074U) 
                                   #line 1455 
                                   key->flags = (unsigned short)((unsigned int)key->flags | 4U);
      #line 1456 
      if ((int)(priv->ah)->sw_mgmt_crypto_tx != 0 && key->cipher == 1027076U) 
        #line 1458 
        key->flags = (unsigned short)((unsigned int)key->flags | 16U);
      #line 1459 
      ret = 0;
    }
    #line 1461 
    break;
    #line 1462 
    case (unsigned int)1: 
                          #line 1462 
    ;
    #line 1463 
    ath_key_delete(common,key);
    #line 1464 
    break;
    #line 1465 
    default: 
             #line 1465 
    ;
    #line 1466 
    ret = -22;
  }
  #line 1469 
  ath9k_htc_ps_restore(priv);
  #line 1470 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1472 
  return ret;
}

#line 1475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_set_bssid(struct ath9k_htc_priv *priv)
{
  #line 1477 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1479 
  ath9k_hw_write_associd(priv->ah);
  #line 1480 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1480 
                                       ath_printk((char *)"\001",common,(char *)"BSSID: %pM aid: 0x%x\n",(u8 *)(& common->curbssid),(int)common->curaid);
  #line 1481 
  return;
}

#line 1484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_bss_iter(void *data, u8 *mac, struct ieee80211_vif *vif)
{
  #line 1486 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)data;
  #line 1487 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1488 
  struct ieee80211_bss_conf *bss_conf = & vif->bss_conf;
  #line 1490 
  if (vif->type == (unsigned int)NL80211_IFTYPE_STATION && (int)bss_conf->assoc != 0) {
    #line 1491 
    common->curaid = bss_conf->aid;
    #line 1492 
    common->last_rssi = 127;
    #line 1493 
    memcpy((void *)(& common->curbssid),(void *)bss_conf->bssid,6UL);
    #line 1494 
    cif_set_bit_1(3L,& common->op_flags);
  }
  #line 1496 
  return;
}

#line 1498  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_choose_set_bssid(struct ath9k_htc_priv *priv)
{
  #line 1500 
  if ((unsigned int)priv->num_sta_assoc_vif == 1U) {
    #line 1501 
    ieee80211_iterate_active_interfaces_atomic(priv->hw,1U,& ath9k_htc_bss_iter,(void *)priv);
    #line 1504 
    ath9k_htc_set_bssid(priv);
  }
  #line 1506 
  return;
}

#line 1508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *bss_conf, u32 changed)
{
  #line 1516 
  int slottime;
  #line 1513 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1514 
  struct ath_hw *ah = priv->ah;
  #line 1515 
  struct ath_common *common = ath9k_hw_common(ah);
  #line 1518 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1519 
  ath9k_htc_ps_wakeup(priv);
  #line 1521 
  if ((changed & 1U) != 0U) {
    #line 1522 
    if ((common->debug_mask & 512) != 0) 
                                         #line 1522 
                                         ath_printk((char *)"\001",common,(char *)"BSS Changed ASSOC %d\n",(int)bss_conf->assoc);
    #line 1526 
    if ((int)bss_conf->assoc != 0) {
      #line 1526 
      priv->num_sta_assoc_vif = (u8)((int)priv->num_sta_assoc_vif + 1);
      #line 1526 
      int tmp_2 = (int)priv->num_sta_assoc_vif;
    }
    else {
      #line 1526 
      priv->num_sta_assoc_vif = (u8)((int)priv->num_sta_assoc_vif - 1);
      #line 1526 
      int tmp_4 = (int)priv->num_sta_assoc_vif;
    }
    #line 1528 
    if (! bss_conf->assoc) 
                           #line 1529 
                           cif_clear_bit_0(3L,& common->op_flags);
    #line 1531 
    if ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_STATION) {
      #line 1532 
      ath9k_htc_choose_set_bssid(priv);
      #line 1533 
      if ((int)bss_conf->assoc != 0 && (unsigned int)priv->num_sta_assoc_vif == 1U) 
        #line 1534 
        ath9k_htc_start_ani(priv);
      else 
        #line 1535 
        if ((unsigned int)priv->num_sta_assoc_vif == 0U) 
                                                         #line 1536 
                                                         ath9k_htc_stop_ani(priv);
    }
  }
  #line 1540 
  if ((changed & 2048U) != 0U) 
    #line 1541 
    if ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
      #line 1542 
      common->curaid = bss_conf->aid;
      #line 1543 
      memcpy((void *)(& common->curbssid),(void *)bss_conf->bssid,6UL);
      #line 1544 
      ath9k_htc_set_bssid(priv);
    }
  #line 1548 
  if ((changed & 512U) != 0U && (int)bss_conf->enable_beacon != 0) {
    #line 1549 
    if ((common->debug_mask & 512) != 0) 
                                         #line 1549 
                                         ath_printk((char *)"\001",common,(char *)"Beacon enabled for BSS: %pM\n",bss_conf->bssid);
    #line 1551 
    ath9k_htc_set_tsfadjust(priv,vif);
    #line 1552 
    priv->cur_beacon_conf.enable_beacon = (unsigned char)1U;
    #line 1553 
    ath9k_htc_beacon_config(priv,vif);
  }
  #line 1556 
  if ((changed & 512U) != 0U && ! bss_conf->enable_beacon) 
    #line 1561 
    if ((int)priv->num_ap_vif + (int)priv->num_mbss_vif <= 1 || (unsigned int)priv->num_ibss_vif != 0U) {
      #line 1563 
      if ((common->debug_mask & 512) != 0) 
                                           #line 1563 
                                           ath_printk((char *)"\001",common,(char *)"Beacon disabled for BSS: %pM\n",bss_conf->bssid);
      #line 1566 
      priv->cur_beacon_conf.enable_beacon = (unsigned char)0U;
      #line 1567 
      ath9k_htc_beacon_config(priv,vif);
    }
  #line 1571 
  if ((changed & 64U) != 0U) {
    #line 1575 
    if ((unsigned int)priv->nvifs == 1U && (((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_AP && vif->type == (unsigned int)NL80211_IFTYPE_AP) && (unsigned int)priv->num_ap_vif == 1U || ((priv->ah)->opmode == (unsigned int)NL80211_IFTYPE_MESH_POINT && vif->type == (unsigned int)NL80211_IFTYPE_MESH_POINT) && (unsigned int)priv->num_mbss_vif == 1U)) 
      #line 1582 
      cif_set_bit_1(6L,& priv->op_flags);
    #line 1584 
    if ((common->debug_mask & 512) != 0) 
                                         #line 1584 
                                         ath_printk((char *)"\001",common,(char *)"Beacon interval changed for BSS: %pM\n",bss_conf->bssid);
    #line 1587 
    ath9k_htc_beacon_config(priv,vif);
  }
  #line 1590 
  if ((changed & 8U) != 0U) {
    #line 1591 
    if ((int)bss_conf->use_short_slot != 0) 
                                            #line 1592 
                                            slottime = 9; else 
                                                               #line 1594 
                                                               slottime = 20;
    #line 1595 
    if (vif->type == (unsigned int)NL80211_IFTYPE_AP) {
      #line 1601 
      priv->beacon.slottime = slottime;
      #line 1602 
      priv->beacon.updateslot = UPDATE;
    }
    else {
      #line 1604 
      ah->slottime = (unsigned int)slottime;
      #line 1605 
      ath9k_hw_init_global_settings(ah);
    }
  }
  #line 1609 
  if ((changed & 16U) != 0U) 
                             #line 1610 
                             ath9k_htc_update_rate(priv,vif,bss_conf);
  #line 1612 
  ath9k_htc_ps_restore(priv);
  #line 1613 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1614 
  return;
}

#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static u64 ath9k_htc_get_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1620 
  u64 tsf;
  #line 1619 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1622 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1623 
  ath9k_htc_ps_wakeup(priv);
  #line 1624 
  tsf = ath9k_hw_gettsf64(priv->ah);
  #line 1625 
  ath9k_htc_ps_restore(priv);
  #line 1626 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1628 
  return tsf;
}

#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_set_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u64 tsf)
{
  #line 1634 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1636 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1637 
  ath9k_htc_ps_wakeup(priv);
  #line 1638 
  ath9k_hw_settsf64(priv->ah,tsf);
  #line 1639 
  ath9k_htc_ps_restore(priv);
  #line 1640 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1641 
  return;
}

#line 1643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_reset_tsf(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1646 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1648 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1649 
  ath9k_htc_ps_wakeup(priv);
  #line 1650 
  ath9k_hw_reset_tsf(priv->ah);
  #line 1651 
  ath9k_htc_ps_restore(priv);
  #line 1652 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1653 
  return;
}

#line 1655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_ampdu_action(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_ampdu_params *params)
{
  #line 1660 
  struct ath9k_htc_sta *ista;
  #line 1659 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1661 
  int ret = 0;
  #line 1662 
  struct ieee80211_sta *sta = params->sta;
  #line 1663 
  enum ieee80211_ampdu_mlme_action action = params->action;
  #line 1664 
  u16 tid = params->tid;
  #line 1666 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1667 
  ath9k_htc_ps_wakeup(priv);
  #line 1669 
  switch ((unsigned int)action) {
    #line 1670 
    case (unsigned int)0: 
                          #line 1670 
    ;
    #line 1671 
    break;
    #line 1672 
    case (unsigned int)1: 
                          #line 1672 
    ;
    #line 1673 
    break;
    #line 1674 
    case (unsigned int)2: 
                          #line 1674 
    ;
    #line 1675 
    ret = ath9k_htc_tx_aggr_oper(priv,vif,sta,action,(unsigned short)((int)tid));
    #line 1676 
    if (ret == 0) 
                  #line 1677 
                  ret = 1;
    #line 1678 
    break;
    #line 1679 
    case (unsigned int)3: 
                          #line 1679 
    ;
    #line 1680 
    case (unsigned int)4: 
                          #line 1680 
    ;
    #line 1681 
    case (unsigned int)5: 
                          #line 1681 
    ;
    #line 1682 
    ath9k_htc_tx_aggr_oper(priv,vif,sta,action,(unsigned short)((int)tid));
    #line 1683 
    ieee80211_stop_tx_ba_cb_irqsafe(vif,(u8 *)(& sta->addr),(unsigned short)((int)tid));
    #line 1684 
    break;
    #line 1685 
    case (unsigned int)6: 
                          #line 1685 
    ;
    #line 1686 
    if ((unsigned int)tid > 7U) {
      #line 1687 
      ret = -22;
      #line 1688 
      break;
    }
    #line 1690 
    ista = (struct ath9k_htc_sta *)(& sta->drv_priv);
    #line 1691 
    cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_3(& priv->tx.tx_lock);
    #line 1692 
    ista->tid_state[(int)tid] = AGGR_OPERATIONAL;
    #line 1693 
    cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_3(& priv->tx.tx_lock);
    #line 1694 
    break;
    #line 1695 
    default: 
             #line 1695 
    ;
    #line 1696 
    ath_printk((char *)"\001",ath9k_hw_common(priv->ah),(char *)"Unknown AMPDU action\n");
  }
  #line 1699 
  ath9k_htc_ps_restore(priv);
  #line 1700 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1702 
  return ret;
}

#line 1705  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_sw_scan_start(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u8 *mac_addr)
{
  #line 1709 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1710 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1712 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1713 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv_0(& priv->beacon_lock);
  #line 1714 
  cif_set_bit_1(5L,& common->op_flags);
  #line 1715 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv_0(& priv->beacon_lock);
  #line 1716 
  cancel_work_sync(& priv->ps_work);
  #line 1717 
  ath9k_htc_stop_ani(priv);
  #line 1718 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1719 
  return;
}

#line 1721  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_sw_scan_complete(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 1724 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1725 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1727 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1728 
  cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv_0(& priv->beacon_lock);
  #line 1729 
  cif_clear_bit_0(5L,& common->op_flags);
  #line 1730 
  cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv_0(& priv->beacon_lock);
  #line 1731 
  ath9k_htc_ps_wakeup(priv);
  #line 1732 
  ath9k_htc_vif_reconfig(priv);
  #line 1733 
  ath9k_htc_ps_restore(priv);
  #line 1734 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1735 
  return;
}

#line 1737  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_set_rts_threshold(struct ieee80211_hw *hw, u32 value)
{
  #line 1739 
  return 0;
}

#line 1742  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_set_coverage_class(struct ieee80211_hw *hw, s16 coverage_class)
{
  #line 1745 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1747 
  cif_mutex_lock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1748 
  ath9k_htc_ps_wakeup(priv);
  #line 1749 
  (priv->ah)->coverage_class = (int)coverage_class;
  #line 1750 
  ath9k_hw_init_global_settings(priv->ah);
  #line 1751 
  ath9k_htc_ps_restore(priv);
  #line 1752 
  cif_mutex_unlock_mutex_of_ath9k_htc_priv(& priv->mutex);
  #line 1753 
  return;
}

#line 1760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_set_bitrate_mask(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct cfg80211_bitrate_mask *mask)
{
  #line 1766 
  struct ath9k_htc_target_rate_mask tmask;
  #line 1769 
  u8 cmd_rsp;
  #line 1764 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1765 
  struct ath_common *common = ath9k_hw_common(priv->ah);
  #line 1767 
  struct ath9k_htc_vif *avp = (struct ath9k_htc_vif *)(& vif->drv_priv);
  #line 1768 
  int ret = 0;
  #line 1771 
  memset((void *)(& tmask),0,8UL);
  #line 1773 
  tmask.vif_index = avp->index;
  #line 1774 
  tmask.band = (unsigned char)0U;
  #line 1775 
  tmask.mask = __builtin_bswap32(mask->control[0].legacy);
  #line 1777 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_BITRATE_MASK_CMDID,(u8 *)(& tmask),8U,& cmd_rsp,1U,500U);
  #line 1778 
  if (ret != 0) {
    #line 1779 
    ath_printk((char *)"\001",common,(char *)"Unable to set 2G rate mask for ",(int)avp->index);
    #line 1782 
    goto out;
  }
  #line 1785 
  tmask.band = (unsigned char)1U;
  #line 1786 
  tmask.mask = __builtin_bswap32(mask->control[1].legacy);
  #line 1788 
  ret = ath9k_wmi_cmd(priv->wmi,(enum wmi_cmd_id)WMI_BITRATE_MASK_CMDID,(u8 *)(& tmask),8U,& cmd_rsp,1U,500U);
  #line 1789 
  if (ret != 0) {
    #line 1790 
    ath_printk((char *)"\001",common,(char *)"Unable to set 5G rate mask for ",(int)avp->index);
    #line 1793 
    goto out;
  }
  #line 1796 
  if ((common->debug_mask & 512) != 0) 
                                       #line 1796 
                                       ath_printk((char *)"\001",common,(char *)"Set bitrate masks: 0x%x, 0x%x\n",mask->control[0].legacy,mask->control[1].legacy);
  #line 1799 
  out: 
       #line 1799 
  ;
  #line 1800 
  return ret;
}

#line 1804  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_get_stats(struct ieee80211_hw *hw, struct ieee80211_low_level_stats *stats)
{
  #line 1807 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1808 
  struct ath_hw *ah = priv->ah;
  #line 1809 
  struct ath9k_mib_stats *mib_stats = & ah->stats.ast_mibstats;
  #line 1811 
  stats->dot11ACKFailureCount = mib_stats->ackrcv_bad;
  #line 1812 
  stats->dot11RTSFailureCount = mib_stats->rts_bad;
  #line 1813 
  stats->dot11FCSErrorCount = mib_stats->fcs_bad;
  #line 1814 
  stats->dot11RTSSuccessCount = mib_stats->rts_good;
  #line 1816 
  return 0;
}

#line 1819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
struct base_eep_header *ath9k_htc_get_eeprom_base(struct ath9k_htc_priv *priv)
{
  #line 1821 
  struct base_eep_header *pBase = (struct base_eep_header *)0;
  #line 1828 
  if ((priv->ah)->hw_version.macVersion == 320U) 
                                                 #line 1829 
                                                 pBase = (struct base_eep_header *)(& (priv->ah)->eeprom.map4k.baseEepHeader);
  else 
    #line 1831 
    if ((priv->ah)->hw_version.usbdev == (unsigned int)AR9280_USB) 
                                                                   #line 1832 
                                                                   pBase = & (priv->ah)->eeprom.def.baseEepHeader;
    else 
      #line 1834 
      if ((priv->ah)->hw_version.usbdev == (unsigned int)AR9287_USB) 
        #line 1835 
        pBase = (struct base_eep_header *)(& (priv->ah)->eeprom.map9287.baseEepHeader);
  #line 1837 
  return pBase;
}

#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static int ath9k_htc_get_antenna(struct ieee80211_hw *hw, u32 *tx_ant, u32 *rx_ant)
{
  #line 1844 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1845 
  struct base_eep_header *pBase = ath9k_htc_get_eeprom_base(priv);
  #line 1846 
  if (pBase != (struct base_eep_header *)0) {
    #line 1847 
    *tx_ant = (unsigned int)pBase->txMask;
    #line 1848 
    *rx_ant = (unsigned int)pBase->rxMask;
  }
  else {
    #line 1850 
    *tx_ant = 0U;
    #line 1851 
    *rx_ant = 0U;
  }
  #line 1853 
  return 0;
}

#line 1856  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
static void ath9k_htc_channel_switch_beacon(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct cfg80211_chan_def *chandef)
{
  #line 1863 
  int __ret_warn_on;
  #line 1860 
  struct ath9k_htc_priv *priv = (struct ath9k_htc_priv *)hw->priv;
  #line 1863 
  __ret_warn_on = priv->csa_vif != (struct ieee80211_vif *)0;
  #line 1863 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 1864 
    ldv_inline_asm();
    #line 1865 
    ldv_inline_asm();
  }
  #line 1863 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 1864 
                                                return;
  #line 1866 
  priv->csa_vif = vif;
  #line 1867 
  return;
}

#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ath/ath9k/htc_drv_main.c"
struct ieee80211_ops ath9k_htc_ops = {.tx = & ath9k_htc_tx, .start = & ath9k_htc_start, .stop = & ath9k_htc_stop, .add_interface = & ath9k_htc_add_interface, .remove_interface = & ath9k_htc_remove_interface, .config = & ath9k_htc_config, .bss_info_changed = & ath9k_htc_bss_info_changed, .configure_filter = & ath9k_htc_configure_filter, .set_key = & ath9k_htc_set_key, .sw_scan_start = & ath9k_htc_sw_scan_start, .sw_scan_complete = & ath9k_htc_sw_scan_complete, .get_stats = & ath9k_htc_get_stats, .set_rts_threshold = & ath9k_htc_set_rts_threshold, .sta_add = & ath9k_htc_sta_add, .sta_remove = & ath9k_htc_sta_remove, .sta_rc_update = & ath9k_htc_sta_rc_update, .conf_tx = & ath9k_htc_conf_tx, .get_tsf = & ath9k_htc_get_tsf, .set_tsf = & ath9k_htc_set_tsf, .reset_tsf = & ath9k_htc_reset_tsf, .ampdu_action = & ath9k_htc_ampdu_action, .rfkill_poll = & ath9k_htc_rfkill_poll_state, .set_coverage_class = & ath9k_htc_set_coverage_class, .get_antenna = & ath9k_htc_get_antenna, .set_bitrate_mask = & ath9k_htc_set_bitrate_mask, .get_et_sset_count = & ath9k_htc_get_et_sset_count, .get_et_stats = & ath9k_htc_get_et_stats, .get_et_strings = & ath9k_htc_get_et_strings, .channel_switch_beacon = & ath9k_htc_channel_switch_beacon};
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
#line 95 
int emg_del_timer_sync(struct timer_list *arg0);
#line 99 
#line 99 
_Bool emg_schedule_work(struct work_struct *arg0);
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_add_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 110 
  return ath9k_htc_add_interface(arg0,arg1);
}

#line 114  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_ampdu_action(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_ampdu_params *arg2)
{
  #line 115 
  return ath9k_htc_ampdu_action(arg0,arg1,arg2);
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_bss_info_changed(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  #line 120 
  ath9k_htc_bss_info_changed(arg0,arg1,arg2,arg3);
  #line 121 
  return;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_channel_switch_beacon(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct cfg80211_chan_def *arg2)
{
  #line 125 
  ath9k_htc_channel_switch_beacon(arg0,arg1,arg2);
  #line 126 
  return;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_conf_tx(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  #line 130 
  return ath9k_htc_conf_tx(arg0,arg1,(unsigned short)((int)arg2),arg3);
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_config(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 135 
  return ath9k_htc_config(arg0,arg1);
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_configure_filter(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  #line 140 
  ath9k_htc_configure_filter(arg0,arg1,arg2,arg3);
  #line 141 
  return;
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_get_antenna(struct ieee80211_hw *arg0, unsigned int *arg1, unsigned int *arg2)
{
  #line 145 
  return ath9k_htc_get_antenna(arg0,arg1,arg2);
}

#line 149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_get_stats(struct ieee80211_hw *arg0, struct ieee80211_low_level_stats *arg1)
{
  #line 150 
  return ath9k_htc_get_stats(arg0,arg1);
}

#line 154  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
unsigned long long emg_wrapper_ath9k_htc_get_tsf(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 155 
  return ath9k_htc_get_tsf(arg0,arg1);
}

#line 159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_remove_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 160 
  ath9k_htc_remove_interface(arg0,arg1);
  #line 161 
  return;
}

#line 164  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_reset_tsf(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 165 
  ath9k_htc_reset_tsf(arg0,arg1);
  #line 166 
  return;
}

#line 169  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_set_bitrate_mask(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct cfg80211_bitrate_mask *arg2)
{
  #line 170 
  return ath9k_htc_set_bitrate_mask(arg0,arg1,arg2);
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_set_coverage_class(struct ieee80211_hw *arg0, short arg1)
{
  #line 175 
  ath9k_htc_set_coverage_class(arg0,(short)((int)arg1));
  #line 176 
  return;
}

#line 179  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_set_key(struct ieee80211_hw *arg0, enum set_key_cmd arg1, struct ieee80211_vif *arg2, struct ieee80211_sta *arg3, struct ieee80211_key_conf *arg4)
{
  #line 180 
  return ath9k_htc_set_key(arg0,arg1,arg2,arg3,arg4);
}

#line 184  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_set_rts_threshold(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 185 
  return ath9k_htc_set_rts_threshold(arg0,arg1);
}

#line 189  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_set_tsf(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned long long arg2)
{
  #line 190 
  ath9k_htc_set_tsf(arg0,arg1,arg2);
  #line 191 
  return;
}

#line 194  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_sta_add(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2)
{
  #line 195 
  return ath9k_htc_sta_add(arg0,arg1,arg2);
}

#line 199  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_sta_rc_update(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2, unsigned int arg3)
{
  #line 200 
  ath9k_htc_sta_rc_update(arg0,arg1,arg2,arg3);
  #line 201 
  return;
}

#line 204  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_sta_remove(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_sta *arg2)
{
  #line 205 
  return ath9k_htc_sta_remove(arg0,arg1,arg2);
}

#line 209  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
int emg_wrapper_ath9k_htc_start(struct ieee80211_hw *arg0)
{
  #line 210 
  return ath9k_htc_start(arg0);
}

#line 214  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_sw_scan_complete(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 215 
  ath9k_htc_sw_scan_complete(arg0,arg1);
  #line 216 
  return;
}

#line 219  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_sw_scan_start(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned char *arg2)
{
  #line 220 
  ath9k_htc_sw_scan_start(arg0,arg1,arg2);
  #line 221 
  return;
}

#line 224  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
void emg_wrapper_ath9k_htc_tx(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  #line 225 
  ath9k_htc_tx(arg0,arg1,arg2);
  #line 226 
  return;
}

#line 244  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_set_bit_1(long nr, unsigned long *addr)
{
  #line 247 
  ldv_set_bit(nr,addr);
  #line 248 
  return;
}

#line 251  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_clear_bit_0(long nr, unsigned long *addr)
{
  #line 254 
  ldv_clear_bit(nr,addr);
  #line 255 
  return;
}

#line 258  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void INIT_LIST_HEAD_4(struct list_head *list)
{
  #line 261 
  ldv_init_list_head(list);
  #line 262 
  return;
}

#line 781  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static bool cif_schedule_work(struct work_struct *work)
{
  #line 785 
  return emg_schedule_work(work);
}

#line 923  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_mutex_lock_htc_pm_lock_of_ath9k_htc_priv(struct mutex *lock)
{
  #line 926 
  ldv_mutex_model_lock(lock,(char *)"htc_pm_lock_of_ath9k_htc_priv");
  #line 927 
  return;
}

#line 930  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_mutex_unlock_htc_pm_lock_of_ath9k_htc_priv(struct mutex *lock)
{
  #line 933 
  ldv_mutex_model_unlock(lock,(char *)"htc_pm_lock_of_ath9k_htc_priv");
  #line 934 
  return;
}

#line 937  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_mutex_lock_mutex_of_ath9k_htc_priv(struct mutex *lock)
{
  #line 940 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_ath9k_htc_priv");
  #line 941 
  return;
}

#line 944  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static int cif_del_timer_sync(struct timer_list *timer)
{
  #line 948 
  return emg_del_timer_sync(timer);
}

#line 952  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static int cif_mod_timer_0(struct timer_list *timer, unsigned long expires)
{
  #line 956 
  return emg_mod_timer(timer,expires);
}

#line 960  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_mutex_unlock_mutex_of_ath9k_htc_priv(struct mutex *lock)
{
  #line 963 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_ath9k_htc_priv");
  #line 964 
  return;
}

#line 967  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_lock_bh_tx_lock_of_ath9k_htc_tx_3(spinlock_t *lock)
{
  #line 970 
  ldv_spin_model_lock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 972 
  spin_lock_bh_3(lock);
  #line 973 
  return;
}

#line 976  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_unlock_bh_tx_lock_of_ath9k_htc_tx_3(spinlock_t *lock)
{
  #line 979 
  ldv_spin_model_unlock((char *)"tx_lock_of_ath9k_htc_tx");
  #line 981 
  spin_unlock_bh_3(lock);
  #line 982 
  return;
}

#line 985  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_lock_bh_beacon_lock_of_ath9k_htc_priv_0(spinlock_t *lock)
{
  #line 988 
  ldv_spin_model_lock((char *)"beacon_lock_of_ath9k_htc_priv");
  #line 990 
  spin_lock_bh_3(lock);
  #line 991 
  return;
}

#line 994  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/0/concurrency safety/weaver/htc_drv_main.i.aux"
static void cif_spin_unlock_bh_beacon_lock_of_ath9k_htc_priv_0(spinlock_t *lock)
{
  #line 997 
  ldv_spin_model_unlock((char *)"beacon_lock_of_ath9k_htc_priv");
  #line 999 
  spin_unlock_bh_3(lock);
  #line 1000 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 87 
#line 87 
void ldv_failed_usb_register_driver(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  #line 26 
  return (void *)error;
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 103  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
#line 262 
void emg_dispatch_deregister_11(struct usb_driver *arg0);
#line 104 
#line 242 
void emg_dispatch_deregister_6(struct ieee80211_hw *arg0);
#line 105 
#line 222 
void emg_dispatch_instance_deregister_4(struct timer_list *arg0);
#line 106 
#line 251 
void emg_dispatch_instance_register_7(struct timer_list *arg0);
#line 107 
#line 271 
void emg_dispatch_register_13(struct usb_driver *arg0);
#line 108 
#line 149 
void emg_dispatch_register_3(struct file_operations *arg0);
#line 109 
#line 231 
void emg_dispatch_register_5(struct ieee80211_hw *arg0);
#line 110 
#line 2834 
void *emg_entry_point_insmod(void *arg0);
#line 111 
#line 282 
void *emg_file_operations_character_driver_scenario_fops_debug(void *arg0);
#line 112 
#line 459 
void *emg_file_operations_character_driver_scenario_fops_queue(void *arg0);
#line 113 
#line 638 
void *emg_file_operations_character_driver_scenario_fops_skb_rx(void *arg0);
#line 114 
#line 817 
void *emg_file_operations_character_driver_scenario_fops_slot(void *arg0);
#line 115 
#line 996 
void *emg_file_operations_character_driver_scenario_fops_tgt_int_stats(void *arg0);
#line 116 
#line 1175 
void *emg_file_operations_character_driver_scenario_fops_tgt_rx_stats(void *arg0);
#line 117 
#line 1354 
void *emg_file_operations_character_driver_scenario_fops_tgt_tx_stats(void *arg0);
#line 118 
#line 1533 
void *emg_file_operations_character_driver_scenario_fops_xmit(void *arg0);
#line 121 
#line 1712 
void *emg_ieee80211_ieee80211_scenario_ath9k_htc_ops(void *arg0);
#line 126 
#line 2306 
void *emg_timer_timer_scenario_9(void *arg0);
#line 131 
#line 2348 
void *emg_usb_usb_scenario_ath9k_hif_usb_driver(void *arg0);
#line 132 
#line 2863 
int main(void);
#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_16;
#line 137  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_17;
#line 138  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_18;
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_19;
#line 140  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_20;
#line 141  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_21;
#line 142  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_22;
#line 143  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_23;
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_24;
#line 145  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_25;
#line 149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_3(struct file_operations *arg0)
{
  #line 150 
  int ret;
  #line 151 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_15;
  #line 152 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_16;
  #line 153 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_17;
  #line 154 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_18;
  #line 155 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_19;
  #line 156 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_20;
  #line 157 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_21;
  #line 158 
  struct emg_struct_character_driver_scenario_fops_debug_15 *cf_arg_22;
  #line 159 
  switch (ldv_undef_int()) {
    #line 160 
    case 0: 
            #line 160 
    ;
    #line 161 
    cf_arg_15 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 162 
    cf_arg_15->arg0 = arg0;
    #line 163 
    ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_debug,(void *)cf_arg_15);
    #line 164 
    __VERIFIER_assume(ret == 0);
    #line 165 
    break;
    #line 167 
    case 1: 
            #line 167 
    ;
    #line 168 
    cf_arg_16 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 169 
    cf_arg_16->arg0 = arg0;
    #line 170 
    ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_queue,(void *)cf_arg_16);
    #line 171 
    __VERIFIER_assume(ret == 0);
    #line 172 
    break;
    #line 174 
    case 2: 
            #line 174 
    ;
    #line 175 
    cf_arg_17 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 176 
    cf_arg_17->arg0 = arg0;
    #line 177 
    ret = pthread_create(& emg_thread_17,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_skb_rx,(void *)cf_arg_17);
    #line 178 
    __VERIFIER_assume(ret == 0);
    #line 179 
    break;
    #line 181 
    case 3: 
            #line 181 
    ;
    #line 182 
    cf_arg_18 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 183 
    cf_arg_18->arg0 = arg0;
    #line 184 
    ret = pthread_create(& emg_thread_18,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_slot,(void *)cf_arg_18);
    #line 185 
    __VERIFIER_assume(ret == 0);
    #line 186 
    break;
    #line 188 
    case 4: 
            #line 188 
    ;
    #line 189 
    cf_arg_19 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 190 
    cf_arg_19->arg0 = arg0;
    #line 191 
    ret = pthread_create(& emg_thread_19,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_tgt_int_stats,(void *)cf_arg_19);
    #line 192 
    __VERIFIER_assume(ret == 0);
    #line 193 
    break;
    #line 195 
    case 5: 
            #line 195 
    ;
    #line 196 
    cf_arg_20 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 197 
    cf_arg_20->arg0 = arg0;
    #line 198 
    ret = pthread_create(& emg_thread_20,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_tgt_rx_stats,(void *)cf_arg_20);
    #line 199 
    __VERIFIER_assume(ret == 0);
    #line 200 
    break;
    #line 202 
    case 6: 
            #line 202 
    ;
    #line 203 
    cf_arg_21 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 204 
    cf_arg_21->arg0 = arg0;
    #line 205 
    ret = pthread_create(& emg_thread_21,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_tgt_tx_stats,(void *)cf_arg_21);
    #line 206 
    __VERIFIER_assume(ret == 0);
    #line 207 
    break;
    #line 209 
    case 7: 
            #line 209 
    ;
    #line 210 
    cf_arg_22 = (struct emg_struct_character_driver_scenario_fops_debug_15 *)ldv_xmalloc(16UL);
    #line 211 
    cf_arg_22->arg0 = arg0;
    #line 212 
    ret = pthread_create(& emg_thread_22,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_fops_xmit,(void *)cf_arg_22);
    #line 213 
    __VERIFIER_assume(ret == 0);
    #line 214 
    break;
    #line 216 
    default: 
             #line 216 
    ;
    #line 216 
    __VERIFIER_assume(0);
  }
  #line 218 
  return;
}

#line 222  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_instance_deregister_4(struct timer_list *arg0)
{
  #line 223 
  int ret;
  #line 224 
  struct emg_struct_timer_scenario_9_24 *cf_arg_24;
  #line 225 
  ret = pthread_join(emg_thread_24,(void **)0);
  #line 226 
  __VERIFIER_assume(ret == 0);
  #line 227 
  return;
}

#line 231  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_5(struct ieee80211_hw *arg0)
{
  #line 232 
  int ret;
  #line 233 
  struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 *cf_arg_23;
  #line 234 
  cf_arg_23 = (struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 *)ldv_xmalloc(16UL);
  #line 235 
  cf_arg_23->arg0 = arg0;
  #line 236 
  ret = pthread_create(& emg_thread_23,(pthread_attr_t *)0,& emg_ieee80211_ieee80211_scenario_ath9k_htc_ops,(void *)cf_arg_23);
  #line 237 
  __VERIFIER_assume(ret == 0);
  #line 238 
  return;
}

#line 242  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_6(struct ieee80211_hw *arg0)
{
  #line 243 
  int ret;
  #line 244 
  struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 *cf_arg_23;
  #line 245 
  ret = pthread_join(emg_thread_23,(void **)0);
  #line 246 
  __VERIFIER_assume(ret == 0);
  #line 247 
  return;
}

#line 251  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_instance_register_7(struct timer_list *arg0)
{
  #line 252 
  int ret;
  #line 253 
  struct emg_struct_timer_scenario_9_24 *cf_arg_24;
  #line 254 
  cf_arg_24 = (struct emg_struct_timer_scenario_9_24 *)ldv_xmalloc(16UL);
  #line 255 
  cf_arg_24->arg0 = arg0;
  #line 256 
  ret = pthread_create(& emg_thread_24,(pthread_attr_t *)0,& emg_timer_timer_scenario_9,(void *)cf_arg_24);
  #line 257 
  __VERIFIER_assume(ret == 0);
  #line 258 
  return;
}

#line 262  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_11(struct usb_driver *arg0)
{
  #line 263 
  int ret;
  #line 264 
  struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 *cf_arg_25;
  #line 265 
  ret = pthread_join(emg_thread_25,(void **)0);
  #line 266 
  __VERIFIER_assume(ret == 0);
  #line 267 
  return;
}

#line 271  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_13(struct usb_driver *arg0)
{
  #line 272 
  int ret;
  #line 273 
  struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 *cf_arg_25;
  #line 274 
  cf_arg_25 = (struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 *)ldv_xmalloc(16UL);
  #line 275 
  cf_arg_25->arg0 = arg0;
  #line 276 
  ret = pthread_create(& emg_thread_25,(pthread_attr_t *)0,& emg_usb_usb_scenario_ath9k_hif_usb_driver,(void *)cf_arg_25);
  #line 277 
  __VERIFIER_assume(ret == 0);
  #line 278 
  return;
}

#line 282  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_debug(void *arg0)
{
  #line 285 
  struct file_operations *emg_15_container;
  #line 286 
  long long emg_15_emg_param_1_0;
  #line 287 
  char *emg_15_emg_param_1_2;
  #line 288 
  char *emg_15_emg_param_1_4;
  #line 289 
  int emg_15_emg_param_2_1;
  #line 290 
  long long *emg_15_emg_param_3_3;
  #line 291 
  long long *emg_15_emg_param_3_5;
  #line 292 
  struct file *emg_15_resource_0;
  #line 293 
  struct inode *emg_15_resource_1;
  #line 294 
  int emg_15_ret;
  #line 295 
  unsigned long emg_15_size_cnt;
  #line 296 
  int emg_repeat_cnt_main_15_1 = 1;
  #line 297 
  int emg_repeat_cnt_main_15_0 = 1;
  #line 298 
  int emg_repeat_cnt_call_15 = 1;
  #line 300 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 304 
  emg_15_ret = ldv_undef_int();
  #line 305 
  emg_15_container = emg_alias_fops_debug;
  #line 306 
  emg_15_ret = ldv_undef_int();
  #line 308 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_debug);
  #line 310 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 311 
    emg_15_container = data->arg0;
    #line 312 
    ldv_free((void *)data);
  }
  #line 317 
  emg_15_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 318 
  emg_15_size_cnt = (unsigned long)ldv_undef_int();
  #line 322 
  goto emg_main_15;
  #line 326 
  return (void *)0;
  #line 329 
  emg_call_15: 
               #line 329 
  ;
  #line 330 
  if (ldv_undef_int() != 0) {
    #line 331 
    switch (ldv_undef_int()) {
      #line 332 
      case 0: 
              #line 332 
      ;
      #line 334 
      emg_15_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 334 
      emg_15_emg_param_1_2 = emg_15_emg_param_1_2;
      #line 335 
      emg_15_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 335 
      emg_15_emg_param_3_3 = emg_15_emg_param_3_3;
      #line 339 
      emg_wrapper_read_file_debug(emg_15_resource_0,emg_15_emg_param_1_2,emg_15_size_cnt,emg_15_emg_param_3_3);
      #line 343 
      ldv_free((void *)emg_15_emg_param_1_2);
      #line 344 
      ldv_free((void *)emg_15_emg_param_3_3);
      #line 346 
      break;
      #line 348 
      case 1: 
              #line 348 
      ;
      #line 350 
      default_llseek(emg_15_resource_0,emg_15_emg_param_1_0,emg_15_emg_param_2_1);
      #line 352 
      break;
      #line 354 
      case 2: 
              #line 354 
      ;
      #line 361 
      __VERIFIER_assume(emg_15_size_cnt <= 2147479552UL);
      #line 362 
      emg_15_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 362 
      emg_15_emg_param_1_4 = emg_15_emg_param_1_4;
      #line 363 
      emg_15_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 363 
      emg_15_emg_param_3_5 = emg_15_emg_param_3_5;
      #line 367 
      emg_wrapper_write_file_debug(emg_15_resource_0,emg_15_emg_param_1_4,emg_15_size_cnt,emg_15_emg_param_3_5);
      #line 371 
      ldv_free((void *)emg_15_emg_param_1_4);
      #line 372 
      ldv_free((void *)emg_15_emg_param_3_5);
      #line 374 
      break;
      #line 376 
      default: 
               #line 376 
      ;
      #line 376 
      __VERIFIER_assume(0);
    }
    #line 379 
    if (emg_repeat_cnt_call_15 > 0) {
      #line 380 
      emg_repeat_cnt_call_15 --;
      #line 382 
      goto emg_call_15;
    }
    else 
         #line 384 
         __VERIFIER_assume(0);
  }
  else {
    #line 390 
    if (emg_15_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 391 
      (*(emg_15_container->release))(emg_15_resource_1,emg_15_resource_0);
    #line 395 
    if (emg_repeat_cnt_main_15_0 > 0) {
      #line 396 
      emg_repeat_cnt_main_15_0 --;
      #line 398 
      goto emg_main_15;
    }
    else 
         #line 400 
         __VERIFIER_assume(0);
  }
  #line 406 
  return (void *)0;
  #line 409 
  emg_main_15: 
               #line 409 
  ;
  #line 410 
  if (ldv_undef_int() != 0) {
    #line 412 
    emg_15_ret = simple_open(emg_15_resource_1,emg_15_resource_0);
    #line 417 
    emg_15_ret = ldv_filter_err_code(emg_15_ret);
    #line 420 
    if (ldv_undef_int() != 0) {
      #line 422 
      __VERIFIER_assume(emg_15_ret == 0);
      #line 426 
      goto emg_call_15;
    }
    else {
      #line 431 
      __VERIFIER_assume(emg_15_ret != 0);
      #line 434 
      if (emg_repeat_cnt_main_15_1 > 0) {
        #line 435 
        emg_repeat_cnt_main_15_1 --;
        #line 437 
        goto emg_main_15;
      }
      else 
           #line 439 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 446 
       ldv_free((void *)emg_15_resource_0);
  #line 454 
  return (void *)0;
}

#line 459  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_queue(void *arg0)
{
  #line 462 
  struct file_operations *emg_16_container;
  #line 463 
  long long emg_16_emg_param_1_0;
  #line 464 
  char *emg_16_emg_param_1_2;
  #line 465 
  char *emg_16_emg_param_1_4;
  #line 466 
  int emg_16_emg_param_2_1;
  #line 467 
  long long *emg_16_emg_param_3_3;
  #line 468 
  long long *emg_16_emg_param_3_5;
  #line 469 
  struct file *emg_16_resource_0;
  #line 470 
  struct inode *emg_16_resource_1;
  #line 471 
  int emg_16_ret;
  #line 472 
  unsigned long emg_16_size_cnt;
  #line 473 
  int emg_repeat_cnt_main_16_1 = 1;
  #line 474 
  int emg_repeat_cnt_main_16_0 = 1;
  #line 475 
  int emg_repeat_cnt_call_16 = 1;
  #line 477 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 481 
  emg_16_ret = ldv_undef_int();
  #line 482 
  emg_16_container = emg_alias_fops_queue;
  #line 483 
  emg_16_ret = ldv_undef_int();
  #line 485 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_queue);
  #line 487 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 488 
    emg_16_container = data->arg0;
    #line 489 
    ldv_free((void *)data);
  }
  #line 494 
  emg_16_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 495 
  emg_16_size_cnt = (unsigned long)ldv_undef_int();
  #line 499 
  goto emg_main_16;
  #line 503 
  return (void *)0;
  #line 506 
  emg_call_16: 
               #line 506 
  ;
  #line 507 
  if (ldv_undef_int() != 0) {
    #line 508 
    switch (ldv_undef_int()) {
      #line 509 
      case 0: 
              #line 509 
      ;
      #line 511 
      emg_16_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 511 
      emg_16_emg_param_1_2 = emg_16_emg_param_1_2;
      #line 512 
      emg_16_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 512 
      emg_16_emg_param_3_3 = emg_16_emg_param_3_3;
      #line 516 
      emg_wrapper_read_file_queue(emg_16_resource_0,emg_16_emg_param_1_2,emg_16_size_cnt,emg_16_emg_param_3_3);
      #line 520 
      ldv_free((void *)emg_16_emg_param_1_2);
      #line 521 
      ldv_free((void *)emg_16_emg_param_3_3);
      #line 523 
      break;
      #line 525 
      case 1: 
              #line 525 
      ;
      #line 527 
      default_llseek(emg_16_resource_0,emg_16_emg_param_1_0,emg_16_emg_param_2_1);
      #line 529 
      break;
      #line 531 
      case 2: 
              #line 531 
      ;
      #line 538 
      __VERIFIER_assume(emg_16_size_cnt <= 2147479552UL);
      #line 539 
      emg_16_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 539 
      emg_16_emg_param_1_4 = emg_16_emg_param_1_4;
      #line 540 
      emg_16_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 540 
      emg_16_emg_param_3_5 = emg_16_emg_param_3_5;
      #line 544 
      if (emg_16_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 545 
        (*(emg_16_container->write))(emg_16_resource_0,emg_16_emg_param_1_4,emg_16_size_cnt,emg_16_emg_param_3_5);
      #line 550 
      ldv_free((void *)emg_16_emg_param_1_4);
      #line 551 
      ldv_free((void *)emg_16_emg_param_3_5);
      #line 553 
      break;
      #line 555 
      default: 
               #line 555 
      ;
      #line 555 
      __VERIFIER_assume(0);
    }
    #line 558 
    if (emg_repeat_cnt_call_16 > 0) {
      #line 559 
      emg_repeat_cnt_call_16 --;
      #line 561 
      goto emg_call_16;
    }
    else 
         #line 563 
         __VERIFIER_assume(0);
  }
  else {
    #line 569 
    if (emg_16_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 570 
      (*(emg_16_container->release))(emg_16_resource_1,emg_16_resource_0);
    #line 574 
    if (emg_repeat_cnt_main_16_1 > 0) {
      #line 575 
      emg_repeat_cnt_main_16_1 --;
      #line 577 
      goto emg_main_16;
    }
    else 
         #line 579 
         __VERIFIER_assume(0);
  }
  #line 585 
  return (void *)0;
  #line 588 
  emg_main_16: 
               #line 588 
  ;
  #line 589 
  if (ldv_undef_int() != 0) {
    #line 591 
    emg_16_ret = simple_open(emg_16_resource_1,emg_16_resource_0);
    #line 596 
    emg_16_ret = ldv_filter_err_code(emg_16_ret);
    #line 599 
    if (ldv_undef_int() != 0) {
      #line 601 
      __VERIFIER_assume(emg_16_ret == 0);
      #line 605 
      goto emg_call_16;
    }
    else {
      #line 610 
      __VERIFIER_assume(emg_16_ret != 0);
      #line 613 
      if (emg_repeat_cnt_main_16_0 > 0) {
        #line 614 
        emg_repeat_cnt_main_16_0 --;
        #line 616 
        goto emg_main_16;
      }
      else 
           #line 618 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 625 
       ldv_free((void *)emg_16_resource_0);
  #line 633 
  return (void *)0;
}

#line 638  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_skb_rx(void *arg0)
{
  #line 641 
  struct file_operations *emg_17_container;
  #line 642 
  long long emg_17_emg_param_1_0;
  #line 643 
  char *emg_17_emg_param_1_2;
  #line 644 
  char *emg_17_emg_param_1_4;
  #line 645 
  int emg_17_emg_param_2_1;
  #line 646 
  long long *emg_17_emg_param_3_3;
  #line 647 
  long long *emg_17_emg_param_3_5;
  #line 648 
  struct file *emg_17_resource_0;
  #line 649 
  struct inode *emg_17_resource_1;
  #line 650 
  int emg_17_ret;
  #line 651 
  unsigned long emg_17_size_cnt;
  #line 652 
  int emg_repeat_cnt_main_17_0 = 1;
  #line 653 
  int emg_repeat_cnt_main_17_1 = 1;
  #line 654 
  int emg_repeat_cnt_call_17 = 1;
  #line 656 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 660 
  emg_17_ret = ldv_undef_int();
  #line 661 
  emg_17_container = emg_alias_fops_skb_rx;
  #line 662 
  emg_17_ret = ldv_undef_int();
  #line 664 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_skb_rx);
  #line 666 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 667 
    emg_17_container = data->arg0;
    #line 668 
    ldv_free((void *)data);
  }
  #line 673 
  emg_17_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 674 
  emg_17_size_cnt = (unsigned long)ldv_undef_int();
  #line 678 
  goto emg_main_17;
  #line 682 
  return (void *)0;
  #line 685 
  emg_call_17: 
               #line 685 
  ;
  #line 686 
  if (ldv_undef_int() != 0) {
    #line 687 
    switch (ldv_undef_int()) {
      #line 688 
      case 0: 
              #line 688 
      ;
      #line 690 
      emg_17_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 690 
      emg_17_emg_param_1_2 = emg_17_emg_param_1_2;
      #line 691 
      emg_17_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 691 
      emg_17_emg_param_3_3 = emg_17_emg_param_3_3;
      #line 695 
      emg_wrapper_read_file_skb_rx(emg_17_resource_0,emg_17_emg_param_1_2,emg_17_size_cnt,emg_17_emg_param_3_3);
      #line 699 
      ldv_free((void *)emg_17_emg_param_1_2);
      #line 700 
      ldv_free((void *)emg_17_emg_param_3_3);
      #line 702 
      break;
      #line 704 
      case 1: 
              #line 704 
      ;
      #line 706 
      default_llseek(emg_17_resource_0,emg_17_emg_param_1_0,emg_17_emg_param_2_1);
      #line 708 
      break;
      #line 710 
      case 2: 
              #line 710 
      ;
      #line 717 
      __VERIFIER_assume(emg_17_size_cnt <= 2147479552UL);
      #line 718 
      emg_17_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 718 
      emg_17_emg_param_1_4 = emg_17_emg_param_1_4;
      #line 719 
      emg_17_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 719 
      emg_17_emg_param_3_5 = emg_17_emg_param_3_5;
      #line 723 
      if (emg_17_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 724 
        (*(emg_17_container->write))(emg_17_resource_0,emg_17_emg_param_1_4,emg_17_size_cnt,emg_17_emg_param_3_5);
      #line 729 
      ldv_free((void *)emg_17_emg_param_1_4);
      #line 730 
      ldv_free((void *)emg_17_emg_param_3_5);
      #line 732 
      break;
      #line 734 
      default: 
               #line 734 
      ;
      #line 734 
      __VERIFIER_assume(0);
    }
    #line 737 
    if (emg_repeat_cnt_call_17 > 0) {
      #line 738 
      emg_repeat_cnt_call_17 --;
      #line 740 
      goto emg_call_17;
    }
    else 
         #line 742 
         __VERIFIER_assume(0);
  }
  else {
    #line 748 
    if (emg_17_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 749 
      (*(emg_17_container->release))(emg_17_resource_1,emg_17_resource_0);
    #line 753 
    if (emg_repeat_cnt_main_17_1 > 0) {
      #line 754 
      emg_repeat_cnt_main_17_1 --;
      #line 756 
      goto emg_main_17;
    }
    else 
         #line 758 
         __VERIFIER_assume(0);
  }
  #line 764 
  return (void *)0;
  #line 767 
  emg_main_17: 
               #line 767 
  ;
  #line 768 
  if (ldv_undef_int() != 0) {
    #line 770 
    emg_17_ret = simple_open(emg_17_resource_1,emg_17_resource_0);
    #line 775 
    emg_17_ret = ldv_filter_err_code(emg_17_ret);
    #line 778 
    if (ldv_undef_int() != 0) {
      #line 780 
      __VERIFIER_assume(emg_17_ret == 0);
      #line 784 
      goto emg_call_17;
    }
    else {
      #line 789 
      __VERIFIER_assume(emg_17_ret != 0);
      #line 792 
      if (emg_repeat_cnt_main_17_0 > 0) {
        #line 793 
        emg_repeat_cnt_main_17_0 --;
        #line 795 
        goto emg_main_17;
      }
      else 
           #line 797 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 804 
       ldv_free((void *)emg_17_resource_0);
  #line 812 
  return (void *)0;
}

#line 817  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_slot(void *arg0)
{
  #line 820 
  struct file_operations *emg_18_container;
  #line 821 
  long long emg_18_emg_param_1_0;
  #line 822 
  char *emg_18_emg_param_1_2;
  #line 823 
  char *emg_18_emg_param_1_4;
  #line 824 
  int emg_18_emg_param_2_1;
  #line 825 
  long long *emg_18_emg_param_3_3;
  #line 826 
  long long *emg_18_emg_param_3_5;
  #line 827 
  struct file *emg_18_resource_0;
  #line 828 
  struct inode *emg_18_resource_1;
  #line 829 
  int emg_18_ret;
  #line 830 
  unsigned long emg_18_size_cnt;
  #line 831 
  int emg_repeat_cnt_main_18_0 = 1;
  #line 832 
  int emg_repeat_cnt_call_18 = 1;
  #line 833 
  int emg_repeat_cnt_main_18_1 = 1;
  #line 835 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 839 
  emg_18_ret = ldv_undef_int();
  #line 840 
  emg_18_container = emg_alias_fops_slot;
  #line 841 
  emg_18_ret = ldv_undef_int();
  #line 843 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_slot);
  #line 845 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 846 
    emg_18_container = data->arg0;
    #line 847 
    ldv_free((void *)data);
  }
  #line 852 
  emg_18_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 853 
  emg_18_size_cnt = (unsigned long)ldv_undef_int();
  #line 857 
  goto emg_main_18;
  #line 861 
  return (void *)0;
  #line 864 
  emg_call_18: 
               #line 864 
  ;
  #line 865 
  if (ldv_undef_int() != 0) {
    #line 866 
    switch (ldv_undef_int()) {
      #line 867 
      case 0: 
              #line 867 
      ;
      #line 869 
      emg_18_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 869 
      emg_18_emg_param_1_2 = emg_18_emg_param_1_2;
      #line 870 
      emg_18_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 870 
      emg_18_emg_param_3_3 = emg_18_emg_param_3_3;
      #line 874 
      emg_wrapper_read_file_slot(emg_18_resource_0,emg_18_emg_param_1_2,emg_18_size_cnt,emg_18_emg_param_3_3);
      #line 878 
      ldv_free((void *)emg_18_emg_param_1_2);
      #line 879 
      ldv_free((void *)emg_18_emg_param_3_3);
      #line 881 
      break;
      #line 883 
      case 1: 
              #line 883 
      ;
      #line 885 
      default_llseek(emg_18_resource_0,emg_18_emg_param_1_0,emg_18_emg_param_2_1);
      #line 887 
      break;
      #line 889 
      case 2: 
              #line 889 
      ;
      #line 896 
      __VERIFIER_assume(emg_18_size_cnt <= 2147479552UL);
      #line 897 
      emg_18_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 897 
      emg_18_emg_param_1_4 = emg_18_emg_param_1_4;
      #line 898 
      emg_18_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 898 
      emg_18_emg_param_3_5 = emg_18_emg_param_3_5;
      #line 902 
      if (emg_18_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 903 
        (*(emg_18_container->write))(emg_18_resource_0,emg_18_emg_param_1_4,emg_18_size_cnt,emg_18_emg_param_3_5);
      #line 908 
      ldv_free((void *)emg_18_emg_param_1_4);
      #line 909 
      ldv_free((void *)emg_18_emg_param_3_5);
      #line 911 
      break;
      #line 913 
      default: 
               #line 913 
      ;
      #line 913 
      __VERIFIER_assume(0);
    }
    #line 916 
    if (emg_repeat_cnt_call_18 > 0) {
      #line 917 
      emg_repeat_cnt_call_18 --;
      #line 919 
      goto emg_call_18;
    }
    else 
         #line 921 
         __VERIFIER_assume(0);
  }
  else {
    #line 927 
    if (emg_18_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 928 
      (*(emg_18_container->release))(emg_18_resource_1,emg_18_resource_0);
    #line 932 
    if (emg_repeat_cnt_main_18_1 > 0) {
      #line 933 
      emg_repeat_cnt_main_18_1 --;
      #line 935 
      goto emg_main_18;
    }
    else 
         #line 937 
         __VERIFIER_assume(0);
  }
  #line 943 
  return (void *)0;
  #line 946 
  emg_main_18: 
               #line 946 
  ;
  #line 947 
  if (ldv_undef_int() != 0) {
    #line 949 
    emg_18_ret = simple_open(emg_18_resource_1,emg_18_resource_0);
    #line 954 
    emg_18_ret = ldv_filter_err_code(emg_18_ret);
    #line 957 
    if (ldv_undef_int() != 0) {
      #line 959 
      __VERIFIER_assume(emg_18_ret == 0);
      #line 963 
      goto emg_call_18;
    }
    else {
      #line 968 
      __VERIFIER_assume(emg_18_ret != 0);
      #line 971 
      if (emg_repeat_cnt_main_18_0 > 0) {
        #line 972 
        emg_repeat_cnt_main_18_0 --;
        #line 974 
        goto emg_main_18;
      }
      else 
           #line 976 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 983 
       ldv_free((void *)emg_18_resource_0);
  #line 991 
  return (void *)0;
}

#line 996  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_tgt_int_stats(void *arg0)
{
  #line 999 
  struct file_operations *emg_19_container;
  #line 1000 
  long long emg_19_emg_param_1_0;
  #line 1001 
  char *emg_19_emg_param_1_2;
  #line 1002 
  char *emg_19_emg_param_1_4;
  #line 1003 
  int emg_19_emg_param_2_1;
  #line 1004 
  long long *emg_19_emg_param_3_3;
  #line 1005 
  long long *emg_19_emg_param_3_5;
  #line 1006 
  struct file *emg_19_resource_0;
  #line 1007 
  struct inode *emg_19_resource_1;
  #line 1008 
  int emg_19_ret;
  #line 1009 
  unsigned long emg_19_size_cnt;
  #line 1010 
  int emg_repeat_cnt_main_19_1 = 1;
  #line 1011 
  int emg_repeat_cnt_call_19 = 1;
  #line 1012 
  int emg_repeat_cnt_main_19_0 = 1;
  #line 1014 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 1018 
  emg_19_ret = ldv_undef_int();
  #line 1019 
  emg_19_container = emg_alias_fops_tgt_int_stats;
  #line 1020 
  emg_19_ret = ldv_undef_int();
  #line 1022 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_tgt_int_stats);
  #line 1024 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 1025 
    emg_19_container = data->arg0;
    #line 1026 
    ldv_free((void *)data);
  }
  #line 1031 
  emg_19_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 1032 
  emg_19_size_cnt = (unsigned long)ldv_undef_int();
  #line 1036 
  goto emg_main_19;
  #line 1040 
  return (void *)0;
  #line 1043 
  emg_call_19: 
               #line 1043 
  ;
  #line 1044 
  if (ldv_undef_int() != 0) {
    #line 1045 
    switch (ldv_undef_int()) {
      #line 1046 
      case 0: 
              #line 1046 
      ;
      #line 1048 
      emg_19_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1048 
      emg_19_emg_param_1_2 = emg_19_emg_param_1_2;
      #line 1049 
      emg_19_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1049 
      emg_19_emg_param_3_3 = emg_19_emg_param_3_3;
      #line 1053 
      emg_wrapper_read_file_tgt_int_stats(emg_19_resource_0,emg_19_emg_param_1_2,emg_19_size_cnt,emg_19_emg_param_3_3);
      #line 1057 
      ldv_free((void *)emg_19_emg_param_1_2);
      #line 1058 
      ldv_free((void *)emg_19_emg_param_3_3);
      #line 1060 
      break;
      #line 1062 
      case 1: 
              #line 1062 
      ;
      #line 1064 
      default_llseek(emg_19_resource_0,emg_19_emg_param_1_0,emg_19_emg_param_2_1);
      #line 1066 
      break;
      #line 1068 
      case 2: 
              #line 1068 
      ;
      #line 1075 
      __VERIFIER_assume(emg_19_size_cnt <= 2147479552UL);
      #line 1076 
      emg_19_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1076 
      emg_19_emg_param_1_4 = emg_19_emg_param_1_4;
      #line 1077 
      emg_19_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1077 
      emg_19_emg_param_3_5 = emg_19_emg_param_3_5;
      #line 1081 
      if (emg_19_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 1082 
        (*(emg_19_container->write))(emg_19_resource_0,emg_19_emg_param_1_4,emg_19_size_cnt,emg_19_emg_param_3_5);
      #line 1087 
      ldv_free((void *)emg_19_emg_param_1_4);
      #line 1088 
      ldv_free((void *)emg_19_emg_param_3_5);
      #line 1090 
      break;
      #line 1092 
      default: 
               #line 1092 
      ;
      #line 1092 
      __VERIFIER_assume(0);
    }
    #line 1095 
    if (emg_repeat_cnt_call_19 > 0) {
      #line 1096 
      emg_repeat_cnt_call_19 --;
      #line 1098 
      goto emg_call_19;
    }
    else 
         #line 1100 
         __VERIFIER_assume(0);
  }
  else {
    #line 1106 
    if (emg_19_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 1107 
      (*(emg_19_container->release))(emg_19_resource_1,emg_19_resource_0);
    #line 1111 
    if (emg_repeat_cnt_main_19_1 > 0) {
      #line 1112 
      emg_repeat_cnt_main_19_1 --;
      #line 1114 
      goto emg_main_19;
    }
    else 
         #line 1116 
         __VERIFIER_assume(0);
  }
  #line 1122 
  return (void *)0;
  #line 1125 
  emg_main_19: 
               #line 1125 
  ;
  #line 1126 
  if (ldv_undef_int() != 0) {
    #line 1128 
    emg_19_ret = simple_open(emg_19_resource_1,emg_19_resource_0);
    #line 1133 
    emg_19_ret = ldv_filter_err_code(emg_19_ret);
    #line 1136 
    if (ldv_undef_int() != 0) {
      #line 1138 
      __VERIFIER_assume(emg_19_ret == 0);
      #line 1142 
      goto emg_call_19;
    }
    else {
      #line 1147 
      __VERIFIER_assume(emg_19_ret != 0);
      #line 1150 
      if (emg_repeat_cnt_main_19_0 > 0) {
        #line 1151 
        emg_repeat_cnt_main_19_0 --;
        #line 1153 
        goto emg_main_19;
      }
      else 
           #line 1155 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 1162 
       ldv_free((void *)emg_19_resource_0);
  #line 1170 
  return (void *)0;
}

#line 1175  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_tgt_rx_stats(void *arg0)
{
  #line 1178 
  struct file_operations *emg_20_container;
  #line 1179 
  long long emg_20_emg_param_1_0;
  #line 1180 
  char *emg_20_emg_param_1_2;
  #line 1181 
  char *emg_20_emg_param_1_4;
  #line 1182 
  int emg_20_emg_param_2_1;
  #line 1183 
  long long *emg_20_emg_param_3_3;
  #line 1184 
  long long *emg_20_emg_param_3_5;
  #line 1185 
  struct file *emg_20_resource_0;
  #line 1186 
  struct inode *emg_20_resource_1;
  #line 1187 
  int emg_20_ret;
  #line 1188 
  unsigned long emg_20_size_cnt;
  #line 1189 
  int emg_repeat_cnt_call_20 = 1;
  #line 1190 
  int emg_repeat_cnt_main_20_1 = 1;
  #line 1191 
  int emg_repeat_cnt_main_20_0 = 1;
  #line 1193 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 1197 
  emg_20_ret = ldv_undef_int();
  #line 1198 
  emg_20_container = emg_alias_fops_tgt_rx_stats;
  #line 1199 
  emg_20_ret = ldv_undef_int();
  #line 1201 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_tgt_rx_stats);
  #line 1203 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 1204 
    emg_20_container = data->arg0;
    #line 1205 
    ldv_free((void *)data);
  }
  #line 1210 
  emg_20_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 1211 
  emg_20_size_cnt = (unsigned long)ldv_undef_int();
  #line 1215 
  goto emg_main_20;
  #line 1219 
  return (void *)0;
  #line 1222 
  emg_call_20: 
               #line 1222 
  ;
  #line 1223 
  if (ldv_undef_int() != 0) {
    #line 1224 
    switch (ldv_undef_int()) {
      #line 1225 
      case 0: 
              #line 1225 
      ;
      #line 1227 
      emg_20_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1227 
      emg_20_emg_param_1_2 = emg_20_emg_param_1_2;
      #line 1228 
      emg_20_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1228 
      emg_20_emg_param_3_3 = emg_20_emg_param_3_3;
      #line 1232 
      emg_wrapper_read_file_tgt_rx_stats(emg_20_resource_0,emg_20_emg_param_1_2,emg_20_size_cnt,emg_20_emg_param_3_3);
      #line 1236 
      ldv_free((void *)emg_20_emg_param_1_2);
      #line 1237 
      ldv_free((void *)emg_20_emg_param_3_3);
      #line 1239 
      break;
      #line 1241 
      case 1: 
              #line 1241 
      ;
      #line 1243 
      default_llseek(emg_20_resource_0,emg_20_emg_param_1_0,emg_20_emg_param_2_1);
      #line 1245 
      break;
      #line 1247 
      case 2: 
              #line 1247 
      ;
      #line 1254 
      __VERIFIER_assume(emg_20_size_cnt <= 2147479552UL);
      #line 1255 
      emg_20_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1255 
      emg_20_emg_param_1_4 = emg_20_emg_param_1_4;
      #line 1256 
      emg_20_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1256 
      emg_20_emg_param_3_5 = emg_20_emg_param_3_5;
      #line 1260 
      if (emg_20_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 1261 
        (*(emg_20_container->write))(emg_20_resource_0,emg_20_emg_param_1_4,emg_20_size_cnt,emg_20_emg_param_3_5);
      #line 1266 
      ldv_free((void *)emg_20_emg_param_1_4);
      #line 1267 
      ldv_free((void *)emg_20_emg_param_3_5);
      #line 1269 
      break;
      #line 1271 
      default: 
               #line 1271 
      ;
      #line 1271 
      __VERIFIER_assume(0);
    }
    #line 1274 
    if (emg_repeat_cnt_call_20 > 0) {
      #line 1275 
      emg_repeat_cnt_call_20 --;
      #line 1277 
      goto emg_call_20;
    }
    else 
         #line 1279 
         __VERIFIER_assume(0);
  }
  else {
    #line 1285 
    if (emg_20_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 1286 
      (*(emg_20_container->release))(emg_20_resource_1,emg_20_resource_0);
    #line 1290 
    if (emg_repeat_cnt_main_20_1 > 0) {
      #line 1291 
      emg_repeat_cnt_main_20_1 --;
      #line 1293 
      goto emg_main_20;
    }
    else 
         #line 1295 
         __VERIFIER_assume(0);
  }
  #line 1301 
  return (void *)0;
  #line 1304 
  emg_main_20: 
               #line 1304 
  ;
  #line 1305 
  if (ldv_undef_int() != 0) {
    #line 1307 
    emg_20_ret = simple_open(emg_20_resource_1,emg_20_resource_0);
    #line 1312 
    emg_20_ret = ldv_filter_err_code(emg_20_ret);
    #line 1315 
    if (ldv_undef_int() != 0) {
      #line 1317 
      __VERIFIER_assume(emg_20_ret == 0);
      #line 1321 
      goto emg_call_20;
    }
    else {
      #line 1326 
      __VERIFIER_assume(emg_20_ret != 0);
      #line 1329 
      if (emg_repeat_cnt_main_20_0 > 0) {
        #line 1330 
        emg_repeat_cnt_main_20_0 --;
        #line 1332 
        goto emg_main_20;
      }
      else 
           #line 1334 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 1341 
       ldv_free((void *)emg_20_resource_0);
  #line 1349 
  return (void *)0;
}

#line 1354  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_tgt_tx_stats(void *arg0)
{
  #line 1357 
  struct file_operations *emg_21_container;
  #line 1358 
  long long emg_21_emg_param_1_0;
  #line 1359 
  char *emg_21_emg_param_1_2;
  #line 1360 
  char *emg_21_emg_param_1_4;
  #line 1361 
  int emg_21_emg_param_2_1;
  #line 1362 
  long long *emg_21_emg_param_3_3;
  #line 1363 
  long long *emg_21_emg_param_3_5;
  #line 1364 
  struct file *emg_21_resource_0;
  #line 1365 
  struct inode *emg_21_resource_1;
  #line 1366 
  int emg_21_ret;
  #line 1367 
  unsigned long emg_21_size_cnt;
  #line 1368 
  int emg_repeat_cnt_call_21 = 1;
  #line 1369 
  int emg_repeat_cnt_main_21_0 = 1;
  #line 1370 
  int emg_repeat_cnt_main_21_1 = 1;
  #line 1372 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 1376 
  emg_21_ret = ldv_undef_int();
  #line 1377 
  emg_21_container = emg_alias_fops_tgt_tx_stats;
  #line 1378 
  emg_21_ret = ldv_undef_int();
  #line 1380 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_tgt_tx_stats);
  #line 1382 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 1383 
    emg_21_container = data->arg0;
    #line 1384 
    ldv_free((void *)data);
  }
  #line 1389 
  emg_21_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 1390 
  emg_21_size_cnt = (unsigned long)ldv_undef_int();
  #line 1394 
  goto emg_main_21;
  #line 1398 
  return (void *)0;
  #line 1401 
  emg_call_21: 
               #line 1401 
  ;
  #line 1402 
  if (ldv_undef_int() != 0) {
    #line 1403 
    switch (ldv_undef_int()) {
      #line 1404 
      case 0: 
              #line 1404 
      ;
      #line 1406 
      emg_21_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1406 
      emg_21_emg_param_1_2 = emg_21_emg_param_1_2;
      #line 1407 
      emg_21_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1407 
      emg_21_emg_param_3_3 = emg_21_emg_param_3_3;
      #line 1411 
      emg_wrapper_read_file_tgt_tx_stats(emg_21_resource_0,emg_21_emg_param_1_2,emg_21_size_cnt,emg_21_emg_param_3_3);
      #line 1415 
      ldv_free((void *)emg_21_emg_param_1_2);
      #line 1416 
      ldv_free((void *)emg_21_emg_param_3_3);
      #line 1418 
      break;
      #line 1420 
      case 1: 
              #line 1420 
      ;
      #line 1422 
      default_llseek(emg_21_resource_0,emg_21_emg_param_1_0,emg_21_emg_param_2_1);
      #line 1424 
      break;
      #line 1426 
      case 2: 
              #line 1426 
      ;
      #line 1433 
      __VERIFIER_assume(emg_21_size_cnt <= 2147479552UL);
      #line 1434 
      emg_21_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1434 
      emg_21_emg_param_1_4 = emg_21_emg_param_1_4;
      #line 1435 
      emg_21_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1435 
      emg_21_emg_param_3_5 = emg_21_emg_param_3_5;
      #line 1439 
      if (emg_21_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 1440 
        (*(emg_21_container->write))(emg_21_resource_0,emg_21_emg_param_1_4,emg_21_size_cnt,emg_21_emg_param_3_5);
      #line 1445 
      ldv_free((void *)emg_21_emg_param_1_4);
      #line 1446 
      ldv_free((void *)emg_21_emg_param_3_5);
      #line 1448 
      break;
      #line 1450 
      default: 
               #line 1450 
      ;
      #line 1450 
      __VERIFIER_assume(0);
    }
    #line 1453 
    if (emg_repeat_cnt_call_21 > 0) {
      #line 1454 
      emg_repeat_cnt_call_21 --;
      #line 1456 
      goto emg_call_21;
    }
    else 
         #line 1458 
         __VERIFIER_assume(0);
  }
  else {
    #line 1464 
    if (emg_21_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 1465 
      (*(emg_21_container->release))(emg_21_resource_1,emg_21_resource_0);
    #line 1469 
    if (emg_repeat_cnt_main_21_1 > 0) {
      #line 1470 
      emg_repeat_cnt_main_21_1 --;
      #line 1472 
      goto emg_main_21;
    }
    else 
         #line 1474 
         __VERIFIER_assume(0);
  }
  #line 1480 
  return (void *)0;
  #line 1483 
  emg_main_21: 
               #line 1483 
  ;
  #line 1484 
  if (ldv_undef_int() != 0) {
    #line 1486 
    emg_21_ret = simple_open(emg_21_resource_1,emg_21_resource_0);
    #line 1491 
    emg_21_ret = ldv_filter_err_code(emg_21_ret);
    #line 1494 
    if (ldv_undef_int() != 0) {
      #line 1496 
      __VERIFIER_assume(emg_21_ret == 0);
      #line 1500 
      goto emg_call_21;
    }
    else {
      #line 1505 
      __VERIFIER_assume(emg_21_ret != 0);
      #line 1508 
      if (emg_repeat_cnt_main_21_0 > 0) {
        #line 1509 
        emg_repeat_cnt_main_21_0 --;
        #line 1511 
        goto emg_main_21;
      }
      else 
           #line 1513 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 1520 
       ldv_free((void *)emg_21_resource_0);
  #line 1528 
  return (void *)0;
}

#line 1533  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_fops_xmit(void *arg0)
{
  #line 1536 
  struct file_operations *emg_22_container;
  #line 1537 
  long long emg_22_emg_param_1_0;
  #line 1538 
  char *emg_22_emg_param_1_2;
  #line 1539 
  char *emg_22_emg_param_1_4;
  #line 1540 
  int emg_22_emg_param_2_1;
  #line 1541 
  long long *emg_22_emg_param_3_3;
  #line 1542 
  long long *emg_22_emg_param_3_5;
  #line 1543 
  struct file *emg_22_resource_0;
  #line 1544 
  struct inode *emg_22_resource_1;
  #line 1545 
  int emg_22_ret;
  #line 1546 
  unsigned long emg_22_size_cnt;
  #line 1547 
  int emg_repeat_cnt_main_22_0 = 1;
  #line 1548 
  int emg_repeat_cnt_main_22_1 = 1;
  #line 1549 
  int emg_repeat_cnt_call_22 = 1;
  #line 1551 
  struct emg_struct_character_driver_scenario_fops_debug_15 *data = (struct emg_struct_character_driver_scenario_fops_debug_15 *)arg0;
  #line 1555 
  emg_22_ret = ldv_undef_int();
  #line 1556 
  emg_22_container = emg_alias_fops_xmit;
  #line 1557 
  emg_22_ret = ldv_undef_int();
  #line 1559 
  __VERIFIER_assume(data->arg0 == emg_alias_fops_xmit);
  #line 1561 
  if (data != (struct emg_struct_character_driver_scenario_fops_debug_15 *)0) {
    #line 1562 
    emg_22_container = data->arg0;
    #line 1563 
    ldv_free((void *)data);
  }
  #line 1568 
  emg_22_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 1569 
  emg_22_size_cnt = (unsigned long)ldv_undef_int();
  #line 1573 
  goto emg_main_22;
  #line 1577 
  return (void *)0;
  #line 1580 
  emg_call_22: 
               #line 1580 
  ;
  #line 1581 
  if (ldv_undef_int() != 0) {
    #line 1582 
    switch (ldv_undef_int()) {
      #line 1583 
      case 0: 
              #line 1583 
      ;
      #line 1585 
      emg_22_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1585 
      emg_22_emg_param_1_2 = emg_22_emg_param_1_2;
      #line 1586 
      emg_22_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1586 
      emg_22_emg_param_3_3 = emg_22_emg_param_3_3;
      #line 1590 
      emg_wrapper_read_file_xmit(emg_22_resource_0,emg_22_emg_param_1_2,emg_22_size_cnt,emg_22_emg_param_3_3);
      #line 1594 
      ldv_free((void *)emg_22_emg_param_1_2);
      #line 1595 
      ldv_free((void *)emg_22_emg_param_3_3);
      #line 1597 
      break;
      #line 1599 
      case 1: 
              #line 1599 
      ;
      #line 1601 
      default_llseek(emg_22_resource_0,emg_22_emg_param_1_0,emg_22_emg_param_2_1);
      #line 1603 
      break;
      #line 1605 
      case 2: 
              #line 1605 
      ;
      #line 1612 
      __VERIFIER_assume(emg_22_size_cnt <= 2147479552UL);
      #line 1613 
      emg_22_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 1613 
      emg_22_emg_param_1_4 = emg_22_emg_param_1_4;
      #line 1614 
      emg_22_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 1614 
      emg_22_emg_param_3_5 = emg_22_emg_param_3_5;
      #line 1618 
      if (emg_22_container->write != (ssize_t (*)(struct file *, char *, size_t , loff_t *))0) 
        #line 1619 
        (*(emg_22_container->write))(emg_22_resource_0,emg_22_emg_param_1_4,emg_22_size_cnt,emg_22_emg_param_3_5);
      #line 1624 
      ldv_free((void *)emg_22_emg_param_1_4);
      #line 1625 
      ldv_free((void *)emg_22_emg_param_3_5);
      #line 1627 
      break;
      #line 1629 
      default: 
               #line 1629 
      ;
      #line 1629 
      __VERIFIER_assume(0);
    }
    #line 1632 
    if (emg_repeat_cnt_call_22 > 0) {
      #line 1633 
      emg_repeat_cnt_call_22 --;
      #line 1635 
      goto emg_call_22;
    }
    else 
         #line 1637 
         __VERIFIER_assume(0);
  }
  else {
    #line 1643 
    if (emg_22_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 1644 
      (*(emg_22_container->release))(emg_22_resource_1,emg_22_resource_0);
    #line 1648 
    if (emg_repeat_cnt_main_22_0 > 0) {
      #line 1649 
      emg_repeat_cnt_main_22_0 --;
      #line 1651 
      goto emg_main_22;
    }
    else 
         #line 1653 
         __VERIFIER_assume(0);
  }
  #line 1659 
  return (void *)0;
  #line 1662 
  emg_main_22: 
               #line 1662 
  ;
  #line 1663 
  if (ldv_undef_int() != 0) {
    #line 1665 
    emg_22_ret = simple_open(emg_22_resource_1,emg_22_resource_0);
    #line 1670 
    emg_22_ret = ldv_filter_err_code(emg_22_ret);
    #line 1673 
    if (ldv_undef_int() != 0) {
      #line 1675 
      __VERIFIER_assume(emg_22_ret == 0);
      #line 1679 
      goto emg_call_22;
    }
    else {
      #line 1684 
      __VERIFIER_assume(emg_22_ret != 0);
      #line 1687 
      if (emg_repeat_cnt_main_22_1 > 0) {
        #line 1688 
        emg_repeat_cnt_main_22_1 --;
        #line 1690 
        goto emg_main_22;
      }
      else 
           #line 1692 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 1699 
       ldv_free((void *)emg_22_resource_0);
  #line 1707 
  return (void *)0;
}

#line 1712  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_ieee80211_ieee80211_scenario_ath9k_htc_ops(void *arg0)
{
  #line 1715 
  struct ieee80211_ops *emg_23_container;
  #line 1716 
  struct ieee80211_vif *emg_23_emg_param_1_0;
  #line 1717 
  struct ieee80211_vif *emg_23_emg_param_1_1;
  #line 1718 
  unsigned int emg_23_emg_param_1_11;
  #line 1719 
  unsigned int emg_23_emg_param_1_12;
  #line 1720 
  unsigned int *emg_23_emg_param_1_15;
  #line 1721 
  struct ieee80211_vif *emg_23_emg_param_1_17;
  #line 1722 
  struct ieee80211_vif *emg_23_emg_param_1_19;
  #line 1723 
  struct ieee80211_vif *emg_23_emg_param_1_22;
  #line 1724 
  struct ieee80211_low_level_stats *emg_23_emg_param_1_25;
  #line 1725 
  struct ieee80211_vif *emg_23_emg_param_1_26;
  #line 1726 
  struct ieee80211_vif *emg_23_emg_param_1_27;
  #line 1727 
  struct ieee80211_vif *emg_23_emg_param_1_28;
  #line 1728 
  struct ieee80211_vif *emg_23_emg_param_1_29;
  #line 1729 
  struct ieee80211_vif *emg_23_emg_param_1_3;
  #line 1730 
  short emg_23_emg_param_1_31;
  #line 1731 
  enum set_key_cmd *emg_23_emg_param_1_32;
  #line 1732 
  unsigned int emg_23_emg_param_1_36;
  #line 1733 
  struct ieee80211_vif *emg_23_emg_param_1_37;
  #line 1734 
  struct ieee80211_vif *emg_23_emg_param_1_39;
  #line 1735 
  struct ieee80211_vif *emg_23_emg_param_1_41;
  #line 1736 
  struct ieee80211_vif *emg_23_emg_param_1_44;
  #line 1737 
  struct ieee80211_vif *emg_23_emg_param_1_46;
  #line 1738 
  struct ieee80211_vif *emg_23_emg_param_1_47;
  #line 1739 
  struct ieee80211_tx_control *emg_23_emg_param_1_49;
  #line 1740 
  struct cfg80211_wowlan *emg_23_emg_param_1_51;
  #line 1741 
  struct ieee80211_vif *emg_23_emg_param_1_6;
  #line 1742 
  struct ieee80211_vif *emg_23_emg_param_1_8;
  #line 1743 
  unsigned int *emg_23_emg_param_2_13;
  #line 1744 
  unsigned int *emg_23_emg_param_2_16;
  #line 1745 
  int emg_23_emg_param_2_18;
  #line 1746 
  struct ieee80211_ampdu_params *emg_23_emg_param_2_2;
  #line 1747 
  struct ethtool_stats *emg_23_emg_param_2_20;
  #line 1748 
  unsigned int emg_23_emg_param_2_23;
  #line 1749 
  struct cfg80211_bitrate_mask *emg_23_emg_param_2_30;
  #line 1750 
  struct ieee80211_vif *emg_23_emg_param_2_33;
  #line 1751 
  unsigned long long emg_23_emg_param_2_38;
  #line 1752 
  struct ieee80211_bss_conf *emg_23_emg_param_2_4;
  #line 1753 
  struct ieee80211_sta *emg_23_emg_param_2_40;
  #line 1754 
  struct ieee80211_sta *emg_23_emg_param_2_42;
  #line 1755 
  struct ieee80211_sta *emg_23_emg_param_2_45;
  #line 1756 
  unsigned char *emg_23_emg_param_2_48;
  #line 1757 
  struct sk_buff *emg_23_emg_param_2_50;
  #line 1758 
  struct cfg80211_chan_def *emg_23_emg_param_2_7;
  #line 1759 
  unsigned short emg_23_emg_param_2_9;
  #line 1760 
  struct ieee80211_tx_queue_params *emg_23_emg_param_3_10;
  #line 1761 
  unsigned long long emg_23_emg_param_3_14;
  #line 1762 
  unsigned long long *emg_23_emg_param_3_21;
  #line 1763 
  unsigned char *emg_23_emg_param_3_24;
  #line 1764 
  struct ieee80211_sta *emg_23_emg_param_3_34;
  #line 1765 
  unsigned int emg_23_emg_param_3_43;
  #line 1766 
  unsigned int emg_23_emg_param_3_5;
  #line 1767 
  struct ieee80211_key_conf *emg_23_emg_param_4_35;
  #line 1768 
  struct ieee80211_hw *emg_23_resource;
  #line 1769 
  int emg_23_ret;
  #line 1770 
  int emg_repeat_cnt_main_23_0 = 1;
  #line 1771 
  int emg_repeat_cnt_started_23_0 = 1;
  #line 1772 
  int emg_repeat_cnt_started_23_1 = 1;
  #line 1773 
  int emg_repeat_cnt_main_23_1 = 1;
  #line 1775 
  struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 *data = (struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 *)arg0;
  #line 1779 
  emg_23_ret = ldv_undef_int();
  #line 1780 
  emg_23_container = & ath9k_htc_ops;
  #line 1781 
  emg_23_ret = ldv_undef_int();
  #line 1784 
  if (data != (struct emg_struct_ieee80211_scenario_ath9k_htc_ops_23 *)0) {
    #line 1785 
    emg_23_resource = data->arg0;
    #line 1786 
    ldv_free((void *)data);
  }
  #line 1791 
  goto emg_main_23;
  #line 1795 
  return (void *)0;
  #line 1798 
  emg_main_23: 
               #line 1798 
  ;
  #line 1799 
  if (ldv_undef_int() != 0) {
    #line 1802 
    rtnl_lock();
    #line 1806 
    emg_23_ret = emg_wrapper_ath9k_htc_start(emg_23_resource);
    #line 1811 
    emg_23_ret = ldv_filter_err_code(emg_23_ret);
    #line 1812 
    rtnl_unlock();
    #line 1815 
    if (ldv_undef_int() != 0) {
      #line 1817 
      __VERIFIER_assume(emg_23_ret == 0);
      #line 1821 
      goto emg_started_23;
    }
    else 
         #line 1826 
         __VERIFIER_assume(emg_23_ret != 0);
    #line 1830 
    if (emg_repeat_cnt_main_23_0 > 0) {
      #line 1831 
      emg_repeat_cnt_main_23_0 --;
      #line 1833 
      goto emg_main_23;
    }
    else 
         #line 1835 
         __VERIFIER_assume(0);
  }
  #line 1845 
  return (void *)0;
  #line 1848 
  emg_started_23: 
                  #line 1848 
  ;
  #line 1849 
  switch (ldv_undef_int()) {
    #line 1850 
    case 0: 
            #line 1850 
    ;
    #line 1852 
    emg_23_emg_param_1_49 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
    #line 1852 
    emg_23_emg_param_1_49 = emg_23_emg_param_1_49;
    #line 1853 
    emg_23_emg_param_2_50 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 1853 
    emg_23_emg_param_2_50 = emg_23_emg_param_2_50;
    #line 1857 
    emg_wrapper_ath9k_htc_tx(emg_23_resource,emg_23_emg_param_1_49,emg_23_emg_param_2_50);
    #line 1861 
    ldv_free((void *)emg_23_emg_param_1_49);
    #line 1862 
    ldv_free((void *)emg_23_emg_param_2_50);
    #line 1864 
    break;
    #line 1866 
    case 1: 
            #line 1866 
    ;
    #line 1868 
    emg_23_emg_param_1_47 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1868 
    emg_23_emg_param_1_47 = emg_23_emg_param_1_47;
    #line 1869 
    emg_23_emg_param_2_48 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 1869 
    emg_23_emg_param_2_48 = emg_23_emg_param_2_48;
    #line 1873 
    emg_wrapper_ath9k_htc_sw_scan_start(emg_23_resource,emg_23_emg_param_1_47,emg_23_emg_param_2_48);
    #line 1877 
    ldv_free((void *)emg_23_emg_param_1_47);
    #line 1878 
    ldv_free((void *)emg_23_emg_param_2_48);
    #line 1880 
    break;
    #line 1882 
    case 2: 
            #line 1882 
    ;
    #line 1884 
    emg_23_emg_param_1_46 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1884 
    emg_23_emg_param_1_46 = emg_23_emg_param_1_46;
    #line 1888 
    emg_wrapper_ath9k_htc_sw_scan_complete(emg_23_resource,emg_23_emg_param_1_46);
    #line 1892 
    ldv_free((void *)emg_23_emg_param_1_46);
    #line 1894 
    break;
    #line 1896 
    case 3: 
            #line 1896 
    ;
    #line 1898 
    emg_23_emg_param_1_44 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1898 
    emg_23_emg_param_1_44 = emg_23_emg_param_1_44;
    #line 1899 
    emg_23_emg_param_2_45 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 1899 
    emg_23_emg_param_2_45 = emg_23_emg_param_2_45;
    #line 1903 
    emg_wrapper_ath9k_htc_sta_remove(emg_23_resource,emg_23_emg_param_1_44,emg_23_emg_param_2_45);
    #line 1907 
    ldv_free((void *)emg_23_emg_param_1_44);
    #line 1908 
    ldv_free((void *)emg_23_emg_param_2_45);
    #line 1910 
    break;
    #line 1912 
    case 4: 
            #line 1912 
    ;
    #line 1914 
    emg_23_emg_param_1_41 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1914 
    emg_23_emg_param_1_41 = emg_23_emg_param_1_41;
    #line 1915 
    emg_23_emg_param_2_42 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 1915 
    emg_23_emg_param_2_42 = emg_23_emg_param_2_42;
    #line 1919 
    emg_wrapper_ath9k_htc_sta_rc_update(emg_23_resource,emg_23_emg_param_1_41,emg_23_emg_param_2_42,emg_23_emg_param_3_43);
    #line 1923 
    ldv_free((void *)emg_23_emg_param_1_41);
    #line 1924 
    ldv_free((void *)emg_23_emg_param_2_42);
    #line 1926 
    break;
    #line 1928 
    case 5: 
            #line 1928 
    ;
    #line 1930 
    emg_23_emg_param_1_39 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1930 
    emg_23_emg_param_1_39 = emg_23_emg_param_1_39;
    #line 1931 
    emg_23_emg_param_2_40 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 1931 
    emg_23_emg_param_2_40 = emg_23_emg_param_2_40;
    #line 1935 
    emg_wrapper_ath9k_htc_sta_add(emg_23_resource,emg_23_emg_param_1_39,emg_23_emg_param_2_40);
    #line 1939 
    ldv_free((void *)emg_23_emg_param_1_39);
    #line 1940 
    ldv_free((void *)emg_23_emg_param_2_40);
    #line 1942 
    break;
    #line 1944 
    case 6: 
            #line 1944 
    ;
    #line 1946 
    emg_23_emg_param_1_37 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1946 
    emg_23_emg_param_1_37 = emg_23_emg_param_1_37;
    #line 1950 
    emg_wrapper_ath9k_htc_set_tsf(emg_23_resource,emg_23_emg_param_1_37,emg_23_emg_param_2_38);
    #line 1954 
    ldv_free((void *)emg_23_emg_param_1_37);
    #line 1956 
    break;
    #line 1958 
    case 7: 
            #line 1958 
    ;
    #line 1960 
    emg_wrapper_ath9k_htc_set_rts_threshold(emg_23_resource,emg_23_emg_param_1_36);
    #line 1962 
    break;
    #line 1964 
    case 8: 
            #line 1964 
    ;
    #line 1966 
    emg_23_emg_param_1_32 = (enum set_key_cmd *)ldv_xmalloc_unknown_size(0UL);
    #line 1966 
    emg_23_emg_param_1_32 = emg_23_emg_param_1_32;
    #line 1967 
    emg_23_emg_param_2_33 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1967 
    emg_23_emg_param_2_33 = emg_23_emg_param_2_33;
    #line 1968 
    emg_23_emg_param_3_34 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 1968 
    emg_23_emg_param_3_34 = emg_23_emg_param_3_34;
    #line 1969 
    emg_23_emg_param_4_35 = (struct ieee80211_key_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 1969 
    emg_23_emg_param_4_35 = emg_23_emg_param_4_35;
    #line 1973 
    emg_wrapper_ath9k_htc_set_key(emg_23_resource,*emg_23_emg_param_1_32,emg_23_emg_param_2_33,emg_23_emg_param_3_34,emg_23_emg_param_4_35);
    #line 1977 
    ldv_free((void *)emg_23_emg_param_1_32);
    #line 1978 
    ldv_free((void *)emg_23_emg_param_2_33);
    #line 1979 
    ldv_free((void *)emg_23_emg_param_3_34);
    #line 1980 
    ldv_free((void *)emg_23_emg_param_4_35);
    #line 1982 
    break;
    #line 1984 
    case 9: 
            #line 1984 
    ;
    #line 1986 
    emg_wrapper_ath9k_htc_set_coverage_class(emg_23_resource,(short)((int)emg_23_emg_param_1_31));
    #line 1988 
    break;
    #line 1990 
    case 10: 
             #line 1990 
    ;
    #line 1992 
    emg_23_emg_param_1_29 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 1992 
    emg_23_emg_param_1_29 = emg_23_emg_param_1_29;
    #line 1993 
    emg_23_emg_param_2_30 = (struct cfg80211_bitrate_mask *)ldv_xmalloc_unknown_size(0UL);
    #line 1993 
    emg_23_emg_param_2_30 = emg_23_emg_param_2_30;
    #line 1997 
    emg_wrapper_ath9k_htc_set_bitrate_mask(emg_23_resource,emg_23_emg_param_1_29,emg_23_emg_param_2_30);
    #line 2001 
    ldv_free((void *)emg_23_emg_param_1_29);
    #line 2002 
    ldv_free((void *)emg_23_emg_param_2_30);
    #line 2004 
    break;
    #line 2006 
    case 11: 
             #line 2006 
    ;
    #line 2008 
    ath9k_htc_rfkill_poll_state(emg_23_resource);
    #line 2010 
    break;
    #line 2012 
    case 12: 
             #line 2012 
    ;
    #line 2014 
    emg_23_emg_param_1_28 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2014 
    emg_23_emg_param_1_28 = emg_23_emg_param_1_28;
    #line 2018 
    emg_wrapper_ath9k_htc_reset_tsf(emg_23_resource,emg_23_emg_param_1_28);
    #line 2022 
    ldv_free((void *)emg_23_emg_param_1_28);
    #line 2024 
    break;
    #line 2026 
    case 13: 
             #line 2026 
    ;
    #line 2028 
    emg_23_emg_param_1_27 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2028 
    emg_23_emg_param_1_27 = emg_23_emg_param_1_27;
    #line 2032 
    emg_wrapper_ath9k_htc_remove_interface(emg_23_resource,emg_23_emg_param_1_27);
    #line 2036 
    ldv_free((void *)emg_23_emg_param_1_27);
    #line 2038 
    break;
    #line 2040 
    case 14: 
             #line 2040 
    ;
    #line 2042 
    emg_23_emg_param_1_26 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2042 
    emg_23_emg_param_1_26 = emg_23_emg_param_1_26;
    #line 2046 
    emg_wrapper_ath9k_htc_get_tsf(emg_23_resource,emg_23_emg_param_1_26);
    #line 2050 
    ldv_free((void *)emg_23_emg_param_1_26);
    #line 2052 
    break;
    #line 2054 
    case 15: 
             #line 2054 
    ;
    #line 2056 
    emg_23_emg_param_1_25 = (struct ieee80211_low_level_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 2056 
    emg_23_emg_param_1_25 = emg_23_emg_param_1_25;
    #line 2060 
    emg_wrapper_ath9k_htc_get_stats(emg_23_resource,emg_23_emg_param_1_25);
    #line 2064 
    ldv_free((void *)emg_23_emg_param_1_25);
    #line 2066 
    break;
    #line 2068 
    case 16: 
             #line 2068 
    ;
    #line 2070 
    emg_23_emg_param_1_22 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2070 
    emg_23_emg_param_1_22 = emg_23_emg_param_1_22;
    #line 2071 
    emg_23_emg_param_3_24 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
    #line 2071 
    emg_23_emg_param_3_24 = emg_23_emg_param_3_24;
    #line 2075 
    ath9k_htc_get_et_strings(emg_23_resource,emg_23_emg_param_1_22,emg_23_emg_param_2_23,emg_23_emg_param_3_24);
    #line 2079 
    ldv_free((void *)emg_23_emg_param_1_22);
    #line 2080 
    ldv_free((void *)emg_23_emg_param_3_24);
    #line 2082 
    break;
    #line 2084 
    case 17: 
             #line 2084 
    ;
    #line 2086 
    emg_23_emg_param_1_19 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2086 
    emg_23_emg_param_1_19 = emg_23_emg_param_1_19;
    #line 2087 
    emg_23_emg_param_2_20 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 2087 
    emg_23_emg_param_2_20 = emg_23_emg_param_2_20;
    #line 2088 
    emg_23_emg_param_3_21 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
    #line 2088 
    emg_23_emg_param_3_21 = emg_23_emg_param_3_21;
    #line 2092 
    ath9k_htc_get_et_stats(emg_23_resource,emg_23_emg_param_1_19,emg_23_emg_param_2_20,emg_23_emg_param_3_21);
    #line 2096 
    ldv_free((void *)emg_23_emg_param_1_19);
    #line 2097 
    ldv_free((void *)emg_23_emg_param_2_20);
    #line 2098 
    ldv_free((void *)emg_23_emg_param_3_21);
    #line 2100 
    break;
    #line 2102 
    case 18: 
             #line 2102 
    ;
    #line 2104 
    emg_23_emg_param_1_17 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2104 
    emg_23_emg_param_1_17 = emg_23_emg_param_1_17;
    #line 2108 
    ath9k_htc_get_et_sset_count(emg_23_resource,emg_23_emg_param_1_17,emg_23_emg_param_2_18);
    #line 2112 
    ldv_free((void *)emg_23_emg_param_1_17);
    #line 2114 
    break;
    #line 2116 
    case 19: 
             #line 2116 
    ;
    #line 2118 
    emg_23_emg_param_1_15 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 2118 
    emg_23_emg_param_1_15 = emg_23_emg_param_1_15;
    #line 2119 
    emg_23_emg_param_2_16 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 2119 
    emg_23_emg_param_2_16 = emg_23_emg_param_2_16;
    #line 2123 
    emg_wrapper_ath9k_htc_get_antenna(emg_23_resource,emg_23_emg_param_1_15,emg_23_emg_param_2_16);
    #line 2127 
    ldv_free((void *)emg_23_emg_param_1_15);
    #line 2128 
    ldv_free((void *)emg_23_emg_param_2_16);
    #line 2130 
    break;
    #line 2132 
    case 20: 
             #line 2132 
    ;
    #line 2134 
    emg_23_emg_param_2_13 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 2134 
    emg_23_emg_param_2_13 = emg_23_emg_param_2_13;
    #line 2138 
    emg_wrapper_ath9k_htc_configure_filter(emg_23_resource,emg_23_emg_param_1_12,emg_23_emg_param_2_13,emg_23_emg_param_3_14);
    #line 2142 
    ldv_free((void *)emg_23_emg_param_2_13);
    #line 2144 
    break;
    #line 2146 
    case 21: 
             #line 2146 
    ;
    #line 2148 
    emg_wrapper_ath9k_htc_config(emg_23_resource,emg_23_emg_param_1_11);
    #line 2150 
    break;
    #line 2152 
    case 22: 
             #line 2152 
    ;
    #line 2154 
    emg_23_emg_param_1_8 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2154 
    emg_23_emg_param_1_8 = emg_23_emg_param_1_8;
    #line 2155 
    emg_23_emg_param_3_10 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
    #line 2155 
    emg_23_emg_param_3_10 = emg_23_emg_param_3_10;
    #line 2159 
    emg_wrapper_ath9k_htc_conf_tx(emg_23_resource,emg_23_emg_param_1_8,(unsigned short)((int)emg_23_emg_param_2_9),emg_23_emg_param_3_10);
    #line 2163 
    ldv_free((void *)emg_23_emg_param_1_8);
    #line 2164 
    ldv_free((void *)emg_23_emg_param_3_10);
    #line 2166 
    break;
    #line 2168 
    case 23: 
             #line 2168 
    ;
    #line 2170 
    emg_23_emg_param_1_6 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2170 
    emg_23_emg_param_1_6 = emg_23_emg_param_1_6;
    #line 2171 
    emg_23_emg_param_2_7 = (struct cfg80211_chan_def *)ldv_xmalloc_unknown_size(0UL);
    #line 2171 
    emg_23_emg_param_2_7 = emg_23_emg_param_2_7;
    #line 2175 
    emg_wrapper_ath9k_htc_channel_switch_beacon(emg_23_resource,emg_23_emg_param_1_6,emg_23_emg_param_2_7);
    #line 2179 
    ldv_free((void *)emg_23_emg_param_1_6);
    #line 2180 
    ldv_free((void *)emg_23_emg_param_2_7);
    #line 2182 
    break;
    #line 2184 
    case 24: 
             #line 2184 
    ;
    #line 2186 
    emg_23_emg_param_1_3 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2186 
    emg_23_emg_param_1_3 = emg_23_emg_param_1_3;
    #line 2187 
    emg_23_emg_param_2_4 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 2187 
    emg_23_emg_param_2_4 = emg_23_emg_param_2_4;
    #line 2191 
    emg_wrapper_ath9k_htc_bss_info_changed(emg_23_resource,emg_23_emg_param_1_3,emg_23_emg_param_2_4,emg_23_emg_param_3_5);
    #line 2195 
    ldv_free((void *)emg_23_emg_param_1_3);
    #line 2196 
    ldv_free((void *)emg_23_emg_param_2_4);
    #line 2198 
    break;
    #line 2200 
    case 25: 
             #line 2200 
    ;
    #line 2202 
    emg_23_emg_param_1_1 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2202 
    emg_23_emg_param_1_1 = emg_23_emg_param_1_1;
    #line 2203 
    emg_23_emg_param_2_2 = (struct ieee80211_ampdu_params *)ldv_xmalloc_unknown_size(0UL);
    #line 2203 
    emg_23_emg_param_2_2 = emg_23_emg_param_2_2;
    #line 2207 
    emg_wrapper_ath9k_htc_ampdu_action(emg_23_resource,emg_23_emg_param_1_1,emg_23_emg_param_2_2);
    #line 2211 
    ldv_free((void *)emg_23_emg_param_1_1);
    #line 2212 
    ldv_free((void *)emg_23_emg_param_2_2);
    #line 2214 
    break;
    #line 2216 
    case 26: 
             #line 2216 
    ;
    #line 2218 
    emg_23_emg_param_1_51 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    #line 2218 
    emg_23_emg_param_1_51 = emg_23_emg_param_1_51;
    #line 2222 
    if (emg_23_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      #line 2223 
      (*(emg_23_container->suspend))(emg_23_resource,emg_23_emg_param_1_51);
    #line 2228 
    ldv_free((void *)emg_23_emg_param_1_51);
    #line 2232 
    if (emg_23_container->resume != (int (*)(struct ieee80211_hw *))0) 
      #line 2233 
      (*(emg_23_container->resume))(emg_23_resource);
    #line 2237 
    if (emg_repeat_cnt_started_23_0 > 0) {
      #line 2238 
      emg_repeat_cnt_started_23_0 --;
      #line 2240 
      goto emg_started_23;
    }
    else 
         #line 2242 
         __VERIFIER_assume(0);
    #line 2246 
    break;
    #line 2248 
    case 27: 
             #line 2248 
    ;
    #line 2250 
    emg_23_emg_param_1_0 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 2250 
    emg_23_emg_param_1_0 = emg_23_emg_param_1_0;
    #line 2254 
    emg_wrapper_ath9k_htc_add_interface(emg_23_resource,emg_23_emg_param_1_0);
    #line 2258 
    ldv_free((void *)emg_23_emg_param_1_0);
    #line 2261 
    if (emg_repeat_cnt_started_23_1 > 0) {
      #line 2262 
      emg_repeat_cnt_started_23_1 --;
      #line 2264 
      goto emg_started_23;
    }
    else 
         #line 2266 
         __VERIFIER_assume(0);
    #line 2270 
    break;
    #line 2272 
    case 28: 
             #line 2272 
    ;
    #line 2275 
    rtnl_lock();
    #line 2279 
    emg_wrapper_hif_usb_stop((void *)emg_23_resource);
    #line 2284 
    rtnl_unlock();
    #line 2287 
    if (emg_repeat_cnt_main_23_1 > 0) {
      #line 2288 
      emg_repeat_cnt_main_23_1 --;
      #line 2290 
      goto emg_main_23;
    }
    else 
         #line 2292 
         __VERIFIER_assume(0);
    #line 2296 
    break;
    #line 2298 
    default: 
             #line 2298 
    ;
    #line 2298 
    __VERIFIER_assume(0);
  }
  #line 2301 
  return (void *)0;
}

#line 2306  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_timer_timer_scenario_9(void *arg0)
{
  #line 2309 
  struct timer_list *emg_24_container;
  #line 2310 
  unsigned long emg_24_emg_param_0_0;
  #line 2312 
  struct emg_struct_timer_scenario_9_24 *data = (struct emg_struct_timer_scenario_9_24 *)arg0;
  #line 2317 
  if (data != (struct emg_struct_timer_scenario_9_24 *)0) {
    #line 2318 
    emg_24_container = data->arg0;
    #line 2319 
    ldv_free((void *)data);
  }
  #line 2325 
  ldv_switch_to_interrupt_context();
  #line 2329 
  if (emg_24_container->function != (void (*)(struct timer_list *))0) 
    #line 2330 
    (*(emg_24_container->function))((struct timer_list *)emg_24_emg_param_0_0);
  #line 2336 
  ldv_switch_to_process_context();
  #line 2343 
  return (void *)0;
}

#line 2348  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_usb_usb_scenario_ath9k_hif_usb_driver(void *arg0)
{
  #line 2351 
  int emg_25_choice;
  #line 2352 
  struct usb_driver *emg_25_container;
  #line 2353 
  struct usb_device_id *emg_25_device_id;
  #line 2354 
  struct pm_message *emg_25_emg_param_1_0;
  #line 2355 
  int emg_25_probe_retval;
  #line 2356 
  struct usb_interface *emg_25_resource;
  #line 2357 
  struct usb_device *emg_25_usb_device;
  #line 2358 
  int emg_repeat_cnt_manage_interface_25 = 1;
  #line 2360 
  struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 *data = (struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 *)arg0;
  #line 2364 
  emg_25_choice = 0;
  #line 2365 
  emg_25_probe_retval = ldv_undef_int();
  #line 2366 
  emg_25_choice = 0;
  #line 2367 
  emg_25_container = emg_alias_ath9k_hif_usb_driver;
  #line 2368 
  emg_25_probe_retval = ldv_undef_int();
  #line 2370 
  __VERIFIER_assume(data->arg0 == emg_alias_ath9k_hif_usb_driver);
  #line 2372 
  if (data != (struct emg_struct_usb_scenario_ath9k_hif_usb_driver_25 *)0) {
    #line 2373 
    emg_25_container = data->arg0;
    #line 2374 
    ldv_free((void *)data);
  }
  #line 2379 
  emg_25_resource = (struct usb_interface *)ldv_xmalloc(1704UL);
  #line 2380 
  emg_25_usb_device = (struct usb_device *)ldv_xmalloc(2200UL);
  #line 2381 
  emg_25_resource->dev.parent = & emg_25_usb_device->dev;
  #line 2382 
  emg_25_choice = __ldv_undef_int_range(0,28);
  #line 2383 
  emg_25_device_id = emg_25_container->id_table + (unsigned long)emg_25_choice;
  #line 2387 
  goto emg_manage_interface_25;
  #line 2391 
  return (void *)0;
  #line 2394 
  emg_manage_interface_25: 
                           #line 2394 
  ;
  #line 2395 
  if (ldv_undef_int() != 0) {
    #line 2398 
    ldv_pre_probe();
    #line 2402 
    emg_25_probe_retval = emg_wrapper_ath9k_hif_usb_probe(emg_25_resource,emg_25_device_id);
    #line 2407 
    emg_25_probe_retval = ldv_post_probe(emg_25_probe_retval);
    #line 2410 
    if (ldv_undef_int() != 0) {
      #line 2412 
      __VERIFIER_assume(emg_25_probe_retval == 0);
      #line 2415 
      switch (ldv_undef_int()) {
        #line 2416 
        case 0: 
                #line 2416 
        ;
        #line 2422 
        if (emg_25_container->pre_reset != (int (*)(struct usb_interface *))0) 
          #line 2423 
          (*(emg_25_container->pre_reset))(emg_25_resource);
        #line 2428 
        if (emg_25_container->post_reset != (int (*)(struct usb_interface *))0) 
          #line 2429 
          (*(emg_25_container->post_reset))(emg_25_resource);
        #line 2432 
        break;
        #line 2434 
        case 1: 
                #line 2434 
        ;
        #line 2436 
        emg_25_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
        #line 2436 
        emg_25_emg_param_1_0 = emg_25_emg_param_1_0;
        #line 2440 
        emg_wrapper_ath9k_hif_usb_suspend(emg_25_resource,*emg_25_emg_param_1_0);
        #line 2444 
        ldv_free((void *)emg_25_emg_param_1_0);
        #line 2447 
        if (ldv_undef_int() != 0) 
                                  #line 2449 
                                  emg_wrapper_ath9k_hif_usb_resume(emg_25_resource); else 
                                                                    #line 2453 
                                                                    emg_wrapper_ath9k_hif_usb_resume(emg_25_resource);
        #line 2456 
        break;
        #line 2458 
        case 2: 
                #line 2458 
        ;
        #line 2462 
        break;
        #line 2464 
        case 3: 
                #line 2464 
        ;
        #line 2467 
        break;
        #line 2469 
        default: 
                 #line 2469 
        ;
        #line 2469 
        __VERIFIER_assume(0);
      }
      #line 2473 
      emg_wrapper_ath9k_hif_usb_disconnect(emg_25_resource);
    }
    else 
         #line 2477 
         __VERIFIER_assume(emg_25_probe_retval != 0);
    #line 2481 
    if (emg_repeat_cnt_manage_interface_25 > 0) {
      #line 2482 
      emg_repeat_cnt_manage_interface_25 --;
      #line 2484 
      goto emg_manage_interface_25;
    }
    else 
         #line 2486 
         __VERIFIER_assume(0);
  }
  else {
    #line 2492 
    ldv_free((void *)emg_25_resource);
    #line 2493 
    ldv_free((void *)emg_25_usb_device);
  }
  #line 2501 
  return (void *)0;
}

#line 2506  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1)
{
  #line 2509 
  struct dentry *emg_2_dentry;
  #line 2510 
  struct inode *emg_2_inode;
  #line 2512 
  if (ldv_undef_int() != 0) {
    #line 2514 
    emg_2_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 2515 
    emg_2_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 2516 
    emg_2_inode->i_mode = (unsigned short)16877U;
    #line 2517 
    emg_2_dentry->d_parent = arg1;
    #line 2518 
    emg_2_dentry->d_inode = emg_2_inode;
    #line 2519 
    return emg_2_dentry;
  }
  else {
    #line 2523 
    return (struct dentry *)ERR_PTR(-19L);
  }
}

#line 2531  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  #line 2534 
  struct dentry *emg_3_dentry;
  #line 2535 
  struct file_operations *emg_3_file_operations;
  #line 2536 
  struct inode *emg_3_inode;
  #line 2538 
  if (ldv_undef_int() != 0) {
    #line 2540 
    emg_3_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 2541 
    emg_3_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 2542 
    emg_3_inode->i_mode = arg1;
    #line 2543 
    emg_3_dentry->d_parent = arg2;
    #line 2544 
    emg_3_inode->i_private = arg3;
    #line 2545 
    emg_3_file_operations = arg4;
    #line 2546 
    emg_3_dentry->d_inode = emg_3_inode;
    #line 2547 
    ldv_save_allocated_memory_to_list((void *)emg_3_dentry);
    #line 2551 
    emg_dispatch_register_3(emg_3_file_operations);
    #line 2555 
    return emg_3_dentry;
  }
  else {
    #line 2559 
    return (struct dentry *)ERR_PTR(-19L);
  }
}

#line 2567  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
int emg_del_timer_sync(struct timer_list *arg0)
{
  #line 2570 
  struct timer_list *emg_4_timer_list;
  #line 2573 
  emg_4_timer_list = arg0;
  #line 2577 
  emg_dispatch_instance_deregister_4(emg_4_timer_list);
  #line 2578 
  ;
  #line 2578 
  return 0;
}

#line 2584  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  #line 2587 
  struct ieee80211_hw *emg_5_ieee80211_hw;
  #line 2588 
  struct ieee80211_ops *emg_5_ieee80211_ops;
  #line 2590 
  emg_5_ieee80211_ops = & ath9k_htc_ops;
  #line 2591 
  if (ldv_undef_int() != 0) {
    #line 2593 
    emg_5_ieee80211_ops = arg1;
    #line 2594 
    emg_5_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc(184UL);
    #line 2598 
    emg_dispatch_register_5(emg_5_ieee80211_hw);
    #line 2602 
    return emg_5_ieee80211_hw;
  }
  else 
       #line 2606 
       return (struct ieee80211_hw *)0;
}

#line 2614  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  #line 2617 
  struct ieee80211_hw *emg_6_ieee80211_hw;
  #line 2620 
  emg_dispatch_deregister_6(emg_6_ieee80211_hw);
  #line 2624 
  ldv_free((void *)emg_6_ieee80211_hw);
  #line 2627 
  return;
}

#line 2632  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
int emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  #line 2635 
  struct timer_list *emg_7_timer_list;
  #line 2637 
  if (ldv_undef_int() != 0) {
    #line 2639 
    emg_7_timer_list = arg0;
    #line 2643 
    emg_dispatch_instance_register_7(emg_7_timer_list);
    #line 2647 
    return 1;
  }
  else 
       #line 2651 
       return 0;
}

#line 2659  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_work(struct work_struct *arg0)
{
  #line 2662 
  struct work_struct *emg_8_work_struct;
  #line 2664 
  if (ldv_undef_int() != 0) {
    #line 2666 
    emg_8_work_struct = arg0;
    #line 2670 
    if (emg_8_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 2671 
      (*(emg_8_work_struct->func))(emg_8_work_struct);
    #line 2676 
    return (_Bool)1;
  }
  else 
       #line 2680 
       return (_Bool)0;
}

#line 2688  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  #line 2693 
  arg0->func = arg1;
  #line 2694 
  arg0->data = arg2;
  #line 2695 
  arg0->count.counter = 0;
  #line 2698 
  return;
}

#line 2703  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  #line 2706 
  unsigned long emg_10_emg_param_0_0;
  #line 2707 
  struct tasklet_struct *emg_10_tasklet_struct;
  #line 2710 
  emg_10_tasklet_struct = arg0;
  #line 2714 
  if (emg_10_tasklet_struct->count.counter == 0) 
    #line 2715 
    if (emg_10_tasklet_struct->func != (void (*)(unsigned long ))0) 
                                                                    #line 2716 
                                                                    (*(emg_10_tasklet_struct->func))(emg_10_emg_param_0_0);
  #line 2721 
  return;
}

#line 2726  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_deregister(struct usb_driver *arg0)
{
  #line 2729 
  struct usb_driver *emg_11_usb_driver;
  #line 2731 
  emg_11_usb_driver = emg_alias_ath9k_hif_usb_driver;
  #line 2733 
  emg_11_usb_driver = arg0;
  #line 2737 
  emg_dispatch_deregister_11(emg_11_usb_driver);
  #line 2740 
  return;
}

#line 2745  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_kill_urb(struct urb *arg0)
{
  #line 2748 
  struct urb *emg_12_urb;
  #line 2751 
  emg_12_urb = arg0;
  #line 2754 
  if (ldv_undef_int() != 0) {
    #line 2756 
    __VERIFIER_assume(emg_12_urb != (struct urb *)0);
    #line 2760 
    if (emg_12_urb->complete != (void (*)(struct urb *))0) 
                                                           #line 2761 
                                                           (*(emg_12_urb->complete))(emg_12_urb);
  }
  else 
       #line 2766 
       __VERIFIER_assume(emg_12_urb == (struct urb *)0);
  #line 2770 
  return;
}

#line 2775  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2)
{
  #line 2778 
  struct usb_driver *emg_13_usb_driver;
  #line 2780 
  emg_13_usb_driver = emg_alias_ath9k_hif_usb_driver;
  #line 2781 
  if (ldv_undef_int() != 0) {
    #line 2783 
    emg_13_usb_driver = arg0;
    #line 2787 
    emg_dispatch_register_13(emg_13_usb_driver);
    #line 2791 
    return 0;
  }
  else {
    #line 2795 
    ldv_failed_usb_register_driver();
    #line 2796 
    return ldv_undef_int_negative();
  }
}

#line 2804  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1)
{
  #line 2807 
  struct urb *emg_14_urb;
  #line 2809 
  if (ldv_undef_int() != 0) {
    #line 2811 
    emg_14_urb = arg0;
    #line 2812 
    ldv_check_alloc_flags(arg1);
    #line 2816 
    if (emg_14_urb->complete != (void (*)(struct urb *))0) 
                                                           #line 2817 
                                                           (*(emg_14_urb->complete))(emg_14_urb);
    #line 2822 
    return (int)((long)ldv_malloc_unknown_size());
  }
  else 
       #line 2826 
       return 0;
}

#line 2834  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 2837 
  int emg_1_ret;
  #line 2840 
  emg_1_ret = emg_ath9k_htc_init();
  #line 2841 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 2844 
  if (ldv_undef_int() != 0) {
    #line 2846 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 2850 
    emg_ath9k_htc_exit();
  }
  else 
       #line 2854 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 2858 
  return (void *)0;
}

#line 2863  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ath/ath9k/ath9k_htc.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 2865 
  ldv_initialize();
  #line 2867 
  emg_entry_point_insmod((void *)0);
  #line 2869 
  return 0;
}

