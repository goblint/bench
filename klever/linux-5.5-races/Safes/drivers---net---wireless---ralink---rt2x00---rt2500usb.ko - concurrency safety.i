/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_true {
   struct static_key key ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key_false {
   struct static_key key ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
union __anonunion_key_9 {
   struct static_key_true dd_key_true ;
   struct static_key_false dd_key_false ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct _ddebug {
   char *modname ;
   char *function ;
   char *filename ;
   char *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
   union __anonunion_key_9 key ;
} __attribute__((__aligned__(8)));
#line 59 
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_112 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_112 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct __anonstruct_nodemask_t_113 {
   unsigned long bits[16U] ;
};
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct __anonstruct_nodemask_t_113 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_126 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_127 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_125 {
   struct __anonstruct_126 __anonCompField___anonunion_125_28 ;
   struct __anonstruct_127 __anonCompField___anonunion_125_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_125 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_128 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_128 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_130 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_131 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_133 {
   struct list_head slab_list ;
   struct __anonstruct_134 __anonCompField___anonunion_133_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_136 __anonCompField___anonunion_135_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   union __anonunion_133 __anonCompField___anonstruct_132_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_135 __anonCompField___anonstruct_132_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_137 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_140 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_140 __anonCompField___anonstruct_139_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_129 {
   struct __anonstruct_130 __anonCompField___anonunion_129_31 ;
   struct __anonstruct_131 __anonCompField___anonunion_129_32 ;
   struct __anonstruct_132 __anonCompField___anonunion_129_37 ;
   struct __anonstruct_137 __anonCompField___anonunion_129_38 ;
   struct __anonstruct_138 __anonCompField___anonunion_129_39 ;
   struct __anonstruct_139 __anonCompField___anonunion_129_41 ;
   struct __anonstruct_141 __anonCompField___anonunion_129_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_129 __anonCompField_page_43 ;
   union __anonunion_142 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_143 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_143 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct user_namespace;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_144 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_144 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
struct percpu_ref;
#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 176 
struct file_ra_state;
#line 177 
struct user_struct;
#line 178 
struct writeback_control;
#line 179 
struct bdi_writeback;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 305 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_272 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_272 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_273 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_273 kgid_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_276 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_276 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_277 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_278 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_279 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_280 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_283 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_284 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_282 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_283 _addr_bnd ;
   struct __anonstruct__addr_pkey_284 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_281 {
   void *_addr ;
   union __anonunion_282 __anonCompField___anonstruct__sigfault_281_47 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_285 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_286 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_277 _kill ;
   struct __anonstruct__timer_278 _timer ;
   struct __anonstruct__rt_279 _rt ;
   struct __anonstruct__sigchld_280 _sigchld ;
   struct __anonstruct__sigfault_281 _sigfault ;
   struct __anonstruct__sigpoll_285 _sigpoll ;
   struct __anonstruct__sigsys_286 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_291 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_291 __anonCompField_kernel_siginfo_50 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_296 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_296 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_298 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_298 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_387 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_386 {
   struct __anonstruct_387 __anonCompField___anonunion_386_53 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_386 __anonCompField_lockref_54 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_389 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_388 {
   struct __anonstruct_389 __anonCompField___anonunion_388_55 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_388 __anonCompField_qstr_56 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89 
struct super_block;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_390 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_391 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_390 __anonCompField_dentry_57 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_391 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_409 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_409 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_410 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_411 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_410 __anonCompField_io_cq_60 ;
   union __anonunion_411 __anonCompField_io_cq_61 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bio;
#line 287 
struct export_operations;
#line 288 
struct hd_geometry;
#line 289 
struct iovec;
#line 290 
struct kiocb;
#line 291 
struct kobject;
#line 292 
struct poll_table_struct;
#line 293 
struct kstatfs;
#line 294 
struct swap_info_struct;
#line 295 
struct iov_iter;
#line 296 
struct fscrypt_info;
#line 297 
struct fscrypt_operations;
#line 298 
struct fsverity_info;
#line 299 
struct fsverity_operations;
#line 300 
struct fs_context;
#line 301 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_412 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_412 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_413 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_413 __anonCompField_kqid_62 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_415 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_414 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_415 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_414 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_418 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_419 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_420 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_421 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_418 __anonCompField_inode_63 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_419 __anonCompField_inode_64 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_420 __anonCompField_inode_65 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_421 __anonCompField_inode_66 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_422 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_422 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_424 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_423 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_424 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_423 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 3599 
struct sock;
#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_438 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_440 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_439 {
   unsigned long nr_segs ;
   struct __anonstruct_440 __anonCompField___anonunion_439_68 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_438 __anonCompField_iov_iter_67 ;
   union __anonunion_439 __anonCompField_iov_iter_69 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_8871 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_8871 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 323 
struct kernfs_open_node;
#line 324 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_463 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_463 __anonCompField_kernfs_node_72 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_466 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_466 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_467 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_467 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_478 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_479 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_480 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_481 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_478 ports ;
   struct __anonstruct_icmpt_479 icmpt ;
   struct __anonstruct_dnports_480 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_481 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_482 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_482 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_489 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_488 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_489 __anonCompField___anonstruct_488_85 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_487 {
   struct __anonstruct_488 __anonCompField___anonunion_487_86 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_490 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_491 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_493 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_492 {
   struct __anonstruct_493 __anonCompField___anonunion_492_90 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_495 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_494 {
   __wsum csum ;
   struct __anonstruct_495 __anonCompField___anonunion_494_92 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_496 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_497 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_498 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_487 __anonCompField_sk_buff_87 ;
   union __anonunion_490 __anonCompField_sk_buff_88 ;
   union __anonunion_491 __anonCompField_sk_buff_89 ;
   char cb[48U] ;
   union __anonunion_492 __anonCompField_sk_buff_91 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_494 __anonCompField_sk_buff_93 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_496 __anonCompField_sk_buff_94 ;
   __u32 secmark ;
   union __anonunion_497 __anonCompField_sk_buff_95 ;
   union __anonunion_498 __anonCompField_sk_buff_96 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_528 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_528 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_529 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_529 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_530 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_530 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_531 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_531 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_532 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_532 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_533 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_533 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_534 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_534 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_535 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_535 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_536 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_537 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_536 ifr_ifrn ;
   union __anonunion_ifr_ifru_537 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_556 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_556 __anonCompField_ethtool_rxnfc_99 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_559 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_559 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_561 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_560 {
   struct __anonstruct_561 __anonCompField___anonunion_560_100 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_560 __anonCompField_ctl_table_header_101 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_562 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_562 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_563 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_563 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_564 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_564 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_565 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_565 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_567 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_567 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_580 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_579 {
   struct __anonstruct_580 __anonCompField___anonunion_579_102 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_579 __anonCompField_keyring_index_key_103 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_581 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_582 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_584 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_583 {
   struct keyring_index_key index_key ;
   struct __anonstruct_584 __anonCompField___anonunion_583_106 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_586 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_585 {
   union key_payload payload ;
   struct __anonstruct_586 __anonCompField___anonunion_585_108 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_581 __anonCompField_key_104 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_582 __anonCompField_key_105 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_583 __anonCompField_key_107 ;
   union __anonunion_585 __anonCompField_key_109 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_589 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_589 __anonCompField_cred_110 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_590 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_590 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_592 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_591 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_592 __anonCompField___anonunion_591_111 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_591 __anonCompField_uid_gid_map_112 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 139 
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
typedef enum irqreturn irqreturn_t;
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_594 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_596 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_595 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_596 __anonCompField___anonstruct_595_115 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_597 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_598 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_599 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_600 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_602 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_601 {
   union __anonunion_602 __anonCompField___anonstruct_601_120 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_603 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_604 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_605 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_606 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_607 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_594 __anonCompField_bpf_attr_114 ;
   struct __anonstruct_595 __anonCompField_bpf_attr_116 ;
   struct __anonstruct_597 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_598 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_599 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_test_600 test ;
   struct __anonstruct_601 __anonCompField_bpf_attr_121 ;
   struct __anonstruct_info_603 info ;
   struct __anonstruct_query_604 query ;
   struct __anonstruct_raw_tracepoint_605 raw_tracepoint ;
   struct __anonstruct_606 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_task_fd_query_607 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 215 
struct bpf_prog_aux;
#line 216 
struct bpf_map;
#line 217 
struct btf;
#line 218 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_640 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_640 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_642 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_641 {
   struct __anonstruct_tail_call_642 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_641 __anonCompField_bpf_jit_poke_descriptor_147 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_643 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_643 __anonCompField_bpf_prog_aux_148 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_645 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_645 __anonCompField_bpf_cgroup_storage_150 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_647 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_646 {
   struct __anonstruct_647 __anonCompField___anonunion_646_151 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_646 __anonCompField_sock_cgroup_data_152 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_670 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_670 __anonCompField_netlink_callback_153 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_675 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_676 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_677 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_678 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_674 {
   struct __anonstruct_675 __anonCompField___anonunion_674_155 ;
   struct __anonstruct_676 __anonCompField___anonunion_674_156 ;
   struct __anonstruct_677 __anonCompField___anonunion_674_157 ;
   struct __anonstruct_xsk_678 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_674 __anonCompField_netdev_bpf_158 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14504 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14505 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_679 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_680 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_679 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14504 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14505 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_680 __anonCompField_net_device_159 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elf.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_694 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_694 __anonCompField_kernel_param_160 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
typedef unsigned long kernel_ulong_t;
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_device;
#line 280 
struct usb_driver;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 1112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 1183  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_driver {
   char *name ;
   int (*probe)(struct usb_interface *, struct usb_device_id *) ;
   void (*disconnect)(struct usb_interface *) ;
   int (*unlocked_ioctl)(struct usb_interface *, unsigned int , void *) ;
   int (*suspend)(struct usb_interface *, pm_message_t ) ;
   int (*resume)(struct usb_interface *) ;
   int (*reset_resume)(struct usb_interface *) ;
   int (*pre_reset)(struct usb_interface *) ;
   int (*post_reset)(struct usb_interface *) ;
   struct usb_device_id *id_table ;
   struct attribute_group **dev_groups ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 100 
struct led_pattern;
#line 101 
enum led_brightness {
    LED_OFF = 0,
    LED_ON = 1,
    LED_HALF = 127,
    LED_FULL = 255
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_classdev {
   char *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   unsigned long work_flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_blocking)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   int (*pattern_set)(struct led_classdev *, struct led_pattern *, u32 , int ) ;
   int (*pattern_clear)(struct led_classdev *) ;
   struct device *dev ;
   struct attribute_group **groups ;
   struct list_head node ;
   char *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   int new_blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   int brightness_hw_changed ;
   struct kernfs_node *brightness_hw_changed_kn ;
   struct mutex led_access ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger {
   char *name ;
   int (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
   struct attribute_group **groups ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_pattern {
   u32 delta_t ;
   int brightness ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kfifo.h"
struct __kfifo {
   unsigned int in ;
   unsigned int out ;
   unsigned int mask ;
   unsigned int esize ;
   void *data ;
};
#line 819 
struct clk;
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
} __attribute__((__packed__));
#line 3263 
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3362 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4593 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 5912 
enum nl80211_nan_function_type {
    NL80211_NAN_FUNC_PUBLISH = 0,
    NL80211_NAN_FUNC_SUBSCRIBE = 1,
    NL80211_NAN_FUNC_FOLLOW_UP = 2,
    __NL80211_NAN_FUNC_TYPE_AFTER_LAST = 3,
    NL80211_NAN_FUNC_MAX_TYPE = 2
};
#line 6001 
enum nl80211_preamble {
    NL80211_PREAMBLE_LEGACY = 0,
    NL80211_PREAMBLE_HT = 1,
    NL80211_PREAMBLE_VHT = 2,
    NL80211_PREAMBLE_DMG = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u64 time_bss_rx ;
   u32 filled ;
   s8 noise ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_control_742 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_742 control[4U] ;
};
#line 1259 
enum rate_info_bw {
    RATE_INFO_BW_20 = 0,
    RATE_INFO_BW_5 = 1,
    RATE_INFO_BW_10 = 2,
    RATE_INFO_BW_40 = 3,
    RATE_INFO_BW_80 = 4,
    RATE_INFO_BW_160 = 5,
    RATE_INFO_BW_HE_RU = 6
};
#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
   u8 he_gi ;
   u8 he_dcm ;
   u8 he_ru_alloc ;
   u8 n_bonded_ch ;
};
#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};
#line 1373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_txq_stats {
   u32 filled ;
   u32 backlog_bytes ;
   u32 backlog_packets ;
   u32 flows ;
   u32 drops ;
   u32 ecn_marks ;
   u32 overlimit ;
   u32 overmemory ;
   u32 collisions ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 max_flows ;
};
#line 1399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
   struct cfg80211_txq_stats txq_stats ;
};
#line 1476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct station_info {
   u64 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 assoc_at ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 tx_duration ;
   u64 rx_duration ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   u8 connected_to_gate ;
   struct cfg80211_tid_stats *pertid ;
   s8 ack_signal ;
   s8 avg_ack_signal ;
   u16 airtime_weight ;
   u32 rx_mpdu_count ;
   u32 fcs_err_count ;
   u32 airtime_link_metric ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_info {
   u64 scan_start_tsf ;
   u8 tsf_bssid[6U] ;
   bool aborted ;
};
#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u16 duration ;
   bool duration_mandatory ;
   u32 flags ;
   u32 rates[4U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   u8 bssid[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   struct cfg80211_scan_info info ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_743 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_743 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 2821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 *kek ;
   u8 *kck ;
   u8 *replay_ctr ;
};
#line 2921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_conf {
   u8 master_pref ;
   u8 bands ;
};
#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func_filter {
   u8 *filter ;
   u8 len ;
};
#line 2978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func {
   enum nl80211_nan_function_type type ;
   u8 service_id[6U] ;
   u8 publish_type ;
   bool close_range ;
   bool publish_bcast ;
   bool subscribe_active ;
   u8 followup_id ;
   u8 followup_reqid ;
   struct mac_address followup_dest ;
   u32 ttl ;
   u8 *serv_spec_info ;
   u8 serv_spec_info_len ;
   bool srf_include ;
   u8 *srf_bf ;
   u8 srf_bf_len ;
   u8 srf_bf_idx ;
   struct mac_address *srf_macs ;
   int srf_num_macs ;
   struct cfg80211_nan_func_filter *rx_filters ;
   struct cfg80211_nan_func_filter *tx_filters ;
   u8 num_tx_filters ;
   u8 num_rx_filters ;
   u8 instance_id ;
   u64 cookie ;
};
#line 3072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ftm_responder_stats {
   u32 filled ;
   u32 success_num ;
   u32 partial_num ;
   u32 failed_num ;
   u32 asap_num ;
   u32 non_asap_num ;
   u64 total_duration_ms ;
   u32 unknown_triggers_num ;
   u32 reschedule_requests_num ;
   u32 out_of_window_triggers_num ;
};
#line 3210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_ftm_request_peer {
   enum nl80211_preamble preamble ;
   u16 burst_period ;
   u8 requested : 1 ;
   u8 asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
   u8 num_bursts_exp ;
   u8 burst_duration ;
   u8 ftms_per_burst ;
   u8 ftmr_retries ;
};
#line 3230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request_peer {
   u8 addr[6U] ;
   struct cfg80211_chan_def chandef ;
   u8 report_ap_tsf : 1 ;
   struct cfg80211_pmsr_ftm_request_peer ftm ;
};
#line 3253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request {
   u64 cookie ;
   void *drv_data ;
   u32 n_peers ;
   u32 nl_portid ;
   u32 timeout ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct list_head list ;
   struct cfg80211_pmsr_request_peer peers[] ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312 
struct nla_policy;
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_745 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_745 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_746 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_746 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_754 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_753 {
   void *validation_data ;
   struct __anonstruct_754 __anonCompField___anonunion_753_166 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_753 __anonCompField_nla_policy_167 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_828 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_829 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_827 {
   struct __anonstruct_828 __anonCompField___anonunion_827_169 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_829 __anonCompField___anonunion_827_170 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_827 __anonCompField_tcf_result_171 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_831 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_831 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_844 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_844 __anonCompField_bdi_writeback_173 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_845 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_845 __anonCompField_bio_174 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_848 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_849 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_851 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_852 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_850 {
   struct __anonstruct_elv_851 elv ;
   struct __anonstruct_flush_852 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_853 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_848 __anonCompField_request_175 ;
   union __anonunion_849 __anonCompField_request_176 ;
   union __anonunion_850 __anonCompField_request_177 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_853 __anonCompField_request_178 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_869 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_869 __anonCompField_bpf_prog_179 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_891 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_891 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_893 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_892 {
   __addrpair skc_addrpair ;
   struct __anonstruct_893 __anonCompField___anonunion_892_181 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_894 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_896 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_895 {
   __portpair skc_portpair ;
   struct __anonstruct_896 __anonCompField___anonunion_895_184 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_897 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_898 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_899 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_900 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_901 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_892 __anonCompField_sock_common_182 ;
   union __anonunion_894 __anonCompField_sock_common_183 ;
   union __anonunion_895 __anonCompField_sock_common_185 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_897 __anonCompField_sock_common_186 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_898 __anonCompField_sock_common_187 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_899 __anonCompField_sock_common_188 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_900 __anonCompField_sock_common_189 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_901 __anonCompField_sock_common_190 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_902 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_903 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_904 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_902 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_903 __anonCompField_sock_191 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_904 __anonCompField_sock_192 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_939 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_939 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 235 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};
#line 267 
struct ieee80211_vif;
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};
#line 304 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};
#line 311 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};
#line 395 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};
#line 402 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};
#line 440 
struct ieee80211_sta;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_u_1011 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_1011 u ;
};
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1015 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1014 {
   struct __anonstruct_1015 __anonCompField___anonunion_1014_195 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_1013 {
   union __anonunion_1014 __anonCompField___anonstruct_control_1013_196 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_1016 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_1017 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1018 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1012 {
   struct __anonstruct_control_1013 control ;
   struct __anonstruct_ack_1016 ack ;
   struct __anonstruct_status_1017 status ;
   struct __anonstruct_1018 __anonCompField___anonunion_1012_197 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_1012 __anonCompField_ieee80211_tx_info_198 ;
};
#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 *ies[4U] ;
   size_t len[4U] ;
   u8 *common_ies ;
   size_t common_ie_len ;
};
#line 1198 
enum mac80211_rx_encoding {
    RX_ENC_LEGACY = 0,
    RX_ENC_HT = 1,
    RX_ENC_VHT = 2,
    RX_ENC_HE = 3
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
   u32 delay ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_tkip_1020 {
   u32 iv32 ;
   u16 iv16 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ccmp_1021 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_cmac_1022 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_gmac_1023 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_gcmp_1024 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_hw_1025 {
   u8 seq[16U] ;
   u8 seq_len ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1019 {
   struct __anonstruct_tkip_1020 tkip ;
   struct __anonstruct_ccmp_1021 ccmp ;
   struct __anonstruct_aes_cmac_1022 aes_cmac ;
   struct __anonstruct_aes_gmac_1023 aes_gmac ;
   struct __anonstruct_gcmp_1024 gcmp ;
   struct __anonstruct_hw_1025 hw ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_1019 __anonCompField_ieee80211_key_seq_199 ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1857 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};
#line 1862 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1026 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1026 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2037 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};
#line 2057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2083 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    IEEE80211_HW_TDLS_WIDER_BW = 29,
    IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU = 30,
    IEEE80211_HW_BEACON_TX_STATUS = 31,
    IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR = 32,
    IEEE80211_HW_SUPPORTS_REORDERING_BUFFER = 33,
    IEEE80211_HW_USES_RSS = 34,
    IEEE80211_HW_TX_AMSDU = 35,
    IEEE80211_HW_TX_FRAG_LIST = 36,
    IEEE80211_HW_REPORTS_LOW_ACK = 37,
    IEEE80211_HW_SUPPORTS_TX_FRAG = 38,
    IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA = 39,
    IEEE80211_HW_DEAUTH_NEED_MGD_TX_PREP = 40,
    IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP = 41,
    IEEE80211_HW_BUFF_MMPDU_TXQ = 42,
    IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW = 43,
    IEEE80211_HW_STA_MMPDU_TXQ = 44,
    IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN = 45,
    IEEE80211_HW_SUPPORTS_MULTI_BSSID = 46,
    IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID = 47,
    IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT = 48,
    NUM_IEEE80211_HW_FLAGS = 49
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1027 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1027 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 2546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};
#line 2566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};
#line 2662 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};
#line 3161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ampdu_params {
   enum ieee80211_ampdu_mlme_action action ;
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
   u16 buf_size ;
   bool amsdu ;
   u16 timeout ;
};
#line 3170 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};
#line 3182 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};
#line 3187 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};
#line 3778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   void (*config_iface_filter)(struct ieee80211_hw *, struct ieee80211_vif *, unsigned int , unsigned int ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_set_txpwr)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*offset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, s64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 ) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*abort_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*channel_switch_rx_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_hw *, struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
   void (*sync_rx_queues)(struct ieee80211_hw *) ;
   int (*start_nan)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *) ;
   int (*stop_nan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*nan_change_conf)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *, u32 ) ;
   int (*add_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_func *) ;
   void (*del_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, u8 ) ;
   bool (*can_aggregate_in_amsdu)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff *) ;
   int (*get_ftm_responder_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_ftm_responder_stats *) ;
   int (*start_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
   void (*abort_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
};
#line 6481 
struct rt2x00_dev;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00debug.h"
struct regcsr {
   u32 (*read)(struct rt2x00_dev *, unsigned int ) ;
   void (*write)(struct rt2x00_dev *, unsigned int , u32 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00debug.h"
struct regeeprom {
   u16 (*read)(struct rt2x00_dev *, unsigned int ) ;
   void (*write)(struct rt2x00_dev *, unsigned int , u16 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00debug.h"
struct regbbp {
   u8 (*read)(struct rt2x00_dev *, unsigned int ) ;
   void (*write)(struct rt2x00_dev *, unsigned int , u8 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00debug.h"
struct regrf {
   u32 (*read)(struct rt2x00_dev *, unsigned int ) ;
   void (*write)(struct rt2x00_dev *, unsigned int , u32 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00debug.h"
struct regrfcsr {
   u8 (*read)(struct rt2x00_dev *, unsigned int ) ;
   void (*write)(struct rt2x00_dev *, unsigned int , u8 ) ;
   unsigned int flags ;
   unsigned int word_base ;
   unsigned int word_size ;
   unsigned int word_count ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00debug.h"
struct rt2x00debug {
   struct module *owner ;
   struct regcsr csr ;
   struct regeeprom eeprom ;
   struct regbbp bbp ;
   struct regrf rf ;
   struct regrfcsr rfcsr ;
};
#line 57 
enum rt2x00_dump_type {
    DUMP_FRAME_RXDONE = 1,
    DUMP_FRAME_TX = 2,
    DUMP_FRAME_TXDONE = 3,
    DUMP_FRAME_BEACON = 4
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00dump.h"
enum led_type {
    LED_TYPE_RADIO = 0,
    LED_TYPE_ASSOC = 1,
    LED_TYPE_ACTIVITY = 2,
    LED_TYPE_QUALITY = 3
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00leds.h"
struct rt2x00_led {
   struct rt2x00_dev *rt2x00dev ;
   struct led_classdev led_dev ;
   enum led_type type ;
   unsigned int flags ;
};
#line 37 
enum antenna {
    ANTENNA_SW_DIVERSITY = 0,
    ANTENNA_A = 1,
    ANTENNA_B = 2,
    ANTENNA_HW_DIVERSITY = 3
};
#line 52 
enum tsf_sync {
    TSF_SYNC_NONE = 0,
    TSF_SYNC_INFRA = 1,
    TSF_SYNC_ADHOC = 2,
    TSF_SYNC_AP_NONE = 3
};
#line 59 
enum dev_state {
    STATE_DEEP_SLEEP = 0,
    STATE_SLEEP = 1,
    STATE_STANDBY = 2,
    STATE_AWAKE = 3,
    STATE_RADIO_ON = 4,
    STATE_RADIO_OFF = 5,
    STATE_RADIO_IRQ_ON = 6,
    STATE_RADIO_IRQ_OFF = 7
};
#line 70 
enum ifs {
    IFS_BACKOFF = 0,
    IFS_SIFS = 1,
    IFS_NEW_BACKOFF = 2,
    IFS_NONE = 3
};
#line 77 
enum txop {
    TXOP_HTTXOP = 0,
    TXOP_PIFS = 1,
    TXOP_SIFS = 2,
    TXOP_BACKOFF = 3
};
#line 84 
enum cipher {
    CIPHER_NONE = 0,
    CIPHER_WEP64 = 1,
    CIPHER_WEP128 = 2,
    CIPHER_TKIP = 3,
    CIPHER_AES = 4,
    CIPHER_CKIP64 = 5,
    CIPHER_CKIP128 = 6,
    CIPHER_TKIP_NO_MIC = 7,
    CIPHER_MAX = 4
};
#line 96 
enum rate_modulation {
    RATE_MODE_CCK = 0,
    RATE_MODE_OFDM = 1,
    RATE_MODE_HT_MIX = 2,
    RATE_MODE_HT_GREENFIELD = 3
};
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00reg.h"
struct rt2x00_field8 {
   u8 bit_offset ;
   u8 bit_mask ;
};
#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00reg.h"
struct rt2x00_field16 {
   u16 bit_offset ;
   u16 bit_mask ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00reg.h"
struct rt2x00_field32 {
   u32 bit_offset ;
   u32 bit_mask ;
};
#line 161 
enum data_queue_qid {
    QID_AC_VO = 0,
    QID_AC_VI = 1,
    QID_AC_BE = 2,
    QID_AC_BK = 3,
    QID_HCCA = 4,
    QID_MGMT = 13,
    QID_RX = 14,
    QID_OTHER = 15,
    QID_BEACON = 16,
    QID_ATIM = 17
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct skb_frame_desc {
   u8 flags ;
   u8 desc_len ;
   u8 tx_rate_idx ;
   u8 tx_rate_flags ;
   void *desc ;
   __le32 iv[2U] ;
   dma_addr_t skb_dma ;
   struct ieee80211_sta *sta ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct rxdone_entry_desc {
   u64 timestamp ;
   int signal ;
   int rssi ;
   int size ;
   int flags ;
   int dev_flags ;
   u16 rate_mode ;
   u16 enc_flags ;
   enum mac80211_rx_encoding encoding ;
   enum rate_info_bw bw ;
   u8 cipher ;
   u8 cipher_status ;
   __le32 iv[2U] ;
   __le32 icv ;
};
#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct __anonstruct_plcp_1030 {
   u16 length_high ;
   u16 length_low ;
   u16 signal ;
   u16 service ;
   enum ifs ifs ;
};
#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct __anonstruct_ht_1031 {
   u16 mcs ;
   u8 stbc ;
   u8 ba_size ;
   u8 mpdu_density ;
   enum txop txop ;
   int wcid ;
};
#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
union __anonunion_u_1029 {
   struct __anonstruct_plcp_1030 plcp ;
   struct __anonstruct_ht_1031 ht ;
};
#line 293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct txentry_desc {
   unsigned long flags ;
   u16 length ;
   u16 header_length ;
   union __anonunion_u_1029 u ;
   enum rate_modulation rate_mode ;
   short retry_limit ;
   enum cipher cipher ;
   u16 key_idx ;
   u16 iv_offset ;
   u16 iv_len ;
};
#line 368 
struct data_queue;
#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct queue_entry {
   unsigned long flags ;
   unsigned long last_action ;
   struct data_queue *queue ;
   struct sk_buff *skb ;
   unsigned int entry_idx ;
   void *priv_data ;
};
#line 451  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
struct data_queue {
   struct rt2x00_dev *rt2x00dev ;
   struct queue_entry *entries ;
   enum data_queue_qid qid ;
   unsigned long flags ;
   struct mutex status_lock ;
   spinlock_t tx_lock ;
   spinlock_t index_lock ;
   unsigned int count ;
   unsigned short limit ;
   unsigned short threshold ;
   unsigned short length ;
   unsigned short index[3U] ;
   unsigned short wd_count ;
   unsigned int wd_idx ;
   unsigned short txop ;
   unsigned short aifs ;
   unsigned short cw_min ;
   unsigned short cw_max ;
   unsigned short data_size ;
   unsigned char desc_size ;
   unsigned char winfo_size ;
   unsigned short priv_size ;
   unsigned short usb_endpoint ;
   unsigned short usb_maxpacket ;
};
#line 676 
enum rt2x00_chip_intf {
    RT2X00_CHIP_INTF_PCI = 0,
    RT2X00_CHIP_INTF_PCIE = 1,
    RT2X00_CHIP_INTF_USB = 2,
    RT2X00_CHIP_INTF_SOC = 3
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00_chip {
   u16 rt ;
   u16 rf ;
   u16 rev ;
   enum rt2x00_chip_intf intf ;
};
#line 176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rf_channel {
   int channel ;
   u32 rf1 ;
   u32 rf2 ;
   u32 rf3 ;
   u32 rf4 ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct channel_info {
   unsigned int flags ;
   short max_power ;
   short default_power1 ;
   short default_power2 ;
   short default_power3 ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct antenna_setup {
   enum antenna rx ;
   enum antenna tx ;
   u8 rx_chain_num ;
   u8 tx_chain_num ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct link_qual {
   int rssi ;
   int false_cca ;
   u8 vgc_level ;
   u8 vgc_level_reg ;
   int rx_success ;
   int rx_failed ;
   int tx_success ;
   int tx_failed ;
};
#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct ewma_rssi {
   unsigned long internal ;
};
#line 254  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct link_ant {
   unsigned int flags ;
   struct antenna_setup active ;
   int rssi_history ;
   struct ewma_rssi rssi_ant ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct link {
   u32 count ;
   struct link_qual qual ;
   struct link_ant ant ;
   struct ewma_rssi avg_rssi ;
   struct delayed_work work ;
   struct delayed_work watchdog_work ;
   unsigned int watchdog_interval ;
   bool watchdog_disabled ;
   struct delayed_work agc_work ;
   struct delayed_work vco_work ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00_intf {
   struct mutex beacon_skb_mutex ;
   struct queue_entry *beacon ;
   bool enable_beacon ;
   unsigned long delayed_flags ;
   atomic_t seqno ;
};
#line 397  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct hw_mode_spec {
   unsigned int supported_bands ;
   unsigned int supported_rates ;
   unsigned int num_channels ;
   struct rf_channel *channels ;
   struct channel_info *channels_info ;
   struct ieee80211_sta_ht_cap ht ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00lib_conf {
   struct ieee80211_conf *conf ;
   struct rf_channel rf ;
   struct channel_info channel ;
};
#line 430  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00lib_erp {
   int short_preamble ;
   int cts_protection ;
   u32 basic_rates ;
   int slot_time ;
   short sifs ;
   short pifs ;
   short difs ;
   short eifs ;
   u16 beacon_int ;
   u16 ht_opmode ;
};
#line 450  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00lib_crypto {
   enum cipher cipher ;
   enum set_key_cmd cmd ;
   u8 *address ;
   u32 bssidx ;
   u8 key[16U] ;
   u8 tx_mic[8U] ;
   u8 rx_mic[8U] ;
   int wcid ;
};
#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00intf_conf {
   enum nl80211_iftype type ;
   enum tsf_sync sync ;
   __le32 mac[2U] ;
   __le32 bssid[2U] ;
};
#line 512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00lib_ops {
   irqreturn_t (*irq_handler)(int , void *) ;
   void (*txstatus_tasklet)(unsigned long ) ;
   void (*pretbtt_tasklet)(unsigned long ) ;
   void (*tbtt_tasklet)(unsigned long ) ;
   void (*rxdone_tasklet)(unsigned long ) ;
   void (*autowake_tasklet)(unsigned long ) ;
   int (*probe_hw)(struct rt2x00_dev *) ;
   char *(*get_firmware_name)(struct rt2x00_dev *) ;
   int (*check_firmware)(struct rt2x00_dev *, u8 *, size_t ) ;
   int (*load_firmware)(struct rt2x00_dev *, u8 *, size_t ) ;
   int (*initialize)(struct rt2x00_dev *) ;
   void (*uninitialize)(struct rt2x00_dev *) ;
   bool (*get_entry_state)(struct queue_entry *) ;
   void (*clear_entry)(struct queue_entry *) ;
   int (*set_device_state)(struct rt2x00_dev *, enum dev_state ) ;
   int (*rfkill_poll)(struct rt2x00_dev *) ;
   void (*link_stats)(struct rt2x00_dev *, struct link_qual *) ;
   void (*reset_tuner)(struct rt2x00_dev *, struct link_qual *) ;
   void (*link_tuner)(struct rt2x00_dev *, struct link_qual *, u32 ) ;
   void (*gain_calibration)(struct rt2x00_dev *) ;
   void (*vco_calibration)(struct rt2x00_dev *) ;
   void (*watchdog)(struct rt2x00_dev *) ;
   void (*start_queue)(struct data_queue *) ;
   void (*kick_queue)(struct data_queue *) ;
   void (*stop_queue)(struct data_queue *) ;
   void (*flush_queue)(struct data_queue *, bool ) ;
   void (*tx_dma_done)(struct queue_entry *) ;
   void (*write_tx_desc)(struct queue_entry *, struct txentry_desc *) ;
   void (*write_tx_data)(struct queue_entry *, struct txentry_desc *) ;
   void (*write_beacon)(struct queue_entry *, struct txentry_desc *) ;
   void (*clear_beacon)(struct queue_entry *) ;
   int (*get_tx_data_len)(struct queue_entry *) ;
   void (*fill_rxdone)(struct queue_entry *, struct rxdone_entry_desc *) ;
   int (*config_shared_key)(struct rt2x00_dev *, struct rt2x00lib_crypto *, struct ieee80211_key_conf *) ;
   int (*config_pairwise_key)(struct rt2x00_dev *, struct rt2x00lib_crypto *, struct ieee80211_key_conf *) ;
   void (*config_filter)(struct rt2x00_dev *, unsigned int ) ;
   void (*config_intf)(struct rt2x00_dev *, struct rt2x00_intf *, struct rt2x00intf_conf *, unsigned int ) ;
   void (*config_erp)(struct rt2x00_dev *, struct rt2x00lib_erp *, u32 ) ;
   void (*config_ant)(struct rt2x00_dev *, struct antenna_setup *) ;
   void (*config)(struct rt2x00_dev *, struct rt2x00lib_conf *, unsigned int ) ;
   void (*pre_reset_hw)(struct rt2x00_dev *) ;
   int (*sta_add)(struct rt2x00_dev *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct rt2x00_dev *, struct ieee80211_sta *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00_ops {
   char *name ;
   unsigned int drv_data_size ;
   unsigned int max_ap_intf ;
   unsigned int eeprom_size ;
   unsigned int rf_size ;
   unsigned int tx_queues ;
   void (*queue_init)(struct data_queue *) ;
   struct rt2x00lib_ops *lib ;
   void *drv ;
   struct ieee80211_ops *hw ;
   struct rt2x00debug *debugfs ;
};
#line 818  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
union csr {
   void *base ;
   void *cache ;
};
#line 730 
struct rt2x00debug_intf;
#line 730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
union __anonunion_1037 {
   struct __kfifo kfifo ;
   u32 *type ;
   u32 *const_type ;
   char (*rectype)[0U] ;
   u32 *ptr ;
   u32 *ptr_const ;
};
#line 730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct __anonstruct_txstatus_fifo_1036 {
   union __anonunion_1037 __anonCompField___anonstruct_txstatus_fifo_1036_200 ;
   u32 buf[0U] ;
};
#line 730  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
struct rt2x00_dev {
   struct device *dev ;
   struct rt2x00_ops *ops ;
   void *drv_data ;
   struct ieee80211_hw *hw ;
   struct ieee80211_supported_band bands[4U] ;
   enum nl80211_band curr_band ;
   int curr_freq ;
   struct rt2x00debug_intf *debugfs_intf ;
   struct rt2x00_led led_radio ;
   struct rt2x00_led led_assoc ;
   struct rt2x00_led led_qual ;
   u16 led_mcu_reg ;
   unsigned long flags ;
   unsigned long cap_flags ;
   int irq ;
   char *name ;
   struct rt2x00_chip chip ;
   struct hw_mode_spec spec ;
   struct antenna_setup default_ant ;
   union csr csr ;
   struct mutex csr_mutex ;
   struct mutex conf_mutex ;
   unsigned int packet_filter ;
   unsigned int intf_ap_count ;
   unsigned int intf_sta_count ;
   unsigned int intf_associated ;
   unsigned int intf_beaconing ;
   struct ieee80211_iface_limit if_limits_ap ;
   struct ieee80211_iface_combination if_combinations[1U] ;
   struct link link ;
   __le16 *eeprom ;
   u32 *rf ;
   short lna_gain ;
   u16 tx_power ;
   u8 short_retry ;
   u8 long_retry ;
   u8 rssi_offset ;
   u8 freq_offset ;
   u16 aid ;
   u16 beacon_int ;
   unsigned long last_beacon ;
   struct ieee80211_low_level_stats low_level_stats ;
   struct workqueue_struct *workqueue ;
   struct work_struct intf_work ;
   struct work_struct rxdone_work ;
   struct work_struct txdone_work ;
   struct delayed_work autowakeup_work ;
   struct work_struct sleep_work ;
   unsigned int data_queues ;
   struct data_queue *rx ;
   struct data_queue *tx ;
   struct data_queue *bcn ;
   struct data_queue *atim ;
   struct firmware *fw ;
   struct __anonstruct_txstatus_fifo_1036 txstatus_fifo ;
   struct hrtimer txstatus_timer ;
   struct tasklet_struct txstatus_tasklet ;
   struct tasklet_struct pretbtt_tasklet ;
   struct tasklet_struct tbtt_tasklet ;
   struct tasklet_struct rxdone_tasklet ;
   struct tasklet_struct autowake_tasklet ;
   int rf_channel ;
   spinlock_t irqmask_lock ;
   struct list_head bar_list ;
   spinlock_t bar_list_lock ;
   unsigned int extra_tx_headroom ;
   struct usb_anchor *anchor ;
   unsigned int num_proto_errs ;
   struct clk *clk ;
};
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00usb.h"
struct queue_entry_priv_usb {
   struct urb *urb ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00usb.h"
struct queue_entry_priv_usb_bcn {
   struct urb *urb ;
   unsigned int guardian_data ;
   struct urb *guardian_urb ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_2822 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_2822 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_2823 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_2823 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_2839 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_2839 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_2843 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_2843 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_2844 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_2845 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_2844 __anonCompField_media_link_90 ;
   union __anonunion_2845 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_2847 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_2846 {
   struct __anonstruct_dev_2847 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_2846 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_2861 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_2862 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_2860 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_2861 i2c ;
   struct __anonstruct_custom_2862 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_2860 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_3763 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_3763 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 10  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_usb_scenario_rt2500usb_driver_5 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static unsigned long ffz(unsigned long word)
{
  #line 249 
  ldv_inline_asm();
  #line 252 
  return word;
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/jump_label.h"
__inline static bool arch_static_branch(struct static_key *key, bool branch)
{
  #line 27 
  ldv_inline_asm();
  #line 28 
  ldv_inline_asm();
  #line 34 
  return (_Bool)0;
  #line 35 
  l_yes: 
         #line 35 
  ;
  #line 36 
  return (_Bool)1;
}

#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
#line 64 
void __dynamic_dev_dbg(struct _ddebug *, struct device *, char * , ...);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
#line 802 
static void cif_mutex_lock_csr_mutex_of_rt2x00_dev(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/delay.h"
#line 11 
void __const_udelay(unsigned long);
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void cif_mutex_unlock_csr_mutex_of_rt2x00_dev(struct mutex *lock);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 410  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
#line 76 
int ___ratelimit(struct ratelimit_state *, char *);
#line 1712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1712 
void _dev_err(struct device *, char * , ...);
#line 1718 
#line 1718 
void _dev_info(struct device *, char * , ...);
#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1023 
void consume_skb(struct sk_buff *);
#line 2245 
#line 2245 
void *skb_push(struct sk_buff *, unsigned int);
#line 2652 
#line 2652 
void skb_trim(struct sk_buff *, unsigned int);
#line 714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf)
{
  #line 716 
  void *__mptr;
  #line 716 
  __mptr = (void *)intf->dev.parent;
  #line 716 
  return ((struct usb_device *)(__mptr + 18446744073709551456U));
}

#line 1276 
#line 824  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3);
#line 1282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1);
#line 1636  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static void usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev, unsigned int pipe, void *transfer_buffer, int buffer_length, void (*complete_fn)(struct urb *), void *context)
{
  #line 1644 
  urb->dev = dev;
  #line 1645 
  urb->pipe = pipe;
  #line 1646 
  urb->transfer_buffer = transfer_buffer;
  #line 1647 
  urb->transfer_buffer_length = (unsigned int)buffer_length;
  #line 1648 
  urb->complete = complete_fn;
  #line 1649 
  urb->context = context;
  #line 1650 
  return;
}

#line 1711 
#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags);
#line 1925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev, unsigned int endpoint)
{
  #line 1928 
  return (unsigned int)(dev->devnum << 8) | (endpoint << 15);
}

#line 4738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  #line 4740 
  wiphy->dev.parent = dev;
  #line 4741 
  return;
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  #line 1116 
  return (struct ieee80211_tx_info *)(& skb->cb);
}

#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  #line 2536 
  __set_bit((long)flg,(unsigned long *)(& hw->flags));
  #line 2537 
  return;
}

#line 2599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  #line 2601 
  set_wiphy_dev(hw->wiphy,dev);
  #line 2602 
  return;
}

#line 2610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  #line 2612 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void *)addr,6UL);
  #line 2613 
  return;
}

#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
__inline static struct skb_frame_desc *get_skb_frame_desc(struct sk_buff *skb)
{
  #line 119 
  return (struct skb_frame_desc *)(& IEEE80211_SKB_CB(skb)->__anonCompField_ieee80211_tx_info_198.driver_data);
}

#line 638  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
__inline static __le32 _rt2x00_desc_read(__le32 *desc, u8 word)
{
  #line 640 
  return *(desc + (unsigned long)word);
}

#line 649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
__inline static u32 rt2x00_desc_read(__le32 *desc, u8 word)
{
  #line 651 
  return _rt2x00_desc_read(desc,(unsigned char)((int)word));
}

#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
__inline static void _rt2x00_desc_write(__le32 *desc, u8 word, __le32 value)
{
  #line 663 
  *(desc + (unsigned long)word) = value;
  #line 664 
  return;
}

#line 672  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00queue.h"
__inline static void rt2x00_desc_write(__le32 *desc, u8 word, u32 value)
{
  #line 674 
  _rt2x00_desc_write(desc,(unsigned char)((int)word),value);
  #line 675 
  return;
}

#line 1046  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static u32 rt2x00_rf_read(struct rt2x00_dev *rt2x00dev, unsigned int word)
{
  #line 1049 
  if ((long)(word == 0U) != 0L || (long)((rt2x00dev->ops)->rf_size / 4U < word) != 0L) {
    #line 1050 
    ldv_inline_asm();
    #line 1051 
    ldv_inline_asm();
    #line 1052 
    ldv_inline_asm();
    #line 1049 
    ;
  }
  #line 1050 
  return *(rt2x00dev->rf + (unsigned long)(word + 4294967295U));
}

#line 1053  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static void rt2x00_rf_write(struct rt2x00_dev *rt2x00dev, unsigned int word, u32 data)
{
  #line 1056 
  if ((long)(word == 0U) != 0L || (long)((rt2x00dev->ops)->rf_size / 4U < word) != 0L) {
    #line 1057 
    ldv_inline_asm();
    #line 1058 
    ldv_inline_asm();
    #line 1059 
    ldv_inline_asm();
    #line 1056 
    ;
  }
  #line 1057 
  *(rt2x00dev->rf + (unsigned long)(word + 4294967295U)) = data;
  #line 1058 
  return;
}

#line 1063  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static void *rt2x00_eeprom_addr(struct rt2x00_dev *rt2x00dev, unsigned int word)
{
  #line 1066 
  return (void *)(rt2x00dev->eeprom + (unsigned long)word);
}

#line 1069  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static u16 rt2x00_eeprom_read(struct rt2x00_dev *rt2x00dev, unsigned int word)
{
  #line 1072 
  return *(rt2x00dev->eeprom + (unsigned long)word);
}

#line 1075  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static void rt2x00_eeprom_write(struct rt2x00_dev *rt2x00dev, unsigned int word, u16 data)
{
  #line 1078 
  *(rt2x00dev->eeprom + (unsigned long)word) = data;
  #line 1079 
  return;
}

#line 1090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static void rt2x00_set_chip(struct rt2x00_dev *rt2x00dev, u16 rt, u16 rf, u16 rev)
{
  #line 1093 
  rt2x00dev->chip.rt = rt;
  #line 1094 
  rt2x00dev->chip.rf = rf;
  #line 1095 
  rt2x00dev->chip.rev = rev;
  #line 1097 
  _dev_info(& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: Info - ",(char *)"rt2x00_set_chip",(int)rt2x00dev->chip.rt,(int)rt2x00dev->chip.rf,(int)rt2x00dev->chip.rev);
  #line 1098 
  return;
}

#line 1125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static bool rt2x00_rf(struct rt2x00_dev *rt2x00dev, u16 rf)
{
  #line 1127 
  return (_Bool)((int)rt2x00dev->chip.rf == (int)rf);
}

#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00.h"
__inline static u16 rt2x00_rev(struct rt2x00_dev *rt2x00dev)
{
  #line 1132 
  return rt2x00dev->chip.rev;
}

#line 1403 
#line 1403 
void rt2x00debug_dump_frame(struct rt2x00_dev *, enum rt2x00_dump_type, struct queue_entry *);
#line 1418 
#line 1418 
void rt2x00lib_set_mac_address(struct rt2x00_dev *, u8 *);
#line 1437 
#line 1437 
void rt2x00mac_tx(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *);
#line 1440 
#line 1440 
int rt2x00mac_start(struct ieee80211_hw *);
#line 1441 
#line 1441 
void rt2x00mac_stop(struct ieee80211_hw *);
#line 1442 
#line 1442 
int rt2x00mac_add_interface(struct ieee80211_hw *, struct ieee80211_vif *);
#line 1444 
#line 1444 
void rt2x00mac_remove_interface(struct ieee80211_hw *, struct ieee80211_vif *);
#line 1446 
#line 1446 
int rt2x00mac_config(struct ieee80211_hw *, u32);
#line 1447 
#line 1447 
void rt2x00mac_configure_filter(struct ieee80211_hw *, unsigned int, unsigned int *, u64);
#line 1451 
#line 1451 
int rt2x00mac_set_tim(struct ieee80211_hw *, struct ieee80211_sta *, bool);
#line 1454 
#line 1454 
int rt2x00mac_set_key(struct ieee80211_hw *, enum set_key_cmd, struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *);
#line 1460 
#line 1460 
void rt2x00mac_sw_scan_start(struct ieee80211_hw *, struct ieee80211_vif *, u8 *);
#line 1463 
#line 1463 
void rt2x00mac_sw_scan_complete(struct ieee80211_hw *, struct ieee80211_vif *);
#line 1465 
#line 1465 
int rt2x00mac_get_stats(struct ieee80211_hw *, struct ieee80211_low_level_stats *);
#line 1467 
#line 1467 
void rt2x00mac_bss_info_changed(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32);
#line 1471 
#line 1471 
int rt2x00mac_conf_tx(struct ieee80211_hw *, struct ieee80211_vif *, u16, struct ieee80211_tx_queue_params *);
#line 1474 
#line 1474 
void rt2x00mac_rfkill_poll(struct ieee80211_hw *);
#line 1475 
#line 1475 
void rt2x00mac_flush(struct ieee80211_hw *, struct ieee80211_vif *, u32, bool);
#line 1477 
#line 1477 
int rt2x00mac_set_antenna(struct ieee80211_hw *, u32, u32);
#line 1478 
#line 1478 
int rt2x00mac_get_antenna(struct ieee80211_hw *, u32 *, u32 *);
#line 1479 
#line 1479 
void rt2x00mac_get_ringparam(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *);
#line 1481 
#line 1481 
bool rt2x00mac_tx_frames_pending(struct ieee80211_hw *);
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00usb.h"
#line 91 
int rt2x00usb_vendor_request(struct rt2x00_dev *, u8, u8, u16, u16, void *, u16, int);
#line 114 
#line 114 
int rt2x00usb_vendor_request_buff(struct rt2x00_dev *, u8, u8, u16, void *, u16);
#line 132 
#line 132 
int rt2x00usb_vendor_req_buff_lock(struct rt2x00_dev *, u8, u8, u16, void *, u16, int);
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00usb.h"
__inline static int rt2x00usb_vendor_request_sw(struct rt2x00_dev *rt2x00dev, u8 request, u16 offset, u16 value, int timeout)
{
  #line 155 
  return rt2x00usb_vendor_request(rt2x00dev,(unsigned char)((int)request),
                               (unsigned char)64,
                               (unsigned short)((int)offset),
                               (unsigned short)((int)value),(void *)0,
                               (unsigned short)0,timeout);
}

#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2x00usb.h"
__inline static int rt2x00usb_eeprom_read(struct rt2x00_dev *rt2x00dev, __le16 *eeprom, u16 length)
{
  #line 173 
  return rt2x00usb_vendor_request(rt2x00dev,(unsigned char)9,(unsigned char)192,
                               (unsigned short)0,(unsigned short)0,
                               (void *)eeprom,(unsigned short)((int)length),
                               2000);
}

#line 329 
#line 329 
void rt2x00usb_disable_radio(struct rt2x00_dev *);
#line 365 
#line 365 
void rt2x00usb_kick_queue(struct data_queue *);
#line 376 
#line 376 
void rt2x00usb_flush_queue(struct data_queue *, bool);
#line 386 
#line 386 
void rt2x00usb_watchdog(struct rt2x00_dev *);
#line 391 
#line 391 
void rt2x00usb_clear_entry(struct queue_entry *);
#line 392 
#line 392 
int rt2x00usb_initialize(struct rt2x00_dev *);
#line 393 
#line 393 
void rt2x00usb_uninitialize(struct rt2x00_dev *);
#line 398 
#line 398 
int rt2x00usb_probe(struct usb_interface *, struct rt2x00_ops *);
#line 400 
#line 400 
void rt2x00usb_disconnect(struct usb_interface *);
#line 402 
#line 402 
int rt2x00usb_suspend(struct usb_interface *, pm_message_t);
#line 403 
#line 403 
int rt2x00usb_resume(struct usb_interface *);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static bool modparam_nohwcrypt;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static u16 rt2500usb_register_read(struct rt2x00_dev *rt2x00dev, unsigned int offset)
{
  #line 50 
  __le16 reg;
  #line 51 
  rt2x00usb_vendor_request_buff(rt2x00dev,(unsigned char)7,(unsigned char)192,(unsigned short)((int)((unsigned short)offset)),(void *)(& reg),(unsigned short)2);
  #line 54 
  return reg;
}

#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static u16 rt2500usb_register_read_lock(struct rt2x00_dev *rt2x00dev, unsigned int offset)
{
  #line 60 
  __le16 reg;
  #line 61 
  rt2x00usb_vendor_req_buff_lock(rt2x00dev,(unsigned char)7,(unsigned char)192,(unsigned short)((int)((unsigned short)offset)),(void *)(& reg),(unsigned short)2,100);
  #line 64 
  return reg;
}

#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_register_write(struct rt2x00_dev *rt2x00dev, unsigned int offset, u16 value)
{
  #line 71 
  __le16 reg = value;
  #line 72 
  rt2x00usb_vendor_request_buff(rt2x00dev,(unsigned char)6,(unsigned char)64,(unsigned short)((int)((unsigned short)offset)),(void *)(& reg),(unsigned short)2);
  #line 75 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_register_write_lock(struct rt2x00_dev *rt2x00dev, unsigned int offset, u16 value)
{
  #line 81 
  __le16 reg = value;
  #line 82 
  rt2x00usb_vendor_req_buff_lock(rt2x00dev,(unsigned char)6,(unsigned char)64,(unsigned short)((int)((unsigned short)offset)),(void *)(& reg),(unsigned short)2,100);
  #line 85 
  return;
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_register_multiwrite(struct rt2x00_dev *rt2x00dev, unsigned int offset, void *value, u16 length)
{
  #line 91 
  rt2x00usb_vendor_request_buff(rt2x00dev,(unsigned char)6,(unsigned char)64,(unsigned short)((int)((unsigned short)offset)),value,(unsigned short)((int)length));
  #line 92 
  return;
}

#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_regbusy_read(struct rt2x00_dev *rt2x00dev, unsigned int offset, struct rt2x00_field16 field, u16 *reg)
{
  #line 101 
  unsigned int i;
  #line 103 
  i = 0U;
  #line 103 
  while (i <= 19U) {
    #line 104 
    *reg = rt2500usb_register_read_lock(rt2x00dev,offset);
    {
      #line 105 
      struct rt2x00_field16 __dummy;
      #line 105 
      struct rt2x00_field16 __dummy2;
      }
    #line 105 
    if (((int)*reg & (int)field.bit_mask) >> (int)field.bit_offset == 0) 
      #line 106 
      return 1;
    #line 107 
    __const_udelay(429500UL);
    #line 103 
    i ++;
  }
  {
    #line 110 
    struct ratelimit_state _rs = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
    #line 110 
    if (___ratelimit(& _rs,(char *)"rt2500usb_regbusy_read") != 0) 
                                                                   #line 110 
                                                                   _dev_err(& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: Error - ",(char *)"rt2500usb_regbusy_read",offset,(int)*reg);
  }
  #line 112 
  *reg = (unsigned short)65535U;
  #line 114 
  return 0;
}

#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_bbp_write(struct rt2x00_dev *rt2x00dev, unsigned int word, u8 value)
{
  #line 133 
  struct rt2x00_field16 __constr_expr_50;
  #line 125 
  u16 reg;
  #line 127 
  cif_mutex_lock_csr_mutex_of_rt2x00_dev(& rt2x00dev->csr_mutex);
  #line 133 
  __constr_expr_50 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
  #line 133 
  ;
  #line 133 
  if (rt2500usb_regbusy_read(rt2x00dev,1232U,__constr_expr_50,& reg) != 0) {
    #line 134 
    reg = (unsigned short)0U;
    {
      #line 135 
      struct rt2x00_field16 __constr_expr_41;
      #line 135 
      struct rt2x00_field16 __constr_expr_42;
      #line 135 
      struct rt2x00_field16 __constr_expr_43;
      #line 135 
      struct rt2x00_field16 tmp;
      #line 135 
      struct rt2x00_field16 tmp_0;
      #line 135 
      struct rt2x00_field16 tmp_1;
      {
        #line 135 
        struct rt2x00_field16 __dummy;
        #line 135 
        struct rt2x00_field16 __dummy2;
        }
      #line 135 
      __constr_expr_41 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 135 
      tmp = __constr_expr_41;
      #line 135 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 135 
      __constr_expr_42 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 135 
      tmp_0 = __constr_expr_42;
      #line 135 
      __constr_expr_43 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 135 
      tmp_1 = __constr_expr_43;
      #line 135 
      reg = (unsigned short)((((int)value << (int)tmp_0.bit_offset) & (int)tmp_1.bit_mask) | (int)reg);
    }
    {
      #line 136 
      struct rt2x00_field16 __constr_expr_44;
      #line 136 
      struct rt2x00_field16 __constr_expr_45;
      #line 136 
      struct rt2x00_field16 __constr_expr_46;
      #line 136 
      struct rt2x00_field16 tmp_2;
      #line 136 
      struct rt2x00_field16 tmp_3;
      #line 136 
      struct rt2x00_field16 tmp_4;
      {
        #line 136 
        struct rt2x00_field16 __dummy_0;
        #line 136 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 136 
      __constr_expr_44 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 136 
      tmp_2 = __constr_expr_44;
      #line 136 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 136 
      __constr_expr_45 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 136 
      tmp_3 = __constr_expr_45;
      #line 136 
      __constr_expr_46 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 136 
      tmp_4 = __constr_expr_46;
      #line 136 
      reg = (unsigned short)((int)((unsigned short)((word << (int)tmp_3.bit_offset) & (unsigned int)tmp_4.bit_mask)) | (int)reg);
    }
    {
      #line 137 
      struct rt2x00_field16 __constr_expr_47;
      #line 137 
      struct rt2x00_field16 __constr_expr_48;
      #line 137 
      struct rt2x00_field16 __constr_expr_49;
      #line 137 
      struct rt2x00_field16 tmp_5;
      #line 137 
      struct rt2x00_field16 tmp_6;
      #line 137 
      struct rt2x00_field16 tmp_7;
      {
        #line 137 
        struct rt2x00_field16 __dummy_1;
        #line 137 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 137 
      __constr_expr_47 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 137 
      tmp_5 = __constr_expr_47;
      #line 137 
      reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
      #line 137 
      __constr_expr_48 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 137 
      tmp_6 = __constr_expr_48;
      #line 137 
      __constr_expr_49 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 137 
      tmp_7 = __constr_expr_49;
      #line 137 
      reg = (unsigned short)(0 | (int)reg);
    }
    #line 139 
    rt2500usb_register_write_lock(rt2x00dev,1230U,(unsigned short)((int)reg));
  }
  #line 142 
  cif_mutex_unlock_csr_mutex_of_rt2x00_dev(& rt2x00dev->csr_mutex);
  #line 143 
  return;
}

#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static u8 rt2500usb_bbp_read(struct rt2x00_dev *rt2x00dev, unsigned int word)
{
  #line 172 
  struct rt2x00_field16 __constr_expr_60;
  #line 172 
  struct rt2x00_field16 tmp_10;
  #line 161 
  struct rt2x00_field16 __constr_expr_58;
  #line 172 
  struct rt2x00_field16 __constr_expr_59;
  #line 172 
  struct rt2x00_field16 tmp_9;
  #line 148 
  u16 reg;
  #line 149 
  u8 value;
  #line 151 
  cif_mutex_lock_csr_mutex_of_rt2x00_dev(& rt2x00dev->csr_mutex);
  #line 161 
  __constr_expr_58 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
  #line 161 
  ;
  #line 161 
  if (rt2500usb_regbusy_read(rt2x00dev,1232U,__constr_expr_58,& reg) != 0) {
    #line 168 
    struct rt2x00_field16 __constr_expr_57;
    #line 162 
    reg = (unsigned short)0U;
    {
      #line 163 
      struct rt2x00_field16 __constr_expr_51;
      #line 163 
      struct rt2x00_field16 __constr_expr_52;
      #line 163 
      struct rt2x00_field16 __constr_expr_53;
      #line 163 
      struct rt2x00_field16 tmp;
      #line 163 
      struct rt2x00_field16 tmp_0;
      #line 163 
      struct rt2x00_field16 tmp_1;
      {
        #line 163 
        struct rt2x00_field16 __dummy;
        #line 163 
        struct rt2x00_field16 __dummy2;
        }
      #line 163 
      __constr_expr_51 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 163 
      tmp = __constr_expr_51;
      #line 163 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 163 
      __constr_expr_52 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 163 
      tmp_0 = __constr_expr_52;
      #line 163 
      __constr_expr_53 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 163 
      tmp_1 = __constr_expr_53;
      #line 163 
      reg = (unsigned short)((int)((unsigned short)((word << (int)tmp_0.bit_offset) & (unsigned int)tmp_1.bit_mask)) | (int)reg);
    }
    {
      #line 164 
      struct rt2x00_field16 __constr_expr_54;
      #line 164 
      struct rt2x00_field16 __constr_expr_55;
      #line 164 
      struct rt2x00_field16 __constr_expr_56;
      #line 164 
      struct rt2x00_field16 tmp_2;
      #line 164 
      struct rt2x00_field16 tmp_3;
      #line 164 
      struct rt2x00_field16 tmp_4;
      {
        #line 164 
        struct rt2x00_field16 __dummy_0;
        #line 164 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 164 
      __constr_expr_54 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 164 
      tmp_2 = __constr_expr_54;
      #line 164 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 164 
      __constr_expr_55 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 164 
      tmp_3 = __constr_expr_55;
      #line 164 
      __constr_expr_56 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 164 
      tmp_4 = __constr_expr_56;
      #line 164 
      reg = (unsigned short)(((1 << (int)tmp_3.bit_offset) & (int)tmp_4.bit_mask) | (int)reg);
    }
    #line 166 
    rt2500usb_register_write_lock(rt2x00dev,1230U,(unsigned short)((int)reg));
    #line 168 
    __constr_expr_57 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 168 
    ;
    #line 168 
    if (rt2500usb_regbusy_read(rt2x00dev,1232U,__constr_expr_57,& reg) != 0) 
      #line 169 
      reg = rt2500usb_register_read_lock(rt2x00dev,1230U);
  }
  {
    #line 172 
    struct rt2x00_field16 __dummy_1;
    #line 172 
    struct rt2x00_field16 __dummy2_1;
    }
  #line 172 
  __constr_expr_59 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 172 
  tmp_9 = __constr_expr_59;
  #line 172 
  __constr_expr_60 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 172 
  tmp_10 = __constr_expr_60;
  #line 172 
  ;
  #line 172 
  value = (unsigned char)(((int)tmp_9.bit_mask & (int)reg) >> (int)tmp_10.bit_offset);
  #line 174 
  cif_mutex_unlock_csr_mutex_of_rt2x00_dev(& rt2x00dev->csr_mutex);
  #line 176 
  return value;
}

#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_rf_write(struct rt2x00_dev *rt2x00dev, unsigned int word, u32 value)
{
  #line 190 
  struct rt2x00_field16 __constr_expr_76;
  #line 182 
  u16 reg;
  #line 184 
  cif_mutex_lock_csr_mutex_of_rt2x00_dev(& rt2x00dev->csr_mutex);
  #line 190 
  __constr_expr_76 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
  #line 190 
  ;
  #line 190 
  if (rt2500usb_regbusy_read(rt2x00dev,1236U,__constr_expr_76,& reg) != 0) {
    #line 191 
    reg = (unsigned short)0U;
    {
      #line 192 
      struct rt2x00_field16 __constr_expr_61;
      #line 192 
      struct rt2x00_field16 __constr_expr_62;
      #line 192 
      struct rt2x00_field16 __constr_expr_63;
      #line 192 
      struct rt2x00_field16 tmp;
      #line 192 
      struct rt2x00_field16 tmp_0;
      #line 192 
      struct rt2x00_field16 tmp_1;
      {
        #line 192 
        struct rt2x00_field16 __dummy;
        #line 192 
        struct rt2x00_field16 __dummy2;
        }
      #line 192 
      __constr_expr_61 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
      #line 192 
      tmp = __constr_expr_61;
      #line 192 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 192 
      __constr_expr_62 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
      #line 192 
      tmp_0 = __constr_expr_62;
      #line 192 
      __constr_expr_63 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
      #line 192 
      tmp_1 = __constr_expr_63;
      #line 192 
      reg = (unsigned short)((int)((unsigned short)((value << (int)tmp_0.bit_offset) & (unsigned int)tmp_1.bit_mask)) | (int)reg);
    }
    #line 193 
    rt2500usb_register_write_lock(rt2x00dev,1234U,(unsigned short)((int)reg));
    #line 195 
    reg = (unsigned short)0U;
    {
      #line 196 
      struct rt2x00_field16 __constr_expr_64;
      #line 196 
      struct rt2x00_field16 __constr_expr_65;
      #line 196 
      struct rt2x00_field16 __constr_expr_66;
      #line 196 
      struct rt2x00_field16 tmp_2;
      #line 196 
      struct rt2x00_field16 tmp_3;
      #line 196 
      struct rt2x00_field16 tmp_4;
      {
        #line 196 
        struct rt2x00_field16 __dummy_0;
        #line 196 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 196 
      __constr_expr_64 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 196 
      tmp_2 = __constr_expr_64;
      #line 196 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 196 
      __constr_expr_65 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 196 
      tmp_3 = __constr_expr_65;
      #line 196 
      __constr_expr_66 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 196 
      tmp_4 = __constr_expr_66;
      #line 196 
      reg = (unsigned short)((int)((unsigned short)(((value >> 16) << (int)tmp_3.bit_offset) & (unsigned int)tmp_4.bit_mask)) | (int)reg);
    }
    {
      #line 197 
      struct rt2x00_field16 __constr_expr_67;
      #line 197 
      struct rt2x00_field16 __constr_expr_68;
      #line 197 
      struct rt2x00_field16 __constr_expr_69;
      #line 197 
      struct rt2x00_field16 tmp_5;
      #line 197 
      struct rt2x00_field16 tmp_6;
      #line 197 
      struct rt2x00_field16 tmp_7;
      {
        #line 197 
        struct rt2x00_field16 __dummy_1;
        #line 197 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 197 
      __constr_expr_67 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)7936U};
      #line 197 
      tmp_5 = __constr_expr_67;
      #line 197 
      reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
      #line 197 
      __constr_expr_68 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)7936U};
      #line 197 
      tmp_6 = __constr_expr_68;
      #line 197 
      __constr_expr_69 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)7936U};
      #line 197 
      tmp_7 = __constr_expr_69;
      #line 197 
      reg = (unsigned short)(((20 << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)reg);
    }
    {
      #line 198 
      struct rt2x00_field16 __constr_expr_70;
      #line 198 
      struct rt2x00_field16 __constr_expr_71;
      #line 198 
      struct rt2x00_field16 __constr_expr_72;
      #line 198 
      struct rt2x00_field16 tmp_8;
      #line 198 
      struct rt2x00_field16 tmp_9;
      #line 198 
      struct rt2x00_field16 tmp_10;
      {
        #line 198 
        struct rt2x00_field16 __dummy_2;
        #line 198 
        struct rt2x00_field16 __dummy2_2;
        }
      #line 198 
      __constr_expr_70 = (struct rt2x00_field16){.bit_offset = (unsigned short)13U, .bit_mask = (unsigned short)8192U};
      #line 198 
      tmp_8 = __constr_expr_70;
      #line 198 
      reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
      #line 198 
      __constr_expr_71 = (struct rt2x00_field16){.bit_offset = (unsigned short)13U, .bit_mask = (unsigned short)8192U};
      #line 198 
      tmp_9 = __constr_expr_71;
      #line 198 
      __constr_expr_72 = (struct rt2x00_field16){.bit_offset = (unsigned short)13U, .bit_mask = (unsigned short)8192U};
      #line 198 
      tmp_10 = __constr_expr_72;
      #line 198 
      reg = (unsigned short)(0 | (int)reg);
    }
    {
      #line 199 
      struct rt2x00_field16 __constr_expr_73;
      #line 199 
      struct rt2x00_field16 __constr_expr_74;
      #line 199 
      struct rt2x00_field16 __constr_expr_75;
      #line 199 
      struct rt2x00_field16 tmp_11;
      #line 199 
      struct rt2x00_field16 tmp_12;
      #line 199 
      struct rt2x00_field16 tmp_13;
      {
        #line 199 
        struct rt2x00_field16 __dummy_3;
        #line 199 
        struct rt2x00_field16 __dummy2_3;
        }
      #line 199 
      __constr_expr_73 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 199 
      tmp_11 = __constr_expr_73;
      #line 199 
      reg = (unsigned short)(~ ((int)tmp_11.bit_mask) & (int)reg);
      #line 199 
      __constr_expr_74 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 199 
      tmp_12 = __constr_expr_74;
      #line 199 
      __constr_expr_75 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 199 
      tmp_13 = __constr_expr_75;
      #line 199 
      reg = (unsigned short)(((1 << (int)tmp_12.bit_offset) & (int)tmp_13.bit_mask) | (int)reg);
    }
    #line 201 
    rt2500usb_register_write_lock(rt2x00dev,1236U,(unsigned short)((int)reg));
    #line 202 
    rt2x00_rf_write(rt2x00dev,word,value);
  }
  #line 205 
  cif_mutex_unlock_csr_mutex_of_rt2x00_dev(& rt2x00dev->csr_mutex);
  #line 206 
  return;
}

#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static u32 _rt2500usb_register_read(struct rt2x00_dev *rt2x00dev, unsigned int offset)
{
  #line 212 
  return (unsigned int)rt2500usb_register_read(rt2x00dev,offset);
}

#line 215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void _rt2500usb_register_write(struct rt2x00_dev *rt2x00dev, unsigned int offset, u32 value)
{
  #line 219 
  rt2500usb_register_write(rt2x00dev,offset,(unsigned short)((int)((unsigned short)value)));
  #line 220 
  return;
}

#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rt2x00debug rt2500usb_rt2x00debug = {.owner = & __this_module, .csr = {.read = & _rt2500usb_register_read, .write = & _rt2500usb_register_write, .flags = 1U, .word_base = 1024U, .word_size = 2U, .word_count = 128U}, .eeprom = {.read = & rt2x00_eeprom_read, .write = & rt2x00_eeprom_write, .word_size = 2U, .word_count = 55U}, .bbp = {.read = & rt2500usb_bbp_read, .write = & rt2500usb_bbp_write, .word_size = 1U, .word_count = 96U}, .rf = {.read = & rt2x00_rf_read, .write = & rt2500usb_rf_write, .word_base = 4U, .word_size = 4U, .word_count = 4U}};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_rfkill_poll(struct rt2x00_dev *rt2x00dev)
{
  #line 261 
  struct rt2x00_field16 __constr_expr_77;
  #line 261 
  struct rt2x00_field16 tmp;
  #line 261 
  struct rt2x00_field16 __constr_expr_78;
  #line 261 
  struct rt2x00_field16 tmp_0;
  #line 258 
  u16 reg;
  #line 260 
  reg = rt2500usb_register_read(rt2x00dev,1062U);
  {
    #line 261 
    struct rt2x00_field16 __dummy;
    #line 261 
    struct rt2x00_field16 __dummy2;
    }
  #line 261 
  __constr_expr_77 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
  #line 261 
  tmp = __constr_expr_77;
  #line 261 
  __constr_expr_78 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
  #line 261 
  tmp_0 = __constr_expr_78;
  #line 261 
  ;
  #line 261 
  return (((int)tmp.bit_mask & (int)reg) >> (int)tmp_0.bit_offset);
}

#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_brightness_set(struct led_classdev *led_cdev, enum led_brightness brightness)
{
  #line 269 
  void *__mptr;
  #line 271 
  u16 reg;
  #line 269 
  __mptr = (void *)led_cdev;
  #line 268 
  struct rt2x00_led *led = ((struct rt2x00_led *)(__mptr + 18446744073709551608U));
  #line 270 
  unsigned int enabled = (unsigned int)(brightness != (unsigned int)LED_OFF);
  #line 273 
  reg = rt2500usb_register_read(led->rt2x00dev,1064U);
  #line 275 
  if (led->type <= (unsigned int)LED_TYPE_ASSOC) {
    #line 276 
    struct rt2x00_field16 __constr_expr_79;
    #line 276 
    struct rt2x00_field16 __constr_expr_80;
    #line 276 
    struct rt2x00_field16 __constr_expr_81;
    #line 276 
    struct rt2x00_field16 tmp_0;
    #line 276 
    struct rt2x00_field16 tmp_1;
    #line 276 
    struct rt2x00_field16 tmp_2;
    {
      #line 276 
      struct rt2x00_field16 __dummy;
      #line 276 
      struct rt2x00_field16 __dummy2;
      }
    #line 276 
    __constr_expr_79 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 276 
    tmp_0 = __constr_expr_79;
    #line 276 
    reg = (unsigned short)(~ ((int)tmp_0.bit_mask) & (int)reg);
    #line 276 
    __constr_expr_80 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 276 
    tmp_1 = __constr_expr_80;
    #line 276 
    __constr_expr_81 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 276 
    tmp_2 = __constr_expr_81;
    #line 276 
    reg = (unsigned short)((int)((unsigned short)((enabled << (int)tmp_1.bit_offset) & (unsigned int)tmp_2.bit_mask)) | (int)reg);
  }
  else 
    #line 277 
    if (led->type == (unsigned int)LED_TYPE_ACTIVITY) {
      #line 278 
      struct rt2x00_field16 __constr_expr_82;
      #line 278 
      struct rt2x00_field16 __constr_expr_83;
      #line 278 
      struct rt2x00_field16 __constr_expr_84;
      #line 278 
      struct rt2x00_field16 tmp_3;
      #line 278 
      struct rt2x00_field16 tmp_4;
      #line 278 
      struct rt2x00_field16 tmp_5;
      {
        #line 278 
        struct rt2x00_field16 __dummy_0;
        #line 278 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 278 
      __constr_expr_82 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 278 
      tmp_3 = __constr_expr_82;
      #line 278 
      reg = (unsigned short)(~ ((int)tmp_3.bit_mask) & (int)reg);
      #line 278 
      __constr_expr_83 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 278 
      tmp_4 = __constr_expr_83;
      #line 278 
      __constr_expr_84 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 278 
      tmp_5 = __constr_expr_84;
      #line 278 
      reg = (unsigned short)((int)((unsigned short)((enabled << (int)tmp_4.bit_offset) & (unsigned int)tmp_5.bit_mask)) | (int)reg);
    }
  #line 280 
  rt2500usb_register_write(led->rt2x00dev,1064U,(unsigned short)((int)reg));
  #line 281 
  return;
}

#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_blink_set(struct led_classdev *led_cdev, unsigned long *delay_on, unsigned long *delay_off)
{
  #line 288 
  void *__mptr;
  #line 289 
  u16 reg;
  #line 288 
  __mptr = (void *)led_cdev;
  #line 287 
  struct rt2x00_led *led = ((struct rt2x00_led *)(__mptr + 18446744073709551608U));
  #line 291 
  reg = rt2500usb_register_read(led->rt2x00dev,1066U);
  {
    #line 292 
    struct rt2x00_field16 __constr_expr_87;
    #line 292 
    struct rt2x00_field16 __constr_expr_85;
    #line 292 
    struct rt2x00_field16 __constr_expr_86;
    #line 292 
    struct rt2x00_field16 tmp_0;
    #line 292 
    struct rt2x00_field16 tmp_1;
    #line 292 
    struct rt2x00_field16 tmp_2;
    {
      #line 292 
      struct rt2x00_field16 __dummy;
      #line 292 
      struct rt2x00_field16 __dummy2;
      }
    #line 292 
    __constr_expr_85 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
    #line 292 
    tmp_0 = __constr_expr_85;
    #line 292 
    reg = (unsigned short)(~ ((int)tmp_0.bit_mask) & (int)reg);
    #line 292 
    __constr_expr_86 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
    #line 292 
    tmp_1 = __constr_expr_86;
    #line 292 
    __constr_expr_87 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
    #line 292 
    tmp_2 = __constr_expr_87;
    #line 292 
    reg = (unsigned short)((int)((unsigned short)((*delay_on << (int)tmp_1.bit_offset) & (unsigned long)tmp_2.bit_mask)) | (int)reg);
  }
  {
    #line 293 
    struct rt2x00_field16 __constr_expr_90;
    #line 293 
    struct rt2x00_field16 __constr_expr_88;
    #line 293 
    struct rt2x00_field16 __constr_expr_89;
    #line 293 
    struct rt2x00_field16 tmp_3;
    #line 293 
    struct rt2x00_field16 tmp_4;
    #line 293 
    struct rt2x00_field16 tmp_5;
    {
      #line 293 
      struct rt2x00_field16 __dummy_0;
      #line 293 
      struct rt2x00_field16 __dummy2_0;
      }
    #line 293 
    __constr_expr_88 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
    #line 293 
    tmp_3 = __constr_expr_88;
    #line 293 
    reg = (unsigned short)(~ ((int)tmp_3.bit_mask) & (int)reg);
    #line 293 
    __constr_expr_89 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
    #line 293 
    tmp_4 = __constr_expr_89;
    #line 293 
    __constr_expr_90 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
    #line 293 
    tmp_5 = __constr_expr_90;
    #line 293 
    reg = (unsigned short)((int)((unsigned short)((*delay_off << (int)tmp_4.bit_offset) & (unsigned long)tmp_5.bit_mask)) | (int)reg);
  }
  #line 294 
  rt2500usb_register_write(led->rt2x00dev,1066U,(unsigned short)((int)reg));
  #line 296 
  return 0;
}

#line 299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_init_led(struct rt2x00_dev *rt2x00dev, struct rt2x00_led *led, enum led_type type)
{
  #line 303 
  led->rt2x00dev = rt2x00dev;
  #line 304 
  led->type = type;
  #line 305 
  led->led_dev.brightness_set = & rt2500usb_brightness_set;
  #line 306 
  led->led_dev.blink_set = & rt2500usb_blink_set;
  #line 307 
  led->flags = 1U;
  #line 308 
  return;
}

#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_config_key(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_crypto *crypto, struct ieee80211_key_conf *key)
{
  #line 388 
  struct rt2x00_field16 __constr_expr_102;
  #line 388 
  struct rt2x00_field16 tmp_14;
  #line 388 
  struct rt2x00_field16 __constr_expr_103;
  #line 388 
  struct rt2x00_field16 tmp_15;
  #line 323 
  u32 mask;
  #line 324 
  u16 reg;
  #line 325 
  enum cipher curr_cipher;
  #line 327 
  if (crypto->cmd == (unsigned int)SET_KEY) {
    #line 346 
    struct rt2x00_field16 __constr_expr_93;
    #line 346 
    struct rt2x00_field16 tmp_1;
    #line 343 
    struct rt2x00_field16 __constr_expr_91;
    #line 352 
    struct rt2x00_field16 __constr_expr_94;
    #line 352 
    struct rt2x00_field16 tmp_3;
    #line 346 
    struct rt2x00_field16 __constr_expr_92;
    #line 352 
    struct rt2x00_field16 __constr_expr_95;
    #line 346 
    struct rt2x00_field16 tmp_0;
    #line 352 
    struct rt2x00_field16 tmp_4;
    #line 343 
    struct rt2x00_field16 tmp;
    #line 354 
    unsigned long tmp_7;
    #line 333 
    if ((key->cipher == 1027073U || key->cipher == 1027077U) && (int)key->keyidx != 0) 
      #line 336 
      return -95;
    #line 343 
    __constr_expr_91 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 343 
    tmp = __constr_expr_91;
    #line 343 
    mask = (unsigned int)tmp.bit_mask;
    #line 345 
    reg = rt2500usb_register_read(rt2x00dev,1088U);
    {
      #line 346 
      struct rt2x00_field16 __dummy;
      #line 346 
      struct rt2x00_field16 __dummy2;
      }
    #line 346 
    __constr_expr_92 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 346 
    tmp_0 = __constr_expr_92;
    #line 346 
    __constr_expr_93 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 346 
    tmp_1 = __constr_expr_93;
    #line 346 
    ;
    #line 346 
    curr_cipher = (enum cipher)(((int)tmp_0.bit_mask & (int)reg) >> (int)tmp_1.bit_offset);
    #line 347 
    reg = (unsigned short)((int)((unsigned short)mask) & (int)reg);
    #line 349 
    if ((unsigned int)reg != 0U && (unsigned int)reg == mask) 
                                                              #line 350 
                                                              return -28;
    {
      #line 352 
      struct rt2x00_field16 __dummy_0;
      #line 352 
      struct rt2x00_field16 __dummy2_0;
      }
    #line 352 
    __constr_expr_94 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 352 
    tmp_3 = __constr_expr_94;
    #line 352 
    __constr_expr_95 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 352 
    tmp_4 = __constr_expr_95;
    #line 352 
    ;
    #line 352 
    reg = (unsigned short)(((int)tmp_3.bit_mask & (int)reg) >> (int)tmp_4.bit_offset);
    #line 354 
    if ((unsigned int)reg != 0U) 
                                 #line 354 
                                 tmp_7 = ffz((unsigned long)reg); else 
                                                                    #line 354 
                                                                    tmp_7 = 0UL;
    #line 354 
    key->hw_key_idx = (unsigned char)((int)key->hw_key_idx + (int)((unsigned char)tmp_7));
    #line 361 
    if ((unsigned int)key->hw_key_idx != 0U && crypto->cipher != curr_cipher) 
      #line 362 
      return -95;
    #line 364 
    rt2500usb_register_multiwrite(rt2x00dev,(unsigned int)(((int)key->hw_key_idx + 72) * 16),(void *)(& crypto->key),(unsigned short)16);
    #line 376 
    key->flags = (unsigned short)((unsigned int)key->flags | 2U);
    #line 377 
    key->flags = (unsigned short)((unsigned int)key->flags | 4U);
  }
  #line 384 
  reg = rt2500usb_register_read(rt2x00dev,1088U);
  {
    #line 385 
    struct rt2x00_field16 __constr_expr_98;
    #line 385 
    struct rt2x00_field16 __constr_expr_96;
    #line 385 
    struct rt2x00_field16 __constr_expr_97;
    #line 385 
    struct rt2x00_field16 tmp_8;
    #line 385 
    struct rt2x00_field16 tmp_9;
    #line 385 
    struct rt2x00_field16 tmp_10;
    {
      #line 385 
      struct rt2x00_field16 __dummy_1;
      #line 385 
      struct rt2x00_field16 __dummy2_1;
      }
    #line 385 
    __constr_expr_96 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 385 
    tmp_8 = __constr_expr_96;
    #line 385 
    reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
    #line 385 
    __constr_expr_97 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 385 
    tmp_9 = __constr_expr_97;
    #line 385 
    __constr_expr_98 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 385 
    tmp_10 = __constr_expr_98;
    #line 385 
    reg = (unsigned short)((int)((unsigned short)(((unsigned int)crypto->cipher << (int)tmp_9.bit_offset) & (unsigned int)tmp_10.bit_mask)) | (int)reg);
  }
  {
    #line 386 
    struct rt2x00_field16 __constr_expr_101;
    #line 386 
    struct rt2x00_field16 __constr_expr_99;
    #line 386 
    struct rt2x00_field16 __constr_expr_100;
    #line 386 
    struct rt2x00_field16 tmp_11;
    #line 386 
    struct rt2x00_field16 tmp_12;
    #line 386 
    struct rt2x00_field16 tmp_13;
    {
      #line 386 
      struct rt2x00_field16 __dummy_2;
      #line 386 
      struct rt2x00_field16 __dummy2_2;
      }
    #line 386 
    __constr_expr_99 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)504U};
    #line 386 
    tmp_11 = __constr_expr_99;
    #line 386 
    reg = (unsigned short)(~ ((int)tmp_11.bit_mask) & (int)reg);
    #line 386 
    __constr_expr_100 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)504U};
    #line 386 
    tmp_12 = __constr_expr_100;
    #line 386 
    __constr_expr_101 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)504U};
    #line 386 
    tmp_13 = __constr_expr_101;
    #line 386 
    reg = (unsigned short)(((24 << (int)tmp_12.bit_offset) & (int)tmp_13.bit_mask) | (int)reg);
  }
  {
    #line 388 
    struct rt2x00_field16 __dummy_3;
    #line 388 
    struct rt2x00_field16 __dummy2_3;
    }
  #line 388 
  __constr_expr_102 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
  #line 388 
  tmp_14 = __constr_expr_102;
  #line 388 
  __constr_expr_103 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
  #line 388 
  tmp_15 = __constr_expr_103;
  #line 388 
  ;
  #line 388 
  mask = (unsigned int)(((int)tmp_14.bit_mask & (int)reg) >> (int)tmp_15.bit_offset);
  #line 389 
  if (crypto->cmd == (unsigned int)SET_KEY) 
                                            #line 390 
                                            mask = (unsigned int)(1 << (int)key->hw_key_idx) | mask;
  else 
    #line 391 
    if (crypto->cmd == (unsigned int)DISABLE_KEY) 
                                                  #line 392 
                                                  mask = (unsigned int)(~ (1 << (int)key->hw_key_idx)) & mask;
  {
    #line 393 
    struct rt2x00_field16 __constr_expr_104;
    #line 393 
    struct rt2x00_field16 __constr_expr_105;
    #line 393 
    struct rt2x00_field16 __constr_expr_106;
    #line 393 
    struct rt2x00_field16 tmp_17;
    #line 393 
    struct rt2x00_field16 tmp_18;
    #line 393 
    struct rt2x00_field16 tmp_19;
    {
      #line 393 
      struct rt2x00_field16 __dummy_4;
      #line 393 
      struct rt2x00_field16 __dummy2_4;
      }
    #line 393 
    __constr_expr_104 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 393 
    tmp_17 = __constr_expr_104;
    #line 393 
    reg = (unsigned short)(~ ((int)tmp_17.bit_mask) & (int)reg);
    #line 393 
    __constr_expr_105 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 393 
    tmp_18 = __constr_expr_105;
    #line 393 
    __constr_expr_106 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 393 
    tmp_19 = __constr_expr_106;
    #line 393 
    reg = (unsigned short)((int)((unsigned short)((mask << (int)tmp_18.bit_offset) & (unsigned int)tmp_19.bit_mask)) | (int)reg);
  }
  #line 394 
  rt2500usb_register_write(rt2x00dev,1088U,(unsigned short)((int)reg));
  #line 396 
  return 0;
}

#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_filter(struct rt2x00_dev *rt2x00dev, unsigned int filter_flags)
{
  #line 402 
  u16 reg;
  #line 410 
  reg = rt2500usb_register_read(rt2x00dev,1092U);
  {
    #line 411 
    struct rt2x00_field16 __constr_expr_109;
    #line 411 
    struct rt2x00_field16 __constr_expr_107;
    #line 411 
    struct rt2x00_field16 __constr_expr_108;
    #line 411 
    struct rt2x00_field16 tmp;
    #line 411 
    struct rt2x00_field16 tmp_0;
    #line 411 
    struct rt2x00_field16 tmp_1;
    {
      #line 411 
      struct rt2x00_field16 __dummy;
      #line 411 
      struct rt2x00_field16 __dummy2;
      }
    #line 411 
    __constr_expr_107 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 411 
    tmp = __constr_expr_107;
    #line 411 
    reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
    #line 411 
    __constr_expr_108 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 411 
    tmp_0 = __constr_expr_108;
    #line 411 
    __constr_expr_109 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 411 
    tmp_1 = __constr_expr_109;
    #line 411 
    reg = (unsigned short)(((((filter_flags & 4U) == 0U) << (int)tmp_0.bit_offset) & (int)tmp_1.bit_mask) | (int)reg);
  }
  {
    #line 413 
    struct rt2x00_field16 __constr_expr_112;
    #line 413 
    struct rt2x00_field16 __constr_expr_110;
    #line 413 
    struct rt2x00_field16 __constr_expr_111;
    #line 413 
    struct rt2x00_field16 tmp_2;
    #line 413 
    struct rt2x00_field16 tmp_3;
    #line 413 
    struct rt2x00_field16 tmp_4;
    {
      #line 413 
      struct rt2x00_field16 __dummy_0;
      #line 413 
      struct rt2x00_field16 __dummy2_0;
      }
    #line 413 
    __constr_expr_110 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 413 
    tmp_2 = __constr_expr_110;
    #line 413 
    reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
    #line 413 
    __constr_expr_111 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 413 
    tmp_3 = __constr_expr_111;
    #line 413 
    __constr_expr_112 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 413 
    tmp_4 = __constr_expr_112;
    #line 413 
    reg = (unsigned short)(((((filter_flags & 8U) == 0U) << (int)tmp_3.bit_offset) & (int)tmp_4.bit_mask) | (int)reg);
  }
  {
    #line 415 
    struct rt2x00_field16 __constr_expr_115;
    #line 415 
    struct rt2x00_field16 __constr_expr_113;
    #line 415 
    struct rt2x00_field16 __constr_expr_114;
    #line 415 
    struct rt2x00_field16 tmp_5;
    #line 415 
    struct rt2x00_field16 tmp_6;
    #line 415 
    struct rt2x00_field16 tmp_7;
    {
      #line 415 
      struct rt2x00_field16 __dummy_1;
      #line 415 
      struct rt2x00_field16 __dummy2_1;
      }
    #line 415 
    __constr_expr_113 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 415 
    tmp_5 = __constr_expr_113;
    #line 415 
    reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
    #line 415 
    __constr_expr_114 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 415 
    tmp_6 = __constr_expr_114;
    #line 415 
    __constr_expr_115 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 415 
    tmp_7 = __constr_expr_115;
    #line 415 
    reg = (unsigned short)(((((filter_flags & 32U) == 0U) << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)reg);
  }
  {
    #line 417 
    struct rt2x00_field16 __constr_expr_117;
    #line 417 
    struct rt2x00_field16 __constr_expr_118;
    #line 417 
    struct rt2x00_field16 __constr_expr_116;
    #line 417 
    struct rt2x00_field16 tmp_8;
    #line 417 
    int tmp_10;
    #line 417 
    struct rt2x00_field16 tmp_11;
    #line 417 
    struct rt2x00_field16 tmp_12;
    {
      #line 417 
      struct rt2x00_field16 __dummy_2;
      #line 417 
      struct rt2x00_field16 __dummy2_2;
      }
    #line 417 
    __constr_expr_116 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 417 
    tmp_8 = __constr_expr_116;
    #line 417 
    reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
    #line 417 
    if (test_bit(11L,& rt2x00dev->flags)) 
                                          #line 417 
                                          tmp_10 = 0; else 
                                                           #line 417 
                                                           tmp_10 = 1;
    #line 417 
    __constr_expr_117 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 417 
    tmp_11 = __constr_expr_117;
    #line 417 
    __constr_expr_118 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 417 
    tmp_12 = __constr_expr_118;
    #line 417 
    reg = (unsigned short)(((tmp_10 << (int)tmp_11.bit_offset) & (int)tmp_12.bit_mask) | (int)reg);
  }
  {
    #line 419 
    struct rt2x00_field16 __constr_expr_120;
    #line 419 
    struct rt2x00_field16 __constr_expr_121;
    #line 419 
    struct rt2x00_field16 __constr_expr_119;
    #line 419 
    struct rt2x00_field16 tmp_13;
    #line 419 
    int tmp_15;
    #line 419 
    struct rt2x00_field16 tmp_16;
    #line 419 
    struct rt2x00_field16 tmp_17;
    {
      #line 419 
      struct rt2x00_field16 __dummy_3;
      #line 419 
      struct rt2x00_field16 __dummy2_3;
      }
    #line 419 
    __constr_expr_119 = (struct rt2x00_field16){.bit_offset = (unsigned short)5U, .bit_mask = (unsigned short)32U};
    #line 419 
    tmp_13 = __constr_expr_119;
    #line 419 
    reg = (unsigned short)(~ ((int)tmp_13.bit_mask) & (int)reg);
    #line 419 
    if (test_bit(11L,& rt2x00dev->flags)) 
                                          #line 419 
                                          tmp_15 = 0;
    else 
      #line 419 
      if (rt2x00dev->intf_ap_count == 0U) 
                                          #line 419 
                                          tmp_15 = 1; else 
                                                           #line 419 
                                                           tmp_15 = 0;
    #line 419 
    __constr_expr_120 = (struct rt2x00_field16){.bit_offset = (unsigned short)5U, .bit_mask = (unsigned short)32U};
    #line 419 
    tmp_16 = __constr_expr_120;
    #line 419 
    __constr_expr_121 = (struct rt2x00_field16){.bit_offset = (unsigned short)5U, .bit_mask = (unsigned short)32U};
    #line 419 
    tmp_17 = __constr_expr_121;
    #line 419 
    reg = (unsigned short)(((tmp_15 << (int)tmp_16.bit_offset) & (int)tmp_17.bit_mask) | (int)reg);
  }
  {
    #line 422 
    struct rt2x00_field16 __constr_expr_123;
    #line 422 
    struct rt2x00_field16 __constr_expr_124;
    #line 422 
    struct rt2x00_field16 __constr_expr_122;
    #line 422 
    struct rt2x00_field16 tmp_18;
    #line 422 
    struct rt2x00_field16 tmp_19;
    #line 422 
    struct rt2x00_field16 tmp_20;
    {
      #line 422 
      struct rt2x00_field16 __dummy_4;
      #line 422 
      struct rt2x00_field16 __dummy2_4;
      }
    #line 422 
    __constr_expr_122 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)64U};
    #line 422 
    tmp_18 = __constr_expr_122;
    #line 422 
    reg = (unsigned short)(~ ((int)tmp_18.bit_mask) & (int)reg);
    #line 422 
    __constr_expr_123 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)64U};
    #line 422 
    tmp_19 = __constr_expr_123;
    #line 422 
    __constr_expr_124 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)64U};
    #line 422 
    tmp_20 = __constr_expr_124;
    #line 422 
    reg = (unsigned short)(((1 << (int)tmp_19.bit_offset) & (int)tmp_20.bit_mask) | (int)reg);
  }
  {
    #line 423 
    struct rt2x00_field16 __constr_expr_126;
    #line 423 
    struct rt2x00_field16 __constr_expr_127;
    #line 423 
    struct rt2x00_field16 __constr_expr_125;
    #line 423 
    struct rt2x00_field16 tmp_21;
    #line 423 
    struct rt2x00_field16 tmp_22;
    #line 423 
    struct rt2x00_field16 tmp_23;
    {
      #line 423 
      struct rt2x00_field16 __dummy_5;
      #line 423 
      struct rt2x00_field16 __dummy2_5;
      }
    #line 423 
    __constr_expr_125 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
    #line 423 
    tmp_21 = __constr_expr_125;
    #line 423 
    reg = (unsigned short)(~ ((int)tmp_21.bit_mask) & (int)reg);
    #line 423 
    __constr_expr_126 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
    #line 423 
    tmp_22 = __constr_expr_126;
    #line 423 
    __constr_expr_127 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
    #line 423 
    tmp_23 = __constr_expr_127;
    #line 423 
    reg = (unsigned short)(((((filter_flags & 2U) == 0U) << (int)tmp_22.bit_offset) & (int)tmp_23.bit_mask) | (int)reg);
  }
  {
    #line 425 
    struct rt2x00_field16 __constr_expr_129;
    #line 425 
    struct rt2x00_field16 __constr_expr_130;
    #line 425 
    struct rt2x00_field16 __constr_expr_128;
    #line 425 
    struct rt2x00_field16 tmp_24;
    #line 425 
    struct rt2x00_field16 tmp_25;
    #line 425 
    struct rt2x00_field16 tmp_26;
    {
      #line 425 
      struct rt2x00_field16 __dummy_6;
      #line 425 
      struct rt2x00_field16 __dummy2_6;
      }
    #line 425 
    __constr_expr_128 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
    #line 425 
    tmp_24 = __constr_expr_128;
    #line 425 
    reg = (unsigned short)(~ ((int)tmp_24.bit_mask) & (int)reg);
    #line 425 
    __constr_expr_129 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
    #line 425 
    tmp_25 = __constr_expr_129;
    #line 425 
    __constr_expr_130 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
    #line 425 
    tmp_26 = __constr_expr_130;
    #line 425 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 426 
  rt2500usb_register_write(rt2x00dev,1092U,(unsigned short)((int)reg));
  #line 427 
  return;
}

#line 429  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_intf(struct rt2x00_dev *rt2x00dev, struct rt2x00_intf *intf, struct rt2x00intf_conf *conf, unsigned int flags)
{
  #line 434 
  unsigned int bcn_preload;
  #line 435 
  u16 reg;
  #line 437 
  if ((flags & 2U) != 0U) {
    #line 441 
    bcn_preload = 240U;
    #line 442 
    reg = rt2500usb_register_read(rt2x00dev,1128U);
    {
      #line 443 
      struct rt2x00_field16 __constr_expr_131;
      #line 443 
      struct rt2x00_field16 __constr_expr_132;
      #line 443 
      struct rt2x00_field16 __constr_expr_133;
      #line 443 
      struct rt2x00_field16 tmp;
      #line 443 
      struct rt2x00_field16 tmp_0;
      #line 443 
      struct rt2x00_field16 tmp_1;
      {
        #line 443 
        struct rt2x00_field16 __dummy;
        #line 443 
        struct rt2x00_field16 __dummy2;
        }
      #line 443 
      __constr_expr_131 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)8191U};
      #line 443 
      tmp = __constr_expr_131;
      #line 443 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 443 
      __constr_expr_132 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)8191U};
      #line 443 
      tmp_0 = __constr_expr_132;
      #line 443 
      __constr_expr_133 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)8191U};
      #line 443 
      tmp_1 = __constr_expr_133;
      #line 443 
      reg = (unsigned short)((int)((unsigned short)(((bcn_preload >> 6) << (int)tmp_0.bit_offset) & (unsigned int)tmp_1.bit_mask)) | (int)reg);
    }
    {
      #line 444 
      struct rt2x00_field16 __constr_expr_136;
      #line 444 
      struct rt2x00_field16 __constr_expr_134;
      #line 444 
      struct rt2x00_field16 __constr_expr_135;
      #line 444 
      struct rt2x00_field16 tmp_2;
      #line 444 
      int tmp_3;
      #line 444 
      struct rt2x00_field16 tmp_4;
      #line 444 
      struct rt2x00_field16 tmp_5;
      {
        #line 444 
        struct rt2x00_field16 __dummy_0;
        #line 444 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 444 
      __constr_expr_134 = (struct rt2x00_field16){.bit_offset = (unsigned short)13U, .bit_mask = (unsigned short)57344U};
      #line 444 
      tmp_2 = __constr_expr_134;
      #line 444 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 444 
      if (conf->type != (unsigned int)NL80211_IFTYPE_STATION) 
                                                              #line 444 
                                                              tmp_3 = 2; else 
                                                                    #line 444 
                                                                    tmp_3 = 0;
      #line 444 
      __constr_expr_135 = (struct rt2x00_field16){.bit_offset = (unsigned short)13U, .bit_mask = (unsigned short)57344U};
      #line 444 
      tmp_4 = __constr_expr_135;
      #line 444 
      __constr_expr_136 = (struct rt2x00_field16){.bit_offset = (unsigned short)13U, .bit_mask = (unsigned short)57344U};
      #line 444 
      tmp_5 = __constr_expr_136;
      #line 444 
      reg = (unsigned short)(((tmp_3 << (int)tmp_4.bit_offset) & (int)tmp_5.bit_mask) | (int)reg);
    }
    #line 446 
    rt2500usb_register_write(rt2x00dev,1128U,(unsigned short)((int)reg));
    #line 451 
    reg = rt2500usb_register_read(rt2x00dev,1124U);
    {
      #line 452 
      struct rt2x00_field16 __constr_expr_139;
      #line 452 
      struct rt2x00_field16 __constr_expr_137;
      #line 452 
      struct rt2x00_field16 __constr_expr_138;
      #line 452 
      struct rt2x00_field16 tmp_6;
      #line 452 
      struct rt2x00_field16 tmp_7;
      #line 452 
      struct rt2x00_field16 tmp_8;
      {
        #line 452 
        struct rt2x00_field16 __dummy_1;
        #line 452 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 452 
      __constr_expr_137 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)15U};
      #line 452 
      tmp_6 = __constr_expr_137;
      #line 452 
      reg = (unsigned short)(~ ((int)tmp_6.bit_mask) & (int)reg);
      #line 452 
      __constr_expr_138 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)15U};
      #line 452 
      tmp_7 = __constr_expr_138;
      #line 452 
      __constr_expr_139 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)15U};
      #line 452 
      tmp_8 = __constr_expr_139;
      #line 452 
      reg = (unsigned short)(0 | (int)reg);
    }
    #line 453 
    rt2500usb_register_write(rt2x00dev,1124U,(unsigned short)((int)reg));
    #line 455 
    reg = rt2500usb_register_read(rt2x00dev,1126U);
    {
      #line 456 
      struct rt2x00_field16 __constr_expr_142;
      #line 456 
      struct rt2x00_field16 __constr_expr_140;
      #line 456 
      struct rt2x00_field16 __constr_expr_141;
      #line 456 
      struct rt2x00_field16 tmp_9;
      #line 456 
      struct rt2x00_field16 tmp_10;
      #line 456 
      struct rt2x00_field16 tmp_11;
      {
        #line 456 
        struct rt2x00_field16 __dummy_2;
        #line 456 
        struct rt2x00_field16 __dummy2_2;
        }
      #line 456 
      __constr_expr_140 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
      #line 456 
      tmp_9 = __constr_expr_140;
      #line 456 
      reg = (unsigned short)(~ ((int)tmp_9.bit_mask) & (int)reg);
      #line 456 
      __constr_expr_141 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
      #line 456 
      tmp_10 = __constr_expr_141;
      #line 456 
      __constr_expr_142 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
      #line 456 
      tmp_11 = __constr_expr_142;
      #line 456 
      reg = (unsigned short)((int)((unsigned short)(((unsigned int)conf->sync << (int)tmp_10.bit_offset) & (unsigned int)tmp_11.bit_mask)) | (int)reg);
    }
    #line 457 
    rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
  }
  #line 460 
  if ((flags & 4U) != 0U) 
                          #line 461 
                          rt2500usb_register_multiwrite(rt2x00dev,1028U,(void *)(& conf->mac),(unsigned short)6);
  #line 464 
  if ((flags & 8U) != 0U) 
                          #line 465 
                          rt2500usb_register_multiwrite(rt2x00dev,1034U,(void *)(& conf->bssid),(unsigned short)6);
  #line 466 
  return;
}

#line 469  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_erp(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_erp *erp, u32 changed)
{
  #line 473 
  u16 reg;
  #line 475 
  if ((changed & 4U) != 0U) {
    #line 476 
    reg = rt2500usb_register_read(rt2x00dev,1108U);
    {
      #line 477 
      struct rt2x00_field16 __constr_expr_143;
      #line 477 
      struct rt2x00_field16 __constr_expr_144;
      #line 477 
      struct rt2x00_field16 __constr_expr_145;
      #line 477 
      struct rt2x00_field16 tmp;
      #line 477 
      struct rt2x00_field16 tmp_0;
      #line 477 
      struct rt2x00_field16 tmp_1;
      {
        #line 477 
        struct rt2x00_field16 __dummy;
        #line 477 
        struct rt2x00_field16 __dummy2;
        }
      #line 477 
      __constr_expr_143 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
      #line 477 
      tmp = __constr_expr_143;
      #line 477 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 477 
      __constr_expr_144 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
      #line 477 
      tmp_0 = __constr_expr_144;
      #line 477 
      __constr_expr_145 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
      #line 477 
      tmp_1 = __constr_expr_145;
      #line 477 
      reg = (unsigned short)((((erp->short_preamble != 0) << (int)tmp_0.bit_offset) & (int)tmp_1.bit_mask) | (int)reg);
    }
    #line 479 
    rt2500usb_register_write(rt2x00dev,1108U,(unsigned short)((int)reg));
  }
  #line 482 
  if ((changed & 32U) != 0U) 
                             #line 483 
                             rt2500usb_register_write(rt2x00dev,1110U,(unsigned short)((int)((unsigned short)erp->basic_rates)));
  #line 486 
  if ((changed & 64U) != 0U) {
    #line 487 
    reg = rt2500usb_register_read(rt2x00dev,1124U);
    {
      #line 488 
      struct rt2x00_field16 __constr_expr_146;
      #line 488 
      struct rt2x00_field16 __constr_expr_147;
      #line 488 
      struct rt2x00_field16 __constr_expr_148;
      #line 488 
      struct rt2x00_field16 tmp_2;
      #line 488 
      struct rt2x00_field16 tmp_3;
      #line 488 
      struct rt2x00_field16 tmp_4;
      {
        #line 488 
        struct rt2x00_field16 __dummy_0;
        #line 488 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 488 
      __constr_expr_146 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)65520U};
      #line 488 
      tmp_2 = __constr_expr_146;
      #line 488 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 488 
      __constr_expr_147 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)65520U};
      #line 488 
      tmp_3 = __constr_expr_147;
      #line 488 
      __constr_expr_148 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)65520U};
      #line 488 
      tmp_4 = __constr_expr_148;
      #line 488 
      reg = (unsigned short)((((int)erp->beacon_int * 4 << (int)tmp_3.bit_offset) & (int)tmp_4.bit_mask) | (int)reg);
    }
    #line 490 
    rt2500usb_register_write(rt2x00dev,1124U,(unsigned short)((int)reg));
  }
  #line 493 
  if ((changed & 8U) != 0U) {
    #line 494 
    rt2500usb_register_write(rt2x00dev,1044U,(unsigned short)((int)((unsigned short)erp->slot_time)));
    #line 495 
    rt2500usb_register_write(rt2x00dev,1046U,(unsigned short)((int)((unsigned short)erp->sifs)));
    #line 496 
    rt2500usb_register_write(rt2x00dev,1048U,(unsigned short)((int)((unsigned short)erp->eifs)));
  }
  #line 498 
  return;
}

#line 500  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_ant(struct rt2x00_dev *rt2x00dev, struct antenna_setup *ant)
{
  #line 503 
  u8 r2;
  #line 504 
  u8 r14;
  #line 505 
  u16 csr5;
  #line 506 
  u16 csr6;
  #line 512 
  if ((long)(ant->rx == (unsigned int)ANTENNA_SW_DIVERSITY) != 0L || (long)(ant->tx == (unsigned int)ANTENNA_SW_DIVERSITY) != 0L) {
    #line 513 
    ldv_inline_asm();
    #line 514 
    ldv_inline_asm();
    #line 515 
    ldv_inline_asm();
    #line 512 
    ;
  }
  #line 515 
  r2 = rt2500usb_bbp_read(rt2x00dev,2U);
  #line 516 
  r14 = rt2500usb_bbp_read(rt2x00dev,14U);
  #line 517 
  csr5 = rt2500usb_register_read(rt2x00dev,1226U);
  #line 518 
  csr6 = rt2500usb_register_read(rt2x00dev,1228U);
  #line 523 
  switch ((unsigned int)ant->tx) {
    #line 524 
    case (unsigned int)3: 
                          #line 524 
    ;
    {
      #line 525 
      struct rt2x00_field8 __constr_expr_149;
      #line 525 
      struct rt2x00_field8 __constr_expr_150;
      #line 525 
      struct rt2x00_field8 __constr_expr_151;
      #line 525 
      struct rt2x00_field8 tmp;
      #line 525 
      struct rt2x00_field8 tmp_0;
      #line 525 
      struct rt2x00_field8 tmp_1;
      {
        #line 525 
        struct rt2x00_field8 __dummy;
        #line 525 
        struct rt2x00_field8 __dummy2;
        }
      #line 525 
      __constr_expr_149 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 525 
      tmp = __constr_expr_149;
      #line 525 
      r2 = (unsigned char)(~ ((int)tmp.bit_mask) & (int)r2);
      #line 525 
      __constr_expr_150 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 525 
      tmp_0 = __constr_expr_150;
      #line 525 
      __constr_expr_151 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 525 
      tmp_1 = __constr_expr_151;
      #line 525 
      r2 = (unsigned char)(((1 << (int)tmp_0.bit_offset) & (int)tmp_1.bit_mask) | (int)r2);
    }
    {
      #line 526 
      struct rt2x00_field16 __constr_expr_152;
      #line 526 
      struct rt2x00_field16 __constr_expr_153;
      #line 526 
      struct rt2x00_field16 __constr_expr_154;
      #line 526 
      struct rt2x00_field16 tmp_2;
      #line 526 
      struct rt2x00_field16 tmp_3;
      #line 526 
      struct rt2x00_field16 tmp_4;
      {
        #line 526 
        struct rt2x00_field16 __dummy_0;
        #line 526 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 526 
      __constr_expr_152 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 526 
      tmp_2 = __constr_expr_152;
      #line 526 
      csr5 = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)csr5);
      #line 526 
      __constr_expr_153 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 526 
      tmp_3 = __constr_expr_153;
      #line 526 
      __constr_expr_154 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 526 
      tmp_4 = __constr_expr_154;
      #line 526 
      csr5 = (unsigned short)(((1 << (int)tmp_3.bit_offset) & (int)tmp_4.bit_mask) | (int)csr5);
    }
    {
      #line 527 
      struct rt2x00_field16 __constr_expr_155;
      #line 527 
      struct rt2x00_field16 __constr_expr_156;
      #line 527 
      struct rt2x00_field16 __constr_expr_157;
      #line 527 
      struct rt2x00_field16 tmp_5;
      #line 527 
      struct rt2x00_field16 tmp_6;
      #line 527 
      struct rt2x00_field16 tmp_7;
      {
        #line 527 
        struct rt2x00_field16 __dummy_1;
        #line 527 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 527 
      __constr_expr_155 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 527 
      tmp_5 = __constr_expr_155;
      #line 527 
      csr6 = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)csr6);
      #line 527 
      __constr_expr_156 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 527 
      tmp_6 = __constr_expr_156;
      #line 527 
      __constr_expr_157 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 527 
      tmp_7 = __constr_expr_157;
      #line 527 
      csr6 = (unsigned short)(((1 << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)csr6);
    }
    #line 528 
    break;
    #line 529 
    case (unsigned int)1: 
                          #line 529 
    ;
    {
      #line 530 
      struct rt2x00_field8 __constr_expr_158;
      #line 530 
      struct rt2x00_field8 __constr_expr_159;
      #line 530 
      struct rt2x00_field8 __constr_expr_160;
      #line 530 
      struct rt2x00_field8 tmp_8;
      #line 530 
      struct rt2x00_field8 tmp_9;
      #line 530 
      struct rt2x00_field8 tmp_10;
      {
        #line 530 
        struct rt2x00_field8 __dummy_2;
        #line 530 
        struct rt2x00_field8 __dummy2_2;
        }
      #line 530 
      __constr_expr_158 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 530 
      tmp_8 = __constr_expr_158;
      #line 530 
      r2 = (unsigned char)(~ ((int)tmp_8.bit_mask) & (int)r2);
      #line 530 
      __constr_expr_159 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 530 
      tmp_9 = __constr_expr_159;
      #line 530 
      __constr_expr_160 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 530 
      tmp_10 = __constr_expr_160;
      #line 530 
      r2 = (unsigned char)(0 | (int)r2);
    }
    {
      #line 531 
      struct rt2x00_field16 __constr_expr_161;
      #line 531 
      struct rt2x00_field16 __constr_expr_162;
      #line 531 
      struct rt2x00_field16 __constr_expr_163;
      #line 531 
      struct rt2x00_field16 tmp_11;
      #line 531 
      struct rt2x00_field16 tmp_12;
      #line 531 
      struct rt2x00_field16 tmp_13;
      {
        #line 531 
        struct rt2x00_field16 __dummy_3;
        #line 531 
        struct rt2x00_field16 __dummy2_3;
        }
      #line 531 
      __constr_expr_161 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 531 
      tmp_11 = __constr_expr_161;
      #line 531 
      csr5 = (unsigned short)(~ ((int)tmp_11.bit_mask) & (int)csr5);
      #line 531 
      __constr_expr_162 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 531 
      tmp_12 = __constr_expr_162;
      #line 531 
      __constr_expr_163 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 531 
      tmp_13 = __constr_expr_163;
      #line 531 
      csr5 = (unsigned short)(0 | (int)csr5);
    }
    {
      #line 532 
      struct rt2x00_field16 __constr_expr_164;
      #line 532 
      struct rt2x00_field16 __constr_expr_165;
      #line 532 
      struct rt2x00_field16 __constr_expr_166;
      #line 532 
      struct rt2x00_field16 tmp_14;
      #line 532 
      struct rt2x00_field16 tmp_15;
      #line 532 
      struct rt2x00_field16 tmp_16;
      {
        #line 532 
        struct rt2x00_field16 __dummy_4;
        #line 532 
        struct rt2x00_field16 __dummy2_4;
        }
      #line 532 
      __constr_expr_164 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 532 
      tmp_14 = __constr_expr_164;
      #line 532 
      csr6 = (unsigned short)(~ ((int)tmp_14.bit_mask) & (int)csr6);
      #line 532 
      __constr_expr_165 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 532 
      tmp_15 = __constr_expr_165;
      #line 532 
      __constr_expr_166 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 532 
      tmp_16 = __constr_expr_166;
      #line 532 
      csr6 = (unsigned short)(0 | (int)csr6);
    }
    #line 533 
    break;
    #line 534 
    case (unsigned int)2: 
                          #line 534 
    ;
    #line 535 
    default: 
             #line 535 
    ;
    {
      #line 536 
      struct rt2x00_field8 __constr_expr_167;
      #line 536 
      struct rt2x00_field8 __constr_expr_168;
      #line 536 
      struct rt2x00_field8 __constr_expr_169;
      #line 536 
      struct rt2x00_field8 tmp_17;
      #line 536 
      struct rt2x00_field8 tmp_18;
      #line 536 
      struct rt2x00_field8 tmp_19;
      {
        #line 536 
        struct rt2x00_field8 __dummy_5;
        #line 536 
        struct rt2x00_field8 __dummy2_5;
        }
      #line 536 
      __constr_expr_167 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 536 
      tmp_17 = __constr_expr_167;
      #line 536 
      r2 = (unsigned char)(~ ((int)tmp_17.bit_mask) & (int)r2);
      #line 536 
      __constr_expr_168 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 536 
      tmp_18 = __constr_expr_168;
      #line 536 
      __constr_expr_169 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 536 
      tmp_19 = __constr_expr_169;
      #line 536 
      r2 = (unsigned char)(((2 << (int)tmp_18.bit_offset) & (int)tmp_19.bit_mask) | (int)r2);
    }
    {
      #line 537 
      struct rt2x00_field16 __constr_expr_170;
      #line 537 
      struct rt2x00_field16 __constr_expr_171;
      #line 537 
      struct rt2x00_field16 __constr_expr_172;
      #line 537 
      struct rt2x00_field16 tmp_20;
      #line 537 
      struct rt2x00_field16 tmp_21;
      #line 537 
      struct rt2x00_field16 tmp_22;
      {
        #line 537 
        struct rt2x00_field16 __dummy_6;
        #line 537 
        struct rt2x00_field16 __dummy2_6;
        }
      #line 537 
      __constr_expr_170 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 537 
      tmp_20 = __constr_expr_170;
      #line 537 
      csr5 = (unsigned short)(~ ((int)tmp_20.bit_mask) & (int)csr5);
      #line 537 
      __constr_expr_171 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 537 
      tmp_21 = __constr_expr_171;
      #line 537 
      __constr_expr_172 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 537 
      tmp_22 = __constr_expr_172;
      #line 537 
      csr5 = (unsigned short)(((2 << (int)tmp_21.bit_offset) & (int)tmp_22.bit_mask) | (int)csr5);
    }
    {
      #line 538 
      struct rt2x00_field16 __constr_expr_173;
      #line 538 
      struct rt2x00_field16 __constr_expr_174;
      #line 538 
      struct rt2x00_field16 __constr_expr_175;
      #line 538 
      struct rt2x00_field16 tmp_23;
      #line 538 
      struct rt2x00_field16 tmp_24;
      #line 538 
      struct rt2x00_field16 tmp_25;
      {
        #line 538 
        struct rt2x00_field16 __dummy_7;
        #line 538 
        struct rt2x00_field16 __dummy2_7;
        }
      #line 538 
      __constr_expr_173 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 538 
      tmp_23 = __constr_expr_173;
      #line 538 
      csr6 = (unsigned short)(~ ((int)tmp_23.bit_mask) & (int)csr6);
      #line 538 
      __constr_expr_174 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 538 
      tmp_24 = __constr_expr_174;
      #line 538 
      __constr_expr_175 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 538 
      tmp_25 = __constr_expr_175;
      #line 538 
      csr6 = (unsigned short)(((2 << (int)tmp_24.bit_offset) & (int)tmp_25.bit_mask) | (int)csr6);
    }
    #line 539 
    break;
  }
  #line 545 
  switch ((unsigned int)ant->rx) {
    #line 546 
    case (unsigned int)3: 
                          #line 546 
    ;
    {
      #line 547 
      struct rt2x00_field8 __constr_expr_176;
      #line 547 
      struct rt2x00_field8 __constr_expr_177;
      #line 547 
      struct rt2x00_field8 __constr_expr_178;
      #line 547 
      struct rt2x00_field8 tmp_26;
      #line 547 
      struct rt2x00_field8 tmp_27;
      #line 547 
      struct rt2x00_field8 tmp_28;
      {
        #line 547 
        struct rt2x00_field8 __dummy_8;
        #line 547 
        struct rt2x00_field8 __dummy2_8;
        }
      #line 547 
      __constr_expr_176 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 547 
      tmp_26 = __constr_expr_176;
      #line 547 
      r14 = (unsigned char)(~ ((int)tmp_26.bit_mask) & (int)r14);
      #line 547 
      __constr_expr_177 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 547 
      tmp_27 = __constr_expr_177;
      #line 547 
      __constr_expr_178 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 547 
      tmp_28 = __constr_expr_178;
      #line 547 
      r14 = (unsigned char)(((1 << (int)tmp_27.bit_offset) & (int)tmp_28.bit_mask) | (int)r14);
    }
    #line 548 
    break;
    #line 549 
    case (unsigned int)1: 
                          #line 549 
    ;
    {
      #line 550 
      struct rt2x00_field8 __constr_expr_179;
      #line 550 
      struct rt2x00_field8 __constr_expr_180;
      #line 550 
      struct rt2x00_field8 __constr_expr_181;
      #line 550 
      struct rt2x00_field8 tmp_29;
      #line 550 
      struct rt2x00_field8 tmp_30;
      #line 550 
      struct rt2x00_field8 tmp_31;
      {
        #line 550 
        struct rt2x00_field8 __dummy_9;
        #line 550 
        struct rt2x00_field8 __dummy2_9;
        }
      #line 550 
      __constr_expr_179 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 550 
      tmp_29 = __constr_expr_179;
      #line 550 
      r14 = (unsigned char)(~ ((int)tmp_29.bit_mask) & (int)r14);
      #line 550 
      __constr_expr_180 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 550 
      tmp_30 = __constr_expr_180;
      #line 550 
      __constr_expr_181 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 550 
      tmp_31 = __constr_expr_181;
      #line 550 
      r14 = (unsigned char)(0 | (int)r14);
    }
    #line 551 
    break;
    #line 552 
    case (unsigned int)2: 
                          #line 552 
    ;
    #line 553 
    default: 
             #line 553 
    ;
    {
      #line 554 
      struct rt2x00_field8 __constr_expr_182;
      #line 554 
      struct rt2x00_field8 __constr_expr_183;
      #line 554 
      struct rt2x00_field8 __constr_expr_184;
      #line 554 
      struct rt2x00_field8 tmp_32;
      #line 554 
      struct rt2x00_field8 tmp_33;
      #line 554 
      struct rt2x00_field8 tmp_34;
      {
        #line 554 
        struct rt2x00_field8 __dummy_10;
        #line 554 
        struct rt2x00_field8 __dummy2_10;
        }
      #line 554 
      __constr_expr_182 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 554 
      tmp_32 = __constr_expr_182;
      #line 554 
      r14 = (unsigned char)(~ ((int)tmp_32.bit_mask) & (int)r14);
      #line 554 
      __constr_expr_183 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 554 
      tmp_33 = __constr_expr_183;
      #line 554 
      __constr_expr_184 = (struct rt2x00_field8){.bit_offset = (unsigned char)0U, .bit_mask = (unsigned char)3U};
      #line 554 
      tmp_34 = __constr_expr_184;
      #line 554 
      r14 = (unsigned char)(((2 << (int)tmp_33.bit_offset) & (int)tmp_34.bit_mask) | (int)r14);
    }
    #line 555 
    break;
  }
  #line 561 
  if ((int)rt2x00_rf(rt2x00dev,(unsigned short)5) != 0) 
                                                        #line 561 
                                                        goto _LOR;
  else {
    #line 561 
    if ((int)rt2x00_rf(rt2x00dev,(unsigned short)16) != 0) {
      #line 561 
      _LOR: {
              {
                #line 562 
                struct rt2x00_field8 __constr_expr_185;
                #line 562 
                struct rt2x00_field8 __constr_expr_186;
                #line 562 
                struct rt2x00_field8 __constr_expr_187;
                #line 562 
                struct rt2x00_field8 tmp_35;
                #line 562 
                struct rt2x00_field8 tmp_36;
                #line 562 
                struct rt2x00_field8 tmp_37;
                {
                  #line 562 
                  struct rt2x00_field8 __dummy_11;
                  #line 562 
                  struct rt2x00_field8 __dummy2_11;
                  }
                #line 562 
                __constr_expr_185 = (struct rt2x00_field8){.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                #line 562 
                tmp_35 = __constr_expr_185;
                #line 562 
                r2 = (unsigned char)(~ ((int)tmp_35.bit_mask) & (int)r2);
                #line 562 
                __constr_expr_186 = (struct rt2x00_field8){.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                #line 562 
                tmp_36 = __constr_expr_186;
                #line 562 
                __constr_expr_187 = (struct rt2x00_field8){.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                #line 562 
                tmp_37 = __constr_expr_187;
                #line 562 
                r2 = (unsigned char)(((1 << (int)tmp_36.bit_offset) & (int)tmp_37.bit_mask) | (int)r2);
              }
              {
                #line 563 
                struct rt2x00_field16 __constr_expr_188;
                #line 563 
                struct rt2x00_field16 __constr_expr_189;
                #line 563 
                struct rt2x00_field16 __constr_expr_190;
                #line 563 
                struct rt2x00_field16 tmp_38;
                #line 563 
                struct rt2x00_field16 tmp_39;
                #line 563 
                struct rt2x00_field16 tmp_40;
                {
                  #line 563 
                  struct rt2x00_field16 __dummy_12;
                  #line 563 
                  struct rt2x00_field16 __dummy2_12;
                  }
                #line 563 
                __constr_expr_188 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
                #line 563 
                tmp_38 = __constr_expr_188;
                #line 563 
                csr5 = (unsigned short)(~ ((int)tmp_38.bit_mask) & (int)csr5);
                #line 563 
                __constr_expr_189 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
                #line 563 
                tmp_39 = __constr_expr_189;
                #line 563 
                __constr_expr_190 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
                #line 563 
                tmp_40 = __constr_expr_190;
                #line 563 
                csr5 = (unsigned short)(((1 << (int)tmp_39.bit_offset) & (int)tmp_40.bit_mask) | (int)csr5);
              }
              {
                #line 564 
                struct rt2x00_field16 __constr_expr_191;
                #line 564 
                struct rt2x00_field16 __constr_expr_192;
                #line 564 
                struct rt2x00_field16 __constr_expr_193;
                #line 564 
                struct rt2x00_field16 tmp_41;
                #line 564 
                struct rt2x00_field16 tmp_42;
                #line 564 
                struct rt2x00_field16 tmp_43;
                {
                  #line 564 
                  struct rt2x00_field16 __dummy_13;
                  #line 564 
                  struct rt2x00_field16 __dummy2_13;
                  }
                #line 564 
                __constr_expr_191 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
                #line 564 
                tmp_41 = __constr_expr_191;
                #line 564 
                csr6 = (unsigned short)(~ ((int)tmp_41.bit_mask) & (int)csr6);
                #line 564 
                __constr_expr_192 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
                #line 564 
                tmp_42 = __constr_expr_192;
                #line 564 
                __constr_expr_193 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
                #line 564 
                tmp_43 = __constr_expr_193;
                #line 564 
                csr6 = (unsigned short)(((1 << (int)tmp_42.bit_offset) & (int)tmp_43.bit_mask) | (int)csr6);
              }
              #line 569 
              if ((int)rt2x00_rf(rt2x00dev,(unsigned short)5) != 0) {
                #line 570 
                struct rt2x00_field8 __constr_expr_194;
                #line 570 
                struct rt2x00_field8 __constr_expr_195;
                #line 570 
                struct rt2x00_field8 __constr_expr_196;
                #line 570 
                struct rt2x00_field8 tmp_44;
                #line 570 
                struct rt2x00_field8 tmp_45;
                #line 570 
                struct rt2x00_field8 tmp_46;
                {
                  #line 570 
                  struct rt2x00_field8 __dummy_14;
                  #line 570 
                  struct rt2x00_field8 __dummy2_14;
                  }
                #line 570 
                __constr_expr_194 = (struct rt2x00_field8){.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                #line 570 
                tmp_44 = __constr_expr_194;
                #line 570 
                r14 = (unsigned char)(~ ((int)tmp_44.bit_mask) & (int)r14);
                #line 570 
                __constr_expr_195 = (struct rt2x00_field8){.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                #line 570 
                tmp_45 = __constr_expr_195;
                #line 570 
                __constr_expr_196 = (struct rt2x00_field8){.bit_offset = (unsigned char)2U, .bit_mask = (unsigned char)4U};
                #line 570 
                tmp_46 = __constr_expr_196;
                #line 570 
                r14 = (unsigned char)(0 | (int)r14);
              }
            }
    }
    else {
      {
        #line 572 
        struct rt2x00_field16 __constr_expr_197;
        #line 572 
        struct rt2x00_field16 __constr_expr_198;
        #line 572 
        struct rt2x00_field16 __constr_expr_199;
        #line 572 
        struct rt2x00_field16 tmp_48;
        #line 572 
        struct rt2x00_field16 tmp_49;
        #line 572 
        struct rt2x00_field16 tmp_50;
        {
          #line 572 
          struct rt2x00_field16 __dummy_15;
          #line 572 
          struct rt2x00_field16 __dummy2_15;
          }
        #line 572 
        __constr_expr_197 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
        #line 572 
        tmp_48 = __constr_expr_197;
        #line 572 
        csr5 = (unsigned short)(~ ((int)tmp_48.bit_mask) & (int)csr5);
        #line 572 
        __constr_expr_198 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
        #line 572 
        tmp_49 = __constr_expr_198;
        #line 572 
        __constr_expr_199 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
        #line 572 
        tmp_50 = __constr_expr_199;
        #line 572 
        csr5 = (unsigned short)(0 | (int)csr5);
      }
      {
        #line 573 
        struct rt2x00_field16 __constr_expr_200;
        #line 573 
        struct rt2x00_field16 __constr_expr_201;
        #line 573 
        struct rt2x00_field16 __constr_expr_202;
        #line 573 
        struct rt2x00_field16 tmp_51;
        #line 573 
        struct rt2x00_field16 tmp_52;
        #line 573 
        struct rt2x00_field16 tmp_53;
        {
          #line 573 
          struct rt2x00_field16 __dummy_16;
          #line 573 
          struct rt2x00_field16 __dummy2_16;
          }
        #line 573 
        __constr_expr_200 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
        #line 573 
        tmp_51 = __constr_expr_200;
        #line 573 
        csr6 = (unsigned short)(~ ((int)tmp_51.bit_mask) & (int)csr6);
        #line 573 
        __constr_expr_201 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
        #line 573 
        tmp_52 = __constr_expr_201;
        #line 573 
        __constr_expr_202 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
        #line 573 
        tmp_53 = __constr_expr_202;
        #line 573 
        csr6 = (unsigned short)(0 | (int)csr6);
      }
    }
  }
  #line 576 
  rt2500usb_bbp_write(rt2x00dev,2U,(unsigned char)((int)r2));
  #line 577 
  rt2500usb_bbp_write(rt2x00dev,14U,(unsigned char)((int)r14));
  #line 578 
  rt2500usb_register_write(rt2x00dev,1226U,(unsigned short)((int)csr5));
  #line 579 
  rt2500usb_register_write(rt2x00dev,1228U,(unsigned short)((int)csr6));
  #line 580 
  return;
}

#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_channel(struct rt2x00_dev *rt2x00dev, struct rf_channel *rf, int txpower)
{
  {
    #line 588 
    int tmp_2;
    #line 588 
    struct rt2x00_field32 __constr_expr_204;
    #line 588 
    struct rt2x00_field32 __constr_expr_205;
    #line 588 
    struct rt2x00_field32 __constr_expr_203;
    #line 588 
    char __UNIQUE_ID___x567;
    #line 588 
    struct rt2x00_field32 tmp;
    #line 588 
    int tmp_3;
    #line 588 
    struct rt2x00_field32 tmp_4;
    #line 588 
    struct rt2x00_field32 tmp_5;
    {
      #line 588 
      struct rt2x00_field32 __dummy;
      #line 588 
      struct rt2x00_field32 __dummy2;
      }
    #line 588 
    __constr_expr_203 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 15872U};
    #line 588 
    tmp = __constr_expr_203;
    #line 588 
    rf->rf3 &= ~ tmp.bit_mask;
    {
      #line 588 
      char __UNIQUE_ID___x565;
      #line 588 
      int tmp_0;
      {
        #line 588 
        __UNIQUE_ID___x565 = (char)txpower;
        #line 588 
        char __UNIQUE_ID___y566 = (char)0;
        #line 588 
        if ((int)__UNIQUE_ID___x565 > (int)__UNIQUE_ID___y566) 
                                                               #line 588 
                                                               tmp_0 = (int)__UNIQUE_ID___x565; else 
                                                                    #line 588 
                                                                    tmp_0 = (int)__UNIQUE_ID___y566;
        }
      #line 588 
      __UNIQUE_ID___x567 = (char)tmp_0;
      #line 588 
      char __UNIQUE_ID___y568 = (char)31;
      #line 588 
      if ((int)__UNIQUE_ID___x567 < (int)__UNIQUE_ID___y568) 
                                                             #line 588 
                                                             tmp_2 = (int)__UNIQUE_ID___x567; else 
                                                                    #line 588 
                                                                    tmp_2 = (int)__UNIQUE_ID___y568;
      #line 588 
      tmp_3 = tmp_2;
    }
    #line 588 
    __constr_expr_204 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 15872U};
    #line 588 
    tmp_4 = __constr_expr_204;
    #line 588 
    __constr_expr_205 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 15872U};
    #line 588 
    tmp_5 = __constr_expr_205;
    #line 588 
    rf->rf3 |= (unsigned int)(tmp_3 << tmp_4.bit_offset) & tmp_5.bit_mask;
  }
  #line 593 
  if ((int)rt2x00_rf(rt2x00dev,(unsigned short)5) != 0) {
    #line 594 
    u32 vals[14U] = {2218U, 2222U, 2222U, 2226U, 2226U, 2230U, 2230U, 2234U, 2234U, 2238U, 2231U, 2306U, 2306U, 2310U};
    #line 601 
    rt2500usb_rf_write(rt2x00dev,2U,vals[rf->channel + -1]);
    #line 602 
    if (rf->rf4 != 0U) 
                       #line 603 
                       rt2500usb_rf_write(rt2x00dev,4U,rf->rf4);
  }
  #line 606 
  rt2500usb_rf_write(rt2x00dev,1U,rf->rf1);
  #line 607 
  rt2500usb_rf_write(rt2x00dev,2U,rf->rf2);
  #line 608 
  rt2500usb_rf_write(rt2x00dev,3U,rf->rf3);
  #line 609 
  if (rf->rf4 != 0U) 
                     #line 610 
                     rt2500usb_rf_write(rt2x00dev,4U,rf->rf4);
  #line 611 
  return;
}

#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_txpower(struct rt2x00_dev *rt2x00dev, int txpower)
{
  #line 616 
  u32 rf3;
  #line 618 
  rf3 = rt2x00_rf_read(rt2x00dev,3U);
  {
    #line 619 
    struct rt2x00_field32 __constr_expr_208;
    #line 619 
    struct rt2x00_field32 __constr_expr_206;
    #line 619 
    char __UNIQUE_ID___x571;
    #line 619 
    int tmp_2;
    #line 619 
    struct rt2x00_field32 __constr_expr_207;
    #line 619 
    struct rt2x00_field32 tmp;
    #line 619 
    int tmp_3;
    #line 619 
    struct rt2x00_field32 tmp_4;
    #line 619 
    struct rt2x00_field32 tmp_5;
    {
      #line 619 
      struct rt2x00_field32 __dummy;
      #line 619 
      struct rt2x00_field32 __dummy2;
      }
    #line 619 
    __constr_expr_206 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 15872U};
    #line 619 
    tmp = __constr_expr_206;
    #line 619 
    rf3 = ~ tmp.bit_mask & rf3;
    {
      #line 619 
      char __UNIQUE_ID___x569;
      #line 619 
      int tmp_0;
      {
        #line 619 
        __UNIQUE_ID___x569 = (char)txpower;
        #line 619 
        char __UNIQUE_ID___y570 = (char)0;
        #line 619 
        if ((int)__UNIQUE_ID___x569 > (int)__UNIQUE_ID___y570) 
                                                               #line 619 
                                                               tmp_0 = (int)__UNIQUE_ID___x569; else 
                                                                    #line 619 
                                                                    tmp_0 = (int)__UNIQUE_ID___y570;
        }
      #line 619 
      __UNIQUE_ID___x571 = (char)tmp_0;
      #line 619 
      char __UNIQUE_ID___y572 = (char)31;
      #line 619 
      if ((int)__UNIQUE_ID___x571 < (int)__UNIQUE_ID___y572) 
                                                             #line 619 
                                                             tmp_2 = (int)__UNIQUE_ID___x571; else 
                                                                    #line 619 
                                                                    tmp_2 = (int)__UNIQUE_ID___y572;
      #line 619 
      tmp_3 = tmp_2;
    }
    #line 619 
    __constr_expr_207 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 15872U};
    #line 619 
    tmp_4 = __constr_expr_207;
    #line 619 
    __constr_expr_208 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 15872U};
    #line 619 
    tmp_5 = __constr_expr_208;
    #line 619 
    rf3 = ((unsigned int)(tmp_3 << tmp_4.bit_offset) & tmp_5.bit_mask) | rf3;
  }
  #line 620 
  rt2500usb_rf_write(rt2x00dev,3U,rf3);
  #line 621 
  return;
}

#line 623  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config_ps(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_conf *libconf)
{
  #line 626 
  int tmp;
  #line 629 
  u16 reg;
  #line 626 
  if (((libconf->conf)->flags & 2U) != 0U) 
                                           #line 626 
                                           tmp = STATE_SLEEP; else 
                                                                   #line 626 
                                                                   tmp = STATE_AWAKE;
  #line 626 
  enum dev_state state = (enum dev_state)tmp;
  #line 631 
  if (state == (unsigned int)STATE_SLEEP) {
    #line 632 
    reg = rt2500usb_register_read(rt2x00dev,1060U);
    {
      #line 633 
      struct rt2x00_field16 __constr_expr_210;
      #line 633 
      struct rt2x00_field16 __constr_expr_211;
      #line 633 
      struct rt2x00_field16 __constr_expr_209;
      #line 633 
      struct rt2x00_field16 tmp_0;
      #line 633 
      struct rt2x00_field16 tmp_1;
      #line 633 
      struct rt2x00_field16 tmp_2;
      {
        #line 633 
        struct rt2x00_field16 __dummy;
        #line 633 
        struct rt2x00_field16 __dummy2;
        }
      #line 633 
      __constr_expr_209 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 633 
      tmp_0 = __constr_expr_209;
      #line 633 
      reg = (unsigned short)(~ ((int)tmp_0.bit_mask) & (int)reg);
      #line 633 
      __constr_expr_210 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 633 
      tmp_1 = __constr_expr_210;
      #line 633 
      __constr_expr_211 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 633 
      tmp_2 = __constr_expr_211;
      #line 633 
      reg = (unsigned short)(((((int)rt2x00dev->beacon_int + -20) << (int)tmp_1.bit_offset) & (int)tmp_2.bit_mask) | (int)reg);
    }
    {
      #line 635 
      struct rt2x00_field16 __constr_expr_213;
      #line 635 
      struct rt2x00_field16 __constr_expr_214;
      #line 635 
      struct rt2x00_field16 __constr_expr_212;
      #line 635 
      struct rt2x00_field16 tmp_3;
      #line 635 
      struct rt2x00_field16 tmp_4;
      #line 635 
      struct rt2x00_field16 tmp_5;
      {
        #line 635 
        struct rt2x00_field16 __dummy_0;
        #line 635 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 635 
      __constr_expr_212 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 635 
      tmp_3 = __constr_expr_212;
      #line 635 
      reg = (unsigned short)(~ ((int)tmp_3.bit_mask) & (int)reg);
      #line 635 
      __constr_expr_213 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 635 
      tmp_4 = __constr_expr_213;
      #line 635 
      __constr_expr_214 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
      #line 635 
      tmp_5 = __constr_expr_214;
      #line 635 
      reg = (unsigned short)(((((int)(libconf->conf)->listen_interval + -1) << (int)tmp_4.bit_offset) & (int)tmp_5.bit_mask) | (int)reg);
    }
    {
      #line 639 
      struct rt2x00_field16 __constr_expr_216;
      #line 639 
      struct rt2x00_field16 __constr_expr_217;
      #line 639 
      struct rt2x00_field16 __constr_expr_215;
      #line 639 
      struct rt2x00_field16 tmp_6;
      #line 639 
      struct rt2x00_field16 tmp_7;
      #line 639 
      struct rt2x00_field16 tmp_8;
      {
        #line 639 
        struct rt2x00_field16 __dummy_1;
        #line 639 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 639 
      __constr_expr_215 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 639 
      tmp_6 = __constr_expr_215;
      #line 639 
      reg = (unsigned short)(~ ((int)tmp_6.bit_mask) & (int)reg);
      #line 639 
      __constr_expr_216 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 639 
      tmp_7 = __constr_expr_216;
      #line 639 
      __constr_expr_217 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 639 
      tmp_8 = __constr_expr_217;
      #line 639 
      reg = (unsigned short)(0 | (int)reg);
    }
    #line 640 
    rt2500usb_register_write(rt2x00dev,1060U,(unsigned short)((int)reg));
    {
      #line 642 
      struct rt2x00_field16 __constr_expr_219;
      #line 642 
      struct rt2x00_field16 __constr_expr_220;
      #line 642 
      struct rt2x00_field16 __constr_expr_218;
      #line 642 
      struct rt2x00_field16 tmp_9;
      #line 642 
      struct rt2x00_field16 tmp_10;
      #line 642 
      struct rt2x00_field16 tmp_11;
      {
        #line 642 
        struct rt2x00_field16 __dummy_2;
        #line 642 
        struct rt2x00_field16 __dummy2_2;
        }
      #line 642 
      __constr_expr_218 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 642 
      tmp_9 = __constr_expr_218;
      #line 642 
      reg = (unsigned short)(~ ((int)tmp_9.bit_mask) & (int)reg);
      #line 642 
      __constr_expr_219 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 642 
      tmp_10 = __constr_expr_219;
      #line 642 
      __constr_expr_220 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 642 
      tmp_11 = __constr_expr_220;
      #line 642 
      reg = (unsigned short)(((1 << (int)tmp_10.bit_offset) & (int)tmp_11.bit_mask) | (int)reg);
    }
    #line 643 
    rt2500usb_register_write(rt2x00dev,1060U,(unsigned short)((int)reg));
  }
  else {
    #line 645 
    reg = rt2500usb_register_read(rt2x00dev,1060U);
    {
      #line 646 
      struct rt2x00_field16 __constr_expr_222;
      #line 646 
      struct rt2x00_field16 __constr_expr_223;
      #line 646 
      struct rt2x00_field16 __constr_expr_221;
      #line 646 
      struct rt2x00_field16 tmp_12;
      #line 646 
      struct rt2x00_field16 tmp_13;
      #line 646 
      struct rt2x00_field16 tmp_14;
      {
        #line 646 
        struct rt2x00_field16 __dummy_3;
        #line 646 
        struct rt2x00_field16 __dummy2_3;
        }
      #line 646 
      __constr_expr_221 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 646 
      tmp_12 = __constr_expr_221;
      #line 646 
      reg = (unsigned short)(~ ((int)tmp_12.bit_mask) & (int)reg);
      #line 646 
      __constr_expr_222 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 646 
      tmp_13 = __constr_expr_222;
      #line 646 
      __constr_expr_223 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
      #line 646 
      tmp_14 = __constr_expr_223;
      #line 646 
      reg = (unsigned short)(0 | (int)reg);
    }
    #line 647 
    rt2500usb_register_write(rt2x00dev,1060U,(unsigned short)((int)reg));
  }
  #line 650 
  (*(((rt2x00dev->ops)->lib)->set_device_state))(rt2x00dev,state);
  #line 651 
  return;
}

#line 653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_config(struct rt2x00_dev *rt2x00dev, struct rt2x00lib_conf *libconf, unsigned int flags)
{
  #line 657 
  if ((flags & 64U) != 0U) 
                           #line 658 
                           rt2500usb_config_channel(rt2x00dev,& libconf->rf,(libconf->conf)->power_level);
  #line 660 
  if ((flags & 32U) != 0U && (flags & 64U) == 0U) 
                                                  #line 662 
                                                  rt2500usb_config_txpower(rt2x00dev,(libconf->conf)->power_level);
  #line 664 
  if ((flags & 16U) != 0U) 
                           #line 665 
                           rt2500usb_config_ps(rt2x00dev,libconf);
  #line 666 
  return;
}

#line 671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_link_stats(struct rt2x00_dev *rt2x00dev, struct link_qual *qual)
{
  #line 686 
  struct rt2x00_field16 __constr_expr_226;
  #line 686 
  struct rt2x00_field16 tmp_2;
  #line 680 
  struct rt2x00_field16 __constr_expr_224;
  #line 686 
  struct rt2x00_field16 __constr_expr_227;
  #line 680 
  struct rt2x00_field16 tmp;
  #line 686 
  struct rt2x00_field16 tmp_3;
  #line 680 
  struct rt2x00_field16 __constr_expr_225;
  #line 680 
  struct rt2x00_field16 tmp_0;
  #line 674 
  u16 reg;
  #line 679 
  reg = rt2500usb_register_read(rt2x00dev,1248U);
  {
    #line 680 
    struct rt2x00_field16 __dummy;
    #line 680 
    struct rt2x00_field16 __dummy2;
    }
  #line 680 
  __constr_expr_224 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
  #line 680 
  tmp = __constr_expr_224;
  #line 680 
  __constr_expr_225 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
  #line 680 
  tmp_0 = __constr_expr_225;
  #line 680 
  ;
  #line 680 
  qual->rx_failed = (((int)tmp.bit_mask & (int)reg) >> (int)tmp_0.bit_offset);
  #line 685 
  reg = rt2500usb_register_read(rt2x00dev,1254U);
  {
    #line 686 
    struct rt2x00_field16 __dummy_0;
    #line 686 
    struct rt2x00_field16 __dummy2_0;
    }
  #line 686 
  __constr_expr_226 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
  #line 686 
  tmp_2 = __constr_expr_226;
  #line 686 
  __constr_expr_227 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)65535U};
  #line 686 
  tmp_3 = __constr_expr_227;
  #line 686 
  ;
  #line 686 
  qual->false_cca = (((int)tmp_2.bit_mask & (int)reg) >> (int)tmp_3.bit_offset);
  #line 688 
  return;
}

#line 689  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_reset_tuner(struct rt2x00_dev *rt2x00dev, struct link_qual *qual)
{
  #line 696 
  struct rt2x00_field16 __constr_expr_229;
  #line 696 
  struct rt2x00_field16 tmp_0;
  #line 708 
  struct rt2x00_field16 __constr_expr_234;
  #line 708 
  struct rt2x00_field16 tmp_8;
  #line 704 
  struct rt2x00_field16 __constr_expr_232;
  #line 708 
  struct rt2x00_field16 __constr_expr_235;
  #line 704 
  struct rt2x00_field16 tmp_5;
  #line 708 
  struct rt2x00_field16 tmp_9;
  #line 700 
  struct rt2x00_field16 __constr_expr_230;
  #line 704 
  struct rt2x00_field16 __constr_expr_233;
  #line 700 
  struct rt2x00_field16 tmp_2;
  #line 704 
  struct rt2x00_field16 tmp_6;
  #line 696 
  struct rt2x00_field16 __constr_expr_228;
  #line 700 
  struct rt2x00_field16 __constr_expr_231;
  #line 696 
  struct rt2x00_field16 tmp;
  #line 700 
  struct rt2x00_field16 tmp_3;
  #line 692 
  u16 eeprom;
  #line 693 
  u16 value;
  #line 695 
  eeprom = rt2x00_eeprom_read(rt2x00dev,49U);
  {
    #line 696 
    struct rt2x00_field16 __dummy;
    #line 696 
    struct rt2x00_field16 __dummy2;
    }
  #line 696 
  __constr_expr_228 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 696 
  tmp = __constr_expr_228;
  #line 696 
  __constr_expr_229 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 696 
  tmp_0 = __constr_expr_229;
  #line 696 
  ;
  #line 696 
  value = (unsigned short)(((int)tmp.bit_mask & (int)eeprom) >> (int)tmp_0.bit_offset);
  #line 697 
  rt2500usb_bbp_write(rt2x00dev,24U,(unsigned char)((int)((unsigned char)value)));
  #line 699 
  eeprom = rt2x00_eeprom_read(rt2x00dev,50U);
  {
    #line 700 
    struct rt2x00_field16 __dummy_0;
    #line 700 
    struct rt2x00_field16 __dummy2_0;
    }
  #line 700 
  __constr_expr_230 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 700 
  tmp_2 = __constr_expr_230;
  #line 700 
  __constr_expr_231 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 700 
  tmp_3 = __constr_expr_231;
  #line 700 
  ;
  #line 700 
  value = (unsigned short)(((int)tmp_2.bit_mask & (int)eeprom) >> (int)tmp_3.bit_offset);
  #line 701 
  rt2500usb_bbp_write(rt2x00dev,25U,(unsigned char)((int)((unsigned char)value)));
  #line 703 
  eeprom = rt2x00_eeprom_read(rt2x00dev,51U);
  {
    #line 704 
    struct rt2x00_field16 __dummy_1;
    #line 704 
    struct rt2x00_field16 __dummy2_1;
    }
  #line 704 
  __constr_expr_232 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 704 
  tmp_5 = __constr_expr_232;
  #line 704 
  __constr_expr_233 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 704 
  tmp_6 = __constr_expr_233;
  #line 704 
  ;
  #line 704 
  value = (unsigned short)(((int)tmp_5.bit_mask & (int)eeprom) >> (int)tmp_6.bit_offset);
  #line 705 
  rt2500usb_bbp_write(rt2x00dev,61U,(unsigned char)((int)((unsigned char)value)));
  #line 707 
  eeprom = rt2x00_eeprom_read(rt2x00dev,52U);
  {
    #line 708 
    struct rt2x00_field16 __dummy_2;
    #line 708 
    struct rt2x00_field16 __dummy2_2;
    }
  #line 708 
  __constr_expr_234 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 708 
  tmp_8 = __constr_expr_234;
  #line 708 
  __constr_expr_235 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 708 
  tmp_9 = __constr_expr_235;
  #line 708 
  ;
  #line 708 
  value = (unsigned short)(((int)tmp_8.bit_mask & (int)eeprom) >> (int)tmp_9.bit_offset);
  #line 709 
  rt2500usb_bbp_write(rt2x00dev,17U,(unsigned char)((int)((unsigned char)value)));
  #line 711 
  qual->vgc_level = (unsigned char)value;
  #line 712 
  return;
}

#line 717  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_start_queue(struct data_queue *queue)
{
  #line 720 
  u16 reg;
  #line 719 
  struct rt2x00_dev *rt2x00dev = queue->rt2x00dev;
  #line 722 
  switch ((unsigned int)queue->qid) {
    #line 723 
    case (unsigned int)14: 
                           #line 723 
    ;
    #line 724 
    reg = rt2500usb_register_read(rt2x00dev,1092U);
    {
      #line 725 
      struct rt2x00_field16 __constr_expr_236;
      #line 725 
      struct rt2x00_field16 __constr_expr_237;
      #line 725 
      struct rt2x00_field16 __constr_expr_238;
      #line 725 
      struct rt2x00_field16 tmp;
      #line 725 
      struct rt2x00_field16 tmp_0;
      #line 725 
      struct rt2x00_field16 tmp_1;
      {
        #line 725 
        struct rt2x00_field16 __dummy;
        #line 725 
        struct rt2x00_field16 __dummy2;
        }
      #line 725 
      __constr_expr_236 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 725 
      tmp = __constr_expr_236;
      #line 725 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 725 
      __constr_expr_237 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 725 
      tmp_0 = __constr_expr_237;
      #line 725 
      __constr_expr_238 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 725 
      tmp_1 = __constr_expr_238;
      #line 725 
      reg = (unsigned short)(0 | (int)reg);
    }
    #line 726 
    rt2500usb_register_write(rt2x00dev,1092U,(unsigned short)((int)reg));
    #line 727 
    break;
    #line 728 
    case (unsigned int)16: 
                           #line 728 
    ;
    #line 729 
    reg = rt2500usb_register_read(rt2x00dev,1126U);
    {
      #line 730 
      struct rt2x00_field16 __constr_expr_239;
      #line 730 
      struct rt2x00_field16 __constr_expr_240;
      #line 730 
      struct rt2x00_field16 __constr_expr_241;
      #line 730 
      struct rt2x00_field16 tmp_2;
      #line 730 
      struct rt2x00_field16 tmp_3;
      #line 730 
      struct rt2x00_field16 tmp_4;
      {
        #line 730 
        struct rt2x00_field16 __dummy_0;
        #line 730 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 730 
      __constr_expr_239 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 730 
      tmp_2 = __constr_expr_239;
      #line 730 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 730 
      __constr_expr_240 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 730 
      tmp_3 = __constr_expr_240;
      #line 730 
      __constr_expr_241 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 730 
      tmp_4 = __constr_expr_241;
      #line 730 
      reg = (unsigned short)(((1 << (int)tmp_3.bit_offset) & (int)tmp_4.bit_mask) | (int)reg);
    }
    {
      #line 731 
      struct rt2x00_field16 __constr_expr_242;
      #line 731 
      struct rt2x00_field16 __constr_expr_243;
      #line 731 
      struct rt2x00_field16 __constr_expr_244;
      #line 731 
      struct rt2x00_field16 tmp_5;
      #line 731 
      struct rt2x00_field16 tmp_6;
      #line 731 
      struct rt2x00_field16 tmp_7;
      {
        #line 731 
        struct rt2x00_field16 __dummy_1;
        #line 731 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 731 
      __constr_expr_242 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
      #line 731 
      tmp_5 = __constr_expr_242;
      #line 731 
      reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
      #line 731 
      __constr_expr_243 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
      #line 731 
      tmp_6 = __constr_expr_243;
      #line 731 
      __constr_expr_244 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
      #line 731 
      tmp_7 = __constr_expr_244;
      #line 731 
      reg = (unsigned short)(((1 << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)reg);
    }
    {
      #line 732 
      struct rt2x00_field16 __constr_expr_245;
      #line 732 
      struct rt2x00_field16 __constr_expr_246;
      #line 732 
      struct rt2x00_field16 __constr_expr_247;
      #line 732 
      struct rt2x00_field16 tmp_8;
      #line 732 
      struct rt2x00_field16 tmp_9;
      #line 732 
      struct rt2x00_field16 tmp_10;
      {
        #line 732 
        struct rt2x00_field16 __dummy_2;
        #line 732 
        struct rt2x00_field16 __dummy2_2;
        }
      #line 732 
      __constr_expr_245 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
      #line 732 
      tmp_8 = __constr_expr_245;
      #line 732 
      reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
      #line 732 
      __constr_expr_246 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
      #line 732 
      tmp_9 = __constr_expr_246;
      #line 732 
      __constr_expr_247 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
      #line 732 
      tmp_10 = __constr_expr_247;
      #line 732 
      reg = (unsigned short)(((1 << (int)tmp_9.bit_offset) & (int)tmp_10.bit_mask) | (int)reg);
    }
    #line 733 
    rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
    #line 734 
    break;
    #line 735 
    default: 
             #line 735 
    ;
    #line 736 
    break;
  }
  #line 738 
  return;
}

#line 740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_stop_queue(struct data_queue *queue)
{
  #line 743 
  u16 reg;
  #line 742 
  struct rt2x00_dev *rt2x00dev = queue->rt2x00dev;
  #line 745 
  switch ((unsigned int)queue->qid) {
    #line 746 
    case (unsigned int)14: 
                           #line 746 
    ;
    #line 747 
    reg = rt2500usb_register_read(rt2x00dev,1092U);
    {
      #line 748 
      struct rt2x00_field16 __constr_expr_248;
      #line 748 
      struct rt2x00_field16 __constr_expr_249;
      #line 748 
      struct rt2x00_field16 __constr_expr_250;
      #line 748 
      struct rt2x00_field16 tmp;
      #line 748 
      struct rt2x00_field16 tmp_0;
      #line 748 
      struct rt2x00_field16 tmp_1;
      {
        #line 748 
        struct rt2x00_field16 __dummy;
        #line 748 
        struct rt2x00_field16 __dummy2;
        }
      #line 748 
      __constr_expr_248 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 748 
      tmp = __constr_expr_248;
      #line 748 
      reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
      #line 748 
      __constr_expr_249 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 748 
      tmp_0 = __constr_expr_249;
      #line 748 
      __constr_expr_250 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 748 
      tmp_1 = __constr_expr_250;
      #line 748 
      reg = (unsigned short)(((1 << (int)tmp_0.bit_offset) & (int)tmp_1.bit_mask) | (int)reg);
    }
    #line 749 
    rt2500usb_register_write(rt2x00dev,1092U,(unsigned short)((int)reg));
    #line 750 
    break;
    #line 751 
    case (unsigned int)16: 
                           #line 751 
    ;
    #line 752 
    reg = rt2500usb_register_read(rt2x00dev,1126U);
    {
      #line 753 
      struct rt2x00_field16 __constr_expr_251;
      #line 753 
      struct rt2x00_field16 __constr_expr_252;
      #line 753 
      struct rt2x00_field16 __constr_expr_253;
      #line 753 
      struct rt2x00_field16 tmp_2;
      #line 753 
      struct rt2x00_field16 tmp_3;
      #line 753 
      struct rt2x00_field16 tmp_4;
      {
        #line 753 
        struct rt2x00_field16 __dummy_0;
        #line 753 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 753 
      __constr_expr_251 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 753 
      tmp_2 = __constr_expr_251;
      #line 753 
      reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
      #line 753 
      __constr_expr_252 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 753 
      tmp_3 = __constr_expr_252;
      #line 753 
      __constr_expr_253 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 753 
      tmp_4 = __constr_expr_253;
      #line 753 
      reg = (unsigned short)(0 | (int)reg);
    }
    {
      #line 754 
      struct rt2x00_field16 __constr_expr_254;
      #line 754 
      struct rt2x00_field16 __constr_expr_255;
      #line 754 
      struct rt2x00_field16 __constr_expr_256;
      #line 754 
      struct rt2x00_field16 tmp_5;
      #line 754 
      struct rt2x00_field16 tmp_6;
      #line 754 
      struct rt2x00_field16 tmp_7;
      {
        #line 754 
        struct rt2x00_field16 __dummy_1;
        #line 754 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 754 
      __constr_expr_254 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
      #line 754 
      tmp_5 = __constr_expr_254;
      #line 754 
      reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
      #line 754 
      __constr_expr_255 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
      #line 754 
      tmp_6 = __constr_expr_255;
      #line 754 
      __constr_expr_256 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
      #line 754 
      tmp_7 = __constr_expr_256;
      #line 754 
      reg = (unsigned short)(0 | (int)reg);
    }
    {
      #line 755 
      struct rt2x00_field16 __constr_expr_257;
      #line 755 
      struct rt2x00_field16 __constr_expr_258;
      #line 755 
      struct rt2x00_field16 __constr_expr_259;
      #line 755 
      struct rt2x00_field16 tmp_8;
      #line 755 
      struct rt2x00_field16 tmp_9;
      #line 755 
      struct rt2x00_field16 tmp_10;
      {
        #line 755 
        struct rt2x00_field16 __dummy_2;
        #line 755 
        struct rt2x00_field16 __dummy2_2;
        }
      #line 755 
      __constr_expr_257 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
      #line 755 
      tmp_8 = __constr_expr_257;
      #line 755 
      reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
      #line 755 
      __constr_expr_258 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
      #line 755 
      tmp_9 = __constr_expr_258;
      #line 755 
      __constr_expr_259 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
      #line 755 
      tmp_10 = __constr_expr_259;
      #line 755 
      reg = (unsigned short)(0 | (int)reg);
    }
    #line 756 
    rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
    #line 757 
    break;
    #line 758 
    default: 
             #line 758 
    ;
    #line 759 
    break;
  }
  #line 761 
  return;
}

#line 766  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_init_registers(struct rt2x00_dev *rt2x00dev)
{
  #line 768 
  u16 reg;
  #line 770 
  rt2x00usb_vendor_request_sw(rt2x00dev,(unsigned char)1,(unsigned short)1,(unsigned short)4,100);
  #line 772 
  rt2x00usb_vendor_request_sw(rt2x00dev,(unsigned char)2,(unsigned short)776,(unsigned short)240,100);
  #line 775 
  reg = rt2500usb_register_read(rt2x00dev,1092U);
  {
    #line 776 
    struct rt2x00_field16 __constr_expr_262;
    #line 776 
    struct rt2x00_field16 __constr_expr_260;
    #line 776 
    struct rt2x00_field16 __constr_expr_261;
    #line 776 
    struct rt2x00_field16 tmp;
    #line 776 
    struct rt2x00_field16 tmp_0;
    #line 776 
    struct rt2x00_field16 tmp_1;
    {
      #line 776 
      struct rt2x00_field16 __dummy;
      #line 776 
      struct rt2x00_field16 __dummy2;
      }
    #line 776 
    __constr_expr_260 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 776 
    tmp = __constr_expr_260;
    #line 776 
    reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
    #line 776 
    __constr_expr_261 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 776 
    tmp_0 = __constr_expr_261;
    #line 776 
    __constr_expr_262 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 776 
    tmp_1 = __constr_expr_262;
    #line 776 
    reg = (unsigned short)(((1 << (int)tmp_0.bit_offset) & (int)tmp_1.bit_mask) | (int)reg);
  }
  #line 777 
  rt2500usb_register_write(rt2x00dev,1092U,(unsigned short)((int)reg));
  #line 779 
  rt2500usb_register_write(rt2x00dev,1050U,(unsigned short)4369);
  #line 780 
  rt2500usb_register_write(rt2x00dev,1052U,(unsigned short)7697);
  #line 782 
  reg = rt2500usb_register_read(rt2x00dev,1026U);
  {
    #line 783 
    struct rt2x00_field16 __constr_expr_265;
    #line 783 
    struct rt2x00_field16 __constr_expr_263;
    #line 783 
    struct rt2x00_field16 __constr_expr_264;
    #line 783 
    struct rt2x00_field16 tmp_2;
    #line 783 
    struct rt2x00_field16 tmp_3;
    #line 783 
    struct rt2x00_field16 tmp_4;
    {
      #line 783 
      struct rt2x00_field16 __dummy_0;
      #line 783 
      struct rt2x00_field16 __dummy2_0;
      }
    #line 783 
    __constr_expr_263 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 783 
    tmp_2 = __constr_expr_263;
    #line 783 
    reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
    #line 783 
    __constr_expr_264 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 783 
    tmp_3 = __constr_expr_264;
    #line 783 
    __constr_expr_265 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 783 
    tmp_4 = __constr_expr_265;
    #line 783 
    reg = (unsigned short)(((1 << (int)tmp_3.bit_offset) & (int)tmp_4.bit_mask) | (int)reg);
  }
  {
    #line 784 
    struct rt2x00_field16 __constr_expr_268;
    #line 784 
    struct rt2x00_field16 __constr_expr_266;
    #line 784 
    struct rt2x00_field16 __constr_expr_267;
    #line 784 
    struct rt2x00_field16 tmp_5;
    #line 784 
    struct rt2x00_field16 tmp_6;
    #line 784 
    struct rt2x00_field16 tmp_7;
    {
      #line 784 
      struct rt2x00_field16 __dummy_1;
      #line 784 
      struct rt2x00_field16 __dummy2_1;
      }
    #line 784 
    __constr_expr_266 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 784 
    tmp_5 = __constr_expr_266;
    #line 784 
    reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
    #line 784 
    __constr_expr_267 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 784 
    tmp_6 = __constr_expr_267;
    #line 784 
    __constr_expr_268 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 784 
    tmp_7 = __constr_expr_268;
    #line 784 
    reg = (unsigned short)(((1 << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)reg);
  }
  {
    #line 785 
    struct rt2x00_field16 __constr_expr_271;
    #line 785 
    struct rt2x00_field16 __constr_expr_269;
    #line 785 
    struct rt2x00_field16 __constr_expr_270;
    #line 785 
    struct rt2x00_field16 tmp_8;
    #line 785 
    struct rt2x00_field16 tmp_9;
    #line 785 
    struct rt2x00_field16 tmp_10;
    {
      #line 785 
      struct rt2x00_field16 __dummy_2;
      #line 785 
      struct rt2x00_field16 __dummy2_2;
      }
    #line 785 
    __constr_expr_269 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 785 
    tmp_8 = __constr_expr_269;
    #line 785 
    reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
    #line 785 
    __constr_expr_270 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 785 
    tmp_9 = __constr_expr_270;
    #line 785 
    __constr_expr_271 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 785 
    tmp_10 = __constr_expr_271;
    #line 785 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 786 
  rt2500usb_register_write(rt2x00dev,1026U,(unsigned short)((int)reg));
  #line 788 
  reg = rt2500usb_register_read(rt2x00dev,1026U);
  {
    #line 789 
    struct rt2x00_field16 __constr_expr_274;
    #line 789 
    struct rt2x00_field16 __constr_expr_272;
    #line 789 
    struct rt2x00_field16 __constr_expr_273;
    #line 789 
    struct rt2x00_field16 tmp_11;
    #line 789 
    struct rt2x00_field16 tmp_12;
    #line 789 
    struct rt2x00_field16 tmp_13;
    {
      #line 789 
      struct rt2x00_field16 __dummy_3;
      #line 789 
      struct rt2x00_field16 __dummy2_3;
      }
    #line 789 
    __constr_expr_272 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 789 
    tmp_11 = __constr_expr_272;
    #line 789 
    reg = (unsigned short)(~ ((int)tmp_11.bit_mask) & (int)reg);
    #line 789 
    __constr_expr_273 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 789 
    tmp_12 = __constr_expr_273;
    #line 789 
    __constr_expr_274 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 789 
    tmp_13 = __constr_expr_274;
    #line 789 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 790 
    struct rt2x00_field16 __constr_expr_277;
    #line 790 
    struct rt2x00_field16 __constr_expr_275;
    #line 790 
    struct rt2x00_field16 __constr_expr_276;
    #line 790 
    struct rt2x00_field16 tmp_14;
    #line 790 
    struct rt2x00_field16 tmp_15;
    #line 790 
    struct rt2x00_field16 tmp_16;
    {
      #line 790 
      struct rt2x00_field16 __dummy_4;
      #line 790 
      struct rt2x00_field16 __dummy2_4;
      }
    #line 790 
    __constr_expr_275 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 790 
    tmp_14 = __constr_expr_275;
    #line 790 
    reg = (unsigned short)(~ ((int)tmp_14.bit_mask) & (int)reg);
    #line 790 
    __constr_expr_276 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 790 
    tmp_15 = __constr_expr_276;
    #line 790 
    __constr_expr_277 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 790 
    tmp_16 = __constr_expr_277;
    #line 790 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 791 
    struct rt2x00_field16 __constr_expr_280;
    #line 791 
    struct rt2x00_field16 __constr_expr_278;
    #line 791 
    struct rt2x00_field16 __constr_expr_279;
    #line 791 
    struct rt2x00_field16 tmp_17;
    #line 791 
    struct rt2x00_field16 tmp_18;
    #line 791 
    struct rt2x00_field16 tmp_19;
    {
      #line 791 
      struct rt2x00_field16 __dummy_5;
      #line 791 
      struct rt2x00_field16 __dummy2_5;
      }
    #line 791 
    __constr_expr_278 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 791 
    tmp_17 = __constr_expr_278;
    #line 791 
    reg = (unsigned short)(~ ((int)tmp_17.bit_mask) & (int)reg);
    #line 791 
    __constr_expr_279 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 791 
    tmp_18 = __constr_expr_279;
    #line 791 
    __constr_expr_280 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 791 
    tmp_19 = __constr_expr_280;
    #line 791 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 792 
  rt2500usb_register_write(rt2x00dev,1026U,(unsigned short)((int)reg));
  #line 794 
  reg = rt2500usb_register_read(rt2x00dev,1098U);
  {
    #line 795 
    struct rt2x00_field16 __constr_expr_283;
    #line 795 
    struct rt2x00_field16 __constr_expr_281;
    #line 795 
    struct rt2x00_field16 __constr_expr_282;
    #line 795 
    struct rt2x00_field16 tmp_20;
    #line 795 
    struct rt2x00_field16 tmp_21;
    #line 795 
    struct rt2x00_field16 tmp_22;
    {
      #line 795 
      struct rt2x00_field16 __dummy_6;
      #line 795 
      struct rt2x00_field16 __dummy2_6;
      }
    #line 795 
    __constr_expr_281 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 795 
    tmp_20 = __constr_expr_281;
    #line 795 
    reg = (unsigned short)(~ ((int)tmp_20.bit_mask) & (int)reg);
    #line 795 
    __constr_expr_282 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 795 
    tmp_21 = __constr_expr_282;
    #line 795 
    __constr_expr_283 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 795 
    tmp_22 = __constr_expr_283;
    #line 795 
    reg = (unsigned short)(((13 << (int)tmp_21.bit_offset) & (int)tmp_22.bit_mask) | (int)reg);
  }
  {
    #line 796 
    struct rt2x00_field16 __constr_expr_286;
    #line 796 
    struct rt2x00_field16 __constr_expr_284;
    #line 796 
    struct rt2x00_field16 __constr_expr_285;
    #line 796 
    struct rt2x00_field16 tmp_23;
    #line 796 
    struct rt2x00_field16 tmp_24;
    #line 796 
    struct rt2x00_field16 tmp_25;
    {
      #line 796 
      struct rt2x00_field16 __dummy_7;
      #line 796 
      struct rt2x00_field16 __dummy2_7;
      }
    #line 796 
    __constr_expr_284 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 796 
    tmp_23 = __constr_expr_284;
    #line 796 
    reg = (unsigned short)(~ ((int)tmp_23.bit_mask) & (int)reg);
    #line 796 
    __constr_expr_285 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 796 
    tmp_24 = __constr_expr_285;
    #line 796 
    __constr_expr_286 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 796 
    tmp_25 = __constr_expr_286;
    #line 796 
    reg = (unsigned short)(((1 << (int)tmp_24.bit_offset) & (int)tmp_25.bit_mask) | (int)reg);
  }
  {
    #line 797 
    struct rt2x00_field16 __constr_expr_289;
    #line 797 
    struct rt2x00_field16 __constr_expr_287;
    #line 797 
    struct rt2x00_field16 __constr_expr_288;
    #line 797 
    struct rt2x00_field16 tmp_26;
    #line 797 
    struct rt2x00_field16 tmp_27;
    #line 797 
    struct rt2x00_field16 tmp_28;
    {
      #line 797 
      struct rt2x00_field16 __dummy_8;
      #line 797 
      struct rt2x00_field16 __dummy2_8;
      }
    #line 797 
    __constr_expr_287 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 797 
    tmp_26 = __constr_expr_287;
    #line 797 
    reg = (unsigned short)(~ ((int)tmp_26.bit_mask) & (int)reg);
    #line 797 
    __constr_expr_288 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 797 
    tmp_27 = __constr_expr_288;
    #line 797 
    __constr_expr_289 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 797 
    tmp_28 = __constr_expr_289;
    #line 797 
    reg = (unsigned short)(((12 << (int)tmp_27.bit_offset) & (int)tmp_28.bit_mask) | (int)reg);
  }
  {
    #line 798 
    struct rt2x00_field16 __constr_expr_292;
    #line 798 
    struct rt2x00_field16 __constr_expr_290;
    #line 798 
    struct rt2x00_field16 __constr_expr_291;
    #line 798 
    struct rt2x00_field16 tmp_29;
    #line 798 
    struct rt2x00_field16 tmp_30;
    #line 798 
    struct rt2x00_field16 tmp_31;
    {
      #line 798 
      struct rt2x00_field16 __dummy_9;
      #line 798 
      struct rt2x00_field16 __dummy2_9;
      }
    #line 798 
    __constr_expr_290 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 798 
    tmp_29 = __constr_expr_290;
    #line 798 
    reg = (unsigned short)(~ ((int)tmp_29.bit_mask) & (int)reg);
    #line 798 
    __constr_expr_291 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 798 
    tmp_30 = __constr_expr_291;
    #line 798 
    __constr_expr_292 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 798 
    tmp_31 = __constr_expr_292;
    #line 798 
    reg = (unsigned short)(((1 << (int)tmp_30.bit_offset) & (int)tmp_31.bit_mask) | (int)reg);
  }
  #line 799 
  rt2500usb_register_write(rt2x00dev,1098U,(unsigned short)((int)reg));
  #line 801 
  reg = rt2500usb_register_read(rt2x00dev,1100U);
  {
    #line 802 
    struct rt2x00_field16 __constr_expr_295;
    #line 802 
    struct rt2x00_field16 __constr_expr_293;
    #line 802 
    struct rt2x00_field16 __constr_expr_294;
    #line 802 
    struct rt2x00_field16 tmp_32;
    #line 802 
    struct rt2x00_field16 tmp_33;
    #line 802 
    struct rt2x00_field16 tmp_34;
    {
      #line 802 
      struct rt2x00_field16 __dummy_10;
      #line 802 
      struct rt2x00_field16 __dummy2_10;
      }
    #line 802 
    __constr_expr_293 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 802 
    tmp_32 = __constr_expr_293;
    #line 802 
    reg = (unsigned short)(~ ((int)tmp_32.bit_mask) & (int)reg);
    #line 802 
    __constr_expr_294 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 802 
    tmp_33 = __constr_expr_294;
    #line 802 
    __constr_expr_295 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 802 
    tmp_34 = __constr_expr_295;
    #line 802 
    reg = (unsigned short)(((10 << (int)tmp_33.bit_offset) & (int)tmp_34.bit_mask) | (int)reg);
  }
  {
    #line 803 
    struct rt2x00_field16 __constr_expr_298;
    #line 803 
    struct rt2x00_field16 __constr_expr_296;
    #line 803 
    struct rt2x00_field16 __constr_expr_297;
    #line 803 
    struct rt2x00_field16 tmp_35;
    #line 803 
    struct rt2x00_field16 tmp_36;
    #line 803 
    struct rt2x00_field16 tmp_37;
    {
      #line 803 
      struct rt2x00_field16 __dummy_11;
      #line 803 
      struct rt2x00_field16 __dummy2_11;
      }
    #line 803 
    __constr_expr_296 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 803 
    tmp_35 = __constr_expr_296;
    #line 803 
    reg = (unsigned short)(~ ((int)tmp_35.bit_mask) & (int)reg);
    #line 803 
    __constr_expr_297 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 803 
    tmp_36 = __constr_expr_297;
    #line 803 
    __constr_expr_298 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 803 
    tmp_37 = __constr_expr_298;
    #line 803 
    reg = (unsigned short)(((1 << (int)tmp_36.bit_offset) & (int)tmp_37.bit_mask) | (int)reg);
  }
  {
    #line 804 
    struct rt2x00_field16 __constr_expr_301;
    #line 804 
    struct rt2x00_field16 __constr_expr_299;
    #line 804 
    struct rt2x00_field16 __constr_expr_300;
    #line 804 
    struct rt2x00_field16 tmp_38;
    #line 804 
    struct rt2x00_field16 tmp_39;
    #line 804 
    struct rt2x00_field16 tmp_40;
    {
      #line 804 
      struct rt2x00_field16 __dummy_12;
      #line 804 
      struct rt2x00_field16 __dummy2_12;
      }
    #line 804 
    __constr_expr_299 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 804 
    tmp_38 = __constr_expr_299;
    #line 804 
    reg = (unsigned short)(~ ((int)tmp_38.bit_mask) & (int)reg);
    #line 804 
    __constr_expr_300 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 804 
    tmp_39 = __constr_expr_300;
    #line 804 
    __constr_expr_301 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 804 
    tmp_40 = __constr_expr_301;
    #line 804 
    reg = (unsigned short)(((11 << (int)tmp_39.bit_offset) & (int)tmp_40.bit_mask) | (int)reg);
  }
  {
    #line 805 
    struct rt2x00_field16 __constr_expr_304;
    #line 805 
    struct rt2x00_field16 __constr_expr_302;
    #line 805 
    struct rt2x00_field16 __constr_expr_303;
    #line 805 
    struct rt2x00_field16 tmp_41;
    #line 805 
    struct rt2x00_field16 tmp_42;
    #line 805 
    struct rt2x00_field16 tmp_43;
    {
      #line 805 
      struct rt2x00_field16 __dummy_13;
      #line 805 
      struct rt2x00_field16 __dummy2_13;
      }
    #line 805 
    __constr_expr_302 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 805 
    tmp_41 = __constr_expr_302;
    #line 805 
    reg = (unsigned short)(~ ((int)tmp_41.bit_mask) & (int)reg);
    #line 805 
    __constr_expr_303 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 805 
    tmp_42 = __constr_expr_303;
    #line 805 
    __constr_expr_304 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 805 
    tmp_43 = __constr_expr_304;
    #line 805 
    reg = (unsigned short)(((1 << (int)tmp_42.bit_offset) & (int)tmp_43.bit_mask) | (int)reg);
  }
  #line 806 
  rt2500usb_register_write(rt2x00dev,1100U,(unsigned short)((int)reg));
  #line 808 
  reg = rt2500usb_register_read(rt2x00dev,1102U);
  {
    #line 809 
    struct rt2x00_field16 __constr_expr_307;
    #line 809 
    struct rt2x00_field16 __constr_expr_305;
    #line 809 
    struct rt2x00_field16 __constr_expr_306;
    #line 809 
    struct rt2x00_field16 tmp_44;
    #line 809 
    struct rt2x00_field16 tmp_45;
    #line 809 
    struct rt2x00_field16 tmp_46;
    {
      #line 809 
      struct rt2x00_field16 __dummy_14;
      #line 809 
      struct rt2x00_field16 __dummy2_14;
      }
    #line 809 
    __constr_expr_305 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 809 
    tmp_44 = __constr_expr_305;
    #line 809 
    reg = (unsigned short)(~ ((int)tmp_44.bit_mask) & (int)reg);
    #line 809 
    __constr_expr_306 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 809 
    tmp_45 = __constr_expr_306;
    #line 809 
    __constr_expr_307 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 809 
    tmp_46 = __constr_expr_307;
    #line 809 
    reg = (unsigned short)(((7 << (int)tmp_45.bit_offset) & (int)tmp_46.bit_mask) | (int)reg);
  }
  {
    #line 810 
    struct rt2x00_field16 __constr_expr_310;
    #line 810 
    struct rt2x00_field16 __constr_expr_308;
    #line 810 
    struct rt2x00_field16 __constr_expr_309;
    #line 810 
    struct rt2x00_field16 tmp_47;
    #line 810 
    struct rt2x00_field16 tmp_48;
    #line 810 
    struct rt2x00_field16 tmp_49;
    {
      #line 810 
      struct rt2x00_field16 __dummy_15;
      #line 810 
      struct rt2x00_field16 __dummy2_15;
      }
    #line 810 
    __constr_expr_308 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 810 
    tmp_47 = __constr_expr_308;
    #line 810 
    reg = (unsigned short)(~ ((int)tmp_47.bit_mask) & (int)reg);
    #line 810 
    __constr_expr_309 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 810 
    tmp_48 = __constr_expr_309;
    #line 810 
    __constr_expr_310 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 810 
    tmp_49 = __constr_expr_310;
    #line 810 
    reg = (unsigned short)(((1 << (int)tmp_48.bit_offset) & (int)tmp_49.bit_mask) | (int)reg);
  }
  {
    #line 811 
    struct rt2x00_field16 __constr_expr_313;
    #line 811 
    struct rt2x00_field16 __constr_expr_311;
    #line 811 
    struct rt2x00_field16 __constr_expr_312;
    #line 811 
    struct rt2x00_field16 tmp_50;
    #line 811 
    struct rt2x00_field16 tmp_51;
    #line 811 
    struct rt2x00_field16 tmp_52;
    {
      #line 811 
      struct rt2x00_field16 __dummy_16;
      #line 811 
      struct rt2x00_field16 __dummy2_16;
      }
    #line 811 
    __constr_expr_311 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 811 
    tmp_50 = __constr_expr_311;
    #line 811 
    reg = (unsigned short)(~ ((int)tmp_50.bit_mask) & (int)reg);
    #line 811 
    __constr_expr_312 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 811 
    tmp_51 = __constr_expr_312;
    #line 811 
    __constr_expr_313 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 811 
    tmp_52 = __constr_expr_313;
    #line 811 
    reg = (unsigned short)(((6 << (int)tmp_51.bit_offset) & (int)tmp_52.bit_mask) | (int)reg);
  }
  {
    #line 812 
    struct rt2x00_field16 __constr_expr_316;
    #line 812 
    struct rt2x00_field16 __constr_expr_314;
    #line 812 
    struct rt2x00_field16 __constr_expr_315;
    #line 812 
    struct rt2x00_field16 tmp_53;
    #line 812 
    struct rt2x00_field16 tmp_54;
    #line 812 
    struct rt2x00_field16 tmp_55;
    {
      #line 812 
      struct rt2x00_field16 __dummy_17;
      #line 812 
      struct rt2x00_field16 __dummy2_17;
      }
    #line 812 
    __constr_expr_314 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 812 
    tmp_53 = __constr_expr_314;
    #line 812 
    reg = (unsigned short)(~ ((int)tmp_53.bit_mask) & (int)reg);
    #line 812 
    __constr_expr_315 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 812 
    tmp_54 = __constr_expr_315;
    #line 812 
    __constr_expr_316 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 812 
    tmp_55 = __constr_expr_316;
    #line 812 
    reg = (unsigned short)(((1 << (int)tmp_54.bit_offset) & (int)tmp_55.bit_mask) | (int)reg);
  }
  #line 813 
  rt2500usb_register_write(rt2x00dev,1102U,(unsigned short)((int)reg));
  #line 815 
  reg = rt2500usb_register_read(rt2x00dev,1104U);
  {
    #line 816 
    struct rt2x00_field16 __constr_expr_319;
    #line 816 
    struct rt2x00_field16 __constr_expr_317;
    #line 816 
    struct rt2x00_field16 __constr_expr_318;
    #line 816 
    struct rt2x00_field16 tmp_56;
    #line 816 
    struct rt2x00_field16 tmp_57;
    #line 816 
    struct rt2x00_field16 tmp_58;
    {
      #line 816 
      struct rt2x00_field16 __dummy_18;
      #line 816 
      struct rt2x00_field16 __dummy2_18;
      }
    #line 816 
    __constr_expr_317 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 816 
    tmp_56 = __constr_expr_317;
    #line 816 
    reg = (unsigned short)(~ ((int)tmp_56.bit_mask) & (int)reg);
    #line 816 
    __constr_expr_318 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 816 
    tmp_57 = __constr_expr_318;
    #line 816 
    __constr_expr_319 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)127U};
    #line 816 
    tmp_58 = __constr_expr_319;
    #line 816 
    reg = (unsigned short)(((5 << (int)tmp_57.bit_offset) & (int)tmp_58.bit_mask) | (int)reg);
  }
  {
    #line 817 
    struct rt2x00_field16 __constr_expr_322;
    #line 817 
    struct rt2x00_field16 __constr_expr_320;
    #line 817 
    struct rt2x00_field16 __constr_expr_321;
    #line 817 
    struct rt2x00_field16 tmp_59;
    #line 817 
    struct rt2x00_field16 tmp_60;
    #line 817 
    struct rt2x00_field16 tmp_61;
    {
      #line 817 
      struct rt2x00_field16 __dummy_19;
      #line 817 
      struct rt2x00_field16 __dummy2_19;
      }
    #line 817 
    __constr_expr_320 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 817 
    tmp_59 = __constr_expr_320;
    #line 817 
    reg = (unsigned short)(~ ((int)tmp_59.bit_mask) & (int)reg);
    #line 817 
    __constr_expr_321 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 817 
    tmp_60 = __constr_expr_321;
    #line 817 
    __constr_expr_322 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)128U};
    #line 817 
    tmp_61 = __constr_expr_322;
    #line 817 
    reg = (unsigned short)(((1 << (int)tmp_60.bit_offset) & (int)tmp_61.bit_mask) | (int)reg);
  }
  {
    #line 818 
    struct rt2x00_field16 __constr_expr_325;
    #line 818 
    struct rt2x00_field16 __constr_expr_323;
    #line 818 
    struct rt2x00_field16 __constr_expr_324;
    #line 818 
    struct rt2x00_field16 tmp_62;
    #line 818 
    struct rt2x00_field16 tmp_63;
    #line 818 
    struct rt2x00_field16 tmp_64;
    {
      #line 818 
      struct rt2x00_field16 __dummy_20;
      #line 818 
      struct rt2x00_field16 __dummy2_20;
      }
    #line 818 
    __constr_expr_323 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 818 
    tmp_62 = __constr_expr_323;
    #line 818 
    reg = (unsigned short)(~ ((int)tmp_62.bit_mask) & (int)reg);
    #line 818 
    __constr_expr_324 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 818 
    tmp_63 = __constr_expr_324;
    #line 818 
    __constr_expr_325 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)32512U};
    #line 818 
    tmp_64 = __constr_expr_325;
    #line 818 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 819 
    struct rt2x00_field16 __constr_expr_328;
    #line 819 
    struct rt2x00_field16 __constr_expr_326;
    #line 819 
    struct rt2x00_field16 __constr_expr_327;
    #line 819 
    struct rt2x00_field16 tmp_65;
    #line 819 
    struct rt2x00_field16 tmp_66;
    #line 819 
    struct rt2x00_field16 tmp_67;
    {
      #line 819 
      struct rt2x00_field16 __dummy_21;
      #line 819 
      struct rt2x00_field16 __dummy2_21;
      }
    #line 819 
    __constr_expr_326 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 819 
    tmp_65 = __constr_expr_326;
    #line 819 
    reg = (unsigned short)(~ ((int)tmp_65.bit_mask) & (int)reg);
    #line 819 
    __constr_expr_327 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 819 
    tmp_66 = __constr_expr_327;
    #line 819 
    __constr_expr_328 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 819 
    tmp_67 = __constr_expr_328;
    #line 819 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 820 
  rt2500usb_register_write(rt2x00dev,1104U,(unsigned short)((int)reg));
  #line 822 
  reg = rt2500usb_register_read(rt2x00dev,1126U);
  {
    #line 823 
    struct rt2x00_field16 __constr_expr_331;
    #line 823 
    struct rt2x00_field16 __constr_expr_329;
    #line 823 
    struct rt2x00_field16 __constr_expr_330;
    #line 823 
    struct rt2x00_field16 tmp_68;
    #line 823 
    struct rt2x00_field16 tmp_69;
    #line 823 
    struct rt2x00_field16 tmp_70;
    {
      #line 823 
      struct rt2x00_field16 __dummy_22;
      #line 823 
      struct rt2x00_field16 __dummy2_22;
      }
    #line 823 
    __constr_expr_329 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 823 
    tmp_68 = __constr_expr_329;
    #line 823 
    reg = (unsigned short)(~ ((int)tmp_68.bit_mask) & (int)reg);
    #line 823 
    __constr_expr_330 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 823 
    tmp_69 = __constr_expr_330;
    #line 823 
    __constr_expr_331 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 823 
    tmp_70 = __constr_expr_331;
    #line 823 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 824 
    struct rt2x00_field16 __constr_expr_334;
    #line 824 
    struct rt2x00_field16 __constr_expr_332;
    #line 824 
    struct rt2x00_field16 __constr_expr_333;
    #line 824 
    struct rt2x00_field16 tmp_71;
    #line 824 
    struct rt2x00_field16 tmp_72;
    #line 824 
    struct rt2x00_field16 tmp_73;
    {
      #line 824 
      struct rt2x00_field16 __dummy_23;
      #line 824 
      struct rt2x00_field16 __dummy2_23;
      }
    #line 824 
    __constr_expr_332 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
    #line 824 
    tmp_71 = __constr_expr_332;
    #line 824 
    reg = (unsigned short)(~ ((int)tmp_71.bit_mask) & (int)reg);
    #line 824 
    __constr_expr_333 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
    #line 824 
    tmp_72 = __constr_expr_333;
    #line 824 
    __constr_expr_334 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
    #line 824 
    tmp_73 = __constr_expr_334;
    #line 824 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 825 
    struct rt2x00_field16 __constr_expr_337;
    #line 825 
    struct rt2x00_field16 __constr_expr_335;
    #line 825 
    struct rt2x00_field16 __constr_expr_336;
    #line 825 
    struct rt2x00_field16 tmp_74;
    #line 825 
    struct rt2x00_field16 tmp_75;
    #line 825 
    struct rt2x00_field16 tmp_76;
    {
      #line 825 
      struct rt2x00_field16 __dummy_24;
      #line 825 
      struct rt2x00_field16 __dummy2_24;
      }
    #line 825 
    __constr_expr_335 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 825 
    tmp_74 = __constr_expr_335;
    #line 825 
    reg = (unsigned short)(~ ((int)tmp_74.bit_mask) & (int)reg);
    #line 825 
    __constr_expr_336 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 825 
    tmp_75 = __constr_expr_336;
    #line 825 
    __constr_expr_337 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 825 
    tmp_76 = __constr_expr_337;
    #line 825 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 826 
    struct rt2x00_field16 __constr_expr_340;
    #line 826 
    struct rt2x00_field16 __constr_expr_338;
    #line 826 
    struct rt2x00_field16 __constr_expr_339;
    #line 826 
    struct rt2x00_field16 tmp_77;
    #line 826 
    struct rt2x00_field16 tmp_78;
    #line 826 
    struct rt2x00_field16 tmp_79;
    {
      #line 826 
      struct rt2x00_field16 __dummy_25;
      #line 826 
      struct rt2x00_field16 __dummy2_25;
      }
    #line 826 
    __constr_expr_338 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 826 
    tmp_77 = __constr_expr_338;
    #line 826 
    reg = (unsigned short)(~ ((int)tmp_77.bit_mask) & (int)reg);
    #line 826 
    __constr_expr_339 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 826 
    tmp_78 = __constr_expr_339;
    #line 826 
    __constr_expr_340 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 826 
    tmp_79 = __constr_expr_340;
    #line 826 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 827 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
  #line 829 
  rt2500usb_register_write(rt2x00dev,1130U,(unsigned short)59279);
  #line 830 
  rt2500usb_register_write(rt2x00dev,1042U,(unsigned short)65309);
  #line 832 
  if ((*(((rt2x00dev->ops)->lib)->set_device_state))(rt2x00dev,
                                                        (enum dev_state)STATE_AWAKE) != 0) 
    #line 833 
    return -16;
  #line 835 
  reg = rt2500usb_register_read(rt2x00dev,1026U);
  {
    #line 836 
    struct rt2x00_field16 __constr_expr_343;
    #line 836 
    struct rt2x00_field16 __constr_expr_341;
    #line 836 
    struct rt2x00_field16 __constr_expr_342;
    #line 836 
    struct rt2x00_field16 tmp_81;
    #line 836 
    struct rt2x00_field16 tmp_82;
    #line 836 
    struct rt2x00_field16 tmp_83;
    {
      #line 836 
      struct rt2x00_field16 __dummy_26;
      #line 836 
      struct rt2x00_field16 __dummy2_26;
      }
    #line 836 
    __constr_expr_341 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 836 
    tmp_81 = __constr_expr_341;
    #line 836 
    reg = (unsigned short)(~ ((int)tmp_81.bit_mask) & (int)reg);
    #line 836 
    __constr_expr_342 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 836 
    tmp_82 = __constr_expr_342;
    #line 836 
    __constr_expr_343 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 836 
    tmp_83 = __constr_expr_343;
    #line 836 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 837 
    struct rt2x00_field16 __constr_expr_346;
    #line 837 
    struct rt2x00_field16 __constr_expr_344;
    #line 837 
    struct rt2x00_field16 __constr_expr_345;
    #line 837 
    struct rt2x00_field16 tmp_84;
    #line 837 
    struct rt2x00_field16 tmp_85;
    #line 837 
    struct rt2x00_field16 tmp_86;
    {
      #line 837 
      struct rt2x00_field16 __dummy_27;
      #line 837 
      struct rt2x00_field16 __dummy2_27;
      }
    #line 837 
    __constr_expr_344 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 837 
    tmp_84 = __constr_expr_344;
    #line 837 
    reg = (unsigned short)(~ ((int)tmp_84.bit_mask) & (int)reg);
    #line 837 
    __constr_expr_345 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 837 
    tmp_85 = __constr_expr_345;
    #line 837 
    __constr_expr_346 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
    #line 837 
    tmp_86 = __constr_expr_346;
    #line 837 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 838 
    struct rt2x00_field16 __constr_expr_349;
    #line 838 
    struct rt2x00_field16 __constr_expr_347;
    #line 838 
    struct rt2x00_field16 __constr_expr_348;
    #line 838 
    struct rt2x00_field16 tmp_87;
    #line 838 
    struct rt2x00_field16 tmp_88;
    #line 838 
    struct rt2x00_field16 tmp_89;
    {
      #line 838 
      struct rt2x00_field16 __dummy_28;
      #line 838 
      struct rt2x00_field16 __dummy2_28;
      }
    #line 838 
    __constr_expr_347 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 838 
    tmp_87 = __constr_expr_347;
    #line 838 
    reg = (unsigned short)(~ ((int)tmp_87.bit_mask) & (int)reg);
    #line 838 
    __constr_expr_348 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 838 
    tmp_88 = __constr_expr_348;
    #line 838 
    __constr_expr_349 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)4U};
    #line 838 
    tmp_89 = __constr_expr_349;
    #line 838 
    reg = (unsigned short)(((1 << (int)tmp_88.bit_offset) & (int)tmp_89.bit_mask) | (int)reg);
  }
  #line 839 
  rt2500usb_register_write(rt2x00dev,1026U,(unsigned short)((int)reg));
  #line 841 
  if ((unsigned int)rt2x00_rev(rt2x00dev) > 2U) {
    #line 842 
    reg = rt2500usb_register_read(rt2x00dev,1220U);
    {
      #line 843 
      struct rt2x00_field16 __constr_expr_352;
      #line 843 
      struct rt2x00_field16 __constr_expr_350;
      #line 843 
      struct rt2x00_field16 __constr_expr_351;
      #line 843 
      struct rt2x00_field16 tmp_90;
      #line 843 
      struct rt2x00_field16 tmp_91;
      #line 843 
      struct rt2x00_field16 tmp_92;
      {
        #line 843 
        struct rt2x00_field16 __dummy_29;
        #line 843 
        struct rt2x00_field16 __dummy2_29;
        }
      #line 843 
      __constr_expr_350 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 843 
      tmp_90 = __constr_expr_350;
      #line 843 
      reg = (unsigned short)(~ ((int)tmp_90.bit_mask) & (int)reg);
      #line 843 
      __constr_expr_351 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 843 
      tmp_91 = __constr_expr_351;
      #line 843 
      __constr_expr_352 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 843 
      tmp_92 = __constr_expr_352;
      #line 843 
      reg = (unsigned short)(0 | (int)reg);
    }
  }
  else {
    #line 845 
    reg = (unsigned short)0U;
    {
      #line 846 
      struct rt2x00_field16 __constr_expr_355;
      #line 846 
      struct rt2x00_field16 __constr_expr_353;
      #line 846 
      struct rt2x00_field16 __constr_expr_354;
      #line 846 
      struct rt2x00_field16 tmp_93;
      #line 846 
      struct rt2x00_field16 tmp_94;
      #line 846 
      struct rt2x00_field16 tmp_95;
      {
        #line 846 
        struct rt2x00_field16 __dummy_30;
        #line 846 
        struct rt2x00_field16 __dummy2_30;
        }
      #line 846 
      __constr_expr_353 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 846 
      tmp_93 = __constr_expr_353;
      #line 846 
      reg = (unsigned short)(~ ((int)tmp_93.bit_mask) & (int)reg);
      #line 846 
      __constr_expr_354 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 846 
      tmp_94 = __constr_expr_354;
      #line 846 
      __constr_expr_355 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 846 
      tmp_95 = __constr_expr_355;
      #line 846 
      reg = (unsigned short)(((1 << (int)tmp_94.bit_offset) & (int)tmp_95.bit_mask) | (int)reg);
    }
    {
      #line 847 
      struct rt2x00_field16 __constr_expr_358;
      #line 847 
      struct rt2x00_field16 __constr_expr_356;
      #line 847 
      struct rt2x00_field16 __constr_expr_357;
      #line 847 
      struct rt2x00_field16 tmp_96;
      #line 847 
      struct rt2x00_field16 tmp_97;
      #line 847 
      struct rt2x00_field16 tmp_98;
      {
        #line 847 
        struct rt2x00_field16 __dummy_31;
        #line 847 
        struct rt2x00_field16 __dummy2_31;
        }
      #line 847 
      __constr_expr_356 = (struct rt2x00_field16){.bit_offset = (unsigned short)12U, .bit_mask = (unsigned short)12288U};
      #line 847 
      tmp_96 = __constr_expr_356;
      #line 847 
      reg = (unsigned short)(~ ((int)tmp_96.bit_mask) & (int)reg);
      #line 847 
      __constr_expr_357 = (struct rt2x00_field16){.bit_offset = (unsigned short)12U, .bit_mask = (unsigned short)12288U};
      #line 847 
      tmp_97 = __constr_expr_357;
      #line 847 
      __constr_expr_358 = (struct rt2x00_field16){.bit_offset = (unsigned short)12U, .bit_mask = (unsigned short)12288U};
      #line 847 
      tmp_98 = __constr_expr_358;
      #line 847 
      reg = (unsigned short)(((3 << (int)tmp_97.bit_offset) & (int)tmp_98.bit_mask) | (int)reg);
    }
  }
  #line 849 
  rt2500usb_register_write(rt2x00dev,1220U,(unsigned short)((int)reg));
  #line 851 
  rt2500usb_register_write(rt2x00dev,1046U,(unsigned short)2);
  #line 852 
  rt2500usb_register_write(rt2x00dev,1068U,(unsigned short)83);
  #line 853 
  rt2500usb_register_write(rt2x00dev,1054U,(unsigned short)494);
  #line 854 
  rt2500usb_register_write(rt2x00dev,1056U,(unsigned short)0);
  #line 856 
  reg = rt2500usb_register_read(rt2x00dev,1040U);
  {
    #line 857 
    struct rt2x00_field16 __constr_expr_361;
    #line 857 
    struct rt2x00_field16 __constr_expr_359;
    #line 857 
    struct rt2x00_field16 __constr_expr_360;
    #line 857 
    struct rt2x00_field16 tmp_100;
    #line 857 
    struct rt2x00_field16 tmp_101;
    #line 857 
    struct rt2x00_field16 tmp_102;
    {
      #line 857 
      struct rt2x00_field16 __dummy_32;
      #line 857 
      struct rt2x00_field16 __dummy2_32;
      }
    #line 857 
    __constr_expr_359 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)4095U};
    #line 857 
    tmp_100 = __constr_expr_359;
    #line 857 
    reg = (unsigned short)(~ ((int)tmp_100.bit_mask) & (int)reg);
    #line 857 
    __constr_expr_360 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)4095U};
    #line 857 
    tmp_101 = __constr_expr_360;
    #line 857 
    __constr_expr_361 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)4095U};
    #line 857 
    tmp_102 = __constr_expr_361;
    #line 857 
    reg = (unsigned short)((((int)(rt2x00dev->rx)->data_size << (int)tmp_101.bit_offset) & (int)tmp_102.bit_mask) | (int)reg);
  }
  #line 859 
  rt2500usb_register_write(rt2x00dev,1040U,(unsigned short)((int)reg));
  #line 861 
  reg = rt2500usb_register_read(rt2x00dev,1088U);
  {
    #line 862 
    struct rt2x00_field16 __constr_expr_364;
    #line 862 
    struct rt2x00_field16 __constr_expr_362;
    #line 862 
    struct rt2x00_field16 __constr_expr_363;
    #line 862 
    struct rt2x00_field16 tmp_103;
    #line 862 
    struct rt2x00_field16 tmp_104;
    #line 862 
    struct rt2x00_field16 tmp_105;
    {
      #line 862 
      struct rt2x00_field16 __dummy_33;
      #line 862 
      struct rt2x00_field16 __dummy2_33;
      }
    #line 862 
    __constr_expr_362 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 862 
    tmp_103 = __constr_expr_362;
    #line 862 
    reg = (unsigned short)(~ ((int)tmp_103.bit_mask) & (int)reg);
    #line 862 
    __constr_expr_363 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 862 
    tmp_104 = __constr_expr_363;
    #line 862 
    __constr_expr_364 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)7U};
    #line 862 
    tmp_105 = __constr_expr_364;
    #line 862 
    reg = (unsigned short)(0 | (int)reg);
  }
  {
    #line 863 
    struct rt2x00_field16 __constr_expr_367;
    #line 863 
    struct rt2x00_field16 __constr_expr_365;
    #line 863 
    struct rt2x00_field16 __constr_expr_366;
    #line 863 
    struct rt2x00_field16 tmp_106;
    #line 863 
    struct rt2x00_field16 tmp_107;
    #line 863 
    struct rt2x00_field16 tmp_108;
    {
      #line 863 
      struct rt2x00_field16 __dummy_34;
      #line 863 
      struct rt2x00_field16 __dummy2_34;
      }
    #line 863 
    __constr_expr_365 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)504U};
    #line 863 
    tmp_106 = __constr_expr_365;
    #line 863 
    reg = (unsigned short)(~ ((int)tmp_106.bit_mask) & (int)reg);
    #line 863 
    __constr_expr_366 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)504U};
    #line 863 
    tmp_107 = __constr_expr_366;
    #line 863 
    __constr_expr_367 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)504U};
    #line 863 
    tmp_108 = __constr_expr_367;
    #line 863 
    reg = (unsigned short)(((24 << (int)tmp_107.bit_offset) & (int)tmp_108.bit_mask) | (int)reg);
  }
  {
    #line 864 
    struct rt2x00_field16 __constr_expr_370;
    #line 864 
    struct rt2x00_field16 __constr_expr_368;
    #line 864 
    struct rt2x00_field16 __constr_expr_369;
    #line 864 
    struct rt2x00_field16 tmp_109;
    #line 864 
    struct rt2x00_field16 tmp_110;
    #line 864 
    struct rt2x00_field16 tmp_111;
    {
      #line 864 
      struct rt2x00_field16 __dummy_35;
      #line 864 
      struct rt2x00_field16 __dummy2_35;
      }
    #line 864 
    __constr_expr_368 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 864 
    tmp_109 = __constr_expr_368;
    #line 864 
    reg = (unsigned short)(~ ((int)tmp_109.bit_mask) & (int)reg);
    #line 864 
    __constr_expr_369 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 864 
    tmp_110 = __constr_expr_369;
    #line 864 
    __constr_expr_370 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)7680U};
    #line 864 
    tmp_111 = __constr_expr_370;
    #line 864 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 865 
  rt2500usb_register_write(rt2x00dev,1088U,(unsigned short)((int)reg));
  #line 867 
  reg = rt2500usb_register_read(rt2x00dev,1060U);
  {
    #line 868 
    struct rt2x00_field16 __constr_expr_373;
    #line 868 
    struct rt2x00_field16 __constr_expr_371;
    #line 868 
    struct rt2x00_field16 __constr_expr_372;
    #line 868 
    struct rt2x00_field16 tmp_112;
    #line 868 
    struct rt2x00_field16 tmp_113;
    #line 868 
    struct rt2x00_field16 tmp_114;
    {
      #line 868 
      struct rt2x00_field16 __dummy_36;
      #line 868 
      struct rt2x00_field16 __dummy2_36;
      }
    #line 868 
    __constr_expr_371 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
    #line 868 
    tmp_112 = __constr_expr_371;
    #line 868 
    reg = (unsigned short)(~ ((int)tmp_112.bit_mask) & (int)reg);
    #line 868 
    __constr_expr_372 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
    #line 868 
    tmp_113 = __constr_expr_372;
    #line 868 
    __constr_expr_373 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
    #line 868 
    tmp_114 = __constr_expr_373;
    #line 868 
    reg = (unsigned short)(((90 << (int)tmp_113.bit_offset) & (int)tmp_114.bit_mask) | (int)reg);
  }
  #line 869 
  rt2500usb_register_write(rt2x00dev,1060U,(unsigned short)((int)reg));
  #line 871 
  reg = rt2500usb_register_read(rt2x00dev,1224U);
  {
    #line 872 
    struct rt2x00_field16 __constr_expr_376;
    #line 872 
    struct rt2x00_field16 __constr_expr_374;
    #line 872 
    struct rt2x00_field16 __constr_expr_375;
    #line 872 
    struct rt2x00_field16 tmp_115;
    #line 872 
    struct rt2x00_field16 tmp_116;
    #line 872 
    struct rt2x00_field16 tmp_117;
    {
      #line 872 
      struct rt2x00_field16 __dummy_37;
      #line 872 
      struct rt2x00_field16 __dummy2_37;
      }
    #line 872 
    __constr_expr_374 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 872 
    tmp_115 = __constr_expr_374;
    #line 872 
    reg = (unsigned short)(~ ((int)tmp_115.bit_mask) & (int)reg);
    #line 872 
    __constr_expr_375 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 872 
    tmp_116 = __constr_expr_375;
    #line 872 
    __constr_expr_376 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 872 
    tmp_117 = __constr_expr_376;
    #line 872 
    reg = (unsigned short)(((1 << (int)tmp_116.bit_offset) & (int)tmp_117.bit_mask) | (int)reg);
  }
  #line 873 
  rt2500usb_register_write(rt2x00dev,1224U,(unsigned short)((int)reg));
  #line 875 
  reg = rt2500usb_register_read(rt2x00dev,1090U);
  {
    #line 876 
    struct rt2x00_field16 __constr_expr_379;
    #line 876 
    struct rt2x00_field16 __constr_expr_377;
    #line 876 
    struct rt2x00_field16 __constr_expr_378;
    #line 876 
    struct rt2x00_field16 tmp_118;
    #line 876 
    struct rt2x00_field16 tmp_119;
    #line 876 
    struct rt2x00_field16 tmp_120;
    {
      #line 876 
      struct rt2x00_field16 __dummy_38;
      #line 876 
      struct rt2x00_field16 __dummy2_38;
      }
    #line 876 
    __constr_expr_377 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 876 
    tmp_118 = __constr_expr_377;
    #line 876 
    reg = (unsigned short)(~ ((int)tmp_118.bit_mask) & (int)reg);
    #line 876 
    __constr_expr_378 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 876 
    tmp_119 = __constr_expr_378;
    #line 876 
    __constr_expr_379 = (struct rt2x00_field16){.bit_offset = (unsigned short)15U, .bit_mask = (unsigned short)32768U};
    #line 876 
    tmp_120 = __constr_expr_379;
    #line 876 
    reg = (unsigned short)(((1 << (int)tmp_119.bit_offset) & (int)tmp_120.bit_mask) | (int)reg);
  }
  #line 877 
  rt2500usb_register_write(rt2x00dev,1090U,(unsigned short)((int)reg));
  #line 879 
  return 0;
}

#line 882  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_wait_bbp_ready(struct rt2x00_dev *rt2x00dev)
{
  #line 884 
  unsigned int i;
  #line 885 
  u8 value;
  #line 887 
  i = 0U;
  #line 887 
  while (i <= 19U) {
    #line 888 
    value = rt2500usb_bbp_read(rt2x00dev,0U);
    #line 889 
    if ((unsigned int)value + 255U <= 253U) 
                                            #line 890 
                                            return 0;
    #line 891 
    __const_udelay(429500UL);
    #line 887 
    i ++;
  }
  {
    #line 894 
    struct ratelimit_state _rs = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
    #line 894 
    if (___ratelimit(& _rs,(char *)"rt2500usb_wait_bbp_ready") != 0) 
      #line 894 
      _dev_err(& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: Error - ",(char *)"rt2500usb_wait_bbp_ready");
  }
  #line 895 
  return -13;
}

#line 898  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_init_bbp(struct rt2x00_dev *rt2x00dev)
{
  #line 900 
  unsigned int i;
  #line 901 
  u16 eeprom;
  #line 902 
  u8 value;
  #line 903 
  u8 reg_id;
  #line 905 
  if ((long)(rt2500usb_wait_bbp_ready(rt2x00dev) != 0) != 0L) 
                                                              #line 906 
                                                              return -13;
  #line 908 
  rt2500usb_bbp_write(rt2x00dev,3U,(unsigned char)2);
  #line 909 
  rt2500usb_bbp_write(rt2x00dev,4U,(unsigned char)25);
  #line 910 
  rt2500usb_bbp_write(rt2x00dev,14U,(unsigned char)28);
  #line 911 
  rt2500usb_bbp_write(rt2x00dev,15U,(unsigned char)48);
  #line 912 
  rt2500usb_bbp_write(rt2x00dev,16U,(unsigned char)172);
  #line 913 
  rt2500usb_bbp_write(rt2x00dev,18U,(unsigned char)24);
  #line 914 
  rt2500usb_bbp_write(rt2x00dev,19U,(unsigned char)255);
  #line 915 
  rt2500usb_bbp_write(rt2x00dev,20U,(unsigned char)30);
  #line 916 
  rt2500usb_bbp_write(rt2x00dev,21U,(unsigned char)8);
  #line 917 
  rt2500usb_bbp_write(rt2x00dev,22U,(unsigned char)8);
  #line 918 
  rt2500usb_bbp_write(rt2x00dev,23U,(unsigned char)8);
  #line 919 
  rt2500usb_bbp_write(rt2x00dev,24U,(unsigned char)128);
  #line 920 
  rt2500usb_bbp_write(rt2x00dev,25U,(unsigned char)80);
  #line 921 
  rt2500usb_bbp_write(rt2x00dev,26U,(unsigned char)8);
  #line 922 
  rt2500usb_bbp_write(rt2x00dev,27U,(unsigned char)35);
  #line 923 
  rt2500usb_bbp_write(rt2x00dev,30U,(unsigned char)16);
  #line 924 
  rt2500usb_bbp_write(rt2x00dev,31U,(unsigned char)43);
  #line 925 
  rt2500usb_bbp_write(rt2x00dev,32U,(unsigned char)185);
  #line 926 
  rt2500usb_bbp_write(rt2x00dev,34U,(unsigned char)18);
  #line 927 
  rt2500usb_bbp_write(rt2x00dev,35U,(unsigned char)80);
  #line 928 
  rt2500usb_bbp_write(rt2x00dev,39U,(unsigned char)196);
  #line 929 
  rt2500usb_bbp_write(rt2x00dev,40U,(unsigned char)2);
  #line 930 
  rt2500usb_bbp_write(rt2x00dev,41U,(unsigned char)96);
  #line 931 
  rt2500usb_bbp_write(rt2x00dev,53U,(unsigned char)16);
  #line 932 
  rt2500usb_bbp_write(rt2x00dev,54U,(unsigned char)24);
  #line 933 
  rt2500usb_bbp_write(rt2x00dev,56U,(unsigned char)8);
  #line 934 
  rt2500usb_bbp_write(rt2x00dev,57U,(unsigned char)16);
  #line 935 
  rt2500usb_bbp_write(rt2x00dev,58U,(unsigned char)8);
  #line 936 
  rt2500usb_bbp_write(rt2x00dev,61U,(unsigned char)96);
  #line 937 
  rt2500usb_bbp_write(rt2x00dev,62U,(unsigned char)16);
  #line 938 
  rt2500usb_bbp_write(rt2x00dev,75U,(unsigned char)255);
  #line 940 
  i = 0U;
  #line 940 
  while (i <= 15U) {
    #line 941 
    eeprom = rt2x00_eeprom_read(rt2x00dev,i + 14U);
    #line 943 
    if ((unsigned int)eeprom + 65535U <= 65533U) {
      #line 945 
      struct rt2x00_field16 __constr_expr_382;
      #line 945 
      struct rt2x00_field16 tmp_3;
      #line 944 
      struct rt2x00_field16 __constr_expr_380;
      #line 945 
      struct rt2x00_field16 __constr_expr_383;
      #line 944 
      struct rt2x00_field16 tmp_0;
      #line 945 
      struct rt2x00_field16 tmp_4;
      #line 944 
      struct rt2x00_field16 __constr_expr_381;
      #line 944 
      struct rt2x00_field16 tmp_1;
      {
        #line 944 
        struct rt2x00_field16 __dummy;
        #line 944 
        struct rt2x00_field16 __dummy2;
        }
      #line 944 
      __constr_expr_380 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 944 
      tmp_0 = __constr_expr_380;
      #line 944 
      __constr_expr_381 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 944 
      tmp_1 = __constr_expr_381;
      #line 944 
      ;
      #line 944 
      reg_id = (unsigned char)(((int)tmp_0.bit_mask & (int)eeprom) >> (int)tmp_1.bit_offset);
      {
        #line 945 
        struct rt2x00_field16 __dummy_0;
        #line 945 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 945 
      __constr_expr_382 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 945 
      tmp_3 = __constr_expr_382;
      #line 945 
      __constr_expr_383 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 945 
      tmp_4 = __constr_expr_383;
      #line 945 
      ;
      #line 945 
      value = (unsigned char)(((int)tmp_3.bit_mask & (int)eeprom) >> (int)tmp_4.bit_offset);
      #line 946 
      rt2500usb_bbp_write(rt2x00dev,(unsigned int)reg_id,(unsigned char)((int)value));
    }
    #line 940 
    i ++;
  }
  #line 950 
  return 0;
}

#line 956  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_enable_radio(struct rt2x00_dev *rt2x00dev)
{
  #line 961 
  if ((long)(rt2500usb_init_registers(rt2x00dev) != 0) != 0L) 
                                                              #line 963 
                                                              return -5;
  else {
    #line 961 
    if ((long)(rt2500usb_init_bbp(rt2x00dev) != 0) != 0L) 
                                                          #line 963 
                                                          return -5;
  }
  #line 965 
  return 0;
}

#line 968  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_disable_radio(struct rt2x00_dev *rt2x00dev)
{
  #line 970 
  rt2500usb_register_write(rt2x00dev,1050U,(unsigned short)8481);
  #line 971 
  rt2500usb_register_write(rt2x00dev,1052U,(unsigned short)8481);
  #line 976 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)0);
  #line 978 
  rt2x00usb_disable_radio(rt2x00dev);
  #line 979 
  return;
}

#line 981  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_set_state(struct rt2x00_dev *rt2x00dev, enum dev_state state)
{
  #line 984 
  u16 reg;
  #line 985 
  u16 reg2;
  #line 986 
  unsigned int i;
  #line 987 
  char put_to_sleep;
  #line 988 
  char bbp_state;
  #line 989 
  char rf_state;
  #line 991 
  put_to_sleep = (char)(state != (unsigned int)STATE_AWAKE);
  #line 993 
  reg = (unsigned short)0U;
  {
    #line 994 
    struct rt2x00_field16 __constr_expr_384;
    #line 994 
    struct rt2x00_field16 __constr_expr_385;
    #line 994 
    struct rt2x00_field16 __constr_expr_386;
    #line 994 
    struct rt2x00_field16 tmp;
    #line 994 
    struct rt2x00_field16 tmp_0;
    #line 994 
    struct rt2x00_field16 tmp_1;
    {
      #line 994 
      struct rt2x00_field16 __dummy;
      #line 994 
      struct rt2x00_field16 __dummy2;
      }
    #line 994 
    __constr_expr_384 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
    #line 994 
    tmp = __constr_expr_384;
    #line 994 
    reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
    #line 994 
    __constr_expr_385 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
    #line 994 
    tmp_0 = __constr_expr_385;
    #line 994 
    __constr_expr_386 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)6U};
    #line 994 
    tmp_1 = __constr_expr_386;
    #line 994 
    reg = (unsigned short)((int)((unsigned short)(((unsigned int)state << (int)tmp_0.bit_offset) & (unsigned int)tmp_1.bit_mask)) | (int)reg);
  }
  {
    #line 995 
    struct rt2x00_field16 __constr_expr_387;
    #line 995 
    struct rt2x00_field16 __constr_expr_388;
    #line 995 
    struct rt2x00_field16 __constr_expr_389;
    #line 995 
    struct rt2x00_field16 tmp_2;
    #line 995 
    struct rt2x00_field16 tmp_3;
    #line 995 
    struct rt2x00_field16 tmp_4;
    {
      #line 995 
      struct rt2x00_field16 __dummy_0;
      #line 995 
      struct rt2x00_field16 __dummy2_0;
      }
    #line 995 
    __constr_expr_387 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)24U};
    #line 995 
    tmp_2 = __constr_expr_387;
    #line 995 
    reg = (unsigned short)(~ ((int)tmp_2.bit_mask) & (int)reg);
    #line 995 
    __constr_expr_388 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)24U};
    #line 995 
    tmp_3 = __constr_expr_388;
    #line 995 
    __constr_expr_389 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)24U};
    #line 995 
    tmp_4 = __constr_expr_389;
    #line 995 
    reg = (unsigned short)((int)((unsigned short)(((unsigned int)state << (int)tmp_3.bit_offset) & (unsigned int)tmp_4.bit_mask)) | (int)reg);
  }
  {
    #line 996 
    struct rt2x00_field16 __constr_expr_390;
    #line 996 
    struct rt2x00_field16 __constr_expr_391;
    #line 996 
    struct rt2x00_field16 __constr_expr_392;
    #line 996 
    struct rt2x00_field16 tmp_5;
    #line 996 
    struct rt2x00_field16 tmp_6;
    #line 996 
    struct rt2x00_field16 tmp_7;
    {
      #line 996 
      struct rt2x00_field16 __dummy_1;
      #line 996 
      struct rt2x00_field16 __dummy2_1;
      }
    #line 996 
    __constr_expr_390 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
    #line 996 
    tmp_5 = __constr_expr_390;
    #line 996 
    reg = (unsigned short)(~ ((int)tmp_5.bit_mask) & (int)reg);
    #line 996 
    __constr_expr_391 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
    #line 996 
    tmp_6 = __constr_expr_391;
    #line 996 
    __constr_expr_392 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
    #line 996 
    tmp_7 = __constr_expr_392;
    #line 996 
    reg = (unsigned short)((((int)put_to_sleep << (int)tmp_6.bit_offset) & (int)tmp_7.bit_mask) | (int)reg);
  }
  #line 997 
  rt2500usb_register_write(rt2x00dev,1058U,(unsigned short)((int)reg));
  {
    #line 998 
    struct rt2x00_field16 __constr_expr_393;
    #line 998 
    struct rt2x00_field16 __constr_expr_394;
    #line 998 
    struct rt2x00_field16 __constr_expr_395;
    #line 998 
    struct rt2x00_field16 tmp_8;
    #line 998 
    struct rt2x00_field16 tmp_9;
    #line 998 
    struct rt2x00_field16 tmp_10;
    {
      #line 998 
      struct rt2x00_field16 __dummy_2;
      #line 998 
      struct rt2x00_field16 __dummy2_2;
      }
    #line 998 
    __constr_expr_393 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 998 
    tmp_8 = __constr_expr_393;
    #line 998 
    reg = (unsigned short)(~ ((int)tmp_8.bit_mask) & (int)reg);
    #line 998 
    __constr_expr_394 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 998 
    tmp_9 = __constr_expr_394;
    #line 998 
    __constr_expr_395 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 998 
    tmp_10 = __constr_expr_395;
    #line 998 
    reg = (unsigned short)(((1 << (int)tmp_9.bit_offset) & (int)tmp_10.bit_mask) | (int)reg);
  }
  #line 999 
  rt2500usb_register_write(rt2x00dev,1058U,(unsigned short)((int)reg));
  #line 1006 
  i = 0U;
  #line 1006 
  while (i <= 19U) {
    {
      #line 1009 
      struct rt2x00_field16 __constr_expr_398;
      #line 1009 
      struct rt2x00_field16 tmp_14;
      #line 1008 
      struct rt2x00_field16 __constr_expr_396;
      #line 1009 
      struct rt2x00_field16 __constr_expr_399;
      #line 1008 
      struct rt2x00_field16 tmp_11;
      #line 1009 
      struct rt2x00_field16 tmp_15;
      #line 1008 
      struct rt2x00_field16 __constr_expr_397;
      #line 1008 
      struct rt2x00_field16 tmp_12;
      #line 1007 
      reg2 = rt2500usb_register_read(rt2x00dev,1058U);
      {
        #line 1008 
        struct rt2x00_field16 __dummy_3;
        #line 1008 
        struct rt2x00_field16 __dummy2_3;
        }
      #line 1008 
      __constr_expr_396 = (struct rt2x00_field16){.bit_offset = (unsigned short)5U, .bit_mask = (unsigned short)96U};
      #line 1008 
      tmp_11 = __constr_expr_396;
      #line 1008 
      __constr_expr_397 = (struct rt2x00_field16){.bit_offset = (unsigned short)5U, .bit_mask = (unsigned short)96U};
      #line 1008 
      tmp_12 = __constr_expr_397;
      #line 1008 
      ;
      #line 1008 
      bbp_state = (char)(((int)tmp_11.bit_mask & (int)reg2) >> (int)tmp_12.bit_offset);
      {
        #line 1009 
        struct rt2x00_field16 __dummy_4;
        #line 1009 
        struct rt2x00_field16 __dummy2_4;
        }
      #line 1009 
      __constr_expr_398 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)384U};
      #line 1009 
      tmp_14 = __constr_expr_398;
      #line 1009 
      __constr_expr_399 = (struct rt2x00_field16){.bit_offset = (unsigned short)7U, .bit_mask = (unsigned short)384U};
      #line 1009 
      tmp_15 = __constr_expr_399;
      #line 1009 
      ;
      #line 1009 
      rf_state = (char)(((int)tmp_14.bit_mask & (int)reg2) >> (int)tmp_15.bit_offset);
      #line 1010 
      if ((unsigned int)bbp_state == (unsigned int)state && (unsigned int)rf_state == (unsigned int)state) 
        #line 1011 
        return 0;
      #line 1012 
      rt2500usb_register_write(rt2x00dev,1058U,(unsigned short)((int)reg));
      #line 1013 
      msleep(30U);
    }
    #line 1006 
    i ++;
  }
  #line 1016 
  return -16;
}

#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_set_device_state(struct rt2x00_dev *rt2x00dev, enum dev_state state)
{
  #line 1022 
  int retval = 0;
  #line 1024 
  switch ((unsigned int)state) {
    #line 1025 
    case (unsigned int)4: 
                          #line 1025 
    ;
    #line 1026 
    retval = rt2500usb_enable_radio(rt2x00dev);
    #line 1027 
    break;
    #line 1028 
    case (unsigned int)5: 
                          #line 1028 
    ;
    #line 1029 
    rt2500usb_disable_radio(rt2x00dev);
    #line 1030 
    break;
    #line 1031 
    case (unsigned int)6: 
                          #line 1031 
    ;
    #line 1032 
    case (unsigned int)7: 
                          #line 1032 
    ;
    #line 1034 
    break;
    #line 1035 
    case (unsigned int)0: 
                          #line 1035 
    ;
    #line 1036 
    case (unsigned int)1: 
                          #line 1036 
    ;
    #line 1037 
    case (unsigned int)2: 
                          #line 1037 
    ;
    #line 1038 
    case (unsigned int)3: 
                          #line 1038 
    ;
    #line 1039 
    retval = rt2500usb_set_state(rt2x00dev,state);
    #line 1040 
    break;
    #line 1041 
    default: 
             #line 1041 
    ;
    #line 1042 
    retval = -524;
    #line 1043 
    break;
  }
  #line 1046 
  if ((long)(retval != 0) != 0L) {
    #line 1047 
    struct ratelimit_state _rs = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
    #line 1047 
    if (___ratelimit(& _rs,(char *)"rt2500usb_set_device_state") != 0) 
      #line 1047 
      _dev_err(& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: Error - ",(char *)"rt2500usb_set_device_state",(unsigned int)state,retval);
  }
  #line 1050 
  return retval;
}

#line 1056  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_write_tx_desc(struct queue_entry *entry, struct txentry_desc *txdesc)
{
  #line 1061 
  u32 word;
  #line 1059 
  struct skb_frame_desc *skbdesc = get_skb_frame_desc(entry->skb);
  #line 1060 
  __le32 *txd = (__le32 *)(entry->skb)->data;
  #line 1066 
  word = rt2x00_desc_read(txd,(unsigned char)0);
  {
    #line 1067 
    struct rt2x00_field32 __constr_expr_402;
    #line 1067 
    struct rt2x00_field32 __constr_expr_400;
    #line 1067 
    struct rt2x00_field32 __constr_expr_401;
    #line 1067 
    struct rt2x00_field32 tmp_0;
    #line 1067 
    struct rt2x00_field32 tmp_1;
    #line 1067 
    struct rt2x00_field32 tmp_2;
    {
      #line 1067 
      struct rt2x00_field32 __dummy;
      #line 1067 
      struct rt2x00_field32 __dummy2;
      }
    #line 1067 
    __constr_expr_400 = (struct rt2x00_field32){.bit_offset = 4U, .bit_mask = 240U};
    #line 1067 
    tmp_0 = __constr_expr_400;
    #line 1067 
    word = ~ tmp_0.bit_mask & word;
    #line 1067 
    __constr_expr_401 = (struct rt2x00_field32){.bit_offset = 4U, .bit_mask = 240U};
    #line 1067 
    tmp_1 = __constr_expr_401;
    #line 1067 
    __constr_expr_402 = (struct rt2x00_field32){.bit_offset = 4U, .bit_mask = 240U};
    #line 1067 
    tmp_2 = __constr_expr_402;
    #line 1067 
    word = ((unsigned int)((int)txdesc->retry_limit << tmp_1.bit_offset) & tmp_2.bit_mask) | word;
  }
  {
    #line 1068 
    struct rt2x00_field32 __constr_expr_405;
    #line 1068 
    struct rt2x00_field32 __constr_expr_403;
    #line 1068 
    struct rt2x00_field32 __constr_expr_404;
    #line 1068 
    struct rt2x00_field32 tmp_3;
    #line 1068 
    bool tmp_4;
    #line 1068 
    struct rt2x00_field32 tmp_5;
    #line 1068 
    struct rt2x00_field32 tmp_6;
    {
      #line 1068 
      struct rt2x00_field32 __dummy_0;
      #line 1068 
      struct rt2x00_field32 __dummy2_0;
      }
    #line 1068 
    __constr_expr_403 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 256U};
    #line 1068 
    tmp_3 = __constr_expr_403;
    #line 1068 
    word = ~ tmp_3.bit_mask & word;
    #line 1068 
    tmp_4 = test_bit(4L,& txdesc->flags);
    #line 1068 
    __constr_expr_404 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 256U};
    #line 1068 
    tmp_5 = __constr_expr_404;
    #line 1068 
    __constr_expr_405 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 256U};
    #line 1068 
    tmp_6 = __constr_expr_405;
    #line 1068 
    word = ((unsigned int)((int)tmp_4 << tmp_5.bit_offset) & tmp_6.bit_mask) | word;
  }
  {
    #line 1070 
    struct rt2x00_field32 __constr_expr_408;
    #line 1070 
    struct rt2x00_field32 __constr_expr_406;
    #line 1070 
    struct rt2x00_field32 __constr_expr_407;
    #line 1070 
    struct rt2x00_field32 tmp_7;
    #line 1070 
    bool tmp_8;
    #line 1070 
    struct rt2x00_field32 tmp_9;
    #line 1070 
    struct rt2x00_field32 tmp_10;
    {
      #line 1070 
      struct rt2x00_field32 __dummy_1;
      #line 1070 
      struct rt2x00_field32 __dummy2_1;
      }
    #line 1070 
    __constr_expr_406 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 512U};
    #line 1070 
    tmp_7 = __constr_expr_406;
    #line 1070 
    word = ~ tmp_7.bit_mask & word;
    #line 1070 
    tmp_8 = test_bit(7L,& txdesc->flags);
    #line 1070 
    __constr_expr_407 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 512U};
    #line 1070 
    tmp_9 = __constr_expr_407;
    #line 1070 
    __constr_expr_408 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 512U};
    #line 1070 
    tmp_10 = __constr_expr_408;
    #line 1070 
    word = ((unsigned int)((int)tmp_8 << tmp_9.bit_offset) & tmp_10.bit_mask) | word;
  }
  {
    #line 1072 
    struct rt2x00_field32 __constr_expr_411;
    #line 1072 
    struct rt2x00_field32 __constr_expr_409;
    #line 1072 
    struct rt2x00_field32 __constr_expr_410;
    #line 1072 
    struct rt2x00_field32 tmp_11;
    #line 1072 
    bool tmp_12;
    #line 1072 
    struct rt2x00_field32 tmp_13;
    #line 1072 
    struct rt2x00_field32 tmp_14;
    {
      #line 1072 
      struct rt2x00_field32 __dummy_2;
      #line 1072 
      struct rt2x00_field32 __dummy2_2;
      }
    #line 1072 
    __constr_expr_409 = (struct rt2x00_field32){.bit_offset = 10U, .bit_mask = 1024U};
    #line 1072 
    tmp_11 = __constr_expr_409;
    #line 1072 
    word = ~ tmp_11.bit_mask & word;
    #line 1072 
    tmp_12 = test_bit(5L,& txdesc->flags);
    #line 1072 
    __constr_expr_410 = (struct rt2x00_field32){.bit_offset = 10U, .bit_mask = 1024U};
    #line 1072 
    tmp_13 = __constr_expr_410;
    #line 1072 
    __constr_expr_411 = (struct rt2x00_field32){.bit_offset = 10U, .bit_mask = 1024U};
    #line 1072 
    tmp_14 = __constr_expr_411;
    #line 1072 
    word = ((unsigned int)((int)tmp_12 << tmp_13.bit_offset) & tmp_14.bit_mask) | word;
  }
  {
    #line 1074 
    struct rt2x00_field32 __constr_expr_414;
    #line 1074 
    struct rt2x00_field32 __constr_expr_412;
    #line 1074 
    struct rt2x00_field32 __constr_expr_413;
    #line 1074 
    struct rt2x00_field32 tmp_15;
    #line 1074 
    struct rt2x00_field32 tmp_16;
    #line 1074 
    struct rt2x00_field32 tmp_17;
    {
      #line 1074 
      struct rt2x00_field32 __dummy_3;
      #line 1074 
      struct rt2x00_field32 __dummy2_3;
      }
    #line 1074 
    __constr_expr_412 = (struct rt2x00_field32){.bit_offset = 11U, .bit_mask = 2048U};
    #line 1074 
    tmp_15 = __constr_expr_412;
    #line 1074 
    word = ~ tmp_15.bit_mask & word;
    #line 1074 
    __constr_expr_413 = (struct rt2x00_field32){.bit_offset = 11U, .bit_mask = 2048U};
    #line 1074 
    tmp_16 = __constr_expr_413;
    #line 1074 
    __constr_expr_414 = (struct rt2x00_field32){.bit_offset = 11U, .bit_mask = 2048U};
    #line 1074 
    tmp_17 = __constr_expr_414;
    #line 1074 
    word = ((unsigned int)((txdesc->rate_mode == (unsigned int)RATE_MODE_OFDM) << tmp_16.bit_offset) & tmp_17.bit_mask) | word;
  }
  {
    #line 1076 
    struct rt2x00_field32 __constr_expr_416;
    #line 1076 
    struct rt2x00_field32 __constr_expr_417;
    #line 1076 
    struct rt2x00_field32 __constr_expr_415;
    #line 1076 
    struct rt2x00_field32 tmp_18;
    #line 1076 
    bool tmp_19;
    #line 1076 
    struct rt2x00_field32 tmp_20;
    #line 1076 
    struct rt2x00_field32 tmp_21;
    {
      #line 1076 
      struct rt2x00_field32 __dummy_4;
      #line 1076 
      struct rt2x00_field32 __dummy2_4;
      }
    #line 1076 
    __constr_expr_415 = (struct rt2x00_field32){.bit_offset = 12U, .bit_mask = 4096U};
    #line 1076 
    tmp_18 = __constr_expr_415;
    #line 1076 
    word = ~ tmp_18.bit_mask & word;
    #line 1076 
    tmp_19 = test_bit(3L,& txdesc->flags);
    #line 1076 
    __constr_expr_416 = (struct rt2x00_field32){.bit_offset = 12U, .bit_mask = 4096U};
    #line 1076 
    tmp_20 = __constr_expr_416;
    #line 1076 
    __constr_expr_417 = (struct rt2x00_field32){.bit_offset = 12U, .bit_mask = 4096U};
    #line 1076 
    tmp_21 = __constr_expr_417;
    #line 1076 
    word = ((unsigned int)((int)tmp_19 << tmp_20.bit_offset) & tmp_21.bit_mask) | word;
  }
  {
    #line 1078 
    struct rt2x00_field32 __constr_expr_419;
    #line 1078 
    struct rt2x00_field32 __constr_expr_420;
    #line 1078 
    struct rt2x00_field32 __constr_expr_418;
    #line 1078 
    struct rt2x00_field32 tmp_22;
    #line 1078 
    struct rt2x00_field32 tmp_23;
    #line 1078 
    struct rt2x00_field32 tmp_24;
    {
      #line 1078 
      struct rt2x00_field32 __dummy_5;
      #line 1078 
      struct rt2x00_field32 __dummy2_5;
      }
    #line 1078 
    __constr_expr_418 = (struct rt2x00_field32){.bit_offset = 13U, .bit_mask = 24576U};
    #line 1078 
    tmp_22 = __constr_expr_418;
    #line 1078 
    word = ~ tmp_22.bit_mask & word;
    #line 1078 
    __constr_expr_419 = (struct rt2x00_field32){.bit_offset = 13U, .bit_mask = 24576U};
    #line 1078 
    tmp_23 = __constr_expr_419;
    #line 1078 
    __constr_expr_420 = (struct rt2x00_field32){.bit_offset = 13U, .bit_mask = 24576U};
    #line 1078 
    tmp_24 = __constr_expr_420;
    #line 1078 
    word = (((unsigned int)txdesc->u.plcp.ifs << tmp_23.bit_offset) & tmp_24.bit_mask) | word;
  }
  {
    #line 1079 
    struct rt2x00_field32 __constr_expr_422;
    #line 1079 
    struct rt2x00_field32 __constr_expr_423;
    #line 1079 
    struct rt2x00_field32 __constr_expr_421;
    #line 1079 
    struct rt2x00_field32 tmp_25;
    #line 1079 
    struct rt2x00_field32 tmp_26;
    #line 1079 
    struct rt2x00_field32 tmp_27;
    {
      #line 1079 
      struct rt2x00_field32 __dummy_6;
      #line 1079 
      struct rt2x00_field32 __dummy2_6;
      }
    #line 1079 
    __constr_expr_421 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 268369920U};
    #line 1079 
    tmp_25 = __constr_expr_421;
    #line 1079 
    word = ~ tmp_25.bit_mask & word;
    #line 1079 
    __constr_expr_422 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 268369920U};
    #line 1079 
    tmp_26 = __constr_expr_422;
    #line 1079 
    __constr_expr_423 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 268369920U};
    #line 1079 
    tmp_27 = __constr_expr_423;
    #line 1079 
    word = ((unsigned int)((int)txdesc->length << tmp_26.bit_offset) & tmp_27.bit_mask) | word;
  }
  {
    #line 1080 
    struct rt2x00_field32 __constr_expr_425;
    #line 1080 
    struct rt2x00_field32 __constr_expr_426;
    #line 1080 
    struct rt2x00_field32 __constr_expr_424;
    #line 1080 
    struct rt2x00_field32 tmp_28;
    #line 1080 
    struct rt2x00_field32 tmp_29;
    #line 1080 
    struct rt2x00_field32 tmp_30;
    {
      #line 1080 
      struct rt2x00_field32 __dummy_7;
      #line 1080 
      struct rt2x00_field32 __dummy2_7;
      }
    #line 1080 
    __constr_expr_424 = (struct rt2x00_field32){.bit_offset = 29U, .bit_mask = 536870912U};
    #line 1080 
    tmp_28 = __constr_expr_424;
    #line 1080 
    word = ~ tmp_28.bit_mask & word;
    #line 1080 
    __constr_expr_425 = (struct rt2x00_field32){.bit_offset = 29U, .bit_mask = 536870912U};
    #line 1080 
    tmp_29 = __constr_expr_425;
    #line 1080 
    __constr_expr_426 = (struct rt2x00_field32){.bit_offset = 29U, .bit_mask = 536870912U};
    #line 1080 
    tmp_30 = __constr_expr_426;
    #line 1080 
    word = ((unsigned int)((txdesc->cipher != (unsigned int)CIPHER_NONE) << tmp_29.bit_offset) & tmp_30.bit_mask) | word;
  }
  {
    #line 1081 
    struct rt2x00_field32 __constr_expr_428;
    #line 1081 
    struct rt2x00_field32 __constr_expr_429;
    #line 1081 
    struct rt2x00_field32 __constr_expr_427;
    #line 1081 
    struct rt2x00_field32 tmp_31;
    #line 1081 
    struct rt2x00_field32 tmp_32;
    #line 1081 
    struct rt2x00_field32 tmp_33;
    {
      #line 1081 
      struct rt2x00_field32 __dummy_8;
      #line 1081 
      struct rt2x00_field32 __dummy2_8;
      }
    #line 1081 
    __constr_expr_427 = (struct rt2x00_field32){.bit_offset = 30U, .bit_mask = 3221225472U};
    #line 1081 
    tmp_31 = __constr_expr_427;
    #line 1081 
    word = ~ tmp_31.bit_mask & word;
    #line 1081 
    __constr_expr_428 = (struct rt2x00_field32){.bit_offset = 30U, .bit_mask = 3221225472U};
    #line 1081 
    tmp_32 = __constr_expr_428;
    #line 1081 
    __constr_expr_429 = (struct rt2x00_field32){.bit_offset = 30U, .bit_mask = 3221225472U};
    #line 1081 
    tmp_33 = __constr_expr_429;
    #line 1081 
    word = ((unsigned int)((int)txdesc->key_idx << tmp_32.bit_offset) & tmp_33.bit_mask) | word;
  }
  #line 1082 
  rt2x00_desc_write(txd,(unsigned char)0,word);
  #line 1084 
  word = rt2x00_desc_read(txd,(unsigned char)1);
  {
    #line 1085 
    struct rt2x00_field32 __constr_expr_431;
    #line 1085 
    struct rt2x00_field32 __constr_expr_432;
    #line 1085 
    struct rt2x00_field32 __constr_expr_430;
    #line 1085 
    struct rt2x00_field32 tmp_34;
    #line 1085 
    struct rt2x00_field32 tmp_35;
    #line 1085 
    struct rt2x00_field32 tmp_36;
    {
      #line 1085 
      struct rt2x00_field32 __dummy_9;
      #line 1085 
      struct rt2x00_field32 __dummy2_9;
      }
    #line 1085 
    __constr_expr_430 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 63U};
    #line 1085 
    tmp_34 = __constr_expr_430;
    #line 1085 
    word = ~ tmp_34.bit_mask & word;
    #line 1085 
    __constr_expr_431 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 63U};
    #line 1085 
    tmp_35 = __constr_expr_431;
    #line 1085 
    __constr_expr_432 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 63U};
    #line 1085 
    tmp_36 = __constr_expr_432;
    #line 1085 
    word = ((unsigned int)((int)txdesc->iv_offset << tmp_35.bit_offset) & tmp_36.bit_mask) | word;
  }
  {
    #line 1086 
    struct rt2x00_field32 __constr_expr_434;
    #line 1086 
    struct rt2x00_field32 __constr_expr_435;
    #line 1086 
    struct rt2x00_field32 __constr_expr_433;
    #line 1086 
    struct rt2x00_field32 tmp_37;
    #line 1086 
    struct rt2x00_field32 tmp_38;
    #line 1086 
    struct rt2x00_field32 tmp_39;
    {
      #line 1086 
      struct rt2x00_field32 __dummy_10;
      #line 1086 
      struct rt2x00_field32 __dummy2_10;
      }
    #line 1086 
    __constr_expr_433 = (struct rt2x00_field32){.bit_offset = 6U, .bit_mask = 192U};
    #line 1086 
    tmp_37 = __constr_expr_433;
    #line 1086 
    word = ~ tmp_37.bit_mask & word;
    #line 1086 
    __constr_expr_434 = (struct rt2x00_field32){.bit_offset = 6U, .bit_mask = 192U};
    #line 1086 
    tmp_38 = __constr_expr_434;
    #line 1086 
    __constr_expr_435 = (struct rt2x00_field32){.bit_offset = 6U, .bit_mask = 192U};
    #line 1086 
    tmp_39 = __constr_expr_435;
    #line 1086 
    word = ((unsigned int)((int)(entry->queue)->aifs << tmp_38.bit_offset) & tmp_39.bit_mask) | word;
  }
  {
    #line 1087 
    struct rt2x00_field32 __constr_expr_437;
    #line 1087 
    struct rt2x00_field32 __constr_expr_438;
    #line 1087 
    struct rt2x00_field32 __constr_expr_436;
    #line 1087 
    struct rt2x00_field32 tmp_40;
    #line 1087 
    struct rt2x00_field32 tmp_41;
    #line 1087 
    struct rt2x00_field32 tmp_42;
    {
      #line 1087 
      struct rt2x00_field32 __dummy_11;
      #line 1087 
      struct rt2x00_field32 __dummy2_11;
      }
    #line 1087 
    __constr_expr_436 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 3840U};
    #line 1087 
    tmp_40 = __constr_expr_436;
    #line 1087 
    word = ~ tmp_40.bit_mask & word;
    #line 1087 
    __constr_expr_437 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 3840U};
    #line 1087 
    tmp_41 = __constr_expr_437;
    #line 1087 
    __constr_expr_438 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 3840U};
    #line 1087 
    tmp_42 = __constr_expr_438;
    #line 1087 
    word = ((unsigned int)((int)(entry->queue)->cw_min << tmp_41.bit_offset) & tmp_42.bit_mask) | word;
  }
  {
    #line 1088 
    struct rt2x00_field32 __constr_expr_440;
    #line 1088 
    struct rt2x00_field32 __constr_expr_441;
    #line 1088 
    struct rt2x00_field32 __constr_expr_439;
    #line 1088 
    struct rt2x00_field32 tmp_43;
    #line 1088 
    struct rt2x00_field32 tmp_44;
    #line 1088 
    struct rt2x00_field32 tmp_45;
    {
      #line 1088 
      struct rt2x00_field32 __dummy_12;
      #line 1088 
      struct rt2x00_field32 __dummy2_12;
      }
    #line 1088 
    __constr_expr_439 = (struct rt2x00_field32){.bit_offset = 12U, .bit_mask = 61440U};
    #line 1088 
    tmp_43 = __constr_expr_439;
    #line 1088 
    word = ~ tmp_43.bit_mask & word;
    #line 1088 
    __constr_expr_440 = (struct rt2x00_field32){.bit_offset = 12U, .bit_mask = 61440U};
    #line 1088 
    tmp_44 = __constr_expr_440;
    #line 1088 
    __constr_expr_441 = (struct rt2x00_field32){.bit_offset = 12U, .bit_mask = 61440U};
    #line 1088 
    tmp_45 = __constr_expr_441;
    #line 1088 
    word = ((unsigned int)((int)(entry->queue)->cw_max << tmp_44.bit_offset) & tmp_45.bit_mask) | word;
  }
  #line 1089 
  rt2x00_desc_write(txd,(unsigned char)1,word);
  #line 1091 
  word = rt2x00_desc_read(txd,(unsigned char)2);
  {
    #line 1092 
    struct rt2x00_field32 __constr_expr_443;
    #line 1092 
    struct rt2x00_field32 __constr_expr_444;
    #line 1092 
    struct rt2x00_field32 __constr_expr_442;
    #line 1092 
    struct rt2x00_field32 tmp_46;
    #line 1092 
    struct rt2x00_field32 tmp_47;
    #line 1092 
    struct rt2x00_field32 tmp_48;
    {
      #line 1092 
      struct rt2x00_field32 __dummy_13;
      #line 1092 
      struct rt2x00_field32 __dummy2_13;
      }
    #line 1092 
    __constr_expr_442 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 255U};
    #line 1092 
    tmp_46 = __constr_expr_442;
    #line 1092 
    word = ~ tmp_46.bit_mask & word;
    #line 1092 
    __constr_expr_443 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 255U};
    #line 1092 
    tmp_47 = __constr_expr_443;
    #line 1092 
    __constr_expr_444 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 255U};
    #line 1092 
    tmp_48 = __constr_expr_444;
    #line 1092 
    word = ((unsigned int)((int)txdesc->u.plcp.signal << tmp_47.bit_offset) & tmp_48.bit_mask) | word;
  }
  {
    #line 1093 
    struct rt2x00_field32 __constr_expr_446;
    #line 1093 
    struct rt2x00_field32 __constr_expr_447;
    #line 1093 
    struct rt2x00_field32 __constr_expr_445;
    #line 1093 
    struct rt2x00_field32 tmp_49;
    #line 1093 
    struct rt2x00_field32 tmp_50;
    #line 1093 
    struct rt2x00_field32 tmp_51;
    {
      #line 1093 
      struct rt2x00_field32 __dummy_14;
      #line 1093 
      struct rt2x00_field32 __dummy2_14;
      }
    #line 1093 
    __constr_expr_445 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 65280U};
    #line 1093 
    tmp_49 = __constr_expr_445;
    #line 1093 
    word = ~ tmp_49.bit_mask & word;
    #line 1093 
    __constr_expr_446 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 65280U};
    #line 1093 
    tmp_50 = __constr_expr_446;
    #line 1093 
    __constr_expr_447 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 65280U};
    #line 1093 
    tmp_51 = __constr_expr_447;
    #line 1093 
    word = ((unsigned int)((int)txdesc->u.plcp.service << tmp_50.bit_offset) & tmp_51.bit_mask) | word;
  }
  {
    #line 1094 
    struct rt2x00_field32 __constr_expr_449;
    #line 1094 
    struct rt2x00_field32 __constr_expr_450;
    #line 1094 
    struct rt2x00_field32 __constr_expr_448;
    #line 1094 
    struct rt2x00_field32 tmp_52;
    #line 1094 
    struct rt2x00_field32 tmp_53;
    #line 1094 
    struct rt2x00_field32 tmp_54;
    {
      #line 1094 
      struct rt2x00_field32 __dummy_15;
      #line 1094 
      struct rt2x00_field32 __dummy2_15;
      }
    #line 1094 
    __constr_expr_448 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 16711680U};
    #line 1094 
    tmp_52 = __constr_expr_448;
    #line 1094 
    word = ~ tmp_52.bit_mask & word;
    #line 1094 
    __constr_expr_449 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 16711680U};
    #line 1094 
    tmp_53 = __constr_expr_449;
    #line 1094 
    __constr_expr_450 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 16711680U};
    #line 1094 
    tmp_54 = __constr_expr_450;
    #line 1094 
    word = ((unsigned int)((int)txdesc->u.plcp.length_low << tmp_53.bit_offset) & tmp_54.bit_mask) | word;
  }
  {
    #line 1096 
    struct rt2x00_field32 __constr_expr_452;
    #line 1096 
    struct rt2x00_field32 __constr_expr_453;
    #line 1096 
    struct rt2x00_field32 __constr_expr_451;
    #line 1096 
    struct rt2x00_field32 tmp_55;
    #line 1096 
    struct rt2x00_field32 tmp_56;
    #line 1096 
    struct rt2x00_field32 tmp_57;
    {
      #line 1096 
      struct rt2x00_field32 __dummy_16;
      #line 1096 
      struct rt2x00_field32 __dummy2_16;
      }
    #line 1096 
    __constr_expr_451 = (struct rt2x00_field32){.bit_offset = 24U, .bit_mask = 4278190080U};
    #line 1096 
    tmp_55 = __constr_expr_451;
    #line 1096 
    word = ~ tmp_55.bit_mask & word;
    #line 1096 
    __constr_expr_452 = (struct rt2x00_field32){.bit_offset = 24U, .bit_mask = 4278190080U};
    #line 1096 
    tmp_56 = __constr_expr_452;
    #line 1096 
    __constr_expr_453 = (struct rt2x00_field32){.bit_offset = 24U, .bit_mask = 4278190080U};
    #line 1096 
    tmp_57 = __constr_expr_453;
    #line 1096 
    word = ((unsigned int)((int)txdesc->u.plcp.length_high << tmp_56.bit_offset) & tmp_57.bit_mask) | word;
  }
  #line 1098 
  rt2x00_desc_write(txd,(unsigned char)2,word);
  #line 1100 
  if ((int)test_bit(9L,& txdesc->flags) != 0) {
    #line 1101 
    _rt2x00_desc_write(txd,(unsigned char)3,skbdesc->iv[0]);
    #line 1102 
    _rt2x00_desc_write(txd,(unsigned char)4,skbdesc->iv[1]);
  }
  #line 1108 
  skbdesc->flags = (unsigned char)((unsigned int)skbdesc->flags | 16U);
  #line 1109 
  skbdesc->desc = (void *)txd;
  #line 1110 
  skbdesc->desc_len = (unsigned char)20U;
  #line 1111 
  return;
}

#line 1116 
#line 1292 
static void rt2500usb_beacondone(struct urb *urb);
#line 1118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_write_beacon(struct queue_entry *entry, struct txentry_desc *txdesc)
{
  #line 1122 
  struct usb_interface *intf;
  #line 1125 
  int length;
  #line 1126 
  u16 reg;
  #line 1126 
  u16 reg0;
  #line 1121 
  struct rt2x00_dev *rt2x00dev = (entry->queue)->rt2x00dev;
  {
    #line 1122 
    void *__mptr;
    #line 1122 
    __mptr = (void *)rt2x00dev->dev;
    #line 1122 
    intf = ((struct usb_interface *)(__mptr + 18446744073709551568U));
    }
  #line 1122 
  struct usb_device *usb_dev = interface_to_usbdev(intf);
  #line 1123 
  struct queue_entry_priv_usb_bcn *bcn_priv = (struct queue_entry_priv_usb_bcn *)entry->priv_data;
  #line 1124 
  int pipe = (int)(__create_pipe(usb_dev,(unsigned int)(entry->queue)->usb_endpoint) | 3221225472U);
  #line 1132 
  reg = rt2500usb_register_read(rt2x00dev,1126U);
  {
    #line 1133 
    struct rt2x00_field16 __constr_expr_454;
    #line 1133 
    struct rt2x00_field16 __constr_expr_455;
    #line 1133 
    struct rt2x00_field16 __constr_expr_456;
    #line 1133 
    struct rt2x00_field16 tmp_3;
    #line 1133 
    struct rt2x00_field16 tmp_4;
    #line 1133 
    struct rt2x00_field16 tmp_5;
    {
      #line 1133 
      struct rt2x00_field16 __dummy;
      #line 1133 
      struct rt2x00_field16 __dummy2;
      }
    #line 1133 
    __constr_expr_454 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 1133 
    tmp_3 = __constr_expr_454;
    #line 1133 
    reg = (unsigned short)(~ ((int)tmp_3.bit_mask) & (int)reg);
    #line 1133 
    __constr_expr_455 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 1133 
    tmp_4 = __constr_expr_455;
    #line 1133 
    __constr_expr_456 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 1133 
    tmp_5 = __constr_expr_456;
    #line 1133 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 1134 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
  #line 1139 
  skb_push(entry->skb,20U);
  #line 1140 
  memset((void *)(entry->skb)->data,0,20UL);
  #line 1145 
  rt2500usb_write_tx_desc(entry,txdesc);
  #line 1150 
  rt2x00debug_dump_frame(rt2x00dev,(enum rt2x00_dump_type)DUMP_FRAME_BEACON,entry);
  #line 1157 
  length = (*(((rt2x00dev->ops)->lib)->get_tx_data_len))(entry);
  #line 1159 
  usb_fill_bulk_urb(bcn_priv->urb,usb_dev,(unsigned int)pipe,(void *)(entry->skb)->data,length,& rt2500usb_beacondone,(void *)entry);
  #line 1168 
  bcn_priv->guardian_data = 0U;
  #line 1169 
  usb_fill_bulk_urb(bcn_priv->guardian_urb,usb_dev,(unsigned int)pipe,(void *)(& bcn_priv->guardian_data),1,& rt2500usb_beacondone,(void *)entry);
  #line 1176 
  cif_usb_submit_urb(bcn_priv->guardian_urb,2592U);
  {
    #line 1181 
    struct rt2x00_field16 __constr_expr_457;
    #line 1181 
    struct rt2x00_field16 __constr_expr_458;
    #line 1181 
    struct rt2x00_field16 __constr_expr_459;
    #line 1181 
    struct rt2x00_field16 tmp_6;
    #line 1181 
    struct rt2x00_field16 tmp_7;
    #line 1181 
    struct rt2x00_field16 tmp_8;
    {
      #line 1181 
      struct rt2x00_field16 __dummy_0;
      #line 1181 
      struct rt2x00_field16 __dummy2_0;
      }
    #line 1181 
    __constr_expr_457 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 1181 
    tmp_6 = __constr_expr_457;
    #line 1181 
    reg = (unsigned short)(~ ((int)tmp_6.bit_mask) & (int)reg);
    #line 1181 
    __constr_expr_458 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 1181 
    tmp_7 = __constr_expr_458;
    #line 1181 
    __constr_expr_459 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
    #line 1181 
    tmp_8 = __constr_expr_459;
    #line 1181 
    reg = (unsigned short)(((1 << (int)tmp_7.bit_offset) & (int)tmp_8.bit_mask) | (int)reg);
  }
  {
    #line 1182 
    struct rt2x00_field16 __constr_expr_460;
    #line 1182 
    struct rt2x00_field16 __constr_expr_461;
    #line 1182 
    struct rt2x00_field16 __constr_expr_462;
    #line 1182 
    struct rt2x00_field16 tmp_9;
    #line 1182 
    struct rt2x00_field16 tmp_10;
    #line 1182 
    struct rt2x00_field16 tmp_11;
    {
      #line 1182 
      struct rt2x00_field16 __dummy_1;
      #line 1182 
      struct rt2x00_field16 __dummy2_1;
      }
    #line 1182 
    __constr_expr_460 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 1182 
    tmp_9 = __constr_expr_460;
    #line 1182 
    reg = (unsigned short)(~ ((int)tmp_9.bit_mask) & (int)reg);
    #line 1182 
    __constr_expr_461 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 1182 
    tmp_10 = __constr_expr_461;
    #line 1182 
    __constr_expr_462 = (struct rt2x00_field16){.bit_offset = (unsigned short)3U, .bit_mask = (unsigned short)8U};
    #line 1182 
    tmp_11 = __constr_expr_462;
    #line 1182 
    reg = (unsigned short)(((1 << (int)tmp_10.bit_offset) & (int)tmp_11.bit_mask) | (int)reg);
  }
  #line 1183 
  reg0 = reg;
  {
    #line 1184 
    struct rt2x00_field16 __constr_expr_463;
    #line 1184 
    struct rt2x00_field16 __constr_expr_464;
    #line 1184 
    struct rt2x00_field16 __constr_expr_465;
    #line 1184 
    struct rt2x00_field16 tmp_12;
    #line 1184 
    struct rt2x00_field16 tmp_13;
    #line 1184 
    struct rt2x00_field16 tmp_14;
    {
      #line 1184 
      struct rt2x00_field16 __dummy_2;
      #line 1184 
      struct rt2x00_field16 __dummy2_2;
      }
    #line 1184 
    __constr_expr_463 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 1184 
    tmp_12 = __constr_expr_463;
    #line 1184 
    reg = (unsigned short)(~ ((int)tmp_12.bit_mask) & (int)reg);
    #line 1184 
    __constr_expr_464 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 1184 
    tmp_13 = __constr_expr_464;
    #line 1184 
    __constr_expr_465 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)16U};
    #line 1184 
    tmp_14 = __constr_expr_465;
    #line 1184 
    reg = (unsigned short)(((1 << (int)tmp_13.bit_offset) & (int)tmp_14.bit_mask) | (int)reg);
  }
  #line 1192 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
  #line 1193 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg0));
  #line 1194 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
  #line 1195 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg0));
  #line 1196 
  rt2500usb_register_write(rt2x00dev,1126U,(unsigned short)((int)reg));
  #line 1197 
  return;
}

#line 1199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_get_tx_data_len(struct queue_entry *entry)
{
  #line 1207 
  int __y;
  #line 1201 
  int length;
  #line 1208 
  int tmp_0;
  #line 1207 
  __y = 2;
  #line 1207 
  length = (int)(((((entry->skb)->len + (unsigned int)__y) + 4294967295U) / (unsigned int)__y) * (unsigned int)__y);
  #line 1208 
  if (length % (int)(entry->queue)->usb_maxpacket == 0) 
                                                        #line 1208 
                                                        tmp_0 = 2; else 
                                                                    #line 1208 
                                                                    tmp_0 = 0;
  #line 1208 
  length = tmp_0 + length;
  #line 1210 
  return length;
}

#line 1216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_fill_rxdone(struct queue_entry *entry, struct rxdone_entry_desc *rxdesc)
{
  #line 1271 
  struct rt2x00_field32 __constr_expr_475;
  #line 1271 
  struct rt2x00_field32 tmp_13;
  #line 1247 
  struct rt2x00_field32 __constr_expr_470;
  #line 1276 
  struct rt2x00_field32 __constr_expr_480;
  #line 1247 
  struct rt2x00_field32 tmp_6;
  #line 1276 
  struct rt2x00_field32 tmp_21;
  #line 1247 
  struct rt2x00_field32 __constr_expr_471;
  #line 1276 
  struct rt2x00_field32 __constr_expr_481;
  #line 1247 
  struct rt2x00_field32 tmp_7;
  #line 1276 
  struct rt2x00_field32 tmp_22;
  #line 1242 
  struct rt2x00_field32 __constr_expr_466;
  #line 1273 
  struct rt2x00_field32 __constr_expr_476;
  #line 1242 
  struct rt2x00_field32 tmp_0;
  #line 1273 
  struct rt2x00_field32 tmp_15;
  #line 1242 
  struct rt2x00_field32 __constr_expr_467;
  #line 1273 
  struct rt2x00_field32 __constr_expr_477;
  #line 1242 
  struct rt2x00_field32 tmp_1;
  #line 1273 
  struct rt2x00_field32 tmp_16;
  #line 1248 
  struct rt2x00_field32 __constr_expr_472;
  #line 1280 
  struct rt2x00_field32 __constr_expr_482;
  #line 1248 
  struct rt2x00_field32 tmp_9;
  #line 1280 
  struct rt2x00_field32 tmp_24;
  #line 1248 
  struct rt2x00_field32 __constr_expr_473;
  #line 1280 
  struct rt2x00_field32 __constr_expr_483;
  #line 1248 
  struct rt2x00_field32 tmp_10;
  #line 1280 
  struct rt2x00_field32 tmp_25;
  #line 1244 
  struct rt2x00_field32 __constr_expr_468;
  #line 1274 
  struct rt2x00_field32 __constr_expr_478;
  #line 1244 
  struct rt2x00_field32 tmp_3;
  #line 1274 
  struct rt2x00_field32 tmp_18;
  #line 1244 
  struct rt2x00_field32 __constr_expr_469;
  #line 1274 
  struct rt2x00_field32 __constr_expr_479;
  #line 1244 
  struct rt2x00_field32 tmp_4;
  #line 1274 
  struct rt2x00_field32 tmp_19;
  #line 1271 
  struct rt2x00_field32 __constr_expr_474;
  #line 1271 
  struct rt2x00_field32 tmp_12;
  #line 1226 
  u32 word0;
  #line 1227 
  u32 word1;
  #line 1219 
  struct rt2x00_dev *rt2x00dev = (entry->queue)->rt2x00dev;
  #line 1220 
  struct queue_entry_priv_usb *entry_priv = (struct queue_entry_priv_usb *)entry->priv_data;
  #line 1221 
  struct skb_frame_desc *skbdesc = get_skb_frame_desc(entry->skb);
  #line 1222 
  __le32 *rxd = (__le32 *)((entry->skb)->data + (unsigned long)((entry_priv->urb)->actual_length - (unsigned int)(entry->queue)->desc_size));
  #line 1233 
  memcpy(skbdesc->desc,(void *)rxd,(unsigned long)skbdesc->desc_len);
  #line 1234 
  rxd = (__le32 *)skbdesc->desc;
  #line 1239 
  word0 = rt2x00_desc_read(rxd,(unsigned char)0);
  #line 1240 
  word1 = rt2x00_desc_read(rxd,(unsigned char)1);
  {
    #line 1242 
    struct rt2x00_field32 __dummy;
    #line 1242 
    struct rt2x00_field32 __dummy2;
    }
  #line 1242 
  __constr_expr_466 = (struct rt2x00_field32){.bit_offset = 5U, .bit_mask = 32U};
  #line 1242 
  tmp_0 = __constr_expr_466;
  #line 1242 
  __constr_expr_467 = (struct rt2x00_field32){.bit_offset = 5U, .bit_mask = 32U};
  #line 1242 
  tmp_1 = __constr_expr_467;
  #line 1242 
  ;
  #line 1242 
  if (((tmp_0.bit_mask & word0) >> tmp_1.bit_offset) != 0U) 
                                                            #line 1243 
                                                            rxdesc->flags |= 32;
  {
    #line 1244 
    struct rt2x00_field32 __dummy_0;
    #line 1244 
    struct rt2x00_field32 __dummy2_0;
    }
  #line 1244 
  __constr_expr_468 = (struct rt2x00_field32){.bit_offset = 7U, .bit_mask = 128U};
  #line 1244 
  tmp_3 = __constr_expr_468;
  #line 1244 
  __constr_expr_469 = (struct rt2x00_field32){.bit_offset = 7U, .bit_mask = 128U};
  #line 1244 
  tmp_4 = __constr_expr_469;
  #line 1244 
  ;
  #line 1244 
  if (((tmp_3.bit_mask & word0) >> tmp_4.bit_offset) != 0U) 
                                                            #line 1245 
                                                            rxdesc->flags |= 64;
  {
    #line 1247 
    struct rt2x00_field32 __dummy_1;
    #line 1247 
    struct rt2x00_field32 __dummy2_1;
    }
  #line 1247 
  __constr_expr_470 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 256U};
  #line 1247 
  tmp_6 = __constr_expr_470;
  #line 1247 
  __constr_expr_471 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 256U};
  #line 1247 
  tmp_7 = __constr_expr_471;
  #line 1247 
  ;
  #line 1247 
  rxdesc->cipher = (unsigned char)((tmp_6.bit_mask & word0) >> tmp_7.bit_offset);
  {
    #line 1248 
    struct rt2x00_field32 __dummy_2;
    #line 1248 
    struct rt2x00_field32 __dummy2_2;
    }
  #line 1248 
  __constr_expr_472 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 512U};
  #line 1248 
  tmp_9 = __constr_expr_472;
  #line 1248 
  __constr_expr_473 = (struct rt2x00_field32){.bit_offset = 9U, .bit_mask = 512U};
  #line 1248 
  tmp_10 = __constr_expr_473;
  #line 1248 
  ;
  #line 1248 
  if (((tmp_9.bit_mask & word0) >> tmp_10.bit_offset) != 0U) 
                                                             #line 1249 
                                                             rxdesc->cipher_status = (unsigned char)3U;
  #line 1251 
  if ((unsigned int)rxdesc->cipher != 0U) {
    #line 1252 
    rxdesc->iv[0] = _rt2x00_desc_read(rxd,(unsigned char)2);
    #line 1253 
    rxdesc->iv[1] = _rt2x00_desc_read(rxd,(unsigned char)3);
    #line 1254 
    rxdesc->dev_flags |= 16;
    #line 1258 
    rxdesc->flags |= 8;
    #line 1259 
    if ((unsigned int)rxdesc->cipher_status == 0U) 
                                                   #line 1260 
                                                   rxdesc->flags |= 2;
    else 
      #line 1261 
      if ((unsigned int)rxdesc->cipher_status == 2U) 
                                                     #line 1262 
                                                     rxdesc->flags |= 1;
  }
  {
    #line 1271 
    struct rt2x00_field32 __dummy_3;
    #line 1271 
    struct rt2x00_field32 __dummy2_3;
    }
  #line 1271 
  __constr_expr_474 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 65280U};
  #line 1271 
  tmp_12 = __constr_expr_474;
  #line 1271 
  __constr_expr_475 = (struct rt2x00_field32){.bit_offset = 8U, .bit_mask = 65280U};
  #line 1271 
  tmp_13 = __constr_expr_475;
  #line 1271 
  ;
  #line 1271 
  rxdesc->signal = (int)((tmp_12.bit_mask & word1) >> tmp_13.bit_offset);
  {
    #line 1273 
    struct rt2x00_field32 __dummy_4;
    #line 1273 
    struct rt2x00_field32 __dummy2_4;
    }
  #line 1273 
  __constr_expr_476 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 255U};
  #line 1273 
  tmp_15 = __constr_expr_476;
  #line 1273 
  __constr_expr_477 = (struct rt2x00_field32){.bit_offset = 0U, .bit_mask = 255U};
  #line 1273 
  tmp_16 = __constr_expr_477;
  #line 1273 
  ;
  #line 1272 
  rxdesc->rssi = (int)(((tmp_15.bit_mask & word1) >> tmp_16.bit_offset) - (unsigned int)rt2x00dev->rssi_offset);
  {
    #line 1274 
    struct rt2x00_field32 __dummy_5;
    #line 1274 
    struct rt2x00_field32 __dummy2_5;
    }
  #line 1274 
  __constr_expr_478 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 268369920U};
  #line 1274 
  tmp_18 = __constr_expr_478;
  #line 1274 
  __constr_expr_479 = (struct rt2x00_field32){.bit_offset = 16U, .bit_mask = 268369920U};
  #line 1274 
  tmp_19 = __constr_expr_479;
  #line 1274 
  ;
  #line 1274 
  rxdesc->size = (int)((tmp_18.bit_mask & word0) >> tmp_19.bit_offset);
  {
    #line 1276 
    struct rt2x00_field32 __dummy_6;
    #line 1276 
    struct rt2x00_field32 __dummy2_6;
    }
  #line 1276 
  __constr_expr_480 = (struct rt2x00_field32){.bit_offset = 6U, .bit_mask = 64U};
  #line 1276 
  tmp_21 = __constr_expr_480;
  #line 1276 
  __constr_expr_481 = (struct rt2x00_field32){.bit_offset = 6U, .bit_mask = 64U};
  #line 1276 
  tmp_22 = __constr_expr_481;
  #line 1276 
  ;
  #line 1276 
  if (((tmp_21.bit_mask & word0) >> tmp_22.bit_offset) != 0U) 
                                                              #line 1277 
                                                              rxdesc->dev_flags |= 1; else 
                                                                    #line 1279 
                                                                    rxdesc->dev_flags |= 2;
  {
    #line 1280 
    struct rt2x00_field32 __dummy_7;
    #line 1280 
    struct rt2x00_field32 __dummy2_7;
    }
  #line 1280 
  __constr_expr_482 = (struct rt2x00_field32){.bit_offset = 4U, .bit_mask = 16U};
  #line 1280 
  tmp_24 = __constr_expr_482;
  #line 1280 
  __constr_expr_483 = (struct rt2x00_field32){.bit_offset = 4U, .bit_mask = 16U};
  #line 1280 
  tmp_25 = __constr_expr_483;
  #line 1280 
  ;
  #line 1280 
  if (((tmp_24.bit_mask & word0) >> tmp_25.bit_offset) != 0U) 
                                                              #line 1281 
                                                              rxdesc->dev_flags |= 8;
  #line 1286 
  skb_trim(entry->skb,(unsigned int)rxdesc->size);
  #line 1287 
  return;
}

#line 1292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_beacondone(struct urb *urb)
{
  #line 1294 
  struct queue_entry *entry = (struct queue_entry *)urb->context;
  #line 1295 
  struct queue_entry_priv_usb_bcn *bcn_priv = (struct queue_entry_priv_usb_bcn *)entry->priv_data;
  #line 1297 
  if (! test_bit(4L,& ((entry->queue)->rt2x00dev)->flags)) 
                                                           #line 1298 
                                                           return;
  #line 1306 
  if (bcn_priv->guardian_urb == urb) 
                                     #line 1307 
                                     cif_usb_submit_urb(bcn_priv->urb,2592U);
  else 
    #line 1308 
    if (bcn_priv->urb == urb) {
      #line 1309 
      consume_skb(entry->skb);
      #line 1310 
      entry->skb = (struct sk_buff *)0;
    }
  #line 1312 
  return;
}

#line 1317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_validate_eeprom(struct rt2x00_dev *rt2x00dev)
{
  #line 1319 
  u16 word;
  #line 1320 
  u8 *mac;
  #line 1321 
  u8 bbp;
  #line 1323 
  rt2x00usb_eeprom_read(rt2x00dev,rt2x00dev->eeprom,(unsigned short)110);
  #line 1328 
  mac = (u8 *)rt2x00_eeprom_addr(rt2x00dev,2U);
  #line 1329 
  rt2x00lib_set_mac_address(rt2x00dev,mac);
  #line 1331 
  word = rt2x00_eeprom_read(rt2x00dev,11U);
  #line 1332 
  if ((unsigned int)word == 65535U) {
    {
      #line 1333 
      struct rt2x00_field16 __constr_expr_485;
      #line 1333 
      struct rt2x00_field16 __constr_expr_486;
      #line 1333 
      struct rt2x00_field16 __constr_expr_484;
      #line 1333 
      struct rt2x00_field16 tmp_0;
      #line 1333 
      struct rt2x00_field16 tmp_1;
      #line 1333 
      struct rt2x00_field16 tmp_2;
      {
        #line 1333 
        struct rt2x00_field16 __dummy;
        #line 1333 
        struct rt2x00_field16 __dummy2;
        }
      #line 1333 
      __constr_expr_484 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 1333 
      tmp_0 = __constr_expr_484;
      #line 1333 
      word = (unsigned short)(~ ((int)tmp_0.bit_mask) & (int)word);
      #line 1333 
      __constr_expr_485 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 1333 
      tmp_1 = __constr_expr_485;
      #line 1333 
      __constr_expr_486 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)3U};
      #line 1333 
      tmp_2 = __constr_expr_486;
      #line 1333 
      word = (unsigned short)(((2 << (int)tmp_1.bit_offset) & (int)tmp_2.bit_mask) | (int)word);
    }
    {
      #line 1334 
      struct rt2x00_field16 __constr_expr_488;
      #line 1334 
      struct rt2x00_field16 __constr_expr_489;
      #line 1334 
      struct rt2x00_field16 __constr_expr_487;
      #line 1334 
      struct rt2x00_field16 tmp_3;
      #line 1334 
      struct rt2x00_field16 tmp_4;
      #line 1334 
      struct rt2x00_field16 tmp_5;
      {
        #line 1334 
        struct rt2x00_field16 __dummy_0;
        #line 1334 
        struct rt2x00_field16 __dummy2_0;
        }
      #line 1334 
      __constr_expr_487 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      #line 1334 
      tmp_3 = __constr_expr_487;
      #line 1334 
      word = (unsigned short)(~ ((int)tmp_3.bit_mask) & (int)word);
      #line 1334 
      __constr_expr_488 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      #line 1334 
      tmp_4 = __constr_expr_488;
      #line 1334 
      __constr_expr_489 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      #line 1334 
      tmp_5 = __constr_expr_489;
      #line 1334 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1336 
      struct rt2x00_field16 __constr_expr_491;
      #line 1336 
      struct rt2x00_field16 __constr_expr_492;
      #line 1336 
      struct rt2x00_field16 __constr_expr_490;
      #line 1336 
      struct rt2x00_field16 tmp_6;
      #line 1336 
      struct rt2x00_field16 tmp_7;
      #line 1336 
      struct rt2x00_field16 tmp_8;
      {
        #line 1336 
        struct rt2x00_field16 __dummy_1;
        #line 1336 
        struct rt2x00_field16 __dummy2_1;
        }
      #line 1336 
      __constr_expr_490 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
      #line 1336 
      tmp_6 = __constr_expr_490;
      #line 1336 
      word = (unsigned short)(~ ((int)tmp_6.bit_mask) & (int)word);
      #line 1336 
      __constr_expr_491 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
      #line 1336 
      tmp_7 = __constr_expr_491;
      #line 1336 
      __constr_expr_492 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
      #line 1336 
      tmp_8 = __constr_expr_492;
      #line 1336 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1338 
      struct rt2x00_field16 __constr_expr_494;
      #line 1338 
      struct rt2x00_field16 __constr_expr_495;
      #line 1338 
      struct rt2x00_field16 __constr_expr_493;
      #line 1338 
      struct rt2x00_field16 tmp_9;
      #line 1338 
      struct rt2x00_field16 tmp_10;
      #line 1338 
      struct rt2x00_field16 tmp_11;
      {
        #line 1338 
        struct rt2x00_field16 __dummy_2;
        #line 1338 
        struct rt2x00_field16 __dummy2_2;
        }
      #line 1338 
      __constr_expr_493 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
      #line 1338 
      tmp_9 = __constr_expr_493;
      #line 1338 
      word = (unsigned short)(~ ((int)tmp_9.bit_mask) & (int)word);
      #line 1338 
      __constr_expr_494 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
      #line 1338 
      tmp_10 = __constr_expr_494;
      #line 1338 
      __constr_expr_495 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
      #line 1338 
      tmp_11 = __constr_expr_495;
      #line 1338 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1340 
      struct rt2x00_field16 __constr_expr_497;
      #line 1340 
      struct rt2x00_field16 __constr_expr_498;
      #line 1340 
      struct rt2x00_field16 __constr_expr_496;
      #line 1340 
      struct rt2x00_field16 tmp_12;
      #line 1340 
      struct rt2x00_field16 tmp_13;
      #line 1340 
      struct rt2x00_field16 tmp_14;
      {
        #line 1340 
        struct rt2x00_field16 __dummy_3;
        #line 1340 
        struct rt2x00_field16 __dummy2_3;
        }
      #line 1340 
      __constr_expr_496 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
      #line 1340 
      tmp_12 = __constr_expr_496;
      #line 1340 
      word = (unsigned short)(~ ((int)tmp_12.bit_mask) & (int)word);
      #line 1340 
      __constr_expr_497 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
      #line 1340 
      tmp_13 = __constr_expr_497;
      #line 1340 
      __constr_expr_498 = (struct rt2x00_field16){.bit_offset = (unsigned short)9U, .bit_mask = (unsigned short)512U};
      #line 1340 
      tmp_14 = __constr_expr_498;
      #line 1340 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1341 
      struct rt2x00_field16 __constr_expr_500;
      #line 1341 
      struct rt2x00_field16 __constr_expr_501;
      #line 1341 
      struct rt2x00_field16 __constr_expr_499;
      #line 1341 
      struct rt2x00_field16 tmp_15;
      #line 1341 
      struct rt2x00_field16 tmp_16;
      #line 1341 
      struct rt2x00_field16 tmp_17;
      {
        #line 1341 
        struct rt2x00_field16 __dummy_4;
        #line 1341 
        struct rt2x00_field16 __dummy2_4;
        }
      #line 1341 
      __constr_expr_499 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
      #line 1341 
      tmp_15 = __constr_expr_499;
      #line 1341 
      word = (unsigned short)(~ ((int)tmp_15.bit_mask) & (int)word);
      #line 1341 
      __constr_expr_500 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
      #line 1341 
      tmp_16 = __constr_expr_500;
      #line 1341 
      __constr_expr_501 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
      #line 1341 
      tmp_17 = __constr_expr_501;
      #line 1341 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1342 
      struct rt2x00_field16 __constr_expr_503;
      #line 1342 
      struct rt2x00_field16 __constr_expr_504;
      #line 1342 
      struct rt2x00_field16 __constr_expr_502;
      #line 1342 
      struct rt2x00_field16 tmp_18;
      #line 1342 
      struct rt2x00_field16 tmp_19;
      #line 1342 
      struct rt2x00_field16 tmp_20;
      {
        #line 1342 
        struct rt2x00_field16 __dummy_5;
        #line 1342 
        struct rt2x00_field16 __dummy2_5;
        }
      #line 1342 
      __constr_expr_502 = (struct rt2x00_field16){.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
      #line 1342 
      tmp_18 = __constr_expr_502;
      #line 1342 
      word = (unsigned short)(~ ((int)tmp_18.bit_mask) & (int)word);
      #line 1342 
      __constr_expr_503 = (struct rt2x00_field16){.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
      #line 1342 
      tmp_19 = __constr_expr_503;
      #line 1342 
      __constr_expr_504 = (struct rt2x00_field16){.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
      #line 1342 
      tmp_20 = __constr_expr_504;
      #line 1342 
      word = (unsigned short)(0 | (int)word);
    }
    #line 1343 
    rt2x00_eeprom_write(rt2x00dev,11U,(unsigned short)((int)word));
    {
      #line 1344 
      bool branch;
      #line 1344 
      struct _ddebug __UNIQUE_ID_ddebug573 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1344U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1344 
      branch = arch_static_branch(& __UNIQUE_ID_ddebug573.key.dd_key_false.key,(_Bool)0);
      #line 1344 
      if ((long)((long)((int)branch != 0)) != 0L) 
                                                  #line 1344 
                                                  __dynamic_dev_dbg(& __UNIQUE_ID_ddebug573,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1347 
  word = rt2x00_eeprom_read(rt2x00dev,12U);
  #line 1348 
  if ((unsigned int)word == 65535U) {
    {
      #line 1349 
      struct rt2x00_field16 __constr_expr_506;
      #line 1349 
      struct rt2x00_field16 __constr_expr_507;
      #line 1349 
      struct rt2x00_field16 __constr_expr_505;
      #line 1349 
      struct rt2x00_field16 tmp_22;
      #line 1349 
      struct rt2x00_field16 tmp_23;
      #line 1349 
      struct rt2x00_field16 tmp_24;
      {
        #line 1349 
        struct rt2x00_field16 __dummy_6;
        #line 1349 
        struct rt2x00_field16 __dummy2_6;
        }
      #line 1349 
      __constr_expr_505 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 1349 
      tmp_22 = __constr_expr_505;
      #line 1349 
      word = (unsigned short)(~ ((int)tmp_22.bit_mask) & (int)word);
      #line 1349 
      __constr_expr_506 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 1349 
      tmp_23 = __constr_expr_506;
      #line 1349 
      __constr_expr_507 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)1U};
      #line 1349 
      tmp_24 = __constr_expr_507;
      #line 1349 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1350 
      struct rt2x00_field16 __constr_expr_509;
      #line 1350 
      struct rt2x00_field16 __constr_expr_510;
      #line 1350 
      struct rt2x00_field16 __constr_expr_508;
      #line 1350 
      struct rt2x00_field16 tmp_25;
      #line 1350 
      struct rt2x00_field16 tmp_26;
      #line 1350 
      struct rt2x00_field16 tmp_27;
      {
        #line 1350 
        struct rt2x00_field16 __dummy_7;
        #line 1350 
        struct rt2x00_field16 __dummy2_7;
        }
      #line 1350 
      __constr_expr_508 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 1350 
      tmp_25 = __constr_expr_508;
      #line 1350 
      word = (unsigned short)(~ ((int)tmp_25.bit_mask) & (int)word);
      #line 1350 
      __constr_expr_509 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 1350 
      tmp_26 = __constr_expr_509;
      #line 1350 
      __constr_expr_510 = (struct rt2x00_field16){.bit_offset = (unsigned short)1U, .bit_mask = (unsigned short)2U};
      #line 1350 
      tmp_27 = __constr_expr_510;
      #line 1350 
      word = (unsigned short)(0 | (int)word);
    }
    {
      #line 1351 
      struct rt2x00_field16 __constr_expr_512;
      #line 1351 
      struct rt2x00_field16 __constr_expr_513;
      #line 1351 
      struct rt2x00_field16 __constr_expr_511;
      #line 1351 
      struct rt2x00_field16 tmp_28;
      #line 1351 
      struct rt2x00_field16 tmp_29;
      #line 1351 
      struct rt2x00_field16 tmp_30;
      {
        #line 1351 
        struct rt2x00_field16 __dummy_8;
        #line 1351 
        struct rt2x00_field16 __dummy2_8;
        }
      #line 1351 
      __constr_expr_511 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      #line 1351 
      tmp_28 = __constr_expr_511;
      #line 1351 
      word = (unsigned short)(~ ((int)tmp_28.bit_mask) & (int)word);
      #line 1351 
      __constr_expr_512 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      #line 1351 
      tmp_29 = __constr_expr_512;
      #line 1351 
      __constr_expr_513 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
      #line 1351 
      tmp_30 = __constr_expr_513;
      #line 1351 
      word = (unsigned short)(0 | (int)word);
    }
    #line 1352 
    rt2x00_eeprom_write(rt2x00dev,12U,(unsigned short)((int)word));
    {
      #line 1353 
      bool branch_0;
      #line 1353 
      struct _ddebug __UNIQUE_ID_ddebug574 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1353U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1353 
      branch_0 = arch_static_branch(& __UNIQUE_ID_ddebug574.key.dd_key_false.key,(_Bool)0);
      #line 1353 
      if ((long)((long)((int)branch_0 != 0)) != 0L) 
                                                    #line 1353 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug574,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1356 
  word = rt2x00_eeprom_read(rt2x00dev,54U);
  #line 1357 
  if ((unsigned int)word == 65535U) {
    {
      #line 1358 
      struct rt2x00_field16 __constr_expr_514;
      #line 1358 
      struct rt2x00_field16 __constr_expr_515;
      #line 1358 
      struct rt2x00_field16 __constr_expr_516;
      #line 1358 
      struct rt2x00_field16 tmp_32;
      #line 1358 
      struct rt2x00_field16 tmp_33;
      #line 1358 
      struct rt2x00_field16 tmp_34;
      {
        #line 1358 
        struct rt2x00_field16 __dummy_9;
        #line 1358 
        struct rt2x00_field16 __dummy2_9;
        }
      #line 1358 
      __constr_expr_514 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1358 
      tmp_32 = __constr_expr_514;
      #line 1358 
      word = (unsigned short)(~ ((int)tmp_32.bit_mask) & (int)word);
      #line 1358 
      __constr_expr_515 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1358 
      tmp_33 = __constr_expr_515;
      #line 1358 
      __constr_expr_516 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1358 
      tmp_34 = __constr_expr_516;
      #line 1358 
      word = (unsigned short)(((120 << (int)tmp_33.bit_offset) & (int)tmp_34.bit_mask) | (int)word);
    }
    #line 1360 
    rt2x00_eeprom_write(rt2x00dev,54U,(unsigned short)((int)word));
    {
      #line 1361 
      bool branch_1;
      #line 1361 
      struct _ddebug __UNIQUE_ID_ddebug575 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1361U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1361 
      branch_1 = arch_static_branch(& __UNIQUE_ID_ddebug575.key.dd_key_false.key,(_Bool)0);
      #line 1361 
      if ((long)((long)((int)branch_1 != 0)) != 0L) 
                                                    #line 1361 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug575,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1365 
  word = rt2x00_eeprom_read(rt2x00dev,48U);
  #line 1366 
  if ((unsigned int)word == 65535U) {
    {
      #line 1367 
      struct rt2x00_field16 __constr_expr_517;
      #line 1367 
      struct rt2x00_field16 __constr_expr_518;
      #line 1367 
      struct rt2x00_field16 __constr_expr_519;
      #line 1367 
      struct rt2x00_field16 tmp_36;
      #line 1367 
      struct rt2x00_field16 tmp_37;
      #line 1367 
      struct rt2x00_field16 tmp_38;
      {
        #line 1367 
        struct rt2x00_field16 __dummy_10;
        #line 1367 
        struct rt2x00_field16 __dummy2_10;
        }
      #line 1367 
      __constr_expr_517 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1367 
      tmp_36 = __constr_expr_517;
      #line 1367 
      word = (unsigned short)(~ ((int)tmp_36.bit_mask) & (int)word);
      #line 1367 
      __constr_expr_518 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1367 
      tmp_37 = __constr_expr_518;
      #line 1367 
      __constr_expr_519 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1367 
      tmp_38 = __constr_expr_519;
      #line 1367 
      word = (unsigned short)(((45 << (int)tmp_37.bit_offset) & (int)tmp_38.bit_mask) | (int)word);
    }
    #line 1368 
    rt2x00_eeprom_write(rt2x00dev,48U,(unsigned short)((int)word));
    {
      #line 1369 
      bool branch_2;
      #line 1369 
      struct _ddebug __UNIQUE_ID_ddebug576 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1369U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1369 
      branch_2 = arch_static_branch(& __UNIQUE_ID_ddebug576.key.dd_key_false.key,(_Bool)0);
      #line 1369 
      if ((long)((long)((int)branch_2 != 0)) != 0L) 
                                                    #line 1369 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug576,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1376 
  bbp = rt2500usb_bbp_read(rt2x00dev,17U);
  #line 1377 
  bbp = (unsigned char)((unsigned int)bbp + 250U);
  #line 1379 
  word = rt2x00_eeprom_read(rt2x00dev,52U);
  #line 1380 
  if ((unsigned int)word == 65535U) {
    {
      #line 1381 
      struct rt2x00_field16 __constr_expr_522;
      #line 1381 
      struct rt2x00_field16 __constr_expr_520;
      #line 1381 
      struct rt2x00_field16 __constr_expr_521;
      #line 1381 
      struct rt2x00_field16 tmp_40;
      #line 1381 
      struct rt2x00_field16 tmp_41;
      #line 1381 
      struct rt2x00_field16 tmp_42;
      {
        #line 1381 
        struct rt2x00_field16 __dummy_11;
        #line 1381 
        struct rt2x00_field16 __dummy2_11;
        }
      #line 1381 
      __constr_expr_520 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1381 
      tmp_40 = __constr_expr_520;
      #line 1381 
      word = (unsigned short)(~ ((int)tmp_40.bit_mask) & (int)word);
      #line 1381 
      __constr_expr_521 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1381 
      tmp_41 = __constr_expr_521;
      #line 1381 
      __constr_expr_522 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1381 
      tmp_42 = __constr_expr_522;
      #line 1381 
      word = (unsigned short)(((64 << (int)tmp_41.bit_offset) & (int)tmp_42.bit_mask) | (int)word);
    }
    {
      #line 1382 
      struct rt2x00_field16 __constr_expr_525;
      #line 1382 
      struct rt2x00_field16 __constr_expr_523;
      #line 1382 
      struct rt2x00_field16 __constr_expr_524;
      #line 1382 
      struct rt2x00_field16 tmp_43;
      #line 1382 
      struct rt2x00_field16 tmp_44;
      #line 1382 
      struct rt2x00_field16 tmp_45;
      {
        #line 1382 
        struct rt2x00_field16 __dummy_12;
        #line 1382 
        struct rt2x00_field16 __dummy2_12;
        }
      #line 1382 
      __constr_expr_523 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1382 
      tmp_43 = __constr_expr_523;
      #line 1382 
      word = (unsigned short)(~ ((int)tmp_43.bit_mask) & (int)word);
      #line 1382 
      __constr_expr_524 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1382 
      tmp_44 = __constr_expr_524;
      #line 1382 
      __constr_expr_525 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1382 
      tmp_45 = __constr_expr_525;
      #line 1382 
      word = (unsigned short)((((int)bbp << (int)tmp_44.bit_offset) & (int)tmp_45.bit_mask) | (int)word);
    }
    #line 1383 
    rt2x00_eeprom_write(rt2x00dev,52U,(unsigned short)((int)word));
    {
      #line 1384 
      bool branch_3;
      #line 1384 
      struct _ddebug __UNIQUE_ID_ddebug577 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1384U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1384 
      branch_3 = arch_static_branch(& __UNIQUE_ID_ddebug577.key.dd_key_false.key,(_Bool)0);
      #line 1384 
      if ((long)((long)((int)branch_3 != 0)) != 0L) 
                                                    #line 1384 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug577,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  else {
    {
      #line 1386 
      struct rt2x00_field16 __constr_expr_527;
      #line 1386 
      struct rt2x00_field16 __constr_expr_528;
      #line 1386 
      struct rt2x00_field16 __constr_expr_526;
      #line 1386 
      struct rt2x00_field16 tmp_47;
      #line 1386 
      struct rt2x00_field16 tmp_48;
      #line 1386 
      struct rt2x00_field16 tmp_49;
      {
        #line 1386 
        struct rt2x00_field16 __dummy_13;
        #line 1386 
        struct rt2x00_field16 __dummy2_13;
        }
      #line 1386 
      __constr_expr_526 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1386 
      tmp_47 = __constr_expr_526;
      #line 1386 
      word = (unsigned short)(~ ((int)tmp_47.bit_mask) & (int)word);
      #line 1386 
      __constr_expr_527 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1386 
      tmp_48 = __constr_expr_527;
      #line 1386 
      __constr_expr_528 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1386 
      tmp_49 = __constr_expr_528;
      #line 1386 
      word = (unsigned short)((((int)bbp << (int)tmp_48.bit_offset) & (int)tmp_49.bit_mask) | (int)word);
    }
    #line 1387 
    rt2x00_eeprom_write(rt2x00dev,52U,(unsigned short)((int)word));
  }
  #line 1390 
  word = rt2x00_eeprom_read(rt2x00dev,53U);
  #line 1391 
  if ((unsigned int)word == 65535U) {
    {
      #line 1392 
      struct rt2x00_field16 __constr_expr_530;
      #line 1392 
      struct rt2x00_field16 __constr_expr_531;
      #line 1392 
      struct rt2x00_field16 __constr_expr_529;
      #line 1392 
      struct rt2x00_field16 tmp_50;
      #line 1392 
      struct rt2x00_field16 tmp_51;
      #line 1392 
      struct rt2x00_field16 tmp_52;
      {
        #line 1392 
        struct rt2x00_field16 __dummy_14;
        #line 1392 
        struct rt2x00_field16 __dummy2_14;
        }
      #line 1392 
      __constr_expr_529 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1392 
      tmp_50 = __constr_expr_529;
      #line 1392 
      word = (unsigned short)(~ ((int)tmp_50.bit_mask) & (int)word);
      #line 1392 
      __constr_expr_530 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1392 
      tmp_51 = __constr_expr_530;
      #line 1392 
      __constr_expr_531 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1392 
      tmp_52 = __constr_expr_531;
      #line 1392 
      word = (unsigned short)(((72 << (int)tmp_51.bit_offset) & (int)tmp_52.bit_mask) | (int)word);
    }
    {
      #line 1393 
      struct rt2x00_field16 __constr_expr_533;
      #line 1393 
      struct rt2x00_field16 __constr_expr_534;
      #line 1393 
      struct rt2x00_field16 __constr_expr_532;
      #line 1393 
      struct rt2x00_field16 tmp_53;
      #line 1393 
      struct rt2x00_field16 tmp_54;
      #line 1393 
      struct rt2x00_field16 tmp_55;
      {
        #line 1393 
        struct rt2x00_field16 __dummy_15;
        #line 1393 
        struct rt2x00_field16 __dummy2_15;
        }
      #line 1393 
      __constr_expr_532 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1393 
      tmp_53 = __constr_expr_532;
      #line 1393 
      word = (unsigned short)(~ ((int)tmp_53.bit_mask) & (int)word);
      #line 1393 
      __constr_expr_533 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1393 
      tmp_54 = __constr_expr_533;
      #line 1393 
      __constr_expr_534 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1393 
      tmp_55 = __constr_expr_534;
      #line 1393 
      word = (unsigned short)(((65 << (int)tmp_54.bit_offset) & (int)tmp_55.bit_mask) | (int)word);
    }
    #line 1394 
    rt2x00_eeprom_write(rt2x00dev,53U,(unsigned short)((int)word));
    {
      #line 1395 
      bool branch_4;
      #line 1395 
      struct _ddebug __UNIQUE_ID_ddebug578 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1395U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1395 
      branch_4 = arch_static_branch(& __UNIQUE_ID_ddebug578.key.dd_key_false.key,(_Bool)0);
      #line 1395 
      if ((long)((long)((int)branch_4 != 0)) != 0L) 
                                                    #line 1395 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug578,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1398 
  word = rt2x00_eeprom_read(rt2x00dev,49U);
  #line 1399 
  if ((unsigned int)word == 65535U) {
    {
      #line 1400 
      struct rt2x00_field16 __constr_expr_535;
      #line 1400 
      struct rt2x00_field16 __constr_expr_536;
      #line 1400 
      struct rt2x00_field16 __constr_expr_537;
      #line 1400 
      struct rt2x00_field16 tmp_57;
      #line 1400 
      struct rt2x00_field16 tmp_58;
      #line 1400 
      struct rt2x00_field16 tmp_59;
      {
        #line 1400 
        struct rt2x00_field16 __dummy_16;
        #line 1400 
        struct rt2x00_field16 __dummy2_16;
        }
      #line 1400 
      __constr_expr_535 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1400 
      tmp_57 = __constr_expr_535;
      #line 1400 
      word = (unsigned short)(~ ((int)tmp_57.bit_mask) & (int)word);
      #line 1400 
      __constr_expr_536 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1400 
      tmp_58 = __constr_expr_536;
      #line 1400 
      __constr_expr_537 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1400 
      tmp_59 = __constr_expr_537;
      #line 1400 
      word = (unsigned short)(((64 << (int)tmp_58.bit_offset) & (int)tmp_59.bit_mask) | (int)word);
    }
    {
      #line 1401 
      struct rt2x00_field16 __constr_expr_538;
      #line 1401 
      struct rt2x00_field16 __constr_expr_539;
      #line 1401 
      struct rt2x00_field16 __constr_expr_540;
      #line 1401 
      struct rt2x00_field16 tmp_60;
      #line 1401 
      struct rt2x00_field16 tmp_61;
      #line 1401 
      struct rt2x00_field16 tmp_62;
      {
        #line 1401 
        struct rt2x00_field16 __dummy_17;
        #line 1401 
        struct rt2x00_field16 __dummy2_17;
        }
      #line 1401 
      __constr_expr_538 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1401 
      tmp_60 = __constr_expr_538;
      #line 1401 
      word = (unsigned short)(~ ((int)tmp_60.bit_mask) & (int)word);
      #line 1401 
      __constr_expr_539 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1401 
      tmp_61 = __constr_expr_539;
      #line 1401 
      __constr_expr_540 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1401 
      tmp_62 = __constr_expr_540;
      #line 1401 
      word = (unsigned short)(((128 << (int)tmp_61.bit_offset) & (int)tmp_62.bit_mask) | (int)word);
    }
    #line 1402 
    rt2x00_eeprom_write(rt2x00dev,49U,(unsigned short)((int)word));
    {
      #line 1403 
      bool branch_5;
      #line 1403 
      struct _ddebug __UNIQUE_ID_ddebug579 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1403U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1403 
      branch_5 = arch_static_branch(& __UNIQUE_ID_ddebug579.key.dd_key_false.key,(_Bool)0);
      #line 1403 
      if ((long)((long)((int)branch_5 != 0)) != 0L) 
                                                    #line 1403 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug579,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1406 
  word = rt2x00_eeprom_read(rt2x00dev,50U);
  #line 1407 
  if ((unsigned int)word == 65535U) {
    {
      #line 1408 
      struct rt2x00_field16 __constr_expr_541;
      #line 1408 
      struct rt2x00_field16 __constr_expr_542;
      #line 1408 
      struct rt2x00_field16 __constr_expr_543;
      #line 1408 
      struct rt2x00_field16 tmp_64;
      #line 1408 
      struct rt2x00_field16 tmp_65;
      #line 1408 
      struct rt2x00_field16 tmp_66;
      {
        #line 1408 
        struct rt2x00_field16 __dummy_18;
        #line 1408 
        struct rt2x00_field16 __dummy2_18;
        }
      #line 1408 
      __constr_expr_541 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1408 
      tmp_64 = __constr_expr_541;
      #line 1408 
      word = (unsigned short)(~ ((int)tmp_64.bit_mask) & (int)word);
      #line 1408 
      __constr_expr_542 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1408 
      tmp_65 = __constr_expr_542;
      #line 1408 
      __constr_expr_543 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1408 
      tmp_66 = __constr_expr_543;
      #line 1408 
      word = (unsigned short)(((64 << (int)tmp_65.bit_offset) & (int)tmp_66.bit_mask) | (int)word);
    }
    {
      #line 1409 
      struct rt2x00_field16 __constr_expr_544;
      #line 1409 
      struct rt2x00_field16 __constr_expr_545;
      #line 1409 
      struct rt2x00_field16 __constr_expr_546;
      #line 1409 
      struct rt2x00_field16 tmp_67;
      #line 1409 
      struct rt2x00_field16 tmp_68;
      #line 1409 
      struct rt2x00_field16 tmp_69;
      {
        #line 1409 
        struct rt2x00_field16 __dummy_19;
        #line 1409 
        struct rt2x00_field16 __dummy2_19;
        }
      #line 1409 
      __constr_expr_544 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1409 
      tmp_67 = __constr_expr_544;
      #line 1409 
      word = (unsigned short)(~ ((int)tmp_67.bit_mask) & (int)word);
      #line 1409 
      __constr_expr_545 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1409 
      tmp_68 = __constr_expr_545;
      #line 1409 
      __constr_expr_546 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1409 
      tmp_69 = __constr_expr_546;
      #line 1409 
      word = (unsigned short)(((80 << (int)tmp_68.bit_offset) & (int)tmp_69.bit_mask) | (int)word);
    }
    #line 1410 
    rt2x00_eeprom_write(rt2x00dev,50U,(unsigned short)((int)word));
    {
      #line 1411 
      bool branch_6;
      #line 1411 
      struct _ddebug __UNIQUE_ID_ddebug580 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1411U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1411 
      branch_6 = arch_static_branch(& __UNIQUE_ID_ddebug580.key.dd_key_false.key,(_Bool)0);
      #line 1411 
      if ((long)((long)((int)branch_6 != 0)) != 0L) 
                                                    #line 1411 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug580,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1414 
  word = rt2x00_eeprom_read(rt2x00dev,51U);
  #line 1415 
  if ((unsigned int)word == 65535U) {
    {
      #line 1416 
      struct rt2x00_field16 __constr_expr_549;
      #line 1416 
      struct rt2x00_field16 __constr_expr_547;
      #line 1416 
      struct rt2x00_field16 __constr_expr_548;
      #line 1416 
      struct rt2x00_field16 tmp_71;
      #line 1416 
      struct rt2x00_field16 tmp_72;
      #line 1416 
      struct rt2x00_field16 tmp_73;
      {
        #line 1416 
        struct rt2x00_field16 __dummy_20;
        #line 1416 
        struct rt2x00_field16 __dummy2_20;
        }
      #line 1416 
      __constr_expr_547 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1416 
      tmp_71 = __constr_expr_547;
      #line 1416 
      word = (unsigned short)(~ ((int)tmp_71.bit_mask) & (int)word);
      #line 1416 
      __constr_expr_548 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1416 
      tmp_72 = __constr_expr_548;
      #line 1416 
      __constr_expr_549 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
      #line 1416 
      tmp_73 = __constr_expr_549;
      #line 1416 
      word = (unsigned short)(((96 << (int)tmp_72.bit_offset) & (int)tmp_73.bit_mask) | (int)word);
    }
    {
      #line 1417 
      struct rt2x00_field16 __constr_expr_552;
      #line 1417 
      struct rt2x00_field16 __constr_expr_550;
      #line 1417 
      struct rt2x00_field16 __constr_expr_551;
      #line 1417 
      struct rt2x00_field16 tmp_74;
      #line 1417 
      struct rt2x00_field16 tmp_75;
      #line 1417 
      struct rt2x00_field16 tmp_76;
      {
        #line 1417 
        struct rt2x00_field16 __dummy_21;
        #line 1417 
        struct rt2x00_field16 __dummy2_21;
        }
      #line 1417 
      __constr_expr_550 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1417 
      tmp_74 = __constr_expr_550;
      #line 1417 
      word = (unsigned short)(~ ((int)tmp_74.bit_mask) & (int)word);
      #line 1417 
      __constr_expr_551 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1417 
      tmp_75 = __constr_expr_551;
      #line 1417 
      __constr_expr_552 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)65280U};
      #line 1417 
      tmp_76 = __constr_expr_552;
      #line 1417 
      word = (unsigned short)(((109 << (int)tmp_75.bit_offset) & (int)tmp_76.bit_mask) | (int)word);
    }
    #line 1418 
    rt2x00_eeprom_write(rt2x00dev,51U,(unsigned short)((int)word));
    {
      #line 1419 
      bool branch_7;
      #line 1419 
      struct _ddebug __UNIQUE_ID_ddebug581 = {.modname = (char *)"rt2500usb", .function = (char *)"rt2500usb_validate_eeprom", .filename = (char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c", .format = (char *)"%s: EEPROM recovery - ", .lineno = (unsigned int)1419U, .flags = (unsigned int)0U, .key = {.dd_key_false = {.key = {.enabled = {.counter = 0}, .__anonCompField_static_key_4 = {.entries = (struct jump_entry *)0}}}}};
      #line 1419 
      branch_7 = arch_static_branch(& __UNIQUE_ID_ddebug581.key.dd_key_false.key,(_Bool)0);
      #line 1419 
      if ((long)((long)((int)branch_7 != 0)) != 0L) 
                                                    #line 1419 
                                                    __dynamic_dev_dbg(& __UNIQUE_ID_ddebug581,& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: EEPROM recovery - ",(char *)"rt2500usb_validate_eeprom",(int)word);
    }
  }
  #line 1422 
  return 0;
}

#line 1425  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_init_eeprom(struct rt2x00_dev *rt2x00dev)
{
  #line 1481 
  struct rt2x00_field16 tmp_17;
  #line 1462 
  struct rt2x00_field16 __constr_expr_555;
  #line 1464 
  struct rt2x00_field16 __constr_expr_558;
  #line 1462 
  struct rt2x00_field16 tmp_10;
  #line 1464 
  struct rt2x00_field16 tmp_14;
  #line 1502 
  struct rt2x00_field16 __constr_expr_563;
  #line 1462 
  struct rt2x00_field16 __constr_expr_556;
  #line 1502 
  struct rt2x00_field16 tmp_22;
  #line 1462 
  struct rt2x00_field16 tmp_11;
  #line 1494 
  struct rt2x00_field16 __constr_expr_561;
  #line 1502 
  struct rt2x00_field16 __constr_expr_564;
  #line 1494 
  struct rt2x00_field16 tmp_19;
  #line 1439 
  struct rt2x00_field16 __constr_expr_553;
  #line 1502 
  struct rt2x00_field16 tmp_23;
  #line 1439 
  struct rt2x00_field16 tmp;
  #line 1481 
  struct rt2x00_field16 __constr_expr_559;
  #line 1494 
  struct rt2x00_field16 __constr_expr_562;
  #line 1481 
  struct rt2x00_field16 tmp_16;
  #line 1494 
  struct rt2x00_field16 tmp_20;
  #line 1439 
  struct rt2x00_field16 __constr_expr_554;
  #line 1464 
  struct rt2x00_field16 __constr_expr_557;
  #line 1439 
  struct rt2x00_field16 tmp_0;
  #line 1481 
  struct rt2x00_field16 __constr_expr_560;
  #line 1464 
  struct rt2x00_field16 tmp_13;
  #line 1427 
  u16 reg;
  #line 1428 
  u16 value;
  #line 1429 
  u16 eeprom;
  #line 1434 
  eeprom = rt2x00_eeprom_read(rt2x00dev,11U);
  {
    #line 1439 
    struct rt2x00_field16 __dummy;
    #line 1439 
    struct rt2x00_field16 __dummy2;
    }
  #line 1439 
  __constr_expr_553 = (struct rt2x00_field16){.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
  #line 1439 
  tmp = __constr_expr_553;
  #line 1439 
  __constr_expr_554 = (struct rt2x00_field16){.bit_offset = (unsigned short)11U, .bit_mask = (unsigned short)63488U};
  #line 1439 
  tmp_0 = __constr_expr_554;
  #line 1439 
  ;
  #line 1439 
  value = (unsigned short)(((int)tmp.bit_mask & (int)eeprom) >> (int)tmp_0.bit_offset);
  #line 1440 
  reg = rt2500usb_register_read(rt2x00dev,1024U);
  #line 1441 
  rt2x00_set_chip(rt2x00dev,(unsigned short)9584,(unsigned short)((int)value),(unsigned short)((int)reg));
  #line 1443 
  if (((int)reg & 65520) != 0 || ((int)reg & 15) == 0) {
    {
      #line 1444 
      struct ratelimit_state _rs = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
      #line 1444 
      if (___ratelimit(& _rs,(char *)"rt2500usb_init_eeprom") != 0) 
                                                                    #line 1444 
                                                                    _dev_err(& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: Error - ",(char *)"rt2500usb_init_eeprom");
    }
    #line 1445 
    return -19;
  }
  #line 1448 
  if (! rt2x00_rf(rt2x00dev,(unsigned short)0)) {
    #line 1449 
    if (! rt2x00_rf(rt2x00dev,(unsigned short)1)) {
      #line 1450 
      if (! rt2x00_rf(rt2x00dev,(unsigned short)2)) {
        #line 1451 
        if (! rt2x00_rf(rt2x00dev,(unsigned short)3)) {
          #line 1452 
          if (! rt2x00_rf(rt2x00dev,(unsigned short)5)) {
            #line 1453 
            if (! rt2x00_rf(rt2x00dev,(unsigned short)16)) {
              {
                #line 1454 
                struct ratelimit_state _rs_0 = {.lock = {.raw_lock = {.__anonCompField_qspinlock_9 = {.val = {.counter = 0}}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char *)"_rs.lock", .cpu = 0, .ip = 0UL}}, .interval = 1250, .burst = 10, .printed = 0, .missed = 0, .begin = 0UL, .flags = 0UL};
                #line 1454 
                if (___ratelimit(& _rs_0,(char *)"rt2500usb_init_eeprom") != 0) 
                  #line 1454 
                  _dev_err(& ((rt2x00dev->hw)->wiphy)->dev,(char *)"%s: Error - ",(char *)"rt2500usb_init_eeprom");
              }
              #line 1455 
              return -19;
            }
          }
        }
      }
    }
  }
  {
    #line 1462 
    struct rt2x00_field16 __dummy_0;
    #line 1462 
    struct rt2x00_field16 __dummy2_0;
    }
  #line 1462 
  __constr_expr_555 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
  #line 1462 
  tmp_10 = __constr_expr_555;
  #line 1462 
  __constr_expr_556 = (struct rt2x00_field16){.bit_offset = (unsigned short)2U, .bit_mask = (unsigned short)12U};
  #line 1462 
  tmp_11 = __constr_expr_556;
  #line 1462 
  ;
  #line 1461 
  rt2x00dev->default_ant.tx = (enum antenna)(((int)tmp_10.bit_mask & (int)eeprom) >> (int)tmp_11.bit_offset);
  {
    #line 1464 
    struct rt2x00_field16 __dummy_1;
    #line 1464 
    struct rt2x00_field16 __dummy2_1;
    }
  #line 1464 
  __constr_expr_557 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
  #line 1464 
  tmp_13 = __constr_expr_557;
  #line 1464 
  __constr_expr_558 = (struct rt2x00_field16){.bit_offset = (unsigned short)4U, .bit_mask = (unsigned short)48U};
  #line 1464 
  tmp_14 = __constr_expr_558;
  #line 1464 
  ;
  #line 1463 
  rt2x00dev->default_ant.rx = (enum antenna)(((int)tmp_13.bit_mask & (int)eeprom) >> (int)tmp_14.bit_offset);
  #line 1472 
  if (rt2x00dev->default_ant.tx == (unsigned int)ANTENNA_SW_DIVERSITY) 
    #line 1473 
    rt2x00dev->default_ant.tx = ANTENNA_HW_DIVERSITY;
  #line 1474 
  if (rt2x00dev->default_ant.rx == (unsigned int)ANTENNA_SW_DIVERSITY) 
    #line 1475 
    rt2x00dev->default_ant.rx = ANTENNA_HW_DIVERSITY;
  {
    #line 1481 
    struct rt2x00_field16 __dummy_2;
    #line 1481 
    struct rt2x00_field16 __dummy2_2;
    }
  #line 1481 
  __constr_expr_559 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
  #line 1481 
  tmp_16 = __constr_expr_559;
  #line 1481 
  __constr_expr_560 = (struct rt2x00_field16){.bit_offset = (unsigned short)6U, .bit_mask = (unsigned short)448U};
  #line 1481 
  tmp_17 = __constr_expr_560;
  #line 1481 
  ;
  #line 1481 
  value = (unsigned short)(((int)tmp_16.bit_mask & (int)eeprom) >> (int)tmp_17.bit_offset);
  #line 1483 
  rt2500usb_init_led(rt2x00dev,& rt2x00dev->led_radio,(enum led_type)LED_TYPE_RADIO);
  #line 1484 
  if ((unsigned int)value <= 1U || (unsigned int)value == 3U) 
                                                              #line 1487 
                                                              rt2500usb_init_led(rt2x00dev,& rt2x00dev->led_qual,(enum led_type)LED_TYPE_ACTIVITY);
  {
    #line 1494 
    struct rt2x00_field16 __dummy_3;
    #line 1494 
    struct rt2x00_field16 __dummy2_3;
    }
  #line 1494 
  __constr_expr_561 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
  #line 1494 
  tmp_19 = __constr_expr_561;
  #line 1494 
  __constr_expr_562 = (struct rt2x00_field16){.bit_offset = (unsigned short)10U, .bit_mask = (unsigned short)1024U};
  #line 1494 
  tmp_20 = __constr_expr_562;
  #line 1494 
  ;
  #line 1494 
  if ((((int)tmp_19.bit_mask & (int)eeprom) >> (int)tmp_20.bit_offset) != 0) 
    #line 1495 
    __set_bit(12L,& rt2x00dev->cap_flags);
  #line 1500 
  eeprom = rt2x00_eeprom_read(rt2x00dev,54U);
  {
    #line 1502 
    struct rt2x00_field16 __dummy_4;
    #line 1502 
    struct rt2x00_field16 __dummy2_4;
    }
  #line 1502 
  __constr_expr_563 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 1502 
  tmp_22 = __constr_expr_563;
  #line 1502 
  __constr_expr_564 = (struct rt2x00_field16){.bit_offset = (unsigned short)0U, .bit_mask = (unsigned short)255U};
  #line 1502 
  tmp_23 = __constr_expr_564;
  #line 1502 
  ;
  #line 1501 
  rt2x00dev->rssi_offset = (unsigned char)(((int)tmp_22.bit_mask & (int)eeprom) >> (int)tmp_23.bit_offset);
  #line 1504 
  return 0;
}

#line 1511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rf_channel rf_vals_bg_2522[14U] = {{.channel = 1, .rf1 = 8272U, .rf2 = 794586U, .rf3 = 257U}, {.channel = 2, .rf1 = 8272U, .rf2 = 794606U, .rf3 = 257U}, {.channel = 3, .rf1 = 8272U, .rf2 = 794626U, .rf3 = 257U}, {.channel = 4, .rf1 = 8272U, .rf2 = 794646U, .rf3 = 257U}, {.channel = 5, .rf1 = 8272U, .rf2 = 794666U, .rf3 = 257U}, {.channel = 6, .rf1 = 8272U, .rf2 = 794686U, .rf3 = 257U}, {.channel = 7, .rf1 = 8272U, .rf2 = 794706U, .rf3 = 257U}, {.channel = 8, .rf1 = 8272U, .rf2 = 794726U, .rf3 = 257U}, {.channel = 9, .rf1 = 8272U, .rf2 = 794746U, .rf3 = 257U}, {.channel = 10, .rf1 = 8272U, .rf2 = 794766U, .rf3 = 257U}, {.channel = 11, .rf1 = 8272U, .rf2 = 794786U, .rf3 = 257U}, {.channel = 12, .rf1 = 8272U, .rf2 = 794806U, .rf3 = 257U}, {.channel = 13, .rf1 = 8272U, .rf2 = 794826U, .rf3 = 257U}, {.channel = 14, .rf1 = 8272U, .rf2 = 794874U, .rf3 = 257U}};
#line 1532  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rf_channel rf_vals_bg_2523[14U] = {{.channel = 1, .rf1 = 139280U, .rf2 = 3230U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 2, .rf1 = 139280U, .rf2 = 3234U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 3, .rf1 = 139280U, .rf2 = 3238U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 4, .rf1 = 139280U, .rf2 = 3242U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 5, .rf1 = 139280U, .rf2 = 3246U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 6, .rf1 = 139280U, .rf2 = 3250U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 7, .rf1 = 139280U, .rf2 = 3254U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 8, .rf1 = 139280U, .rf2 = 3258U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 9, .rf1 = 139280U, .rf2 = 3262U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 10, .rf1 = 139280U, .rf2 = 3330U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 11, .rf1 = 139280U, .rf2 = 3334U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 12, .rf1 = 139280U, .rf2 = 3338U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 13, .rf1 = 139280U, .rf2 = 3342U, .rf3 = 917777U, .rf4 = 2587U}, {.channel = 14, .rf1 = 139280U, .rf2 = 3354U, .rf3 = 917777U, .rf4 = 2563U}};
#line 1553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rf_channel rf_vals_bg_2524[14U] = {{.channel = 1, .rf1 = 204832U, .rf2 = 3230U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 2, .rf1 = 204832U, .rf2 = 3234U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 3, .rf1 = 204832U, .rf2 = 3238U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 4, .rf1 = 204832U, .rf2 = 3242U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 5, .rf1 = 204832U, .rf2 = 3246U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 6, .rf1 = 204832U, .rf2 = 3250U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 7, .rf1 = 204832U, .rf2 = 3254U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 8, .rf1 = 204832U, .rf2 = 3258U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 9, .rf1 = 204832U, .rf2 = 3262U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 10, .rf1 = 204832U, .rf2 = 3330U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 11, .rf1 = 204832U, .rf2 = 3334U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 12, .rf1 = 204832U, .rf2 = 3338U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 13, .rf1 = 204832U, .rf2 = 3342U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 14, .rf1 = 204832U, .rf2 = 3354U, .rf3 = 257U, .rf4 = 2563U}};
#line 1574  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rf_channel rf_vals_bg_2525[14U] = {{.channel = 1, .rf1 = 139296U, .rf2 = 527518U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 2, .rf1 = 139296U, .rf2 = 527522U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 3, .rf1 = 139296U, .rf2 = 527526U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 4, .rf1 = 139296U, .rf2 = 527530U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 5, .rf1 = 139296U, .rf2 = 527534U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 6, .rf1 = 139296U, .rf2 = 527538U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 7, .rf1 = 139296U, .rf2 = 527542U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 8, .rf1 = 139296U, .rf2 = 527546U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 9, .rf1 = 139296U, .rf2 = 527550U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 10, .rf1 = 139296U, .rf2 = 527618U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 11, .rf1 = 139296U, .rf2 = 527622U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 12, .rf1 = 139296U, .rf2 = 527626U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 13, .rf1 = 139296U, .rf2 = 527630U, .rf3 = 393489U, .rf4 = 2587U}, {.channel = 14, .rf1 = 139296U, .rf2 = 527642U, .rf3 = 393489U, .rf4 = 2563U}};
#line 1595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rf_channel rf_vals_bg_2525e[14U] = {{.channel = 1, .rf1 = 139280U, .rf2 = 2202U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 2, .rf1 = 139280U, .rf2 = 2206U, .rf3 = 393489U, .rf4 = 3591U}, {.channel = 3, .rf1 = 139280U, .rf2 = 2206U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 4, .rf1 = 139280U, .rf2 = 2210U, .rf3 = 393489U, .rf4 = 3591U}, {.channel = 5, .rf1 = 139280U, .rf2 = 2210U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 6, .rf1 = 139280U, .rf2 = 2214U, .rf3 = 393489U, .rf4 = 3591U}, {.channel = 7, .rf1 = 139280U, .rf2 = 2214U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 8, .rf1 = 139280U, .rf2 = 2218U, .rf3 = 393489U, .rf4 = 3591U}, {.channel = 9, .rf1 = 139280U, .rf2 = 2218U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 10, .rf1 = 139280U, .rf2 = 2222U, .rf3 = 393489U, .rf4 = 3591U}, {.channel = 11, .rf1 = 139280U, .rf2 = 2222U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 12, .rf1 = 139280U, .rf2 = 2226U, .rf3 = 393489U, .rf4 = 3591U}, {.channel = 13, .rf1 = 139280U, .rf2 = 2226U, .rf3 = 393489U, .rf4 = 3611U}, {.channel = 14, .rf1 = 139280U, .rf2 = 2230U, .rf3 = 393489U, .rf4 = 3619U}};
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rf_channel rf_vals_5222[37U] = {{.channel = 1, .rf1 = 139296U, .rf2 = 4406U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 2, .rf1 = 139296U, .rf2 = 4410U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 3, .rf1 = 139296U, .rf2 = 4414U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 4, .rf1 = 139296U, .rf2 = 4482U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 5, .rf1 = 139296U, .rf2 = 4486U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 6, .rf1 = 139296U, .rf2 = 4490U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 7, .rf1 = 139296U, .rf2 = 4494U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 8, .rf1 = 139296U, .rf2 = 4498U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 9, .rf1 = 139296U, .rf2 = 4502U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 10, .rf1 = 139296U, .rf2 = 4506U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 11, .rf1 = 139296U, .rf2 = 4510U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 12, .rf1 = 139296U, .rf2 = 4514U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 13, .rf1 = 139296U, .rf2 = 4518U, .rf3 = 257U, .rf4 = 2571U}, {.channel = 14, .rf1 = 139296U, .rf2 = 4526U, .rf3 = 257U, .rf4 = 2587U}, {.channel = 36, .rf1 = 139280U, .rf2 = 100502U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 40, .rf1 = 139280U, .rf2 = 100506U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 44, .rf1 = 139280U, .rf2 = 100510U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 48, .rf1 = 139280U, .rf2 = 100514U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 52, .rf1 = 139280U, .rf2 = 100518U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 66, .rf1 = 139280U, .rf2 = 100522U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 60, .rf1 = 139280U, .rf2 = 100526U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 64, .rf1 = 139280U, .rf2 = 100530U, .rf3 = 257U, .rf4 = 2591U}, {.channel = 100, .rf1 = 139280U, .rf2 = 34818U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 104, .rf1 = 139280U, .rf2 = 34822U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 108, .rf1 = 139280U, .rf2 = 34826U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 112, .rf1 = 139280U, .rf2 = 34830U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 116, .rf1 = 139280U, .rf2 = 34834U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 120, .rf1 = 139280U, .rf2 = 34838U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 124, .rf1 = 139280U, .rf2 = 34842U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 128, .rf1 = 139280U, .rf2 = 34846U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 132, .rf1 = 139280U, .rf2 = 34850U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 136, .rf1 = 139280U, .rf2 = 34854U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 140, .rf1 = 139280U, .rf2 = 34858U, .rf3 = 257U, .rf4 = 2575U}, {.channel = 149, .rf1 = 139296U, .rf2 = 37030U, .rf3 = 257U, .rf4 = 2567U}, {.channel = 153, .rf1 = 139296U, .rf2 = 37038U, .rf3 = 257U, .rf4 = 2567U}, {.channel = 157, .rf1 = 139296U, .rf2 = 37046U, .rf3 = 257U, .rf4 = 2567U}, {.channel = 161, .rf1 = 139296U, .rf2 = 37054U, .rf3 = 257U, .rf4 = 2567U}};
#line 1662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_probe_hw_mode(struct rt2x00_dev *rt2x00dev)
{
  #line 1665 
  struct channel_info *info;
  #line 1666 
  char *tx_power;
  #line 1667 
  unsigned int i;
  #line 1664 
  struct hw_mode_spec *spec = & rt2x00dev->spec;
  #line 1678 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_PS_NULLFUNC_STACK);
  #line 1679 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_SUPPORTS_PS);
  #line 1680 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS);
  #line 1681 
  _ieee80211_hw_set(rt2x00dev->hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  #line 1686 
  ((rt2x00dev->hw)->wiphy)->flags &= 4294967279U;
  #line 1688 
  SET_IEEE80211_DEV(rt2x00dev->hw,rt2x00dev->dev);
  #line 1689 
  ;
  #line 1689 
  SET_IEEE80211_PERM_ADDR(rt2x00dev->hw,(u8 *)rt2x00_eeprom_addr(rt2x00dev,2U));
  #line 1696 
  spec->supported_bands = 1U;
  #line 1697 
  spec->supported_rates = 3U;
  #line 1699 
  if ((int)rt2x00_rf(rt2x00dev,(unsigned short)0) != 0) {
    #line 1700 
    spec->num_channels = 14U;
    #line 1701 
    spec->channels = (struct rf_channel *)(& rf_vals_bg_2522);
  }
  else {
    #line 1702 
    if ((int)rt2x00_rf(rt2x00dev,(unsigned short)1) != 0) {
      #line 1703 
      spec->num_channels = 14U;
      #line 1704 
      spec->channels = (struct rf_channel *)(& rf_vals_bg_2523);
    }
    else {
      #line 1705 
      if ((int)rt2x00_rf(rt2x00dev,(unsigned short)2) != 0) {
        #line 1706 
        spec->num_channels = 14U;
        #line 1707 
        spec->channels = (struct rf_channel *)(& rf_vals_bg_2524);
      }
      else {
        #line 1708 
        if ((int)rt2x00_rf(rt2x00dev,(unsigned short)3) != 0) {
          #line 1709 
          spec->num_channels = 14U;
          #line 1710 
          spec->channels = (struct rf_channel *)(& rf_vals_bg_2525);
        }
        else {
          #line 1711 
          if ((int)rt2x00_rf(rt2x00dev,(unsigned short)5) != 0) {
            #line 1712 
            spec->num_channels = 14U;
            #line 1713 
            spec->channels = (struct rf_channel *)(& rf_vals_bg_2525e);
          }
          else {
            #line 1714 
            if ((int)rt2x00_rf(rt2x00dev,(unsigned short)16) != 0) {
              #line 1715 
              spec->supported_bands |= 2U;
              #line 1716 
              spec->num_channels = 37U;
              #line 1717 
              spec->channels = (struct rf_channel *)(& rf_vals_5222);
            }
          }
        }
      }
    }
  }
  #line 1723 
  info = (struct channel_info *)kcalloc((unsigned long)spec->num_channels,12UL,3264U);
  #line 1724 
  if (info == (struct channel_info *)0) 
                                        #line 1725 
                                        return -12;
  #line 1727 
  spec->channels_info = info;
  #line 1729 
  tx_power = (char *)rt2x00_eeprom_addr(rt2x00dev,30U);
  #line 1730 
  i = 0U;
  #line 1730 
  while (i <= 13U) {
    #line 1731 
    (info + (unsigned long)i)->max_power = (short)31;
    #line 1732 
    if ((unsigned int)((unsigned char)*(tx_power + (unsigned long)i)) <= 31U) 
      #line 1732 
      (info + (unsigned long)i)->default_power1 = (short)*(tx_power + (unsigned long)i); else 
                                                                    #line 1732 
                                                                    (info + (unsigned long)i)->default_power1 = (short)24;
    #line 1730 
    i ++;
  }
  #line 1735 
  if (spec->num_channels > 14U) {
    #line 1736 
    i = 14U;
    #line 1736 
    while (spec->num_channels > i) {
      #line 1737 
      (info + (unsigned long)i)->max_power = (short)31;
      #line 1738 
      (info + (unsigned long)i)->default_power1 = (short)24;
      #line 1736 
      i ++;
    }
  }
  #line 1742 
  return 0;
}

#line 1745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_probe_hw(struct rt2x00_dev *rt2x00dev)
{
  #line 1747 
  int retval;
  #line 1748 
  u16 reg;
  #line 1753 
  retval = rt2500usb_validate_eeprom(rt2x00dev);
  #line 1754 
  if (retval != 0) 
                   #line 1755 
                   return retval;
  #line 1757 
  retval = rt2500usb_init_eeprom(rt2x00dev);
  #line 1758 
  if (retval != 0) 
                   #line 1759 
                   return retval;
  #line 1765 
  reg = rt2500usb_register_read(rt2x00dev,1062U);
  {
    #line 1766 
    struct rt2x00_field16 __constr_expr_565;
    #line 1766 
    struct rt2x00_field16 __constr_expr_566;
    #line 1766 
    struct rt2x00_field16 __constr_expr_567;
    #line 1766 
    struct rt2x00_field16 tmp;
    #line 1766 
    struct rt2x00_field16 tmp_0;
    #line 1766 
    struct rt2x00_field16 tmp_1;
    {
      #line 1766 
      struct rt2x00_field16 __dummy;
      #line 1766 
      struct rt2x00_field16 __dummy2;
      }
    #line 1766 
    __constr_expr_565 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)256U};
    #line 1766 
    tmp = __constr_expr_565;
    #line 1766 
    reg = (unsigned short)(~ ((int)tmp.bit_mask) & (int)reg);
    #line 1766 
    __constr_expr_566 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)256U};
    #line 1766 
    tmp_0 = __constr_expr_566;
    #line 1766 
    __constr_expr_567 = (struct rt2x00_field16){.bit_offset = (unsigned short)8U, .bit_mask = (unsigned short)256U};
    #line 1766 
    tmp_1 = __constr_expr_567;
    #line 1766 
    reg = (unsigned short)(0 | (int)reg);
  }
  #line 1767 
  rt2500usb_register_write(rt2x00dev,1062U,(unsigned short)((int)reg));
  #line 1772 
  retval = rt2500usb_probe_hw_mode(rt2x00dev);
  #line 1773 
  if (retval != 0) 
                   #line 1774 
                   return retval;
  #line 1779 
  __set_bit(2L,& rt2x00dev->cap_flags);
  #line 1780 
  __set_bit(1L,& rt2x00dev->cap_flags);
  #line 1781 
  if (! modparam_nohwcrypt) {
    #line 1782 
    __set_bit(13L,& rt2x00dev->cap_flags);
    #line 1783 
    __set_bit(4L,& rt2x00dev->cap_flags);
  }
  #line 1785 
  __set_bit(8L,& rt2x00dev->cap_flags);
  #line 1786 
  __set_bit(10L,& rt2x00dev->cap_flags);
  #line 1791 
  rt2x00dev->rssi_offset = (unsigned char)120U;
  #line 1793 
  return 0;
}

#line 1796  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct ieee80211_ops rt2500usb_mac80211_ops = {.tx = & rt2x00mac_tx, .start = & rt2x00mac_start, .stop = & rt2x00mac_stop, .add_interface = & rt2x00mac_add_interface, .remove_interface = & rt2x00mac_remove_interface, .config = & rt2x00mac_config, .bss_info_changed = & rt2x00mac_bss_info_changed, .configure_filter = & rt2x00mac_configure_filter, .set_tim = & rt2x00mac_set_tim, .set_key = & rt2x00mac_set_key, .sw_scan_start = & rt2x00mac_sw_scan_start, .sw_scan_complete = & rt2x00mac_sw_scan_complete, .get_stats = & rt2x00mac_get_stats, .conf_tx = & rt2x00mac_conf_tx, .rfkill_poll = & rt2x00mac_rfkill_poll, .flush = & rt2x00mac_flush, .set_antenna = & rt2x00mac_set_antenna, .get_antenna = & rt2x00mac_get_antenna, .get_ringparam = & rt2x00mac_get_ringparam, .tx_frames_pending = & rt2x00mac_tx_frames_pending};
#line 1819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rt2x00lib_ops rt2500usb_rt2x00_ops = {.probe_hw = & rt2500usb_probe_hw, .initialize = & rt2x00usb_initialize, .uninitialize = & rt2x00usb_uninitialize, .clear_entry = & rt2x00usb_clear_entry, .set_device_state = & rt2500usb_set_device_state, .rfkill_poll = & rt2500usb_rfkill_poll, .link_stats = & rt2500usb_link_stats, .reset_tuner = & rt2500usb_reset_tuner, .watchdog = & rt2x00usb_watchdog, .start_queue = & rt2500usb_start_queue, .kick_queue = & rt2x00usb_kick_queue, .stop_queue = & rt2500usb_stop_queue, .flush_queue = & rt2x00usb_flush_queue, .write_tx_desc = & rt2500usb_write_tx_desc, .write_beacon = & rt2500usb_write_beacon, .get_tx_data_len = & rt2500usb_get_tx_data_len, .fill_rxdone = & rt2500usb_fill_rxdone, .config_shared_key = & rt2500usb_config_key, .config_pairwise_key = & rt2500usb_config_key, .config_filter = & rt2500usb_config_filter, .config_intf = & rt2500usb_config_intf, .config_erp = & rt2500usb_config_erp, .config_ant = & rt2500usb_config_ant, .config = & rt2500usb_config};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_queue_init(struct data_queue *queue)
{
  #line 1848 
  switch ((unsigned int)queue->qid) {
    #line 1849 
    case (unsigned int)14: 
                           #line 1849 
    ;
    #line 1850 
    queue->limit = (unsigned short)32U;
    #line 1851 
    queue->data_size = (unsigned short)2432U;
    #line 1852 
    queue->desc_size = (unsigned char)16U;
    #line 1853 
    queue->priv_size = (unsigned short)8U;
    #line 1854 
    break;
    #line 1856 
    case (unsigned int)0: 
                          #line 1856 
    ;
    #line 1857 
    case (unsigned int)1: 
                          #line 1857 
    ;
    #line 1858 
    case (unsigned int)2: 
                          #line 1858 
    ;
    #line 1859 
    case (unsigned int)3: 
                          #line 1859 
    ;
    #line 1860 
    queue->limit = (unsigned short)32U;
    #line 1861 
    queue->data_size = (unsigned short)2432U;
    #line 1862 
    queue->desc_size = (unsigned char)20U;
    #line 1863 
    queue->priv_size = (unsigned short)8U;
    #line 1864 
    break;
    #line 1866 
    case (unsigned int)16: 
                           #line 1866 
    ;
    #line 1867 
    queue->limit = (unsigned short)1U;
    #line 1868 
    queue->data_size = (unsigned short)256U;
    #line 1869 
    queue->desc_size = (unsigned char)20U;
    #line 1870 
    queue->priv_size = (unsigned short)24U;
    #line 1871 
    break;
    #line 1873 
    case (unsigned int)17: 
                           #line 1873 
    ;
    #line 1874 
    queue->limit = (unsigned short)8U;
    #line 1875 
    queue->data_size = (unsigned short)2432U;
    #line 1876 
    queue->desc_size = (unsigned char)20U;
    #line 1877 
    queue->priv_size = (unsigned short)8U;
    #line 1878 
    break;
    #line 1880 
    default: 
             #line 1880 
    ;
    #line 1882 
    ldv_inline_asm();
    #line 1883 
    ldv_inline_asm();
    #line 1884 
    ldv_inline_asm();
    #line 1881 
    ;
    #line 1882 
    break;
  }
  #line 1884 
  return;
}

#line 1886  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct rt2x00_ops rt2500usb_ops = {.name = (char *)"rt2500usb", .max_ap_intf = 1U, .eeprom_size = 110U, .rf_size = 16U, .tx_queues = 2U, .queue_init = & rt2500usb_queue_init, .lib = & rt2500usb_rt2x00_ops, .hw = & rt2500usb_mac80211_ops, .debugfs = & rt2500usb_rt2x00debug};
#line 1903  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct usb_device_id rt2500usb_device_table[32U] = {{.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2821U, .idProduct = (unsigned short)5894U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)2821U, .idProduct = (unsigned short)5895U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)28752U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1293U, .idProduct = (unsigned short)28753U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)13U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)17U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5041U, .idProduct = (unsigned short)26U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5298U, .idProduct = (unsigned short)15362U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)8193U, .idProduct = (unsigned short)15360U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)4164U, .idProduct = (unsigned short)32769U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)4164U, .idProduct = (unsigned short)32775U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1784U, .idProduct = (unsigned short)57344U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)94U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)102U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)103U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)139U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1041U, .idProduct = (unsigned short)151U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3504U, .idProduct = (unsigned short)26721U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3504U, .idProduct = (unsigned short)26725U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3504U, .idProduct = (unsigned short)26729U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5263U, .idProduct = (unsigned short)5894U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5263U, .idProduct = (unsigned short)9584U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)5263U, .idProduct = (unsigned short)36896U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1947U, .idProduct = (unsigned short)75U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1665U, .idProduct = (unsigned short)15366U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1799U, .idProduct = (unsigned short)60947U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)4427U, .idProduct = (unsigned short)272U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)1897U, .idProduct = (unsigned short)4595U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3760U, .idProduct = (unsigned short)36896U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)3976U, .idProduct = (unsigned short)12306U}, {.match_flags = (unsigned short)3U, .idVendor = (unsigned short)23127U, .idProduct = (unsigned short)608U}};
#line 1960  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
struct usb_device_id __mod_usb__rt2500usb_device_table_device_table[32U];
#line 1963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_probe(struct usb_interface *usb_intf, struct usb_device_id *id)
{
  #line 1966 
  return rt2x00usb_probe(usb_intf,& rt2500usb_ops);
}

#line 1969  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static struct usb_driver rt2500usb_driver = {.name = (char *)"rt2500usb", .probe = & rt2500usb_probe, .disconnect = & rt2x00usb_disconnect, .suspend = & rt2x00usb_suspend, .resume = & rt2x00usb_resume, .reset_resume = & rt2x00usb_resume, .id_table = (struct usb_device_id *)(& rt2500usb_device_table), .disable_hub_initiated_lpm = (unsigned int)1U};
#line 1980  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static int rt2500usb_driver_init(void)
{
  #line 1980 
  return cif_usb_register_driver(& rt2500usb_driver,& __this_module,
                              (char *)"rt2500usb");
}

#line 1980  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/ralink/rt2x00/rt2500usb.c"
static void rt2500usb_driver_exit(void)
{
  #line 1980 
  cif_usb_deregister(& rt2500usb_driver);
  #line 1981 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
struct usb_device_id (*emg_alias_rt2500usb_device_table)[32U] = & rt2500usb_device_table;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
struct usb_driver *emg_alias_rt2500usb_driver = & rt2500usb_driver;
#line 97 
#line 97 
void emg_usb_deregister(struct usb_driver *arg0);
#line 98 
#line 98 
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2);
#line 99 
#line 99 
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1);
#line 103  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
int emg_wrapper_rt2500usb_probe(struct usb_interface *arg0, struct usb_device_id *arg1)
{
  #line 104 
  return rt2500usb_probe(arg0,arg1);
}

#line 108  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
void emg_rt2500usb_driver_exit(void)
{
  #line 109 
  rt2500usb_driver_exit();
  #line 110 
  return;
}

#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
int emg_rt2500usb_driver_init(void)
{
  #line 113 
  return rt2500usb_driver_init();
}

#line 410  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 413 
  return ldv_kcalloc(n,size,flags);
}

#line 802  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void cif_mutex_lock_csr_mutex_of_rt2x00_dev(struct mutex *lock)
{
  #line 805 
  ldv_mutex_model_lock(lock,(char *)"csr_mutex_of_rt2x00_dev");
  #line 806 
  return;
}

#line 809  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void cif_mutex_unlock_csr_mutex_of_rt2x00_dev(struct mutex *lock)
{
  #line 812 
  ldv_mutex_model_unlock(lock,(char *)"csr_mutex_of_rt2x00_dev");
  #line 813 
  return;
}

#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static int cif_usb_submit_urb(struct urb *urb, gfp_t mem_flags)
{
  #line 820 
  return emg_usb_submit_urb(urb,mem_flags);
}

#line 824  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static int cif_usb_register_driver(struct usb_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *ldv_func_arg3)
{
  #line 828 
  return emg_usb_register_driver(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
}

#line 832  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/0/concurrency safety/weaver/rt2500usb.i.aux"
static void cif_usb_deregister(struct usb_driver *ldv_func_arg1)
{
  #line 836 
  emg_usb_deregister(ldv_func_arg1);
  #line 837 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 87 
#line 87 
void ldv_failed_usb_register_driver(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
#line 41 
void emg_dispatch_deregister_2(struct usb_driver *arg0);
#line 28 
#line 50 
void emg_dispatch_register_3(struct usb_driver *arg0);
#line 29 
#line 297 
void *emg_entry_point_insmod(void *arg0);
#line 33 
#line 61 
void *emg_usb_usb_scenario_rt2500usb_driver(void *arg0);
#line 34 
#line 326 
int main(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_5;
#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_2(struct usb_driver *arg0)
{
  #line 42 
  int ret;
  #line 43 
  struct emg_struct_usb_scenario_rt2500usb_driver_5 *cf_arg_5;
  #line 44 
  ret = pthread_join(emg_thread_5,(void **)0);
  #line 45 
  __VERIFIER_assume(ret == 0);
  #line 46 
  return;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_3(struct usb_driver *arg0)
{
  #line 51 
  int ret;
  #line 52 
  struct emg_struct_usb_scenario_rt2500usb_driver_5 *cf_arg_5;
  #line 53 
  cf_arg_5 = (struct emg_struct_usb_scenario_rt2500usb_driver_5 *)ldv_xmalloc(16UL);
  #line 54 
  cf_arg_5->arg0 = arg0;
  #line 55 
  ret = pthread_create(& emg_thread_5,(pthread_attr_t *)0,& emg_usb_usb_scenario_rt2500usb_driver,(void *)cf_arg_5);
  #line 56 
  __VERIFIER_assume(ret == 0);
  #line 57 
  return;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
void *emg_usb_usb_scenario_rt2500usb_driver(void *arg0)
{
  #line 64 
  int emg_5_choice;
  #line 65 
  struct usb_driver *emg_5_container;
  #line 66 
  struct usb_device_id *emg_5_device_id;
  #line 67 
  struct pm_message *emg_5_emg_param_1_0;
  #line 68 
  int emg_5_probe_retval;
  #line 69 
  struct usb_interface *emg_5_resource;
  #line 70 
  struct usb_device *emg_5_usb_device;
  #line 71 
  int emg_repeat_cnt_manage_interface_5 = 1;
  #line 73 
  struct emg_struct_usb_scenario_rt2500usb_driver_5 *data = (struct emg_struct_usb_scenario_rt2500usb_driver_5 *)arg0;
  #line 77 
  emg_5_choice = 0;
  #line 78 
  emg_5_probe_retval = ldv_undef_int();
  #line 79 
  emg_5_choice = 0;
  #line 80 
  emg_5_container = emg_alias_rt2500usb_driver;
  #line 81 
  emg_5_probe_retval = ldv_undef_int();
  #line 83 
  __VERIFIER_assume(data->arg0 == emg_alias_rt2500usb_driver);
  #line 85 
  if (data != (struct emg_struct_usb_scenario_rt2500usb_driver_5 *)0) {
    #line 86 
    emg_5_container = data->arg0;
    #line 87 
    ldv_free((void *)data);
  }
  #line 92 
  emg_5_resource = (struct usb_interface *)ldv_xmalloc(1704UL);
  #line 93 
  emg_5_usb_device = (struct usb_device *)ldv_xmalloc(2200UL);
  #line 94 
  emg_5_resource->dev.parent = & emg_5_usb_device->dev;
  #line 95 
  emg_5_choice = __ldv_undef_int_range(0,31);
  #line 96 
  emg_5_device_id = emg_5_container->id_table + (unsigned long)emg_5_choice;
  #line 100 
  goto emg_manage_interface_5;
  #line 104 
  return (void *)0;
  #line 107 
  emg_manage_interface_5: 
                          #line 107 
  ;
  #line 108 
  if (ldv_undef_int() != 0) {
    #line 111 
    ldv_pre_probe();
    #line 115 
    emg_5_probe_retval = emg_wrapper_rt2500usb_probe(emg_5_resource,emg_5_device_id);
    #line 120 
    emg_5_probe_retval = ldv_post_probe(emg_5_probe_retval);
    #line 123 
    if (ldv_undef_int() != 0) {
      #line 125 
      __VERIFIER_assume(emg_5_probe_retval == 0);
      #line 128 
      switch (ldv_undef_int()) {
        #line 129 
        case 0: 
                #line 129 
        ;
        #line 135 
        if (emg_5_container->pre_reset != (int (*)(struct usb_interface *))0) 
          #line 136 
          (*(emg_5_container->pre_reset))(emg_5_resource);
        #line 141 
        if (emg_5_container->post_reset != (int (*)(struct usb_interface *))0) 
          #line 142 
          (*(emg_5_container->post_reset))(emg_5_resource);
        #line 145 
        break;
        #line 147 
        case 1: 
                #line 147 
        ;
        #line 149 
        emg_5_emg_param_1_0 = (struct pm_message *)ldv_xmalloc_unknown_size(0UL);
        #line 149 
        emg_5_emg_param_1_0 = emg_5_emg_param_1_0;
        #line 153 
        rt2x00usb_suspend(emg_5_resource,*emg_5_emg_param_1_0);
        #line 157 
        ldv_free((void *)emg_5_emg_param_1_0);
        #line 160 
        if (ldv_undef_int() != 0) 
                                  #line 162 
                                  rt2x00usb_resume(emg_5_resource); else 
                                                                    #line 166 
                                                                    rt2x00usb_resume(emg_5_resource);
        #line 169 
        break;
        #line 171 
        case 2: 
                #line 171 
        ;
        #line 175 
        break;
        #line 177 
        case 3: 
                #line 177 
        ;
        #line 180 
        break;
        #line 182 
        default: 
                 #line 182 
        ;
        #line 182 
        __VERIFIER_assume(0);
      }
      #line 186 
      rt2x00usb_disconnect(emg_5_resource);
    }
    else 
         #line 190 
         __VERIFIER_assume(emg_5_probe_retval != 0);
    #line 194 
    if (emg_repeat_cnt_manage_interface_5 > 0) {
      #line 195 
      emg_repeat_cnt_manage_interface_5 --;
      #line 197 
      goto emg_manage_interface_5;
    }
    else 
         #line 199 
         __VERIFIER_assume(0);
  }
  else {
    #line 205 
    ldv_free((void *)emg_5_resource);
    #line 206 
    ldv_free((void *)emg_5_usb_device);
  }
  #line 214 
  return (void *)0;
}

#line 219  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
void emg_usb_deregister(struct usb_driver *arg0)
{
  #line 222 
  struct usb_driver *emg_2_usb_driver;
  #line 224 
  emg_2_usb_driver = emg_alias_rt2500usb_driver;
  #line 226 
  emg_2_usb_driver = arg0;
  #line 230 
  emg_dispatch_deregister_2(emg_2_usb_driver);
  #line 233 
  return;
}

#line 238  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_register_driver(struct usb_driver *arg0, struct module *arg1, char *arg2)
{
  #line 241 
  struct usb_driver *emg_3_usb_driver;
  #line 243 
  emg_3_usb_driver = emg_alias_rt2500usb_driver;
  #line 244 
  if (ldv_undef_int() != 0) {
    #line 246 
    emg_3_usb_driver = arg0;
    #line 250 
    emg_dispatch_register_3(emg_3_usb_driver);
    #line 254 
    return 0;
  }
  else {
    #line 258 
    ldv_failed_usb_register_driver();
    #line 259 
    return ldv_undef_int_negative();
  }
}

#line 267  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
int emg_usb_submit_urb(struct urb *arg0, unsigned int arg1)
{
  #line 270 
  struct urb *emg_4_urb;
  #line 272 
  if (ldv_undef_int() != 0) {
    #line 274 
    emg_4_urb = arg0;
    #line 275 
    ldv_check_alloc_flags(arg1);
    #line 279 
    if (emg_4_urb->complete != (void (*)(struct urb *))0) 
                                                          #line 280 
                                                          (*(emg_4_urb->complete))(emg_4_urb);
    #line 285 
    return (int)((long)ldv_malloc_unknown_size());
  }
  else 
       #line 289 
       return 0;
}

#line 297  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 300 
  int emg_1_ret;
  #line 303 
  emg_1_ret = emg_rt2500usb_driver_init();
  #line 304 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 307 
  if (ldv_undef_int() != 0) {
    #line 309 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 313 
    emg_rt2500usb_driver_exit();
  }
  else 
       #line 317 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 321 
  return (void *)0;
}

#line 326  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/ralink/rt2x00/rt2500usb.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 328 
  ldv_initialize();
  #line 330 
  emg_entry_point_insmod((void *)0);
  #line 332 
  return 0;
}

