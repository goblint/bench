/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s16 int16_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/led.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 365 
struct vm_area_struct;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 305 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/highuid.h"
struct user_namespace;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_142 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_142 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_143 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_143 kgid_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 40 
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_152 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_152 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
struct __anonstruct_nodemask_t_205 {
   unsigned long bits[16U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mpspec.h"
typedef struct __anonstruct_nodemask_t_205 nodemask_t;
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 194 
struct ldt_struct;
#line 194 
struct vdso_image;
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct __anonstruct_mm_context_t_206 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
typedef struct __anonstruct_mm_context_t_206 mm_context_t;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/overflow.h"
struct notifier_block;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_222 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_223 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_221 {
   struct __anonstruct_222 __anonCompField___anonunion_221_29 ;
   struct __anonstruct_223 __anonCompField___anonunion_221_30 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_221 __anonCompField_uprobe_task_31 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct address_space;
#line 141 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_225 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_226 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_229 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_228 {
   struct list_head slab_list ;
   struct __anonstruct_229 __anonCompField___anonunion_228_34 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_231 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_230 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_231 __anonCompField___anonunion_230_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_227 {
   union __anonunion_228 __anonCompField___anonstruct_227_35 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_230 __anonCompField___anonstruct_227_37 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_232 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_233 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_235 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_234 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_235 __anonCompField___anonstruct_234_41 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_236 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_224 {
   struct __anonstruct_225 __anonCompField___anonunion_224_32 ;
   struct __anonstruct_226 __anonCompField___anonunion_224_33 ;
   struct __anonstruct_227 __anonCompField___anonunion_224_38 ;
   struct __anonstruct_232 __anonCompField___anonunion_224_39 ;
   struct __anonstruct_233 __anonCompField___anonunion_224_40 ;
   struct __anonstruct_234 __anonCompField___anonunion_224_42 ;
   struct __anonstruct_236 __anonCompField___anonunion_224_43 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
union __anonunion_237 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_224 __anonCompField_page_44 ;
   union __anonunion_237 __anonCompField_page_45 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278 
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_238 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_238 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_239 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_239 __anonCompField_mm_struct_46 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_252 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_252 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_253 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_254 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_255 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_256 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_259 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_260 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_258 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_259 _addr_bnd ;
   struct __anonstruct__addr_pkey_260 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_257 {
   void *_addr ;
   union __anonunion_258 __anonCompField___anonstruct__sigfault_257_47 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_261 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_262 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_253 _kill ;
   struct __anonstruct__timer_254 _timer ;
   struct __anonstruct__rt_255 _rt ;
   struct __anonstruct__sigchld_256 _sigchld ;
   struct __anonstruct__sigfault_257 _sigfault ;
   struct __anonstruct__sigpoll_261 _sigpoll ;
   struct __anonstruct__sigsys_262 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_267 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_267 __anonCompField_kernel_siginfo_50 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 20 
struct user_struct;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_272 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_272 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct nsproxy;
#line 157 
struct perf_event_context;
#line 158 
struct pipe_inode_info;
#line 160 
struct reclaim_state;
#line 161 
struct robust_list_head;
#line 166 
struct sighand_struct;
#line 167 
struct task_delay_info;
#line 168 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct cred;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_274 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_274 __anonCompField_task_struct_52 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct percpu_ref;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 176 
struct file_ra_state;
#line 177 
struct writeback_control;
#line 178 
struct bdi_writeback;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_387 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_386 {
   struct __anonstruct_387 __anonCompField___anonunion_386_53 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_386 __anonCompField_lockref_54 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_389 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_388 {
   struct __anonstruct_389 __anonCompField___anonunion_388_55 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_388 __anonCompField_qstr_56 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89 
struct super_block;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_390 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_391 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_390 __anonCompField_dentry_57 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_391 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_409 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_409 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_410 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_411 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_410 __anonCompField_io_cq_60 ;
   union __anonunion_411 __anonCompField_io_cq_61 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bio;
#line 287 
struct export_operations;
#line 288 
struct hd_geometry;
#line 289 
struct iovec;
#line 290 
struct kiocb;
#line 291 
struct kobject;
#line 292 
struct poll_table_struct;
#line 293 
struct kstatfs;
#line 294 
struct swap_info_struct;
#line 295 
struct iov_iter;
#line 296 
struct fscrypt_info;
#line 297 
struct fscrypt_operations;
#line 298 
struct fsverity_info;
#line 299 
struct fsverity_operations;
#line 300 
struct fs_context;
#line 301 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_412 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_412 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_413 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_413 __anonCompField_kqid_62 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_415 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_414 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_415 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_414 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_418 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_419 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_420 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_421 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_418 __anonCompField_inode_63 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_419 __anonCompField_inode_64 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_420 __anonCompField_inode_65 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_421 __anonCompField_inode_66 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_422 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_422 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_424 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_423 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_424 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_423 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 3599 
struct sock;
#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_438 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_440 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_439 {
   unsigned long nr_segs ;
   struct __anonstruct_440 __anonCompField___anonunion_439_68 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_438 __anonCompField_iov_iter_67 ;
   union __anonunion_439 __anonCompField_iov_iter_69 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_8880 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_8880 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 323 
struct kernfs_open_node;
#line 324 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_463 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_463 __anonCompField_kernfs_node_72 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_466 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_466 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_467 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_467 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_478 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_479 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_480 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_481 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_478 ports ;
   struct __anonstruct_icmpt_479 icmpt ;
   struct __anonstruct_dnports_480 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_481 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_482 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_482 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_489 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_488 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_489 __anonCompField___anonstruct_488_85 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_487 {
   struct __anonstruct_488 __anonCompField___anonunion_487_86 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_490 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_491 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_493 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_492 {
   struct __anonstruct_493 __anonCompField___anonunion_492_90 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_495 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_494 {
   __wsum csum ;
   struct __anonstruct_495 __anonCompField___anonunion_494_92 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_496 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_497 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_498 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_487 __anonCompField_sk_buff_87 ;
   union __anonunion_490 __anonCompField_sk_buff_88 ;
   union __anonunion_491 __anonCompField_sk_buff_89 ;
   char cb[48U] ;
   union __anonunion_492 __anonCompField_sk_buff_91 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_494 __anonCompField_sk_buff_93 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_496 __anonCompField_sk_buff_94 ;
   __u32 secmark ;
   union __anonunion_497 __anonCompField_sk_buff_95 ;
   union __anonunion_498 __anonCompField_sk_buff_96 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_528 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_528 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_529 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_529 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_530 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_530 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_531 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_531 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_532 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_532 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_533 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_533 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_534 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_534 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_535 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_535 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_536 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_537 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_536 ifr_ifrn ;
   union __anonunion_ifr_ifru_537 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_556 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_556 __anonCompField_ethtool_rxnfc_99 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_559 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_559 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct ctl_table_root;
#line 823 
struct ctl_table_header;
#line 824 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_561 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_560 {
   struct __anonstruct_561 __anonCompField___anonunion_560_100 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_560 __anonCompField_ctl_table_header_101 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_562 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_562 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_563 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_563 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_564 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_564 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_565 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_565 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_567 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_567 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_580 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_579 {
   struct __anonstruct_580 __anonCompField___anonunion_579_102 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_579 __anonCompField_keyring_index_key_103 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_581 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_582 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_584 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_583 {
   struct keyring_index_key index_key ;
   struct __anonstruct_584 __anonCompField___anonunion_583_106 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_586 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_585 {
   union key_payload payload ;
   struct __anonstruct_586 __anonCompField___anonunion_585_108 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_581 __anonCompField_key_104 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_582 __anonCompField_key_105 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_583 __anonCompField_key_107 ;
   union __anonunion_585 __anonCompField_key_109 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_589 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_589 __anonCompField_cred_110 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_590 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_590 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_592 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_591 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_592 __anonCompField___anonunion_591_111 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_591 __anonCompField_uid_gid_map_112 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_594 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_596 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_595 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_596 __anonCompField___anonstruct_595_115 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_597 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_598 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_599 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_600 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_602 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_601 {
   union __anonunion_602 __anonCompField___anonstruct_601_120 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_603 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_604 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_605 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_606 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_607 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_594 __anonCompField_bpf_attr_114 ;
   struct __anonstruct_595 __anonCompField_bpf_attr_116 ;
   struct __anonstruct_597 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_598 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_599 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_test_600 test ;
   struct __anonstruct_601 __anonCompField_bpf_attr_121 ;
   struct __anonstruct_info_603 info ;
   struct __anonstruct_query_604 query ;
   struct __anonstruct_raw_tracepoint_605 raw_tracepoint ;
   struct __anonstruct_606 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_task_fd_query_607 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 215 
struct bpf_prog_aux;
#line 216 
struct bpf_map;
#line 217 
struct btf;
#line 218 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_640 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_640 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_642 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_641 {
   struct __anonstruct_tail_call_642 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_641 __anonCompField_bpf_jit_poke_descriptor_147 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_643 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_643 __anonCompField_bpf_prog_aux_148 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_645 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_645 __anonCompField_bpf_cgroup_storage_150 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_647 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_646 {
   struct __anonstruct_647 __anonCompField___anonunion_646_151 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_646 __anonCompField_sock_cgroup_data_152 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_670 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_670 __anonCompField_netlink_callback_153 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_675 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_676 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_677 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_678 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_674 {
   struct __anonstruct_675 __anonCompField___anonunion_674_155 ;
   struct __anonstruct_676 __anonCompField___anonunion_674_156 ;
   struct __anonstruct_677 __anonCompField___anonunion_674_157 ;
   struct __anonstruct_xsk_678 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_674 __anonCompField_netdev_bpf_158 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14511 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14512 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_679 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_680 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_679 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14511 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14512 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_680 __anonCompField_net_device_159 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 534  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
typedef unsigned long kernel_ulong_t;
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__));
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__));
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__));
#line 670  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_isoc_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wReseved ;
   __le32 dwBytesPerInterval ;
} __attribute__((__packed__));
#line 682  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
} __attribute__((__packed__));
#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__));
#line 837  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
} __attribute__((__packed__));
#line 888  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
} __attribute__((__packed__));
#line 910  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
} __attribute__((__packed__));
#line 933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
} __attribute__((__packed__));
#line 948  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ssp_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __le32 bmAttributes ;
   __le16 wFunctionalitySupport ;
   __le16 wReserved ;
   __le32 bmSublinkSpeedAttr[1U] ;
} __attribute__((__packed__));
#line 1073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/usb/ch9.h"
struct usb_ptm_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
} __attribute__((__packed__));
#line 1134 
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5,
    USB_SPEED_SUPER_PLUS = 6
};
#line 1144 
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_runtime.h"
struct usb_device;
#line 281 
struct wusb_dev;
#line 282 
struct ep_device;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct usb_ssp_isoc_ep_comp_descriptor ssp_isoc_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 95 
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int resetting_device : 1 ;
   unsigned int authorized : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   struct work_struct reset_ws ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 396  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ssp_cap_descriptor *ssp_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
   struct usb_ptm_cap_descriptor *ptm_cap ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 424 
struct mon_bus;
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   struct device *sysdev ;
   int busnum ;
   char *bus_name ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct mutex devnum_next_mutex ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 469 
struct usb_tt;
#line 470 
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
};
#line 502  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   unsigned int rx_lanes ;
   unsigned int tx_lanes ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   u8 devaddr ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_u1_enabled : 1 ;
   unsigned int usb3_lpm_u2_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
   u16 hub_delay ;
};
#line 1340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 1346 
struct urb;
#line 1349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 1550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/usb.h"
struct urb {
   struct kref kref ;
   int unlinked ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb *) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3439 
enum nl80211_channel_type {
    NL80211_CHAN_NO_HT = 0,
    NL80211_CHAN_HT20 = 1,
    NL80211_CHAN_HT40MINUS = 2,
    NL80211_CHAN_HT40PLUS = 3
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_736 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_736 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312 
struct nla_policy;
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_738 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_738 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_739 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_739 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_747 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_746 {
   void *validation_data ;
   struct __anonstruct_747 __anonCompField___anonunion_746_162 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_746 __anonCompField_nla_policy_163 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_821 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_822 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_820 {
   struct __anonstruct_821 __anonCompField___anonunion_820_165 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_822 __anonCompField___anonunion_820_166 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_820 __anonCompField_tcf_result_167 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_824 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_824 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_837 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_837 __anonCompField_bdi_writeback_169 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_838 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_838 __anonCompField_bio_170 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_841 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_842 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_844 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_845 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_843 {
   struct __anonstruct_elv_844 elv ;
   struct __anonstruct_flush_845 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_846 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_841 __anonCompField_request_171 ;
   union __anonunion_842 __anonCompField_request_172 ;
   union __anonunion_843 __anonCompField_request_173 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_846 __anonCompField_request_174 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elf.h"
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_865 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_865 __anonCompField_kernel_param_175 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_866 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_866 __anonCompField_bpf_prog_176 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_888 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_888 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_890 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_889 {
   __addrpair skc_addrpair ;
   struct __anonstruct_890 __anonCompField___anonunion_889_178 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_891 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_893 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_892 {
   __portpair skc_portpair ;
   struct __anonstruct_893 __anonCompField___anonunion_892_181 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_894 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_895 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_896 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_897 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_898 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_889 __anonCompField_sock_common_179 ;
   union __anonunion_891 __anonCompField_sock_common_180 ;
   union __anonunion_892 __anonCompField_sock_common_182 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_894 __anonCompField_sock_common_183 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_895 __anonCompField_sock_common_184 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_896 __anonCompField_sock_common_185 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_897 __anonCompField_sock_common_186 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_898 __anonCompField_sock_common_187 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_899 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_900 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_901 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_899 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_900 __anonCompField_sock_188 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_901 __anonCompField_sock_189 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_936 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_936 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 267 
struct ieee80211_vif;
#line 440 
struct ieee80211_sta;
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1012 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1011 {
   struct __anonstruct_1012 __anonCompField___anonunion_1011_192 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_1010 {
   union __anonunion_1011 __anonCompField___anonstruct_control_1010_193 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_1013 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_1014 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1015 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1009 {
   struct __anonstruct_control_1010 control ;
   struct __anonstruct_ack_1013 ack ;
   struct __anonstruct_status_1014 status ;
   struct __anonstruct_1015 __anonCompField___anonunion_1009_194 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_1009 __anonCompField_ieee80211_tx_info_195 ;
};
#line 1119 
struct ieee80211_rx_status;
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u64 boottime_ns ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 enc_flags ;
   u8 encoding : 2 ;
   u8 bw : 3 ;
   u8 he_ru : 3 ;
   u8 he_gi : 2 ;
   u8 he_dcm : 1 ;
   u8 rate_idx ;
   u8 nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
   u8 zero_length_psdu_type ;
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1023 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1023 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1024 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1024 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
struct rtl_priv;
#line 234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtlwifi_firmware_header {
   __le16 signature ;
   u8 category ;
   u8 function ;
   __le16 version ;
   u8 subversion ;
   u8 rsvd1 ;
   u8 month ;
   u8 date ;
   u8 hour ;
   u8 minute ;
   __le16 ramcodesize ;
   __le16 rsvd2 ;
   __le32 svnindex ;
   __le32 rsvd3 ;
   __le32 rsvd4 ;
   __le32 rsvd5 ;
};
#line 284 
enum intf_type {
    INTF_PCI = 0,
    INTF_USB = 1
};
#line 289 
enum radio_path {
    RF90_PATH_A = 0,
    RF90_PATH_B = 1,
    RF90_PATH_C = 2,
    RF90_PATH_D = 3
};
#line 349 
enum rf_pwrstate {
    ERFON = 0,
    ERFSLEEP = 1,
    ERFOFF = 2
};
#line 384  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct bb_reg_def {
   u32 rfintfs ;
   u32 rfintfi ;
   u32 rfintfo ;
   u32 rfintfe ;
   u32 rf3wire_offset ;
   u32 rflssi_select ;
   u32 rftxgain_stage ;
   u32 rfhssi_para1 ;
   u32 rfhssi_para2 ;
   u32 rfsw_ctrl ;
   u32 rfagc_control1 ;
   u32 rfagc_control2 ;
   u32 rfrxiq_imbal ;
   u32 rfrx_afe ;
   u32 rftxiq_imbal ;
   u32 rftx_afe ;
   u32 rf_rb ;
   u32 rf_rbpi ;
};
#line 404 
enum io_type {
    IO_CMD_PAUSE_DM_BY_SCAN = 0,
    IO_CMD_PAUSE_BAND0_DM_BY_SCAN = 0,
    IO_CMD_PAUSE_BAND1_DM_BY_SCAN = 1,
    IO_CMD_RESUME_DM_BY_SCAN = 2
};
#line 513 
enum rt_media_status {
    RT_MEDIA_DISCONNECT = 0,
    RT_MEDIA_CONNECT = 1
};
#line 595 
enum rt_enc_alg {
    NO_ENCRYPTION = 0,
    WEP40_ENCRYPTION = 1,
    TKIP_ENCRYPTION = 2,
    RSERVED_ENCRYPTION = 3,
    AESCCMP_ENCRYPTION = 4,
    WEP104_ENCRYPTION = 5,
    AESCMAC_ENCRYPTION = 6
};
#line 772 
enum rt_psmode {
    EACTIVE = 0,
    EMAXPS = 1,
    EFASTPS = 2,
    EAUTOPS = 3
};
#line 779 
enum led_ctl_mode {
    LED_CTL_POWER_ON = 1,
    LED_CTL_LINK = 2,
    LED_CTL_NO_LINK = 3,
    LED_CTL_TX = 4,
    LED_CTL_RX = 5,
    LED_CTL_SITE_SURVEY = 6,
    LED_CTL_POWER_OFF = 7,
    LED_CTL_START_TO_LINK = 8,
    LED_CTL_START_WPS = 9,
    LED_CTL_STOP_WPS = 10
};
#line 792 
enum rtl_led_pin {
    LED_PIN_GPIO0 = 0,
    LED_PIN_LED0 = 1,
    LED_PIN_LED1 = 2,
    LED_PIN_LED2 = 3
};
#line 805 
enum macphy_mode {
    SINGLEMAC_SINGLEPHY = 0,
    DUALMAC_DUALPHY = 1,
    DUALMAC_SINGLEPHY = 2
};
#line 811 
enum band_type {
    BAND_ON_2_4G = 0,
    BAND_ON_5G = 1,
    BAND_ON_BOTH = 2,
    BANDMAX = 3
};
#line 910 
enum rtl_link_state {
    MAC80211_NOLINK = 0,
    MAC80211_LINKING = 1,
    MAC80211_LINKED = 2,
    MAC80211_LINKED_SCANNING = 3
};
#line 931 
enum rt_polarity_ctl {
    RT_POLARITY_LOW_ACT = 0,
    RT_POLARITY_HIGH_ACT = 1
};
#line 967 
enum rtl_spec_ver {
    RTL_SPEC_NEW_RATEID = 1,
    RTL_SPEC_SUPPORT_VHT = 2,
    RTL_SPEC_EXT_C2H = 4
};
#line 1076  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_led {
   void *hw ;
   enum rtl_led_pin ledpin ;
   bool ledon ;
};
#line 1082  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_led_ctl {
   bool led_opendrain ;
   struct rtl_led sw_led0 ;
   struct rtl_led sw_led1 ;
};
#line 1088  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_qos_parameters {
   __le16 cw_min ;
   __le16 cw_max ;
   u8 aifs ;
   u8 flag ;
   __le16 tx_op ;
} __attribute__((__packed__));
#line 1096  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rt_smooth_data {
   u32 elements[100U] ;
   u32 index ;
   u32 total_num ;
   u32 total_val ;
};
#line 1103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct false_alarm_statistics {
   u32 cnt_parity_fail ;
   u32 cnt_rate_illegal ;
   u32 cnt_crc8_fail ;
   u32 cnt_mcs_fail ;
   u32 cnt_fast_fsync_fail ;
   u32 cnt_sb_search_fail ;
   u32 cnt_ofdm_fail ;
   u32 cnt_cck_fail ;
   u32 cnt_all ;
   u32 cnt_ofdm_cca ;
   u32 cnt_cck_cca ;
   u32 cnt_cca_all ;
   u32 cnt_bw_usc ;
   u32 cnt_bw_lsc ;
};
#line 1120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct init_gain {
   u8 xaagccore1 ;
   u8 xbagccore1 ;
   u8 xcagccore1 ;
   u8 xdagccore1 ;
   u8 cca ;
};
#line 1129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct wireless_stats {
   u64 txbytesunicast ;
   u64 txbytesmulticast ;
   u64 txbytesbroadcast ;
   u64 rxbytesunicast ;
   u64 txbytesunicast_inperiod ;
   u64 rxbytesunicast_inperiod ;
   u32 txbytesunicast_inperiod_tp ;
   u32 rxbytesunicast_inperiod_tp ;
   u64 txbytesunicast_last ;
   u64 rxbytesunicast_last ;
   long rx_snr_db[4U] ;
   long recv_signal_power ;
   long signal_quality ;
   long last_sigstrength_inpercent ;
   u32 rssi_calculate_cnt ;
   u32 pwdb_all_cnt ;
   long signal_strength ;
   u8 rx_rssi_percentage[4U] ;
   u8 rx_evm_dbm[4U] ;
   u8 rx_evm_percentage[2U] ;
   u16 rx_cfo_short[4U] ;
   u16 rx_cfo_tail[4U] ;
   struct rt_smooth_data ui_rssi ;
   struct rt_smooth_data ui_link_quality ;
};
#line 1169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rate_adaptive {
   u8 rate_adaptive_disabled ;
   u8 ratr_state ;
   u16 reserve ;
   u32 high_rssi_thresh_for_ra ;
   u32 high2low_rssi_thresh_for_ra ;
   u8 low2high_rssi_thresh_for_ra40m ;
   u32 low_rssi_thresh_for_ra40m ;
   u8 low2high_rssi_thresh_for_ra20m ;
   u32 low_rssi_thresh_for_ra20m ;
   u32 upper_rssi_threshold_ratr ;
   u32 middleupper_rssi_threshold_ratr ;
   u32 middle_rssi_threshold_ratr ;
   u32 middlelow_rssi_threshold_ratr ;
   u32 low_rssi_threshold_ratr ;
   u32 ultralow_rssi_threshold_ratr ;
   u32 low_rssi_threshold_ratr_40m ;
   u32 low_rssi_threshold_ratr_20m ;
   u8 ping_rssi_enable ;
   u32 ping_rssi_ratr ;
   u32 ping_rssi_thresh_for_ra ;
   u32 last_ratr ;
   u8 pre_ratr_state ;
   u8 ldpc_thres ;
   bool use_ldpc ;
   bool lower_rts_rate ;
   bool is_special_data ;
};
#line 1199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct regd_pair_mapping {
   u16 reg_dmnenum ;
   u16 reg_5ghz_ctl ;
   u16 reg_2ghz_ctl ;
};
#line 1205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct dynamic_primary_cca {
   u8 pricca_flag ;
   u8 intf_flag ;
   u8 intf_type ;
   u8 dup_rts_flag ;
   u8 monitor_flag ;
   u8 ch_offset ;
   u8 mf_state ;
};
#line 1215  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_regulatory {
   s8 alpha2[2U] ;
   u16 country_code ;
   u16 max_power_level ;
   u32 tp_scale ;
   u16 current_rd ;
   u16 current_rd_ext ;
   int16_t power_limit ;
   struct regd_pair_mapping *regpair ;
};
#line 1226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_rfkill {
   bool rfkill_state ;
};
#line 1236 
enum p2p_ps_state {
    P2P_PS_DISABLE = 0,
    P2P_PS_ENABLE = 1,
    P2P_PS_SCAN = 2,
    P2P_PS_SCAN_DONE = 3,
    P2P_PS_ALLSTASLEEP = 4
};
#line 1244 
enum p2p_ps_mode {
    P2P_PS_NONE = 0,
    P2P_PS_CTWINDOW = 1,
    P2P_PS_NOA = 2,
    P2P_PS_MIX = 3
};
#line 1255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_p2p_ps_info {
   enum p2p_ps_mode p2p_ps_mode ;
   enum p2p_ps_state p2p_ps_state ;
   u8 noa_index ;
   u8 ctwindow ;
   u8 opp_ps ;
   u8 noa_num ;
   u8 noa_count_type[2U] ;
   u32 noa_duration[2U] ;
   u32 noa_interval[2U] ;
   u32 noa_start_time[2U] ;
};
#line 1277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct p2p_ps_offload_t {
   u8 offload_en : 1 ;
   u8 role : 1 ;
   u8 ctwindow_en : 1 ;
   u8 noa0_en : 1 ;
   u8 noa1_en : 1 ;
   u8 allstasleep : 1 ;
   u8 discovery : 1 ;
   u8 reserved : 1 ;
};
#line 1291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct iqk_matrix_regs {
   bool iqk_done ;
   long value[1U][8U] ;
};
#line 1296  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct phy_parameters {
   u16 length ;
   u32 *pdata ;
};
#line 1315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_phy {
   struct bb_reg_def phyreg_def[4U] ;
   struct init_gain initgain_backup ;
   enum io_type current_io_type ;
   u8 rf_mode ;
   u8 rf_type ;
   u8 current_chan_bw ;
   u8 set_bwmode_inprogress ;
   u8 sw_chnl_inprogress ;
   u8 sw_chnl_stage ;
   u8 sw_chnl_step ;
   u8 current_channel ;
   u8 h2c_box_num ;
   u8 set_io_inprogress ;
   u8 lck_inprogress ;
   s32 reg_e94 ;
   s32 reg_e9c ;
   s32 reg_ea4 ;
   s32 reg_eac ;
   s32 reg_eb4 ;
   s32 reg_ebc ;
   s32 reg_ec4 ;
   s32 reg_ecc ;
   u8 rfpienable ;
   u8 reserve_0 ;
   u16 reserve_1 ;
   u32 reg_c04 ;
   u32 reg_c08 ;
   u32 reg_874 ;
   u32 adda_backup[16U] ;
   u32 iqk_mac_backup[4U] ;
   u32 iqk_bb_backup[10U] ;
   bool iqk_initialized ;
   bool rfpath_rx_enable[4U] ;
   u8 reg_837 ;
   bool need_iqk ;
   struct iqk_matrix_regs iqk_matrix[46U] ;
   bool rfpi_enable ;
   bool iqk_in_progress ;
   u8 pwrgroup_cnt ;
   u8 cck_high_power ;
   u32 mcs_txpwrlevel_origoffset[13U][16U] ;
   u32 mcs_offset[13U][16U] ;
   u32 tx_power_by_rate_offset[2U][4U][4U][84U] ;
   u8 txpwr_by_rate_base_24g[4U][4U][6U] ;
   u8 txpwr_by_rate_base_5g[4U][4U][5U] ;
   u8 default_initialgain[4U] ;
   u8 cur_cck_txpwridx ;
   u8 cur_ofdm24g_txpwridx ;
   u8 cur_bw20_txpwridx ;
   u8 cur_bw40_txpwridx ;
   s8 txpwr_limit_2_4g[4U][4U][6U][14U][4U] ;
   s8 txpwr_limit_5g[4U][4U][6U][49U][4U] ;
   u32 rfreg_chnlval[2U] ;
   bool apk_done ;
   u32 reg_rf3c[2U] ;
   u32 backup_rf_0x1a ;
   u8 framesync ;
   u32 framesync_c34 ;
   u8 num_total_rfpath ;
   struct phy_parameters hwparam_tables[10U] ;
   u16 rf_pathmap ;
   u8 hw_rof_enable ;
   enum rt_polarity_ctl polarity_ctl ;
};
#line 1423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_ht_agg {
   u16 txq_id ;
   u16 wait_for_ba ;
   u16 start_idx ;
   u64 bitmap ;
   u32 rate_n_flags ;
   u8 agg_state ;
   u8 rx_agg_state ;
};
#line 1438  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_tid_data {
   struct rtl_ht_agg agg ;
};
#line 1455  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_io {
   struct device *dev ;
   struct mutex bb_mutex ;
   unsigned long pci_mem_end ;
   unsigned long pci_mem_start ;
   unsigned long pci_base_addr ;
   void (*write8_async)(struct rtl_priv *, u32 , u8 ) ;
   void (*write16_async)(struct rtl_priv *, u32 , u16 ) ;
   void (*write32_async)(struct rtl_priv *, u32 , u32 ) ;
   void (*writen_sync)(struct rtl_priv *, u32 , void *, u16 ) ;
   u8 (*read8_sync)(struct rtl_priv *, u32 ) ;
   u16 (*read16_sync)(struct rtl_priv *, u32 ) ;
   u32 (*read32_sync)(struct rtl_priv *, u32 ) ;
};
#line 1478  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_mac {
   u8 mac_addr[6U] ;
   u8 mac80211_registered ;
   u8 beacon_enabled ;
   u32 tx_ss_num ;
   u32 rx_ss_num ;
   struct ieee80211_supported_band bands[4U] ;
   struct ieee80211_hw *hw ;
   struct ieee80211_vif *vif ;
   enum nl80211_iftype opmode ;
   struct rtl_tid_data tids[9U] ;
   enum rtl_link_state link_state ;
   int n_channels ;
   int n_bitrates ;
   bool offchan_delay ;
   u8 p2p ;
   bool p2p_in_use ;
   u32 rx_conf ;
   u16 rx_mgt_filter ;
   u16 rx_ctrl_filter ;
   u16 rx_data_filter ;
   bool act_scanning ;
   u8 cnt_after_linked ;
   bool skip_scan ;
   struct sk_buff_head skb_waitq[9U] ;
   u8 ht_stbc_cap ;
   u8 ht_cur_stbc ;
   u8 vht_enable ;
   u8 bw_80 ;
   u8 vht_cur_ldpc ;
   u8 vht_cur_stbc ;
   u8 vht_stbc_cap ;
   u8 vht_ldpc_cap ;
   bool rdg_en ;
   u8 bssid[6U] ;
   u32 vendor ;
   u8 mcs[16U] ;
   u32 basic_rates ;
   u8 ht_enable ;
   u8 sgi_40 ;
   u8 sgi_20 ;
   u8 bw_40 ;
   u16 mode ;
   u8 slot_time ;
   u8 short_preamble ;
   u8 use_cts_protect ;
   u8 cur_40_prime_sc ;
   u8 cur_40_prime_sc_bk ;
   u8 cur_80_prime_sc ;
   u64 tsf ;
   u8 retry_short ;
   u8 retry_long ;
   u16 assoc_id ;
   bool hiddenssid ;
   int beacon_interval ;
   u8 min_space_cfg ;
   u8 max_mss_density ;
   u8 current_ampdu_factor ;
   u8 current_ampdu_density ;
   struct ieee80211_tx_queue_params edca_param[5U] ;
   struct rtl_qos_parameters ac[4U] ;
   u64 last_txok_cnt ;
   u64 last_rxok_cnt ;
   u32 last_bt_edca_ul ;
   u32 last_bt_edca_dl ;
};
#line 1572  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct btdm_8723 {
   bool all_off ;
   bool agc_table_en ;
   bool adc_back_off_on ;
   bool b2_ant_hid_en ;
   bool low_penalty_rate_adaptive ;
   bool rf_rx_lpf_shrink ;
   bool reject_aggre_pkt ;
   bool tra_tdma_on ;
   u8 tra_tdma_nav ;
   u8 tra_tdma_ant ;
   bool tdma_on ;
   u8 tdma_ant ;
   u8 tdma_nav ;
   u8 tdma_dac_swing ;
   u8 fw_dac_swing_lvl ;
   bool ps_tdma_on ;
   u8 ps_tdma_byte[5U] ;
   bool pta_on ;
   u32 val_0x6c0 ;
   u32 val_0x6c8 ;
   u32 val_0x6cc ;
   bool sw_dac_swing_on ;
   u32 sw_dac_swing_lvl ;
   u32 wlan_act_hi ;
   u32 wlan_act_lo ;
   u32 bt_retry_index ;
   bool dec_bt_pwr ;
   bool ignore_wlan_act ;
};
#line 1603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct bt_coexist_8723 {
   u32 high_priority_tx ;
   u32 high_priority_rx ;
   u32 low_priority_tx ;
   u32 low_priority_rx ;
   u8 c2h_bt_info ;
   bool c2h_bt_info_req_sent ;
   bool c2h_bt_inquiry_page ;
   u32 bt_inq_page_start_time ;
   u8 bt_retry_cnt ;
   u8 c2h_bt_info_original ;
   u8 bt_inquiry_page_cnt ;
   struct btdm_8723 btdm ;
};
#line 1618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_hal {
   struct ieee80211_hw *hw ;
   bool driver_is_goingto_unload ;
   bool up_first_time ;
   bool first_init ;
   bool being_init_adapter ;
   bool bbrf_ready ;
   bool mac_func_enable ;
   bool pre_edcca_enable ;
   struct bt_coexist_8723 hal_coex_8723 ;
   enum intf_type interface ;
   u16 hw_type ;
   u8 ic_class ;
   u8 oem_id ;
   u32 version ;
   u8 state ;
   u8 board_type ;
   u8 package_type ;
   u8 external_pa ;
   u8 pa_mode ;
   u8 pa_type_2g ;
   u8 pa_type_5g ;
   u8 lna_type_2g ;
   u8 lna_type_5g ;
   u8 external_pa_2g ;
   u8 external_lna_2g ;
   u8 external_pa_5g ;
   u8 external_lna_5g ;
   u8 type_glna ;
   u8 type_gpa ;
   u8 type_alna ;
   u8 type_apa ;
   u8 rfe_type ;
   u32 fwsize ;
   u8 *pfirmware ;
   u16 fw_version ;
   u16 fw_subversion ;
   bool h2c_setinprogress ;
   u8 last_hmeboxnum ;
   bool fw_ready ;
   u8 fw_rsvdpage_startoffset ;
   u8 h2c_txcmd_seq ;
   u8 current_ra_rate ;
   u16 fwcmd_iomap ;
   u32 fwcmd_ioparam ;
   bool set_fwcmd_inprogress ;
   u8 current_fwcmd_io ;
   struct p2p_ps_offload_t p2p_ps_offload ;
   bool fw_clk_change_in_progress ;
   bool allow_sw_to_change_hwclc ;
   u8 fw_ps_state ;
   bool driver_going2unload ;
   u8 minspace_cfg ;
   enum macphy_mode macphymode ;
   enum band_type current_bandtype ;
   enum band_type current_bandtypebackup ;
   enum band_type bandset ;
   u32 interfaceindex ;
   u8 macphyctl_reg ;
   bool earlymode_enable ;
   u8 max_earlymode_num ;
   bool during_mac0init_radiob ;
   bool during_mac1init_radioa ;
   bool reloadtxpowerindex ;
   bool load_imrandiqk_setting_for2g ;
   bool disable_amsdu_8k ;
   bool master_of_dmsp ;
   bool slave_of_dmsp ;
   u16 rx_tag ;
   u8 rts_en ;
   bool wow_enable ;
   bool enter_pnp_sleep ;
   bool wake_from_pnp_sleep ;
   bool wow_enabled ;
   time64_t last_suspend_sec ;
   u32 wowlan_fwsize ;
   u8 *wowlan_firmware ;
   u8 hw_rof_enable ;
   bool real_wow_v2_enable ;
   bool re_init_llt_table ;
};
#line 1725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_security {
   bool use_sw_sec ;
   bool being_setkey ;
   bool use_defaultkey ;
   enum rt_enc_alg pairwise_enc_algorithm ;
   enum rt_enc_alg group_enc_algorithm ;
   u32 hwsec_cam_bitmap ;
   u8 hwsec_cam_sta_addr[32U][6U] ;
   u8 key_buf[5U][61U] ;
   u8 key_len[5U] ;
   u8 *pairwise_key ;
};
#line 1752  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct fast_ant_training {
   u8 bssid[6U] ;
   u8 antsel_rx_keep_0 ;
   u8 antsel_rx_keep_1 ;
   u8 antsel_rx_keep_2 ;
   u32 ant_sum[7U] ;
   u32 ant_cnt[7U] ;
   u32 ant_ave[7U] ;
   u8 fat_state ;
   u32 train_idx ;
   u8 antsel_a[33U] ;
   u8 antsel_b[33U] ;
   u8 antsel_c[33U] ;
   u32 main_ant_sum[33U] ;
   u32 aux_ant_sum[33U] ;
   u32 main_ant_cnt[33U] ;
   u32 aux_ant_cnt[33U] ;
   u8 rx_idle_ant ;
   bool becomelinked ;
};
#line 1773  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct dm_phy_dbg_info {
   s8 rx_snrdb[4U] ;
   u64 num_qry_phy_status ;
   u64 num_qry_phy_status_cck ;
   u64 num_qry_phy_status_ofdm ;
   u16 num_qry_beacon_pkt ;
   u16 num_non_be_pkt ;
   s32 rx_evm[4U] ;
};
#line 1783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_dm {
   long entry_min_undec_sm_pwdb ;
   long undec_sm_cck ;
   long undec_sm_pwdb ;
   long entry_max_undec_sm_pwdb ;
   s32 ofdm_pkt_cnt ;
   bool dm_initialgain_enable ;
   bool dynamic_txpower_enable ;
   bool current_turbo_edca ;
   bool is_any_nonbepkts ;
   bool is_cur_rdlstate ;
   bool txpower_trackinginit ;
   bool disable_framebursting ;
   bool cck_inch14 ;
   bool txpower_tracking ;
   bool useramask ;
   bool rfpath_rxenable[4U] ;
   bool inform_fw_driverctrldm ;
   bool current_mrc_switch ;
   u8 txpowercount ;
   u8 powerindex_backup[6U] ;
   u8 thermalvalue_rxgain ;
   u8 thermalvalue_iqk ;
   u8 thermalvalue_lck ;
   u8 thermalvalue ;
   u8 last_dtp_lvl ;
   u8 thermalvalue_avg[8U] ;
   u8 thermalvalue_avg_index ;
   u8 tm_trigger ;
   bool done_txpower ;
   u8 dynamic_txhighpower_lvl ;
   u8 dm_flag ;
   u8 dm_flag_tmp ;
   u8 dm_type ;
   u8 dm_rssi_sel ;
   u8 txpower_track_control ;
   bool interrupt_migration ;
   bool disable_tx_int ;
   s8 ofdm_index[4U] ;
   u8 default_ofdm_index ;
   u8 default_cck_index ;
   s8 cck_index ;
   s8 delta_power_index[4U] ;
   s8 delta_power_index_last[4U] ;
   s8 power_index_offset[4U] ;
   s8 absolute_ofdm_swing_idx[4U] ;
   s8 remnant_ofdm_swing_idx[4U] ;
   s8 remnant_cck_idx ;
   bool modify_txagc_flag_path_a ;
   bool modify_txagc_flag_path_b ;
   bool one_entry_only ;
   struct dm_phy_dbg_info dbginfo ;
   bool atc_status ;
   bool large_cfo_hit ;
   bool is_freeze ;
   int cfo_tail[2U] ;
   int cfo_ave_pre ;
   int crystal_cap ;
   u8 cfo_threshold ;
   u32 packet_count ;
   u32 packet_count_pre ;
   u8 tx_rate ;
   u8 swing_idx_ofdm[4U] ;
   u8 swing_idx_ofdm_cur ;
   u8 swing_idx_ofdm_base[4U] ;
   bool swing_flag_ofdm ;
   u8 swing_idx_cck ;
   u8 swing_idx_cck_cur ;
   u8 swing_idx_cck_base ;
   bool swing_flag_cck ;
   s8 swing_diff_2g ;
   s8 swing_diff_5g ;
   bool supp_phymode_switch ;
   struct fast_ant_training fat_table ;
   u8 resp_tx_path ;
   u8 path_sel ;
   u32 patha_sum ;
   u32 pathb_sum ;
   u32 patha_cnt ;
   u32 pathb_cnt ;
   u8 pre_channel ;
   u8 *p_channel ;
   u8 linked_interval ;
   u64 last_tx_ok_cnt ;
   u64 last_rx_ok_cnt ;
};
#line 1887 
struct rtl_efuse_ops;
#line 1887  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_efuse {
   struct rtl_efuse_ops *efuse_ops ;
   bool autoload_ok ;
   bool bootfromefuse ;
   u16 max_physical_size ;
   u8 efuse_map[2U][512U] ;
   u16 efuse_usedbytes ;
   u8 efuse_usedpercentage ;
   u8 autoload_failflag ;
   u8 autoload_status ;
   short epromtype ;
   u16 eeprom_vid ;
   u16 eeprom_did ;
   u16 eeprom_svid ;
   u16 eeprom_smid ;
   u8 eeprom_oemid ;
   u16 eeprom_channelplan ;
   u8 eeprom_version ;
   u8 board_type ;
   u8 external_pa ;
   u8 dev_addr[6U] ;
   u8 wowlan_enable ;
   u8 antenna_div_cfg ;
   u8 antenna_div_type ;
   bool txpwr_fromeprom ;
   u8 eeprom_crystalcap ;
   u8 eeprom_tssi[2U] ;
   u8 eeprom_tssi_5g[3U][2U] ;
   u8 eeprom_pwrlimit_ht20[12U] ;
   u8 eeprom_pwrlimit_ht40[12U] ;
   u8 eeprom_chnlarea_txpwr_cck[4U][3U] ;
   u8 eeprom_chnlarea_txpwr_ht40_1s[4U][12U] ;
   u8 eprom_chnl_txpwr_ht40_2sdf[4U][12U] ;
   u8 internal_pa_5g[2U] ;
   u8 eeprom_c9 ;
   u8 eeprom_cc ;
   u8 eeprom_pwrgroup[2U][3U] ;
   u8 pwrgroup_ht20[2U][59U] ;
   u8 pwrgroup_ht40[2U][59U] ;
   u8 txpwrlevel_cck[4U][14U] ;
   u8 txpwrlevel_ht40_1s[4U][59U] ;
   u8 txpwrlevel_ht40_2s[4U][59U] ;
   s8 txpwr_cckdiff[4U][59U] ;
   s8 txpwr_ht20diff[4U][59U] ;
   s8 txpwr_ht40diff[4U][59U] ;
   s8 txpwr_legacyhtdiff[4U][59U] ;
   u8 txpwr_5g_bw40base[4U][59U] ;
   u8 txpwr_5g_bw80base[4U][7U] ;
   s8 txpwr_5g_ofdmdiff[4U][4U] ;
   s8 txpwr_5g_bw20diff[4U][4U] ;
   s8 txpwr_5g_bw40diff[4U][4U] ;
   s8 txpwr_5g_bw80diff[4U][4U] ;
   u8 txpwr_safetyflag ;
   u16 eeprom_txpowerdiff ;
   u8 legacy_httxpowerdiff ;
   u8 antenna_txpwdiff[3U] ;
   u8 eeprom_regulatory ;
   u8 eeprom_thermalmeter ;
   u8 thermalmeter[2U] ;
   u16 tssi_13dbm ;
   u8 crystalcap ;
   u8 delta_iqk ;
   u8 delta_lck ;
   u8 legacy_ht_txpowerdiff ;
   bool apk_thermalmeterignore ;
   bool b1x1_recvcombine ;
   bool b1ss_support ;
   u8 channel_plan ;
};
#line 1990  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_efuse_ops {
   int (*efuse_onebyte_read)(struct ieee80211_hw *, u16 , u8 *) ;
   void (*efuse_logical_map_read)(struct ieee80211_hw *, u8 , u16 , u32 *) ;
};
#line 1996  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_tx_report {
   atomic_t sn ;
   u16 last_sent_sn ;
   unsigned long last_sent_time ;
   u16 last_recv_sn ;
   struct sk_buff_head queue ;
};
#line 2004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_ps_ctl {
   bool pwrdomain_protect ;
   bool in_powersavemode ;
   bool rfchange_inprogress ;
   bool swrf_processing ;
   bool hwradiooff ;
   bool support_aspm ;
   bool support_backdoor ;
   enum rt_psmode dot11_psmode ;
   bool swctrl_lps ;
   bool leisure_ps ;
   bool fwctrl_lps ;
   u8 fwctrl_psmode ;
   u8 reg_fwctrl_lps ;
   bool fw_current_inpsmode ;
   u8 reg_max_lps_awakeintvl ;
   bool report_linked ;
   bool low_power_enable ;
   bool inactiveps ;
   u32 rfoff_reason ;
   u32 cur_ps_level ;
   u32 reg_rfps_level ;
   u8 const_amdpci_aspm ;
   bool pwrdown_mode ;
   enum rf_pwrstate inactive_pwrstate ;
   enum rf_pwrstate rfpwr_state ;
   bool sw_ps_enabled ;
   bool state ;
   bool state_inap ;
   bool multi_buffered ;
   u16 nullfunc_seq ;
   unsigned int dtim_counter ;
   unsigned int sleep_ms ;
   unsigned long last_sleep_jiffies ;
   unsigned long last_awake_jiffies ;
   unsigned long last_delaylps_stamp_jiffies ;
   unsigned long last_dtim ;
   unsigned long last_beacon ;
   unsigned long last_action ;
   unsigned long last_slept ;
   struct rtl_p2p_ps_info p2p_ps_info ;
   u8 pwr_mode ;
   u8 smart_ps ;
   u8 wo_wlan_mode ;
   u8 arp_offload_enable ;
   u8 gtk_offload_enable ;
   u32 wakeup_reason ;
};
#line 2076  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_stats {
   u8 psaddr[6U] ;
   u32 mac_time[2U] ;
   s8 rssi ;
   u8 signal ;
   u8 noise ;
   u8 rate ;
   u8 received_channel ;
   u8 control ;
   u8 mask ;
   u8 freq ;
   u16 len ;
   u64 tsf ;
   u32 beacon_time ;
   u8 nic_type ;
   u16 length ;
   u8 signalquality ;
   s32 recvsignalpower ;
   s8 rxpower ;
   u8 signalstrength ;
   u16 hwerror : 1 ;
   u16 crc : 1 ;
   u16 icv : 1 ;
   u16 shortpreamble : 1 ;
   u16 antenna : 1 ;
   u16 decrypted : 1 ;
   u16 wakeup : 1 ;
   u32 timestamp_low ;
   u32 timestamp_high ;
   bool shift ;
   u8 rx_drvinfo_size ;
   u8 rx_bufshift ;
   bool isampdu ;
   bool isfirst_ampdu ;
   bool rx_is40mhzpacket ;
   u8 rx_packet_bw ;
   u32 rx_pwdb_all ;
   u8 rx_mimo_signalstrength[4U] ;
   s8 rx_mimo_signalquality[4U] ;
   u8 rx_mimo_evm_dbm[4U] ;
   u16 cfo_short[4U] ;
   u16 cfo_tail[4U] ;
   s8 rx_mimo_sig_qual[4U] ;
   u8 rx_pwr[4U] ;
   u8 rx_snr[4U] ;
   u8 bandwidth ;
   u8 bt_coex_pwr_adjust ;
   bool packet_matchbssid ;
   bool is_cck ;
   bool is_ht ;
   bool packet_toself ;
   bool packet_beacon ;
   s8 cck_adc_pwdb[4U] ;
   bool is_vht ;
   bool is_short_gi ;
   u8 vht_nss ;
   u8 packet_report_type ;
   u32 macid ;
   u32 bt_rx_rssi_percentage ;
   u32 macid_valid_entry[2U] ;
};
#line 2146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rt_link_detect {
   u32 bcn_rx_inperiod ;
   u32 roam_times ;
   u32 num_tx_in4period[4U] ;
   u32 num_rx_in4period[4U] ;
   u32 num_tx_inperiod ;
   u32 num_rx_inperiod ;
   bool busytraffic ;
   bool tx_busy_traffic ;
   bool rx_busy_traffic ;
   bool higher_busytraffic ;
   bool higher_busyrxtraffic ;
   u32 tidtx_in4period[9U][4U] ;
   u32 tidtx_inperiod[9U] ;
   bool higher_busytxtraffic[9U] ;
};
#line 2168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_tcb_desc {
   u8 packet_bw : 2 ;
   u8 multicast : 1 ;
   u8 broadcast : 1 ;
   u8 rts_stbc : 1 ;
   u8 rts_enable : 1 ;
   u8 cts_enable : 1 ;
   u8 rts_use_shortpreamble : 1 ;
   u8 rts_use_shortgi : 1 ;
   u8 rts_sc : 1 ;
   u8 rts_bw : 1 ;
   u8 rts_rate ;
   u8 use_shortgi : 1 ;
   u8 use_shortpreamble : 1 ;
   u8 use_driver_rate : 1 ;
   u8 disable_ratefallback : 1 ;
   u8 use_spe_rpt : 1 ;
   u8 ratr_index ;
   u8 mac_id ;
   u8 hw_rate ;
   u8 last_inipkt : 1 ;
   u8 cmd_or_init : 1 ;
   u8 queue_index ;
   u8 empkt_num ;
   u32 empkt_len[10U] ;
   bool tx_enable_sw_calc_duration ;
};
#line 2204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_wow_pattern {
   u8 type ;
   u16 crc ;
   u32 mask[4U] ;
};
#line 2211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_int {
   u32 inta ;
   u32 intb ;
   u32 intc ;
   u32 intd ;
};
#line 2218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_hal_ops {
   int (*init_sw_vars)(struct ieee80211_hw *) ;
   void (*deinit_sw_vars)(struct ieee80211_hw *) ;
   void (*read_chip_version)(struct ieee80211_hw *) ;
   void (*read_eeprom_info)(struct ieee80211_hw *) ;
   void (*interrupt_recognized)(struct ieee80211_hw *, struct rtl_int *) ;
   int (*hw_init)(struct ieee80211_hw *) ;
   void (*hw_disable)(struct ieee80211_hw *) ;
   void (*hw_suspend)(struct ieee80211_hw *) ;
   void (*hw_resume)(struct ieee80211_hw *) ;
   void (*enable_interrupt)(struct ieee80211_hw *) ;
   void (*disable_interrupt)(struct ieee80211_hw *) ;
   int (*set_network_type)(struct ieee80211_hw *, enum nl80211_iftype ) ;
   void (*set_chk_bssid)(struct ieee80211_hw *, bool ) ;
   void (*set_bw_mode)(struct ieee80211_hw *, enum nl80211_channel_type ) ;
   u8 (*switch_channel)(struct ieee80211_hw *) ;
   void (*set_qos)(struct ieee80211_hw *, int ) ;
   void (*set_bcn_reg)(struct ieee80211_hw *) ;
   void (*set_bcn_intv)(struct ieee80211_hw *) ;
   void (*update_interrupt_mask)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_hw_reg)(struct ieee80211_hw *, u8 , u8 *) ;
   void (*set_hw_reg)(struct ieee80211_hw *, u8 , u8 *) ;
   void (*update_rate_tbl)(struct ieee80211_hw *, struct ieee80211_sta *, u8 , bool ) ;
   void (*pre_fill_tx_bd_desc)(struct ieee80211_hw *, u8 *, u8 *, u8 , struct sk_buff *, dma_addr_t ) ;
   void (*update_rate_mask)(struct ieee80211_hw *, u8 ) ;
   u16 (*rx_desc_buff_remained_cnt)(struct ieee80211_hw *, u8 ) ;
   void (*rx_check_dma_ok)(struct ieee80211_hw *, u8 *, u8 ) ;
   void (*fill_tx_desc)(struct ieee80211_hw *, struct ieee80211_hdr *, u8 *, u8 *, struct ieee80211_tx_info *, struct ieee80211_sta *, struct sk_buff *, u8 , struct rtl_tcb_desc *) ;
   void (*fill_fake_txdesc)(struct ieee80211_hw *, u8 *, u32 , bool ) ;
   void (*fill_tx_cmddesc)(struct ieee80211_hw *, u8 *, bool , bool , struct sk_buff *) ;
   void (*fill_tx_special_desc)(struct ieee80211_hw *, u8 *, u8 *, struct sk_buff *, u8 ) ;
   bool (*query_rx_desc)(struct ieee80211_hw *, struct rtl_stats *, struct ieee80211_rx_status *, u8 *, struct sk_buff *) ;
   void (*set_channel_access)(struct ieee80211_hw *) ;
   bool (*radio_onoff_checking)(struct ieee80211_hw *, u8 *) ;
   void (*dm_watchdog)(struct ieee80211_hw *) ;
   void (*scan_operation_backup)(struct ieee80211_hw *, u8 ) ;
   bool (*set_rf_power_state)(struct ieee80211_hw *, enum rf_pwrstate ) ;
   void (*led_control)(struct ieee80211_hw *, enum led_ctl_mode ) ;
   void (*set_desc)(struct ieee80211_hw *, u8 *, bool , u8 , u8 *) ;
   u64 (*get_desc)(struct ieee80211_hw *, u8 *, bool , u8 ) ;
   bool (*is_tx_desc_closed)(struct ieee80211_hw *, u8 , u16 ) ;
   void (*tx_polling)(struct ieee80211_hw *, u8 ) ;
   void (*enable_hw_sec)(struct ieee80211_hw *) ;
   void (*set_key)(struct ieee80211_hw *, u32 , u8 *, bool , u8 , bool , bool ) ;
   void (*init_sw_leds)(struct ieee80211_hw *) ;
   void (*deinit_sw_leds)(struct ieee80211_hw *) ;
   u32 (*get_bbreg)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*set_bbreg)(struct ieee80211_hw *, u32 , u32 , u32 ) ;
   u32 (*get_rfreg)(struct ieee80211_hw *, enum radio_path , u32 , u32 ) ;
   void (*set_rfreg)(struct ieee80211_hw *, enum radio_path , u32 , u32 , u32 ) ;
   void (*linked_set_reg)(struct ieee80211_hw *) ;
   void (*chk_switch_dmdp)(struct ieee80211_hw *) ;
   void (*dualmac_easy_concurrent)(struct ieee80211_hw *) ;
   void (*dualmac_switch_to_dmdp)(struct ieee80211_hw *) ;
   bool (*phy_rf6052_config)(struct ieee80211_hw *) ;
   void (*phy_rf6052_set_cck_txpower)(struct ieee80211_hw *, u8 *) ;
   void (*phy_rf6052_set_ofdm_txpower)(struct ieee80211_hw *, u8 *, u8 ) ;
   bool (*config_bb_with_headerfile)(struct ieee80211_hw *, u8 ) ;
   bool (*config_bb_with_pgheaderfile)(struct ieee80211_hw *, u8 ) ;
   void (*phy_lc_calibrate)(struct ieee80211_hw *, bool ) ;
   void (*phy_set_bw_mode_callback)(struct ieee80211_hw *) ;
   void (*dm_dynamic_txpower)(struct ieee80211_hw *) ;
   void (*c2h_command_handle)(struct ieee80211_hw *) ;
   void (*bt_wifi_media_status_notify)(struct ieee80211_hw *, bool ) ;
   void (*bt_coex_off_before_lps)(struct ieee80211_hw *) ;
   void (*fill_h2c_cmd)(struct ieee80211_hw *, u8 , u32 , u8 *) ;
   void (*set_default_port_id_cmd)(struct ieee80211_hw *) ;
   bool (*get_btc_status)(void) ;
   bool (*is_fw_header)(struct rtlwifi_firmware_header *) ;
   void (*add_wowlan_pattern)(struct ieee80211_hw *, struct rtl_wow_pattern *, u8 ) ;
   u16 (*get_available_desc)(struct ieee80211_hw *, u8 ) ;
   void (*c2h_ra_report_handler)(struct ieee80211_hw *, u8 *, u8 ) ;
};
#line 2336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_intf_ops {
   void (*read_efuse_byte)(struct ieee80211_hw *, u16 , u8 *) ;
   int (*adapter_start)(struct ieee80211_hw *) ;
   void (*adapter_stop)(struct ieee80211_hw *) ;
   bool (*check_buddy_priv)(struct ieee80211_hw *, struct rtl_priv **) ;
   int (*adapter_tx)(struct ieee80211_hw *, struct ieee80211_sta *, struct sk_buff *, struct rtl_tcb_desc *) ;
   void (*flush)(struct ieee80211_hw *, u32 , bool ) ;
   int (*reset_trx_ring)(struct ieee80211_hw *) ;
   bool (*waitq_insert)(struct ieee80211_hw *, struct ieee80211_sta *, struct sk_buff *) ;
   void (*disable_aspm)(struct ieee80211_hw *) ;
   void (*enable_aspm)(struct ieee80211_hw *) ;
};
#line 2361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_mod_params {
   u64 debug_mask ;
   bool sw_crypto ;
   int debug_level ;
   bool inactiveps ;
   bool swctrl_lps ;
   bool fwctrl_lps ;
   bool msi_support ;
   bool dma64 ;
   int aspm_support ;
   bool disable_watchdog ;
   bool int_clear ;
   int ant_sel ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_hal_usbint_cfg {
   u32 in_ep_num ;
   u32 rx_urb_num ;
   u32 rx_max_size ;
   void (*usb_rx_hdl)(struct ieee80211_hw *, struct sk_buff *) ;
   void (*usb_rx_segregate_hdl)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff_head *) ;
   void (*usb_tx_cleanup)(struct ieee80211_hw *, struct sk_buff *) ;
   int (*usb_tx_post_hdl)(struct ieee80211_hw *, struct urb *, struct sk_buff *) ;
   struct sk_buff *(*usb_tx_aggregate_hdl)(struct ieee80211_hw *, struct sk_buff_head *) ;
   int (*usb_endpoint_mapping)(struct ieee80211_hw *) ;
   u16 (*usb_mq_to_hwq)(__le16 , u16 ) ;
};
#line 2423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_hal_cfg {
   u8 bar_id ;
   bool write_readback ;
   char *name ;
   char *alt_fw_name ;
   struct rtl_hal_ops *ops ;
   struct rtl_mod_params *mod_params ;
   struct rtl_hal_usbint_cfg *usb_interface_cfg ;
   enum rtl_spec_ver spec_ver ;
   u32 maps[91U] ;
};
#line 2440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_locks {
   struct mutex conf_mutex ;
   struct mutex ips_mutex ;
   struct mutex lps_mutex ;
   spinlock_t irq_th_lock ;
   spinlock_t h2c_lock ;
   spinlock_t rf_ps_lock ;
   spinlock_t rf_lock ;
   spinlock_t waitq_lock ;
   spinlock_t entry_list_lock ;
   spinlock_t usb_lock ;
   spinlock_t c2hcmd_lock ;
   spinlock_t scan_list_lock ;
   spinlock_t fw_ps_lock ;
   spinlock_t cck_and_rw_pagea_lock ;
   spinlock_t iqk_lock ;
};
#line 2466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_works {
   struct ieee80211_hw *hw ;
   struct timer_list watchdog_timer ;
   struct timer_list dualmac_easyconcurrent_retrytimer ;
   struct timer_list fw_clockoff_timer ;
   struct timer_list fast_antenna_training_timer ;
   struct tasklet_struct irq_tasklet ;
   struct tasklet_struct irq_prepare_bcn_tasklet ;
   struct workqueue_struct *rtl_wq ;
   struct delayed_work watchdog_wq ;
   struct delayed_work ips_nic_off_wq ;
   struct delayed_work c2hcmd_wq ;
   struct delayed_work ps_work ;
   struct delayed_work ps_rfon_wq ;
   struct delayed_work fwevt_wq ;
   struct work_struct lps_change_work ;
   struct work_struct fill_h2c_cmd ;
};
#line 2493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_debug {
   struct dentry *debugfs_dir ;
   char debugfs_name[20U] ;
};
#line 2503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_dualmac_easy_concurrent_ctl {
   enum band_type currentbandtype_backfordmdp ;
   bool close_bbandrf_for_dmsp ;
   bool change_to_dmdp ;
   bool change_to_dmsp ;
   bool switch_in_process ;
};
#line 2511  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_dmsp_ctl {
   bool activescan_for_slaveofdmsp ;
   bool scan_for_anothermac_fordmsp ;
   bool scan_for_itself_fordmsp ;
   bool writedig_for_anothermacofdmsp ;
   u32 curdigvalue_for_anothermacofdmsp ;
   bool changecckpdstate_for_anothermacofdmsp ;
   u8 curcckpdstate_for_anothermacofdmsp ;
   bool changetxhighpowerlvl_for_anothermacofdmsp ;
   u8 curtxhighlvl_for_anothermacofdmsp ;
   long rssivalmin_for_anothermacofdmsp ;
};
#line 2524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct ps_t {
   u8 pre_ccastate ;
   u8 cur_ccasate ;
   u8 pre_rfstate ;
   u8 cur_rfstate ;
   u8 initialize ;
   long rssi_val_min ;
};
#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct dig_t {
   u32 rssi_lowthresh ;
   u32 rssi_highthresh ;
   u32 fa_lowthresh ;
   u32 fa_highthresh ;
   long last_min_undec_pwdb_for_dm ;
   long rssi_highpower_lowthresh ;
   long rssi_highpower_highthresh ;
   u32 recover_cnt ;
   u32 pre_igvalue ;
   u32 cur_igvalue ;
   long rssi_val ;
   u8 dig_enable_flag ;
   u8 dig_ext_port_stage ;
   u8 dig_algorithm ;
   u8 dig_twoport_algorithm ;
   u8 dig_dbgmode ;
   u8 dig_slgorithm_switch ;
   u8 cursta_cstate ;
   u8 presta_cstate ;
   u8 curmultista_cstate ;
   u8 stop_dig ;
   s8 back_val ;
   s8 back_range_max ;
   s8 back_range_min ;
   u8 rx_gain_max ;
   u8 rx_gain_min ;
   u8 min_undec_pwdb_for_dm ;
   u8 rssi_val_min ;
   u8 pre_cck_cca_thres ;
   u8 cur_cck_cca_thres ;
   u8 pre_cck_pd_state ;
   u8 cur_cck_pd_state ;
   u8 pre_cck_fa_state ;
   u8 cur_cck_fa_state ;
   u8 pre_ccastate ;
   u8 cur_ccasate ;
   u8 large_fa_hit ;
   u8 forbidden_igi ;
   u8 dig_state ;
   u8 dig_highpwrstate ;
   u8 cur_sta_cstate ;
   u8 pre_sta_cstate ;
   u8 cur_ap_cstate ;
   u8 pre_ap_cstate ;
   u8 cur_pd_thstate ;
   u8 pre_pd_thstate ;
   u8 cur_cs_ratiostate ;
   u8 pre_cs_ratiostate ;
   u8 backoff_enable_flag ;
   s8 backoffval_range_max ;
   s8 backoffval_range_min ;
   u8 dig_min_0 ;
   u8 dig_min_1 ;
   u8 bt30_cur_igi ;
   bool media_connect_0 ;
   bool media_connect_1 ;
   u32 antdiv_rssi_max ;
   u32 rssi_max ;
};
#line 2595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_global_var {
   struct list_head glb_priv_list ;
   spinlock_t glb_list_lock ;
};
#line 2605  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_btc_info {
   u8 bt_type ;
   u8 btcoexist ;
   u8 ant_num ;
   u8 single_ant_path ;
   u8 ap_num ;
   bool in_4way ;
   unsigned long in_4way_ts ;
};
#line 2616 
struct rtl_btc_ops;
#line 2616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct bt_coexist_info {
   struct rtl_btc_ops *btc_ops ;
   struct rtl_btc_info btc_info ;
   void *btc_context ;
   void *wifi_only_context ;
   u8 eeprom_bt_coexist ;
   u8 eeprom_bt_type ;
   u8 eeprom_bt_ant_num ;
   u8 eeprom_bt_ant_isol ;
   u8 eeprom_bt_radio_shared ;
   u8 bt_coexistence ;
   u8 bt_ant_num ;
   u8 bt_coexist_type ;
   u8 bt_state ;
   u8 bt_cur_state ;
   u8 bt_ant_isolation ;
   u8 bt_pape_ctrl ;
   u8 bt_service ;
   u8 bt_radio_shared_type ;
   u8 bt_rfreg_origin_1e ;
   u8 bt_rfreg_origin_1f ;
   u8 bt_rssi_state ;
   u32 ratio_tx ;
   u32 ratio_pri ;
   u32 bt_edca_ul ;
   u32 bt_edca_dl ;
   bool init_set ;
   bool bt_busy_traffic ;
   bool bt_traffic_mode_set ;
   bool bt_non_traffic_mode_set ;
   bool fw_coexist_all_off ;
   bool sw_coexist_all_off ;
   bool hw_coexist_all_off ;
   u32 cstate ;
   u32 previous_state ;
   u32 cstate_h ;
   u32 previous_state_h ;
   u8 bt_pre_rssi_state ;
   u8 bt_pre_rssi_state1 ;
   u8 reg_bt_iso ;
   u8 reg_bt_sco ;
   bool balance_on ;
   u8 bt_active_zero_cnt ;
   bool cur_bt_disabled ;
   bool pre_bt_disabled ;
   u8 bt_profile_case ;
   u8 bt_profile_action ;
   bool bt_busy ;
   bool hold_for_bt_operation ;
   u8 lps_counter ;
};
#line 2676  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_btc_ops {
   void (*btc_init_variables)(struct rtl_priv *) ;
   void (*btc_init_variables_wifi_only)(struct rtl_priv *) ;
   void (*btc_deinit_variables)(struct rtl_priv *) ;
   void (*btc_init_hal_vars)(struct rtl_priv *) ;
   void (*btc_power_on_setting)(struct rtl_priv *) ;
   void (*btc_init_hw_config)(struct rtl_priv *) ;
   void (*btc_init_hw_config_wifi_only)(struct rtl_priv *) ;
   void (*btc_ips_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_lps_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_scan_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_scan_notify_wifi_only)(struct rtl_priv *, u8 ) ;
   void (*btc_connect_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_mediastatus_notify)(struct rtl_priv *, enum rt_media_status ) ;
   void (*btc_periodical)(struct rtl_priv *) ;
   void (*btc_halt_notify)(struct rtl_priv *) ;
   void (*btc_btinfo_notify)(struct rtl_priv *, u8 *, u8 ) ;
   void (*btc_btmpinfo_notify)(struct rtl_priv *, u8 *, u8 ) ;
   bool (*btc_is_limited_dig)(struct rtl_priv *) ;
   bool (*btc_is_disable_edca_turbo)(struct rtl_priv *) ;
   bool (*btc_is_bt_disabled)(struct rtl_priv *) ;
   void (*btc_special_packet_notify)(struct rtl_priv *, u8 ) ;
   void (*btc_switch_band_notify)(struct rtl_priv *, u8 , bool ) ;
   void (*btc_switch_band_notify_wifi_only)(struct rtl_priv *, u8 , bool ) ;
   void (*btc_display_bt_coex_info)(struct rtl_priv *, struct seq_file *) ;
   void (*btc_record_pwr_mode)(struct rtl_priv *, u8 *, u8 ) ;
   u8 (*btc_get_lps_val)(struct rtl_priv *) ;
   u8 (*btc_get_rpwm_val)(struct rtl_priv *) ;
   bool (*btc_is_bt_ctrl_lps)(struct rtl_priv *) ;
   void (*btc_get_ampdu_cfg)(struct rtl_priv *, u8 *, u8 *, u8 *) ;
   bool (*btc_is_bt_lps_on)(struct rtl_priv *) ;
};
#line 2718  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct proxim {
   bool proxim_on ;
   void *proximity_priv ;
   int (*proxim_rx)(struct ieee80211_hw *, struct rtl_stats *, struct sk_buff *) ;
   u8 (*proxim_get_var)(struct ieee80211_hw *, u8 ) ;
};
#line 2740  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_scan_list {
   int num ;
   struct list_head list ;
};
#line 2745 
struct rtl_rate_priv;
#line 2745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_priv {
   struct ieee80211_hw *hw ;
   struct completion firmware_loading_complete ;
   struct list_head list ;
   struct rtl_priv *buddy_priv ;
   struct rtl_global_var *glb_var ;
   struct rtl_dualmac_easy_concurrent_ctl easy_concurrent_ctl ;
   struct rtl_dmsp_ctl dmsp_ctl ;
   struct rtl_locks locks ;
   struct rtl_works works ;
   struct rtl_mac mac80211 ;
   struct rtl_hal rtlhal ;
   struct rtl_regulatory regd ;
   struct rtl_rfkill rfkill ;
   struct rtl_io io ;
   struct rtl_phy phy ;
   struct rtl_dm dm ;
   struct rtl_security sec ;
   struct rtl_efuse efuse ;
   struct rtl_led_ctl ledctl ;
   struct rtl_tx_report tx_report ;
   struct rtl_scan_list scan_list ;
   struct rtl_ps_ctl psc ;
   struct rate_adaptive ra ;
   struct dynamic_primary_cca primarycca ;
   struct wireless_stats stats ;
   struct rt_link_detect link_info ;
   struct false_alarm_statistics falsealm_cnt ;
   struct rtl_rate_priv *rate_priv ;
   struct list_head entry_list ;
   struct sk_buff_head c2hcmd_queue ;
   struct rtl_debug dbg ;
   int max_fw_size ;
   struct rtl_hal_cfg *cfg ;
   struct rtl_intf_ops *intf_ops ;
   unsigned long status ;
   struct dig_t dm_digtable ;
   struct ps_t dm_pstable ;
   u32 reg_874 ;
   u32 reg_c70 ;
   u32 reg_85c ;
   u32 reg_a74 ;
   bool reg_init ;
   bool bt_operation_on ;
   __le32 *usb_data ;
   int usb_data_index ;
   bool initialized ;
   bool enter_ps ;
   u8 rate_mask[5U] ;
   struct proxim proximity ;
   struct bt_coexist_info btcoexist ;
   bool use_new_trx_flow ;
   struct wiphy_wowlan_support wowlan ;
   u8 priv[0U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/x86_init.h"
struct pci_dev;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/topology.h"
struct pci_bus;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};
#line 799  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
enum acm_method {
    EACMWAY0_SWANDHW = 0,
    EACMWAY1_HW = 1,
    EACMWAY2_SW = 2
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct hotplug_slot;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef int pci_power_t;
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;
#line 162 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;
#line 282 
struct pcie_link_state;
#line 283 
struct pci_vpd;
#line 284 
struct pci_sriov;
#line 285 
struct pci_p2pdma;
#line 290 
struct aer_stats;
#line 290 
struct pci_driver;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
union __anonunion_2054 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u16 aer_cap ;
   struct aer_stats *aer_stats ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   unsigned long *dma_alias_mask ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   unsigned int imm_ready : 1 ;
   u8 pm_cap ;
   unsigned int pme_support : 5 ;
   unsigned int pme_poll : 1 ;
   unsigned int d1_support : 1 ;
   unsigned int d2_support : 1 ;
   unsigned int no_d1d2 : 1 ;
   unsigned int no_d3cold : 1 ;
   unsigned int bridge_d3 : 1 ;
   unsigned int d3cold_allowed : 1 ;
   unsigned int mmio_always_on : 1 ;
   unsigned int wakeup_prepared : 1 ;
   unsigned int runtime_d3cold : 1 ;
   unsigned int skip_bus_pm : 1 ;
   unsigned int ignore_hotplug : 1 ;
   unsigned int hotplug_user_indicators : 1 ;
   unsigned int clear_retrain_link : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   unsigned int ltr_path : 1 ;
   unsigned int eetlp_prefix_path : 1 ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int transparent : 1 ;
   unsigned int io_window : 1 ;
   unsigned int pref_window : 1 ;
   unsigned int pref_64_window : 1 ;
   unsigned int multifunction : 1 ;
   unsigned int is_busmaster : 1 ;
   unsigned int no_msi : 1 ;
   unsigned int no_64bit_msi : 1 ;
   unsigned int block_cfg_access : 1 ;
   unsigned int broken_parity_status : 1 ;
   unsigned int irq_reroute_variant : 2 ;
   unsigned int msi_enabled : 1 ;
   unsigned int msix_enabled : 1 ;
   unsigned int ari_enabled : 1 ;
   unsigned int ats_enabled : 1 ;
   unsigned int pasid_enabled : 1 ;
   unsigned int pri_enabled : 1 ;
   unsigned int is_managed : 1 ;
   unsigned int needs_freset : 1 ;
   unsigned int state_saved : 1 ;
   unsigned int is_physfn : 1 ;
   unsigned int is_virtfn : 1 ;
   unsigned int reset_fn : 1 ;
   unsigned int is_hotplug_bridge : 1 ;
   unsigned int shpc_managed : 1 ;
   unsigned int is_thunderbolt : 1 ;
   unsigned int untrusted : 1 ;
   unsigned int __aer_firmware_first_valid : 1 ;
   unsigned int __aer_firmware_first : 1 ;
   unsigned int broken_intx_masking : 1 ;
   unsigned int io_window_1k : 1 ;
   unsigned int irq_managed : 1 ;
   unsigned int non_compliant_bars : 1 ;
   unsigned int is_probed : 1 ;
   unsigned int link_active_reporting : 1 ;
   unsigned int no_vf_scan : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   unsigned int broken_cmd_compl : 1 ;
   unsigned int ptm_root : 1 ;
   unsigned int ptm_enabled : 1 ;
   u8 ptm_granularity ;
   struct attribute_group **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_2054 __anonCompField_pci_dev_197 ;
   u16 ats_cap ;
   u8 ats_stu ;
   u16 pri_cap ;
   u32 pri_reqs_alloc ;
   unsigned int pasid_required : 1 ;
   u16 pasid_cap ;
   u16 pasid_features ;
   struct pci_p2pdma *p2pdma ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
   unsigned long priv_flags ;
};
#line 493 
struct pci_ops;
#line 493 
struct msi_controller;
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int is_added : 1 ;
};
#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_ops {
   int (*add_bus)(struct pci_bus *) ;
   void (*remove_bus)(struct pci_bus *) ;
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};
#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_prepare)(struct pci_dev *) ;
   void (*reset_done)(struct pci_dev *) ;
   void (*resume)(struct pci_dev *) ;
};
#line 824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char *name ;
   struct pci_device_id *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers *err_handler ;
   struct attribute_group **groups ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl_tx_buffer_desc {
   u32 dword[16U] ;
} __attribute__((__packed__));
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl_tx_desc {
   u32 dword[16U] ;
} __attribute__((__packed__));
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl_rx_buffer_desc {
   u32 dword[4U] ;
} __attribute__((__packed__));
#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl_rx_desc {
   u32 dword[8U] ;
} __attribute__((__packed__));
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl8192_tx_ring {
   struct rtl_tx_desc *desc ;
   dma_addr_t dma ;
   unsigned int idx ;
   unsigned int entries ;
   struct sk_buff_head queue ;
   struct rtl_tx_buffer_desc *buffer_desc ;
   dma_addr_t buffer_desc_dma ;
   u16 cur_tx_wp ;
   u16 cur_tx_rp ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl8192_rx_ring {
   struct rtl_rx_desc *desc ;
   dma_addr_t dma ;
   unsigned int idx ;
   struct sk_buff *rx_buf[512U] ;
   struct rtl_rx_buffer_desc *buffer_desc ;
   u16 next_rx_rp ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl_pci {
   struct pci_dev *pdev ;
   bool irq_enabled ;
   bool driver_is_goingto_unload ;
   bool up_first_time ;
   bool first_init ;
   bool being_init_adapter ;
   bool init_ready ;
   struct rtl8192_tx_ring tx_ring[9U] ;
   int txringcount[9U] ;
   u32 transmit_config ;
   struct rtl8192_rx_ring rx_ring[2U] ;
   int rxringcount ;
   u16 rxbuffersize ;
   u32 receive_config ;
   u8 irq_alloc ;
   u32 irq_mask[4U] ;
   u32 sys_irq_mask ;
   u32 reg_bcn_ctrl_val ;
   u8 const_pci_aspm ;
   u8 const_amdpci_aspm ;
   u8 const_hwsw_rfoff_d3 ;
   u8 const_support_pciaspm ;
   u8 const_hostpci_aspm_setting ;
   u8 const_devicepci_aspm_setting ;
   bool support_aspm ;
   bool support_backdoor ;
   enum acm_method acm_method ;
   u16 shortretry_limit ;
   u16 longretry_limit ;
   bool msi_support ;
   bool using_msi ;
   bool int_clear ;
};
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct mp_adapter {
   u8 linkctrl_reg ;
   u8 busnumber ;
   u8 devnumber ;
   u8 funcnumber ;
   u8 pcibridge_busnum ;
   u8 pcibridge_devnum ;
   u8 pcibridge_funcnum ;
   u8 pcibridge_vendor ;
   u16 pcibridge_vendorid ;
   u16 pcibridge_deviceid ;
   u8 num4bytes ;
   u8 pcibridge_pciehdr_offset ;
   u8 pcibridge_linkctrlreg ;
   bool amd_l1_patch ;
};
#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
struct rtl_pci_priv {
   struct bt_coexist_info bt_coexist ;
   struct rtl_led_ctl ledctl ;
   struct rtl_pci dev ;
   struct mp_adapter ndis_adapter ;
};
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
struct rx_fwinfo {
   u8 gain_trsw[4U] ;
   u8 pwdb_all ;
   u8 cfosho[4U] ;
   u8 cfotail[4U] ;
   s8 rxevm[2U] ;
   s8 rxsnr[4U] ;
   u8 pdsnr[2U] ;
   u8 csi_current[2U] ;
   u8 csi_target[2U] ;
   u8 sigevm ;
   u8 max_ex_pwr ;
   u8 ex_intf_flag : 1 ;
   u8 sgi_en : 1 ;
   u8 rxsc : 2 ;
   u8 reserve : 4 ;
};
#line 424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
struct phy_sts_cck_8192s_t {
   u8 adc_pwdb_x[4U] ;
   u8 sq_rpt ;
   u8 cck_agc_rpt ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
enum fwcmd_iotype {
    FW_CMD_DIG_ENABLE = 0,
    FW_CMD_DIG_DISABLE = 1,
    FW_CMD_DIG_HALT = 2,
    FW_CMD_DIG_RESUME = 3,
    FW_CMD_HIGH_PWR_ENABLE = 4,
    FW_CMD_HIGH_PWR_DISABLE = 5,
    FW_CMD_RA_RESET = 6,
    FW_CMD_RA_ACTIVE = 7,
    FW_CMD_RA_REFRESH_N = 8,
    FW_CMD_RA_REFRESH_BG = 9,
    FW_CMD_RA_INIT = 10,
    FW_CMD_IQK_INIT = 11,
    FW_CMD_TXPWR_TRACK_ENABLE = 12,
    FW_CMD_TXPWR_TRACK_DISABLE = 13,
    FW_CMD_TXPWR_TRACK_THERMAL = 14,
    FW_CMD_PAUSE_DM_BY_SCAN = 15,
    FW_CMD_RESUME_DM_BY_SCAN = 16,
    FW_CMD_RA_REFRESH_N_COMB = 17,
    FW_CMD_RA_REFRESH_BG_COMB = 18,
    FW_CMD_ANTENNA_SW_ENABLE = 19,
    FW_CMD_ANTENNA_SW_DISABLE = 20,
    FW_CMD_TX_FEEDBACK_CCX_ENABLE = 21,
    FW_CMD_LPS_ENTER = 22,
    FW_CMD_LPS_LEAVE = 23,
    FW_CMD_DIG_MODE_SS = 24,
    FW_CMD_DIG_MODE_FA = 25,
    FW_CMD_ADD_A2_ENTRY = 26,
    FW_CMD_CTRL_DM_BY_DRIVER = 27,
    FW_CMD_CTRL_DM_BY_DRIVER_NEW = 28,
    FW_CMD_PAPE_CONTROL = 29,
    FW_CMD_IQK_ENABLE = 30
};
#line 435 
enum swchnlcmd_id {
    CMDID_END = 0,
    CMDID_SET_TXPOWEROWER_LEVEL = 1,
    CMDID_BBREGWRITE10 = 2,
    CMDID_WRITEPORT_ULONG = 3,
    CMDID_WRITEPORT_USHORT = 4,
    CMDID_WRITEPORT_UCHAR = 5,
    CMDID_RF_WRITEREG = 6
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
struct swchnlcmd {
   enum swchnlcmd_id cmdid ;
   u32 para1 ;
   u32 para2 ;
   u32 msdelay ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
struct fw_priv {
   u8 signature_0 ;
   u8 signature_1 ;
   u8 hci_sel ;
   u8 chip_version ;
   u8 customer_id_0 ;
   u8 customer_id_1 ;
   u8 rf_config ;
   u8 usb_ep_num ;
   u8 regulatory_class_0 ;
   u8 regulatory_class_1 ;
   u8 regulatory_class_2 ;
   u8 regulatory_class_3 ;
   u8 rfintfs ;
   u8 def_nettype ;
   u8 rsvd010 ;
   u8 rsvd011 ;
   u8 lbk_mode ;
   u8 mp_mode ;
   u8 rsvd020 ;
   u8 rsvd021 ;
   u8 rsvd022 ;
   u8 rsvd023 ;
   u8 rsvd024 ;
   u8 rsvd025 ;
   u8 qos_en ;
   u8 bw_40mhz_en ;
   u8 amsdu2ampdu_en ;
   u8 ampdu_en ;
   u8 rate_control_offload ;
   u8 aggregation_offload ;
   u8 rsvd030 ;
   u8 rsvd031 ;
   u8 beacon_offload ;
   u8 mlme_offload ;
   u8 hwpc_offload ;
   u8 tcp_checksum_offload ;
   u8 tcp_offload ;
   u8 ps_control_offload ;
   u8 wwlan_offload ;
   u8 rsvd040 ;
   u8 tcp_tx_frame_len_L ;
   u8 tcp_tx_frame_len_H ;
   u8 tcp_rx_frame_len_L ;
   u8 tcp_rx_frame_len_H ;
   u8 rsvd050 ;
   u8 rsvd051 ;
   u8 rsvd052 ;
   u8 rsvd053 ;
};
#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
struct fw_hdr {
   u16 signature ;
   u16 version ;
   u32 dmem_size ;
   u32 img_imem_size ;
   u32 img_sram_size ;
   u32 fw_priv_size ;
   u32 rsvd0 ;
   u32 rsvd1 ;
   u32 rsvd2 ;
   struct fw_priv fwpriv ;
};
#line 178 
enum fw_status {
    FW_STATUS_INIT = 0,
    FW_STATUS_LOAD_IMEM = 1,
    FW_STATUS_LOAD_EMEM = 2,
    FW_STATUS_LOAD_DMEM = 3,
    FW_STATUS_READY = 4
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
struct rt_firmware {
   struct fw_hdr *pfwheader ;
   enum fw_status fwstatus ;
   u16 firmwareversion ;
   u8 fw_imem[64000U] ;
   u8 fw_emem[64000U] ;
   u32 fw_imem_len ;
   u32 fw_emem_len ;
   u8 sz_fw_tmpbuffer[90000U] ;
   u32 sz_fw_tmpbufferlen ;
   u16 cmdpacket_fragthresold ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 1867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3589 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1868  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3591 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1869  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3593 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 1870  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion___u_3595 {
   struct sk_buff *__val ;
   char __c[1U] ;
};
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
struct h2c_set_pwrmode_parm {
   u8 mode ;
   u8 flag_low_traffic_en ;
   u8 flag_lpnav_en ;
   u8 flag_rf_low_snr_en ;
   u8 flag_dps_en ;
   u8 bcn_rx_en ;
   u8 bcn_pass_cnt ;
   u8 bcn_to ;
   u16 bcn_itv ;
   u8 app_itv ;
   u8 awake_bcn_itvl ;
   u8 smart_ps ;
   u8 bcn_pass_period ;
};
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
struct h2c_joinbss_rpt_parm {
   u8 opmode ;
   u8 ps_qos_info ;
   u8 bssid[6U] ;
   u16 bcnitv ;
   u16 aid ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct idt_bits {
   u16 ist : 3 ;
   u16 zero : 5 ;
   u16 type : 5 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
} __attribute__((__packed__));
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct gate_struct {
   u16 offset_low ;
   u16 segment ;
   struct idt_bits bits ;
   u16 offset_middle ;
   u32 offset_high ;
   u32 reserved ;
} __attribute__((__packed__));
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef struct gate_struct gate_desc;
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_ptr {
   unsigned short size ;
   unsigned long address ;
} __attribute__((__packed__));
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long p4dval_t;
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_p4d_t_4169 {
   p4dval_t p4d ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_p4d_t_4169 p4d_t;
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct flush_tlb_info;
#line 364 
struct mmu_gather;
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_callee_save {
   void *func ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_init_ops {
   unsigned int (*patch)(u8 , void *, unsigned long , unsigned int ) ;
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lazy_ops {
   void (*enter)(void) ;
   void (*leave)(void) ;
   void (*flush)(void) ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_time_ops {
   unsigned long long (*sched_clock)(void) ;
   unsigned long long (*steal_clock)(int ) ;
};
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_cpu_ops {
   void (*io_delay)(void) ;
   unsigned long (*get_debugreg)(int ) ;
   void (*set_debugreg)(int , unsigned long ) ;
   unsigned long (*read_cr0)(void) ;
   void (*write_cr0)(unsigned long ) ;
   void (*write_cr4)(unsigned long ) ;
   void (*load_tr_desc)(void) ;
   void (*load_gdt)(struct desc_ptr *) ;
   void (*load_idt)(struct desc_ptr *) ;
   void (*set_ldt)(void *, unsigned int ) ;
   unsigned long (*store_tr)(void) ;
   void (*load_tls)(struct thread_struct *, unsigned int ) ;
   void (*load_gs_index)(unsigned int ) ;
   void (*write_ldt_entry)(struct desc_struct *, int , void *) ;
   void (*write_gdt_entry)(struct desc_struct *, int , void *, int ) ;
   void (*write_idt_entry)(gate_desc *, int , gate_desc *) ;
   void (*alloc_ldt)(struct desc_struct *, unsigned int ) ;
   void (*free_ldt)(struct desc_struct *, unsigned int ) ;
   void (*load_sp0)(unsigned long ) ;
   void (*wbinvd)(void) ;
   void (*cpuid)(unsigned int *, unsigned int *, unsigned int *, unsigned int *) ;
   u64 (*read_msr)(unsigned int ) ;
   void (*write_msr)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_msr_safe)(unsigned int , int *) ;
   int (*write_msr_safe)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_pmc)(int ) ;
   void (*usergs_sysret64)(void) ;
   void (*iret)(void) ;
   void (*swapgs)(void) ;
   void (*start_context_switch)(struct task_struct *) ;
   void (*end_context_switch)(struct task_struct *) ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_mmu_ops {
   void (*flush_tlb_user)(void) ;
   void (*flush_tlb_kernel)(void) ;
   void (*flush_tlb_one_user)(unsigned long ) ;
   void (*flush_tlb_others)(struct cpumask *, struct flush_tlb_info *) ;
   void (*tlb_remove_table)(struct mmu_gather *, void *) ;
   void (*exit_mmap)(struct mm_struct *) ;
   struct paravirt_callee_save read_cr2 ;
   void (*write_cr2)(unsigned long ) ;
   unsigned long (*read_cr3)(void) ;
   void (*write_cr3)(unsigned long ) ;
   void (*activate_mm)(struct mm_struct *, struct mm_struct *) ;
   void (*dup_mmap)(struct mm_struct *, struct mm_struct *) ;
   int (*pgd_alloc)(struct mm_struct *) ;
   void (*pgd_free)(struct mm_struct *, pgd_t *) ;
   void (*alloc_pte)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pmd)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pud)(struct mm_struct *, unsigned long ) ;
   void (*alloc_p4d)(struct mm_struct *, unsigned long ) ;
   void (*release_pte)(unsigned long ) ;
   void (*release_pmd)(unsigned long ) ;
   void (*release_pud)(unsigned long ) ;
   void (*release_p4d)(unsigned long ) ;
   void (*set_pte)(pte_t *, pte_t ) ;
   void (*set_pte_at)(struct mm_struct *, unsigned long , pte_t *, pte_t ) ;
   void (*set_pmd)(pmd_t *, pmd_t ) ;
   pte_t (*ptep_modify_prot_start)(struct vm_area_struct *, unsigned long , pte_t *) ;
   void (*ptep_modify_prot_commit)(struct vm_area_struct *, unsigned long , pte_t *, pte_t ) ;
   struct paravirt_callee_save pte_val ;
   struct paravirt_callee_save make_pte ;
   struct paravirt_callee_save pgd_val ;
   struct paravirt_callee_save make_pgd ;
   void (*set_pud)(pud_t *, pud_t ) ;
   struct paravirt_callee_save pmd_val ;
   struct paravirt_callee_save make_pmd ;
   struct paravirt_callee_save pud_val ;
   struct paravirt_callee_save make_pud ;
   void (*set_p4d)(p4d_t *, p4d_t ) ;
   struct paravirt_callee_save p4d_val ;
   struct paravirt_callee_save make_p4d ;
   void (*set_pgd)(pgd_t *, pgd_t ) ;
   struct pv_lazy_ops lazy_mode ;
   void (*set_fixmap)(unsigned int , phys_addr_t , pgprot_t ) ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lock_ops {
   void (*queued_spin_lock_slowpath)(struct qspinlock *, u32 ) ;
   struct paravirt_callee_save queued_spin_unlock ;
   void (*wait)(u8 *, u8 ) ;
   void (*kick)(int ) ;
   struct paravirt_callee_save vcpu_is_preempted ;
};
#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_patch_template {
   struct pv_init_ops init ;
   struct pv_time_ops time ;
   struct pv_cpu_ops cpu ;
   struct pv_irq_ops irq ;
   struct pv_mmu_ops mmu ;
   struct pv_lock_ops lock ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 854  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct __anonstruct_f_5140 {
   u8 aifsn : 4 ;
   u8 acm : 1 ;
   u8 aci : 2 ;
   u8 reserved : 1 ;
};
#line 854  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
union aci_aifsn {
   u8 char_data ;
   struct __anonstruct_f_5140 f ;
};
#line 864 
enum wireless_mode {
    WIRELESS_MODE_UNKNOWN = 0,
    WIRELESS_MODE_A = 1,
    WIRELESS_MODE_B = 2,
    WIRELESS_MODE_G = 4,
    WIRELESS_MODE_AUTO = 8,
    WIRELESS_MODE_N_24G = 16,
    WIRELESS_MODE_N_5G = 32,
    WIRELESS_MODE_AC_5G = 64,
    WIRELESS_MODE_AC_24G = 128,
    WIRELESS_MODE_AC_ONLY = 256,
    WIRELESS_MODE_MAX = 2048
};
#line 1433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rssi_sta {
   long undec_sm_pwdb ;
   long undec_sm_cck ;
};
#line 1442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
struct rtl_sta_info {
   struct list_head list ;
   struct rtl_tid_data tids[9U] ;
   struct rssi_sta rssi_stat ;
   u8 rssi_level ;
   u16 wireless_mode ;
   u8 ratr_index ;
   u8 mimo_ps ;
   u8 mac_addr[6U] ;
} __attribute__((__packed__));
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct irq_data;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 132 
struct irq_domain_chip_generic;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_10108 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_10108 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_10109 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_10109 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_10125 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_10125 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_10129 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_10129 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_10130 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_10131 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_10130 __anonCompField_media_link_90 ;
   union __anonunion_10131 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_10133 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_10132 {
   struct __anonstruct_dev_10133 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_10132 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_10147 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_10148 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_10146 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_10147 i2c ;
   struct __anonstruct_custom_10148 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_10146 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_11049 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_11049 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 12  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_pci_scenario_rtl92se_driver_4 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/debug.h"
#line 152 
void _rtl_dbg_trace(struct rtl_priv *, u64, int, char * , ...);
#line 3090  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static u8 rtl_read_byte(struct rtl_priv *rtlpriv, u32 addr)
{
  #line 3092 
  return (*(rtlpriv->io.read8_sync))(rtlpriv,addr);
}

#line 3105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static void rtl_write_byte(struct rtl_priv *rtlpriv, u32 addr, u8 val8)
{
  #line 3107 
  (*(rtlpriv->io.write8_async))(rtlpriv,addr,(unsigned char)((int)val8));
  #line 3109 
  if ((int)(rtlpriv->cfg)->write_readback != 0) 
                                                #line 3110 
                                                (*(rtlpriv->io.read8_sync))(rtlpriv,addr);
  #line 3111 
  return;
}

#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.h"
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_init_sw_leds(struct ieee80211_hw *hw);
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.h"
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_sw_led_on(struct ieee80211_hw *hw, struct rtl_led *pled);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.h"
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_sw_led_off(struct ieee80211_hw *hw, struct rtl_led *pled);
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.h"
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_led_control(struct ieee80211_hw *hw, enum led_ctl_mode ledaction);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
static void _rtl92se_init_led(struct ieee80211_hw *hw, struct rtl_led *pled, enum rtl_led_pin ledpin)
{
  #line 12 
  pled->hw = (void *)hw;
  #line 13 
  pled->ledpin = ledpin;
  #line 14 
  pled->ledon = (_Bool)0;
  #line 15 
  return;
}

#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_init_sw_leds(struct ieee80211_hw *hw)
{
  #line 19 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 21 
  _rtl92se_init_led(hw,& rtlpriv->ledctl.sw_led0,(enum rtl_led_pin)LED_PIN_LED0);
  #line 22 
  _rtl92se_init_led(hw,& rtlpriv->ledctl.sw_led1,(enum rtl_led_pin)LED_PIN_LED1);
  #line 23 
  return;
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_sw_led_on(struct ieee80211_hw *hw, struct rtl_led *pled)
{
  #line 27 
  u8 ledcfg;
  #line 28 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 30 
  _rtl_dbg_trace(rtlpriv,256ULL,4,(char *)"LedAddr:%X ledpin=%d\n",754,(unsigned int)pled->ledpin);
  #line 33 
  ledcfg = rtl_read_byte(rtlpriv,754U);
  #line 35 
  switch ((unsigned int)pled->ledpin) {
    #line 36 
    case (unsigned int)0: 
                          #line 36 
    ;
    #line 37 
    break;
    #line 38 
    case (unsigned int)1: 
                          #line 38 
    ;
    #line 39 
    rtl_write_byte(rtlpriv,754U,(unsigned char)((int)ledcfg & 240));
    #line 40 
    break;
    #line 41 
    case (unsigned int)2: 
                          #line 41 
    ;
    #line 42 
    rtl_write_byte(rtlpriv,754U,(unsigned char)((int)ledcfg & 15));
    #line 43 
    break;
    #line 44 
    default: 
             #line 44 
    ;
    #line 45 
    printk((char *)"\001",(unsigned int)pled->ledpin);
    #line 47 
    break;
  }
  #line 49 
  pled->ledon = (_Bool)1;
  #line 50 
  return;
}

#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_sw_led_off(struct ieee80211_hw *hw, struct rtl_led *pled)
{
  #line 54 
  struct rtl_priv *rtlpriv;
  #line 55 
  u8 ledcfg;
  #line 57 
  rtlpriv = (struct rtl_priv *)hw->priv;
  #line 58 
  if (rtlpriv == (struct rtl_priv *)0 || rtlpriv->max_fw_size != 0) 
                                                                    #line 59 
                                                                    return;
  #line 60 
  _rtl_dbg_trace(rtlpriv,256ULL,4,(char *)"LedAddr:%X ledpin=%d\n",754,(unsigned int)pled->ledpin);
  #line 63 
  ledcfg = rtl_read_byte(rtlpriv,754U);
  #line 65 
  switch ((unsigned int)pled->ledpin) {
    #line 66 
    case (unsigned int)0: 
                          #line 66 
    ;
    #line 67 
    break;
    #line 68 
    case (unsigned int)1: 
                          #line 68 
    ;
    #line 69 
    ledcfg = (unsigned char)((unsigned int)ledcfg & 240U);
    #line 70 
    if ((int)rtlpriv->ledctl.led_opendrain != 0) 
                                                 #line 71 
                                                 rtl_write_byte(rtlpriv,754U,(unsigned char)((int)((unsigned int)ledcfg | 2U))); else 
                                                                    #line 73 
                                                                    rtl_write_byte(rtlpriv,754U,(unsigned char)((int)((unsigned int)ledcfg | 8U)));
    #line 74 
    break;
    #line 75 
    case (unsigned int)2: 
                          #line 75 
    ;
    #line 76 
    ledcfg = (unsigned char)((unsigned int)ledcfg & 15U);
    #line 77 
    rtl_write_byte(rtlpriv,754U,(unsigned char)((int)((unsigned int)ledcfg | 8U)));
    #line 78 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 80 
    printk((char *)"\001",(unsigned int)pled->ledpin);
    #line 82 
    break;
  }
  #line 84 
  pled->ledon = (_Bool)0;
  #line 85 
  return;
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
static void _rtl92se_sw_led_control(struct ieee80211_hw *hw, enum led_ctl_mode ledaction)
{
  #line 90 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 91 
  struct rtl_led *pled0 = & rtlpriv->ledctl.sw_led0;
  #line 93 
  switch ((unsigned int)ledaction) {
    #line 94 
    case (unsigned int)1: 
                          #line 94 
    ;
    #line 95 
    case (unsigned int)2: 
                          #line 95 
    ;
    #line 96 
    case (unsigned int)3: 
                          #line 96 
    ;
    #line 97 
    rtl92se_sw_led_on(hw,pled0);
    #line 98 
    break;
    #line 99 
    case (unsigned int)7: 
                          #line 99 
    ;
    #line 100 
    rtl92se_sw_led_off(hw,pled0);
    #line 101 
    break;
    #line 102 
    default: 
             #line 102 
    ;
    #line 103 
    break;
  }
  #line 105 
  return;
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/led.c"
void rtl92se_led_control(struct ieee80211_hw *hw, enum led_ctl_mode ledaction)
{
  #line 109 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 110 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 112 
  if (ppsc->rfoff_reason > 536870912U && ((((unsigned int)ledaction + 4294967292U <= 2U || ledaction == (unsigned int)LED_CTL_LINK) || (ledaction == (unsigned int)LED_CTL_NO_LINK || ledaction == (unsigned int)LED_CTL_START_TO_LINK)) || ledaction == (unsigned int)LED_CTL_POWER_ON)) 
    #line 120 
    return;
  #line 122 
  _rtl_dbg_trace(rtlpriv,256ULL,4,(char *)"ledaction %d\n",(unsigned int)ledaction);
  #line 124 
  _rtl92se_sw_led_control(hw,ledaction);
  #line 125 
  return;
}

/* compiler builtin: 
   void __builtin_unreachable(void);   */
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
#line 89 
void __warn_printk(char * , ...);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 15 
extern unsigned long vmalloc_base;
#line 16 
#line 16 
extern unsigned long vmemmap_base;
#line 29 
#line 29 
unsigned long __phys_addr(unsigned long);
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 18 
void *memset(void *, int, size_t);
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cpufeature.h"
__inline static bool _static_cpu_has(u16 bit)
{
  #line 177 
  ldv_inline_asm();
  #line 178 
  ldv_inline_asm();
  #line 211 
  t_yes: 
         #line 211 
  ;
  #line 212 
  return (_Bool)1;
  #line 213 
  t_no: 
        #line 213 
  ;
  #line 214 
  return (_Bool)0;
}

#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static bool is_vmalloc_addr(void *x)
{
  #line 633 
  int tmp_1;
  #line 631 
  unsigned long addr = (unsigned long)x;
  #line 633 
  if (addr >= vmalloc_base) {
    #line 633 
    unsigned long tmp_0;
    #line 633 
    if ((int)_static_cpu_has((unsigned short)528) != 0) 
                                                        #line 633 
                                                        tmp_0 = 14073748835532800UL; else 
                                                                    #line 633 
                                                                    tmp_0 = 35184372088832UL;
    #line 633 
    ;
    #line 633 
    if ((tmp_0 + vmalloc_base) + 18446744073709551615UL > addr) 
                                                                #line 633 
                                                                tmp_1 = 1; else 
                                                                    #line 633 
                                                                    tmp_1 = 0;
  }
  else 
       #line 633 
       tmp_1 = 0;
  #line 633 
  return (_Bool)(tmp_1 != 0);
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 1680 
#line 1680 
char *dev_driver_string(struct device *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
#line 21 
void debug_dma_map_single(struct device *, void *, unsigned long);
#line 24 
#line 24 
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t);
#line 28 
#line 28 
void debug_dma_mapping_error(struct device *, dma_addr_t);
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  #line 146 
  return (unsigned int)dma_direction <= 2U;
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static bool dma_is_direct(struct dma_map_ops *ops)
{
  #line 193 
  return (_Bool)((long)(ops == (struct dma_map_ops *)0) != 0L);
}

#line 200 
#line 200 
dma_addr_t dma_direct_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
#line 19 
extern struct dma_map_ops *dma_ops;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
{
  #line 23 
  return dma_ops;
}

#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  #line 263 
  if (dev->dma_ops != (struct dma_map_ops *)0) 
                                               #line 264 
                                               return dev->dma_ops;
  #line 265 
  return get_arch_dma_ops(dev->bus);
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_page_attrs(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 279 
  dma_addr_t addr;
  #line 278 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 281 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 282 
    ldv_inline_asm();
    #line 283 
    ldv_inline_asm();
    #line 284 
    ldv_inline_asm();
    #line 281 
    ;
  }
  #line 282 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 283 
                                    addr = dma_direct_map_page(dev,page,offset,size,dir,attrs); else 
                                                                    #line 285 
                                                                    addr = (*(ops->map_page))(dev,page,offset,size,dir,attrs);
  #line 286 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr);
  #line 288 
  return addr;
}

#line 433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  #line 435 
  debug_dma_mapping_error(dev,dma_addr);
  #line 437 
  if (dma_addr == 18446744073709551615ULL) 
                                           #line 438 
                                           return -12;
  #line 439 
  return 0;
}

#line 580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 584 
  int __ret_warn_once;
  {
    #line 584 
    bool __warned;
    #line 584 
    __ret_warn_once = (int)is_vmalloc_addr(ptr) != 0;
    #line 584 
    if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
      #line 584 
      __warned = (_Bool)1;
      {
        #line 584 
        int __ret_warn_on = 1;
        #line 584 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 584 
          __warn_printk((char *)"%s %s: ",dev_driver_string(dev),dev_name(dev));
          #line 585 
          ldv_inline_asm();
          #line 586 
          ldv_inline_asm();
        }
        #line 584 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
    }
    }
  #line 584 
  if ((long)((long)(__ret_warn_once != 0)) != 0L) 
                                                  #line 586 
                                                  return 18446744073709551615ULL;
  #line 587 
  debug_dma_map_single(dev,ptr,size);
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  return dma_map_page_attrs(dev,
                           (struct page *)((__phys_addr((unsigned long)ptr) >> 12) + vmemmap_base),
                           (unsigned long)ptr & 4095UL,size,dir,attrs);
}

#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 *addr1, u8 *addr2)
{
  #line 318 
  u32 fold = (*((u32 *)addr1) ^ *((u32 *)addr2)) | (unsigned int)((int)*((u16 *)(addr1 + 4U)) ^ (int)*((u16 *)(addr2 + 4U)));
  #line 321 
  return (_Bool)(fold == 0U);
}

#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_protected(__le16 fc)
{
  #line 332 
  return (_Bool)(((int)fc & 16384) != 0);
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_mgmt(__le16 fc)
{
  #line 350 
  return (_Bool)(((int)fc & 12) == 0);
}

#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_ctl(__le16 fc)
{
  #line 360 
  return (_Bool)(((int)fc & 12) == 4);
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_data_qos(__le16 fc)
{
  #line 384 
  return (_Bool)(((int)fc & 140) == 136);
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_beacon(__le16 fc)
{
  #line 468 
  return (_Bool)(((int)fc & 252) == 128);
}

#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_disassoc(__le16 fc)
{
  #line 488 
  return (_Bool)(((int)fc & 252) == 160);
}

#line 506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_deauth(__le16 fc)
{
  #line 508 
  return (_Bool)(((int)fc & 252) == 192);
}

#line 516  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_action(__le16 fc)
{
  #line 518 
  return (_Bool)(((int)fc & 252) == 208);
}

#line 606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_nullfunc(__le16 fc)
{
  #line 608 
  return (_Bool)(((int)fc & 252) == 72);
}

#line 3160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool _ieee80211_is_robust_mgmt_frame(struct ieee80211_hdr *hdr)
{
  #line 3162 
  if ((int)ieee80211_is_disassoc((unsigned short)((int)hdr->frame_control)) != 0) 
    #line 3164 
    return (_Bool)1;
  else {
    #line 3162 
    if ((int)ieee80211_is_deauth((unsigned short)((int)hdr->frame_control)) != 0) 
      #line 3164 
      return (_Bool)1;
  }
  #line 3166 
  if ((int)ieee80211_is_action((unsigned short)((int)hdr->frame_control)) != 0) {
    #line 3167 
    u8 *category;
    #line 3176 
    if ((int)ieee80211_has_protected((unsigned short)((int)hdr->frame_control)) != 0) 
      #line 3177 
      return (_Bool)1;
    #line 3178 
    category = (u8 *)hdr + 24U;
    #line 3184 
    return (_Bool)((((((((unsigned int)*category != 4U && (unsigned int)*category != 7U) && (unsigned int)*category != 11U) && (unsigned int)*category != 15U) && (unsigned int)*category != 20U) && (unsigned int)*category != 21U) && (unsigned int)*category != 127U) != 0);
  }
  #line 3188 
  return (_Bool)0;
}

#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
#line 100 
void __field_overflow(void);
#line 102 
#line 102 
void __bad_mask(void);
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static u64 field_multiplier(u64 field)
{
  #line 105 
  if ((((field + 18446744073709551615ULL) | field) & (((field + 18446744073709551615ULL) | field) + 1ULL)) != 0ULL) 
    #line 106 
    __bad_mask();
  #line 107 
  return - field & field;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static u64 field_mask(u64 field)
{
  #line 111 
  ;
  #line 111 
  return field / field_multiplier(field);
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static __le32 le32_encode_bits(u32 v, u32 field)
{
  #line 140 
  if (0 != 0) {
    #line 140 
    ;
    #line 140 
    if (((unsigned long long)v & ~ field_mask((unsigned long long)field)) != 0ULL) 
      #line 140 
      __field_overflow();
  }
  #line 140 
  ;
  #line 140 
  return (unsigned int)((unsigned long long)v & field_mask((unsigned long long)field)) * (unsigned int)field_multiplier((unsigned long long)field);
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static void le32p_replace_bits(__le32 *p, u32 val, u32 field)
{
  #line 140 
  *p = (*p & ~ field) | le32_encode_bits(val,field);
  #line 141 
  return;
}

#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static u32 le32_get_bits(__le32 v, u32 field)
{
  #line 140 
  ;
  #line 140 
  return (unsigned int)((unsigned long long)(v & field) / field_multiplier((unsigned long long)field));
}

#line 3121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static void rtl_write_word(struct rtl_priv *rtlpriv, u32 addr, u16 val16)
{
  #line 3123 
  (*(rtlpriv->io.write16_async))(rtlpriv,addr,(unsigned short)((int)val16));
  #line 3125 
  if ((int)(rtlpriv->cfg)->write_readback != 0) 
                                                #line 3126 
                                                (*(rtlpriv->io.read16_sync))(rtlpriv,addr);
  #line 3127 
  return;
}

#line 3138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static u32 rtl_get_bbreg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask)
{
  #line 3141 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 3143 
  return (*(((rtlpriv->cfg)->ops)->get_bbreg))(hw,regaddr,bitmask);
}

#line 3198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static struct ieee80211_hdr *rtl_get_hdr(struct sk_buff *skb)
{
  #line 3200 
  return (struct ieee80211_hdr *)skb->data;
}

#line 3203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static __le16 rtl_get_fc(struct sk_buff *skb)
{
  #line 3205 
  return rtl_get_hdr(skb)->frame_control;
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  #line 40 
  return dma_map_single_attrs(& hwdev->dev,ptr,size,
                           (enum dma_data_direction)direction,0UL);
}

#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  #line 109 
  return dma_mapping_error(& pdev->dev,dma_addr);
}

#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/base.h"
#line 78 
int rtlwifi_rate_mapping(struct ieee80211_hw *, bool, bool, u8);
#line 119 
#line 119 
void rtl_get_tcb_desc(struct ieee80211_hw *, struct ieee80211_tx_info *, struct ieee80211_sta *, struct sk_buff *, struct rtl_tcb_desc *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/stats.h"
#line 14 
u8 rtl_query_rxpwrpercentage(s8);
#line 15 
#line 15 
u8 rtl_evm_db_to_percentage(s8);
#line 16 
#line 16 
long rtl_signal_scale_mapping(struct ieee80211_hw *, long);
#line 17 
#line 17 
void rtl_process_phyinfo(struct ieee80211_hw *, u8 *, struct rtl_stats *);
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_pkt_size(__le32 *__pdesc, u32 __val)
{
  #line 32 
  le32p_replace_bits(__pdesc,__val,65535U);
  #line 33 
  return;
}

#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_offset(__le32 *__pdesc, u32 __val)
{
  #line 37 
  le32p_replace_bits(__pdesc,__val,16711680U);
  #line 38 
  return;
}

#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_last_seg(__le32 *__pdesc, u32 __val)
{
  #line 42 
  le32p_replace_bits(__pdesc,__val,67108864U);
  #line 43 
  return;
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_first_seg(__le32 *__pdesc, u32 __val)
{
  #line 47 
  le32p_replace_bits(__pdesc,__val,134217728U);
  #line 48 
  return;
}

#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_linip(__le32 *__pdesc, u32 __val)
{
  #line 52 
  le32p_replace_bits(__pdesc,__val,268435456U);
  #line 53 
  return;
}

#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_own(__le32 *__pdesc, u32 __val)
{
  #line 57 
  le32p_replace_bits(__pdesc,__val,2147483648U);
  #line 58 
  return;
}

#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_tx_desc_own(__le32 *__pdesc)
{
  #line 62 
  return le32_get_bits(*__pdesc,2147483648U);
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_macid(__le32 *__pdesc, u32 __val)
{
  #line 68 
  le32p_replace_bits(__pdesc + 1U,__val,31U);
  #line 69 
  return;
}

#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_queue_sel(__le32 *__pdesc, u32 __val)
{
  #line 73 
  le32p_replace_bits(__pdesc + 1U,__val,7936U);
  #line 74 
  return;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_non_qos(__le32 *__pdesc, u32 __val)
{
  #line 78 
  le32p_replace_bits(__pdesc + 1U,__val,65536U);
  #line 79 
  return;
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_sec_type(__le32 *__pdesc, u32 __val)
{
  #line 83 
  le32p_replace_bits(__pdesc + 1U,__val,12582912U);
  #line 84 
  return;
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rsvd_macid(__le32 *__pdesc, u32 __val)
{
  #line 89 
  le32p_replace_bits(__pdesc + 2U,__val,520093696U);
  #line 90 
  return;
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_agg_enable(__le32 *__pdesc, u32 __val)
{
  #line 94 
  le32p_replace_bits(__pdesc + 2U,__val,536870912U);
  #line 95 
  return;
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_seq(__le32 *__pdesc, u32 __val)
{
  #line 100 
  le32p_replace_bits(__pdesc + 3U,__val,268369920U);
  #line 101 
  return;
}

#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rts_rate(__le32 *__pdesc, u32 __val)
{
  #line 106 
  le32p_replace_bits(__pdesc + 4U,__val,63U);
  #line 107 
  return;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_cts_enable(__le32 *__pdesc, u32 __val)
{
  #line 111 
  le32p_replace_bits(__pdesc + 4U,__val,2048U);
  #line 112 
  return;
}

#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rts_enable(__le32 *__pdesc, u32 __val)
{
  #line 116 
  le32p_replace_bits(__pdesc + 4U,__val,4096U);
  #line 117 
  return;
}

#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_ra_brsr_id(__le32 *__pdesc, u32 __val)
{
  #line 121 
  le32p_replace_bits(__pdesc + 4U,__val,57344U);
  #line 122 
  return;
}

#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_txht(__le32 *__pdesc, u32 __val)
{
  #line 126 
  le32p_replace_bits(__pdesc + 4U,__val,65536U);
  #line 127 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_tx_short(__le32 *__pdesc, u32 __val)
{
  #line 131 
  le32p_replace_bits(__pdesc + 4U,__val,131072U);
  #line 132 
  return;
}

#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_tx_bandwidth(__le32 *__pdesc, u32 __val)
{
  #line 136 
  le32p_replace_bits(__pdesc + 4U,__val,262144U);
  #line 137 
  return;
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_tx_sub_carrier(__le32 *__pdesc, u32 __val)
{
  #line 141 
  le32p_replace_bits(__pdesc + 4U,__val,1572864U);
  #line 142 
  return;
}

#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rts_short(__le32 *__pdesc, u32 __val)
{
  #line 146 
  le32p_replace_bits(__pdesc + 4U,__val,33554432U);
  #line 147 
  return;
}

#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rts_bandwidth(__le32 *__pdesc, u32 __val)
{
  #line 151 
  le32p_replace_bits(__pdesc + 4U,__val,67108864U);
  #line 152 
  return;
}

#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rts_sub_carrier(__le32 *__pdesc, u32 __val)
{
  #line 156 
  le32p_replace_bits(__pdesc + 4U,__val,402653184U);
  #line 157 
  return;
}

#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_rts_stbc(__le32 *__pdesc, u32 __val)
{
  #line 161 
  le32p_replace_bits(__pdesc + 4U,__val,1610612736U);
  #line 162 
  return;
}

#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_user_rate(__le32 *__pdesc, u32 __val)
{
  #line 166 
  le32p_replace_bits(__pdesc + 4U,__val,2147483648U);
  #line 167 
  return;
}

#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_packet_id(__le32 *__pdesc, u32 __val)
{
  #line 172 
  le32p_replace_bits(__pdesc + 5U,__val,511U);
  #line 173 
  return;
}

#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_tx_rate(__le32 *__pdesc, u32 __val)
{
  #line 177 
  le32p_replace_bits(__pdesc + 5U,__val,32256U);
  #line 178 
  return;
}

#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_data_rate_fb_limit(__le32 *__pdesc, u32 __val)
{
  #line 182 
  le32p_replace_bits(__pdesc + 5U,__val,2031616U);
  #line 183 
  return;
}

#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_tx_buffer_size(__le32 *__pdesc, u32 __val)
{
  #line 188 
  le32p_replace_bits(__pdesc + 7U,__val,65535U);
  #line 189 
  return;
}

#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_tx_buffer_address(__le32 *__pdesc, u32 __val)
{
  #line 194 
  *(__pdesc + 8U) = __val;
  #line 195 
  return;
}

#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_tx_desc_tx_buffer_address(__le32 *__pdesc)
{
  #line 199 
  return *(__pdesc + 8U);
}

#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_tx_desc_next_desc_address(__le32 *__pdesc, u32 __val)
{
  #line 205 
  *(__pdesc + 9U) = __val;
  #line 206 
  return;
}

#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_rx_status_desc_pkt_len(__le32 *__pdesc, u32 __val)
{
  #line 225 
  le32p_replace_bits(__pdesc,__val,16383U);
  #line 226 
  return;
}

#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_rx_status_desc_eor(__le32 *__pdesc, u32 __val)
{
  #line 230 
  le32p_replace_bits(__pdesc,__val,1073741824U);
  #line 231 
  return;
}

#line 238  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_pkt_len(__le32 *__pdesc)
{
  #line 240 
  return le32_get_bits(*__pdesc,16383U);
}

#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_crc32(__le32 *__pdesc)
{
  #line 245 
  return le32_get_bits(*__pdesc,16384U);
}

#line 248  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_icv(__le32 *__pdesc)
{
  #line 250 
  return le32_get_bits(*__pdesc,32768U);
}

#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_drvinfo_size(__le32 *__pdesc)
{
  #line 255 
  return le32_get_bits(*__pdesc,983040U);
}

#line 258  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_shift(__le32 *__pdesc)
{
  #line 260 
  return le32_get_bits(*__pdesc,50331648U);
}

#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_phy_status(__le32 *__pdesc)
{
  #line 265 
  return le32_get_bits(*__pdesc,67108864U);
}

#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_swdec(__le32 *__pdesc)
{
  #line 270 
  return le32_get_bits(*__pdesc,134217728U);
}

#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_paggr(__le32 *__pdesc)
{
  #line 281 
  return le32_get_bits(*(__pdesc + 1U),16384U);
}

#line 284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_faggr(__le32 *__pdesc)
{
  #line 286 
  return le32_get_bits(*(__pdesc + 1U),32768U);
}

#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_rx_mcs(__le32 *__pdesc)
{
  #line 292 
  return le32_get_bits(*(__pdesc + 3U),63U);
}

#line 295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_rx_ht(__le32 *__pdesc)
{
  #line 297 
  return le32_get_bits(*(__pdesc + 3U),64U);
}

#line 300  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_splcp(__le32 *__pdesc)
{
  #line 302 
  return le32_get_bits(*(__pdesc + 3U),256U);
}

#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_bw(__le32 *__pdesc)
{
  #line 307 
  return le32_get_bits(*(__pdesc + 3U),512U);
}

#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_tsfl(__le32 *__pdesc)
{
  #line 313 
  return *(__pdesc + 5U);
}

#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static void set_rx_status__desc_buff_addr(__le32 *__pdesc, u32 __val)
{
  #line 319 
  *(__pdesc + 6U) = __val;
  #line 320 
  return;
}

#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/def.h"
__inline static u32 get_rx_status_desc_buff_addr(__le32 *__pdesc)
{
  #line 324 
  return *(__pdesc + 6U);
}

#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.h"
#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_tx_fill_desc(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, u8 *pdesc8, u8 *pbd_desc_tx, struct ieee80211_tx_info *info, struct ieee80211_sta *sta, struct sk_buff *skb, u8 hw_queue, struct rtl_tcb_desc *ptcb_desc);
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.h"
#line 494  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_tx_fill_cmddesc(struct ieee80211_hw *hw, u8 *pdesc8, bool firstseg, bool lastseg, struct sk_buff *skb);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.h"
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
bool rtl92se_rx_query_desc(struct ieee80211_hw *hw, struct rtl_stats *stats, struct ieee80211_rx_status *rx_status, u8 *pdesc8, struct sk_buff *skb);
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.h"
#line 553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_set_desc(struct ieee80211_hw *hw, u8 *pdesc8, bool istx, u8 desc_name, u8 *val);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.h"
#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
u64 rtl92se_get_desc(struct ieee80211_hw *hw, u8 *desc8, bool istx, u8 desc_name);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.h"
#line 634  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_tx_polling(struct ieee80211_hw *hw, u8 hw_queue);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
static u8 _rtl92se_map_hwqueue_to_fwqueue(struct sk_buff *skb, u8 skb_queue)
{
  #line 17 
  __le16 fc = rtl_get_fc(skb);
  #line 19 
  if ((long)((int)ieee80211_is_beacon((unsigned short)((int)fc)) != 0) != 0L) 
    #line 20 
    return (unsigned char)16U;
  #line 21 
  if ((int)ieee80211_is_mgmt((unsigned short)((int)fc)) != 0) 
                                                              #line 22 
                                                              return (unsigned char)18U;
  else {
    #line 21 
    if ((int)ieee80211_is_ctl((unsigned short)((int)fc)) != 0) 
                                                               #line 22 
                                                               return (unsigned char)18U;
  }
  #line 23 
  if ((int)ieee80211_is_nullfunc((unsigned short)((int)fc)) != 0) 
                                                                  #line 24 
                                                                  return (unsigned char)17U;
  #line 30 
  if (skb->priority == 7U) 
                           #line 31 
                           return (unsigned char)6U;
  #line 32 
  return (unsigned char)skb->priority;
}

#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
static void _rtl92se_query_rxphystatus(struct ieee80211_hw *hw, struct rtl_stats *pstats, __le32 *pdesc, struct rx_fwinfo *p_drvinfo, bool packet_match_bssid, bool packet_toself, bool packet_beacon)
{
  #line 43 
  struct phy_sts_cck_8192s_t *cck_buf;
  #line 45 
  s8 rx_pwr[4U];
  #line 46 
  u8 evm;
  #line 46 
  u8 pwdb_all;
  #line 47 
  u8 i;
  #line 47 
  u8 max_spatial_stream;
  #line 48 
  u32 rssi;
  #line 42 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 44 
  struct rtl_ps_ctl *ppsc = & rtlpriv->psc;
  #line 45 
  s8 rx_pwr_all = (signed char)0;
  #line 46 
  u8 rf_rx_num = (unsigned char)0U;
  #line 48 
  u32 total_rssi = 0U;
  #line 49 
  bool is_cck = pstats->is_cck;
  #line 51 
  pstats->packet_matchbssid = packet_match_bssid;
  #line 52 
  pstats->packet_toself = packet_toself;
  #line 53 
  pstats->packet_beacon = packet_beacon;
  #line 54 
  pstats->rx_mimo_sig_qual[0] = (signed char)(-1);
  #line 55 
  pstats->rx_mimo_sig_qual[1] = (signed char)(-1);
  #line 57 
  if ((int)is_cck != 0) {
    #line 58 
    u8 report;
    #line 58 
    u8 cck_highpwr;
    #line 59 
    cck_buf = (struct phy_sts_cck_8192s_t *)p_drvinfo;
    #line 61 
    if (ppsc->rfpwr_state == (unsigned int)ERFON) {
      #line 62 
      cck_highpwr = (unsigned char)rtl_get_bbreg(hw,2084U,512U);
    }
    else 
         #line 66 
         cck_highpwr = (unsigned char)0U;
    #line 68 
    if ((unsigned int)cck_highpwr == 0U) {
      #line 69 
      u8 cck_agc_rpt = cck_buf->cck_agc_rpt;
      #line 70 
      report = (unsigned char)((unsigned int)cck_buf->cck_agc_rpt & 192U);
      #line 71 
      report = (unsigned char)((int)report >> 6);
      #line 72 
      switch ((int)report) {
        #line 73 
        case 3: 
                #line 73 
        ;
        #line 74 
        rx_pwr_all = (signed char)(216U - ((unsigned int)cck_agc_rpt & 62U));
        #line 75 
        break;
        #line 76 
        case 2: 
                #line 76 
        ;
        #line 77 
        rx_pwr_all = (signed char)(236U - ((unsigned int)cck_agc_rpt & 62U));
        #line 78 
        break;
        #line 79 
        case 1: 
                #line 79 
        ;
        #line 80 
        rx_pwr_all = (signed char)(254U - ((unsigned int)cck_agc_rpt & 62U));
        #line 81 
        break;
        #line 82 
        case 0: 
                #line 82 
        ;
        #line 83 
        rx_pwr_all = (signed char)(14U - ((unsigned int)cck_agc_rpt & 62U));
        #line 84 
        break;
      }
    }
    else {
      #line 87 
      u8 cck_agc_rpt_0 = cck_buf->cck_agc_rpt;
      #line 88 
      report = (unsigned char)((unsigned int)p_drvinfo->cfosho[0] & 96U);
      #line 89 
      report = (unsigned char)((int)report >> 5);
      #line 90 
      switch ((int)report) {
        #line 91 
        case 3: 
                #line 91 
        ;
        #line 92 
        rx_pwr_all = (signed char)(216U - ((unsigned int)((int)cck_agc_rpt_0 << 1) & 62U));
        #line 93 
        break;
        #line 94 
        case 2: 
                #line 94 
        ;
        #line 95 
        rx_pwr_all = (signed char)(236U - ((unsigned int)((int)cck_agc_rpt_0 << 1) & 62U));
        #line 96 
        break;
        #line 97 
        case 1: 
                #line 97 
        ;
        #line 98 
        rx_pwr_all = (signed char)(254U - ((unsigned int)((int)cck_agc_rpt_0 << 1) & 62U));
        #line 99 
        break;
        #line 100 
        case 0: 
                #line 100 
        ;
        #line 101 
        rx_pwr_all = (signed char)(14U - ((unsigned int)((int)cck_agc_rpt_0 << 1) & 62U));
        #line 102 
        break;
      }
    }
    #line 106 
    pwdb_all = rtl_query_rxpwrpercentage((signed char)((int)rx_pwr_all));
    #line 110 
    pwdb_all = (unsigned char)((unsigned int)pwdb_all + 6U);
    #line 111 
    if ((unsigned int)pwdb_all > 100U) 
                                       #line 112 
                                       pwdb_all = (unsigned char)100U;
    #line 114 
    if ((unsigned int)pwdb_all + 221U <= 7U) 
                                             #line 115 
                                             pwdb_all = (unsigned char)((unsigned int)pwdb_all + 254U);
    else 
      #line 116 
      if ((unsigned int)pwdb_all + 229U <= 7U) 
                                               #line 117 
                                               pwdb_all = (unsigned char)((unsigned int)pwdb_all + 250U);
      else 
        #line 118 
        if ((unsigned int)pwdb_all + 241U <= 11U) 
                                                  #line 119 
                                                  pwdb_all = (unsigned char)((unsigned int)pwdb_all + 248U);
        else 
          #line 120 
          if ((unsigned int)pwdb_all + 251U <= 9U) 
                                                   #line 121 
                                                   pwdb_all = (unsigned char)((unsigned int)pwdb_all + 252U);
    #line 123 
    pstats->rx_pwdb_all = (unsigned int)pwdb_all;
    #line 124 
    pstats->recvsignalpower = (int)rx_pwr_all;
    #line 126 
    if ((int)packet_match_bssid != 0) {
      #line 127 
      u8 sq;
      #line 128 
      if (pstats->rx_pwdb_all > 40U) 
                                     #line 129 
                                     sq = (unsigned char)100U;
      else {
        #line 131 
        sq = cck_buf->sq_rpt;
        #line 132 
        if ((unsigned int)sq > 64U) 
                                    #line 133 
                                    sq = (unsigned char)0U;
        else 
          #line 134 
          if ((unsigned int)sq <= 19U) 
                                       #line 135 
                                       sq = (unsigned char)100U; else 
                                                                   #line 137 
                                                                   sq = (unsigned char)(((64 - (int)sq) * 100) / 44);
      }
      #line 140 
      pstats->signalquality = sq;
      #line 141 
      pstats->rx_mimo_sig_qual[0] = (signed char)sq;
      #line 142 
      pstats->rx_mimo_sig_qual[1] = (signed char)(-1);
    }
  }
  else {
    #line 145 
    rtlpriv->dm.rfpath_rxenable[1] = ((_Bool)1);
    #line 145 
    rtlpriv->dm.rfpath_rxenable[0] = ((_Bool)1);
    #line 147 
    i = (unsigned char)0U;
    #line 147 
    while ((unsigned int)i <= 1U) {
      {
        #line 148 
        if ((int)rtlpriv->dm.rfpath_rxenable[(int)i] != 0) 
                                                           #line 149 
                                                           rf_rx_num = (u8)((int)rf_rx_num + 1);
        #line 151 
        rx_pwr[(int)i] = (signed char)((unsigned int)(((int)p_drvinfo->gain_trsw[(int)i] & 63) + -55) * 2U);
        #line 153 
        rssi = (unsigned int)rtl_query_rxpwrpercentage((signed char)((int)rx_pwr[(int)i]));
        #line 154 
        total_rssi += rssi;
        #line 155 
        rtlpriv->stats.rx_snr_db[(int)i] = (long)((int)p_drvinfo->rxsnr[(int)i] / 2);
        #line 158 
        if ((int)packet_match_bssid != 0) 
                                          #line 159 
                                          pstats->rx_mimo_signalstrength[(int)i] = (unsigned char)rssi;
      }
      #line 147 
      i = (u8)((int)i + 1);
    }
    #line 162 
    rx_pwr_all = (signed char)((unsigned int)((int)p_drvinfo->pwdb_all >> 1) + 146U);
    #line 163 
    pwdb_all = rtl_query_rxpwrpercentage((signed char)((int)rx_pwr_all));
    #line 164 
    pstats->rx_pwdb_all = (unsigned int)pwdb_all;
    #line 165 
    pstats->rxpower = rx_pwr_all;
    #line 166 
    pstats->recvsignalpower = (int)rx_pwr_all;
    #line 168 
    if (((int)pstats->is_ht != 0 && (unsigned int)pstats->rate > 19U) && (unsigned int)pstats->rate <= 27U) 
      #line 170 
      max_spatial_stream = (unsigned char)2U; else 
                                                   #line 172 
                                                   max_spatial_stream = (unsigned char)1U;
    #line 174 
    i = (unsigned char)0U;
    #line 174 
    while ((int)i < (int)max_spatial_stream) {
      #line 175 
      evm = rtl_evm_db_to_percentage((signed char)((int)p_drvinfo->rxevm[(int)i]));
      #line 177 
      if ((int)packet_match_bssid != 0) {
        #line 178 
        if ((unsigned int)i == 0U) 
                                   #line 179 
                                   pstats->signalquality = evm;
        #line 181 
        pstats->rx_mimo_sig_qual[(int)i] = (signed char)evm;
      }
      #line 174 
      i = (u8)((int)i + 1);
    }
  }
  #line 186 
  if ((int)is_cck != 0) {
    #line 187 
    pstats->signalstrength = (unsigned char)rtl_signal_scale_mapping(hw,(long)pwdb_all);
  }
  else 
    #line 189 
    if ((unsigned int)rf_rx_num != 0U) {
      #line 191 
      total_rssi /= (unsigned int)rf_rx_num;
      #line 190 
      ;
      #line 190 
      pstats->signalstrength = (unsigned char)rtl_signal_scale_mapping(hw,(long)total_rssi);
    }
  #line 192 
  return;
}

#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
static void _rtl92se_translate_rx_signal_stuff(struct ieee80211_hw *hw, struct sk_buff *skb, struct rtl_stats *pstats, __le32 *pdesc, struct rx_fwinfo *p_drvinfo)
{
  #line 200 
  struct ieee80211_hdr *hdr;
  #line 201 
  u8 *tmp_buf;
  #line 202 
  u8 *praddr;
  #line 203 
  __le16 fc;
  #line 204 
  u16 type;
  #line 204 
  u16 cfc;
  #line 205 
  bool packet_matchbssid;
  #line 205 
  bool packet_toself;
  #line 220 
  int tmp_2;
  #line 222 
  int tmp_4;
  #line 198 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 199 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 205 
  bool packet_beacon = (_Bool)0;
  #line 207 
  tmp_buf = skb->data + ((unsigned long)pstats->rx_drvinfo_size + (unsigned long)pstats->rx_bufshift);
  #line 209 
  hdr = (struct ieee80211_hdr *)tmp_buf;
  #line 210 
  fc = hdr->frame_control;
  #line 211 
  cfc = fc;
  #line 212 
  type = (unsigned short)((unsigned int)fc & 12U);
  #line 213 
  praddr = (u8 *)(& hdr->addr1);
  #line 220 
  if ((unsigned int)type != 4U) {
    #line 217 
    u8 (*tmp_0)[6U];
    #line 217 
    if (((int)cfc & 256) != 0) 
                               #line 217 
                               tmp_0 = & hdr->addr1;
    else {
      #line 217 
      u8 (*tmp)[6U];
      #line 217 
      if (((int)cfc & 512) != 0) 
                                 #line 217 
                                 tmp = & hdr->addr2; else 
                                                          #line 217 
                                                          tmp = & hdr->addr3;
      #line 217 
      tmp_0 = tmp;
    }
    #line 215 
    ;
    #line 215 
    if ((int)ether_addr_equal((u8 *)(& mac->bssid),(u8 *)tmp_0) != 0) 
      #line 219 
      if ((unsigned int)pstats->hwerror == 0U) 
        #line 220 
        if ((unsigned int)pstats->crc == 0U) 
          #line 220 
          if ((unsigned int)pstats->icv == 0U) 
                                               #line 220 
                                               tmp_2 = 1; else 
                                                               #line 220 
                                                               tmp_2 = 0;
        else 
             #line 220 
             tmp_2 = 0;
      else 
           #line 220 
           tmp_2 = 0;
    else 
         #line 220 
         tmp_2 = 0;
  }
  else 
       #line 220 
       tmp_2 = 0;
  #line 215 
  packet_matchbssid = (_Bool)(tmp_2 != 0);
  #line 222 
  if ((int)packet_matchbssid != 0) {
    #line 222 
    if ((int)ether_addr_equal(praddr,(u8 *)(& rtlefuse->dev_addr)) != 0) 
      #line 222 
      tmp_4 = 1; else 
                      #line 222 
                      tmp_4 = 0;
  }
  else 
       #line 222 
       tmp_4 = 0;
  #line 222 
  packet_toself = (_Bool)(tmp_4 != 0);
  #line 225 
  if ((int)ieee80211_is_beacon((unsigned short)((int)fc)) != 0) 
                                                                #line 226 
                                                                packet_beacon = (_Bool)1;
  #line 228 
  _rtl92se_query_rxphystatus(hw,pstats,pdesc,p_drvinfo,(_Bool)((bool)((int)packet_matchbssid) != 0),(_Bool)((bool)((int)packet_toself) != 0),(_Bool)((bool)((int)packet_beacon) != 0));
  #line 230 
  rtl_process_phyinfo(hw,tmp_buf,pstats);
  #line 231 
  return;
}

#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
bool rtl92se_rx_query_desc(struct ieee80211_hw *hw, struct rtl_stats *stats, struct ieee80211_rx_status *rx_status, u8 *pdesc8, struct sk_buff *skb)
{
  #line 237 
  struct rx_fwinfo *p_drvinfo;
  #line 240 
  struct ieee80211_hdr *hdr;
  #line 253 
  int tmp_11;
  #line 258 
  int tmp_18;
  #line 238 
  __le32 *pdesc = (__le32 *)pdesc8;
  #line 239 
  u32 phystatus = get_rx_status_desc_phy_status(pdesc);
  #line 242 
  stats->length = (unsigned short)get_rx_status_desc_pkt_len(pdesc);
  #line 243 
  stats->rx_drvinfo_size = (unsigned char)((unsigned int)((unsigned char)get_rx_status_desc_drvinfo_size(pdesc)) * 8U);
  #line 244 
  stats->rx_bufshift = (unsigned char)((unsigned int)((unsigned char)get_rx_status_desc_shift(pdesc)) & 3U);
  #line 245 
  stats->icv = (unsigned short)get_rx_status_desc_icv(pdesc);
  #line 246 
  stats->crc = (unsigned short)get_rx_status_desc_crc32(pdesc);
  #line 247 
  stats->hwerror = (unsigned short)((int)stats->crc | (int)stats->icv);
  #line 248 
  stats->decrypted = (unsigned short)(get_rx_status_desc_swdec(pdesc) == 0U);
  #line 250 
  stats->rate = (unsigned char)get_rx_status_desc_rx_mcs(pdesc);
  #line 251 
  stats->shortpreamble = (unsigned short)get_rx_status_desc_splcp(pdesc);
  #line 252 
  stats->isampdu = (_Bool)(get_rx_status_desc_paggr(pdesc) == 1U);
  #line 253 
  if (get_rx_status_desc_paggr(pdesc) == 1U) {
    #line 253 
    if (get_rx_status_desc_faggr(pdesc) == 1U) 
                                               #line 253 
                                               tmp_11 = 1; else 
                                                                #line 253 
                                                                tmp_11 = 0;
  }
  else 
       #line 253 
       tmp_11 = 0;
  #line 253 
  stats->isfirst_ampdu = (_Bool)(tmp_11 != 0);
  #line 255 
  stats->timestamp_low = get_rx_status_desc_tsfl(pdesc);
  #line 256 
  stats->rx_is40mhzpacket = (_Bool)(get_rx_status_desc_bw(pdesc) != 0U);
  #line 257 
  stats->is_ht = (_Bool)(get_rx_status_desc_rx_ht(pdesc) != 0U);
  #line 258 
  if (get_rx_status_desc_rx_mcs(pdesc) == 0U) 
                                              #line 258 
                                              tmp_18 = 1;
  else {
    #line 258 
    if (get_rx_status_desc_rx_mcs(pdesc) == 1U) 
                                                #line 258 
                                                tmp_18 = 1;
    else {
      #line 258 
      if (get_rx_status_desc_rx_mcs(pdesc) == 2U) 
                                                  #line 258 
                                                  tmp_18 = 1;
      else {
        #line 258 
        if (get_rx_status_desc_rx_mcs(pdesc) == 3U) 
                                                    #line 258 
                                                    tmp_18 = 1; else 
                                                                  #line 258 
                                                                  tmp_18 = 0;
      }
    }
  }
  #line 258 
  stats->is_cck = (_Bool)(tmp_18 != 0);
  #line 260 
  if ((unsigned int)stats->hwerror != 0U) 
                                          #line 261 
                                          return (_Bool)0;
  #line 263 
  rx_status->freq = (unsigned short)(hw->conf.chandef.chan)->center_freq;
  #line 264 
  rx_status->band = (unsigned char)(hw->conf.chandef.chan)->band;
  #line 266 
  if ((unsigned int)stats->crc != 0U) 
                                      #line 267 
                                      rx_status->flag |= 32U;
  #line 269 
  if ((int)stats->rx_is40mhzpacket != 0) 
                                         #line 270 
                                         rx_status->bw = (unsigned char)3U;
  #line 272 
  if ((int)stats->is_ht != 0) 
                              #line 273 
                              rx_status->encoding = (unsigned char)1U;
  #line 275 
  rx_status->flag |= 128U;
  #line 284 
  if ((unsigned int)stats->decrypted != 0U) {
    #line 285 
    hdr = (struct ieee80211_hdr *)(skb->data + ((unsigned long)stats->rx_drvinfo_size + (unsigned long)stats->rx_bufshift));
    #line 288 
    if ((int)_ieee80211_is_robust_mgmt_frame(hdr) != 0) {
      #line 288 
      if ((int)ieee80211_has_protected((unsigned short)((int)hdr->frame_control)) != 0) 
        #line 290 
        rx_status->flag &= 4294967293U; else 
                                             #line 292 
                                             rx_status->flag |= 2U;
    }
    else 
         #line 292 
         rx_status->flag |= 2U;
  }
  #line 295 
  rx_status->rate_idx = (unsigned char)rtlwifi_rate_mapping(hw,(_Bool)((bool)((int)stats->is_ht) != 0),
                              (_Bool)0,(unsigned char)((int)stats->rate));
  #line 298 
  rx_status->mactime = (unsigned long long)stats->timestamp_low;
  #line 299 
  if (phystatus != 0U) {
    #line 300 
    p_drvinfo = (struct rx_fwinfo *)(skb->data + (unsigned long)stats->rx_bufshift);
    #line 302 
    _rtl92se_translate_rx_signal_stuff(hw,skb,stats,pdesc,p_drvinfo);
  }
  #line 307 
  rx_status->signal = (signed char)((unsigned int)stats->recvsignalpower + 10U);
  #line 309 
  return (_Bool)1;
}

#line 312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_tx_fill_desc(struct ieee80211_hw *hw, struct ieee80211_hdr *hdr, u8 *pdesc8, u8 *pbd_desc_tx, struct ieee80211_tx_info *info, struct ieee80211_sta *sta, struct sk_buff *skb, u8 hw_queue, struct rtl_tcb_desc *ptcb_desc)
{
  #line 324 
  u16 seq_number;
  #line 319 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 320 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 321 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 322 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 323 
  __le32 *pdesc = (__le32 *)pdesc8;
  #line 325 
  __le16 fc = hdr->frame_control;
  #line 326 
  u8 reserved_macid = (unsigned char)0U;
  #line 327 
  u8 fw_qsel = _rtl92se_map_hwqueue_to_fwqueue(skb,(unsigned char)((int)hw_queue));
  #line 328 
  bool firstseg = (_Bool)(((int)hdr->seq_ctrl & 15) == 0);
  #line 329 
  bool lastseg = (_Bool)(((int)hdr->frame_control & 1024) == 0);
  #line 331 
  dma_addr_t mapping = pci_map_single(rtlpci->pdev,(void *)skb->data,(unsigned long)skb->len,1);
  #line 333 
  u8 bw_40 = (unsigned char)0U;
  #line 335 
  if (pci_dma_mapping_error(rtlpci->pdev,mapping) != 0) {
    #line 336 
    _rtl_dbg_trace(rtlpriv,16ULL,5,(char *)"DMA mapping error\n");
    #line 338 
    return;
  }
  #line 340 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_STATION) 
                                                           #line 341 
                                                           bw_40 = mac->bw_40;
  else 
    #line 342 
    if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP || mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
      #line 344 
      if (sta != (struct ieee80211_sta *)0) 
                                            #line 345 
                                            bw_40 = (unsigned char)(sta->bandwidth != (unsigned int)IEEE80211_STA_RX_BW_20);
  #line 348 
  seq_number = (unsigned short)((int)hdr->seq_ctrl >> 4);
  #line 350 
  rtl_get_tcb_desc(hw,info,sta,skb,ptcb_desc);
  #line 352 
  memset((void *)pdesc,0,36UL);
  #line 354 
  if ((int)ieee80211_is_nullfunc((unsigned short)((int)fc)) != 0) 
                                                                  #line 354 
                                                                  goto _LOR;
  else {
    #line 354 
    if ((int)ieee80211_is_ctl((unsigned short)((int)fc)) != 0) {
      #line 354 
      _LOR: {
              #line 355 
              firstseg = (_Bool)1;
              #line 356 
              lastseg = (_Bool)1;
            }
    }
  }
  #line 359 
  if ((int)firstseg != 0) {
    #line 409 
    int tmp_4;
    #line 360 
    if ((int)rtlpriv->dm.useramask != 0) 
      #line 362 
      if ((unsigned int)ptcb_desc->mac_id <= 31U) {
        #line 363 
        set_tx_desc_macid(pdesc,(unsigned int)ptcb_desc->mac_id);
        #line 364 
        reserved_macid = (unsigned char)((int)ptcb_desc->mac_id | (int)reserved_macid);
      }
    #line 367 
    set_tx_desc_rsvd_macid(pdesc,(unsigned int)reserved_macid);
    #line 369 
    set_tx_desc_txht(pdesc,(unsigned int)((unsigned int)ptcb_desc->hw_rate > 11U));
    #line 372 
    if (rtlhal->version == 0U) 
      #line 373 
      if ((unsigned int)ptcb_desc->hw_rate <= 3U) 
                                                  #line 377 
                                                  ptcb_desc->hw_rate = (unsigned char)6U;
    #line 381 
    set_tx_desc_tx_rate(pdesc,(unsigned int)ptcb_desc->hw_rate);
    #line 383 
    if ((unsigned int)ptcb_desc->use_shortgi != 0U || (unsigned int)ptcb_desc->use_shortpreamble != 0U) 
      #line 384 
      set_tx_desc_tx_short(pdesc,0U);
    #line 387 
    if ((info->flags & 64U) != 0U) 
                                   #line 388 
                                   set_tx_desc_agg_enable(pdesc,1U);
    #line 391 
    set_tx_desc_seq(pdesc,(unsigned int)seq_number);
    #line 396 
    set_tx_desc_rts_enable(pdesc,(unsigned int)(((unsigned int)ptcb_desc->rts_enable != 0U && (unsigned int)ptcb_desc->cts_enable == 0U) != 0));
    #line 399 
    set_tx_desc_cts_enable(pdesc,(unsigned int)((unsigned int)ptcb_desc->cts_enable != 0U));
    #line 401 
    set_tx_desc_rts_stbc(pdesc,(unsigned int)((unsigned int)ptcb_desc->rts_stbc != 0U));
    #line 403 
    set_tx_desc_rts_rate(pdesc,(unsigned int)ptcb_desc->rts_rate);
    #line 404 
    set_tx_desc_rts_bandwidth(pdesc,0U);
    #line 405 
    set_tx_desc_rts_sub_carrier(pdesc,(unsigned int)ptcb_desc->rts_sc);
    #line 409 
    if ((unsigned int)ptcb_desc->rts_rate <= 11U) 
                                                  #line 409 
                                                  tmp_4 = (unsigned int)ptcb_desc->rts_use_shortpreamble != 0U; else 
                                                                    #line 409 
                                                                    tmp_4 = (unsigned int)ptcb_desc->rts_use_shortgi != 0U;
    #line 406 
    ;
    #line 406 
    set_tx_desc_rts_short(pdesc,(unsigned int)tmp_4);
    #line 413 
    if ((unsigned int)bw_40 != 0U) 
      #line 414 
      if ((unsigned int)ptcb_desc->packet_bw != 0U) {
        #line 415 
        set_tx_desc_tx_bandwidth(pdesc,1U);
        #line 417 
        set_tx_desc_tx_sub_carrier(pdesc,0U);
      }
      else {
        #line 419 
        set_tx_desc_tx_bandwidth(pdesc,0U);
        #line 420 
        set_tx_desc_tx_sub_carrier(pdesc,(unsigned int)mac->cur_40_prime_sc);
      }
    else {
      #line 424 
      set_tx_desc_tx_bandwidth(pdesc,0U);
      #line 425 
      set_tx_desc_tx_sub_carrier(pdesc,0U);
    }
    #line 430 
    set_tx_desc_linip(pdesc,0U);
    #line 431 
    set_tx_desc_offset(pdesc,32U);
    #line 432 
    set_tx_desc_pkt_size(pdesc,(unsigned int)((unsigned short)skb->len));
    #line 435 
    set_tx_desc_ra_brsr_id(pdesc,(unsigned int)ptcb_desc->ratr_index);
    #line 438 
    if (info->__anonCompField_ieee80211_tx_info_195.control.hw_key != (struct ieee80211_key_conf *)0) {
      #line 439 
      struct ieee80211_key_conf *keyconf;
      #line 441 
      keyconf = info->__anonCompField_ieee80211_tx_info_195.control.hw_key;
      #line 442 
      switch (keyconf->cipher) {
        #line 443 
        case (u32)1027073: 
                           #line 443 
        ;
        #line 444 
        case (u32)1027077: 
                           #line 444 
        ;
        #line 445 
        set_tx_desc_sec_type(pdesc,1U);
        #line 446 
        break;
        #line 447 
        case (u32)1027074: 
                           #line 447 
        ;
        #line 448 
        set_tx_desc_sec_type(pdesc,2U);
        #line 449 
        break;
        #line 450 
        case (u32)1027076: 
                           #line 450 
        ;
        #line 451 
        set_tx_desc_sec_type(pdesc,3U);
        #line 452 
        break;
        #line 453 
        default: 
                 #line 453 
        ;
        #line 454 
        set_tx_desc_sec_type(pdesc,0U);
        #line 455 
        break;
      }
    }
    #line 461 
    set_tx_desc_packet_id(pdesc,0U);
    #line 464 
    set_tx_desc_queue_sel(pdesc,(unsigned int)fw_qsel);
    #line 467 
    set_tx_desc_data_rate_fb_limit(pdesc,31U);
    #line 470 
    set_tx_desc_user_rate(pdesc,(unsigned int)((unsigned int)ptcb_desc->use_driver_rate != 0U));
    #line 474 
    if (! ieee80211_is_data_qos((unsigned short)((int)fc))) 
                                                            #line 475 
                                                            set_tx_desc_non_qos(pdesc,1U);
  }
  #line 482 
  set_tx_desc_first_seg(pdesc,(unsigned int)((int)firstseg != 0));
  #line 483 
  set_tx_desc_last_seg(pdesc,(unsigned int)((int)lastseg != 0));
  #line 486 
  set_tx_desc_tx_buffer_size(pdesc,(unsigned int)((unsigned short)skb->len));
  #line 489 
  set_tx_desc_tx_buffer_address(pdesc,(unsigned int)mapping);
  #line 491 
  _rtl_dbg_trace(rtlpriv,16ULL,5,(char *)"\n");
  #line 492 
  return;
}

#line 494  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_tx_fill_cmddesc(struct ieee80211_hw *hw, u8 *pdesc8, bool firstseg, bool lastseg, struct sk_buff *skb)
{
  #line 497 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 498 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 499 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 500 
  struct rtl_tcb_desc *tcb_desc = (struct rtl_tcb_desc *)(& skb->cb);
  #line 501 
  __le32 *pdesc = (__le32 *)pdesc8;
  #line 503 
  dma_addr_t mapping = pci_map_single(rtlpci->pdev,(void *)skb->data,(unsigned long)skb->len,1);
  #line 506 
  if (pci_dma_mapping_error(rtlpci->pdev,mapping) != 0) {
    #line 507 
    _rtl_dbg_trace(rtlpriv,16ULL,5,(char *)"DMA mapping error\n");
    #line 509 
    return;
  }
  #line 512 
  memset((void *)pdesc,0,36UL);
  #line 515 
  if ((unsigned int)tcb_desc->cmd_or_init == 0U) {
    #line 517 
    set_tx_desc_linip(pdesc,(unsigned int)tcb_desc->last_inipkt);
    #line 520 
    set_tx_desc_first_seg(pdesc,1U);
    #line 521 
    set_tx_desc_last_seg(pdesc,1U);
    #line 524 
    set_tx_desc_pkt_size(pdesc,(unsigned int)((unsigned short)skb->len));
    #line 525 
    set_tx_desc_tx_buffer_size(pdesc,(unsigned int)((unsigned short)skb->len));
    #line 526 
    set_tx_desc_tx_buffer_address(pdesc,(unsigned int)mapping);
    #line 527 
    ldv_inline_asm();
    #line 529 
    set_tx_desc_own(pdesc,1U);
  }
  else {
    #line 532 
    set_tx_desc_first_seg(pdesc,1U);
    #line 533 
    set_tx_desc_last_seg(pdesc,1U);
    #line 535 
    set_tx_desc_offset(pdesc,32U);
    #line 538 
    set_tx_desc_pkt_size(pdesc,(unsigned int)((unsigned short)skb->len));
    #line 540 
    set_tx_desc_queue_sel(pdesc,19U);
    #line 542 
    le32p_replace_bits((__le32 *)skb->data,(unsigned int)rtlhal->h2c_txcmd_seq,2130706432U);
    #line 544 
    set_tx_desc_tx_buffer_size(pdesc,(unsigned int)((unsigned short)skb->len));
    #line 545 
    set_tx_desc_tx_buffer_address(pdesc,(unsigned int)mapping);
    #line 546 
    ldv_inline_asm();
    #line 548 
    set_tx_desc_own(pdesc,1U);
  }
  #line 550 
  return;
}

#line 553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_set_desc(struct ieee80211_hw *hw, u8 *pdesc8, bool istx, u8 desc_name, u8 *val)
{
  #line 556 
  __le32 *pdesc = (__le32 *)pdesc8;
  #line 558 
  if ((int)istx != 0) 
    #line 559 
    switch ((int)desc_name) {
      #line 560 
      case 0: 
              #line 560 
      ;
      #line 561 
      ldv_inline_asm();
      #line 562 
      set_tx_desc_own(pdesc,1U);
      #line 563 
      break;
      #line 564 
      case 2: 
              #line 564 
      ;
      #line 565 
      set_tx_desc_next_desc_address(pdesc,*((u32 *)val));
      #line 566 
      break;
      #line 567 
      default: 
               #line 567 
      ;
      {
        #line 568 
        bool __warned;
        #line 568 
        int __ret_warn_once = 1;
        #line 568 
        if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
          #line 568 
          __warned = (_Bool)1;
          {
            #line 568 
            int __ret_warn_on = 1;
            #line 568 
            if ((long)(__ret_warn_on != 0) != 0L) {
              #line 568 
              __warn_printk((char *)"rtl8192se: ERR txdesc :%d not processed\n",(int)desc_name);
              #line 569 
              ldv_inline_asm();
              #line 570 
              ldv_inline_asm();
            }
            #line 568 
            long tmp = (long)(__ret_warn_on != 0);
          }
        }
        #line 568 
        long tmp_3 = (long)(__ret_warn_once != 0);
      }
      #line 570 
      break;
    }
  else 
    #line 573 
    switch ((int)desc_name) {
      #line 574 
      case 1: 
              #line 574 
      ;
      #line 575 
      ldv_inline_asm();
      #line 576 
      set_tx_desc_own(pdesc,1U);
      #line 577 
      break;
      #line 578 
      case 4: 
              #line 578 
      ;
      #line 579 
      set_rx_status__desc_buff_addr(pdesc,*((u32 *)val));
      #line 580 
      break;
      #line 581 
      case 5: 
              #line 581 
      ;
      #line 582 
      set_rx_status_desc_pkt_len(pdesc,*((u32 *)val));
      #line 583 
      break;
      #line 584 
      case 6: 
              #line 584 
      ;
      #line 585 
      set_rx_status_desc_eor(pdesc,1U);
      #line 586 
      break;
      #line 587 
      default: 
               #line 587 
      ;
      {
        #line 588 
        bool __warned_0;
        #line 588 
        int __ret_warn_once_0 = 1;
        #line 588 
        if ((long)(__ret_warn_once_0 != 0) != 0L && (long)(! __warned_0) != 0L) {
          #line 588 
          __warned_0 = (_Bool)1;
          {
            #line 588 
            int __ret_warn_on_0 = 1;
            #line 588 
            if ((long)(__ret_warn_on_0 != 0) != 0L) {
              #line 588 
              __warn_printk((char *)"rtl8192se: ERR rxdesc :%d not processed\n",(int)desc_name);
              #line 589 
              ldv_inline_asm();
              #line 590 
              ldv_inline_asm();
            }
            #line 588 
            long tmp_5 = (long)(__ret_warn_on_0 != 0);
          }
        }
        #line 588 
        long tmp_7 = (long)(__ret_warn_once_0 != 0);
      }
      #line 590 
      break;
    }
  #line 592 
  return;
}

#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
u64 rtl92se_get_desc(struct ieee80211_hw *hw, u8 *desc8, bool istx, u8 desc_name)
{
  #line 598 
  u32 ret = 0U;
  #line 599 
  __le32 *desc = (__le32 *)desc8;
  #line 601 
  if ((int)istx != 0) 
    #line 602 
    switch ((int)desc_name) {
      #line 603 
      case 0: 
              #line 603 
      ;
      #line 604 
      ret = get_tx_desc_own(desc);
      #line 605 
      break;
      #line 606 
      case 3: 
              #line 606 
      ;
      #line 607 
      ret = get_tx_desc_tx_buffer_address(desc);
      #line 608 
      break;
      #line 609 
      default: 
               #line 609 
      ;
      {
        #line 610 
        bool __warned;
        #line 610 
        int __ret_warn_once = 1;
        #line 610 
        if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
          #line 610 
          __warned = (_Bool)1;
          {
            #line 610 
            int __ret_warn_on = 1;
            #line 610 
            if ((long)(__ret_warn_on != 0) != 0L) {
              #line 610 
              __warn_printk((char *)"rtl8192se: ERR txdesc :%d not processed\n",(int)desc_name);
              #line 611 
              ldv_inline_asm();
              #line 612 
              ldv_inline_asm();
            }
            #line 610 
            long tmp = (long)(__ret_warn_on != 0);
          }
        }
        #line 610 
        long tmp_3 = (long)(__ret_warn_once != 0);
      }
      #line 612 
      break;
    }
  else 
    #line 615 
    switch ((int)desc_name) {
      #line 616 
      case 0: 
              #line 616 
      ;
      #line 617 
      ret = get_tx_desc_own(desc);
      #line 618 
      break;
      #line 619 
      case 5: 
              #line 619 
      ;
      #line 620 
      ret = get_rx_status_desc_pkt_len(desc);
      #line 621 
      break;
      #line 622 
      case 4: 
              #line 622 
      ;
      #line 623 
      ret = get_rx_status_desc_buff_addr(desc);
      #line 624 
      break;
      #line 625 
      default: 
               #line 625 
      ;
      {
        #line 626 
        bool __warned_0;
        #line 626 
        int __ret_warn_once_0 = 1;
        #line 626 
        if ((long)(__ret_warn_once_0 != 0) != 0L && (long)(! __warned_0) != 0L) {
          #line 626 
          __warned_0 = (_Bool)1;
          {
            #line 626 
            int __ret_warn_on_0 = 1;
            #line 626 
            if ((long)(__ret_warn_on_0 != 0) != 0L) {
              #line 626 
              __warn_printk((char *)"rtl8192se: ERR rxdesc :%d not processed\n",(int)desc_name);
              #line 627 
              ldv_inline_asm();
              #line 628 
              ldv_inline_asm();
            }
            #line 626 
            long tmp_5 = (long)(__ret_warn_on_0 != 0);
          }
        }
        #line 626 
        long tmp_7 = (long)(__ret_warn_once_0 != 0);
      }
      #line 628 
      break;
    }
  #line 631 
  return (unsigned long long)ret;
}

#line 634  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/trx.c"
void rtl92se_tx_polling(struct ieee80211_hw *hw, u8 hw_queue)
{
  #line 636 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 637 
  rtl_write_word(rtlpriv,1280U,(unsigned short)((int)((unsigned short)(1UL << (int)hw_queue))));
  #line 638 
  return;
}

#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 782  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/phy.i.aux"
static void cif_spin_lock_rf_lock_of_rtl_locks(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 791  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/phy.i.aux"
static void cif_spin_unlock_rf_lock_of_rtl_locks(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 291 
#line 291 
unsigned int jiffies_to_msecs(unsigned long);
#line 1812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head *list_)
{
  #line 1814 
  return list_->qlen;
}

#line 6  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/delay.h"
#line 6 
void __bad_udelay(void);
#line 9 
#line 9 
void __udelay(unsigned long);
#line 11 
#line 11 
void __const_udelay(unsigned long);
#line 3100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static u32 rtl_read_dword(struct rtl_priv *rtlpriv, u32 addr)
{
  #line 3102 
  return (*(rtlpriv->io.read32_sync))(rtlpriv,addr);
}

#line 3129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static void rtl_write_dword(struct rtl_priv *rtlpriv, u32 addr, u32 val32)
{
  #line 3132 
  (*(rtlpriv->io.write32_async))(rtlpriv,addr,val32);
  #line 3134 
  if ((int)(rtlpriv->cfg)->write_readback != 0) 
                                                #line 3135 
                                                (*(rtlpriv->io.read32_sync))(rtlpriv,addr);
  #line 3136 
  return;
}

#line 3146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static void rtl_set_bbreg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask, u32 data)
{
  #line 3149 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 3151 
  (*(((rtlpriv->cfg)->ops)->set_bbreg))(hw,regaddr,bitmask,data);
  #line 3152 
  return;
}

#line 3169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static void rtl_set_rfreg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask, u32 data)
{
  #line 3173 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 3175 
  (*(((rtlpriv->cfg)->ops)->set_rfreg))(hw,rfpath,regaddr,bitmask,data);
  #line 3176 
  return;
}

#line 3178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static bool is_hal_stop(struct rtl_hal *rtlhal)
{
  #line 3180 
  return (_Bool)((unsigned int)rtlhal->state == 0U);
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/ps.h"
#line 9 
bool rtl_ps_enable_nic(struct ieee80211_hw *);
#line 10 
#line 10 
bool rtl_ps_disable_nic(struct ieee80211_hw *);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/core.h"
#line 56 
void rtl_addr_delay(u32);
#line 57 
#line 57 
void rtl_rfreg_delay(struct ieee80211_hw *, enum radio_path, u32, u32, u32);
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u32 rtl92s_phy_query_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask);
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask, u32 data);
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_scan_operation_backup(struct ieee80211_hw *hw, u8 operation);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u32 rtl92s_phy_query_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask);
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask, u32 data);
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_bw_mode(struct ieee80211_hw *hw, enum nl80211_channel_type ch_type);
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 429  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u8 rtl92s_phy_sw_chnl(struct ieee80211_hw *hw);
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_set_rf_power_state(struct ieee80211_hw *hw, enum rf_pwrstate rfpwr_state);
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1005  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_mac_config(struct ieee80211_hw *hw);
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_switch_ephy_parameter(struct ieee80211_hw *hw);
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1022  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_bb_config(struct ieee80211_hw *hw);
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1062  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_rf_config(struct ieee80211_hw *hw);
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1077  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_get_hw_reg_originalvalue(struct ieee80211_hw *hw);
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_txpower(struct ieee80211_hw *hw, u8 channel);
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_set_fw_cmd(struct ieee80211_hw *hw, enum fwcmd_iotype fw_cmdio);
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_chk_fwcmd_iodone(struct ieee80211_hw *hw);
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 1612  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_beacon_hwreg(struct ieee80211_hw *hw, u16 beaconinterval);
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.h"
#line 949  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u8 rtl92s_phy_config_rf(struct ieee80211_hw *hw, enum radio_path rfpath);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.h"
#line 9 
void rtl92s_phy_rf6052_set_bandwidth(struct ieee80211_hw *hw, u8 bandwidth);
#line 11 
#line 11 
bool rtl92s_phy_rf6052_config(struct ieee80211_hw *hw);
#line 12 
#line 12 
void rtl92s_phy_rf6052_set_ccktxpower(struct ieee80211_hw *hw, u8 pwrlevel);
#line 14 
#line 14 
void rtl92s_phy_rf6052_set_ofdmtxpower(struct ieee80211_hw *hw, u8 *p_pwrlevel, u8 chnl);
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 45 
void rtl8192se_gpiobit3_cfg_inputmode(struct ieee80211_hw *hw);
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 6  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_reg_2t2rarray[372U];
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_changeto_1t1rarray[48U];
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_changeto_1t2rarray[45U];
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_reg_array_pg[84U];
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seradioa_1t_array[202U];
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seradiob_array[22U];
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seradiob_gm_array[10U];
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192semac_2t_array[106U];
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.h"
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seagctab_array[320U];
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static u32 _rtl92s_phy_calculate_bit_shift(u32 bitmask)
{
  #line 19 
  u32 i;
  #line 21 
  i = 0U;
  #line 21 
  while (i <= 31U) {
    #line 22 
    if (((bitmask >> i) & 1U) != 0U) 
                                     #line 23 
                                     break;
    #line 21 
    i ++;
  }
  #line 26 
  return i;
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u32 rtl92s_phy_query_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask)
{
  #line 32 
  u32 originalvalue;
  #line 32 
  u32 bitshift;
  #line 31 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 32 
  u32 returnvalue = 0U;
  #line 34 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), bitmask(%#x)\n",regaddr,bitmask);
  #line 37 
  originalvalue = rtl_read_dword(rtlpriv,regaddr);
  #line 38 
  bitshift = _rtl92s_phy_calculate_bit_shift(bitmask);
  #line 39 
  returnvalue = (originalvalue & bitmask) >> bitshift;
  #line 41 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"BBR MASK=0x%x Addr[0x%x]=0x%x\n",bitmask,regaddr,originalvalue);
  #line 44 
  return returnvalue;
}

#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_bb_reg(struct ieee80211_hw *hw, u32 regaddr, u32 bitmask, u32 data)
{
  #line 52 
  u32 originalvalue;
  #line 52 
  u32 bitshift;
  #line 51 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 54 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), bitmask(%#x), data(%#x)\n",regaddr,bitmask,data);
  #line 58 
  if (bitmask != 4294967295U) {
    #line 59 
    originalvalue = rtl_read_dword(rtlpriv,regaddr);
    #line 60 
    bitshift = _rtl92s_phy_calculate_bit_shift(bitmask);
    #line 61 
    data = (~ bitmask & originalvalue) | (data << bitshift);
  }
  #line 64 
  rtl_write_dword(rtlpriv,regaddr,data);
  #line 66 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), bitmask(%#x), data(%#x)\n",regaddr,bitmask,data);
  #line 67 
  return;
}

#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static u32 _rtl92s_phy_rf_serial_read(struct ieee80211_hw *hw, enum radio_path rfpath, u32 offset)
{
  #line 79 
  u32 newoffset;
  #line 80 
  u32 tmplong;
  #line 80 
  u32 tmplong2;
  #line 76 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 77 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 78 
  struct bb_reg_def *pphyreg = & rtlphy->phyreg_def[(unsigned int)rfpath];
  #line 81 
  u8 rfpi_enable = (unsigned char)0U;
  #line 82 
  u32 retvalue = 0U;
  #line 84 
  offset &= 63U;
  #line 85 
  newoffset = offset;
  #line 87 
  tmplong = rtl_get_bbreg(hw,2084U,4294967295U);
  #line 89 
  if (rfpath == (unsigned int)RF90_PATH_A) 
                                           #line 90 
                                           tmplong2 = tmplong; else 
                                                                    #line 92 
                                                                    tmplong2 = rtl_get_bbreg(hw,pphyreg->rfhssi_para2,4294967295U);
  #line 94 
  tmplong2 = ((tmplong2 & 2155872255U) | (newoffset << 23)) | 2147483648U;
  #line 97 
  rtl_set_bbreg(hw,2084U,4294967295U,tmplong & 2147483647U);
  #line 100 
  __const_udelay(4295000UL);
  #line 102 
  rtl_set_bbreg(hw,pphyreg->rfhssi_para2,4294967295U,tmplong2);
  #line 103 
  __const_udelay(4295000UL);
  #line 105 
  rtl_set_bbreg(hw,2084U,4294967295U,tmplong | 2147483648U);
  #line 107 
  __const_udelay(4295000UL);
  #line 109 
  if (rfpath == (unsigned int)RF90_PATH_A) {
    #line 110 
    rfpi_enable = (unsigned char)rtl_get_bbreg(hw,2080U,256U);
  }
  else 
    #line 112 
    if (rfpath == (unsigned int)RF90_PATH_B) {
      #line 113 
      rfpi_enable = (unsigned char)rtl_get_bbreg(hw,2088U,256U);
    }
  #line 116 
  if ((unsigned int)rfpi_enable != 0U) 
                                       #line 117 
                                       retvalue = rtl_get_bbreg(hw,pphyreg->rf_rbpi,1048575U); else 
                                                                    #line 120 
                                                                    retvalue = rtl_get_bbreg(hw,pphyreg->rf_rb,1048575U);
  #line 123 
  retvalue = rtl_get_bbreg(hw,pphyreg->rf_rb,1048575U);
  #line 126 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"RFR-%d Addr[0x%x]=0x%x\n",(unsigned int)rfpath,pphyreg->rf_rb,retvalue);
  #line 129 
  return retvalue;
}

#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_phy_rf_serial_write(struct ieee80211_hw *hw, enum radio_path rfpath, u32 offset, u32 data)
{
  #line 141 
  u32 newoffset;
  #line 137 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 138 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 139 
  struct bb_reg_def *pphyreg = & rtlphy->phyreg_def[(unsigned int)rfpath];
  #line 140 
  u32 data_and_addr = 0U;
  #line 143 
  offset &= 63U;
  #line 144 
  newoffset = offset;
  #line 146 
  data_and_addr = ((newoffset << 20) | (data & 1048575U)) & 268435455U;
  #line 147 
  rtl_set_bbreg(hw,pphyreg->rf3wire_offset,4294967295U,data_and_addr);
  #line 149 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"RFW-%d Addr[0x%x]=0x%x\n",(unsigned int)rfpath,pphyreg->rf3wire_offset,data_and_addr);
  #line 150 
  return;
}

#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u32 rtl92s_phy_query_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask)
{
  #line 158 
  u32 original_value;
  #line 158 
  u32 readback_value;
  #line 158 
  u32 bitshift;
  #line 157 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 160 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), rfpath(%#x), bitmask(%#x)\n",regaddr,(unsigned int)rfpath,bitmask);
  #line 164 
  cif_spin_lock_rf_lock_of_rtl_locks(& rtlpriv->locks.rf_lock);
  #line 166 
  original_value = _rtl92s_phy_rf_serial_read(hw,rfpath,regaddr);
  #line 168 
  bitshift = _rtl92s_phy_calculate_bit_shift(bitmask);
  #line 169 
  readback_value = (original_value & bitmask) >> bitshift;
  #line 171 
  cif_spin_unlock_rf_lock_of_rtl_locks(& rtlpriv->locks.rf_lock);
  #line 173 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), rfpath(%#x), bitmask(%#x), original_value(%#x)\n",regaddr,(unsigned int)rfpath,bitmask,original_value);
  #line 177 
  return readback_value;
}

#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_rf_reg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask, u32 data)
{
  #line 185 
  u32 original_value;
  #line 185 
  u32 bitshift;
  #line 183 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 184 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 187 
  if ((((int)rtlphy->rf_pathmap >> (unsigned int)rfpath) & 1) == 0) 
                                                                    #line 188 
                                                                    return;
  #line 190 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), bitmask(%#x), data(%#x), rfpath(%#x)\n",regaddr,bitmask,data,(unsigned int)rfpath);
  #line 194 
  cif_spin_lock_rf_lock_of_rtl_locks(& rtlpriv->locks.rf_lock);
  #line 196 
  if (bitmask != 1048575U) {
    #line 197 
    original_value = _rtl92s_phy_rf_serial_read(hw,rfpath,regaddr);
    #line 199 
    bitshift = _rtl92s_phy_calculate_bit_shift(bitmask);
    #line 200 
    data = (~ bitmask & original_value) | (data << bitshift);
  }
  #line 203 
  _rtl92s_phy_rf_serial_write(hw,rfpath,regaddr,data);
  #line 205 
  cif_spin_unlock_rf_lock_of_rtl_locks(& rtlpriv->locks.rf_lock);
  #line 207 
  _rtl_dbg_trace(rtlpriv,1048576ULL,5,(char *)"regaddr(%#x), bitmask(%#x), data(%#x), rfpath(%#x)\n",regaddr,bitmask,data,(unsigned int)rfpath);
  #line 208 
  return;
}

#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_scan_operation_backup(struct ieee80211_hw *hw, u8 operation)
{
  #line 216 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 218 
  if (! is_hal_stop(rtlhal)) 
    #line 219 
    switch ((int)operation) {
      #line 220 
      case 0: 
              #line 220 
      ;
      #line 221 
      rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_PAUSE_DM_BY_SCAN);
      #line 222 
      break;
      #line 223 
      case 2: 
              #line 223 
      ;
      #line 224 
      rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_RESUME_DM_BY_SCAN);
      #line 225 
      break;
      #line 226 
      default: 
               #line 226 
      ;
      #line 227 
      printk((char *)"\001");
      #line 228 
      break;
    }
  #line 230 
  return;
}

#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_bw_mode(struct ieee80211_hw *hw, enum nl80211_channel_type ch_type)
{
  #line 240 
  u8 reg_bw_opmode;
  #line 242 
  char *tmp;
  #line 236 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 237 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 238 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 239 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 242 
  if ((unsigned int)rtlphy->current_chan_bw == 0U) 
                                                   #line 242 
                                                   tmp = (char *)"20MHz"; else 
                                                                    #line 242 
                                                                    tmp = (char *)"40MHz";
  #line 242 
  ;
  #line 242 
  _rtl_dbg_trace(rtlpriv,64ULL,5,(char *)"Switch to %s bandwidth\n",tmp);
  #line 246 
  if ((unsigned int)rtlphy->set_bwmode_inprogress != 0U) 
                                                         #line 247 
                                                         return;
  #line 248 
  if ((int)is_hal_stop(rtlhal) != 0) 
                                     #line 249 
                                     return;
  #line 251 
  rtlphy->set_bwmode_inprogress = (unsigned char)1U;
  #line 253 
  reg_bw_opmode = rtl_read_byte(rtlpriv,515U);
  #line 255 
  rtl_read_byte(rtlpriv,387U);
  #line 257 
  switch ((int)rtlphy->current_chan_bw) {
    #line 258 
    case 0: 
            #line 258 
    ;
    #line 259 
    reg_bw_opmode = (unsigned char)((unsigned int)reg_bw_opmode | 4U);
    #line 260 
    rtl_write_byte(rtlpriv,515U,(unsigned char)((int)reg_bw_opmode));
    #line 261 
    break;
    #line 262 
    case 1: 
            #line 262 
    ;
    #line 263 
    reg_bw_opmode = (unsigned char)((unsigned int)reg_bw_opmode & 251U);
    #line 264 
    rtl_write_byte(rtlpriv,515U,(unsigned char)((int)reg_bw_opmode));
    #line 265 
    break;
    #line 266 
    default: 
             #line 266 
    ;
    #line 267 
    printk((char *)"\001",(int)rtlphy->current_chan_bw);
    #line 269 
    break;
  }
  #line 272 
  switch ((int)rtlphy->current_chan_bw) {
    #line 273 
    case 0: 
            #line 273 
    ;
    #line 274 
    rtl_set_bbreg(hw,2048U,1U,0U);
    #line 275 
    rtl_set_bbreg(hw,2304U,1U,0U);
    #line 277 
    if (rtlhal->version != 0U) 
                               #line 278 
                               rtl_write_byte(rtlpriv,2180U,(unsigned char)88);
    #line 279 
    break;
    #line 280 
    case 1: 
            #line 280 
    ;
    #line 281 
    rtl_set_bbreg(hw,2048U,1U,1U);
    #line 282 
    rtl_set_bbreg(hw,2304U,1U,1U);
    #line 284 
    rtl_set_bbreg(hw,2560U,16U,(unsigned int)((int)mac->cur_40_prime_sc >> 1));
    #line 286 
    rtl_set_bbreg(hw,3328U,3072U,(unsigned int)mac->cur_40_prime_sc);
    #line 288 
    if (rtlhal->version != 0U) 
                               #line 289 
                               rtl_write_byte(rtlpriv,2180U,(unsigned char)24);
    #line 290 
    break;
    #line 291 
    default: 
             #line 291 
    ;
    #line 292 
    printk((char *)"\001",(int)rtlphy->current_chan_bw);
    #line 294 
    break;
  }
  #line 297 
  rtl92s_phy_rf6052_set_bandwidth(hw,(unsigned char)((int)rtlphy->current_chan_bw));
  #line 298 
  rtlphy->set_bwmode_inprogress = (unsigned char)0U;
  #line 299 
  _rtl_dbg_trace(rtlpriv,64ULL,5,(char *)"<==\n");
  #line 300 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_set_sw_chnl_cmdarray(struct swchnlcmd *cmdtable, u32 cmdtableidx, u32 cmdtablesz, enum swchnlcmd_id cmdid, u32 para1, u32 para2, u32 msdelay)
{
  #line 306 
  struct swchnlcmd *pcmd;
  #line 308 
  if (cmdtable == (struct swchnlcmd *)0) {
    {
      #line 309 
      bool __warned;
      #line 309 
      int __ret_warn_once = 1;
      #line 309 
      if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
        #line 309 
        __warned = (_Bool)1;
        {
          #line 309 
          int __ret_warn_on = 1;
          #line 309 
          if ((long)(__ret_warn_on != 0) != 0L) {
            #line 309 
            __warn_printk((char *)"rtl8192se: cmdtable cannot be NULL\n");
            #line 310 
            ldv_inline_asm();
            #line 311 
            ldv_inline_asm();
          }
          #line 309 
          long tmp = (long)(__ret_warn_on != 0);
        }
      }
      #line 309 
      long tmp_3 = (long)(__ret_warn_once != 0);
    }
    #line 310 
    return (_Bool)0;
  }
  #line 313 
  if (cmdtableidx >= cmdtablesz) 
                                 #line 314 
                                 return (_Bool)0;
  #line 316 
  pcmd = cmdtable + (unsigned long)cmdtableidx;
  #line 317 
  pcmd->cmdid = cmdid;
  #line 318 
  pcmd->para1 = para1;
  #line 319 
  pcmd->para2 = para2;
  #line 320 
  pcmd->msdelay = msdelay;
  #line 322 
  return (_Bool)1;
}

#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_sw_chnl_step_by_step(struct ieee80211_hw *hw, u8 channel, u8 *stage, u8 *step, u32 *delay)
{
  #line 330 
  struct swchnlcmd precommoncmd[16U];
  #line 331 
  u32 precommoncmdcnt;
  #line 332 
  struct swchnlcmd postcommoncmd[16U];
  #line 333 
  u32 postcommoncmdcnt;
  #line 334 
  struct swchnlcmd rfdependcmd[16U];
  #line 335 
  u32 rfdependcmdcnt;
  #line 337 
  u8 rfpath;
  #line 341 
  u32 tmp;
  #line 343 
  u32 tmp_0;
  #line 348 
  u32 tmp_1;
  #line 356 
  u32 tmp_2_1;
  #line 360 
  u32 tmp_3;
  #line 328 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 329 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 336 
  struct swchnlcmd *currentcmd = (struct swchnlcmd *)0;
  #line 338 
  u8 num_total_rfpath = rtlphy->num_total_rfpath;
  #line 340 
  precommoncmdcnt = 0U;
  #line 341 
  tmp = precommoncmdcnt;
  #line 341 
  precommoncmdcnt ++;
  #line 341 
  ;
  #line 341 
  _rtl92s_phy_set_sw_chnl_cmdarray((struct swchnlcmd *)(& precommoncmd),tmp,16U,(enum swchnlcmd_id)CMDID_SET_TXPOWEROWER_LEVEL,0U,0U,0U);
  #line 343 
  tmp_0 = precommoncmdcnt;
  #line 343 
  precommoncmdcnt ++;
  #line 343 
  ;
  #line 343 
  _rtl92s_phy_set_sw_chnl_cmdarray((struct swchnlcmd *)(& precommoncmd),tmp_0,16U,(enum swchnlcmd_id)CMDID_END,0U,0U,0U);
  #line 346 
  postcommoncmdcnt = 0U;
  #line 348 
  tmp_1 = postcommoncmdcnt;
  #line 348 
  postcommoncmdcnt ++;
  #line 348 
  ;
  #line 348 
  _rtl92s_phy_set_sw_chnl_cmdarray((struct swchnlcmd *)(& postcommoncmd),tmp_1,16U,(enum swchnlcmd_id)CMDID_END,0U,0U,0U);
  #line 351 
  rfdependcmdcnt = 0U;
  {
    #line 353 
    bool __warned;
    #line 353 
    int __ret_warn_once = (unsigned int)channel + 255U > 13U;
    #line 353 
    if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
      #line 353 
      __warned = (_Bool)1;
      {
        #line 353 
        int __ret_warn_on = 1;
        #line 353 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 353 
          __warn_printk((char *)"rtl8192se: invalid channel for Zebra: %d\n",(int)channel);
          #line 354 
          ldv_inline_asm();
          #line 355 
          ldv_inline_asm();
        }
        #line 353 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
    }
    #line 353 
    long tmp_4 = (long)(__ret_warn_once != 0);
  }
  #line 356 
  ;
  #line 356 
  tmp_2_1 = rfdependcmdcnt;
  #line 356 
  rfdependcmdcnt ++;
  #line 356 
  ;
  #line 356 
  _rtl92s_phy_set_sw_chnl_cmdarray((struct swchnlcmd *)(& rfdependcmd),tmp_2_1,16U,(enum swchnlcmd_id)CMDID_RF_WRITEREG,24U,(unsigned int)channel,10U);
  #line 360 
  tmp_3 = rfdependcmdcnt;
  #line 360 
  rfdependcmdcnt ++;
  #line 360 
  ;
  #line 360 
  _rtl92s_phy_set_sw_chnl_cmdarray((struct swchnlcmd *)(& rfdependcmd),tmp_3,16U,(enum swchnlcmd_id)CMDID_END,0U,0U,0U);
  #line 363 
  while (1) {
    #line 364 
    switch ((int)*stage) {
      #line 365 
      case 0: 
              #line 365 
      ;
      #line 366 
      currentcmd = & precommoncmd[(int)*step];
      #line 367 
      break;
      #line 368 
      case 1: 
              #line 368 
      ;
      #line 369 
      currentcmd = & rfdependcmd[(int)*step];
      #line 370 
      break;
      #line 371 
      case 2: 
              #line 371 
      ;
      #line 372 
      currentcmd = & postcommoncmd[(int)*step];
      #line 373 
      break;
      #line 374 
      default: 
               #line 374 
      ;
      #line 375 
      return (_Bool)1;
    }
    #line 378 
    if (currentcmd->cmdid == (unsigned int)CMDID_END) 
      #line 379 
      if ((unsigned int)*stage == 2U) 
                                      #line 380 
                                      return (_Bool)1;
      else {
        #line 382 
        *stage = (u8)((int)*stage + 1);
        #line 383 
        *step = (unsigned char)0U;
        #line 384 
        goto __Cont;
      }
    #line 388 
    switch ((unsigned int)currentcmd->cmdid) {
      #line 389 
      case (unsigned int)1: 
                            #line 389 
      ;
      #line 390 
      rtl92s_phy_set_txpower(hw,(unsigned char)((int)channel));
      #line 391 
      break;
      #line 392 
      case (unsigned int)3: 
                            #line 392 
      ;
      #line 393 
      rtl_write_dword(rtlpriv,currentcmd->para1,currentcmd->para2);
      #line 395 
      break;
      #line 396 
      case (unsigned int)4: 
                            #line 396 
      ;
      #line 397 
      rtl_write_word(rtlpriv,currentcmd->para1,(unsigned short)((int)((unsigned short)currentcmd->para2)));
      #line 399 
      break;
      #line 400 
      case (unsigned int)5: 
                            #line 400 
      ;
      #line 401 
      rtl_write_byte(rtlpriv,currentcmd->para1,(unsigned char)((int)((unsigned char)currentcmd->para2)));
      #line 403 
      break;
      #line 404 
      case (unsigned int)6: 
                            #line 404 
      ;
      #line 405 
      rfpath = (unsigned char)0U;
      #line 405 
      while ((int)rfpath < (int)num_total_rfpath) {
        #line 406 
        rtlphy->rfreg_chnlval[(int)rfpath] = (rtlphy->rfreg_chnlval[(int)rfpath] & 4294966272U) | currentcmd->para2;
        #line 409 
        rtl_set_rfreg(hw,(enum radio_path)rfpath,currentcmd->para1,1048575U,rtlphy->rfreg_chnlval[(int)rfpath]);
        #line 405 
        rfpath = (u8)((int)rfpath + 1);
      }
      #line 414 
      break;
      #line 415 
      default: 
               #line 415 
      ;
      #line 416 
      printk((char *)"\001",(unsigned int)currentcmd->cmdid);
      #line 418 
      break;
    }
    #line 421 
    break;
    #line 363 
    __Cont: 
            #line 363 
    ;
  }
  #line 424 
  *delay = currentcmd->msdelay;
  #line 425 
  *step = (u8)((int)*step + 1);
  #line 426 
  return (_Bool)0;
}

#line 429  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u8 rtl92s_phy_sw_chnl(struct ieee80211_hw *hw)
{
  #line 434 
  u32 delay;
  #line 435 
  bool ret;
  #line 431 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 432 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 433 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 437 
  _rtl_dbg_trace(rtlpriv,64ULL,5,(char *)"switch to channel%d\n",(int)rtlphy->current_channel);
  #line 440 
  if ((unsigned int)rtlphy->sw_chnl_inprogress != 0U) 
                                                      #line 441 
                                                      return (unsigned char)0U;
  #line 443 
  if ((unsigned int)rtlphy->set_bwmode_inprogress != 0U) 
                                                         #line 444 
                                                         return (unsigned char)0U;
  #line 446 
  if ((int)is_hal_stop(rtlhal) != 0) 
                                     #line 447 
                                     return (unsigned char)0U;
  #line 449 
  rtlphy->sw_chnl_inprogress = (unsigned char)1U;
  #line 450 
  rtlphy->sw_chnl_stage = (unsigned char)0U;
  #line 451 
  rtlphy->sw_chnl_step = (unsigned char)0U;
  #line 453 
  while (1) {
    #line 454 
    if ((unsigned int)rtlphy->sw_chnl_inprogress == 0U) 
                                                        #line 455 
                                                        break;
    #line 457 
    ret = _rtl92s_phy_sw_chnl_step_by_step(hw,(unsigned char)((int)rtlphy->current_channel),& rtlphy->sw_chnl_stage,& rtlphy->sw_chnl_step,& delay);
    #line 461 
    if (! ret) {
      #line 462 
      if (delay != 0U) 
        #line 463 
        if (0 != 0 && delay <= 5U) 
          #line 463 
          if (0 != 0) 
            #line 463 
            if (delay * 1000U > 19999U) 
                                        #line 463 
                                        __bad_udelay(); else 
                                                             #line 463 
                                                             __const_udelay((unsigned long)(delay * 1000U) * 4295UL);
          else 
               #line 463 
               __udelay((unsigned long)(delay * 1000U));
        else {
          #line 463 
          unsigned long __ms = (unsigned long)delay;
          #line 463 
          while (1) {
            #line 463 
            unsigned long tmp_0;
            #line 463 
            tmp_0 = __ms;
            #line 463 
            __ms --;
            #line 463 
            ;
            #line 463 
            if (! (tmp_0 != 0UL)) 
                                  #line 463 
                                  break;
            #line 463 
            __const_udelay(4295000UL);
          }
        }
      else 
           #line 465 
           goto __Cont;
    }
    else 
         #line 467 
         rtlphy->sw_chnl_inprogress = (unsigned char)0U;
    #line 469 
    break;
    #line 453 
    __Cont: 
            #line 453 
    ;
  }
  #line 472 
  rtlphy->sw_chnl_inprogress = (unsigned char)0U;
  #line 474 
  _rtl_dbg_trace(rtlpriv,64ULL,5,(char *)"<==\n");
  #line 476 
  return (unsigned char)1U;
}

#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92se_phy_set_rf_sleep(struct ieee80211_hw *hw)
{
  #line 482 
  u8 u1btmp;
  #line 481 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 484 
  u1btmp = rtl_read_byte(rtlpriv,33U);
  #line 485 
  u1btmp = (unsigned char)((unsigned int)u1btmp | 1U);
  #line 487 
  rtl_write_byte(rtlpriv,33U,(unsigned char)((int)u1btmp));
  #line 488 
  rtl_write_byte(rtlpriv,24U,(unsigned char)0);
  #line 489 
  rtl_write_byte(rtlpriv,66U,(unsigned char)255);
  #line 490 
  rtl_write_word(rtlpriv,64U,(unsigned short)22524);
  #line 491 
  __const_udelay(429500UL);
  #line 493 
  rtl_write_word(rtlpriv,64U,(unsigned short)30716);
  #line 494 
  rtl_write_byte(rtlpriv,2051U,(unsigned char)0);
  #line 495 
  __const_udelay(42950UL);
  #line 497 
  rtl_write_word(rtlpriv,64U,(unsigned short)14332);
  #line 498 
  __const_udelay(42950UL);
  #line 500 
  rtl_write_word(rtlpriv,64U,(unsigned short)30716);
  #line 501 
  __const_udelay(42950UL);
  #line 503 
  rtl_write_word(rtlpriv,64U,(unsigned short)22524);
  #line 507 
  rtl8192se_gpiobit3_cfg_inputmode(hw);
  #line 508 
  return;
}

#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_set_rf_power_state(struct ieee80211_hw *hw, enum rf_pwrstate rfpwr_state)
{
  #line 518 
  u8 i;
  #line 518 
  u8 queue_id;
  #line 513 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 514 
  struct rtl_pci_priv *pcipriv = (struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv);
  #line 515 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 516 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 517 
  bool bresult = (_Bool)1;
  #line 519 
  struct rtl8192_tx_ring *ring = (struct rtl8192_tx_ring *)0;
  #line 521 
  if (ppsc->rfpwr_state == rfpwr_state) 
                                        #line 522 
                                        return (_Bool)0;
  #line 524 
  switch ((unsigned int)rfpwr_state) {
    #line 525 
    case (unsigned int)0: 
                          #line 525 
    ;
    #line 526 
    if (ppsc->rfpwr_state == (unsigned int)ERFOFF && (int)((unsigned long)ppsc->cur_ps_level >> 3) & 1) {
      #line 529 
      bool rtstatus;
      #line 530 
      u32 initializecount = 0U;
      #line 531 
      while (1) {
        #line 532 
        initializecount ++;
        #line 533 
        _rtl_dbg_trace(rtlpriv,1048576ULL,3,(char *)"IPS Set eRf nic enable\n");
        #line 535 
        rtstatus = rtl_ps_enable_nic(hw);
        #line 536 
        if (! (! rtstatus && initializecount <= 9U)) 
                                                     #line 531 
                                                     break;
      }
      #line 538 
      ppsc->cur_ps_level &= 4294967287U;
    }
    else {
      #line 541 
      ;
      #line 541 
      ;
      #line 541 
      _rtl_dbg_trace(rtlpriv,65536ULL,3,(char *)"awake, sleeped:%d ms state_inap:%x\n",jiffies_to_msecs(jiffies - ppsc->last_sleep_jiffies),(int)rtlpriv->psc.state_inap);
      #line 547 
      ppsc->last_awake_jiffies = jiffies;
      #line 548 
      rtl_write_word(rtlpriv,64U,(unsigned short)14332);
      #line 549 
      rtl_write_byte(rtlpriv,66U,(unsigned char)0);
      #line 550 
      rtl_write_byte(rtlpriv,2051U,(unsigned char)3);
    }
    #line 553 
    if (mac->link_state == (unsigned int)MAC80211_LINKED) 
                                                          #line 554 
                                                          (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_LINK); else 
                                                                    #line 557 
                                                                    (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_NO_LINK);
    #line 559 
    break;
    #line 561 
    case (unsigned int)2: 
                          #line 561 
    ;
    #line 562 
    if (((unsigned long)ppsc->reg_rfps_level & 8UL) != 0UL) {
      #line 563 
      _rtl_dbg_trace(rtlpriv,1048576ULL,3,(char *)"IPS Set eRf nic disable\n");
      #line 565 
      rtl_ps_disable_nic(hw);
      #line 566 
      ppsc->cur_ps_level |= 8U;
    }
    else 
      #line 568 
      if (ppsc->rfoff_reason == 268435456U) 
                                            #line 569 
                                            (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_NO_LINK); else 
                                                                    #line 572 
                                                                    (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_POWER_OFF);
    #line 575 
    break;
    #line 577 
    case (unsigned int)1: 
                          #line 577 
    ;
    #line 578 
    if (ppsc->rfpwr_state == (unsigned int)ERFOFF) 
                                                   #line 579 
                                                   return (_Bool)0;
    #line 581 
    queue_id = (unsigned char)0U;
    #line 581 
    i = (unsigned char)0U;
    #line 581 
    while ((unsigned int)queue_id <= 8U) {
      {
        #line 583 
        ring = & pcipriv->dev.tx_ring[(int)queue_id];
        #line 584 
        if (skb_queue_len(& ring->queue) == 0U) 
                                                #line 584 
                                                goto _LOR;
        else 
          #line 584 
          if ((unsigned int)queue_id == 4U) {
            #line 584 
            _LOR: {
                    #line 586 
                    queue_id = (u8)((int)queue_id + 1);
                    #line 587 
                    goto __Cont;
                  }
          }
          else {
            #line 589 
            ;
            #line 589 
            ;
            #line 589 
            ;
            #line 589 
            _rtl_dbg_trace(rtlpriv,1ULL,2,(char *)"eRf Off/Sleep: %d times TcbBusyQueue[%d] = %d before doze!\n",(int)i + 1,(int)queue_id,skb_queue_len(& ring->queue));
            #line 594 
            __const_udelay(42950UL);
            #line 595 
            i = (u8)((int)i + 1);
          }
        #line 598 
        if ((unsigned int)i > 63U) {
          #line 599 
          ;
          #line 599 
          ;
          #line 599 
          _rtl_dbg_trace(rtlpriv,1ULL,2,(char *)"ERFOFF: %d times TcbBusyQueue[%d] = %d !\n",64,(int)queue_id,skb_queue_len(& ring->queue));
          #line 604 
          break;
        }
      }
      #line 581 
      __Cont: 
              #line 581 
      ;
    }
    #line 608 
    ;
    #line 608 
    _rtl_dbg_trace(rtlpriv,65536ULL,3,(char *)"Set ERFSLEEP awaked:%d ms\n",jiffies_to_msecs(jiffies - ppsc->last_awake_jiffies));
    #line 613 
    ;
    #line 613 
    ;
    #line 613 
    _rtl_dbg_trace(rtlpriv,65536ULL,3,(char *)"sleep awaked:%d ms state_inap:%x\n",jiffies_to_msecs(jiffies - ppsc->last_awake_jiffies),(int)rtlpriv->psc.state_inap);
    #line 618 
    ppsc->last_sleep_jiffies = jiffies;
    #line 619 
    _rtl92se_phy_set_rf_sleep(hw);
    #line 620 
    break;
    #line 621 
    default: 
             #line 621 
    ;
    #line 622 
    printk((char *)"\001",(unsigned int)rfpwr_state);
    #line 624 
    bresult = (_Bool)0;
    #line 625 
    break;
  }
  #line 628 
  if ((int)bresult != 0) 
                         #line 629 
                         ppsc->rfpwr_state = rfpwr_state;
  #line 631 
  return bresult;
}

#line 634  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_config_rfpa_bias_current(struct ieee80211_hw *hw, enum radio_path rfpath)
{
  #line 637 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 638 
  bool rtstatus = (_Bool)1;
  #line 639 
  u32 tmpval = 0U;
  #line 642 
  if ((unsigned int)rtlhal->ic_class != 0U) {
    #line 643 
    tmpval = rtl92s_phy_query_rf_reg(hw,rfpath,21U,15U);
    #line 644 
    rtl92s_phy_set_rf_reg(hw,rfpath,21U,15U,tmpval + 1U);
  }
  #line 647 
  return rtstatus;
}

#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_store_pwrindex_diffrate_offset(struct ieee80211_hw *hw, u32 reg_addr, u32 bitmask, u32 data)
{
  #line 655 
  int index;
  #line 653 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 654 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 657 
  if (reg_addr == 3584U) 
                         #line 658 
                         index = 0;
  else 
    #line 659 
    if (reg_addr == 3588U) 
                           #line 660 
                           index = 1;
    else 
      #line 661 
      if (reg_addr == 3592U) 
                             #line 662 
                             index = 6;
      else 
        #line 663 
        if (reg_addr == 3600U) 
                               #line 664 
                               index = 2;
        else 
          #line 665 
          if (reg_addr == 3604U) 
                                 #line 666 
                                 index = 3;
          else 
            #line 667 
            if (reg_addr == 3608U) 
                                   #line 668 
                                   index = 4;
            else 
              #line 669 
              if (reg_addr == 3612U) 
                                     #line 670 
                                     index = 5; else 
                                                     #line 672 
                                                     return;
  #line 674 
  rtlphy->mcs_offset[(int)rtlphy->pwrgroup_cnt][index] = data;
  #line 675 
  if (index == 5) 
                  #line 676 
                  rtlphy->pwrgroup_cnt = (u8)((int)rtlphy->pwrgroup_cnt + 1);
  #line 677 
  return;
}

#line 679  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_phy_init_register_definition(struct ieee80211_hw *hw)
{
  #line 681 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 682 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 685 
  rtlphy->phyreg_def[0].rfintfs = 2160U;
  #line 686 
  rtlphy->phyreg_def[1].rfintfs = 2160U;
  #line 687 
  rtlphy->phyreg_def[2].rfintfs = 2164U;
  #line 688 
  rtlphy->phyreg_def[3].rfintfs = 2164U;
  #line 691 
  rtlphy->phyreg_def[0].rfintfi = 2272U;
  #line 692 
  rtlphy->phyreg_def[1].rfintfi = 2272U;
  #line 693 
  rtlphy->phyreg_def[2].rfintfi = 2276U;
  #line 694 
  rtlphy->phyreg_def[3].rfintfi = 2276U;
  #line 697 
  rtlphy->phyreg_def[0].rfintfo = 2144U;
  #line 698 
  rtlphy->phyreg_def[1].rfintfo = 2148U;
  #line 699 
  rtlphy->phyreg_def[2].rfintfo = 2152U;
  #line 700 
  rtlphy->phyreg_def[3].rfintfo = 2156U;
  #line 703 
  rtlphy->phyreg_def[0].rfintfe = 2144U;
  #line 704 
  rtlphy->phyreg_def[1].rfintfe = 2148U;
  #line 705 
  rtlphy->phyreg_def[2].rfintfe = 2152U;
  #line 706 
  rtlphy->phyreg_def[3].rfintfe = 2156U;
  #line 709 
  rtlphy->phyreg_def[0].rf3wire_offset = 2112U;
  #line 711 
  rtlphy->phyreg_def[1].rf3wire_offset = 2116U;
  #line 713 
  rtlphy->phyreg_def[2].rf3wire_offset = 2120U;
  #line 715 
  rtlphy->phyreg_def[3].rf3wire_offset = 2124U;
  #line 719 
  rtlphy->phyreg_def[0].rflssi_select = 2168U;
  #line 720 
  rtlphy->phyreg_def[1].rflssi_select = 2168U;
  #line 721 
  rtlphy->phyreg_def[2].rflssi_select = 2172U;
  #line 722 
  rtlphy->phyreg_def[3].rflssi_select = 2172U;
  #line 725 
  rtlphy->phyreg_def[0].rftxgain_stage = 2060U;
  #line 726 
  rtlphy->phyreg_def[1].rftxgain_stage = 2060U;
  #line 727 
  rtlphy->phyreg_def[2].rftxgain_stage = 2060U;
  #line 728 
  rtlphy->phyreg_def[3].rftxgain_stage = 2060U;
  #line 731 
  rtlphy->phyreg_def[0].rfhssi_para1 = 2080U;
  #line 732 
  rtlphy->phyreg_def[1].rfhssi_para1 = 2088U;
  #line 733 
  rtlphy->phyreg_def[2].rfhssi_para1 = 2096U;
  #line 734 
  rtlphy->phyreg_def[3].rfhssi_para1 = 2104U;
  #line 737 
  rtlphy->phyreg_def[0].rfhssi_para2 = 2084U;
  #line 738 
  rtlphy->phyreg_def[1].rfhssi_para2 = 2092U;
  #line 739 
  rtlphy->phyreg_def[2].rfhssi_para2 = 2100U;
  #line 740 
  rtlphy->phyreg_def[3].rfhssi_para2 = 2108U;
  #line 743 
  rtlphy->phyreg_def[0].rfsw_ctrl = 2136U;
  #line 744 
  rtlphy->phyreg_def[1].rfsw_ctrl = 2136U;
  #line 745 
  rtlphy->phyreg_def[2].rfsw_ctrl = 2140U;
  #line 746 
  rtlphy->phyreg_def[3].rfsw_ctrl = 2140U;
  #line 749 
  rtlphy->phyreg_def[0].rfagc_control1 = 3152U;
  #line 750 
  rtlphy->phyreg_def[1].rfagc_control1 = 3160U;
  #line 751 
  rtlphy->phyreg_def[2].rfagc_control1 = 3168U;
  #line 752 
  rtlphy->phyreg_def[3].rfagc_control1 = 3176U;
  #line 755 
  rtlphy->phyreg_def[0].rfagc_control2 = 3156U;
  #line 756 
  rtlphy->phyreg_def[1].rfagc_control2 = 3164U;
  #line 757 
  rtlphy->phyreg_def[2].rfagc_control2 = 3172U;
  #line 758 
  rtlphy->phyreg_def[3].rfagc_control2 = 3180U;
  #line 761 
  rtlphy->phyreg_def[0].rfrxiq_imbal = 3092U;
  #line 762 
  rtlphy->phyreg_def[1].rfrxiq_imbal = 3100U;
  #line 763 
  rtlphy->phyreg_def[2].rfrxiq_imbal = 3108U;
  #line 764 
  rtlphy->phyreg_def[3].rfrxiq_imbal = 3116U;
  #line 767 
  rtlphy->phyreg_def[0].rfrx_afe = 3088U;
  #line 768 
  rtlphy->phyreg_def[1].rfrx_afe = 3096U;
  #line 769 
  rtlphy->phyreg_def[2].rfrx_afe = 3104U;
  #line 770 
  rtlphy->phyreg_def[3].rfrx_afe = 3112U;
  #line 773 
  rtlphy->phyreg_def[0].rftxiq_imbal = 3200U;
  #line 774 
  rtlphy->phyreg_def[1].rftxiq_imbal = 3208U;
  #line 775 
  rtlphy->phyreg_def[2].rftxiq_imbal = 3216U;
  #line 776 
  rtlphy->phyreg_def[3].rftxiq_imbal = 3224U;
  #line 779 
  rtlphy->phyreg_def[0].rftx_afe = 3204U;
  #line 780 
  rtlphy->phyreg_def[1].rftx_afe = 3212U;
  #line 781 
  rtlphy->phyreg_def[2].rftx_afe = 3220U;
  #line 782 
  rtlphy->phyreg_def[3].rftx_afe = 3228U;
  #line 785 
  rtlphy->phyreg_def[0].rf_rb = 2208U;
  #line 786 
  rtlphy->phyreg_def[1].rf_rb = 2212U;
  #line 787 
  rtlphy->phyreg_def[2].rf_rb = 2216U;
  #line 788 
  rtlphy->phyreg_def[3].rf_rb = 2220U;
  #line 791 
  rtlphy->phyreg_def[0].rf_rbpi = 2232U;
  #line 792 
  rtlphy->phyreg_def[1].rf_rbpi = 2236U;
  #line 793 
  return;
}

#line 796  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_config_bb(struct ieee80211_hw *hw, u8 configtype)
{
  #line 798 
  int i;
  #line 799 
  u32 *phy_reg_table;
  #line 800 
  u32 *agc_table;
  #line 801 
  u16 phy_reg_len;
  #line 801 
  u16 agc_len;
  #line 803 
  agc_len = (unsigned short)320U;
  #line 804 
  agc_table = (u32 *)(& rtl8192seagctab_array);
  #line 806 
  phy_reg_len = (unsigned short)372U;
  #line 807 
  phy_reg_table = (u32 *)(& rtl8192sephy_reg_2t2rarray);
  #line 809 
  if ((unsigned int)configtype == 0U) {
    #line 810 
    i = 0;
    #line 810 
    while ((int)phy_reg_len > i) {
      #line 811 
      rtl_addr_delay(*(phy_reg_table + (unsigned long)i));
      #line 814 
      __const_udelay(4295UL);
      #line 816 
      rtl92s_phy_set_bb_reg(hw,*(phy_reg_table + (unsigned long)i),4294967295U,*(phy_reg_table + ((unsigned long)i + (unsigned long)1U)));
      #line 810 
      i += 2;
    }
  }
  else 
    #line 819 
    if ((unsigned int)configtype == 1U) {
      #line 820 
      i = 0;
      #line 820 
      while ((int)agc_len > i) {
        #line 821 
        rtl92s_phy_set_bb_reg(hw,*(agc_table + (unsigned long)i),4294967295U,*(agc_table + ((unsigned long)i + (unsigned long)1U)));
        #line 825 
        __const_udelay(4295UL);
        #line 820 
        i += 2;
      }
    }
  #line 829 
  return (_Bool)1;
}

#line 832  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_set_bb_to_diff_rf(struct ieee80211_hw *hw, u8 configtype)
{
  #line 837 
  u32 *phy_regarray2xtxr_table;
  #line 838 
  u16 phy_regarray2xtxr_len;
  #line 839 
  int i;
  #line 835 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 836 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 841 
  if ((unsigned int)rtlphy->rf_type == 0U) {
    #line 842 
    phy_regarray2xtxr_table = (u32 *)(& rtl8192sephy_changeto_1t1rarray);
    #line 843 
    phy_regarray2xtxr_len = (unsigned short)48U;
  }
  else 
    #line 844 
    if ((unsigned int)rtlphy->rf_type == 1U) {
      #line 845 
      phy_regarray2xtxr_table = (u32 *)(& rtl8192sephy_changeto_1t2rarray);
      #line 846 
      phy_regarray2xtxr_len = (unsigned short)45U;
    }
    else 
         #line 848 
         return (_Bool)0;
  #line 851 
  if ((unsigned int)configtype == 0U) {
    #line 852 
    i = 0;
    #line 852 
    while ((int)phy_regarray2xtxr_len > i) {
      #line 853 
      rtl_addr_delay(*(phy_regarray2xtxr_table + (unsigned long)i));
      #line 855 
      rtl92s_phy_set_bb_reg(hw,*(phy_regarray2xtxr_table + (unsigned long)i),*(phy_regarray2xtxr_table + ((unsigned long)i + (unsigned long)1U)),*(phy_regarray2xtxr_table + ((unsigned long)i + (unsigned long)2U)));
      #line 852 
      i += 3;
    }
  }
  #line 861 
  return (_Bool)1;
}

#line 864  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_config_bb_with_pg(struct ieee80211_hw *hw, u8 configtype)
{
  #line 867 
  int i;
  #line 868 
  u32 *phy_table_pg;
  #line 869 
  u16 phy_pg_len;
  #line 871 
  phy_pg_len = (unsigned short)84U;
  #line 872 
  phy_table_pg = (u32 *)(& rtl8192sephy_reg_array_pg);
  #line 874 
  if ((unsigned int)configtype == 0U) {
    #line 875 
    i = 0;
    #line 875 
    while ((int)phy_pg_len > i) {
      #line 876 
      rtl_addr_delay(*(phy_table_pg + (unsigned long)i));
      #line 878 
      _rtl92s_store_pwrindex_diffrate_offset(hw,*(phy_table_pg + (unsigned long)i),*(phy_table_pg + ((unsigned long)i + (unsigned long)1U)),*(phy_table_pg + ((unsigned long)i + (unsigned long)2U)));
      #line 882 
      rtl92s_phy_set_bb_reg(hw,*(phy_table_pg + (unsigned long)i),*(phy_table_pg + ((unsigned long)i + (unsigned long)1U)),*(phy_table_pg + ((unsigned long)i + (unsigned long)2U)));
      #line 875 
      i += 3;
    }
  }
  #line 888 
  return (_Bool)1;
}

#line 891  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static bool _rtl92s_phy_bb_config_parafile(struct ieee80211_hw *hw)
{
  #line 893 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 894 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 895 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 896 
  bool rtstatus = (_Bool)1;
  #line 900 
  if ((unsigned int)rtlphy->rf_type <= 3U) {
    #line 902 
    rtstatus = _rtl92s_phy_config_bb(hw,(unsigned char)0);
    #line 904 
    if ((unsigned int)rtlphy->rf_type + 254U > 1U) 
                                                   #line 908 
                                                   rtstatus = _rtl92s_phy_set_bb_to_diff_rf(hw,(unsigned char)0);
  }
  else 
       #line 911 
       rtstatus = (_Bool)0;
  #line 914 
  if (! rtstatus) {
    #line 915 
    printk((char *)"\001");
    #line 916 
    goto phy_bb8190_config_parafile_fail;
  }
  #line 921 
  if ((unsigned int)rtlefuse->autoload_failflag == 0U) {
    #line 922 
    rtlphy->pwrgroup_cnt = (unsigned char)0U;
    #line 924 
    rtstatus = _rtl92s_phy_config_bb_with_pg(hw,(unsigned char)0);
  }
  #line 927 
  if (! rtstatus) {
    #line 928 
    printk((char *)"\001");
    #line 929 
    goto phy_bb8190_config_parafile_fail;
  }
  #line 933 
  rtstatus = _rtl92s_phy_config_bb(hw,(unsigned char)1);
  #line 935 
  if (! rtstatus) {
    #line 936 
    printk((char *)"\001",(char *)"_rtl92s_phy_bb_config_parafile");
    #line 937 
    goto phy_bb8190_config_parafile_fail;
  }
  #line 942 
  rtlphy->cck_high_power = (unsigned char)(rtl92s_phy_query_bb_reg(hw,2084U,512U) != 0U);
  #line 945 
  phy_bb8190_config_parafile_fail: 
                                   #line 945 
  ;
  #line 946 
  return rtstatus;
}

#line 949  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
u8 rtl92s_phy_config_rf(struct ieee80211_hw *hw, enum radio_path rfpath)
{
  #line 953 
  int i;
  #line 955 
  u32 *radio_a_table;
  #line 956 
  u32 *radio_b_table;
  #line 957 
  u16 radio_a_tblen;
  #line 957 
  u16 radio_b_tblen;
  #line 951 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 952 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 954 
  bool rtstatus = (_Bool)1;
  #line 959 
  radio_a_tblen = (unsigned short)202U;
  #line 960 
  radio_a_table = (u32 *)(& rtl8192seradioa_1t_array);
  #line 963 
  if ((unsigned int)rtlphy->rf_type == 3U) {
    #line 964 
    radio_b_table = (u32 *)(& rtl8192seradiob_gm_array);
    #line 965 
    radio_b_tblen = (unsigned short)10U;
  }
  else {
    #line 967 
    radio_b_table = (u32 *)(& rtl8192seradiob_array);
    #line 968 
    radio_b_tblen = (unsigned short)22U;
  }
  #line 971 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Radio No %x\n",(unsigned int)rfpath);
  #line 972 
  rtstatus = (_Bool)1;
  #line 974 
  switch ((unsigned int)rfpath) {
    #line 975 
    case (unsigned int)0: 
                          #line 975 
    ;
    #line 976 
    i = 0;
    #line 976 
    while ((int)radio_a_tblen > i) {
      #line 977 
      rtl_rfreg_delay(hw,rfpath,*(radio_a_table + (unsigned long)i),1048575U,*(radio_a_table + ((unsigned long)i + (unsigned long)1U)));
      #line 976 
      i += 2;
    }
    #line 983 
    _rtl92s_phy_config_rfpa_bias_current(hw,rfpath);
    #line 984 
    break;
    #line 985 
    case (unsigned int)1: 
                          #line 985 
    ;
    #line 986 
    i = 0;
    #line 986 
    while ((int)radio_b_tblen > i) {
      #line 987 
      rtl_rfreg_delay(hw,rfpath,*(radio_b_table + (unsigned long)i),1048575U,*(radio_b_table + ((unsigned long)i + (unsigned long)1U)));
      #line 986 
      i += 2;
    }
    #line 990 
    break;
    #line 991 
    case (unsigned int)2: 
                          #line 991 
    ;
    #line 993 
    break;
    #line 994 
    case (unsigned int)3: 
                          #line 994 
    ;
    #line 996 
    break;
    #line 997 
    default: 
             #line 997 
    ;
    #line 998 
    break;
  }
  #line 1001 
  return (unsigned char)rtstatus;
}

#line 1005  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_mac_config(struct ieee80211_hw *hw)
{
  #line 1008 
  u32 i;
  #line 1009 
  u32 arraylength;
  #line 1010 
  u32 *ptrarray;
  #line 1007 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1012 
  arraylength = 106U;
  #line 1013 
  ptrarray = (u32 *)(& rtl8192semac_2t_array);
  #line 1015 
  i = 0U;
  #line 1015 
  while (i < arraylength) {
    #line 1016 
    rtl_write_byte(rtlpriv,*(ptrarray + (unsigned long)i),(unsigned char)((int)((unsigned char)*(ptrarray + (unsigned long)(i + 1U)))));
    #line 1015 
    i += 2U;
  }
  #line 1018 
  return (_Bool)1;
}

#line 1022  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_bb_config(struct ieee80211_hw *hw)
{
  #line 1027 
  u8 pathmap;
  #line 1027 
  u8 index;
  #line 1028 
  u8 path1;
  #line 1028 
  u8 path2;
  #line 1024 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1025 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1026 
  bool rtstatus = (_Bool)1;
  #line 1027 
  u8 rf_num = (unsigned char)0U;
  #line 1030 
  _rtl92s_phy_init_register_definition(hw);
  #line 1033 
  rtstatus = _rtl92s_phy_bb_config_parafile(hw);
  #line 1038 
  path1 = (unsigned char)rtl92s_phy_query_bb_reg(hw,2052U,15U);
  {
    #line 1039 
    unsigned long __ms = 10UL;
    #line 1039 
    while (1) {
      #line 1039 
      unsigned long tmp_0;
      #line 1039 
      tmp_0 = __ms;
      #line 1039 
      __ms --;
      #line 1039 
      ;
      #line 1039 
      if (! (tmp_0 != 0UL)) 
                            #line 1039 
                            break;
      #line 1039 
      __const_udelay(4295000UL);
    }
  }
  #line 1040 
  path2 = (unsigned char)rtl92s_phy_query_bb_reg(hw,3076U,15U);
  #line 1041 
  pathmap = (unsigned char)((int)path1 | (int)path2);
  #line 1043 
  rtlphy->rf_pathmap = (unsigned short)pathmap;
  #line 1044 
  index = (unsigned char)0U;
  #line 1044 
  while ((unsigned int)index <= 3U) {
    #line 1045 
    if ((((int)pathmap >> (int)index) & 1) != 0) 
                                                 #line 1046 
                                                 rf_num = (u8)((int)rf_num + 1);
    #line 1044 
    index = (u8)((int)index + 1);
  }
  #line 1049 
  if ((((unsigned int)rtlphy->rf_type == 0U && (unsigned int)rf_num != 1U || (unsigned int)rtlphy->rf_type == 1U && (unsigned int)rf_num != 2U) || (unsigned int)rtlphy->rf_type == 2U && (unsigned int)rf_num != 2U) || (unsigned int)rtlphy->rf_type == 3U && (unsigned int)rf_num != 2U) {
    #line 1053 
    printk((char *)"\001",(int)rtlphy->rf_type,(int)rf_num);
    #line 1055 
    printk((char *)"\001",(int)path1,(int)path2,(int)pathmap);
  }
  #line 1059 
  return rtstatus;
}

#line 1062  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_rf_config(struct ieee80211_hw *hw)
{
  #line 1064 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1065 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1068 
  if ((unsigned int)rtlphy->rf_type == 0U) 
                                           #line 1069 
                                           rtlphy->num_total_rfpath = (unsigned char)1U; else 
                                                                    #line 1071 
                                                                    rtlphy->num_total_rfpath = (unsigned char)2U;
  #line 1074 
  return rtl92s_phy_rf6052_config(hw);
}

#line 1077  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_get_hw_reg_originalvalue(struct ieee80211_hw *hw)
{
  #line 1079 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1080 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1083 
  rtlphy->default_initialgain[0] = (unsigned char)rtl_get_bbreg(hw,3152U,255U);
  #line 1085 
  rtlphy->default_initialgain[1] = (unsigned char)rtl_get_bbreg(hw,3160U,255U);
  #line 1087 
  rtlphy->default_initialgain[2] = (unsigned char)rtl_get_bbreg(hw,3168U,255U);
  #line 1089 
  rtlphy->default_initialgain[3] = (unsigned char)rtl_get_bbreg(hw,3176U,255U);
  #line 1091 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Default initial gain (c50=0x%x, c58=0x%x, c60=0x%x, c68=0x%x)\n",(int)rtlphy->default_initialgain[0],(int)rtlphy->default_initialgain[1],(int)rtlphy->default_initialgain[2],(int)rtlphy->default_initialgain[3]);
  #line 1099 
  rtlphy->framesync = (unsigned char)rtl_get_bbreg(hw,3128U,255U);
  #line 1100 
  rtlphy->framesync_c34 = rtl_get_bbreg(hw,3124U,4294967295U);
  #line 1102 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Default framesync (0x%x) = 0x%x\n",3128,(int)rtlphy->framesync);
  #line 1103 
  return;
}

#line 1108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_phy_get_txpower_index(struct ieee80211_hw *hw, u8 channel, u8 *cckpowerlevel, u8 *ofdmpowerlevel)
{
  #line 1111 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1112 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1113 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 1114 
  u8 index = (unsigned char)((unsigned int)channel + 255U);
  #line 1118 
  *cckpowerlevel = rtlefuse->txpwrlevel_cck[0][(int)index];
  #line 1120 
  *(cckpowerlevel + 1U) = rtlefuse->txpwrlevel_cck[1][(int)index];
  #line 1123 
  if ((unsigned int)rtlphy->rf_type <= 1U) {
    #line 1125 
    *ofdmpowerlevel = rtlefuse->txpwrlevel_ht40_1s[0][(int)index];
    #line 1126 
    *(ofdmpowerlevel + 1U) = rtlefuse->txpwrlevel_ht40_1s[1][(int)index];
  }
  else 
    #line 1127 
    if ((unsigned int)rtlphy->rf_type == 2U) {
      #line 1129 
      *ofdmpowerlevel = rtlefuse->txpwrlevel_ht40_2s[0][(int)index];
      #line 1130 
      *(ofdmpowerlevel + 1U) = rtlefuse->txpwrlevel_ht40_2s[1][(int)index];
    }
    else {
      #line 1132 
      *ofdmpowerlevel = (unsigned char)0U;
      #line 1133 
      *(ofdmpowerlevel + 1U) = (unsigned char)0U;
    }
  #line 1135 
  return;
}

#line 1137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_phy_ccxpower_indexcheck(struct ieee80211_hw *hw, u8 channel, u8 *cckpowerlevel, u8 *ofdmpowerlevel)
{
  #line 1140 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1141 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1143 
  rtlphy->cur_cck_txpwridx = *cckpowerlevel;
  #line 1144 
  rtlphy->cur_ofdm24g_txpwridx = *ofdmpowerlevel;
  #line 1145 
  return;
}

#line 1147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_txpower(struct ieee80211_hw *hw, u8 channel)
{
  #line 1152 
  u8 cckpowerlevel[2U];
  #line 1152 
  u8 ofdmpowerlevel[2U];
  #line 1149 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1150 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 1154 
  if (! rtlefuse->txpwr_fromeprom) 
                                   #line 1155 
                                   return;
  #line 1163 
  _rtl92s_phy_get_txpower_index(hw,(unsigned char)((int)channel),cckpowerlevel,ofdmpowerlevel);
  #line 1166 
  _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Channel-%d, cckPowerLevel (A / B) = 0x%x / 0x%x, ofdmPowerLevel (A / B) = 0x%x / 0x%x\n",(int)channel,(int)cckpowerlevel[0],(int)cckpowerlevel[1],(int)ofdmpowerlevel[0],(int)ofdmpowerlevel[1]);
  #line 1171 
  _rtl92s_phy_ccxpower_indexcheck(hw,(unsigned char)((int)channel),cckpowerlevel,ofdmpowerlevel);
  #line 1174 
  rtl92s_phy_rf6052_set_ccktxpower(hw,(unsigned char)((int)cckpowerlevel[0]));
  #line 1175 
  rtl92s_phy_rf6052_set_ofdmtxpower(hw,ofdmpowerlevel,(unsigned char)((int)channel));
  #line 1176 
  return;
}

#line 1179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_chk_fwcmd_iodone(struct ieee80211_hw *hw)
{
  #line 1183 
  u32 tmpvalue;
  #line 1181 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1182 
  u16 pollingcnt = (unsigned short)10000U;
  #line 1186 
  while (1) {
    #line 1187 
    __const_udelay(42950UL);
    #line 1189 
    tmpvalue = rtl_read_dword(rtlpriv,704U);
    #line 1190 
    if (tmpvalue == 0U) 
                        #line 1191 
                        break;
    #line 1192 
    pollingcnt = (u16)((int)pollingcnt - 1);
    #line 1192 
    if (! ((unsigned int)pollingcnt != 0U)) 
                                            #line 1186 
                                            break;
  }
  #line 1194 
  if ((unsigned int)pollingcnt == 0U) 
                                      #line 1195 
                                      printk((char *)"\001");
  #line 1196 
  return;
}

#line 1199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_phy_set_fwcmd_io(struct ieee80211_hw *hw)
{
  #line 1204 
  u32 input;
  #line 1201 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1202 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 1203 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1204 
  u32 current_aid = 0U;
  #line 1206 
  if ((int)is_hal_stop(rtlhal) != 0) 
                                     #line 1207 
                                     return;
  #line 1209 
  if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion <= 51U) 
    #line 1210 
    goto skip;
  #line 1213 
  switch ((int)rtlhal->current_fwcmd_io) {
    #line 1214 
    case 8: 
            #line 1214 
    ;
    #line 1215 
    rtlhal->current_fwcmd_io = (unsigned char)17U;
    #line 1216 
    break;
    #line 1217 
    case 9: 
            #line 1217 
    ;
    #line 1218 
    rtlhal->current_fwcmd_io = (unsigned char)18U;
    #line 1219 
    break;
    #line 1220 
    default: 
             #line 1220 
    ;
    #line 1221 
    break;
  }
  #line 1224 
  skip: 
        #line 1224 
  ;
  #line 1225 
  switch ((int)rtlhal->current_fwcmd_io) {
    #line 1226 
    case 6: 
            #line 1226 
    ;
    #line 1227 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_RA_RESET\n");
    #line 1228 
    rtl_write_dword(rtlpriv,704U,4244635823U);
    #line 1229 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1230 
    break;
    #line 1231 
    case 7: 
            #line 1231 
    ;
    #line 1232 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_RA_ACTIVE\n");
    #line 1233 
    rtl_write_dword(rtlpriv,704U,4244635814U);
    #line 1234 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1235 
    break;
    #line 1236 
    case 8: 
            #line 1236 
    ;
    #line 1237 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_RA_REFRESH_N\n");
    #line 1238 
    input = 4244635808U;
    #line 1239 
    rtl_write_dword(rtlpriv,704U,input);
    #line 1240 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1241 
    rtl_write_dword(rtlpriv,704U,4244635821U);
    #line 1242 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1243 
    break;
    #line 1244 
    case 9: 
            #line 1244 
    ;
    #line 1245 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_RA_REFRESH_BG\n");
    #line 1247 
    rtl_write_dword(rtlpriv,704U,4244635808U);
    #line 1248 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1249 
    rtl_write_dword(rtlpriv,704U,4244635820U);
    #line 1250 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1251 
    break;
    #line 1252 
    case 17: 
             #line 1252 
    ;
    #line 1253 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_RA_REFRESH_N_COMB\n");
    #line 1255 
    input = 4244635697U;
    #line 1256 
    rtl_write_dword(rtlpriv,704U,input);
    #line 1257 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1258 
    break;
    #line 1259 
    case 18: 
             #line 1259 
    ;
    #line 1260 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_RA_REFRESH_BG_COMB\n");
    #line 1262 
    input = 4244635696U;
    #line 1263 
    rtl_write_dword(rtlpriv,704U,input);
    #line 1264 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1265 
    break;
    #line 1266 
    case 30: 
             #line 1266 
    ;
    #line 1267 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_IQK_ENABLE\n");
    #line 1268 
    rtl_write_dword(rtlpriv,704U,4026531872U);
    #line 1269 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1270 
    break;
    #line 1271 
    case 15: 
             #line 1271 
    ;
    #line 1273 
    rtl_set_bbreg(hw,3152U,255U,23U);
    #line 1274 
    rtl_set_bbreg(hw,3160U,255U,23U);
    #line 1276 
    rtl_set_bbreg(hw,2568U,16711680U,64U);
    #line 1277 
    break;
    #line 1278 
    case 16: 
             #line 1278 
    ;
    #line 1280 
    rtl_set_bbreg(hw,2568U,16711680U,205U);
    #line 1281 
    rtl92s_phy_set_txpower(hw,(unsigned char)((int)rtlphy->current_channel));
    #line 1282 
    break;
    #line 1283 
    case 5: 
            #line 1283 
    ;
    #line 1284 
    if (((unsigned long)rtlpriv->dm.dm_flag & 2UL) != 0UL) 
                                                           #line 1285 
                                                           break;
    #line 1288 
    rtl_set_bbreg(hw,3152U,255U,23U);
    #line 1289 
    rtl_set_bbreg(hw,3160U,255U,23U);
    #line 1291 
    rtl_set_bbreg(hw,2568U,16711680U,64U);
    #line 1292 
    break;
    #line 1293 
    case 4: 
            #line 1293 
    ;
    #line 1294 
    if (((unsigned long)rtlpriv->dm.dm_flag & 2UL) != 0UL || (int)rtlpriv->dm.dynamic_txpower_enable != 0) 
      #line 1296 
      break;
    #line 1299 
    rtl_set_bbreg(hw,2568U,16711680U,205U);
    #line 1300 
    break;
    #line 1301 
    case 22: 
             #line 1301 
    ;
    #line 1302 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_LPS_ENTER\n");
    #line 1303 
    current_aid = (unsigned int)rtlpriv->mac80211.assoc_id;
    #line 1304 
    rtl_write_dword(rtlpriv,704U,(current_aid << 8) | 4273995792U);
    #line 1306 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1309 
    break;
    #line 1310 
    case 23: 
             #line 1310 
    ;
    #line 1311 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_LPS_LEAVE\n");
    #line 1312 
    rtl_write_dword(rtlpriv,704U,4261412881U);
    #line 1313 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1314 
    break;
    #line 1315 
    case 26: 
             #line 1315 
    ;
    #line 1316 
    _rtl_dbg_trace(rtlpriv,8388608ULL,3,(char *)"FW_CMD_ADD_A2_ENTRY\n");
    #line 1317 
    rtl_write_dword(rtlpriv,704U,4244635670U);
    #line 1318 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1319 
    break;
    #line 1320 
    case 27: 
             #line 1320 
    ;
    #line 1321 
    _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"FW_CMD_CTRL_DM_BY_DRIVER\n");
    #line 1323 
    rtl_write_dword(rtlpriv,704U,4244635690U);
    #line 1324 
    rtl92s_phy_chk_fwcmd_iodone(hw);
    #line 1325 
    break;
    #line 1327 
    default: 
             #line 1327 
    ;
    #line 1328 
    break;
  }
  #line 1331 
  rtl92s_phy_chk_fwcmd_iodone(hw);
  #line 1334 
  rtlhal->set_fwcmd_inprogress = (_Bool)0;
  #line 1335 
  return;
}

#line 1337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
bool rtl92s_phy_set_fw_cmd(struct ieee80211_hw *hw, enum fwcmd_iotype fw_cmdio)
{
  #line 1339 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1340 
  struct dig_t *digtable = & rtlpriv->dm_digtable;
  #line 1341 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 1342 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 1343 
  u32 fw_param = rtlpriv->rtlhal.fwcmd_ioparam;
  #line 1344 
  u16 fw_cmdmap = rtlpriv->rtlhal.fwcmd_iomap;
  #line 1345 
  bool postprocessing = (_Bool)0;
  #line 1347 
  _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"Set FW Cmd(%#x), set_fwcmd_inprogress(%d)\n",(unsigned int)fw_cmdio,(int)rtlhal->set_fwcmd_inprogress);
  #line 1351 
  while (1) {
    #line 1354 
    if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 52U) 
      #line 1355 
      switch ((unsigned int)fw_cmdio) {
        #line 1356 
        case (unsigned int)8: 
                              #line 1356 
        ;
        #line 1357 
        fw_cmdio = FW_CMD_RA_REFRESH_N_COMB;
        #line 1358 
        break;
        #line 1359 
        case (unsigned int)9: 
                              #line 1359 
        ;
        #line 1360 
        fw_cmdio = FW_CMD_RA_REFRESH_BG_COMB;
        #line 1361 
        break;
        #line 1362 
        default: 
                 #line 1362 
        ;
        #line 1363 
        break;
      }
    else 
      #line 1366 
      if ((fw_cmdio == (unsigned int)FW_CMD_IQK_ENABLE || fw_cmdio == (unsigned int)FW_CMD_RA_REFRESH_N) || fw_cmdio == (unsigned int)FW_CMD_RA_REFRESH_BG) {
        #line 1369 
        postprocessing = (_Bool)1;
        #line 1370 
        break;
      }
    #line 1376 
    if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 61U) 
      #line 1377 
      if (fw_cmdio == (unsigned int)FW_CMD_CTRL_DM_BY_DRIVER) 
                                                              #line 1378 
                                                              fw_cmdio = FW_CMD_CTRL_DM_BY_DRIVER_NEW;
    #line 1384 
    switch ((unsigned int)fw_cmdio) {
      #line 1385 
      case (unsigned int)10: 
                             #line 1385 
      ;
      #line 1386 
      _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"RA init!!\n");
      #line 1387 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 8U);
      #line 1388 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1388 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1390 
      __const_udelay(4295000UL);
      #line 1390 
      rtlpriv->rtlhal.fwcmd_iomap = (unsigned short)((unsigned int)rtlpriv->rtlhal.fwcmd_iomap & 65527U);
      #line 1391 
      break;
      #line 1392 
      case (unsigned int)1: 
                            #line 1392 
      ;
      #line 1393 
      _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"Set DIG disable!!\n");
      #line 1395 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65534U);
      #line 1396 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1396 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1397 
      break;
      #line 1398 
      case (unsigned int)0: 
                            #line 1398 
      ;
      #line 1399 
      case (unsigned int)3: 
                            #line 1399 
      ;
      #line 1400 
      if (((unsigned long)rtlpriv->dm.dm_flag & 1UL) == 0UL) {
        #line 1401 
        _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"Set DIG enable or resume!!\n");
        #line 1403 
        fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 5U);
        #line 1404 
        rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
        #line 1404 
        rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      }
      #line 1406 
      break;
      #line 1407 
      case (unsigned int)2: 
                            #line 1407 
      ;
      #line 1408 
      _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"Set DIG halt!!\n");
      #line 1410 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65530U);
      #line 1411 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1411 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1412 
      break;
      #line 1413 
      case (unsigned int)14: 
                             #line 1413 
      ;
      {
        #line 1414 
        u8 thermalval = (unsigned char)0U;
        #line 1415 
        fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 64U);
        #line 1418 
        fw_param &= 65535U;
        #line 1420 
        thermalval = rtlpriv->dm.thermalvalue;
        #line 1421 
        fw_param = (unsigned int)(((int)thermalval << 24) | ((int)rtlefuse->thermalmeter[0] << 16)) | fw_param;
        #line 1424 
        _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"Set TxPwr tracking!! FwCmdMap(%#x), FwParam(%#x)\n",(int)fw_cmdmap,fw_param);
        #line 1428 
        rtl_write_dword(rtlpriv,872U,fw_param);
        #line 1428 
        rtlpriv->rtlhal.fwcmd_ioparam = fw_param;
        #line 1429 
        rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
        #line 1429 
        rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
        #line 1432 
        __const_udelay(4295000UL);
        #line 1432 
        rtlpriv->rtlhal.fwcmd_iomap = (unsigned short)((unsigned int)rtlpriv->rtlhal.fwcmd_iomap & 65471U);
      }
      #line 1434 
      break;
      #line 1437 
      case (unsigned int)17: 
                             #line 1437 
      ;
      #line 1438 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 32U);
      #line 1441 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65511U);
      #line 1444 
      fw_param &= 4294901760U;
      #line 1446 
      _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"[FW CMD] [New Version] Set RA/IOT Comb in n mode!! FwCmdMap(%#x), FwParam(%#x)\n",(int)fw_cmdmap,fw_param);
      #line 1450 
      rtl_write_dword(rtlpriv,872U,fw_param);
      #line 1450 
      rtlpriv->rtlhal.fwcmd_ioparam = fw_param;
      #line 1451 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1451 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1454 
      __const_udelay(4295000UL);
      #line 1454 
      rtlpriv->rtlhal.fwcmd_iomap = (unsigned short)((unsigned int)rtlpriv->rtlhal.fwcmd_iomap & 65503U);
      #line 1455 
      break;
      #line 1456 
      case (unsigned int)18: 
                             #line 1456 
      ;
      #line 1457 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 16U);
      #line 1460 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65495U);
      #line 1462 
      fw_param &= 4294901760U;
      #line 1464 
      rtl_write_dword(rtlpriv,872U,fw_param);
      #line 1464 
      rtlpriv->rtlhal.fwcmd_ioparam = fw_param;
      #line 1465 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1465 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1468 
      __const_udelay(4295000UL);
      #line 1468 
      rtlpriv->rtlhal.fwcmd_iomap = (unsigned short)((unsigned int)rtlpriv->rtlhal.fwcmd_iomap & 65519U);
      #line 1469 
      break;
      #line 1470 
      case (unsigned int)30: 
                             #line 1470 
      ;
      #line 1471 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 128U);
      #line 1472 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1472 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1474 
      __const_udelay(4295000UL);
      #line 1474 
      rtlpriv->rtlhal.fwcmd_iomap = (unsigned short)((unsigned int)rtlpriv->rtlhal.fwcmd_iomap & 65407U);
      #line 1475 
      break;
      #line 1477 
      case (unsigned int)28: 
                             #line 1477 
      ;
      #line 1478 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 512U);
      #line 1479 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1479 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1480 
      break;
      #line 1482 
      case (unsigned int)16: 
                             #line 1482 
      ;
      #line 1483 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 7U);
      #line 1487 
      if (((unsigned long)rtlpriv->dm.dm_flag & 1UL) != 0UL || (unsigned int)digtable->dig_enable_flag == 0U) 
        #line 1489 
        fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65534U);
      #line 1491 
      if (((unsigned long)rtlpriv->dm.dm_flag & 2UL) != 0UL || (int)rtlpriv->dm.dynamic_txpower_enable != 0) 
        #line 1493 
        fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65533U);
      #line 1495 
      if ((unsigned int)digtable->dig_ext_port_stage <= 1U) 
                                                            #line 1499 
                                                            fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65534U);
      #line 1501 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1501 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1502 
      postprocessing = (_Bool)1;
      #line 1503 
      break;
      #line 1504 
      case (unsigned int)15: 
                             #line 1504 
      ;
      #line 1505 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65528U);
      #line 1508 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1508 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1509 
      postprocessing = (_Bool)1;
      #line 1510 
      break;
      #line 1511 
      case (unsigned int)5: 
                            #line 1511 
      ;
      #line 1512 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65533U);
      #line 1513 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1513 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1514 
      postprocessing = (_Bool)1;
      #line 1515 
      break;
      #line 1516 
      case (unsigned int)4: 
                            #line 1516 
      ;
      #line 1517 
      if (((unsigned long)rtlpriv->dm.dm_flag & 2UL) == 0UL && ! rtlpriv->dm.dynamic_txpower_enable) {
        #line 1519 
        fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 6U);
        #line 1521 
        rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
        #line 1521 
        rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
        #line 1522 
        postprocessing = (_Bool)1;
      }
      #line 1524 
      break;
      #line 1525 
      case (unsigned int)25: 
                             #line 1525 
      ;
      #line 1526 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap | 256U);
      #line 1527 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1527 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1528 
      break;
      #line 1529 
      case (unsigned int)24: 
                             #line 1529 
      ;
      #line 1530 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 65279U);
      #line 1531 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1531 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1532 
      break;
      #line 1533 
      case (unsigned int)29: 
                             #line 1533 
      ;
      #line 1534 
      _rtl_dbg_trace(rtlpriv,8388608ULL,4,(char *)"[FW CMD] Set PAPE Control\n");
      #line 1536 
      fw_cmdmap = (unsigned short)((unsigned int)fw_cmdmap & 64511U);
      #line 1538 
      rtl_write_word(rtlpriv,868U,(unsigned short)((int)fw_cmdmap));
      #line 1538 
      rtlpriv->rtlhal.fwcmd_iomap = fw_cmdmap;
      #line 1539 
      break;
      #line 1540 
      default: 
               #line 1540 
      ;
      #line 1543 
      postprocessing = (_Bool)1;
      #line 1544 
      break;
    }
    #line 1351 
    break;
  }
  #line 1551 
  if ((int)postprocessing != 0 && ! rtlhal->set_fwcmd_inprogress) {
    #line 1552 
    rtlhal->set_fwcmd_inprogress = (_Bool)1;
    #line 1554 
    rtlhal->current_fwcmd_io = (unsigned char)fw_cmdio;
  }
  else 
       #line 1556 
       return (_Bool)0;
  #line 1559 
  _rtl92s_phy_set_fwcmd_io(hw);
  #line 1560 
  return (_Bool)1;
}

#line 1563  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
static void _rtl92s_phy_check_ephy_switchready(struct ieee80211_hw *hw)
{
  #line 1567 
  u8 regu1;
  #line 1565 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1566 
  u32 delay = 100U;
  #line 1569 
  regu1 = rtl_read_byte(rtlpriv,1364U);
  #line 1570 
  while (((unsigned long)regu1 & 32UL) != 0UL && delay != 0U) {
    #line 1571 
    regu1 = rtl_read_byte(rtlpriv,1364U);
    #line 1572 
    delay --;
    #line 1575 
    __const_udelay(214750UL);
  }
  #line 1578 
  return;
}

#line 1579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_switch_ephy_parameter(struct ieee80211_hw *hw)
{
  #line 1581 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1582 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 1588 
  rtl_write_dword(rtlpriv,1344U,474129U);
  #line 1589 
  rtl_write_dword(rtlpriv,1352U,147580U);
  #line 1592 
  rtl_write_word(rtlpriv,1360U,(unsigned short)4096);
  #line 1593 
  rtl_write_byte(rtlpriv,1364U,(unsigned char)32);
  #line 1594 
  _rtl92s_phy_check_ephy_switchready(hw);
  #line 1596 
  rtl_write_word(rtlpriv,1360U,(unsigned short)41195);
  #line 1597 
  rtl_write_byte(rtlpriv,1364U,(unsigned char)62);
  #line 1598 
  _rtl92s_phy_check_ephy_switchready(hw);
  #line 1600 
  rtl_write_word(rtlpriv,1360U,(unsigned short)65408);
  #line 1601 
  rtl_write_byte(rtlpriv,1364U,(unsigned char)57);
  #line 1602 
  _rtl92s_phy_check_ephy_switchready(hw);
  #line 1605 
  if ((int)ppsc->support_aspm != 0 && ! ppsc->support_backdoor) 
                                                                #line 1606 
                                                                rtl_write_byte(rtlpriv,1376U,(unsigned char)64); else 
                                                                    #line 1608 
                                                                    rtl_write_byte(rtlpriv,1376U,(unsigned char)0);
  #line 1609 
  return;
}

#line 1612  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/phy.c"
void rtl92s_phy_set_beacon_hwreg(struct ieee80211_hw *hw, u16 beaconinterval)
{
  #line 1614 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1615 
  u32 new_bcn_num = 0U;
  #line 1617 
  if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 50U) 
    #line 1619 
    rtl_write_dword(rtlpriv,704U,(unsigned int)((int)beaconinterval << 8) | 4043309056U);
  else {
    #line 1622 
    new_bcn_num = (unsigned int)(((int)beaconinterval + -2) * 32);
    #line 1623 
    rtl_write_dword(rtlpriv,676U,new_bcn_num);
    #line 1624 
    rtl_write_dword(rtlpriv,672U,2955280508U);
  }
  #line 1626 
  return;
}

#line 782  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/phy.i.aux"
static void cif_spin_lock_rf_lock_of_rtl_locks(spinlock_t *lock)
{
  #line 785 
  ldv_spin_model_lock((char *)"rf_lock_of_rtl_locks");
  #line 787 
  spin_lock(lock);
  #line 788 
  return;
}

#line 791  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/phy.i.aux"
static void cif_spin_unlock_rf_lock_of_rtl_locks(spinlock_t *lock)
{
  #line 794 
  ldv_spin_model_unlock((char *)"rf_lock_of_rtl_locks");
  #line 796 
  spin_unlock(lock);
  #line 797 
  return;
}

/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 791  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/fw.i.aux"
static void cif_spin_unlock_irqrestore_irq_th_lock_of_rtl_locks(spinlock_t *lock, unsigned long flags);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 782 
static void cif___ldv_spin_lock_irq_th_lock_of_rtl_locks(spinlock_t *lock);
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  {
    #line 1868 
    union __anonunion___u_3589 __u = {.__val = next};
    #line 1867 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next),(void *)(& __u.__c),8);
    #line 1867 
    struct sk_buff *tmp = __u.__val;
  }
  {
    #line 1869 
    union __anonunion___u_3591 __u_0 = {.__val = prev};
    #line 1868 
    __write_once_size((void *)(& newsk->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev),(void *)(& __u_0.__c),8);
    #line 1868 
    struct sk_buff *tmp_3 = __u_0.__val;
  }
  {
    #line 1870 
    union __anonunion___u_3593 __u_1 = {.__val = newsk};
    #line 1869 
    __write_once_size((void *)(& next->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev),(void *)(& __u_1.__c),8);
    #line 1869 
    struct sk_buff *tmp_5 = __u_1.__val;
  }
  {
    #line 1871 
    union __anonunion___u_3595 __u_2 = {.__val = newsk};
    #line 1870 
    __write_once_size((void *)(& prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.next),(void *)(& __u_2.__c),8);
    #line 1870 
    struct sk_buff *tmp_7 = __u_2.__val;
  }
  #line 1871 
  (list->qlen) ++;
  #line 1872 
  return;
}

#line 1972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  #line 1976 
  __skb_insert(newsk,next->__anonCompField_sk_buff_87.__anonCompField___anonunion_487_86.prev,next,list);
  #line 1977 
  return;
}

#line 2006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  #line 2009 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  #line 2010 
  return;
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_put_data(struct sk_buff *skb, void *data, unsigned int len)
{
  #line 2233 
  void *tmp = skb_put(skb,len);
  #line 2235 
  memcpy(tmp,data,(unsigned long)len);
  #line 2237 
  return tmp;
}

#line 2338  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  #line 2340 
  skb->data += (unsigned long)len;
  #line 2341 
  skb->tail += (unsigned int)len;
  #line 2342 
  return;
}

#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  #line 2781 
  return __netdev_alloc_skb(dev,length,2592U);
}

#line 2792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  #line 2794 
  return netdev_alloc_skb((struct net_device *)0,length);
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static __le16 le16_encode_bits(u16 v, u16 field)
{
  #line 139 
  if (0 != 0) {
    #line 139 
    ;
    #line 139 
    if (((unsigned long long)v & ~ field_mask((unsigned long long)field)) != 0ULL) 
      #line 139 
      __field_overflow();
  }
  #line 139 
  ;
  #line 139 
  return (unsigned short)((int)((unsigned short)((unsigned long long)v & field_mask((unsigned long long)field))) * (int)((unsigned short)field_multiplier((unsigned long long)field)));
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bitfield.h"
__inline static void le16p_replace_bits(__le16 *p, u16 val, u16 field)
{
  #line 139 
  *p = (unsigned short)(((int)*p & ~ ((int)field)) | (int)le16_encode_bits((unsigned short)((int)val),
                       (unsigned short)((int)field)));
  #line 140 
  return;
}

#line 3095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static u16 rtl_read_word(struct rtl_priv *rtlpriv, u32 addr)
{
  #line 3097 
  return (*(rtlpriv->io.read16_sync))(rtlpriv,addr);
}

#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
int rtl92s_download_fw(struct ieee80211_hw *hw);
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
#line 552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
void rtl92s_set_fw_pwrmode_cmd(struct ieee80211_hw *hw, u8 mode);
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.h"
#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
void rtl92s_set_fw_joinbss_report_cmd(struct ieee80211_hw *hw, u8 mstatus, u8 ps_qosinfo);
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static void _rtl92s_fw_set_rqpn(struct ieee80211_hw *hw)
{
  #line 13 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 15 
  rtl_write_dword(rtlpriv,160U,4294967295U);
  #line 16 
  rtl_write_dword(rtlpriv,164U,4294967295U);
  #line 17 
  rtl_write_byte(rtlpriv,168U,(unsigned char)255);
  #line 18 
  rtl_write_byte(rtlpriv,171U,(unsigned char)128);
  #line 19 
  return;
}

#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static bool _rtl92s_firmware_enable_cpu(struct ieee80211_hw *hw)
{
  #line 25 
  u16 tmpu2b;
  #line 26 
  u8 tmpu1b;
  #line 23 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 24 
  u32 ichecktime = 200U;
  #line 26 
  u8 cpustatus = (unsigned char)0U;
  #line 28 
  _rtl92s_fw_set_rqpn(hw);
  #line 31 
  tmpu1b = rtl_read_byte(rtlpriv,8U);
  #line 33 
  rtl_write_byte(rtlpriv,8U,(unsigned char)((int)((unsigned int)tmpu1b | 4U)));
  #line 35 
  tmpu2b = rtl_read_word(rtlpriv,2U);
  #line 36 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 1024U)));
  #line 39 
  while (1) {
    #line 49 
    u32 tmp;
    #line 40 
    cpustatus = rtl_read_byte(rtlpriv,68U);
    #line 41 
    if (((unsigned long)cpustatus & 32UL) != 0UL) {
      #line 42 
      _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"IMEM Ready after CPU has refilled\n");
      #line 44 
      break;
    }
    #line 47 
    __const_udelay(429500UL);
    #line 49 
    tmp = ichecktime;
    #line 49 
    ichecktime --;
    #line 49 
    ;
    #line 49 
    if (! (tmp != 0U)) 
                       #line 39 
                       break;
  }
  #line 50 
  if (((unsigned long)cpustatus & 32UL) == 0UL) 
                                                #line 51 
                                                return (_Bool)0;
  #line 53 
  return (_Bool)1;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static enum fw_status _rtl92s_firmware_get_nextstatus(enum fw_status fw_currentstatus)
{
  #line 59 
  enum fw_status next_fwstatus = FW_STATUS_INIT;
  #line 61 
  switch ((unsigned int)fw_currentstatus) {
    #line 62 
    case (unsigned int)0: 
                          #line 62 
    ;
    #line 63 
    next_fwstatus = FW_STATUS_LOAD_IMEM;
    #line 64 
    break;
    #line 65 
    case (unsigned int)1: 
                          #line 65 
    ;
    #line 66 
    next_fwstatus = FW_STATUS_LOAD_EMEM;
    #line 67 
    break;
    #line 68 
    case (unsigned int)2: 
                          #line 68 
    ;
    #line 69 
    next_fwstatus = FW_STATUS_LOAD_DMEM;
    #line 70 
    break;
    #line 71 
    case (unsigned int)3: 
                          #line 71 
    ;
    #line 72 
    next_fwstatus = FW_STATUS_READY;
    #line 73 
    break;
    #line 74 
    default: 
             #line 74 
    ;
    #line 75 
    break;
  }
  #line 78 
  return next_fwstatus;
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static u8 _rtl92s_firmware_header_map_rftype(struct ieee80211_hw *hw)
{
  #line 83 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 84 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 86 
  switch ((int)rtlphy->rf_type) {
    #line 87 
    case 0: 
            #line 87 
    ;
    #line 88 
    return (unsigned char)17U;
    #line 89 
    case 1: 
            #line 89 
    ;
    #line 90 
    return (unsigned char)18U;
    #line 91 
    case 2: 
            #line 91 
    ;
    #line 92 
    return (unsigned char)34U;
    #line 93 
    default: 
             #line 93 
    ;
    #line 94 
    printk((char *)"\001",(int)rtlphy->rf_type);
    #line 95 
    break;
  }
  #line 97 
  return (unsigned char)34U;
}

#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static void _rtl92s_firmwareheader_priveupdate(struct ieee80211_hw *hw, struct fw_priv *pfw_priv)
{
  #line 104 
  pfw_priv->rf_config = _rtl92s_firmware_header_map_rftype(hw);
  #line 105 
  return;
}

#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static bool _rtl92s_cmd_send_packet(struct ieee80211_hw *hw, struct sk_buff *skb, u8 last)
{
  #line 114 
  struct rtl8192_tx_ring *ring;
  #line 115 
  struct rtl_tx_desc *pdesc;
  #line 116 
  unsigned long flags;
  #line 112 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 113 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 117 
  u8 idx = (unsigned char)0U;
  #line 119 
  ring = & rtlpci->tx_ring[5];
  #line 121 
  cif___ldv_spin_lock_irq_th_lock_of_rtl_locks(& rtlpriv->locks.irq_th_lock);
  #line 123 
  idx = (unsigned char)((ring->idx + skb_queue_len(& ring->queue)) % ring->entries);
  #line 124 
  pdesc = ring->desc + (unsigned long)idx;
  #line 125 
  (*(((rtlpriv->cfg)->ops)->fill_tx_cmddesc))(hw,(u8 *)pdesc,(_Bool)1,(_Bool)1,skb);
  #line 126 
  __skb_queue_tail(& ring->queue,skb);
  #line 128 
  cif_spin_unlock_irqrestore_irq_th_lock_of_rtl_locks(& rtlpriv->locks.irq_th_lock,flags);
  #line 130 
  return (_Bool)1;
}

#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static bool _rtl92s_firmware_downloadcode(struct ieee80211_hw *hw, u8 *code_virtual_address, u32 buffer_len)
{
  #line 137 
  struct sk_buff *skb;
  #line 138 
  struct rtl_tcb_desc *tcb_desc;
  #line 140 
  u16 frag_length;
  #line 136 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 139 
  u16 frag_threshold = (unsigned short)65280U;
  #line 140 
  u16 frag_offset = (unsigned short)0U;
  #line 141 
  u16 extra_descoffset = (unsigned short)0U;
  #line 142 
  u8 last_inipkt = (unsigned char)0U;
  #line 144 
  _rtl92s_fw_set_rqpn(hw);
  #line 146 
  if (buffer_len > 65279U) {
    #line 147 
    printk((char *)"\001");
    #line 148 
    return (_Bool)0;
  }
  #line 151 
  extra_descoffset = (unsigned short)0U;
  #line 153 
  while (1) {
    #line 154 
    if (buffer_len - (unsigned int)frag_offset > (unsigned int)frag_threshold) 
      #line 155 
      frag_length = (unsigned short)((int)frag_threshold + (int)extra_descoffset);
    else {
      #line 157 
      frag_length = (unsigned short)(((int)((unsigned short)buffer_len) - (int)frag_offset) + (int)extra_descoffset);
      #line 159 
      last_inipkt = (unsigned char)1U;
    }
    #line 164 
    skb = dev_alloc_skb((unsigned int)frag_length);
    #line 165 
    if (skb == (struct sk_buff *)0) 
                                    #line 166 
                                    return (_Bool)0;
    #line 167 
    skb_reserve(skb,(int)extra_descoffset);
    #line 168 
    skb_put_data(skb,(void *)(code_virtual_address + (unsigned long)frag_offset),(unsigned int)((int)frag_length - (int)extra_descoffset));
    #line 171 
    tcb_desc = (struct rtl_tcb_desc *)(& skb->cb);
    #line 172 
    tcb_desc->queue_index = (unsigned char)5U;
    #line 173 
    tcb_desc->cmd_or_init = (unsigned char)0U;
    #line 174 
    tcb_desc->last_inipkt = (unsigned char)last_inipkt;
    #line 176 
    _rtl92s_cmd_send_packet(hw,skb,(unsigned char)((int)last_inipkt));
    #line 178 
    frag_offset = (unsigned short)(((int)frag_length - (int)extra_descoffset) + (int)frag_offset);
    #line 179 
    if (! ((unsigned int)frag_offset < buffer_len)) 
                                                    #line 153 
                                                    break;
  }
  #line 182 
  rtl_write_byte(rtlpriv,1280U,(unsigned char)32);
  #line 184 
  return (_Bool)1;
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static bool _rtl92s_firmware_checkready(struct ieee80211_hw *hw, u8 loadfw_status)
{
  #line 193 
  u32 tmpu4b;
  #line 190 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 191 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 192 
  struct rt_firmware *firmware = (struct rt_firmware *)rtlhal->pfirmware;
  #line 194 
  u8 cpustatus = (unsigned char)0U;
  #line 195 
  short pollingcnt = (short)1000;
  #line 196 
  bool rtstatus = (_Bool)1;
  #line 198 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"LoadStaus(%d)\n",(int)loadfw_status);
  #line 201 
  firmware->fwstatus = (enum fw_status)loadfw_status;
  #line 203 
  switch ((int)loadfw_status) {
    #line 204 
    case 1: 
            #line 204 
    ;
    #line 206 
    while (1) {
      #line 212 
      short tmp;
      #line 207 
      cpustatus = rtl_read_byte(rtlpriv,68U);
      #line 208 
      if (((unsigned long)cpustatus & 1UL) != 0UL) 
                                                   #line 209 
                                                   break;
      #line 210 
      __const_udelay(21475UL);
      #line 212 
      tmp = pollingcnt;
      #line 212 
      pollingcnt = (short)((int)pollingcnt - 1);
      #line 212 
      ;
      #line 212 
      if (! ((int)tmp != 0)) 
                             #line 206 
                             break;
    }
    #line 213 
    if (((unsigned long)cpustatus & 2UL) == 0UL || (int)pollingcnt <= 0) {
      #line 214 
      printk((char *)"\001",(int)cpustatus);
      #line 216 
      goto status_check_fail;
    }
    #line 218 
    break;
    #line 220 
    case 2: 
            #line 220 
    ;
    #line 223 
    while (1) {
      #line 229 
      short tmp_0;
      #line 224 
      cpustatus = rtl_read_byte(rtlpriv,68U);
      #line 225 
      if (((unsigned long)cpustatus & 4UL) != 0UL) 
                                                   #line 226 
                                                   break;
      #line 227 
      __const_udelay(21475UL);
      #line 229 
      tmp_0 = pollingcnt;
      #line 229 
      pollingcnt = (short)((int)pollingcnt - 1);
      #line 229 
      ;
      #line 229 
      if (! ((int)tmp_0 != 0)) 
                               #line 223 
                               break;
    }
    #line 230 
    if (((unsigned long)cpustatus & 8UL) == 0UL || (int)pollingcnt <= 0) {
      #line 231 
      printk((char *)"\001",(int)cpustatus);
      #line 233 
      goto status_check_fail;
    }
    #line 237 
    rtstatus = _rtl92s_firmware_enable_cpu(hw);
    #line 238 
    if (! rtstatus) {
      #line 239 
      printk((char *)"\001");
      #line 240 
      goto status_check_fail;
    }
    #line 242 
    break;
    #line 244 
    case 3: 
            #line 244 
    ;
    #line 246 
    while (1) {
      #line 252 
      short tmp_1;
      #line 247 
      cpustatus = rtl_read_byte(rtlpriv,68U);
      #line 248 
      if (((unsigned long)cpustatus & 16UL) != 0UL) 
                                                    #line 249 
                                                    break;
      #line 250 
      __const_udelay(21475UL);
      #line 252 
      tmp_1 = pollingcnt;
      #line 252 
      pollingcnt = (short)((int)pollingcnt - 1);
      #line 252 
      ;
      #line 252 
      if (! ((int)tmp_1 != 0)) 
                               #line 246 
                               break;
    }
    #line 253 
    if (((unsigned long)cpustatus & 16UL) == 0UL || (int)pollingcnt <= 0) {
      #line 254 
      printk((char *)"\001",(int)cpustatus);
      #line 256 
      goto status_check_fail;
    }
    #line 259 
    _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"DMEM code download success, cpustatus(%#x)\n",(int)cpustatus);
    #line 265 
    pollingcnt = (short)2000;
    #line 266 
    while (1) {
      #line 272 
      short tmp_2;
      #line 267 
      cpustatus = rtl_read_byte(rtlpriv,68U);
      #line 268 
      if (((unsigned long)cpustatus & 128UL) != 0UL) 
                                                     #line 269 
                                                     break;
      #line 270 
      __const_udelay(171800UL);
      #line 272 
      tmp_2 = pollingcnt;
      #line 272 
      pollingcnt = (short)((int)pollingcnt - 1);
      #line 272 
      ;
      #line 272 
      if (! ((int)tmp_2 != 0)) 
                               #line 266 
                               break;
    }
    #line 273 
    _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Polling Load Firmware ready, cpustatus(%x)\n",(int)cpustatus);
    #line 277 
    if ((unsigned int)cpustatus != 255U || (int)pollingcnt <= 0) {
      #line 279 
      printk((char *)"\001",(int)cpustatus);
      #line 281 
      goto status_check_fail;
    }
    #line 286 
    tmpu4b = rtl_read_dword(rtlpriv,68U);
    #line 287 
    rtl_write_dword(rtlpriv,68U,tmpu4b & 4294443007U);
    #line 289 
    tmpu4b = rtl_read_dword(rtlpriv,72U);
    #line 290 
    rtl_write_dword(rtlpriv,72U,tmpu4b | 2147680256U);
    #line 293 
    _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Current RCR settings(%#x)\n",tmpu4b);
    #line 297 
    rtl_write_byte(rtlpriv,67U,(unsigned char)0);
    #line 298 
    break;
    #line 300 
    default: 
             #line 300 
    ;
    #line 301 
    printk((char *)"\001");
    #line 302 
    rtstatus = (_Bool)0;
    #line 303 
    break;
  }
  #line 306 
  status_check_fail: 
                     #line 306 
  ;
  #line 307 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"loadfw_status(%d), rtstatus(%x)\n",(int)loadfw_status,(int)rtstatus);
  #line 310 
  return rtstatus;
}

#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
int rtl92s_download_fw(struct ieee80211_hw *hw)
{
  #line 318 
  struct fw_hdr *pfwheader;
  #line 315 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 316 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 317 
  struct rt_firmware *firmware = (struct rt_firmware *)0;
  #line 319 
  struct fw_priv *pfw_priv = (struct fw_priv *)0;
  #line 320 
  u8 *puc_mappedfile = (u8 *)0U;
  #line 321 
  u32 ul_filelength = 0U;
  #line 322 
  u8 fwhdr_size = (unsigned char)80U;
  #line 323 
  u8 fwstatus = (unsigned char)0U;
  #line 324 
  bool rtstatus = (_Bool)1;
  #line 326 
  if (rtlpriv->max_fw_size == 0 || rtlhal->pfirmware == (u8 *)0U) 
                                                                  #line 327 
                                                                  return 1;
  #line 329 
  firmware = (struct rt_firmware *)rtlhal->pfirmware;
  #line 330 
  firmware->fwstatus = FW_STATUS_INIT;
  #line 332 
  puc_mappedfile = (u8 *)(& firmware->sz_fw_tmpbuffer);
  #line 335 
  firmware->pfwheader = (struct fw_hdr *)puc_mappedfile;
  #line 336 
  pfwheader = firmware->pfwheader;
  #line 337 
  firmware->firmwareversion = (unsigned short)((unsigned int)pfwheader->version & 255U);
  #line 338 
  (firmware->pfwheader)->fwpriv.hci_sel = (unsigned char)1U;
  #line 340 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"signature:%x, version:%x, size:%x, imemsize:%x, sram size:%x\n",(int)pfwheader->signature,(int)pfwheader->version,pfwheader->dmem_size,pfwheader->img_imem_size,pfwheader->img_sram_size);
  #line 347 
  if (pfwheader->img_imem_size + 4294967295U > 63999U) {
    #line 349 
    printk((char *)"\001");
    #line 350 
    goto fail;
  }
  else {
    #line 352 
    puc_mappedfile += (unsigned long)fwhdr_size;
    #line 354 
    memcpy((void *)(& firmware->fw_imem),(void *)puc_mappedfile,(unsigned long)pfwheader->img_imem_size);
    #line 356 
    firmware->fw_imem_len = pfwheader->img_imem_size;
  }
  #line 360 
  if (pfwheader->img_sram_size > 64000U) {
    #line 361 
    printk((char *)"\001");
    #line 362 
    goto fail;
  }
  else {
    #line 364 
    puc_mappedfile += (unsigned long)firmware->fw_imem_len;
    #line 366 
    memcpy((void *)(& firmware->fw_emem),(void *)puc_mappedfile,(unsigned long)pfwheader->img_sram_size);
    #line 368 
    firmware->fw_emem_len = pfwheader->img_sram_size;
  }
  #line 372 
  fwstatus = (unsigned char)_rtl92s_firmware_get_nextstatus(firmware->fwstatus);
  #line 373 
  while ((unsigned int)fwstatus != 4U) {
    #line 375 
    switch ((int)fwstatus) {
      #line 376 
      case 1: 
              #line 376 
      ;
      #line 377 
      puc_mappedfile = (u8 *)(& firmware->fw_imem);
      #line 378 
      ul_filelength = firmware->fw_imem_len;
      #line 379 
      break;
      #line 380 
      case 2: 
              #line 380 
      ;
      #line 381 
      puc_mappedfile = (u8 *)(& firmware->fw_emem);
      #line 382 
      ul_filelength = firmware->fw_emem_len;
      #line 383 
      break;
      #line 384 
      case 3: 
              #line 384 
      ;
      #line 386 
      pfwheader = firmware->pfwheader;
      #line 387 
      pfw_priv = & pfwheader->fwpriv;
      #line 388 
      _rtl92s_firmwareheader_priveupdate(hw,pfw_priv);
      #line 389 
      puc_mappedfile = (u8 *)firmware->pfwheader + 32U;
      #line 391 
      ul_filelength = (unsigned int)((int)fwhdr_size + -32);
      #line 393 
      break;
      #line 394 
      default: 
               #line 394 
      ;
      #line 395 
      printk((char *)"\001");
      #line 396 
      goto fail;
    }
    #line 400 
    rtstatus = _rtl92s_firmware_downloadcode(hw,puc_mappedfile,ul_filelength);
    #line 403 
    if (! rtstatus) {
      #line 404 
      printk((char *)"\001");
      #line 405 
      goto fail;
    }
    #line 409 
    rtstatus = _rtl92s_firmware_checkready(hw,(unsigned char)((int)fwstatus));
    #line 410 
    if (! rtstatus) {
      #line 411 
      printk((char *)"\001");
      #line 412 
      goto fail;
    }
    #line 415 
    fwstatus = (unsigned char)_rtl92s_firmware_get_nextstatus(firmware->fwstatus);
  }
  #line 418 
  return (int)rtstatus;
  #line 419 
  fail: 
        #line 419 
  ;
  #line 420 
  return 0;
}

#line 423  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static u32 _rtl92s_fill_h2c_cmd(struct sk_buff *skb, u32 h2cbufferlen, u32 cmd_num, u32 *pelement_id, u32 *pcmd_len, u8 **pcmb_buffer, u8 *cmd_start_seq)
{
  #line 429 
  u8 *ph2c_buffer;
  #line 427 
  u32 totallen = 0U;
  #line 427 
  u32 len = 0U;
  #line 427 
  u32 tx_desclen = 0U;
  #line 428 
  u32 pre_continueoffset = 0U;
  #line 430 
  u8 i = (unsigned char)0U;
  #line 432 
  while (1) {
    #line 434 
    len = ((*(pcmd_len + (unsigned long)i) + 7U) & 4294967288U) + 8U;
    #line 437 
    if ((totallen + len) + tx_desclen > h2cbufferlen) 
                                                      #line 438 
                                                      break;
    #line 441 
    ph2c_buffer = (u8 *)skb_put(skb,len);
    #line 442 
    memset((void *)(ph2c_buffer + ((unsigned long)totallen + (unsigned long)tx_desclen)),0,(unsigned long)len);
    #line 445 
    le32p_replace_bits((__le32 *)(ph2c_buffer + ((unsigned long)totallen + (unsigned long)tx_desclen)),*(pcmd_len + (unsigned long)i),65535U);
    #line 450 
    le32p_replace_bits((__le32 *)(ph2c_buffer + ((unsigned long)totallen + (unsigned long)tx_desclen)),*(pelement_id + (unsigned long)i),16711680U);
    #line 455 
    *cmd_start_seq = (unsigned char)((unsigned int)*cmd_start_seq & 127U);
    #line 456 
    le32p_replace_bits((__le32 *)(ph2c_buffer + ((unsigned long)totallen + (unsigned long)tx_desclen)),(unsigned int)*cmd_start_seq,2130706432U);
    #line 459 
    *cmd_start_seq = (u8)((int)*cmd_start_seq + 1);
    #line 462 
    memcpy((void *)(ph2c_buffer + (((unsigned long)totallen + (unsigned long)tx_desclen) + (unsigned long)8U)),(void *)*(pcmb_buffer + (unsigned long)i),(unsigned long)*(pcmd_len + (unsigned long)i));
    #line 467 
    if ((unsigned int)i < cmd_num + 4294967295U) 
                                                 #line 468 
                                                 le32p_replace_bits((__le32 *)(ph2c_buffer + (unsigned long)pre_continueoffset),1U,2147483648U);
    #line 472 
    pre_continueoffset = totallen;
    #line 474 
    totallen += len;
    #line 475 
    i = (u8)((int)i + 1);
    #line 475 
    ;
    #line 475 
    if (! ((unsigned int)i < cmd_num)) 
                                       #line 432 
                                       break;
  }
  #line 477 
  return totallen;
}

#line 480  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static u32 _rtl92s_get_h2c_cmdlen(u32 h2cbufferlen, u32 cmd_num, u32 *pcmd_len)
{
  #line 482 
  u32 totallen = 0U;
  #line 482 
  u32 len = 0U;
  #line 482 
  u32 tx_desclen = 0U;
  #line 483 
  u8 i = (unsigned char)0U;
  #line 485 
  while (1) {
    #line 487 
    len = ((*(pcmd_len + (unsigned long)i) + 7U) & 4294967288U) + 8U;
    #line 490 
    if ((totallen + len) + tx_desclen > h2cbufferlen) 
                                                      #line 491 
                                                      break;
    #line 493 
    totallen += len;
    #line 494 
    i = (u8)((int)i + 1);
    #line 494 
    ;
    #line 494 
    if (! ((unsigned int)i < cmd_num)) 
                                       #line 485 
                                       break;
  }
  #line 496 
  return totallen + tx_desclen;
}

#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
static bool _rtl92s_firmware_set_h2c_cmd(struct ieee80211_hw *hw, u8 h2c_cmd, u8 *pcmd_buffer)
{
  #line 504 
  struct rtl_tcb_desc *cb_desc;
  #line 505 
  struct sk_buff *skb;
  #line 508 
  u32 len;
  #line 502 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 503 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 506 
  u32 element_id = 0U;
  #line 507 
  u32 cmd_len = 0U;
  #line 510 
  switch ((int)h2c_cmd) {
    #line 511 
    case 0: 
            #line 511 
    ;
    #line 512 
    element_id = 36U;
    #line 513 
    cmd_len = 14U;
    #line 514 
    break;
    #line 515 
    case 1: 
            #line 515 
    ;
    #line 516 
    element_id = 37U;
    #line 517 
    cmd_len = 12U;
    #line 518 
    break;
    #line 519 
    case 2: 
            #line 519 
    ;
    #line 520 
    element_id = 46U;
    #line 521 
    cmd_len = 66U;
    #line 522 
    break;
    #line 523 
    case 3: 
            #line 523 
    ;
    #line 524 
    element_id = 50U;
    #line 525 
    cmd_len = 8U;
    #line 526 
    break;
    #line 527 
    case 4: 
            #line 527 
    ;
    #line 528 
    element_id = 47U;
    #line 529 
    cmd_len = 1U;
    #line 530 
    break;
    #line 531 
    default: 
             #line 531 
    ;
    #line 532 
    break;
  }
  #line 535 
  len = _rtl92s_get_h2c_cmdlen(3200U,1U,& cmd_len);
  #line 536 
  skb = dev_alloc_skb(len);
  #line 537 
  if (skb == (struct sk_buff *)0) 
                                  #line 538 
                                  return (_Bool)0;
  #line 539 
  cb_desc = (struct rtl_tcb_desc *)(& skb->cb);
  #line 540 
  cb_desc->queue_index = (unsigned char)5U;
  #line 541 
  cb_desc->cmd_or_init = (unsigned char)1U;
  #line 542 
  cb_desc->last_inipkt = (unsigned char)0U;
  #line 544 
  _rtl92s_fill_h2c_cmd(skb,3200U,1U,& element_id,& cmd_len,& pcmd_buffer,& rtlhal->h2c_txcmd_seq);
  #line 546 
  _rtl92s_cmd_send_packet(hw,skb,(unsigned char)0);
  #line 547 
  (*(((rtlpriv->cfg)->ops)->tx_polling))(hw,(unsigned char)5);
  #line 549 
  return (_Bool)1;
}

#line 552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
void rtl92s_set_fw_pwrmode_cmd(struct ieee80211_hw *hw, u8 mode)
{
  #line 556 
  struct h2c_set_pwrmode_parm pwrmode;
  #line 554 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 555 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 557 
  u16 max_wakeup_period = (unsigned short)0U;
  #line 559 
  pwrmode.mode = mode;
  #line 560 
  pwrmode.flag_low_traffic_en = (unsigned char)0U;
  #line 561 
  pwrmode.flag_lpnav_en = (unsigned char)0U;
  #line 562 
  pwrmode.flag_rf_low_snr_en = (unsigned char)0U;
  #line 563 
  pwrmode.flag_dps_en = (unsigned char)0U;
  #line 564 
  pwrmode.bcn_rx_en = (unsigned char)0U;
  #line 565 
  pwrmode.bcn_to = (unsigned char)0U;
  #line 566 
  le16p_replace_bits((__le16 *)((u8 *)(& pwrmode) + 8U),(unsigned short)((int)(mac->vif)->bss_conf.beacon_int),(unsigned short)65535);
  #line 568 
  pwrmode.app_itv = (unsigned char)0U;
  #line 569 
  pwrmode.awake_bcn_itvl = ppsc->reg_max_lps_awakeintvl;
  #line 570 
  pwrmode.smart_ps = (unsigned char)1U;
  #line 571 
  pwrmode.bcn_pass_period = (unsigned char)10U;
  #line 574 
  if ((unsigned int)pwrmode.mode == 1U) 
                                        #line 575 
                                        max_wakeup_period = (mac->vif)->bss_conf.beacon_int;
  else 
    #line 576 
    if ((unsigned int)pwrmode.mode == 2U) 
                                          #line 577 
                                          max_wakeup_period = (unsigned short)((int)(mac->vif)->bss_conf.beacon_int * (int)((unsigned short)(mac->vif)->bss_conf.dtim_period));
  #line 580 
  if ((unsigned int)max_wakeup_period > 499U) 
                                              #line 581 
                                              pwrmode.bcn_pass_cnt = (unsigned char)1U;
  else 
    #line 582 
    if ((unsigned int)max_wakeup_period + 65236U <= 199U) 
                                                          #line 583 
                                                          pwrmode.bcn_pass_cnt = (unsigned char)2U;
    else 
      #line 584 
      if ((unsigned int)max_wakeup_period + 65336U <= 99U) 
                                                           #line 585 
                                                           pwrmode.bcn_pass_cnt = (unsigned char)3U;
      else 
        #line 586 
        if ((unsigned int)max_wakeup_period + 65516U <= 179U) 
                                                              #line 587 
                                                              pwrmode.bcn_pass_cnt = (unsigned char)5U; else 
                                                                    #line 589 
                                                                    pwrmode.bcn_pass_cnt = (unsigned char)1U;
  #line 591 
  _rtl92s_firmware_set_h2c_cmd(hw,(unsigned char)0,(u8 *)(& pwrmode));
  #line 592 
  return;
}

#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/fw.c"
void rtl92s_set_fw_joinbss_report_cmd(struct ieee80211_hw *hw, u8 mstatus, u8 ps_qosinfo)
{
  #line 599 
  struct h2c_joinbss_rpt_parm joinbss_rpt;
  #line 598 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 601 
  joinbss_rpt.opmode = mstatus;
  #line 602 
  joinbss_rpt.ps_qos_info = ps_qosinfo;
  #line 603 
  joinbss_rpt.bssid[0] = mac->bssid[0];
  #line 604 
  joinbss_rpt.bssid[1] = mac->bssid[1];
  #line 605 
  joinbss_rpt.bssid[2] = mac->bssid[2];
  #line 606 
  joinbss_rpt.bssid[3] = mac->bssid[3];
  #line 607 
  joinbss_rpt.bssid[4] = mac->bssid[4];
  #line 608 
  joinbss_rpt.bssid[5] = mac->bssid[5];
  #line 609 
  le16p_replace_bits((__le16 *)((u8 *)(& joinbss_rpt) + 8U),(unsigned short)((int)(mac->vif)->bss_conf.beacon_int),(unsigned short)65535);
  #line 611 
  le16p_replace_bits((__le16 *)((u8 *)(& joinbss_rpt) + 10U),(unsigned short)((int)mac->assoc_id),(unsigned short)65535);
  #line 614 
  _rtl92s_firmware_set_h2c_cmd(hw,(unsigned char)1,(u8 *)(& joinbss_rpt));
  #line 615 
  return;
}

#line 782  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/fw.i.aux"
static void cif___ldv_spin_lock_irq_th_lock_of_rtl_locks(spinlock_t *lock)
{
  #line 785 
  ldv_spin_model_lock((char *)"irq_th_lock_of_rtl_locks");
  #line 787 
  __ldv_spin_lock(lock);
  #line 788 
  return;
}

#line 791  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/fw.i.aux"
static void cif_spin_unlock_irqrestore_irq_th_lock_of_rtl_locks(spinlock_t *lock, unsigned long flags)
{
  #line 794 
  ldv_spin_model_unlock((char *)"irq_th_lock_of_rtl_locks");
  #line 796 
  spin_unlock_irqrestore(lock,flags);
  #line 797 
  return;
}

#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
#line 334 
extern struct paravirt_patch_template pv_ops;
#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  #line 747 
  unsigned long __ret;
  {
    #line 747 
    unsigned long __edi = __edi;
    #line 747 
    unsigned long __esi = __esi;
    #line 747 
    unsigned long __edx = __edx;
    #line 747 
    unsigned long __ecx = __ecx;
    #line 747 
    unsigned long __eax = __eax;
    #line 747 
    if ((long)(pv_ops.irq.save_fl.func == (void *)0) != 0L) {
      #line 748 
      ldv_inline_asm();
      #line 749 
      ldv_inline_asm();
      #line 750 
      ldv_inline_asm();
      #line 747 
      ;
    }
    {
      #line 747 
      unsigned long __mask;
      #line 751 
      ldv_inline_asm();
      #line 747 
      __mask = 18446744073709551615UL;
      #line 747 
      switch (8UL) {
        #line 747 
        case (unsigned long)1: 
                               #line 747 
        ;
        #line 747 
        __mask = 255UL;
        #line 747 
        break;
        #line 747 
        case (unsigned long)2: 
                               #line 747 
        ;
        #line 747 
        __mask = 65535UL;
        #line 747 
        break;
        #line 747 
        case (unsigned long)4: 
                               #line 747 
        ;
        #line 747 
        __mask = 4294967295UL;
        #line 747 
        break;
        #line 747 
        default: 
                 #line 747 
        ;
        #line 747 
        break;
      }
      #line 747 
      __ret = __mask & __eax;
    }
    }
  #line 747 
  return __ret;
}

#line 750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f)
{
  #line 752 
  unsigned long __edi = __edi;
  #line 752 
  unsigned long __esi = __esi;
  #line 752 
  unsigned long __edx = __edx;
  #line 752 
  unsigned long __ecx = __ecx;
  #line 752 
  unsigned long __eax = __eax;
  #line 752 
  if ((long)(pv_ops.irq.restore_fl.func == (void *)0) != 0L) {
    #line 753 
    ldv_inline_asm();
    #line 754 
    ldv_inline_asm();
    #line 755 
    ldv_inline_asm();
    #line 752 
    ;
  }
  #line 756 
  ldv_inline_asm();
  #line 758 
  return;
}

#line 760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_enable(void)
{
  #line 762 
  unsigned long __edi = __edi;
  #line 762 
  unsigned long __esi = __esi;
  #line 762 
  unsigned long __edx = __edx;
  #line 762 
  unsigned long __ecx = __ecx;
  #line 762 
  unsigned long __eax = __eax;
  #line 762 
  if ((long)(pv_ops.irq.irq_enable.func == (void *)0) != 0L) {
    #line 763 
    ldv_inline_asm();
    #line 764 
    ldv_inline_asm();
    #line 765 
    ldv_inline_asm();
    #line 762 
    ;
  }
  #line 766 
  ldv_inline_asm();
  #line 768 
  return;
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  #line 164 
  return (flags & 512UL) == 0UL;
}

#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqflags.h"
#line 32 
void trace_hardirqs_on(void);
#line 33 
#line 33 
void trace_hardirqs_off(void);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 791  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/hw.i.aux"
static void cif_spin_unlock_irqrestore_rf_ps_lock_of_rtl_locks(spinlock_t *lock, unsigned long flags);
#line 35 
#line 782 
static void cif___ldv_spin_lock_rf_ps_lock_of_rtl_locks(spinlock_t *lock);
#line 1714  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1714 
void _dev_warn(struct device *, char * , ...);
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/debug.h"
#line 156 
void _rtl_dbg_print(struct rtl_priv *, u64, int, char * , ...);
#line 159 
#line 159 
void _rtl_dbg_print_data(struct rtl_priv *, u64, int, char *, void *, int);
#line 3193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static u8 get_rf_type(struct rtl_phy *rtlphy)
{
  #line 3195 
  return rtlphy->rf_type;
}

#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/efuse.h"
#line 76 
u8 efuse_read_1byte(struct ieee80211_hw *, u16);
#line 87 
#line 87 
void rtl_efuse_shadow_map_update(struct ieee80211_hw *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/cam.h"
#line 16 
void rtl_cam_reset_all_entry(struct ieee80211_hw *);
#line 17 
#line 17 
u8 rtl_cam_add_one_entry(struct ieee80211_hw *, u8 *, u32, u32, u32, u32, u8 *);
#line 20 
#line 20 
int rtl_cam_delete_one_entry(struct ieee80211_hw *, u8 *, u32);
#line 22 
#line 22 
void rtl_cam_mark_invalid(struct ieee80211_hw *, u8);
#line 23 
#line 23 
void rtl_cam_empty_entry(struct ieee80211_hw *, u8);
#line 25 
#line 25 
u8 rtl_cam_get_free_entry(struct ieee80211_hw *, u8 *);
#line 26 
#line 26 
void rtl_cam_del_entry(struct ieee80211_hw *, u8 *);
#line 1085  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 1085 
int pci_read_config_dword(struct pci_dev *, int, u32 *);
#line 1088 
#line 1088 
int pci_write_config_dword(struct pci_dev *, int, u32);
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.h"
#line 64 
void rtl92s_dm_init(struct ieee80211_hw *hw);
#line 65 
#line 65 
void rtl92s_dm_init_edca_turbo(struct ieee80211_hw *hw);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_get_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1981  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_read_eeprom_info(struct ieee80211_hw *hw);
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_interrupt_recognized(struct ieee80211_hw *hw, struct rtl_int *intvec);
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
int rtl92se_hw_init(struct ieee80211_hw *hw);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_card_disable(struct ieee80211_hw *hw);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_enable_interrupt(struct ieee80211_hw *hw);
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_disable_interrupt(struct ieee80211_hw *hw);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
int rtl92se_set_network_type(struct ieee80211_hw *hw, enum nl80211_iftype type);
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_check_bssid(struct ieee80211_hw *hw, bool check_bssid);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_mac_addr(struct rtl_io *io, u8 *addr);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_qos(struct ieee80211_hw *hw, int aci);
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_beacon_related_registers(struct ieee80211_hw *hw);
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1591  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_beacon_interval(struct ieee80211_hw *hw);
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 1603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_update_interrupt_mask(struct ieee80211_hw *hw, u32 add_msr, u32 rm_msr);
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val);
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 2268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_update_hal_rate_tbl(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 rssi_level, bool update_bw);
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 2279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_update_channel_access_setting(struct ieee80211_hw *hw);
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 2295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
bool rtl92se_gpio_radio_on_off_checking(struct ieee80211_hw *hw, u8 *valid);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_enable_hw_security_config(struct ieee80211_hw *hw);
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 2381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_key(struct ieee80211_hw *hw, u32 key_index, u8 *p_macaddr, bool is_group, u8 enc_algo, bool is_wepkey, bool clear_all);
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 2506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_suspend(struct ieee80211_hw *hw);
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.h"
#line 2513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_resume(struct ieee80211_hw *hw);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_get_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val)
{
  #line 21 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 22 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 23 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 25 
  switch ((int)variable) {
    #line 26 
    case 44: 
             #line 26 
    ;
    #line 27 
    *((u32 *)val) = rtlpci->receive_config;
    #line 28 
    break;
    #line 30 
    case 40: 
             #line 30 
    ;
    #line 31 
    *((enum rf_pwrstate *)val) = ppsc->rfpwr_state;
    #line 32 
    break;
    #line 34 
    case 65: 
             #line 34 
    ;
    #line 35 
    *((bool *)val) = ppsc->fw_current_inpsmode;
    #line 36 
    break;
    #line 38 
    case 84: 
             #line 38 
    ;
    {
      #line 39 
      u64 tsf;
      #line 40 
      u32 *ptsf_low = (u32 *)(& tsf);
      #line 41 
      u32 *ptsf_high = (u32 *)(& tsf) + 1U;
      #line 43 
      *ptsf_high = rtl_read_dword(rtlpriv,132U);
      #line 44 
      *ptsf_low = rtl_read_dword(rtlpriv,128U);
      #line 46 
      *((u64 *)val) = tsf;
      #line 48 
      break;
    }
    #line 50 
    case 93: 
             #line 50 
    ;
    #line 51 
    *((bool *)val) = rtlpriv->dm.current_mrc_switch;
    #line 52 
    break;
    #line 54 
    case 92: 
             #line 54 
    ;
    #line 55 
    break;
    #line 56 
    default: 
             #line 56 
    ;
    #line 57 
    printk((char *)"\001",(int)variable);
    #line 58 
    break;
  }
  #line 60 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_hw_reg(struct ieee80211_hw *hw, u8 variable, u8 *val)
{
  #line 64 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 65 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 66 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 67 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 68 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 69 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 71 
  switch ((int)variable) {
    #line 72 
    case 0: 
            #line 72 
    ;
    #line 73 
    rtl_write_dword(rtlpriv,80U,*((u32 *)val));
    #line 74 
    rtl_write_word(rtlpriv,84U,(unsigned short)((int)*((u16 *)(val + 4U))));
    #line 75 
    break;
    #line 77 
    case 2: 
            #line 77 
    ;
    {
      #line 78 
      u16 rate_cfg = *((u16 *)val);
      #line 79 
      u8 rate_index = (unsigned char)0U;
      #line 81 
      if (rtlhal->version == 0U) 
                                 #line 82 
                                 rate_cfg = (unsigned short)((unsigned int)rate_cfg & 336U); else 
                                                                    #line 84 
                                                                    rate_cfg = (unsigned short)((unsigned int)rate_cfg & 351U);
      #line 86 
      rate_cfg = (unsigned short)((unsigned int)rate_cfg | 1U);
      #line 88 
      rtl_write_byte(rtlpriv,385U,(unsigned char)((int)((unsigned char)rate_cfg)));
      #line 89 
      rtl_write_byte(rtlpriv,386U,(unsigned char)((int)((unsigned char)((int)rate_cfg >> 8))));
      #line 92 
      while ((unsigned int)rate_cfg > 1U) {
        #line 93 
        rate_cfg = (unsigned short)((int)rate_cfg >> 1);
        #line 94 
        rate_index = (u8)((int)rate_index + 1);
      }
      #line 96 
      rtl_write_byte(rtlpriv,384U,(unsigned char)((int)rate_index));
      #line 98 
      break;
    }
    #line 100 
    case 3: 
            #line 100 
    ;
    #line 101 
    rtl_write_dword(rtlpriv,88U,*((u32 *)val));
    #line 102 
    rtl_write_word(rtlpriv,92U,(unsigned short)((int)*((u16 *)(val + 4U))));
    #line 104 
    break;
    #line 106 
    case 14: 
             #line 106 
    ;
    #line 107 
    rtl_write_byte(rtlpriv,142U,(unsigned char)((int)*val));
    #line 108 
    rtl_write_byte(rtlpriv,143U,(unsigned char)((int)*(val + 1U)));
    #line 109 
    break;
    #line 111 
    case 18: 
             #line 111 
    ;
    {
      #line 112 
      u8 e_aci;
      #line 114 
      _rtl_dbg_trace(rtlpriv,32ULL,4,(char *)"HW_VAR_SLOT_TIME %x\n",(int)*val);
      #line 117 
      rtl_write_byte(rtlpriv,137U,(unsigned char)((int)*val));
      #line 119 
      e_aci = (unsigned char)0U;
      #line 119 
      while ((unsigned int)e_aci <= 3U) {
        #line 120 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)32,& e_aci);
        #line 119 
        e_aci = (u8)((int)e_aci + 1);
      }
      #line 124 
      break;
    }
    #line 126 
    case 19: 
             #line 126 
    ;
    {
      #line 127 
      u8 reg_tmp;
      #line 128 
      u8 short_preamble = (unsigned char)((unsigned int)*val != 0U);
      #line 129 
      reg_tmp = (unsigned char)((int)mac->cur_40_prime_sc << 5U);
      #line 130 
      if ((unsigned int)short_preamble != 0U) 
                                              #line 131 
                                              reg_tmp = (unsigned char)((unsigned int)reg_tmp | 128U);
      #line 133 
      rtl_write_byte(rtlpriv,387U,(unsigned char)((int)reg_tmp));
      #line 134 
      break;
    }
    #line 136 
    case 28: 
             #line 136 
    ;
    {
      #line 137 
      u8 min_spacing_to_set;
      #line 138 
      u8 sec_min_space;
      #line 140 
      min_spacing_to_set = *val;
      #line 141 
      if ((unsigned int)min_spacing_to_set <= 7U) {
        #line 142 
        if (rtlpriv->sec.pairwise_enc_algorithm == (unsigned int)NO_ENCRYPTION) 
          #line 144 
          sec_min_space = (unsigned char)0U; else 
                                                  #line 146 
                                                  sec_min_space = (unsigned char)1U;
        #line 148 
        if ((int)min_spacing_to_set < (int)sec_min_space) 
                                                          #line 149 
                                                          min_spacing_to_set = sec_min_space;
        #line 150 
        if ((unsigned int)min_spacing_to_set > 5U) 
                                                   #line 151 
                                                   min_spacing_to_set = (unsigned char)5U;
        #line 153 
        mac->min_space_cfg = (unsigned char)(((int)mac->min_space_cfg & -8) | (int)min_spacing_to_set);
        #line 157 
        *val = min_spacing_to_set;
        #line 159 
        _rtl_dbg_trace(rtlpriv,32ULL,4,(char *)"Set HW_VAR_AMPDU_MIN_SPACE: %#x\n",(int)mac->min_space_cfg);
        #line 163 
        rtl_write_byte(rtlpriv,567U,(unsigned char)((int)mac->min_space_cfg));
      }
      #line 166 
      break;
    }
    #line 168 
    case 29: 
             #line 168 
    ;
    {
      #line 169 
      u8 density_to_set;
      #line 171 
      density_to_set = *val;
      #line 172 
      mac->min_space_cfg = rtlpriv->rtlhal.minspace_cfg;
      #line 173 
      mac->min_space_cfg = (unsigned char)((int)mac->min_space_cfg | ((int)density_to_set << 3));
      #line 175 
      _rtl_dbg_trace(rtlpriv,32ULL,4,(char *)"Set HW_VAR_SHORTGI_DENSITY: %#x\n",(int)mac->min_space_cfg);
      #line 179 
      rtl_write_byte(rtlpriv,567U,(unsigned char)((int)mac->min_space_cfg));
      #line 182 
      break;
    }
    #line 184 
    case 30: 
             #line 184 
    ;
    {
      #line 185 
      u8 factor_toset;
      #line 186 
      u8 regtoset;
      #line 187 
      u8 factorlevel[18U] = {(unsigned char)2U, (unsigned char)4U, (unsigned char)4U, (unsigned char)7U, (unsigned char)7U, (unsigned char)13U, (unsigned char)13U, (unsigned char)13U, (unsigned char)2U, (unsigned char)7U, (unsigned char)7U, (unsigned char)13U, (unsigned char)13U, (unsigned char)15U, (unsigned char)15U, (unsigned char)15U, (unsigned char)15U, (unsigned char)0U};
      #line 191 
      u8 index = (unsigned char)0U;
      #line 193 
      factor_toset = *val;
      #line 194 
      if ((unsigned int)factor_toset <= 3U) {
        #line 195 
        factor_toset = (unsigned char)(1 << ((int)factor_toset + 2));
        #line 196 
        if ((unsigned int)factor_toset > 15U) 
                                              #line 197 
                                              factor_toset = (unsigned char)15U;
        #line 199 
        index = (unsigned char)0U;
        #line 199 
        while ((unsigned int)index <= 16U) {
          #line 200 
          if ((int)factorlevel[(int)index] > (int)factor_toset) 
                                                                #line 201 
                                                                factorlevel[(int)index] = factor_toset;
          #line 199 
          index = (u8)((int)index + 1);
        }
        #line 205 
        index = (unsigned char)0U;
        #line 205 
        while ((unsigned int)index <= 7U) {
          #line 206 
          regtoset = (unsigned char)((int)factorlevel[(int)index * 2] | ((int)factorlevel[(int)index * 2 + 1] << 4));
          #line 209 
          rtl_write_byte(rtlpriv,(unsigned int)((int)index + 424),(unsigned char)((int)regtoset));
          #line 205 
          index = (u8)((int)index + 1);
        }
        #line 214 
        regtoset = (unsigned char)((int)factorlevel[16] | ((int)factorlevel[17] << 4));
        #line 216 
        rtl_write_byte(rtlpriv,423U,(unsigned char)((int)regtoset));
        #line 218 
        _rtl_dbg_trace(rtlpriv,32ULL,4,(char *)"Set HW_VAR_AMPDU_FACTOR: %#x\n",(int)factor_toset);
      }
      #line 222 
      break;
    }
    #line 224 
    case 32: 
             #line 224 
    ;
    {
      #line 225 
      u8 e_aci_0 = *val;
      #line 226 
      rtl92s_dm_init_edca_turbo(hw);
      #line 228 
      if (rtlpci->acm_method != (unsigned int)EACMWAY2_SW) 
                                                           #line 229 
                                                           (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)33,& e_aci_0);
      #line 232 
      break;
    }
    #line 234 
    case 33: 
             #line 234 
    ;
    {
      #line 235 
      u8 e_aci_1 = *val;
      #line 236 
      union aci_aifsn *p_aci_aifsn = (union aci_aifsn *)(& mac->ac[0].aifs);
      #line 238 
      u8 acm = (unsigned char)p_aci_aifsn->f.acm;
      #line 239 
      u8 acm_ctrl = rtl_read_byte(rtlpriv,487U);
      #line 241 
      acm_ctrl = (unsigned char)((rtlpci->acm_method != (unsigned int)EACMWAY2_SW) | (int)acm_ctrl);
      #line 244 
      if ((unsigned int)acm != 0U) 
        #line 245 
        switch ((int)e_aci_1) {
          #line 246 
          case 0: 
                  #line 246 
          ;
          #line 247 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl | 2U);
          #line 248 
          break;
          #line 249 
          case 2: 
                  #line 249 
          ;
          #line 250 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl | 4U);
          #line 251 
          break;
          #line 252 
          case 3: 
                  #line 252 
          ;
          #line 253 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl | 8U);
          #line 254 
          break;
          #line 255 
          default: 
                   #line 255 
          ;
          #line 256 
          _rtl_dbg_trace(rtlpriv,1ULL,2,(char *)"HW_VAR_ACM_CTRL acm set failed: eACI is %d\n",(int)acm);
          #line 259 
          break;
        }
      else 
        #line 262 
        switch ((int)e_aci_1) {
          #line 263 
          case 0: 
                  #line 263 
          ;
          #line 264 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl & 253U);
          #line 265 
          break;
          #line 266 
          case 2: 
                  #line 266 
          ;
          #line 267 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl & 251U);
          #line 268 
          break;
          #line 269 
          case 3: 
                  #line 269 
          ;
          #line 270 
          acm_ctrl = (unsigned char)((unsigned int)acm_ctrl & 247U);
          #line 271 
          break;
          #line 272 
          default: 
                   #line 272 
          ;
          #line 273 
          printk((char *)"\001",(int)e_aci_1);
          #line 275 
          break;
        }
      #line 279 
      _rtl_dbg_trace(rtlpriv,33554432ULL,5,(char *)"HW_VAR_ACM_CTRL Write 0x%X\n",(int)acm_ctrl);
      #line 281 
      rtl_write_byte(rtlpriv,487U,(unsigned char)((int)acm_ctrl));
      #line 282 
      break;
    }
    #line 284 
    case 44: 
             #line 284 
    ;
    #line 285 
    rtl_write_dword(rtlpriv,72U,*((u32 *)val));
    #line 286 
    rtlpci->receive_config = *((u32 *)val);
    #line 287 
    break;
    #line 289 
    case 53: 
             #line 289 
    ;
    {
      #line 290 
      u8 retry_limit = *val;
      #line 292 
      rtl_write_word(rtlpriv,500U,(unsigned short)((int)((unsigned short)(((int)retry_limit << 8) | (int)retry_limit))));
      #line 295 
      break;
    }
    #line 297 
    case 87: 
             #line 297 
    ;
    #line 298 
    break;
    #line 300 
    case 57: 
             #line 300 
    ;
    #line 301 
    rtlefuse->efuse_usedbytes = *((u16 *)val);
    #line 302 
    break;
    #line 304 
    case 56: 
             #line 304 
    ;
    #line 305 
    rtlefuse->efuse_usedpercentage = *val;
    #line 306 
    break;
    #line 308 
    case 72: 
             #line 308 
    ;
    #line 309 
    break;
    #line 311 
    case 27: 
             #line 311 
    ;
    #line 312 
    rtl_write_byte(rtlpriv,592U,(unsigned char)((int)*val));
    #line 313 
    break;
    #line 315 
    case 60: 
             #line 315 
    ;
    #line 316 
    break;
    #line 318 
    case 61: 
             #line 318 
    ;
    #line 319 
    break;
    #line 321 
    case 65: 
             #line 321 
    ;
    #line 322 
    ppsc->fw_current_inpsmode = *((bool *)val);
    #line 323 
    break;
    #line 325 
    case 62: 
             #line 325 
    ;
    #line 326 
    break;
    #line 328 
    case 82: 
             #line 328 
    ;
    #line 329 
    break;
    #line 331 
    case 84: 
             #line 331 
    ;
    #line 332 
    break;
    #line 334 
    case 93: 
             #line 334 
    ;
    {
      #line 335 
      bool bmrc_toset = *((bool *)val);
      #line 336 
      u8 u1bdata = (unsigned char)0U;
      #line 338 
      if ((int)bmrc_toset != 0) {
        #line 339 
        rtl_set_bbreg(hw,3076U,255U,51U);
        #line 341 
        u1bdata = (unsigned char)rtl_get_bbreg(hw,3332U,255U);
        #line 344 
        rtl_set_bbreg(hw,3332U,255U,(unsigned int)(((int)u1bdata & 240) | 3));
        #line 347 
        u1bdata = (unsigned char)rtl_get_bbreg(hw,3076U,65280U);
        #line 350 
        rtl_set_bbreg(hw,3076U,65280U,(unsigned int)u1bdata | 4U);
        #line 355 
        rtlpriv->dm.current_mrc_switch = bmrc_toset;
      }
      else {
        #line 357 
        rtl_set_bbreg(hw,3076U,255U,19U);
        #line 359 
        u1bdata = (unsigned char)rtl_get_bbreg(hw,3332U,255U);
        #line 362 
        rtl_set_bbreg(hw,3332U,255U,(unsigned int)(((int)u1bdata & 240) | 1));
        #line 365 
        u1bdata = (unsigned char)rtl_get_bbreg(hw,3076U,65280U);
        #line 368 
        rtl_set_bbreg(hw,3076U,65280U,(unsigned int)u1bdata & 251U);
        #line 372 
        rtlpriv->dm.current_mrc_switch = bmrc_toset;
      }
      #line 375 
      break;
    }
    #line 377 
    case 68: 
             #line 377 
    ;
    {
      #line 379 
      u8 rpwm_val;
      #line 379 
      u8 fw_pwrmode;
      #line 380 
      bool fw_current_inps;
      #line 378 
      bool enter_fwlps = *((bool *)val);
      #line 382 
      if ((int)enter_fwlps != 0) {
        #line 383 
        rpwm_val = (unsigned char)2U;
        #line 384 
        fw_current_inps = (_Bool)1;
        #line 385 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inps));
        #line 388 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)61,& ppsc->fwctrl_psmode);
        #line 392 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)60,& rpwm_val);
      }
      else {
        #line 395 
        rpwm_val = (unsigned char)12U;
        #line 396 
        fw_pwrmode = (unsigned char)0U;
        #line 397 
        fw_current_inps = (_Bool)0;
        #line 398 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)60,& rpwm_val);
        #line 400 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)61,& fw_pwrmode);
        #line 403 
        (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)65,(u8 *)(& fw_current_inps));
      }
      #line 407 
      break;
    }
    #line 408 
    default: 
             #line 408 
    ;
    #line 409 
    printk((char *)"\001",(int)variable);
    #line 410 
    break;
  }
  #line 412 
  return;
}

#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_enable_hw_security_config(struct ieee80211_hw *hw)
{
  #line 417 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 418 
  u8 sec_reg_value = (unsigned char)0U;
  #line 420 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"PairwiseEncAlgorithm = %d GroupEncAlgorithm = %d\n",(unsigned int)rtlpriv->sec.pairwise_enc_algorithm,(unsigned int)rtlpriv->sec.group_enc_algorithm);
  #line 425 
  if ((int)((rtlpriv->cfg)->mod_params)->sw_crypto != 0 || (int)rtlpriv->sec.use_sw_sec != 0) {
    #line 426 
    _rtl_dbg_trace(rtlpriv,512ULL,3,(char *)"not open hw encryption\n");
    #line 428 
    return;
  }
  #line 431 
  sec_reg_value = (unsigned char)12U;
  #line 433 
  if ((int)rtlpriv->sec.use_defaultkey != 0) {
    #line 434 
    sec_reg_value = (unsigned char)((unsigned int)sec_reg_value | 1U);
    #line 435 
    sec_reg_value = (unsigned char)((unsigned int)sec_reg_value | 2U);
  }
  #line 438 
  _rtl_dbg_trace(rtlpriv,512ULL,4,(char *)"The SECR-value %x\n",(int)sec_reg_value);
  #line 441 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)27,& sec_reg_value);
  #line 442 
  return;
}

#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static u8 _rtl92se_halset_sysclk(struct ieee80211_hw *hw, u8 data)
{
  #line 450 
  u8 tmpvalue;
  #line 447 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 448 
  u8 waitcount = (unsigned char)100U;
  #line 449 
  bool bresult = (_Bool)0;
  #line 452 
  rtl_write_byte(rtlpriv,9U,(unsigned char)((int)data));
  #line 455 
  __const_udelay(1718000UL);
  #line 458 
  tmpvalue = rtl_read_byte(rtlpriv,9U);
  #line 459 
  bresult = (_Bool)(((unsigned long)((int)tmpvalue ^ (int)data) & 128UL) == 0UL);
  #line 461 
  if (((unsigned long)data & 192UL) == 0UL) {
    #line 462 
    waitcount = (unsigned char)100U;
    #line 463 
    tmpvalue = (unsigned char)0U;
    #line 465 
    while (1) {
      #line 466 
      waitcount = (u8)((int)waitcount - 1);
      #line 468 
      tmpvalue = rtl_read_byte(rtlpriv,9U);
      #line 469 
      if (((unsigned long)tmpvalue & 64UL) != 0UL) 
                                                   #line 470 
                                                   break;
      #line 472 
      printk((char *)"\001",(int)tmpvalue);
      #line 473 
      if ((unsigned int)waitcount == 0U) 
                                         #line 474 
                                         break;
      #line 476 
      __const_udelay(42950UL);
    }
    #line 479 
    if ((unsigned int)waitcount == 0U) 
                                       #line 480 
                                       bresult = (_Bool)0; else 
                                                                #line 482 
                                                                bresult = (_Bool)1;
  }
  #line 485 
  return (unsigned char)bresult;
}

#line 488  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl8192se_gpiobit3_cfg_inputmode(struct ieee80211_hw *hw)
{
  #line 491 
  u8 u1tmp;
  #line 490 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 494 
  rtl_write_byte(rtlpriv,753U,(unsigned char)8);
  #line 495 
  u1tmp = rtl_read_byte(rtlpriv,750U);
  #line 498 
  u1tmp = (unsigned char)((unsigned int)u1tmp & 247U);
  #line 499 
  rtl_write_byte(rtlpriv,750U,(unsigned char)((int)u1tmp));
  #line 500 
  return;
}

#line 503  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static u8 _rtl92se_rf_onoff_detect(struct ieee80211_hw *hw)
{
  #line 506 
  u8 u1tmp;
  #line 505 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 507 
  u8 retval = (unsigned char)0U;
  #line 510 
  rtl_write_byte(rtlpriv,753U,(unsigned char)8);
  #line 511 
  u1tmp = rtl_read_byte(rtlpriv,750U);
  #line 514 
  u1tmp = (unsigned char)((unsigned int)u1tmp & 247U);
  #line 515 
  rtl_write_byte(rtlpriv,750U,(unsigned char)((int)u1tmp));
  {
    #line 519 
    unsigned long __ms = 10UL;
    #line 519 
    while (1) {
      #line 519 
      unsigned long tmp;
      #line 519 
      tmp = __ms;
      #line 519 
      __ms --;
      #line 519 
      ;
      #line 519 
      if (! (tmp != 0UL)) 
                          #line 519 
                          break;
      #line 519 
      __const_udelay(4295000UL);
    }
  }
  #line 522 
  u1tmp = rtl_read_byte(rtlpriv,748U);
  #line 523 
  if (((unsigned long)u1tmp & 8UL) != 0UL) 
                                           #line 523 
                                           retval = (unsigned char)0U; else 
                                                                    #line 523 
                                                                    retval = (unsigned char)2U;
  #line 525 
  return retval;
}

#line 528  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92se_macconfig_before_fwdownload(struct ieee80211_hw *hw)
{
  #line 534 
  u8 i;
  #line 535 
  u8 tmpu1b;
  #line 536 
  u16 tmpu2b;
  #line 530 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 531 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 532 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 537 
  u8 pollingcnt = (unsigned char)20U;
  #line 539 
  if ((int)rtlpci->first_init != 0) {
    #line 541 
    tmpu1b = rtl_read_byte(rtlpriv,3U);
    #line 542 
    tmpu1b = (unsigned char)((unsigned int)tmpu1b & 254U);
    #line 543 
    rtl_write_byte(rtlpriv,3U,(unsigned char)((int)tmpu1b));
    #line 544 
    __const_udelay(4295UL);
    #line 545 
    rtl_write_byte(rtlpriv,3U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  }
  #line 549 
  tmpu1b = rtl_read_byte(rtlpriv,9U);
  #line 550 
  if (((unsigned long)tmpu1b & 128UL) != 0UL) {
    #line 551 
    tmpu1b = (unsigned char)((unsigned int)tmpu1b & 63U);
    #line 554 
    if ((unsigned int)_rtl92se_halset_sysclk(hw,(unsigned char)((int)tmpu1b)) == 0U) 
      #line 555 
      return;
  }
  #line 558 
  rtl_write_byte(rtlpriv,40U,(unsigned char)0);
  #line 559 
  __const_udelay(214750UL);
  #line 560 
  rtl_write_byte(rtlpriv,32U,(unsigned char)52);
  #line 561 
  __const_udelay(214750UL);
  #line 564 
  rtl_write_byte(rtlpriv,1377U,(unsigned char)0);
  #line 567 
  tmpu1b = rtl_read_byte(rtlpriv,3U);
  #line 568 
  tmpu1b = (unsigned char)((unsigned int)tmpu1b & 115U);
  #line 569 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)tmpu1b));
  #line 571 
  __const_udelay(4295000UL);
  #line 573 
  rtl_write_byte(rtlpriv,64U,(unsigned char)0);
  #line 574 
  rtl_write_byte(rtlpriv,68U,(unsigned char)0);
  #line 577 
  tmpu1b = rtl_read_byte(rtlpriv,1378U);
  #line 578 
  tmpu1b = (unsigned char)((unsigned int)tmpu1b | 8U);
  #line 579 
  rtl_write_byte(rtlpriv,1378U,(unsigned char)((int)tmpu1b));
  #line 580 
  tmpu1b = (unsigned char)((unsigned int)tmpu1b & 247U);
  #line 581 
  rtl_write_byte(rtlpriv,1378U,(unsigned char)((int)tmpu1b));
  #line 584 
  tmpu1b = rtl_read_byte(rtlpriv,38U);
  #line 585 
  rtl_write_byte(rtlpriv,38U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 587 
  __const_udelay(8590000UL);
  #line 588 
  tmpu1b = rtl_read_byte(rtlpriv,39U);
  #line 589 
  rtl_write_byte(rtlpriv,39U,(unsigned char)((int)tmpu1b & 251));
  #line 592 
  tmpu1b = rtl_read_byte(rtlpriv,16U);
  #line 593 
  rtl_write_byte(rtlpriv,16U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 594 
  __const_udelay(4295000UL);
  #line 597 
  tmpu1b = rtl_read_byte(rtlpriv,16U);
  #line 598 
  rtl_write_byte(rtlpriv,16U,(unsigned char)((int)((unsigned int)tmpu1b | 2U)));
  #line 599 
  __const_udelay(4295000UL);
  #line 602 
  tmpu1b = rtl_read_byte(rtlpriv,32U);
  #line 603 
  rtl_write_byte(rtlpriv,32U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 606 
  tmpu2b = rtl_read_word(rtlpriv,0U);
  #line 607 
  rtl_write_word(rtlpriv,0U,(unsigned short)((int)((unsigned int)tmpu2b | 2048U)));
  #line 610 
  tmpu2b = rtl_read_word(rtlpriv,2U);
  #line 611 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 8192U)));
  #line 613 
  rtl_write_byte(rtlpriv,1U,(unsigned char)104);
  #line 617 
  __const_udelay(859000UL);
  #line 618 
  tmpu1b = rtl_read_byte(rtlpriv,40U);
  #line 619 
  rtl_write_byte(rtlpriv,40U,(unsigned char)((int)((unsigned int)tmpu1b | 17U)));
  #line 622 
  __const_udelay(429500UL);
  #line 623 
  rtl_write_byte(rtlpriv,40U,(unsigned char)((int)((unsigned int)tmpu1b | 81U)));
  #line 625 
  __const_udelay(42950UL);
  #line 626 
  rtl_write_byte(rtlpriv,40U,(unsigned char)((int)((unsigned int)tmpu1b | 17U)));
  #line 627 
  __const_udelay(42950UL);
  #line 630 
  tmpu1b = rtl_read_byte(rtlpriv,41U);
  #line 631 
  rtl_write_byte(rtlpriv,41U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 632 
  __const_udelay(4295000UL);
  #line 635 
  rtl_write_byte(rtlpriv,0U,(unsigned char)166);
  #line 638 
  tmpu2b = rtl_read_word(rtlpriv,8U);
  #line 639 
  rtl_write_word(rtlpriv,8U,(unsigned short)((int)((unsigned int)tmpu2b | 6144U)));
  #line 642 
  tmpu2b = rtl_read_word(rtlpriv,2U);
  #line 643 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 2048U)));
  #line 645 
  tmpu1b = rtl_read_byte(rtlpriv,3U);
  #line 646 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)tmpu1b & 127));
  #line 649 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 34816U)));
  #line 652 
  tmpu2b = rtl_read_word(rtlpriv,8U);
  #line 653 
  rtl_write_word(rtlpriv,8U,(unsigned short)((int)tmpu2b & 65531));
  #line 655 
  tmpu1b = rtl_read_byte(rtlpriv,9U);
  #line 656 
  tmpu1b = (unsigned char)((unsigned int)((unsigned char)((unsigned int)tmpu1b | 128U)) & 191U);
  #line 657 
  if ((unsigned int)_rtl92se_halset_sysclk(hw,(unsigned char)((int)tmpu1b)) == 0U) 
    #line 658 
    return;
  #line 660 
  rtl_write_word(rtlpriv,64U,(unsigned short)2044);
  #line 665 
  rtl_write_byte(rtlpriv,6U,(unsigned char)48);
  #line 666 
  rtl_write_byte(rtlpriv,73U,(unsigned char)240);
  #line 668 
  rtl_write_byte(rtlpriv,75U,(unsigned char)129);
  #line 670 
  rtl_write_byte(rtlpriv,181U,(unsigned char)33);
  #line 672 
  rtl_write_byte(rtlpriv,220U,(unsigned char)255);
  #line 673 
  rtl_write_byte(rtlpriv,221U,(unsigned char)255);
  #line 674 
  rtl_write_byte(rtlpriv,222U,(unsigned char)255);
  #line 675 
  rtl_write_byte(rtlpriv,223U,(unsigned char)255);
  #line 677 
  rtl_write_byte(rtlpriv,282U,(unsigned char)0);
  #line 678 
  rtl_write_byte(rtlpriv,283U,(unsigned char)0);
  #line 680 
  i = (unsigned char)0U;
  #line 680 
  while ((unsigned int)i <= 31U) {
    #line 681 
    rtl_write_byte(rtlpriv,(unsigned int)((int)i + 352),(unsigned char)27);
    #line 680 
    i = (u8)((int)i + 1);
  }
  #line 683 
  rtl_write_byte(rtlpriv,566U,(unsigned char)255);
  #line 685 
  rtl_write_byte(rtlpriv,1283U,(unsigned char)34);
  #line 687 
  if ((int)ppsc->support_aspm != 0 && ! ppsc->support_backdoor) 
                                                                #line 688 
                                                                rtl_write_byte(rtlpriv,1376U,(unsigned char)64); else 
                                                                    #line 690 
                                                                    rtl_write_byte(rtlpriv,1376U,(unsigned char)0);
  #line 692 
  rtl_write_byte(rtlpriv,58U,(unsigned char)145);
  #line 695 
  rtl_write_dword(rtlpriv,1340U,(unsigned int)rtlpci->rx_ring[0].dma);
  #line 696 
  rtl_write_dword(rtlpriv,1336U,(unsigned int)rtlpci->rx_ring[1].dma);
  #line 699 
  rtl_write_dword(rtlpriv,1328U,(unsigned int)rtlpci->tx_ring[0].dma);
  #line 700 
  rtl_write_dword(rtlpriv,1324U,(unsigned int)rtlpci->tx_ring[1].dma);
  #line 701 
  rtl_write_dword(rtlpriv,1320U,(unsigned int)rtlpci->tx_ring[2].dma);
  #line 702 
  rtl_write_dword(rtlpriv,1316U,(unsigned int)rtlpci->tx_ring[3].dma);
  #line 703 
  rtl_write_dword(rtlpriv,1332U,(unsigned int)rtlpci->tx_ring[4].dma);
  #line 704 
  rtl_write_dword(rtlpriv,1308U,(unsigned int)rtlpci->tx_ring[5].dma);
  #line 705 
  rtl_write_dword(rtlpriv,1304U,(unsigned int)rtlpci->tx_ring[6].dma);
  #line 706 
  rtl_write_dword(rtlpriv,1300U,(unsigned int)rtlpci->tx_ring[7].dma);
  #line 707 
  rtl_write_dword(rtlpriv,1312U,(unsigned int)rtlpci->tx_ring[8].dma);
  #line 709 
  rtl_write_word(rtlpriv,64U,(unsigned short)14332);
  #line 713 
  while (1) {
    #line 720 
    u8 tmp_1;
    #line 714 
    tmpu1b = rtl_read_byte(rtlpriv,68U);
    #line 715 
    if (((unsigned long)tmpu1b & 10UL) == 10UL) 
                                                #line 716 
                                                break;
    #line 718 
    __const_udelay(21475UL);
    #line 720 
    tmp_1 = pollingcnt;
    #line 720 
    pollingcnt = (u8)((int)pollingcnt - 1);
    #line 720 
    ;
    #line 720 
    if (! ((unsigned int)tmp_1 != 0U)) 
                                       #line 713 
                                       break;
  }
  #line 721 
  if ((unsigned int)pollingcnt == 0U) {
    #line 722 
    printk((char *)"\001",(int)tmpu1b);
    #line 724 
    tmpu1b = rtl_read_byte(rtlpriv,64U);
    #line 725 
    rtl_write_byte(rtlpriv,64U,(unsigned char)((int)tmpu1b & 239));
    #line 726 
    __const_udelay(8590UL);
    #line 728 
    rtl_write_byte(rtlpriv,64U,(unsigned char)((int)((unsigned int)tmpu1b | 16U)));
  }
  #line 732 
  if (ppsc->rfoff_reason == 268435456U || ppsc->rfoff_reason == 0U) {
    #line 735 
    enum rf_pwrstate rfpwr_state_toset;
    #line 734 
    struct rtl_led *pled0 = & rtlpriv->ledctl.sw_led0;
    #line 736 
    rfpwr_state_toset = (enum rf_pwrstate)_rtl92se_rf_onoff_detect(hw);
    #line 738 
    if (rfpwr_state_toset == (unsigned int)ERFON) 
                                                  #line 739 
                                                  rtl92se_sw_led_on(hw,pled0);
  }
  #line 741 
  return;
}

#line 743  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92se_macconfig_after_fwdownload(struct ieee80211_hw *hw)
{
  #line 749 
  u8 i;
  #line 750 
  u16 tmpu2b;
  #line 745 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 746 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 747 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 748 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 756 
  rtl_write_word(rtlpriv,64U,(unsigned short)14332);
  #line 761 
  ;
  #line 761 
  rtl_write_dword(rtlpriv,68U,rtl_read_dword(rtlpriv,68U) | 8388608U);
  #line 765 
  rtl_write_dword(rtlpriv,72U,rtlpci->receive_config);
  #line 772 
  rtl_write_word(rtlpriv,140U,(unsigned short)2570);
  #line 773 
  rtl_write_word(rtlpriv,142U,(unsigned short)4112);
  #line 776 
  rtl_write_byte(rtlpriv,145U,(unsigned char)64);
  #line 779 
  rtl_write_word(rtlpriv,148U,(unsigned short)100);
  #line 780 
  rtl_write_word(rtlpriv,150U,(unsigned short)2);
  #line 789 
  ;
  #line 789 
  rtl_write_byte(rtlpriv,189U,(unsigned char)((int)((unsigned int)rtl_read_byte(rtlpriv,189U) | 64U)));
  #line 799 
  if (rtlhal->version == 0U) 
                             #line 800 
                             rtl_write_byte(rtlpriv,385U,(unsigned char)240);
  else 
    #line 801 
    if (rtlhal->version == 1U) 
                               #line 802 
                               rtl_write_byte(rtlpriv,385U,(unsigned char)255);
  #line 803 
  rtl_write_byte(rtlpriv,386U,(unsigned char)1);
  #line 804 
  rtl_write_byte(rtlpriv,387U,(unsigned char)0);
  #line 808 
  i = (unsigned char)0U;
  #line 808 
  while ((unsigned int)i <= 7U) {
    #line 810 
    if (rtlhal->version == 0U) 
                               #line 811 
                               rtl_write_dword(rtlpriv,(unsigned int)(((int)i + 97) * 4),521138416U);
    #line 808 
    i = (u8)((int)i + 1);
  }
  #line 816 
  rtl_write_byte(rtlpriv,423U,(unsigned char)15);
  #line 818 
  rtl_write_word(rtlpriv,424U,(unsigned short)29762);
  #line 820 
  rtl_write_word(rtlpriv,426U,(unsigned short)56791);
  #line 822 
  rtl_write_word(rtlpriv,428U,(unsigned short)55154);
  #line 824 
  rtl_write_word(rtlpriv,430U,(unsigned short)65533);
  #line 827 
  rtl_write_dword(rtlpriv,432U,67174400U);
  #line 828 
  rtl_write_dword(rtlpriv,436U,151455237U);
  #line 829 
  rtl_write_dword(rtlpriv,440U,67174400U);
  #line 830 
  rtl_write_dword(rtlpriv,444U,151455237U);
  #line 834 
  rtl_write_word(rtlpriv,502U,(unsigned short)65535);
  #line 838 
  rtl_write_word(rtlpriv,564U,(unsigned short)128);
  #line 840 
  rtl_write_byte(rtlpriv,566U,(unsigned char)255);
  #line 842 
  rtl_write_byte(rtlpriv,567U,(unsigned char)7);
  #line 844 
  rtl_write_byte(rtlpriv,568U,(unsigned char)0);
  #line 853 
  rtl_write_byte(rtlpriv,182U,(unsigned char)4);
  #line 857 
  tmpu2b = (unsigned short)rtl_read_byte(rtlpriv,2U);
  #line 858 
  rtl_write_byte(rtlpriv,2U,(unsigned char)((int)((unsigned char)tmpu2b)));
  #line 859 
  tmpu2b = (unsigned short)rtl_read_byte(rtlpriv,0U);
  #line 860 
  rtl_write_byte(rtlpriv,0U,(unsigned char)((int)((unsigned char)tmpu2b)));
  #line 864 
  if ((int)rtlefuse->epromtype == 2) {
    #line 865 
    u8 tempval;
    #line 867 
    tempval = rtl_read_byte(rtlpriv,1U);
    #line 868 
    tempval = (unsigned char)((unsigned int)tempval & 254U);
    #line 869 
    rtl_write_byte(rtlpriv,1U,(unsigned char)((int)tempval));
    #line 872 
    rtl_write_byte(rtlpriv,51U,(unsigned char)114);
    #line 873 
    _rtl_dbg_trace(rtlpriv,4ULL,3,(char *)"EFUSE CONFIG OK\n");
  }
  #line 876 
  _rtl_dbg_trace(rtlpriv,4ULL,3,(char *)"OK\n");
  #line 877 
  return;
}

#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92se_hw_configure(struct ieee80211_hw *hw)
{
  #line 882 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 883 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 884 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 885 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 887 
  u8 reg_bw_opmode = (unsigned char)0U;
  #line 888 
  u32 reg_rrsr = 0U;
  #line 889 
  u8 regtmp = (unsigned char)0U;
  #line 891 
  reg_bw_opmode = (unsigned char)4U;
  #line 892 
  reg_rrsr = 4095U;
  #line 894 
  regtmp = rtl_read_byte(rtlpriv,384U);
  #line 895 
  reg_rrsr = ((reg_rrsr << 8) & 268435200U) | (unsigned int)regtmp;
  #line 896 
  rtl_write_dword(rtlpriv,384U,reg_rrsr);
  #line 897 
  rtl_write_byte(rtlpriv,515U,(unsigned char)((int)reg_bw_opmode));
  #line 900 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)53,(u8 *)(& rtlpci->shortretry_limit));
  #line 903 
  rtl_write_byte(rtlpriv,157U,(unsigned char)143);
  #line 906 
  switch ((int)rtlphy->rf_type) {
    #line 907 
    case 1: 
            #line 907 
    ;
    #line 908 
    case 0: 
            #line 908 
    ;
    #line 909 
    rtlhal->minspace_cfg = (unsigned char)80U;
    #line 910 
    break;
    #line 911 
    case 2: 
            #line 911 
    ;
    #line 912 
    case 3: 
            #line 912 
    ;
    #line 913 
    rtlhal->minspace_cfg = (unsigned char)152U;
    #line 914 
    break;
  }
  #line 916 
  rtl_write_byte(rtlpriv,567U,(unsigned char)((int)rtlhal->minspace_cfg));
  #line 917 
  return;
}

#line 919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
int rtl92se_hw_init(struct ieee80211_hw *hw)
{
  #line 927 
  unsigned long flags;
  #line 929 
  u8 tmp_u1b;
  #line 931 
  u8 i;
  #line 921 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 922 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 923 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 924 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 925 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 926 
  u8 tmp_byte = (unsigned char)0U;
  #line 928 
  bool rtstatus = (_Bool)1;
  #line 930 
  int err = 0;
  #line 932 
  int wdcapra_add[4U] = {472, 476, 468, 464};
  #line 935 
  u8 secr_value = (unsigned char)0U;
  #line 937 
  rtlpci->being_init_adapter = (_Bool)1;
  {
    #line 946 
    unsigned long __dummy;
    #line 946 
    unsigned long __dummy2;
    }
  #line 946 
  flags = arch_local_save_flags();
  #line 947 
  trace_hardirqs_on();
  #line 947 
  arch_local_irq_enable();
  #line 949 
  (*((rtlpriv->intf_ops)->disable_aspm))(hw);
  #line 953 
  _rtl92se_macconfig_before_fwdownload(hw);
  #line 955 
  rtlhal->version = (rtl_read_dword(rtlpriv,4U) >> 16) & 15U;
  #line 958 
  rtl8192se_gpiobit3_cfg_inputmode(hw);
  #line 961 
  rtstatus = (_Bool)(rtl92s_download_fw(hw) != 0);
  #line 962 
  if (! rtstatus) {
    #line 963 
    _rtl_dbg_trace(rtlpriv,1ULL,2,(char *)"Failed to download FW. Init HW without FW now... ");
    #line 966 
    err = 1;
    #line 967 
    goto exit;
  }
  #line 971 
  _rtl92se_macconfig_after_fwdownload(hw);
  #line 974 
  rtlhal->fwcmd_iomap = rtl_read_word(rtlpriv,868U);
  #line 975 
  rtlhal->fwcmd_ioparam = rtl_read_dword(rtlpriv,872U);
  #line 978 
  if (! rtl92s_phy_mac_config(hw)) {
    #line 979 
    printk((char *)"\001");
    #line 980 
    err = (int)rtstatus;
    #line 981 
    goto exit;
  }
  #line 989 
  rtlpci->receive_config = rtl_read_dword(rtlpriv,72U);
  #line 990 
  rtlpci->receive_config &= 4294963167U;
  #line 991 
  rtl_write_dword(rtlpriv,72U,rtlpci->receive_config);
  #line 995 
  rtl_write_dword(rtlpriv,64U,14332U);
  #line 998 
  if (! rtl92s_phy_bb_config(hw)) {
    #line 999 
    printk((char *)"\001");
    #line 1000 
    err = (int)rtstatus;
    #line 1001 
    goto exit;
  }
  #line 1007 
  rtlphy->rf_mode = (unsigned char)0U;
  #line 1010 
  rtl_write_byte(rtlpriv,39U,(unsigned char)219);
  #line 1011 
  if (rtlhal->version == 0U) 
                             #line 1012 
                             rtl_write_byte(rtlpriv,27U,(unsigned char)7); else 
                                                                    #line 1014 
                                                                    rtl_write_byte(rtlpriv,31U,(unsigned char)7);
  #line 1016 
  if (! rtl92s_phy_rf_config(hw)) {
    #line 1017 
    _rtl_dbg_trace(rtlpriv,4ULL,3,(char *)"RF Config failed\n");
    #line 1018 
    err = (int)rtstatus;
    #line 1019 
    goto exit;
  }
  #line 1025 
  rtlphy->rfreg_chnlval[0] = rtl92s_phy_query_rf_reg(hw,(enum radio_path)RF90_PATH_A,24U,1048575U);
  #line 1029 
  rtlphy->rfreg_chnlval[1] = rtl92s_phy_query_rf_reg(hw,(enum radio_path)RF90_PATH_B,24U,1048575U);
  #line 1035 
  rtl_set_bbreg(hw,2048U,16777216U,1U);
  #line 1036 
  rtl_set_bbreg(hw,2048U,33554432U,1U);
  #line 1039 
  _rtl92se_hw_configure(hw);
  #line 1044 
  rtl92s_phy_get_hw_reg_originalvalue(hw);
  #line 1046 
  rtl92s_phy_set_txpower(hw,(unsigned char)((int)rtlphy->current_channel));
  #line 1049 
  i = (unsigned char)0U;
  #line 1049 
  while ((unsigned int)i <= 5U) {
    #line 1050 
    rtl_write_byte(rtlpriv,(unsigned int)((int)i + 80),(unsigned char)((int)rtlefuse->dev_addr[(int)i]));
    #line 1049 
    i = (u8)((int)i + 1);
  }
  #line 1053 
  tmp_u1b = rtl_read_byte(rtlpriv,753U);
  #line 1054 
  rtl_write_byte(rtlpriv,753U,(unsigned char)((int)tmp_u1b & 247));
  #line 1056 
  rtl_write_byte(rtlpriv,77U,(unsigned char)0);
  #line 1058 
  if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 72U) {
    #line 1059 
    tmp_byte = (unsigned char)((unsigned int)rtl_read_byte(rtlpriv,216U) & 239U);
    #line 1060 
    tmp_byte = (unsigned char)((unsigned int)tmp_byte | 32U);
    #line 1061 
    rtl_write_byte(rtlpriv,216U,(unsigned char)((int)tmp_byte));
    #line 1062 
    rtl_write_dword(rtlpriv,220U,4294955007U);
  }
  #line 1067 
  if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 52U) 
    #line 1069 
    rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_RA_INIT);
  else 
    #line 1070 
    if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion == 52U) {
      #line 1072 
      rtl_write_dword(rtlpriv,704U,4244635686U);
      #line 1073 
      rtl92s_phy_chk_fwcmd_iodone(hw);
    }
    else {
      #line 1076 
      rtl_write_dword(rtlpriv,704U,4244635823U);
      #line 1077 
      rtl92s_phy_chk_fwcmd_iodone(hw);
      #line 1078 
      rtl_write_dword(rtlpriv,704U,4244635814U);
      #line 1079 
      rtl92s_phy_chk_fwcmd_iodone(hw);
      #line 1080 
      rtl_write_dword(rtlpriv,704U,4244635808U);
      #line 1081 
      rtl92s_phy_chk_fwcmd_iodone(hw);
    }
  #line 1086 
  rtl92s_phy_switch_ephy_parameter(hw);
  #line 1091 
  rtl_cam_reset_all_entry(hw);
  #line 1092 
  secr_value = (unsigned char)((unsigned int)secr_value | 4U);
  #line 1093 
  secr_value = (unsigned char)((unsigned int)secr_value | 8U);
  #line 1094 
  secr_value = (unsigned char)((unsigned int)secr_value | 32U);
  #line 1095 
  rtl_write_byte(rtlpriv,592U,(unsigned char)((int)secr_value));
  #line 1097 
  i = (unsigned char)0U;
  #line 1097 
  while ((unsigned int)i <= 3U) {
    #line 1098 
    rtl_write_dword(rtlpriv,(unsigned int)wdcapra_add[(int)i],6177570U);
    #line 1097 
    i = (u8)((int)i + 1);
  }
  #line 1100 
  if ((unsigned int)rtlphy->rf_type == 1U) {
    #line 1101 
    bool mrc2set = (_Bool)1;
    #line 1103 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)93,(u8 *)(& mrc2set));
  }
  #line 1106 
  (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_POWER_ON);
  #line 1107 
  rtl92s_dm_init(hw);
  #line 1108 
  exit: 
        #line 1108 
  ;
  {
    #line 1109 
    unsigned long __dummy_2;
    #line 1109 
    unsigned long __dummy2_2;
    }
  #line 1109 
  if (arch_irqs_disabled_flags(flags) != 0) {
    {
      #line 1109 
      unsigned long __dummy_0;
      #line 1109 
      unsigned long __dummy2_0;
      }
    #line 1109 
    arch_local_irq_restore(flags);
    #line 1109 
    trace_hardirqs_off();
  }
  else {
    #line 1109 
    trace_hardirqs_on();
    {
      #line 1109 
      unsigned long __dummy_1;
      #line 1109 
      unsigned long __dummy2_1;
      }
    #line 1109 
    arch_local_irq_restore(flags);
  }
  #line 1110 
  rtlpci->being_init_adapter = (_Bool)0;
  #line 1111 
  return err;
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_mac_addr(struct rtl_io *io, u8 *addr)
{
  #line 1116 
  return;
}

#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_check_bssid(struct ieee80211_hw *hw, bool check_bssid)
{
  #line 1122 
  u32 reg_rcr;
  #line 1121 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1124 
  if (rtlpriv->psc.rfpwr_state != (unsigned int)ERFON) 
                                                       #line 1125 
                                                       return;
  #line 1127 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)44,(u8 *)(& reg_rcr));
  #line 1129 
  if ((int)check_bssid != 0) {
    #line 1130 
    reg_rcr |= 8388608U;
    #line 1131 
    (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)44,(u8 *)(& reg_rcr));
  }
  else 
    #line 1132 
    if (! check_bssid) {
      #line 1133 
      reg_rcr &= 4286578687U;
      #line 1134 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)44,(u8 *)(& reg_rcr));
    }
  #line 1136 
  return;
}

#line 1139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static int _rtl92se_set_media_status(struct ieee80211_hw *hw, enum nl80211_iftype type)
{
  #line 1144 
  u32 temp;
  #line 1142 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1143 
  u8 bt_msr = rtl_read_byte(rtlpriv,76U);
  #line 1145 
  bt_msr = (unsigned char)((unsigned int)bt_msr & 252U);
  #line 1147 
  switch ((unsigned int)type) {
    #line 1148 
    case (unsigned int)0: 
                          #line 1148 
    ;
    #line 1149 
    bt_msr = bt_msr;
    #line 1150 
    _rtl_dbg_trace(rtlpriv,4ULL,5,(char *)"Set Network type to NO LINK!\n");
    #line 1152 
    break;
    #line 1153 
    case (unsigned int)1: 
                          #line 1153 
    ;
    #line 1154 
    bt_msr = (unsigned char)((unsigned int)bt_msr | 1U);
    #line 1155 
    _rtl_dbg_trace(rtlpriv,4ULL,5,(char *)"Set Network type to Ad Hoc!\n");
    #line 1157 
    break;
    #line 1158 
    case (unsigned int)2: 
                          #line 1158 
    ;
    #line 1159 
    bt_msr = (unsigned char)((unsigned int)bt_msr | 2U);
    #line 1160 
    _rtl_dbg_trace(rtlpriv,4ULL,5,(char *)"Set Network type to STA!\n");
    #line 1162 
    break;
    #line 1163 
    case (unsigned int)3: 
                          #line 1163 
    ;
    #line 1164 
    bt_msr = (unsigned char)((unsigned int)bt_msr | 3U);
    #line 1165 
    _rtl_dbg_trace(rtlpriv,4ULL,5,(char *)"Set Network type to AP!\n");
    #line 1167 
    break;
    #line 1168 
    default: 
             #line 1168 
    ;
    #line 1169 
    printk((char *)"\001",(unsigned int)type);
    #line 1170 
    return 1;
  }
  #line 1174 
  if (type != (unsigned int)NL80211_IFTYPE_AP && rtlpriv->mac80211.link_state <= (unsigned int)MAC80211_LINKING) {
    #line 1176 
    bt_msr = (unsigned char)((unsigned int)rtl_read_byte(rtlpriv,76U) & 252U);
  }
  #line 1177 
  rtl_write_byte(rtlpriv,76U,(unsigned char)((int)bt_msr));
  #line 1179 
  temp = rtl_read_dword(rtlpriv,68U);
  #line 1180 
  rtl_write_dword(rtlpriv,68U,temp & 4294967039U);
  #line 1181 
  rtl_write_dword(rtlpriv,68U,temp | 256U);
  #line 1184 
  return 0;
}

#line 1188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
int rtl92se_set_network_type(struct ieee80211_hw *hw, enum nl80211_iftype type)
{
  #line 1190 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1192 
  if (_rtl92se_set_media_status(hw,type) != 0) 
                                               #line 1193 
                                               return -95;
  #line 1195 
  if (rtlpriv->mac80211.link_state == (unsigned int)MAC80211_LINKED) {
    #line 1196 
    if (type != (unsigned int)NL80211_IFTYPE_AP) 
                                                 #line 1197 
                                                 rtl92se_set_check_bssid(hw,(_Bool)1);
  }
  else 
       #line 1199 
       rtl92se_set_check_bssid(hw,(_Bool)0);
  #line 1202 
  return 0;
}

#line 1206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_qos(struct ieee80211_hw *hw, int aci)
{
  #line 1208 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1209 
  rtl92s_dm_init_edca_turbo(hw);
  #line 1211 
  switch (aci) {
    #line 1212 
    case 1: 
            #line 1212 
    ;
    #line 1213 
    rtl_write_dword(rtlpriv,476U,42063U);
    #line 1214 
    break;
    #line 1215 
    case 0: 
            #line 1215 
    ;
    #line 1217 
    break;
    #line 1218 
    case 2: 
            #line 1218 
    ;
    #line 1219 
    rtl_write_dword(rtlpriv,468U,6177570U);
    #line 1220 
    break;
    #line 1221 
    case 3: 
            #line 1221 
    ;
    #line 1222 
    rtl_write_dword(rtlpriv,464U,3093026U);
    #line 1223 
    break;
    #line 1224 
    default: 
             #line 1224 
    ;
    {
      #line 1225 
      bool __warned;
      #line 1225 
      int __ret_warn_once = 1;
      #line 1225 
      if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
        #line 1225 
        __warned = (_Bool)1;
        {
          #line 1225 
          int __ret_warn_on = 1;
          #line 1225 
          if ((long)(__ret_warn_on != 0) != 0L) {
            #line 1225 
            __warn_printk((char *)"rtl8192se: invalid aci: %d !\n",aci);
            #line 1226 
            ldv_inline_asm();
            #line 1227 
            ldv_inline_asm();
          }
          #line 1225 
          long tmp = (long)(__ret_warn_on != 0);
        }
      }
      #line 1225 
      long tmp_3 = (long)(__ret_warn_once != 0);
    }
    #line 1226 
    break;
  }
  #line 1228 
  return;
}

#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_enable_interrupt(struct ieee80211_hw *hw)
{
  #line 1232 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1233 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 1235 
  rtl_write_dword(rtlpriv,768U,rtlpci->irq_mask[0]);
  #line 1237 
  rtl_write_dword(rtlpriv,772U,rtlpci->irq_mask[1] & 63U);
  #line 1238 
  rtlpci->irq_enabled = (_Bool)1;
  #line 1239 
  return;
}

#line 1241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_disable_interrupt(struct ieee80211_hw *hw)
{
  #line 1243 
  struct rtl_priv *rtlpriv;
  #line 1244 
  struct rtl_pci *rtlpci;
  #line 1246 
  rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1248 
  if (rtlpriv == (struct rtl_priv *)0 || rtlpriv->max_fw_size == 0) 
                                                                    #line 1249 
                                                                    return;
  #line 1250 
  rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 1251 
  rtl_write_dword(rtlpriv,768U,0U);
  #line 1252 
  rtl_write_dword(rtlpriv,772U,0U);
  #line 1253 
  rtlpci->irq_enabled = (_Bool)0;
  #line 1254 
  return;
}

#line 1256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static u8 _rtl92s_set_sysclk(struct ieee80211_hw *hw, u8 data)
{
  #line 1261 
  u8 tmp;
  #line 1258 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1259 
  u8 waitcnt = (unsigned char)100U;
  #line 1260 
  bool result = (_Bool)0;
  #line 1263 
  rtl_write_byte(rtlpriv,9U,(unsigned char)((int)data));
  #line 1266 
  __const_udelay(1718000UL);
  #line 1269 
  tmp = rtl_read_byte(rtlpriv,9U);
  #line 1270 
  result = (_Bool)(((unsigned long)((int)tmp ^ (int)data) & 128UL) == 0UL);
  #line 1272 
  if (((unsigned long)data & 192UL) == 0UL) {
    #line 1273 
    waitcnt = (unsigned char)100U;
    #line 1274 
    tmp = (unsigned char)0U;
    #line 1276 
    while (1) {
      #line 1277 
      waitcnt = (u8)((int)waitcnt - 1);
      #line 1278 
      tmp = rtl_read_byte(rtlpriv,9U);
      #line 1280 
      if (((unsigned long)tmp & 64UL) != 0UL) 
                                              #line 1281 
                                              break;
      #line 1283 
      printk((char *)"\001",(int)tmp);
      #line 1285 
      if ((unsigned int)waitcnt == 0U) 
                                       #line 1286 
                                       break;
      #line 1287 
      __const_udelay(42950UL);
    }
    #line 1290 
    if ((unsigned int)waitcnt == 0U) 
                                     #line 1291 
                                     result = (_Bool)0; else 
                                                             #line 1293 
                                                             result = (_Bool)1;
  }
  #line 1296 
  return (unsigned char)result;
}

#line 1299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92s_phy_set_rfhalt(struct ieee80211_hw *hw)
{
  #line 1304 
  u8 u1btmp;
  #line 1301 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1302 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 1303 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 1306 
  if ((int)rtlhal->driver_going2unload != 0) 
                                             #line 1307 
                                             rtl_write_byte(rtlpriv,1376U,(unsigned char)0);
  #line 1310 
  u1btmp = rtl_read_byte(rtlpriv,33U);
  #line 1311 
  u1btmp = (unsigned char)((unsigned int)u1btmp | 1U);
  #line 1312 
  rtl_write_byte(rtlpriv,33U,(unsigned char)((int)u1btmp));
  #line 1313 
  rtl_write_byte(rtlpriv,24U,(unsigned char)0);
  #line 1314 
  rtl_write_byte(rtlpriv,66U,(unsigned char)255);
  #line 1315 
  rtl_write_word(rtlpriv,64U,(unsigned short)22524);
  #line 1316 
  __const_udelay(429500UL);
  #line 1317 
  rtl_write_word(rtlpriv,64U,(unsigned short)30716);
  #line 1318 
  rtl_write_byte(rtlpriv,2051U,(unsigned char)0);
  #line 1319 
  __const_udelay(42950UL);
  #line 1320 
  rtl_write_word(rtlpriv,64U,(unsigned short)14332);
  #line 1321 
  __const_udelay(42950UL);
  #line 1322 
  rtl_write_word(rtlpriv,64U,(unsigned short)30716);
  #line 1323 
  __const_udelay(42950UL);
  #line 1324 
  rtl_write_word(rtlpriv,64U,(unsigned short)22524);
  #line 1325 
  rtl_write_word(rtlpriv,64U,(unsigned short)0);
  #line 1327 
  if ((int)rtlhal->driver_going2unload != 0) {
    #line 1328 
    u1btmp = rtl_read_byte(rtlpriv,3U);
    #line 1329 
    u1btmp = (unsigned char)((unsigned int)u1btmp & 254U);
    #line 1330 
    rtl_write_byte(rtlpriv,3U,(unsigned char)((int)u1btmp));
  }
  #line 1333 
  u1btmp = rtl_read_byte(rtlpriv,9U);
  #line 1339 
  if (((unsigned long)u1btmp & 128UL) != 0UL) {
    #line 1340 
    u1btmp = (unsigned char)((unsigned int)u1btmp & 63U);
    #line 1341 
    if ((unsigned int)_rtl92s_set_sysclk(hw,(unsigned char)((int)u1btmp)) == 0U) {
      #line 1342 
      printk((char *)"\001");
      #line 1343 
      return;
    }
  }
  #line 1348 
  if (ppsc->rfoff_reason == 268435456U && ! rtlhal->driver_going2unload) 
    #line 1351 
    rtl_write_byte(rtlpriv,3U,(unsigned char)249); else 
                                                        #line 1359 
                                                        rtl_write_byte(rtlpriv,3U,(unsigned char)249);
  #line 1362 
  rtl_write_byte(rtlpriv,9U,(unsigned char)112);
  #line 1363 
  rtl_write_byte(rtlpriv,41U,(unsigned char)104);
  #line 1364 
  rtl_write_byte(rtlpriv,40U,(unsigned char)0);
  #line 1365 
  rtl_write_byte(rtlpriv,32U,(unsigned char)52);
  #line 1366 
  rtl_write_byte(rtlpriv,38U,(unsigned char)14);
  #line 1367 
  ppsc->cur_ps_level |= 8U;
  #line 1368 
  return;
}

#line 1371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92se_gen_refreshledstate(struct ieee80211_hw *hw)
{
  #line 1373 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1374 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 1375 
  struct rtl_led *pled0 = & rtlpriv->ledctl.sw_led0;
  #line 1377 
  if ((int)rtlpci->up_first_time == 1) 
                                       #line 1378 
                                       return;
  #line 1380 
  if (rtlpriv->psc.rfoff_reason == 268435456U) 
                                               #line 1381 
                                               rtl92se_sw_led_on(hw,pled0); else 
                                                                    #line 1383 
                                                                    rtl92se_sw_led_off(hw,pled0);
  #line 1384 
  return;
}

#line 1387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92se_power_domain_init(struct ieee80211_hw *hw)
{
  #line 1390 
  u16 tmpu2b;
  #line 1391 
  u8 tmpu1b;
  #line 1389 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1393 
  rtlpriv->psc.pwrdomain_protect = (_Bool)1;
  #line 1395 
  tmpu1b = rtl_read_byte(rtlpriv,9U);
  #line 1396 
  if (((unsigned long)tmpu1b & 128UL) != 0UL) {
    #line 1397 
    tmpu1b = (unsigned char)((unsigned int)tmpu1b & 63U);
    #line 1398 
    if ((unsigned int)_rtl92s_set_sysclk(hw,(unsigned char)((int)tmpu1b)) == 0U) {
      #line 1399 
      rtlpriv->psc.pwrdomain_protect = (_Bool)0;
      #line 1400 
      return;
    }
  }
  #line 1404 
  rtl_write_byte(rtlpriv,40U,(unsigned char)0);
  #line 1405 
  rtl_write_byte(rtlpriv,32U,(unsigned char)52);
  #line 1408 
  tmpu1b = rtl_read_byte(rtlpriv,3U);
  #line 1412 
  if (((unsigned long)rtlpriv->psc.rfoff_reason & 1342177280UL) != 0UL) 
    #line 1413 
    tmpu1b = (unsigned char)((unsigned int)tmpu1b & 251U); else 
                                                                #line 1415 
                                                                tmpu1b = (unsigned char)((unsigned int)tmpu1b & 115U);
  #line 1417 
  rtl_write_byte(rtlpriv,3U,(unsigned char)((int)tmpu1b));
  #line 1419 
  __const_udelay(4295000UL);
  #line 1421 
  rtl_write_byte(rtlpriv,64U,(unsigned char)0);
  #line 1422 
  rtl_write_byte(rtlpriv,68U,(unsigned char)0);
  #line 1425 
  tmpu1b = rtl_read_byte(rtlpriv,1378U);
  #line 1426 
  tmpu1b = (unsigned char)((unsigned int)tmpu1b | 8U);
  #line 1427 
  rtl_write_byte(rtlpriv,1378U,(unsigned char)((int)tmpu1b));
  #line 1428 
  tmpu1b = (unsigned char)((unsigned int)tmpu1b & 247U);
  #line 1429 
  rtl_write_byte(rtlpriv,1378U,(unsigned char)((int)tmpu1b));
  #line 1432 
  tmpu1b = rtl_read_byte(rtlpriv,38U);
  #line 1433 
  rtl_write_byte(rtlpriv,38U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 1435 
  __const_udelay(6442500UL);
  #line 1436 
  tmpu1b = rtl_read_byte(rtlpriv,39U);
  #line 1437 
  rtl_write_byte(rtlpriv,39U,(unsigned char)((int)tmpu1b & 251));
  #line 1440 
  tmpu1b = rtl_read_byte(rtlpriv,16U);
  #line 1441 
  rtl_write_byte(rtlpriv,16U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 1442 
  __const_udelay(4295000UL);
  #line 1445 
  tmpu1b = rtl_read_byte(rtlpriv,16U);
  #line 1446 
  rtl_write_byte(rtlpriv,16U,(unsigned char)((int)((unsigned int)tmpu1b | 2U)));
  #line 1447 
  __const_udelay(4295000UL);
  #line 1450 
  tmpu1b = rtl_read_byte(rtlpriv,32U);
  #line 1451 
  rtl_write_byte(rtlpriv,32U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 1454 
  tmpu2b = rtl_read_word(rtlpriv,0U);
  #line 1455 
  rtl_write_word(rtlpriv,0U,(unsigned short)((int)((unsigned int)tmpu2b | 2048U)));
  #line 1459 
  tmpu2b = rtl_read_word(rtlpriv,2U);
  #line 1460 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 8192U)));
  #line 1462 
  rtl_write_byte(rtlpriv,1U,(unsigned char)104);
  #line 1465 
  tmpu1b = rtl_read_byte(rtlpriv,40U);
  #line 1466 
  rtl_write_byte(rtlpriv,40U,(unsigned char)((int)((unsigned int)tmpu1b | 17U)));
  #line 1468 
  tmpu1b = rtl_read_byte(rtlpriv,41U);
  #line 1469 
  rtl_write_byte(rtlpriv,41U,(unsigned char)((int)((unsigned int)tmpu1b | 1U)));
  #line 1470 
  __const_udelay(4295000UL);
  #line 1473 
  rtl_write_byte(rtlpriv,0U,(unsigned char)166);
  #line 1476 
  tmpu2b = rtl_read_word(rtlpriv,8U);
  #line 1477 
  rtl_write_word(rtlpriv,8U,(unsigned short)((int)((unsigned int)tmpu2b | 6144U)));
  #line 1480 
  tmpu2b = rtl_read_word(rtlpriv,2U);
  #line 1481 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 2048U)));
  #line 1483 
  rtl_write_word(rtlpriv,2U,(unsigned short)((int)((unsigned int)tmpu2b | 34816U)));
  #line 1486 
  tmpu2b = rtl_read_word(rtlpriv,8U);
  #line 1487 
  rtl_write_word(rtlpriv,8U,(unsigned short)((int)tmpu2b & 65531));
  #line 1489 
  tmpu1b = rtl_read_byte(rtlpriv,9U);
  #line 1490 
  tmpu1b = (unsigned char)((unsigned int)((unsigned char)((unsigned int)tmpu1b | 128U)) & 191U);
  #line 1491 
  if ((unsigned int)_rtl92s_set_sysclk(hw,(unsigned char)((int)tmpu1b)) == 0U) {
    #line 1492 
    rtlpriv->psc.pwrdomain_protect = (_Bool)0;
    #line 1493 
    return;
  }
  #line 1496 
  rtl_write_word(rtlpriv,64U,(unsigned short)14332);
  #line 1499 
  _rtl92se_gen_refreshledstate(hw);
  #line 1501 
  rtlpriv->psc.pwrdomain_protect = (_Bool)0;
  #line 1502 
  return;
}

#line 1504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_card_disable(struct ieee80211_hw *hw)
{
  #line 1510 
  enum nl80211_iftype opmode;
  #line 1506 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1507 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 1508 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 1509 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 1511 
  u8 wait = (unsigned char)30U;
  #line 1513 
  (*((rtlpriv->intf_ops)->enable_aspm))(hw);
  #line 1515 
  if ((int)rtlpci->driver_is_goingto_unload != 0 || ppsc->rfoff_reason > 536870912U) 
    #line 1517 
    (*(((rtlpriv->cfg)->ops)->led_control))(hw,(enum led_ctl_mode)LED_CTL_POWER_OFF);
  #line 1521 
  rtl8192se_gpiobit3_cfg_inputmode(hw);
  #line 1524 
  while (1) {
    #line 1524 
    u8 tmp_0;
    #line 1524 
    tmp_0 = wait;
    #line 1524 
    wait = (u8)((int)wait - 1);
    #line 1524 
    ;
    #line 1524 
    if ((unsigned int)tmp_0 > 9U) {
      #line 1524 
      if (! ((int)rtlpriv->psc.pwrdomain_protect != 0)) 
                                                        #line 1524 
                                                        break;
    }
    else 
         #line 1524 
         break;
    #line 1525 
    if ((int)rtlpriv->psc.pwrdomain_protect != 0) {
      #line 1526 
      unsigned long __ms = 20UL;
      #line 1526 
      while (1) {
        #line 1526 
        unsigned long tmp;
        #line 1526 
        tmp = __ms;
        #line 1526 
        __ms --;
        #line 1526 
        ;
        #line 1526 
        if (! (tmp != 0UL)) 
                            #line 1526 
                            break;
        #line 1526 
        __const_udelay(4295000UL);
      }
    }
    else 
         #line 1528 
         break;
  }
  #line 1531 
  mac->link_state = MAC80211_NOLINK;
  #line 1532 
  opmode = NL80211_IFTYPE_UNSPECIFIED;
  #line 1533 
  _rtl92se_set_media_status(hw,opmode);
  #line 1535 
  _rtl92s_phy_set_rfhalt(hw);
  #line 1536 
  __const_udelay(429500UL);
  #line 1538 
  return;
}

#line 1539  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_interrupt_recognized(struct ieee80211_hw *hw, struct rtl_int *intvec)
{
  #line 1542 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1543 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 1545 
  intvec->inta = rtl_read_dword(rtlpriv,776U) & rtlpci->irq_mask[0];
  #line 1546 
  rtl_write_dword(rtlpriv,776U,intvec->inta);
  #line 1548 
  intvec->intb = rtl_read_dword(rtlpriv,780U) & rtlpci->irq_mask[1];
  #line 1549 
  rtl_write_dword(rtlpriv,780U,intvec->intb);
  #line 1550 
  return;
}

#line 1552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_beacon_related_registers(struct ieee80211_hw *hw)
{
  #line 1554 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1555 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 1556 
  u16 bcntime_cfg = (unsigned short)0U;
  #line 1557 
  u16 bcn_cw = (unsigned short)6U;
  #line 1557 
  u16 bcn_ifs = (unsigned short)15U;
  #line 1558 
  u16 atim_window = (unsigned short)2U;
  #line 1561 
  rtl_write_word(rtlpriv,150U,(unsigned short)((int)atim_window));
  #line 1564 
  rtl_write_word(rtlpriv,148U,(unsigned short)((int)((unsigned short)mac->beacon_interval)));
  #line 1569 
  rtl_write_word(rtlpriv,152U,(unsigned short)160);
  #line 1573 
  rtl_write_word(rtlpriv,154U,(unsigned short)256);
  #line 1578 
  rtl_write_byte(rtlpriv,156U,(unsigned char)100);
  #line 1581 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
                                                         #line 1582 
                                                         bcntime_cfg = (unsigned short)(((int)bcn_cw << 8) | (int)bcntime_cfg);
  #line 1585 
  bcntime_cfg = (unsigned short)((int)bcntime_cfg | (int)bcn_ifs);
  #line 1588 
  rtl92s_phy_set_beacon_hwreg(hw,(unsigned short)((int)((unsigned short)mac->beacon_interval)));
  #line 1589 
  return;
}

#line 1591  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_beacon_interval(struct ieee80211_hw *hw)
{
  #line 1593 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1594 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 1595 
  u16 bcn_interval = (unsigned short)mac->beacon_interval;
  #line 1598 
  rtl_write_word(rtlpriv,148U,(unsigned short)((int)bcn_interval));
  #line 1600 
  rtl92s_phy_set_beacon_hwreg(hw,(unsigned short)((int)bcn_interval));
  #line 1601 
  return;
}

#line 1603  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_update_interrupt_mask(struct ieee80211_hw *hw, u32 add_msr, u32 rm_msr)
{
  #line 1606 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1607 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 1609 
  _rtl_dbg_trace(rtlpriv,128ULL,4,(char *)"add_msr:%x, rm_msr:%x\n",add_msr,rm_msr);
  #line 1612 
  if (add_msr != 0U) 
                     #line 1613 
                     rtlpci->irq_mask[0] |= add_msr;
  #line 1615 
  if (rm_msr != 0U) 
                    #line 1616 
                    rtlpci->irq_mask[0] &= ~ rm_msr;
  #line 1618 
  rtl92se_disable_interrupt(hw);
  #line 1619 
  rtl92se_enable_interrupt(hw);
  #line 1620 
  return;
}

#line 1622  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl8192se_get_ic_inferiority(struct ieee80211_hw *hw)
{
  #line 1626 
  u8 efuse_id;
  #line 1624 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 1625 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 1628 
  rtlhal->ic_class = (unsigned char)0U;
  #line 1631 
  if ((int)rtlefuse->epromtype == 2 && (unsigned int)rtlefuse->autoload_failflag == 0U) {
    #line 1633 
    efuse_id = efuse_read_1byte(hw,(unsigned short)506);
    #line 1635 
    if ((unsigned int)efuse_id == 254U) 
                                        #line 1636 
                                        rtlhal->ic_class = (unsigned char)1U;
  }
  #line 1638 
  return;
}

#line 1640  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void _rtl92se_read_adapter_info(struct ieee80211_hw *hw)
{
  #line 1646 
  u16 i;
  #line 1646 
  u16 usvalue;
  #line 1647 
  u16 eeprom_id;
  #line 1648 
  u8 tempval;
  #line 1649 
  u8 hwinfo[128U];
  #line 1650 
  u8 rf_path;
  #line 1650 
  u8 index;
  #line 1642 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1643 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 1644 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 1645 
  struct device *dev = & (((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev.pdev)->dev;
  #line 1652 
  switch ((int)rtlefuse->epromtype) {
    #line 1653 
    case 2: 
            #line 1653 
    ;
    #line 1654 
    rtl_efuse_shadow_map_update(hw);
    #line 1655 
    break;
    #line 1657 
    case 0: 
            #line 1657 
    ;
    #line 1658 
    printk((char *)"\001");
    #line 1659 
    return;
    #line 1661 
    default: 
             #line 1661 
    ;
    #line 1662 
    _dev_warn(dev,(char *)"no efuse data\n");
    #line 1663 
    return;
  }
  #line 1666 
  memcpy((void *)(& hwinfo),(void *)(& rtlefuse->efuse_map[0][0]),128UL);
  #line 1669 
  _rtl_dbg_print_data(rtlpriv,4ULL,3,(char *)"MAP",(void *)(& hwinfo),128);
  #line 1672 
  eeprom_id = *((u16 *)(hwinfo));
  #line 1673 
  if ((unsigned int)eeprom_id != 33065U) {
    #line 1674 
    _rtl_dbg_trace(rtlpriv,1ULL,2,(char *)"EEPROM ID(%#x) is invalid!!\n",(int)eeprom_id);
    #line 1676 
    rtlefuse->autoload_failflag = (unsigned char)1U;
  }
  else {
    #line 1678 
    _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Autoload OK\n");
    #line 1679 
    rtlefuse->autoload_failflag = (unsigned char)0U;
  }
  #line 1682 
  if ((unsigned int)rtlefuse->autoload_failflag != 0U) 
                                                       #line 1683 
                                                       return;
  #line 1685 
  _rtl8192se_get_ic_inferiority(hw);
  #line 1689 
  rtlefuse->eeprom_vid = *((u16 *)(& hwinfo[10]));
  #line 1690 
  rtlefuse->eeprom_did = *((u16 *)(& hwinfo[12]));
  #line 1691 
  rtlefuse->eeprom_svid = *((u16 *)(& hwinfo[14]));
  #line 1692 
  rtlefuse->eeprom_smid = *((u16 *)(& hwinfo[16]));
  #line 1693 
  rtlefuse->eeprom_version = (unsigned char)*((u16 *)(& hwinfo[124]));
  #line 1695 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"EEPROMId = 0x%4x\n",(int)eeprom_id);
  #line 1697 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"EEPROM VID = 0x%4x\n",(int)rtlefuse->eeprom_vid);
  #line 1699 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"EEPROM DID = 0x%4x\n",(int)rtlefuse->eeprom_did);
  #line 1701 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"EEPROM SVID = 0x%4x\n",(int)rtlefuse->eeprom_svid);
  #line 1703 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"EEPROM SMID = 0x%4x\n",(int)rtlefuse->eeprom_smid);
  #line 1706 
  i = (unsigned short)0U;
  #line 1706 
  while ((unsigned int)i <= 5U) {
    #line 1707 
    usvalue = *((u16 *)(& hwinfo[(int)i + 18]));
    #line 1708 
    *((u16 *)(& rtlefuse->dev_addr[(int)i])) = usvalue;
    #line 1706 
    i = (unsigned short)((unsigned int)i + 2U);
  }
  #line 1711 
  i = (unsigned short)0U;
  #line 1711 
  while ((unsigned int)i <= 5U) {
    #line 1712 
    rtl_write_byte(rtlpriv,(unsigned int)((int)i + 80),(unsigned char)((int)rtlefuse->dev_addr[(int)i]));
    #line 1711 
    i = (u16)((int)i + 1);
  }
  #line 1714 
  _rtl_dbg_trace(rtlpriv,4ULL,3,(char *)"%pM\n",(u8 *)(& rtlefuse->dev_addr));
  #line 1719 
  rf_path = (unsigned char)0U;
  #line 1719 
  while ((unsigned int)rf_path <= 1U) {
    #line 1720 
    i = (unsigned short)0U;
    #line 1720 
    while ((unsigned int)i <= 2U) {
      #line 1722 
      rtlefuse->eeprom_chnlarea_txpwr_cck[(int)rf_path][(int)i] = hwinfo[((int)rf_path * 3 + 80) + (int)i];
      #line 1726 
      rtlefuse->eeprom_chnlarea_txpwr_ht40_1s[(int)rf_path][(int)i] = hwinfo[((int)rf_path * 3 + 86) + (int)i];
      #line 1731 
      rtlefuse->eprom_chnl_txpwr_ht40_2sdf[(int)rf_path][(int)i] = hwinfo[((int)rf_path * 3 + 92) + (int)i];
      #line 1720 
      i = (u16)((int)i + 1);
    }
    #line 1719 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1736 
  rf_path = (unsigned char)0U;
  #line 1736 
  while ((unsigned int)rf_path <= 1U) {
    #line 1737 
    i = (unsigned short)0U;
    #line 1737 
    while ((unsigned int)i <= 2U) {
      #line 1738 
      _rtl_dbg_print(rtlpriv,17ULL,1,(char *)"RF(%d) EEPROM CCK Area(%d) = 0x%x\n",(int)rf_path,(int)i,(int)rtlefuse->eeprom_chnlarea_txpwr_cck[(int)rf_path][(int)i]);
      #line 1737 
      i = (u16)((int)i + 1);
    }
    #line 1736 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1743 
  rf_path = (unsigned char)0U;
  #line 1743 
  while ((unsigned int)rf_path <= 1U) {
    #line 1744 
    i = (unsigned short)0U;
    #line 1744 
    while ((unsigned int)i <= 2U) {
      #line 1745 
      _rtl_dbg_print(rtlpriv,17ULL,1,(char *)"RF(%d) EEPROM HT40 1S Area(%d) = 0x%x\n",(int)rf_path,(int)i,(int)rtlefuse->eeprom_chnlarea_txpwr_ht40_1s[(int)rf_path][(int)i]);
      #line 1744 
      i = (u16)((int)i + 1);
    }
    #line 1743 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1750 
  rf_path = (unsigned char)0U;
  #line 1750 
  while ((unsigned int)rf_path <= 1U) {
    #line 1751 
    i = (unsigned short)0U;
    #line 1751 
    while ((unsigned int)i <= 2U) {
      #line 1752 
      _rtl_dbg_print(rtlpriv,17ULL,1,(char *)"RF(%d) EEPROM HT40 2S Diff Area(%d) = 0x%x\n",(int)rf_path,(int)i,(int)rtlefuse->eprom_chnl_txpwr_ht40_2sdf[(int)rf_path][(int)i]);
      #line 1751 
      i = (u16)((int)i + 1);
    }
    #line 1750 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1758 
  rf_path = (unsigned char)0U;
  #line 1758 
  while ((unsigned int)rf_path <= 1U) {
    #line 1761 
    i = (unsigned short)0U;
    #line 1761 
    while ((unsigned int)i <= 13U) {
      #line 1763 
      if ((unsigned int)i <= 2U) 
                                 #line 1764 
                                 index = (unsigned char)0U;
      else 
        #line 1766 
        if ((unsigned int)i <= 7U) 
                                   #line 1767 
                                   index = (unsigned char)1U; else 
                                                                   #line 1770 
                                                                   index = (unsigned char)2U;
      #line 1774 
      rtlefuse->txpwrlevel_cck[(int)rf_path][(int)i] = rtlefuse->eeprom_chnlarea_txpwr_cck[(int)rf_path][(int)index];
      #line 1777 
      rtlefuse->txpwrlevel_ht40_1s[(int)rf_path][(int)i] = rtlefuse->eeprom_chnlarea_txpwr_ht40_1s[(int)rf_path][(int)index];
      #line 1780 
      rtlefuse->txpwrlevel_ht40_2s[(int)rf_path][(int)i] = rtlefuse->eprom_chnl_txpwr_ht40_2sdf[(int)rf_path][(int)index];
      #line 1761 
      i = (u16)((int)i + 1);
    }
    #line 1785 
    i = (unsigned short)0U;
    #line 1785 
    while ((unsigned int)i <= 13U) {
      #line 1786 
      _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF(%d)-Ch(%d) [CCK / HT40_1S / HT40_2S] = [0x%x / 0x%x / 0x%x]\n",(int)rf_path,(int)i,(int)rtlefuse->txpwrlevel_cck[(int)rf_path][(int)i],(int)rtlefuse->txpwrlevel_ht40_1s[(int)rf_path][(int)i],(int)rtlefuse->txpwrlevel_ht40_2s[(int)rf_path][(int)i]);
      #line 1785 
      i = (u16)((int)i + 1);
    }
    #line 1758 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1795 
  rf_path = (unsigned char)0U;
  #line 1795 
  while ((unsigned int)rf_path <= 1U) {
    #line 1796 
    i = (unsigned short)0U;
    #line 1796 
    while ((unsigned int)i <= 2U) {
      #line 1798 
      rtlefuse->eeprom_pwrgroup[(int)rf_path][(int)i] = hwinfo[((int)rf_path * 3 + 103) + (int)i];
      #line 1796 
      i = (u16)((int)i + 1);
    }
    #line 1795 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1803 
  rf_path = (unsigned char)0U;
  #line 1803 
  while ((unsigned int)rf_path <= 1U) {
    #line 1805 
    i = (unsigned short)0U;
    #line 1805 
    while ((unsigned int)i <= 13U) {
      #line 1807 
      if ((unsigned int)i <= 2U) 
                                 #line 1808 
                                 index = (unsigned char)0U;
      else 
        #line 1810 
        if ((unsigned int)i <= 7U) 
                                   #line 1811 
                                   index = (unsigned char)1U; else 
                                                                   #line 1814 
                                                                   index = (unsigned char)2U;
      #line 1816 
      rtlefuse->pwrgroup_ht20[(int)rf_path][(int)i] = (unsigned char)((unsigned int)rtlefuse->eeprom_pwrgroup[(int)rf_path][(int)index] & 15U);
      #line 1819 
      rtlefuse->pwrgroup_ht40[(int)rf_path][(int)i] = (unsigned char)((int)rtlefuse->eeprom_pwrgroup[(int)rf_path][(int)index] >> 4);
      #line 1823 
      _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF-%d pwrgroup_ht20[%d] = 0x%x\n",(int)rf_path,(int)i,(int)rtlefuse->pwrgroup_ht20[(int)rf_path][(int)i]);
      #line 1827 
      _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF-%d pwrgroup_ht40[%d] = 0x%x\n",(int)rf_path,(int)i,(int)rtlefuse->pwrgroup_ht40[(int)rf_path][(int)i]);
      #line 1805 
      i = (u16)((int)i + 1);
    }
    #line 1803 
    rf_path = (u8)((int)rf_path + 1);
  }
  #line 1834 
  i = (unsigned short)0U;
  #line 1834 
  while ((unsigned int)i <= 13U) {
    #line 1837 
    if ((unsigned int)i <= 2U) 
                               #line 1838 
                               index = (unsigned char)0U;
    else 
      #line 1840 
      if ((unsigned int)i <= 7U) 
                                 #line 1841 
                                 index = (unsigned char)1U; else 
                                                                 #line 1844 
                                                                 index = (unsigned char)2U;
    #line 1846 
    tempval = hwinfo[(int)index + 98];
    #line 1847 
    rtlefuse->txpwr_ht20diff[0][(int)i] = (signed char)((int)((signed char)tempval) & 15);
    #line 1848 
    rtlefuse->txpwr_ht20diff[1][(int)i] = (signed char)((int)tempval >> 4);
    #line 1853 
    if ((unsigned int)i <= 2U) 
                               #line 1854 
                               index = (unsigned char)0U;
    else 
      #line 1856 
      if ((unsigned int)i <= 7U) 
                                 #line 1857 
                                 index = (unsigned char)17U; else 
                                                                  #line 1860 
                                                                  index = (unsigned char)1U;
    #line 1862 
    tempval = hwinfo[(int)index + 101];
    #line 1863 
    rtlefuse->txpwr_legacyhtdiff[0][(int)i] = (signed char)((int)((signed char)tempval) & 15);
    #line 1865 
    rtlefuse->txpwr_legacyhtdiff[1][(int)i] = (signed char)((int)tempval >> 4);
    #line 1868 
    tempval = hwinfo[109];
    #line 1869 
    rtlefuse->txpwr_safetyflag = (unsigned char)((unsigned int)tempval & 1U);
    #line 1834 
    i = (u16)((int)i + 1);
  }
  #line 1872 
  rtlefuse->eeprom_regulatory = (unsigned char)0U;
  #line 1873 
  if ((unsigned int)rtlefuse->eeprom_version > 1U) 
    #line 1875 
    if ((unsigned int)rtlefuse->eeprom_version > 3U) 
                                                     #line 1876 
                                                     rtlefuse->eeprom_regulatory = (unsigned char)((unsigned int)hwinfo[109] & 7U); else 
                                                                    #line 1879 
                                                                    rtlefuse->eeprom_regulatory = (unsigned char)((unsigned int)hwinfo[109] & 1U);
  #line 1882 
  _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"eeprom_regulatory = 0x%x\n",(int)rtlefuse->eeprom_regulatory);
  #line 1885 
  i = (unsigned short)0U;
  #line 1885 
  while ((unsigned int)i <= 13U) {
    #line 1886 
    _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF-A Ht20 to HT40 Diff[%d] = 0x%x\n",(int)i,(int)rtlefuse->txpwr_ht20diff[0][(int)i]);
    #line 1885 
    i = (u16)((int)i + 1);
  }
  #line 1889 
  i = (unsigned short)0U;
  #line 1889 
  while ((unsigned int)i <= 13U) {
    #line 1890 
    _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF-A Legacy to Ht40 Diff[%d] = 0x%x\n",(int)i,(int)rtlefuse->txpwr_legacyhtdiff[0][(int)i]);
    #line 1889 
    i = (u16)((int)i + 1);
  }
  #line 1893 
  i = (unsigned short)0U;
  #line 1893 
  while ((unsigned int)i <= 13U) {
    #line 1894 
    _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF-B Ht20 to HT40 Diff[%d] = 0x%x\n",(int)i,(int)rtlefuse->txpwr_ht20diff[1][(int)i]);
    #line 1893 
    i = (u16)((int)i + 1);
  }
  #line 1897 
  i = (unsigned short)0U;
  #line 1897 
  while ((unsigned int)i <= 13U) {
    #line 1898 
    _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"RF-B Legacy to HT40 Diff[%d] = 0x%x\n",(int)i,(int)rtlefuse->txpwr_legacyhtdiff[1][(int)i]);
    #line 1897 
    i = (u16)((int)i + 1);
  }
  #line 1902 
  _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"TxPwrSafetyFlag = %d\n",(int)rtlefuse->txpwr_safetyflag);
  #line 1907 
  tempval = hwinfo[118];
  #line 1908 
  rtlefuse->eeprom_txpowerdiff = (unsigned short)tempval;
  #line 1909 
  rtlefuse->legacy_httxpowerdiff = (unsigned char)rtlefuse->txpwr_legacyhtdiff[0][0];
  #line 1912 
  _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"TxPowerDiff = %#x\n",(int)rtlefuse->eeprom_txpowerdiff);
  #line 1916 
  usvalue = *((u16 *)(& hwinfo[116]));
  #line 1917 
  rtlefuse->eeprom_tssi[0] = (unsigned char)((int)usvalue >> 8);
  #line 1918 
  usvalue = (unsigned short)hwinfo[117];
  #line 1919 
  rtlefuse->eeprom_tssi[1] = (unsigned char)usvalue;
  #line 1921 
  _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"TSSI_A = 0x%x, TSSI_B = 0x%x\n",(int)rtlefuse->eeprom_tssi[0],(int)rtlefuse->eeprom_tssi[1]);
  #line 1927 
  tempval = hwinfo[119];
  #line 1928 
  rtlefuse->eeprom_thermalmeter = tempval;
  #line 1929 
  _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"thermalmeter = 0x%x\n",(int)rtlefuse->eeprom_thermalmeter);
  #line 1933 
  rtlefuse->thermalmeter[0] = (unsigned char)((unsigned int)rtlefuse->eeprom_thermalmeter & 31U);
  #line 1934 
  rtlefuse->tssi_13dbm = (unsigned short)((unsigned int)((unsigned short)rtlefuse->eeprom_thermalmeter) * 100U);
  #line 1937 
  tempval = (unsigned char)((int)hwinfo[121] >> 4);
  #line 1938 
  rtlefuse->eeprom_crystalcap = tempval;
  #line 1940 
  rtlefuse->crystalcap = rtlefuse->eeprom_crystalcap;
  #line 1944 
  rtlefuse->eeprom_channelplan = (unsigned short)hwinfo[123];
  #line 1945 
  rtlefuse->txpwr_fromeprom = (_Bool)1;
  #line 1946 
  _rtl_dbg_print(rtlpriv,17ULL,2,(char *)"EEPROM ChannelPlan = 0x%4x\n",(int)rtlefuse->eeprom_channelplan);
  #line 1950 
  tempval = hwinfo[126];
  #line 1952 
  if ((unsigned int)tempval == 0U) 
                                   #line 1953 
                                   rtlphy->rf_type = (unsigned char)2U;
  else 
    #line 1954 
    if ((unsigned int)tempval == 1U) 
                                     #line 1955 
                                     rtlphy->rf_type = (unsigned char)1U;
    else 
      #line 1956 
      if ((unsigned int)tempval == 2U) 
                                       #line 1957 
                                       rtlphy->rf_type = (unsigned char)1U;
      else 
        #line 1958 
        if ((unsigned int)tempval == 3U) 
                                         #line 1959 
                                         rtlphy->rf_type = (unsigned char)0U;
  #line 1962 
  rtlefuse->b1x1_recvcombine = (_Bool)0;
  #line 1963 
  if ((unsigned int)rtlphy->rf_type == 1U) {
    #line 1964 
    tempval = rtl_read_byte(rtlpriv,7U);
    #line 1965 
    if (((unsigned long)tempval & 1UL) == 0UL) {
      #line 1966 
      rtlefuse->b1x1_recvcombine = (_Bool)1;
      #line 1967 
      _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"RF_TYPE=1T2R but only 1SS\n");
    }
  }
  #line 1971 
  rtlefuse->b1ss_support = rtlefuse->b1x1_recvcombine;
  #line 1972 
  rtlefuse->eeprom_oemid = hwinfo[122];
  #line 1974 
  _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"EEPROM Customer ID: 0x%2x\n",(int)rtlefuse->eeprom_oemid);
  #line 1978 
  rtlefuse->channel_plan = (unsigned char)11U;
  #line 1979 
  return;
}

#line 1981  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_read_eeprom_info(struct ieee80211_hw *hw)
{
  #line 1983 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 1984 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 1985 
  u8 tmp_u1b = (unsigned char)0U;
  #line 1987 
  tmp_u1b = rtl_read_byte(rtlpriv,10U);
  #line 1989 
  if (((unsigned long)tmp_u1b & 16UL) != 0UL) {
    #line 1990 
    _rtl_dbg_trace(rtlpriv,4ULL,3,(char *)"Boot from EEPROM\n");
    #line 1991 
    rtlefuse->epromtype = (short)0;
  }
  else {
    #line 1993 
    _rtl_dbg_trace(rtlpriv,4ULL,3,(char *)"Boot from EFUSE\n");
    #line 1994 
    rtlefuse->epromtype = (short)2;
  }
  #line 1997 
  if (((unsigned long)tmp_u1b & 32UL) != 0UL) {
    #line 1998 
    _rtl_dbg_trace(rtlpriv,4ULL,4,(char *)"Autoload OK\n");
    #line 1999 
    rtlefuse->autoload_failflag = (unsigned char)0U;
    #line 2000 
    _rtl92se_read_adapter_info(hw);
  }
  else {
    #line 2002 
    printk((char *)"\001");
    #line 2003 
    rtlefuse->autoload_failflag = (unsigned char)1U;
  }
  #line 2005 
  return;
}

#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void rtl92se_update_hal_rate_table(struct ieee80211_hw *hw, struct ieee80211_sta *sta)
{
  #line 2014 
  u32 ratr_value;
  #line 2010 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 2011 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 2012 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 2013 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 2015 
  u8 ratr_index = (unsigned char)0U;
  #line 2016 
  u8 nmode = mac->ht_enable;
  #line 2017 
  u8 mimo_ps = (unsigned char)1U;
  #line 2018 
  u16 shortgi_rate = (unsigned short)0U;
  #line 2019 
  u32 tmp_ratr_value = 0U;
  #line 2020 
  u8 curtxbw_40mhz = mac->bw_40;
  #line 2021 
  u8 curshortgi_40mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 6)) & 1U);
  #line 2023 
  u8 curshortgi_20mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 5)) & 1U);
  #line 2025 
  enum wireless_mode wirelessmode = (enum wireless_mode)mac->mode;
  #line 2027 
  if (rtlhal->current_bandtype == (unsigned int)BAND_ON_5G) 
                                                            #line 2028 
                                                            ratr_value = sta->supp_rates[1] << 4; else 
                                                                    #line 2030 
                                                                    ratr_value = sta->supp_rates[0];
  #line 2031 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
                                                         #line 2032 
                                                         ratr_value = 4095U;
  #line 2033 
  ratr_value = (unsigned int)(((int)sta->ht_cap.mcs.rx_mask[1] << 20) | ((int)sta->ht_cap.mcs.rx_mask[0] << 12)) | ratr_value;
  #line 2035 
  switch ((unsigned int)wirelessmode) {
    #line 2036 
    case (unsigned int)2: 
                          #line 2036 
    ;
    #line 2037 
    ratr_value &= 13U;
    #line 2038 
    break;
    #line 2039 
    case (unsigned int)4: 
                          #line 2039 
    ;
    #line 2040 
    ratr_value &= 4085U;
    #line 2041 
    break;
    #line 2042 
    case (unsigned int)16: 
                           #line 2042 
    ;
    #line 2043 
    case (unsigned int)32: 
                           #line 2043 
    ;
    #line 2044 
    nmode = (unsigned char)1U;
    #line 2045 
    if ((unsigned int)mimo_ps == 2U) 
                                     #line 2046 
                                     ratr_value &= 520197U;
    else {
      #line 2048 
      u32 ratr_mask;
      #line 2050 
      if ((unsigned int)get_rf_type(rtlphy) == 1U) 
                                                   #line 2050 
                                                   goto _LOR;
      else {
        #line 2050 
        if ((unsigned int)get_rf_type(rtlphy) == 0U) 
          #line 2050 
          _LOR: 
                #line 2052 
                if ((unsigned int)curtxbw_40mhz != 0U) 
                                                       #line 2053 
                                                       ratr_mask = 1044501U; else 
                                                                    #line 2055 
                                                                    ratr_mask = 1044485U;
        else 
          #line 2057 
          if ((unsigned int)curtxbw_40mhz != 0U) 
                                                 #line 2058 
                                                 ratr_mask = 252702741U; else 
                                                                    #line 2060 
                                                                    ratr_mask = 252702725U;
      }
      #line 2063 
      ratr_value &= ratr_mask;
    }
    #line 2065 
    break;
    #line 2066 
    default: 
             #line 2066 
    ;
    #line 2067 
    if ((unsigned int)rtlphy->rf_type == 1U) 
                                             #line 2068 
                                             ratr_value &= 1044735U; else 
                                                                    #line 2070 
                                                                    ratr_value &= 252702975U;
    #line 2072 
    break;
  }
  #line 2075 
  if (rtlpriv->rtlhal.version != 0U) 
                                     #line 2076 
                                     ratr_value &= 268435455U;
  else 
    #line 2077 
    if (rtlpriv->rtlhal.version == 0U) 
                                       #line 2078 
                                       ratr_value &= 268435440U;
  #line 2080 
  if ((unsigned int)nmode != 0U && ((unsigned int)curtxbw_40mhz != 0U && (unsigned int)curshortgi_40mhz != 0U || (unsigned int)curtxbw_40mhz == 0U && (unsigned int)curshortgi_20mhz != 0U)) {
    #line 2084 
    ratr_value |= 268435456U;
    #line 2085 
    tmp_ratr_value = ratr_value >> 12;
    #line 2087 
    shortgi_rate = (unsigned short)15U;
    #line 2087 
    while ((unsigned int)shortgi_rate != 0U) {
      #line 2088 
      if (((unsigned int)(1 << (int)shortgi_rate) & tmp_ratr_value) != 0U) 
        #line 2089 
        break;
      #line 2087 
      shortgi_rate = (u16)((int)shortgi_rate - 1);
    }
    #line 2092 
    shortgi_rate = (unsigned short)(((((int)shortgi_rate << 12) | ((int)shortgi_rate << 8)) | ((int)shortgi_rate << 4)) | (int)shortgi_rate);
    #line 2095 
    rtl_write_byte(rtlpriv,502U,(unsigned char)((int)((unsigned char)shortgi_rate)));
  }
  #line 2098 
  rtl_write_dword(rtlpriv,(unsigned int)(((int)ratr_index + 97) * 4),ratr_value);
  #line 2099 
  if ((ratr_value & 4294963200U) != 0U) 
                                        #line 2100 
                                        rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_RA_REFRESH_N); else 
                                                                    #line 2102 
                                                                    rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_RA_REFRESH_BG);
  #line 2104 
  ;
  #line 2104 
  _rtl_dbg_trace(rtlpriv,4194304ULL,3,(char *)"%x\n",rtl_read_dword(rtlpriv,388U));
  #line 2105 
  return;
}

#line 2108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
static void rtl92se_update_hal_rate_mask(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 rssi_level, bool update_bw)
{
  #line 2117 
  u32 ratr_bitmap;
  #line 2257 
  int tmp;
  #line 2112 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 2113 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 2114 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 2115 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 2116 
  struct rtl_sta_info *sta_entry = (struct rtl_sta_info *)0;
  #line 2118 
  u8 ratr_index = (unsigned char)0U;
  #line 2119 
  u8 curtxbw_40mhz = (unsigned char)(sta->bandwidth != (unsigned int)IEEE80211_STA_RX_BW_20);
  #line 2120 
  u8 curshortgi_40mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 6)) & 1U);
  #line 2122 
  u8 curshortgi_20mhz = (unsigned char)((unsigned int)((unsigned char)((int)sta->ht_cap.cap >> 5)) & 1U);
  #line 2124 
  enum wireless_mode wirelessmode = WIRELESS_MODE_UNKNOWN;
  #line 2125 
  bool shortgi = (_Bool)0;
  #line 2126 
  u32 ratr_value = 0U;
  #line 2127 
  u8 shortgi_rate = (unsigned char)0U;
  #line 2128 
  u32 mask = 0U;
  #line 2129 
  u32 band = 0U;
  #line 2130 
  bool bmulticast = (_Bool)0;
  #line 2131 
  u8 macid = (unsigned char)0U;
  #line 2132 
  u8 mimo_ps = (unsigned char)1U;
  #line 2134 
  sta_entry = (struct rtl_sta_info *)(& sta->drv_priv);
  #line 2135 
  wirelessmode = (enum wireless_mode)sta_entry->wireless_mode;
  #line 2136 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_STATION) 
                                                           #line 2137 
                                                           curtxbw_40mhz = mac->bw_40;
  else 
    #line 2138 
    if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP || mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
      #line 2140 
      macid = (unsigned char)((unsigned int)((unsigned char)sta->aid) + 1U);
  #line 2142 
  if (rtlhal->current_bandtype == (unsigned int)BAND_ON_5G) 
                                                            #line 2143 
                                                            ratr_bitmap = sta->supp_rates[1] << 4; else 
                                                                    #line 2145 
                                                                    ratr_bitmap = sta->supp_rates[0];
  #line 2146 
  if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
                                                         #line 2147 
                                                         ratr_bitmap = 4095U;
  #line 2148 
  ratr_bitmap = (unsigned int)(((int)sta->ht_cap.mcs.rx_mask[1] << 20) | ((int)sta->ht_cap.mcs.rx_mask[0] << 12)) | ratr_bitmap;
  #line 2150 
  switch ((unsigned int)wirelessmode) {
    #line 2151 
    case (unsigned int)2: 
                          #line 2151 
    ;
    #line 2152 
    band |= 1U;
    #line 2153 
    ratr_index = (unsigned char)6U;
    #line 2154 
    if ((ratr_bitmap & 12U) != 0U) 
                                   #line 2155 
                                   ratr_bitmap &= 13U; else 
                                                            #line 2157 
                                                            ratr_bitmap &= 15U;
    #line 2158 
    break;
    #line 2159 
    case (unsigned int)4: 
                          #line 2159 
    ;
    #line 2160 
    band |= 3U;
    #line 2161 
    ratr_index = (unsigned char)4U;
    #line 2163 
    if ((unsigned int)rssi_level == 1U) 
                                        #line 2164 
                                        ratr_bitmap &= 3840U;
    else 
      #line 2165 
      if ((unsigned int)rssi_level == 2U) 
                                          #line 2166 
                                          ratr_bitmap &= 4080U; else 
                                                                  #line 2168 
                                                                  ratr_bitmap &= 4085U;
    #line 2169 
    break;
    #line 2170 
    case (unsigned int)1: 
                          #line 2170 
    ;
    #line 2171 
    band |= 4U;
    #line 2172 
    ratr_index = (unsigned char)8U;
    #line 2173 
    ratr_bitmap &= 4080U;
    #line 2174 
    break;
    #line 2175 
    case (unsigned int)16: 
                           #line 2175 
    ;
    #line 2176 
    case (unsigned int)32: 
                           #line 2176 
    ;
    #line 2177 
    band |= 11U;
    #line 2178 
    ratr_index = (unsigned char)0U;
    #line 2180 
    if ((unsigned int)mimo_ps == 2U) 
      #line 2181 
      if ((unsigned int)rssi_level == 1U) 
                                          #line 2182 
                                          ratr_bitmap &= 458752U;
      else 
        #line 2183 
        if ((unsigned int)rssi_level == 2U) 
                                            #line 2184 
                                            ratr_bitmap &= 520192U; else 
                                                                    #line 2186 
                                                                    ratr_bitmap &= 520197U;
    else 
      #line 2188 
      if ((unsigned int)rtlphy->rf_type <= 1U) 
        #line 2190 
        if ((unsigned int)rssi_level == 1U) 
                                            #line 2191 
                                            ratr_bitmap &= 983040U;
        else 
          #line 2192 
          if ((unsigned int)rssi_level == 3U) 
                                              #line 2193 
                                              ratr_bitmap &= 1032192U;
          else 
            #line 2194 
            if ((unsigned int)rssi_level == 5U) 
                                                #line 2195 
                                                ratr_bitmap &= 1044480U;
            else 
              #line 2197 
              if ((unsigned int)curtxbw_40mhz != 0U) 
                                                     #line 2198 
                                                     ratr_bitmap &= 1044501U; else 
                                                                    #line 2200 
                                                                    ratr_bitmap &= 1044485U;
      else 
        #line 2203 
        if ((unsigned int)rssi_level == 1U) 
                                            #line 2204 
                                            ratr_bitmap &= 261029888U;
        else 
          #line 2205 
          if ((unsigned int)rssi_level == 3U) 
                                              #line 2206 
                                              ratr_bitmap &= 261079040U;
          else 
            #line 2207 
            if ((unsigned int)rssi_level == 5U) 
                                                #line 2208 
                                                ratr_bitmap &= 261091328U;
            else 
              #line 2210 
              if ((unsigned int)curtxbw_40mhz != 0U) 
                                                     #line 2211 
                                                     ratr_bitmap &= 261091349U; else 
                                                                    #line 2213 
                                                                    ratr_bitmap &= 261091333U;
    #line 2218 
    if ((unsigned int)curtxbw_40mhz != 0U && (unsigned int)curshortgi_40mhz != 0U || (unsigned int)curtxbw_40mhz == 0U && (unsigned int)curshortgi_20mhz != 0U) 
      #line 2220 
      if ((unsigned int)macid == 0U) 
                                     #line 2221 
                                     shortgi = (_Bool)1;
      else 
        #line 2222 
        if ((unsigned int)macid == 1U) 
                                       #line 2223 
                                       shortgi = (_Bool)0;
    #line 2225 
    break;
    #line 2226 
    default: 
             #line 2226 
    ;
    #line 2227 
    band |= 11U;
    #line 2228 
    ratr_index = (unsigned char)0U;
    #line 2230 
    if ((unsigned int)rtlphy->rf_type == 1U) 
                                             #line 2231 
                                             ratr_bitmap &= 1044735U; else 
                                                                    #line 2233 
                                                                    ratr_bitmap &= 261091583U;
    #line 2234 
    break;
  }
  #line 2236 
  sta_entry->ratr_index = ratr_index;
  #line 2238 
  if (rtlpriv->rtlhal.version != 0U) 
                                     #line 2239 
                                     ratr_bitmap &= 268435455U;
  else 
    #line 2240 
    if (rtlpriv->rtlhal.version == 0U) 
                                       #line 2241 
                                       ratr_bitmap &= 268435440U;
  #line 2243 
  if ((int)shortgi != 0) {
    #line 2244 
    ratr_bitmap |= 268435456U;
    #line 2246 
    ratr_value = ratr_bitmap >> 12;
    #line 2247 
    shortgi_rate = (unsigned char)15U;
    #line 2247 
    while ((unsigned int)shortgi_rate != 0U) {
      #line 2248 
      if (((unsigned int)(1 << (int)shortgi_rate) & ratr_value) != 0U) 
        #line 2249 
        break;
      #line 2247 
      shortgi_rate = (u8)((int)shortgi_rate - 1);
    }
    #line 2252 
    shortgi_rate = (unsigned char)(((((int)shortgi_rate << 12) | ((int)shortgi_rate << 8)) | ((int)shortgi_rate << 4)) | (int)shortgi_rate);
    #line 2254 
    rtl_write_byte(rtlpriv,502U,(unsigned char)((int)shortgi_rate));
  }
  #line 2257 
  if ((int)bmulticast != 0) 
                            #line 2257 
                            tmp = 512; else 
                                            #line 2257 
                                            tmp = 0;
  #line 2257 
  mask = ((unsigned int)(tmp | (((int)macid << 4) & 496)) | (band & 15U)) | mask;
  #line 2259 
  _rtl_dbg_trace(rtlpriv,4194304ULL,5,(char *)"mask = %x, bitmap = %x\n",mask,ratr_bitmap);
  #line 2261 
  rtl_write_dword(rtlpriv,708U,ratr_bitmap);
  #line 2262 
  rtl_write_dword(rtlpriv,704U,(mask << 8) | 4244635810U);
  #line 2264 
  if ((unsigned int)macid != 0U) 
                                 #line 2265 
                                 sta_entry->ratr_index = ratr_index;
  #line 2266 
  return;
}

#line 2268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_update_hal_rate_tbl(struct ieee80211_hw *hw, struct ieee80211_sta *sta, u8 rssi_level, bool update_bw)
{
  #line 2271 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 2273 
  if ((int)rtlpriv->dm.useramask != 0) 
                                       #line 2274 
                                       rtl92se_update_hal_rate_mask(hw,sta,(unsigned char)((int)rssi_level),(_Bool)((bool)((int)update_bw) != 0)); else 
                                                                    #line 2276 
                                                                    rtl92se_update_hal_rate_table(hw,sta);
  #line 2277 
  return;
}

#line 2279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_update_channel_access_setting(struct ieee80211_hw *hw)
{
  #line 2283 
  u16 sifs_timer;
  #line 2281 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 2282 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 2285 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)18,& mac->slot_time);
  #line 2287 
  sifs_timer = (unsigned short)3598U;
  #line 2288 
  (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)14,(u8 *)(& sifs_timer));
  #line 2289 
  return;
}

#line 2295  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
bool rtl92se_gpio_radio_on_off_checking(struct ieee80211_hw *hw, u8 *valid)
{
  #line 2300 
  enum rf_pwrstate rfpwr_toset;
  #line 2297 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 2298 
  struct rtl_ps_ctl *ppsc = & ((struct rtl_priv *)hw->priv)->psc;
  #line 2299 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 2301 
  unsigned long flag = 0UL;
  #line 2302 
  bool actuallyset = (_Bool)0;
  #line 2303 
  bool turnonbypowerdomain = (_Bool)0;
  #line 2306 
  if ((int)rtlpci->up_first_time == 1 || (int)rtlpci->being_init_adapter != 0) 
    #line 2307 
    return (_Bool)0;
  #line 2309 
  if ((int)ppsc->swrf_processing != 0) 
                                       #line 2310 
                                       return (_Bool)0;
  #line 2312 
  cif___ldv_spin_lock_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock);
  #line 2313 
  if ((int)ppsc->rfchange_inprogress != 0) {
    #line 2314 
    cif_spin_unlock_irqrestore_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock,flag);
    #line 2315 
    return (_Bool)0;
  }
  else {
    #line 2317 
    ppsc->rfchange_inprogress = (_Bool)1;
    #line 2318 
    cif_spin_unlock_irqrestore_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock,flag);
  }
  #line 2327 
  if ((int)((unsigned long)ppsc->cur_ps_level >> 3) & 1) {
    #line 2328 
    _rtl92se_power_domain_init(hw);
    #line 2329 
    turnonbypowerdomain = (_Bool)1;
  }
  #line 2332 
  rfpwr_toset = (enum rf_pwrstate)_rtl92se_rf_onoff_detect(hw);
  #line 2334 
  if ((int)ppsc->hwradiooff != 0 && rfpwr_toset == (unsigned int)ERFON) {
    #line 2335 
    _rtl_dbg_trace(rtlpriv,1048576ULL,3,(char *)"RFKILL-HW Radio ON, RF ON\n");
    #line 2338 
    rfpwr_toset = ERFON;
    #line 2339 
    ppsc->hwradiooff = (_Bool)0;
    #line 2340 
    actuallyset = (_Bool)1;
  }
  else 
    #line 2341 
    if (! ppsc->hwradiooff && rfpwr_toset == (unsigned int)ERFOFF) {
      #line 2342 
      _rtl_dbg_trace(rtlpriv,1048576ULL,3,(char *)"RFKILL-HW Radio OFF, RF OFF\n");
      #line 2345 
      rfpwr_toset = ERFOFF;
      #line 2346 
      ppsc->hwradiooff = (_Bool)1;
      #line 2347 
      actuallyset = (_Bool)1;
    }
  #line 2350 
  if ((int)actuallyset != 0) {
    #line 2351 
    cif___ldv_spin_lock_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock);
    #line 2352 
    ppsc->rfchange_inprogress = (_Bool)0;
    #line 2353 
    cif_spin_unlock_irqrestore_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock,flag);
  }
  else {
    #line 2363 
    if (((unsigned long)ppsc->reg_rfps_level & 8UL) != 0UL && (int)turnonbypowerdomain != 0) {
      #line 2365 
      _rtl92s_phy_set_rfhalt(hw);
      #line 2366 
      ppsc->cur_ps_level |= 8U;
    }
    #line 2369 
    cif___ldv_spin_lock_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock);
    #line 2370 
    ppsc->rfchange_inprogress = (_Bool)0;
    #line 2371 
    cif_spin_unlock_irqrestore_rf_ps_lock_of_rtl_locks(& rtlpriv->locks.rf_ps_lock,flag);
  }
  #line 2374 
  *valid = (unsigned char)1U;
  #line 2375 
  return (_Bool)(! ((int)ppsc->hwradiooff != 0));
}

#line 2381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_set_key(struct ieee80211_hw *hw, u32 key_index, u8 *p_macaddr, bool is_group, u8 enc_algo, bool is_wepkey, bool clear_all)
{
  #line 2384 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 2385 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 2386 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 2387 
  u8 *macaddr = p_macaddr;
  #line 2389 
  u32 entry_id = 0U;
  #line 2390 
  bool is_pairwise = (_Bool)0;
  #line 2392 
  u8 cam_const_addr[4U][6U] = {{(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)1U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)2U}, {(unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)3U}};
  #line 2398 
  u8 cam_const_broad[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};
  #line 2402 
  if ((int)clear_all != 0) {
    #line 2403 
    u8 idx = (unsigned char)0U;
    #line 2404 
    u8 cam_offset = (unsigned char)0U;
    #line 2405 
    u8 clear_number = (unsigned char)5U;
    #line 2407 
    _rtl_dbg_trace(rtlpriv,512ULL,3,(char *)"clear_all\n");
    #line 2409 
    idx = (unsigned char)0U;
    #line 2409 
    while ((int)idx < (int)clear_number) {
      #line 2410 
      rtl_cam_mark_invalid(hw,(unsigned char)((int)cam_offset + (int)idx));
      #line 2411 
      rtl_cam_empty_entry(hw,(unsigned char)((int)cam_offset + (int)idx));
      #line 2413 
      if ((unsigned int)idx <= 4U) {
        #line 2414 
        memset((void *)(& rtlpriv->sec.key_buf[(int)idx]),0,61UL);
        #line 2416 
        rtlpriv->sec.key_len[(int)idx] = (unsigned char)0U;
      }
      #line 2409 
      idx = (u8)((int)idx + 1);
    }
  }
  else {
    #line 2421 
    switch ((int)enc_algo) {
      #line 2422 
      case 1: 
              #line 2422 
      ;
      #line 2423 
      enc_algo = (unsigned char)1U;
      #line 2424 
      break;
      #line 2425 
      case 5: 
              #line 2425 
      ;
      #line 2426 
      enc_algo = (unsigned char)5U;
      #line 2427 
      break;
      #line 2428 
      case 2: 
              #line 2428 
      ;
      #line 2429 
      enc_algo = (unsigned char)2U;
      #line 2430 
      break;
      #line 2431 
      case 4: 
              #line 2431 
      ;
      #line 2432 
      enc_algo = (unsigned char)4U;
      #line 2433 
      break;
      #line 2434 
      default: 
               #line 2434 
      ;
      #line 2435 
      printk((char *)"\001",(int)enc_algo);
      #line 2437 
      enc_algo = (unsigned char)2U;
      #line 2438 
      break;
    }
    #line 2441 
    if ((int)is_wepkey != 0 || (int)rtlpriv->sec.use_defaultkey != 0) {
      #line 2442 
      macaddr = (u8 *)(& cam_const_addr[key_index]);
      #line 2443 
      entry_id = key_index;
    }
    else 
      #line 2445 
      if ((int)is_group != 0) {
        #line 2446 
        macaddr = (u8 *)(& cam_const_broad);
        #line 2447 
        entry_id = key_index;
      }
      else {
        #line 2449 
        if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP) {
          #line 2450 
          entry_id = (unsigned int)rtl_cam_get_free_entry(hw,p_macaddr);
          #line 2452 
          if (entry_id > 31U) {
            #line 2453 
            printk((char *)"\001");
            #line 2454 
            return;
          }
        }
        else 
             #line 2457 
             entry_id = 4U;
        #line 2460 
        key_index = 0U;
        #line 2461 
        is_pairwise = (_Bool)1;
      }
    #line 2465 
    if ((unsigned int)rtlpriv->sec.key_len[key_index] == 0U) {
      #line 2466 
      _rtl_dbg_trace(rtlpriv,512ULL,3,(char *)"delete one entry, entry_id is %d\n",entry_id);
      #line 2469 
      if (mac->opmode == (unsigned int)NL80211_IFTYPE_AP) 
                                                          #line 2470 
                                                          rtl_cam_del_entry(hw,p_macaddr);
      #line 2471 
      rtl_cam_delete_one_entry(hw,p_macaddr,entry_id);
    }
    else {
      #line 2473 
      _rtl_dbg_trace(rtlpriv,512ULL,3,(char *)"add one entry\n");
      #line 2475 
      if ((int)is_pairwise != 0) {
        #line 2476 
        _rtl_dbg_trace(rtlpriv,512ULL,3,(char *)"set Pairwise key\n");
        #line 2479 
        rtl_cam_add_one_entry(hw,macaddr,key_index,entry_id,(unsigned int)enc_algo,0U,(u8 *)(& rtlpriv->sec.key_buf[key_index]));
      }
      else {
        #line 2484 
        _rtl_dbg_trace(rtlpriv,512ULL,3,(char *)"set group key\n");
        #line 2487 
        if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
                                                               #line 2488 
                                                               rtl_cam_add_one_entry(hw,(u8 *)(& rtlefuse->dev_addr),0U,4U,(unsigned int)enc_algo,0U,(u8 *)(& rtlpriv->sec.key_buf[entry_id]));
        #line 2496 
        rtl_cam_add_one_entry(hw,macaddr,key_index,entry_id,(unsigned int)enc_algo,0U,(u8 *)(& rtlpriv->sec.key_buf[entry_id]));
      }
    }
  }
  #line 2503 
  return;
}

#line 2506  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_suspend(struct ieee80211_hw *hw)
{
  #line 2508 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 2510 
  rtlpci->up_first_time = (_Bool)1;
  #line 2511 
  return;
}

#line 2513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/hw.c"
void rtl92se_resume(struct ieee80211_hw *hw)
{
  #line 2516 
  u32 val;
  #line 2515 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 2518 
  pci_read_config_dword(rtlpci->pdev,64,& val);
  #line 2519 
  if ((val & 65280U) != 0U) 
                            #line 2520 
                            pci_write_config_dword(rtlpci->pdev,64,val & 4294902015U);
  #line 2522 
  return;
}

#line 782  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/hw.i.aux"
static void cif___ldv_spin_lock_rf_ps_lock_of_rtl_locks(spinlock_t *lock)
{
  #line 785 
  ldv_spin_model_lock((char *)"rf_ps_lock_of_rtl_locks");
  #line 787 
  __ldv_spin_lock(lock);
  #line 788 
  return;
}

#line 791  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/hw.i.aux"
static void cif_spin_unlock_irqrestore_rf_ps_lock_of_rtl_locks(spinlock_t *lock, unsigned long flags)
{
  #line 794 
  ldv_spin_model_unlock((char *)"rf_ps_lock_of_rtl_locks");
  #line 796 
  spin_unlock_irqrestore_0(lock,flags);
  #line 797 
  return;
}

#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
static void _rtl92s_get_powerbase(struct ieee80211_hw *hw, u8 *p_pwrlevel, u8 chnl, u32 *ofdmbase, u32 *mcsbase, u8 *p_final_pwridx)
{
  #line 19 
  u32 pwrbase0;
  #line 19 
  u32 pwrbase1;
  #line 21 
  u8 i;
  #line 21 
  u8 pwrlevel[4U];
  #line 16 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 17 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 18 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 20 
  u8 legacy_pwrdiff = (unsigned char)0U;
  #line 20 
  u8 ht20_pwrdiff = (unsigned char)0U;
  #line 23 
  i = (unsigned char)0U;
  #line 23 
  while ((unsigned int)i <= 1U) {
    #line 24 
    pwrlevel[(int)i] = *(p_pwrlevel + (unsigned long)i);
    #line 23 
    i = (u8)((int)i + 1);
  }
  #line 27 
  if ((unsigned int)rtlefuse->eeprom_version <= 1U) 
                                                    #line 28 
                                                    pwrbase0 = (unsigned int)((int)pwrlevel[0] + ((int)rtlefuse->legacy_httxpowerdiff & 15));
  else {
    #line 30 
    legacy_pwrdiff = (unsigned char)rtlefuse->txpwr_legacyhtdiff[0][(int)chnl + -1];
    #line 37 
    pwrbase0 = (unsigned int)((int)pwrlevel[0] + (int)legacy_pwrdiff);
  }
  #line 40 
  pwrbase0 = (((pwrbase0 << 24) | (pwrbase0 << 16)) | (pwrbase0 << 8)) | pwrbase0;
  #line 42 
  *ofdmbase = pwrbase0;
  #line 45 
  if ((unsigned int)rtlefuse->eeprom_version > 1U) 
    #line 47 
    if ((unsigned int)rtlphy->current_chan_bw == 0U) {
      #line 48 
      i = (unsigned char)0U;
      #line 48 
      while ((unsigned int)i <= 1U) {
        #line 51 
        ht20_pwrdiff = (unsigned char)rtlefuse->txpwr_ht20diff[(int)i][(int)chnl + -1];
        #line 54 
        if ((unsigned int)ht20_pwrdiff <= 7U) 
                                              #line 55 
                                              pwrlevel[(int)i] = (unsigned char)((int)pwrlevel[(int)i] + (int)ht20_pwrdiff); else 
                                                                    #line 57 
                                                                    pwrlevel[(int)i] = (unsigned char)((unsigned int)((int)pwrlevel[(int)i] + (int)ht20_pwrdiff) + 240U);
        #line 48 
        i = (u8)((int)i + 1);
      }
    }
  #line 63 
  pwrbase1 = (unsigned int)pwrlevel[0];
  #line 64 
  pwrbase1 = (((pwrbase1 << 24) | (pwrbase1 << 16)) | (pwrbase1 << 8)) | pwrbase1;
  #line 66 
  *mcsbase = pwrbase1;
  #line 70 
  *p_final_pwridx = pwrlevel[0];
  #line 71 
  *(p_final_pwridx + 1U) = pwrlevel[1];
  #line 73 
  switch ((int)rtlefuse->eeprom_regulatory) {
    #line 74 
    case 3: 
            #line 74 
    ;
    #line 77 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) {
      #line 78 
      *p_final_pwridx = (unsigned char)((int)*p_final_pwridx + (int)rtlefuse->pwrgroup_ht40[0][(int)chnl + -1]);
      #line 81 
      *(p_final_pwridx + 1U) = (unsigned char)((int)*(p_final_pwridx + 1U) + (int)rtlefuse->pwrgroup_ht40[1][(int)chnl + -1]);
    }
    else {
      #line 85 
      *p_final_pwridx = (unsigned char)((int)*p_final_pwridx + (int)rtlefuse->pwrgroup_ht20[0][(int)chnl + -1]);
      #line 88 
      *(p_final_pwridx + 1U) = (unsigned char)((int)*(p_final_pwridx + 1U) + (int)rtlefuse->pwrgroup_ht20[1][(int)chnl + -1]);
    }
    #line 92 
    break;
    #line 93 
    default: 
             #line 93 
    ;
    #line 94 
    break;
  }
  #line 97 
  if ((unsigned int)rtlphy->current_chan_bw == 1U) 
                                                   #line 98 
                                                   _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"40MHz finalpwr_idx (A / B) = 0x%x / 0x%x\n",(int)*p_final_pwridx,(int)*(p_final_pwridx + 1U)); else 
                                                                    #line 102 
                                                                    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"20MHz finalpwr_idx (A / B) = 0x%x / 0x%x\n",(int)*p_final_pwridx,(int)*(p_final_pwridx + 1U));
  #line 103 
  return;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
static void _rtl92s_set_antennadiff(struct ieee80211_hw *hw, u8 *p_final_pwridx)
{
  #line 111 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 112 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 113 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 114 
  s8 ant_pwr_diff = (signed char)0;
  #line 115 
  u32 u4reg_val = 0U;
  #line 117 
  if ((unsigned int)rtlphy->rf_type == 2U) {
    #line 118 
    ant_pwr_diff = (signed char)((int)*(p_final_pwridx + 1U) - (int)*p_final_pwridx);
    #line 122 
    if ((int)ant_pwr_diff > 7) 
                               #line 123 
                               ant_pwr_diff = (signed char)7;
    #line 124 
    if ((int)ant_pwr_diff < -8) 
                                #line 125 
                                ant_pwr_diff = (signed char)(-8);
    #line 127 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Antenna Diff from RF-B to RF-A = %d (0x%x)\n",(int)ant_pwr_diff,(int)ant_pwr_diff & 15);
    #line 131 
    ant_pwr_diff = (signed char)((int)ant_pwr_diff & 15);
  }
  #line 135 
  rtlefuse->antenna_txpwdiff[2] = (unsigned char)0U;
  #line 136 
  rtlefuse->antenna_txpwdiff[1] = (unsigned char)0U;
  #line 137 
  rtlefuse->antenna_txpwdiff[0] = (unsigned char)ant_pwr_diff;
  #line 139 
  u4reg_val = (unsigned int)((((int)rtlefuse->antenna_txpwdiff[2] << 8) | ((int)rtlefuse->antenna_txpwdiff[1] << 4)) | (int)rtlefuse->antenna_txpwdiff[0]);
  #line 143 
  rtl_set_bbreg(hw,2060U,1048320U,u4reg_val);
  #line 146 
  _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Write BCD-Diff(0x%x) = 0x%x\n",2060,u4reg_val);
  #line 147 
  return;
}

#line 150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
static void _rtl92s_get_txpower_writeval_byregulatory(struct ieee80211_hw *hw, u8 chnl, u8 index, u32 pwrbase0, u32 pwrbase1, u32 *p_outwrite_val)
{
  #line 159 
  u8 i;
  #line 159 
  u8 chnlgroup;
  #line 159 
  u8 pwrdiff_limit[4U];
  #line 160 
  u32 writeval;
  #line 160 
  u32 customer_limit;
  #line 156 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 157 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 158 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 163 
  switch ((int)rtlefuse->eeprom_regulatory) {
    #line 169 
    u32 tmp;
    #line 262 
    u32 tmp_1;
    #line 269 
    u32 tmp_2;
    #line 164 
    case 0: 
            #line 164 
    ;
    #line 167 
    chnlgroup = (unsigned char)0U;
    #line 169 
    if ((unsigned int)index <= 1U) 
                                   #line 169 
                                   tmp = pwrbase0; else 
                                                        #line 169 
                                                        tmp = pwrbase1;
    #line 169 
    writeval = rtlphy->mcs_offset[(int)chnlgroup][(int)index] + tmp;
    #line 172 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"RTK better performance, writeval = 0x%x\n",writeval);
    #line 174 
    break;
    #line 175 
    case 1: 
            #line 175 
    ;
    #line 178 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) {
      #line 179 
      if ((unsigned int)index <= 1U) 
                                     #line 179 
                                     writeval = pwrbase0; else 
                                                               #line 179 
                                                               writeval = pwrbase1;
      #line 181 
      _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Realtek regulatory, 40MHz, writeval = 0x%x\n",writeval);
    }
    else {
      #line 199 
      u32 tmp_0;
      #line 185 
      chnlgroup = (unsigned char)0U;
      #line 187 
      if ((unsigned int)rtlphy->pwrgroup_cnt > 2U) {
        #line 188 
        if ((unsigned int)chnl <= 3U) 
                                      #line 189 
                                      chnlgroup = (unsigned char)0U;
        else 
          #line 190 
          if ((unsigned int)chnl + 252U <= 4U) 
                                               #line 191 
                                               chnlgroup = (unsigned char)1U;
          else 
            #line 192 
            if ((unsigned int)chnl > 8U) 
                                         #line 193 
                                         chnlgroup = (unsigned char)2U;
        #line 194 
        if ((unsigned int)rtlphy->pwrgroup_cnt == 4U) 
                                                      #line 195 
                                                      chnlgroup = (u8)((int)chnlgroup + 1);
      }
      #line 199 
      if ((unsigned int)index <= 1U) 
                                     #line 199 
                                     tmp_0 = pwrbase0; else 
                                                            #line 199 
                                                            tmp_0 = pwrbase1;
      #line 198 
      writeval = rtlphy->mcs_offset[(int)chnlgroup][(int)index] + tmp_0;
      #line 202 
      _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Realtek regulatory, 20MHz, writeval = 0x%x\n",writeval);
    }
    #line 206 
    break;
    #line 207 
    case 2: 
            #line 207 
    ;
    #line 209 
    if ((unsigned int)index <= 1U) 
                                   #line 209 
                                   writeval = pwrbase0; else 
                                                             #line 209 
                                                             writeval = pwrbase1;
    #line 210 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Better regulatory, writeval = 0x%x\n",writeval);
    #line 212 
    break;
    #line 213 
    case 3: 
            #line 213 
    ;
    #line 216 
    chnlgroup = (unsigned char)0U;
    #line 218 
    if ((unsigned int)rtlphy->current_chan_bw == 1U) 
                                                     #line 219 
                                                     _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"customer\'s limit, 40MHz = 0x%x\n",(int)rtlefuse->pwrgroup_ht40[0][(int)chnl + -1]); else 
                                                                    #line 224 
                                                                    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"customer\'s limit, 20MHz = 0x%x\n",(int)rtlefuse->pwrgroup_ht20[0][(int)chnl + -1]);
    #line 230 
    i = (unsigned char)0U;
    #line 230 
    while ((unsigned int)i <= 3U) {
      #line 231 
      pwrdiff_limit[(int)i] = (unsigned char)((rtlphy->mcs_offset[(int)chnlgroup][(int)index] & (unsigned int)(127 << (int)i * 8)) >> (int)i * 8);
      #line 235 
      if ((unsigned int)rtlphy->current_chan_bw == 1U) {
        #line 237 
        if ((int)pwrdiff_limit[(int)i] > (int)rtlefuse->pwrgroup_ht40[0][(int)chnl + -1]) 
          #line 240 
          pwrdiff_limit[(int)i] = rtlefuse->pwrgroup_ht40[0][(int)chnl + -1];
      }
      else 
        #line 245 
        if ((int)pwrdiff_limit[(int)i] > (int)rtlefuse->pwrgroup_ht20[0][(int)chnl + -1]) 
          #line 248 
          pwrdiff_limit[(int)i] = rtlefuse->pwrgroup_ht20[0][(int)chnl + -1];
      #line 230 
      i = (u8)((int)i + 1);
    }
    #line 255 
    customer_limit = (unsigned int)(((((int)pwrdiff_limit[3] << 24) | ((int)pwrdiff_limit[2] << 16)) | ((int)pwrdiff_limit[1] << 8)) | (int)pwrdiff_limit[0]);
    #line 259 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Customer\'s limit = 0x%x\n",customer_limit);
    #line 262 
    if ((unsigned int)index <= 1U) 
                                   #line 262 
                                   tmp_1 = pwrbase0; else 
                                                          #line 262 
                                                          tmp_1 = pwrbase1;
    #line 262 
    writeval = tmp_1 + customer_limit;
    #line 264 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"Customer, writeval = 0x%x\n",writeval);
    #line 266 
    break;
    #line 267 
    default: 
             #line 267 
    ;
    #line 268 
    chnlgroup = (unsigned char)0U;
    #line 269 
    if ((unsigned int)index <= 1U) 
                                   #line 269 
                                   tmp_2 = pwrbase0; else 
                                                          #line 269 
                                                          tmp_2 = pwrbase1;
    #line 269 
    writeval = rtlphy->mcs_offset[(int)chnlgroup][(int)index] + tmp_2;
    #line 271 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"RTK better performance, writeval = 0x%x\n",writeval);
    #line 273 
    break;
  }
  #line 276 
  if ((unsigned int)rtlpriv->dm.dynamic_txhighpower_lvl == 1U) 
                                                               #line 277 
                                                               writeval = 269488144U;
  else 
    #line 278 
    if ((unsigned int)rtlpriv->dm.dynamic_txhighpower_lvl == 2U) 
                                                                 #line 280 
                                                                 writeval = 0U;
  #line 282 
  *p_outwrite_val = writeval;
  #line 283 
  return;
}

#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
static void _rtl92s_write_ofdm_powerreg(struct ieee80211_hw *hw, u8 index, u32 val)
{
  #line 293 
  u8 i;
  #line 293 
  u8 rfa_pwr[4U];
  #line 289 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 290 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 291 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 292 
  u16 regoffset[6U] = {(unsigned short)3584U, (unsigned short)3588U, (unsigned short)3600U, (unsigned short)3604U, (unsigned short)3608U, (unsigned short)3612U};
  #line 294 
  u8 rfa_lower_bound = (unsigned char)0U;
  #line 294 
  u8 rfa_upper_bound = (unsigned char)0U;
  #line 294 
  u8 rf_pwr_diff = (unsigned char)0U;
  #line 295 
  u32 writeval = val;
  #line 300 
  if ((unsigned int)rtlphy->rf_type == 2U) {
    #line 301 
    rf_pwr_diff = rtlefuse->antenna_txpwdiff[0];
    #line 304 
    if ((unsigned int)rf_pwr_diff > 7U) 
                                        #line 306 
                                        rfa_lower_bound = (unsigned char)(16U - (unsigned int)rf_pwr_diff); else 
                                                                    #line 309 
                                                                    rfa_upper_bound = (unsigned char)(63U - (unsigned int)rf_pwr_diff);
  }
  #line 313 
  i = (unsigned char)0U;
  #line 313 
  while ((unsigned int)i <= 3U) {
    #line 314 
    rfa_pwr[(int)i] = (unsigned char)(((unsigned int)(127 << (int)i * 8) & writeval) >> (int)i * 8);
    #line 315 
    if ((unsigned int)rfa_pwr[(int)i] > 63U) 
                                             #line 316 
                                             rfa_pwr[(int)i] = (unsigned char)63U;
    #line 321 
    if ((unsigned int)rtlphy->rf_type == 2U) 
      #line 323 
      if ((unsigned int)rf_pwr_diff > 7U) {
        #line 325 
        if ((int)rfa_pwr[(int)i] < (int)rfa_lower_bound) 
                                                         #line 326 
                                                         rfa_pwr[(int)i] = rfa_lower_bound;
      }
      else 
        #line 328 
        if ((unsigned int)rf_pwr_diff != 0U) 
          #line 330 
          if ((int)rfa_pwr[(int)i] > (int)rfa_upper_bound) 
                                                           #line 331 
                                                           rfa_pwr[(int)i] = rfa_upper_bound;
    #line 313 
    i = (u8)((int)i + 1);
  }
  #line 337 
  writeval = (unsigned int)(((((int)rfa_pwr[3] << 24) | ((int)rfa_pwr[2] << 16)) | ((int)rfa_pwr[1] << 8)) | (int)rfa_pwr[0]);
  #line 340 
  rtl_set_bbreg(hw,(unsigned int)regoffset[(int)index],2139062143U,writeval);
  #line 341 
  return;
}

#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
void rtl92s_phy_rf6052_set_ofdmtxpower(struct ieee80211_hw *hw, u8 *p_pwrlevel, u8 chnl)
{
  #line 346 
  u32 writeval;
  #line 346 
  u32 pwrbase0;
  #line 346 
  u32 pwrbase1;
  #line 348 
  u8 finalpwr_idx[4U];
  #line 347 
  u8 index = (unsigned char)0U;
  #line 350 
  _rtl92s_get_powerbase(hw,p_pwrlevel,(unsigned char)((int)chnl),& pwrbase0,& pwrbase1,finalpwr_idx);
  #line 352 
  _rtl92s_set_antennadiff(hw,finalpwr_idx);
  #line 354 
  index = (unsigned char)0U;
  #line 354 
  while ((unsigned int)index <= 5U) {
    #line 355 
    _rtl92s_get_txpower_writeval_byregulatory(hw,(unsigned char)((int)chnl),(unsigned char)((int)index),pwrbase0,pwrbase1,& writeval);
    #line 358 
    _rtl92s_write_ofdm_powerreg(hw,(unsigned char)((int)index),writeval);
    #line 354 
    index = (u8)((int)index + 1);
  }
  #line 360 
  return;
}

#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
void rtl92s_phy_rf6052_set_ccktxpower(struct ieee80211_hw *hw, u8 pwrlevel)
{
  #line 364 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 365 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 366 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 367 
  u32 txagc = 0U;
  #line 368 
  bool dont_inc_cck_or_turboscanoff = (_Bool)0;
  #line 370 
  if ((unsigned int)rtlefuse->eeprom_version > 1U && ((unsigned int)rtlefuse->txpwr_safetyflag == 1U || (unsigned int)rtlefuse->eeprom_regulatory != 0U)) 
    #line 374 
    dont_inc_cck_or_turboscanoff = (_Bool)1;
  #line 376 
  if ((int)mac->act_scanning != 0) {
    #line 377 
    txagc = 63U;
    #line 378 
    if ((int)dont_inc_cck_or_turboscanoff != 0) 
                                                #line 379 
                                                txagc = (unsigned int)pwrlevel;
  }
  else {
    #line 381 
    txagc = (unsigned int)pwrlevel;
    #line 383 
    if ((unsigned int)rtlpriv->dm.dynamic_txhighpower_lvl == 1U) 
                                                                 #line 385 
                                                                 txagc = 16U;
    else 
      #line 386 
      if ((unsigned int)rtlpriv->dm.dynamic_txhighpower_lvl == 2U) 
                                                                   #line 388 
                                                                   txagc = 0U;
  }
  #line 391 
  if (txagc > 63U) 
                   #line 392 
                   txagc = 63U;
  #line 394 
  rtl_set_bbreg(hw,3592U,32512U,txagc);
  #line 395 
  return;
}

#line 398  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
bool rtl92s_phy_rf6052_config(struct ieee80211_hw *hw)
{
  #line 403 
  u8 rfpath;
  #line 405 
  struct bb_reg_def *pphyreg;
  #line 400 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 401 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 402 
  u32 u4reg_val = 0U;
  #line 404 
  bool rtstatus = (_Bool)1;
  #line 408 
  rfpath = (unsigned char)0U;
  #line 408 
  while ((int)rtlphy->num_total_rfpath > (int)rfpath) {
    #line 410 
    pphyreg = & rtlphy->phyreg_def[(int)rfpath];
    #line 413 
    switch ((int)rfpath) {
      #line 414 
      case 0: 
              #line 414 
      ;
      #line 415 
      case 2: 
              #line 415 
      ;
      #line 416 
      u4reg_val = rtl92s_phy_query_bb_reg(hw,pphyreg->rfintfs,16U);
      #line 419 
      break;
      #line 420 
      case 1: 
              #line 420 
      ;
      #line 421 
      case 3: 
              #line 421 
      ;
      #line 422 
      u4reg_val = rtl92s_phy_query_bb_reg(hw,pphyreg->rfintfs,1048576U);
      #line 425 
      break;
    }
    #line 429 
    rtl92s_phy_set_bb_reg(hw,pphyreg->rfintfe,1048576U,1U);
    #line 433 
    rtl92s_phy_set_bb_reg(hw,pphyreg->rfintfo,16U,1U);
    #line 436 
    rtl92s_phy_set_bb_reg(hw,pphyreg->rfhssi_para2,1024U,0U);
    #line 438 
    rtl92s_phy_set_bb_reg(hw,pphyreg->rfhssi_para2,2048U,0U);
    #line 442 
    switch ((int)rfpath) {
      #line 443 
      case 0: 
              #line 443 
      ;
      #line 444 
      rtstatus = (_Bool)((unsigned int)rtl92s_phy_config_rf(hw,(enum radio_path)rfpath) != 0U);
      #line 446 
      break;
      #line 447 
      case 1: 
              #line 447 
      ;
      #line 448 
      rtstatus = (_Bool)((unsigned int)rtl92s_phy_config_rf(hw,(enum radio_path)rfpath) != 0U);
      #line 450 
      break;
      #line 451 
      case 2: 
              #line 451 
      ;
      #line 452 
      break;
      #line 453 
      case 3: 
              #line 453 
      ;
      #line 454 
      break;
    }
    #line 458 
    switch ((int)rfpath) {
      #line 459 
      case 0: 
              #line 459 
      ;
      #line 460 
      case 2: 
              #line 460 
      ;
      #line 461 
      rtl92s_phy_set_bb_reg(hw,pphyreg->rfintfs,16U,u4reg_val);
      #line 463 
      break;
      #line 464 
      case 1: 
              #line 464 
      ;
      #line 465 
      case 3: 
              #line 465 
      ;
      #line 466 
      rtl92s_phy_set_bb_reg(hw,pphyreg->rfintfs,1048576U,u4reg_val);
      #line 469 
      break;
    }
    #line 472 
    if (! rtstatus) {
      #line 473 
      printk((char *)"\001",(int)rfpath);
      #line 474 
      goto fail;
    }
    #line 408 
    rfpath = (u8)((int)rfpath + 1);
  }
  #line 479 
  return rtstatus;
  #line 481 
  fail: 
        #line 481 
  ;
  #line 482 
  return rtstatus;
}

#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rf.c"
void rtl92s_phy_rf6052_set_bandwidth(struct ieee80211_hw *hw, u8 bandwidth)
{
  #line 487 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 488 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 490 
  switch ((int)bandwidth) {
    #line 491 
    case 0: 
            #line 491 
    ;
    #line 492 
    rtlphy->rfreg_chnlval[0] = (rtlphy->rfreg_chnlval[0] & 4294964223U) | 1024U;
    #line 494 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,24U,1048575U,rtlphy->rfreg_chnlval[0]);
    #line 496 
    break;
    #line 497 
    case 1: 
            #line 497 
    ;
    #line 498 
    rtlphy->rfreg_chnlval[0] &= 4294964223U;
    #line 500 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,24U,1048575U,rtlphy->rfreg_chnlval[0]);
    #line 502 
    break;
    #line 503 
    default: 
             #line 503 
    ;
    #line 504 
    printk((char *)"\001",(int)bandwidth);
    #line 505 
    break;
  }
  #line 507 
  return;
}

#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 22 
void *ldv_vzalloc(unsigned long size);
#line 23 
#line 23 
void ldv_vfree(void *addr);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
#line 804  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void *cif_vzalloc(unsigned long size);
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
#line 811  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void cif_vfree(void *addr);
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
#line 118 
void complete(struct completion *);
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 47 
int request_firmware_nowait(struct module *, bool, char *, struct device *, gfp_t, void *, void (*)(struct firmware *, void *));
#line 57 
#line 797  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/core.h"
#line 61 
bool rtl_btc_status_false(void);
#line 1346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static int cif___pci_register_driver(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *mod_name);
#line 1352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
#line 826  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void cif_pci_unregister_driver(struct pci_driver *dev);
#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/pci.h"
#line 261 
int rtl_pci_probe(struct pci_dev *, struct pci_device_id *);
#line 263 
#line 263 
void rtl_pci_disconnect(struct pci_dev *);
#line 265 
#line 265 
int rtl_pci_suspend(struct device *);
#line 266 
#line 266 
int rtl_pci_resume(struct device *);
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.h"
#line 63 
void rtl92s_dm_watchdog(struct ieee80211_hw *hw);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static void rtl92s_init_aspm_vars(struct ieee80211_hw *hw)
{
  #line 22 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 23 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 26 
  rtlpci->const_amdpci_aspm = (unsigned char)0U;
  #line 36 
  rtlpci->const_pci_aspm = (unsigned char)2U;
  #line 39 
  rtlpci->const_devicepci_aspm_setting = (unsigned char)3U;
  #line 42 
  rtlpci->const_hostpci_aspm_setting = (unsigned char)2U;
  #line 51 
  rtlpci->const_hwsw_rfoff_d3 = (unsigned char)2U;
  #line 59 
  rtlpci->const_support_pciaspm = (unsigned char)((rtlpriv->cfg)->mod_params)->aspm_support;
  #line 60 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static void rtl92se_fw_cb(struct firmware *firmware, void *context)
{
  #line 64 
  struct ieee80211_hw *hw = (struct ieee80211_hw *)context;
  #line 65 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 66 
  struct rt_firmware *pfirmware = (struct rt_firmware *)0;
  #line 67 
  char *fw_name = (char *)"rtlwifi/rtl8192sefw.bin";
  #line 69 
  _rtl_dbg_trace(rtlpriv,1ULL,4,(char *)"Firmware callback routine entered!\n");
  #line 71 
  complete(& rtlpriv->firmware_loading_complete);
  #line 72 
  if (firmware == (struct firmware *)0) {
    #line 73 
    printk((char *)"\001",fw_name);
    #line 74 
    rtlpriv->max_fw_size = 0;
    #line 75 
    return;
  }
  #line 77 
  if (firmware->size > (unsigned long)rtlpriv->max_fw_size) {
    #line 78 
    printk((char *)"\001");
    #line 79 
    rtlpriv->max_fw_size = 0;
    #line 80 
    cif_release_firmware(firmware);
    #line 81 
    return;
  }
  #line 83 
  pfirmware = (struct rt_firmware *)rtlpriv->rtlhal.pfirmware;
  #line 84 
  memcpy((void *)(& pfirmware->sz_fw_tmpbuffer),(void *)firmware->data,firmware->size);
  #line 85 
  pfirmware->sz_fw_tmpbufferlen = (unsigned int)firmware->size;
  #line 86 
  cif_release_firmware(firmware);
  #line 87 
  return;
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static int rtl92s_init_sw_vars(struct ieee80211_hw *hw)
{
  #line 91 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 92 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 93 
  int err = 0;
  #line 94 
  u16 earlyrxthreshold = (unsigned short)7U;
  #line 95 
  char *fw_name = (char *)"rtlwifi/rtl8192sefw.bin";
  #line 97 
  rtlpriv->dm.dm_initialgain_enable = (_Bool)1;
  #line 98 
  rtlpriv->dm.dm_flag = (unsigned char)0U;
  #line 99 
  rtlpriv->dm.disable_framebursting = (_Bool)0;
  #line 100 
  rtlpriv->dm.thermalvalue = (unsigned char)0U;
  #line 101 
  rtlpriv->dm.useramask = (_Bool)1;
  #line 104 
  rtlpriv->rtlhal.current_bandtype = BAND_ON_2_4G;
  #line 105 
  rtlpriv->rtlhal.bandset = BAND_ON_2_4G;
  #line 106 
  rtlpriv->rtlhal.macphymode = SINGLEMAC_SINGLEPHY;
  #line 108 
  rtlpci->transmit_config = 0U;
  #line 110 
  rtlpci->receive_config = (unsigned int)((int)earlyrxthreshold << 13) | 2203521070U;
  #line 133 
  rtlpci->irq_mask[0] = 16383U;
  #line 153 
  rtlpci->irq_mask[1] = 0U;
  #line 155 
  rtlpci->shortretry_limit = (unsigned short)48U;
  #line 156 
  rtlpci->longretry_limit = (unsigned short)48U;
  #line 158 
  rtlpci->first_init = (_Bool)1;
  #line 161 
  rtlpriv->psc.inactiveps = ((rtlpriv->cfg)->mod_params)->inactiveps;
  #line 162 
  rtlpriv->psc.swctrl_lps = ((rtlpriv->cfg)->mod_params)->swctrl_lps;
  #line 163 
  rtlpriv->psc.fwctrl_lps = ((rtlpriv->cfg)->mod_params)->fwctrl_lps;
  #line 164 
  if (! rtlpriv->psc.inactiveps) 
                                 #line 165 
                                 printk((char *)"\001");
  #line 166 
  if (! rtlpriv->psc.fwctrl_lps) 
                                 #line 167 
                                 printk((char *)"\001");
  #line 168 
  rtlpriv->psc.reg_fwctrl_lps = (unsigned char)3U;
  #line 169 
  rtlpriv->psc.reg_max_lps_awakeintvl = (unsigned char)5U;
  #line 172 
  rtl92s_init_aspm_vars(hw);
  #line 174 
  if ((unsigned int)rtlpriv->psc.reg_fwctrl_lps == 1U) 
                                                       #line 175 
                                                       rtlpriv->psc.fwctrl_psmode = (unsigned char)1U;
  else 
    #line 176 
    if ((unsigned int)rtlpriv->psc.reg_fwctrl_lps == 2U) 
                                                         #line 177 
                                                         rtlpriv->psc.fwctrl_psmode = (unsigned char)2U;
    else 
      #line 178 
      if ((unsigned int)rtlpriv->psc.reg_fwctrl_lps == 3U) 
                                                           #line 179 
                                                           rtlpriv->psc.fwctrl_psmode = (unsigned char)3U;
  #line 182 
  rtlpriv->rtlhal.pfirmware = (u8 *)cif_vzalloc(218032UL);
  #line 183 
  if (rtlpriv->rtlhal.pfirmware == (u8 *)0U) 
                                             #line 184 
                                             return 1;
  #line 186 
  rtlpriv->max_fw_size = 128080;
  #line 188 
  printk((char *)"\001",fw_name);
  #line 191 
  err = request_firmware_nowait(& __this_module,(_Bool)1,fw_name,rtlpriv->io.dev,3264U,(void *)hw,& rtl92se_fw_cb);
  #line 194 
  if (err != 0) {
    #line 195 
    printk((char *)"\001");
    #line 196 
    cif_vfree((void *)rtlpriv->rtlhal.pfirmware);
    #line 197 
    rtlpriv->rtlhal.pfirmware = (u8 *)0U;
    #line 198 
    return 1;
  }
  #line 201 
  return err;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static void rtl92s_deinit_sw_vars(struct ieee80211_hw *hw)
{
  #line 206 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 208 
  if (rtlpriv->rtlhal.pfirmware != (u8 *)0U) {
    #line 209 
    cif_vfree((void *)rtlpriv->rtlhal.pfirmware);
    #line 210 
    rtlpriv->rtlhal.pfirmware = (u8 *)0U;
  }
  #line 212 
  return;
}

#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static bool rtl92se_is_tx_desc_closed(struct ieee80211_hw *hw, u8 hw_queue, u16 index)
{
  #line 217 
  struct rtl_pci *rtlpci = & ((struct rtl_pci_priv *)(& ((struct rtl_priv *)hw->priv)->priv))->dev;
  #line 218 
  struct rtl8192_tx_ring *ring = & rtlpci->tx_ring[(int)hw_queue];
  #line 219 
  u8 *entry = (u8 *)(ring->desc + (unsigned long)ring->idx);
  #line 220 
  u8 own = (unsigned char)rtl92se_get_desc(hw,entry,(_Bool)1,(unsigned char)0);
  #line 222 
  if ((unsigned int)own != 0U) 
                               #line 223 
                               return (_Bool)0;
  #line 224 
  return (_Bool)1;
}

#line 227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static struct rtl_hal_ops rtl8192se_hal_ops = {.init_sw_vars = & rtl92s_init_sw_vars, .deinit_sw_vars = & rtl92s_deinit_sw_vars, .read_eeprom_info = & rtl92se_read_eeprom_info, .interrupt_recognized = & rtl92se_interrupt_recognized, .hw_init = & rtl92se_hw_init, .hw_disable = & rtl92se_card_disable, .hw_suspend = & rtl92se_suspend, .hw_resume = & rtl92se_resume, .enable_interrupt = & rtl92se_enable_interrupt, .disable_interrupt = & rtl92se_disable_interrupt, .set_network_type = & rtl92se_set_network_type, .set_chk_bssid = & rtl92se_set_check_bssid, .set_bw_mode = & rtl92s_phy_set_bw_mode, .switch_channel = & rtl92s_phy_sw_chnl, .set_qos = & rtl92se_set_qos, .set_bcn_reg = & rtl92se_set_beacon_related_registers, .set_bcn_intv = & rtl92se_set_beacon_interval, .update_interrupt_mask = & rtl92se_update_interrupt_mask, .get_hw_reg = & rtl92se_get_hw_reg, .set_hw_reg = & rtl92se_set_hw_reg, .update_rate_tbl = & rtl92se_update_hal_rate_tbl, .fill_tx_desc = & rtl92se_tx_fill_desc, .fill_tx_cmddesc = & rtl92se_tx_fill_cmddesc, .query_rx_desc = & rtl92se_rx_query_desc, .set_channel_access = & rtl92se_update_channel_access_setting, .radio_onoff_checking = & rtl92se_gpio_radio_on_off_checking, .dm_watchdog = & rtl92s_dm_watchdog, .scan_operation_backup = & rtl92s_phy_scan_operation_backup, .set_rf_power_state = & rtl92s_phy_set_rf_power_state, .led_control = & rtl92se_led_control, .set_desc = & rtl92se_set_desc, .get_desc = & rtl92se_get_desc, .is_tx_desc_closed = & rtl92se_is_tx_desc_closed, .tx_polling = & rtl92se_tx_polling, .enable_hw_sec = & rtl92se_enable_hw_security_config, .set_key = & rtl92se_set_key, .init_sw_leds = & rtl92se_init_sw_leds, .get_bbreg = & rtl92s_phy_query_bb_reg, .set_bbreg = & rtl92s_phy_set_bb_reg, .get_rfreg = & rtl92s_phy_query_rf_reg, .set_rfreg = & rtl92s_phy_set_rf_reg, .get_btc_status = & rtl_btc_status_false};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static struct rtl_mod_params rtl92se_mod_params = {.inactiveps = (_Bool)1, .swctrl_lps = (_Bool)1, .aspm_support = 2};
#line 284  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static struct rtl_hal_cfg rtl92se_hal_cfg = {.bar_id = (unsigned char)1U, .name = (char *)"rtl92s_pci", .ops = & rtl8192se_hal_ops, .mod_params = & rtl92se_mod_params, .maps = {[1] = 2U, 8U, 4U, 8U, 32U, 524288U, 1U, 768U, 772U, [11] = 52U, 48U, 760U, 48U, [18] = 18U, 128U, 16U, 512U, 15U, [24] = 576U, 580U, 584U, 588U, 592U, [30] = 1U, 2U, 4U, 5U, 2147483648U, 1073741824U, 536870912U, 268435456U, 134217728U, 67108864U, 33554432U, 16777216U, 8388608U, 4194304U, 2097152U, 1048576U, 524288U, 262144U, 131072U, 65536U, 32768U, 16384U, 8192U, 4096U, 2048U, 16U, [57] = 512U, 256U, 128U, 8U, 64U, 4U, 16U, 8U, 4U, 2U, 1U, [69] = 8204U, [72] = 1U, 2U, 3U, 4U, 5U, 6U, 7U, 8U, 9U, 10U, 11U, 19U, 27U}};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static struct pci_device_id rtl92se_pci_ids[6U] = {{.vendor = 4332U, .device = 33170U, .subvendor = 4294967295U, .subdevice = 4294967295U, .driver_data = (unsigned long)(& rtl92se_hal_cfg)}, {.vendor = 4332U, .device = 33137U, .subvendor = 4294967295U, .subdevice = 4294967295U, .driver_data = (unsigned long)(& rtl92se_hal_cfg)}, {.vendor = 4332U, .device = 33138U, .subvendor = 4294967295U, .subdevice = 4294967295U, .driver_data = (unsigned long)(& rtl92se_hal_cfg)}, {.vendor = 4332U, .device = 33139U, .subvendor = 4294967295U, .subdevice = 4294967295U, .driver_data = (unsigned long)(& rtl92se_hal_cfg)}, {.vendor = 4332U, .device = 33140U, .subvendor = 4294967295U, .subdevice = 4294967295U, .driver_data = (unsigned long)(& rtl92se_hal_cfg)}};
#line 388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
struct pci_device_id __mod_pci__rtl92se_pci_ids_device_table[6U];
#line 412  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static struct dev_pm_ops rtlwifi_pm_ops = {.suspend = & rtl_pci_suspend, .resume = & rtl_pci_resume, .freeze = & rtl_pci_suspend, .thaw = & rtl_pci_resume, .poweroff = & rtl_pci_suspend, .restore = & rtl_pci_resume};
#line 414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static struct pci_driver rtl92se_driver = {.name = (char *)"rtl8192se", .id_table = (struct pci_device_id *)(& rtl92se_pci_ids), .probe = & rtl_pci_probe, .remove = & rtl_pci_disconnect, .driver = {.pm = & rtlwifi_pm_ops}};
#line 422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static int rtl92se_driver_init(void)
{
  #line 422 
  return cif___pci_register_driver(& rtl92se_driver,& __this_module,
                                (char *)"rtl8192se");
}

#line 422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c"
static void rtl92se_driver_exit(void)
{
  #line 422 
  cif_pci_unregister_driver(& rtl92se_driver);
  #line 423 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
struct pci_driver *emg_alias_rtl92se_driver = & rtl92se_driver;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
struct pci_device_id (*emg_alias_rtl92se_pci_ids)[6U] = & rtl92se_pci_ids;
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
struct dev_pm_ops *emg_alias_rtlwifi_pm_ops = & rtlwifi_pm_ops;
#line 98 
#line 98 
int emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);
#line 99 
#line 99 
void emg_pci_unregister_driver(struct pci_driver *arg0);
#line 103  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
void emg_rtl92se_driver_exit(void)
{
  #line 104 
  rtl92se_driver_exit();
  #line 105 
  return;
}

#line 107  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
int emg_rtl92se_driver_init(void)
{
  #line 108 
  return rtl92se_driver_init();
}

#line 797  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 800 
  ldv_release_firmware(fw);
  #line 801 
  return;
}

#line 804  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void *cif_vzalloc(unsigned long size)
{
  #line 807 
  return ldv_vzalloc(size);
}

#line 811  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void cif_vfree(void *addr)
{
  #line 814 
  ldv_vfree(addr);
  #line 815 
  return;
}

#line 818  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static int cif___pci_register_driver(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char *mod_name)
{
  #line 822 
  return emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,mod_name);
}

#line 826  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/0/concurrency safety/weaver/sw.i.aux"
static void cif_pci_unregister_driver(struct pci_driver *dev)
{
  #line 830 
  emg_pci_unregister_driver(dev);
  #line 831 
  return;
}

#line 6  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_reg_2t2rarray[372U] = {28U, 117440512U, 2048U, 262144U, 2052U, 32771U, 2056U, 64512U, 2060U, 10U, 2064U, 268456072U, 2068U, 34356496U, 2072U, 2097541U, 2076U, [18] = 2080U, 16777216U, 2084U, 3735556U, 2088U, 16777216U, 2092U, 3735556U, 2096U, 4U, 2100U, 6881792U, 2104U, 4U, 2108U, 6881792U, 2112U, 65536U, 2116U, 65536U, 2120U, [40] = 2124U, [42] = 2128U, [44] = 2132U, [46] = 2136U, 1212696648U, 2140U, 1705600425U, 2144U, 259981616U, 2148U, 259981616U, 2152U, 259981616U, 2156U, 259981616U, 2160U, 50333440U, 2164U, 50332416U, 2168U, 131074U, 2172U, 5177857U, 2176U, 2821720769U, 2180U, 88U, 2184U, 8U, 2188U, 4U, 2192U, [76] = 2196U, 4294967294U, 2200U, 1076895760U, 2204U, 7364688U, 2224U, [84] = 2272U, [86] = 2276U, [88] = 3584U, 808661811U, 3588U, 707604015U, 3592U, 12850U, 3600U, 808661811U, 3604U, 707604015U, 3608U, 808661811U, 3612U, 707604015U, 3632U, 16808960U, 3636U, 16795648U, 3640U, 268491807U, 3644U, 268471327U, 3648U, 34865312U, 3652U, 672530592U, 3656U, 4160749569U, 3660U, 10512U, 3664U, 16808960U, 3668U, 16795648U, 3672U, 268491807U, 3676U, 268471327U, 3680U, 34865312U, 3684U, 672530592U, 3692U, 10512U, 3696U, 837653243U, 3700U, 907359995U, 3704U, 907359995U, 3708U, 907359995U, 3712U, 907359995U, 3716U, 889595U, 3720U, 889595U, 3724U, 837653243U, 3792U, 837653243U, 3796U, 837653243U, 3800U, 889595U, 3804U, 889595U, 3808U, 889595U, 3812U, 22959176U, 3816U, 559240264U, 2304U, [164] = 2308U, 35U, 2312U, [168] = 2316U, 17961747U, 2560U, 13649864U, 2564U, 2164195336U, 2568U, 2362278656U, 2572U, 778179087U, 2576U, 2499853176U, 2580U, 286539816U, 2584U, 8917271U, 2588U, 2299793152U, 2592U, 437977088U, 2596U, 151917335U, 2600U, 516U, 2604U, 282263552U, 3072U, 1074208064U, 3076U, 10507827U, 3080U, 228U, 3084U, 1819044972U, 3088U, 142606336U, 3092U, 1073742080U, 3096U, 134217728U, 3100U, 1073742080U, 3104U, 134217728U, 3108U, 1073742080U, 3112U, 134217728U, 3116U, 1073742080U, 3120U, 1844030532U, 3124U, 1184256719U, 3128U, 1232689556U, 3132U, 177706852U, 3136U, 528236607U, 3140U, 65719U, 3144U, 3959554048U, 3148U, 8323967U, 3152U, 1767126048U, 3156U, 1128005780U, 3160U, 1767126048U, 3164U, 1128005780U, 3168U, 1767126048U, 3172U, 1128005780U, 3176U, 1767126048U, 3180U, 1128005780U, 3184U, 746520589U, 3188U, 25564507U, 3192U, 31U, 3196U, 12129810U, 3200U, 1073742080U, 3204U, 552992768U, 3208U, 536871040U, 3212U, 538968064U, 3216U, 1073742080U, 3220U, [270] = 3224U, 1073742080U, 3228U, [274] = 3232U, 4793490U, 3236U, [278] = 3240U, [280] = 3244U, [282] = 3248U, [284] = 3252U, [286] = 3256U, [288] = 3260U, 671088640U, 3264U, [292] = 3268U, [294] = 3272U, [296] = 3276U, [298] = 3280U, [300] = 3284U, [302] = 3288U, 1689396263U, 3292U, 7760178U, 3296U, 2236962U, 3300U, [310] = 3304U, 929317634U, 3308U, 798479372U, 3328U, 1872U, 3332U, 1027U, 3336U, 36991U, 3340U, 1U, 3344U, 2690855731U, 3348U, 858995811U, 3352U, 1787779947U, 3356U, [330] = 3360U, [332] = 3364U, [334] = 3368U, [336] = 3372U, 3432487285U, 3376U, [340] = 3380U, [342] = 3384U, [344] = 3388U, 160403U, 3392U, [348] = 3396U, [350] = 3400U, [352] = 3408U, 1681331210U, 3412U, 38649090U, 3416U, [358] = 3420U, 805511268U, 3424U, 1179901544U, 3428U, 5343804U, 3432U, 8449U, 3860U, 3U, 3916U, [370] = 3840U, 768U};
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_changeto_1t1rarray[48U] = {2116U, 4294967295U, 65536U, 2052U, 15U, 1U, 2084U, 15728655U, 3145732U, 2092U, 15728655U, 1048578U, 2160U, 67108864U, 1U, 2148U, 1024U, [18] = 2168U, 983055U, 2U, 3700U, 251658240U, 2U, 3704U, 251658240U, 2U, 3708U, 251658240U, 2U, 3712U, 251658240U, 2U, 2316U, 255U, 17U, 3076U, 255U, 17U, 3332U, 15U, 1U, 500U, 4294901760U, 30583U, 564U, 4160749568U, 10U};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_changeto_1t2rarray[45U] = {2052U, 15U, 3U, 2084U, 15728655U, 3145732U, 2092U, 15728655U, 3145730U, 2160U, 67108864U, 1U, 2148U, 1024U, [15] = 2168U, 983055U, 2U, 3700U, 251658240U, 2U, 3704U, 251658240U, 2U, 3708U, 251658240U, 2U, 3712U, 251658240U, 2U, 2316U, 255U, 17U, 3076U, 255U, 51U, 3332U, 15U, 3U, 500U, 4294901760U, 30583U, 564U, 4160749568U, 10U};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192sephy_reg_array_pg[84U] = {3584U, 4294967295U, 101255433U, 3588U, 4294967295U, 197638U, 3592U, 65280U, [9] = 3600U, 4294967295U, 168561934U, 3604U, 4294967295U, 67569673U, 3608U, 4294967295U, 168561934U, 3612U, 4294967295U, 67569673U, 3584U, 4294967295U, 67372036U, 3588U, 4294967295U, 131588U, 3592U, 65280U, [30] = 3600U, 4294967295U, 33817604U, 3604U, 4294967295U, 2U, 3608U, 4294967295U, 33817604U, 3612U, 4294967295U, 2U, 3584U, 4294967295U, 67372036U, 3588U, 4294967295U, 131588U, 3592U, 65280U, [51] = 3600U, 4294967295U, 33817604U, 3604U, 4294967295U, 2U, 3608U, 4294967295U, 33817604U, 3612U, 4294967295U, 2U, 3584U, 4294967295U, 33686018U, 3588U, 4294967295U, 131586U, 3592U, 65280U, [72] = 3600U, 4294967295U, 33686018U, 3604U, 4294967295U, 2U, 3608U, 4294967295U, 33686018U, 3612U, 4294967295U, 2U};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seradioa_1t_array[202U] = {[1] = 196953U, 1U, 197200U, 2U, 65536U, 16U, 524303U, 17U, 143868U, 16U, 786447U, 17U, 260600U, 16U, 131087U, 17U, 131329U, 20U, 67902U, 20U, 592190U, 21U, 63732U, 23U, 1008896U, 26U, 77910U, 27U, 393216U, 28U, 768U, 30U, 200793U, 33U, 344064U, 34U, 2108U, 35U, 5464U, 36U, 96U, 37U, 140675U, 38U, 61952U, 39U, 961777U, 40U, 638292U, 41U, 17794U, 42U, 1U, 43U, 135988U, 42U, [58] = 43U, 10U, 42U, 1U, 43U, 2056U, 43U, 340787U, 44U, 12U, 42U, 2U, 43U, 2056U, 43U, 373555U, 44U, 13U, 42U, 3U, 43U, 2056U, 43U, 406323U, 44U, 13U, 42U, 4U, 43U, 2056U, 43U, 439091U, 44U, 13U, 42U, 5U, 43U, 1801U, 43U, 340787U, 44U, 13U, 42U, 6U, 43U, 1801U, 43U, 373555U, 44U, 13U, 42U, 7U, 43U, 1801U, 43U, 406323U, 44U, 13U, 42U, 8U, 43U, 1801U, 43U, 439091U, 44U, 13U, 42U, 9U, 43U, 1546U, 43U, 340787U, 44U, 13U, 42U, 10U, 43U, 1546U, 43U, 373555U, 44U, 13U, 42U, 11U, 43U, 1546U, 43U, 406323U, 44U, 13U, 42U, 12U, 43U, 1546U, 43U, 439091U, 44U, 13U, 42U, 13U, 43U, 1291U, 43U, 340787U, 44U, 13U, 42U, 14U, 43U, 1291U, 43U, 419363U, 44U, 26U, 42U, 933888U, 48U, 131072U, 49U, 759345U, 50U, 4877U, 51U, 391U, 19U, 106092U, 19U, 89748U, [187] = 65881U, 24U, 62465U, 254U, [192] = 30U, 200795U, 254U, [197] = 196953U, 16U, 262159U, 17U, 132089U};
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seradiob_array[22U] = {[1] = 196953U, 1U, 4161U, 2U, 69632U, 5U, 528320U, 7U, 1034243U, 19U, 97456U, 19U, 72896U, 19U, 56416U, 19U, 35936U, 19U, 17488U, 19U, 32U};
#line 381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seradiob_gm_array[10U] = {[1] = 196953U, 1U, 4161U, 2U, 69632U, 5U, 528320U, 7U, 1034243U};
#line 389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192semac_2t_array[106U] = {32U, 53U, 72U, 14U, 73U, 240U, 74U, 119U, 75U, 131U, 181U, 33U, 220U, 255U, 221U, 255U, 222U, 255U, 223U, 255U, 278U, [22] = 279U, [24] = 280U, [26] = 281U, [28] = 282U, [30] = 283U, [32] = 284U, [34] = 285U, [36] = 352U, 11U, 353U, 11U, 354U, 11U, 355U, 11U, 356U, 11U, 357U, 11U, 358U, 11U, 359U, 11U, 360U, 11U, 361U, 11U, 362U, 11U, 363U, 11U, 364U, 11U, 365U, 11U, 366U, 11U, 367U, 11U, 368U, 11U, 369U, 11U, 370U, 11U, 371U, 11U, 372U, 11U, 373U, 11U, 374U, 11U, 375U, 11U, 376U, 11U, 377U, 11U, 378U, 11U, 379U, 11U, 380U, 11U, 381U, 11U, 382U, 11U, 383U, 11U, 566U, 12U, 1283U, 34U, 1376U};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/table.c"
u32 rtl8192seagctab_array[320U] = {3192U, 2130706433U, 3192U, 2130771969U, 3192U, 2114060289U, 3192U, 2097348609U, 3192U, 2080636929U, 3192U, 2063925249U, 3192U, 2047213569U, 3192U, 2030501889U, 3192U, 2013790209U, 3192U, 1997078529U, 3192U, 1980366849U, 3192U, 1963655169U, 3192U, 1946943489U, 3192U, 1930231809U, 3192U, 1913520129U, 3192U, 1896808449U, 3192U, 1880096769U, 3192U, 1863385089U, 3192U, 1863450625U, 3192U, 1846738945U, 3192U, 1830027265U, 3192U, 1830092801U, 3192U, 1813381121U, 3192U, 1796669441U, 3192U, 1779957761U, 3192U, 1780023297U, 3192U, 1763311617U, 3192U, 1746599937U, 3192U, 1729888257U, 3192U, 1713176577U, 3192U, 1696464897U, 3192U, 1679753217U, 3192U, 1663041537U, 3192U, 1277231105U, 3192U, 1260519425U, 3192U, 1243807745U, 3192U, 1227096065U, 3192U, 1210384385U, 3192U, 1193672705U, 3192U, 1176961025U, 3192U, 1160249345U, 3192U, 1143537665U, 3192U, 740950017U, 3192U, 724238337U, 3192U, 707526657U, 3192U, 690814977U, 3192U, 674103297U, 3192U, 657391617U, 3192U, 640679937U, 3192U, 623968257U, 3192U, 607256577U, 3192U, 590544897U, 3192U, 573833217U, 3192U, 154468353U, 3192U, 137756673U, 3192U, 121044993U, 3192U, 104333313U, 3192U, 87621633U, 3192U, 70909953U, 3192U, 54198273U, 3192U, 37486593U, 3192U, 20774913U, 3192U, 4063233U, 3192U, 4128769U, 3192U, 2134900737U, 3192U, 2134966273U, 3192U, 2118254593U, 3192U, 2101542913U, 3192U, 2084831233U, 3192U, 2068119553U, 3192U, 2051407873U, 3192U, 2034696193U, 3192U, 2017984513U, 3192U, 2001272833U, 3192U, 1984561153U, 3192U, 1967849473U, 3192U, 1951137793U, 3192U, 1934426113U, 3192U, 1917714433U, 3192U, 1901002753U, 3192U, 1884291073U, 3192U, 1867579393U, 3192U, 1867644929U, 3192U, 1850933249U, 3192U, 1834221569U, 3192U, 1834287105U, 3192U, 1817575425U, 3192U, 1800863745U, 3192U, 1784152065U, 3192U, 1784217601U, 3192U, 1767505921U, 3192U, 1750794241U, 3192U, 1734082561U, 3192U, 1717370881U, 3192U, 1700659201U, 3192U, 1683947521U, 3192U, 1667235841U, 3192U, 1281425409U, 3192U, 1264713729U, 3192U, 1248002049U, 3192U, 1231290369U, 3192U, 1214578689U, 3192U, 1197867009U, 3192U, 1181155329U, 3192U, 1164443649U, 3192U, 1147731969U, 3192U, 745144321U, 3192U, 728432641U, 3192U, 711720961U, 3192U, 695009281U, 3192U, 678297601U, 3192U, 661585921U, 3192U, 644874241U, 3192U, 628162561U, 3192U, 611450881U, 3192U, 594739201U, 3192U, 578027521U, 3192U, 158662657U, 3192U, 141950977U, 3192U, 125239297U, 3192U, 108527617U, 3192U, 91815937U, 3192U, 75104257U, 3192U, 58392577U, 3192U, 41680897U, 3192U, 24969217U, 3192U, 8257537U, 3192U, 8323073U, 3192U, 805306398U, 3192U, 805371934U, 3192U, 805437470U, 3192U, 805503006U, 3192U, 805568542U, 3192U, 872742942U, 3192U, 939917342U, 3192U, 1040646174U, 3192U, 1040711710U, 3192U, 1141440542U, 3192U, 1175060510U, 3192U, 1208680478U, 3192U, 1208746014U, 3192U, 1309474846U, 3192U, 1443758110U, 3192U, 1510932510U, 3192U, 1578106910U, 3192U, 1645281310U, 3192U, 1813119006U, 3192U, 1913847838U, 3192U, 1913913374U, 3192U, 1913978910U, 3192U, 1914044446U, 3192U, 1914109982U, 3192U, 1914175518U, 3192U, 1914241054U, 3192U, 1914306590U, 3192U, 1914372126U, 3192U, 1914437662U, 3192U, 1914503198U, 3192U, 1914568734U, 3192U, 1914634270U};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/percpu.h"
#line 88 
void __bad_percpu_size(void);
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  #line 79 
  int tmp;
  #line 79 
  if (0 != 0 && (val == 1 || val == -1)) 
                                         #line 79 
                                         tmp = val; else 
                                                         #line 79 
                                                         tmp = 0;
  #line 79 
  int pao_ID__ = tmp;
  #line 79 
  switch (4UL) {
    #line 79 
    case (unsigned long)1: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)2: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)4: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    case (unsigned long)8: 
                           #line 79 
    ;
    #line 79 
    if (pao_ID__ == 1) 
                       #line 81 
                       ldv_inline_asm();
    else 
      #line 79 
      if (pao_ID__ == -1) 
                          #line 81 
                          ldv_inline_asm(); else 
                                                 #line 84 
                                                 ldv_inline_asm();
    #line 79 
    break;
    #line 79 
    default: 
             #line 79 
    ;
    #line 79 
    __bad_percpu_size();
  }
  #line 82 
  return;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  #line 84 
  int tmp;
  #line 84 
  if (0 != 0 && (val == -1 || val == 1)) 
                                         #line 84 
                                         tmp = - val; else 
                                                           #line 84 
                                                           tmp = 0;
  #line 84 
  int pao_ID__ = tmp;
  #line 84 
  switch (4UL) {
    #line 84 
    case (unsigned long)1: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)2: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)4: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    case (unsigned long)8: 
                           #line 84 
    ;
    #line 84 
    if (pao_ID__ == 1) 
                       #line 86 
                       ldv_inline_asm();
    else 
      #line 84 
      if (pao_ID__ == -1) 
                          #line 86 
                          ldv_inline_asm(); else 
                                                 #line 89 
                                                 ldv_inline_asm();
    #line 84 
    break;
    #line 84 
    default: 
             #line 84 
    ;
    #line 84 
    __bad_percpu_size();
  }
  #line 87 
  return;
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 348 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);
#line 352 
#line 352 
void lock_release(struct lockdep_map *, unsigned long);
#line 658 
#line 658 
void lockdep_rcu_suspicious(char *, int, char *);
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  #line 59 
  __preempt_count_add(1);
  #line 60 
  ldv_inline_asm();
  #line 62 
  return;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  #line 66 
  ldv_inline_asm();
  #line 64 
  __preempt_count_sub(1);
  #line 66 
  return;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcutree.h"
#line 56 
bool rcu_is_watching(void);
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  #line 208 
  __here_0: 
            #line 208 
  ;
  #line 208 
  ;
  #line 208 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  #line 210 
  return;
}

#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  #line 213 
  __here_0: 
            #line 213 
  ;
  #line 213 
  ;
  #line 213 
  lock_release(map,(unsigned long)((void *)0));
  #line 215 
  return;
}

#line 216 
#line 216 
extern struct lockdep_map rcu_lock_map;
#line 220 
#line 220 
int debug_lockdep_rcu_enabled(void);
#line 613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  #line 615 
  __rcu_read_lock();
  #line 617 
  rcu_lock_acquire(& rcu_lock_map);
  {
    #line 618 
    bool __warned;
    #line 618 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 618 
      if (! __warned) {
        #line 618 
        if (! rcu_is_watching()) {
          #line 618 
          __warned = (_Bool)1;
          #line 618 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",618,(char *)"rcu_read_lock() used illegally while idle");
        }
      }
  }
  #line 621 
  return;
}

#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    #line 667 
    bool __warned;
    #line 667 
    if (debug_lockdep_rcu_enabled() != 0) 
      #line 667 
      if (! __warned) {
        #line 667 
        if (! rcu_is_watching()) {
          #line 667 
          __warned = (_Bool)1;
          #line 667 
          lockdep_rcu_suspicious((char *)"./include/linux/rcupdate.h",667,(char *)"rcu_read_unlock() used illegally while idle");
        }
      }
  }
  #line 670 
  __rcu_read_unlock();
  #line 671 
  rcu_lock_release(& rcu_lock_map);
  #line 672 
  return;
}

#line 5452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 5452 
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *, u8 *);
#line 3160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static u32 rtl_get_rfreg(struct ieee80211_hw *hw, enum radio_path rfpath, u32 regaddr, u32 bitmask)
{
  #line 3164 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 3166 
  return (*(((rtlpriv->cfg)->ops)->get_rfreg))(hw,rfpath,regaddr,bitmask);
}

#line 3225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/wifi.h"
__inline static struct ieee80211_sta *rtl_find_sta(struct ieee80211_hw *hw, u8 *mac_addr)
{
  #line 3228 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 3230 
  return ieee80211_find_sta(mac->vif,mac_addr);
}

#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static u32 edca_setting_dl[10U] = {42063U, 6202447U, 6202447U, 42544U, 42063U, 42544U, 42544U, 42027U};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static u32 edca_setting_dl_gmode[10U] = {17186U, 42063U, 6202447U, 42027U, 6177570U, 17186U, 42032U, 6202447U};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static u32 edca_setting_ul[10U] = {6177570U, 42063U, 6202447U, 6202146U, 6202402U, 6202146U, 4105295U, 6202447U};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_check_edca_turbo(struct ieee80211_hw *hw)
{
  #line 51 
  u64 last_txok_cnt;
  #line 52 
  u64 last_rxok_cnt;
  #line 48 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 49 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 53 
  u64 cur_txok_cnt = 0ULL;
  #line 54 
  u64 cur_rxok_cnt = 0ULL;
  #line 56 
  u32 edca_be_ul = edca_setting_ul[mac->vendor];
  #line 57 
  u32 edca_be_dl = edca_setting_dl[mac->vendor];
  #line 58 
  u32 edca_gmode = edca_setting_dl_gmode[mac->vendor];
  #line 60 
  if (mac->link_state != (unsigned int)MAC80211_LINKED) {
    #line 61 
    rtlpriv->dm.current_turbo_edca = (_Bool)0;
    #line 62 
    goto dm_checkedcaturbo_exit;
  }
  #line 65 
  if (! rtlpriv->dm.is_any_nonbepkts && ! rtlpriv->dm.disable_framebursting) {
    #line 67 
    cur_txok_cnt = rtlpriv->stats.txbytesunicast - last_txok_cnt;
    #line 68 
    cur_rxok_cnt = rtlpriv->stats.rxbytesunicast - last_rxok_cnt;
    #line 70 
    if ((unsigned int)rtlpriv->phy.rf_type == 1U) {
      #line 71 
      if (cur_rxok_cnt * 4ULL < cur_txok_cnt) {
        #line 73 
        if ((int)rtlpriv->dm.is_cur_rdlstate != 0 || ! rtlpriv->dm.current_turbo_edca) {
          #line 75 
          rtl_write_dword(rtlpriv,472U,edca_be_ul);
          #line 77 
          rtlpriv->dm.is_cur_rdlstate = (_Bool)0;
        }
      }
      else 
        #line 80 
        if (! rtlpriv->dm.is_cur_rdlstate || ! rtlpriv->dm.current_turbo_edca) {
          #line 82 
          if ((unsigned int)mac->mode == 4U || (unsigned int)mac->mode == 2U) 
            #line 84 
            rtl_write_dword(rtlpriv,472U,edca_gmode); else 
                                                           #line 88 
                                                           rtl_write_dword(rtlpriv,472U,edca_be_dl);
          #line 91 
          rtlpriv->dm.is_cur_rdlstate = (_Bool)1;
        }
      #line 94 
      rtlpriv->dm.current_turbo_edca = (_Bool)1;
    }
    else {
      #line 96 
      if (cur_txok_cnt * 4ULL < cur_rxok_cnt) {
        #line 97 
        if (! rtlpriv->dm.is_cur_rdlstate || ! rtlpriv->dm.current_turbo_edca) {
          #line 99 
          if ((unsigned int)mac->mode == 4U || (unsigned int)mac->mode == 2U) 
            #line 101 
            rtl_write_dword(rtlpriv,472U,edca_gmode); else 
                                                           #line 105 
                                                           rtl_write_dword(rtlpriv,472U,edca_be_dl);
          #line 108 
          rtlpriv->dm.is_cur_rdlstate = (_Bool)1;
        }
      }
      else 
        #line 111 
        if ((int)rtlpriv->dm.is_cur_rdlstate != 0 || ! rtlpriv->dm.current_turbo_edca) {
          #line 113 
          rtl_write_dword(rtlpriv,472U,edca_be_ul);
          #line 115 
          rtlpriv->dm.is_cur_rdlstate = (_Bool)0;
        }
      #line 118 
      rtlpriv->dm.current_turbo_edca = (_Bool)1;
    }
  }
  else 
    #line 121 
    if ((int)rtlpriv->dm.current_turbo_edca != 0) {
      #line 122 
      u8 tmp = (unsigned char)0U;
      #line 123 
      (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)32,& tmp);
      #line 125 
      rtlpriv->dm.current_turbo_edca = (_Bool)0;
    }
  #line 129 
  dm_checkedcaturbo_exit: 
                          #line 129 
  ;
  #line 130 
  rtlpriv->dm.is_any_nonbepkts = (_Bool)0;
  #line 131 
  last_txok_cnt = rtlpriv->stats.txbytesunicast;
  #line 132 
  last_rxok_cnt = rtlpriv->stats.rxbytesunicast;
  #line 133 
  return;
}

#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_txpowertracking_callback_thermalmeter(struct ieee80211_hw *hw)
{
  #line 138 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 139 
  struct rtl_efuse *rtlefuse = & ((struct rtl_priv *)hw->priv)->efuse;
  #line 140 
  u8 thermalvalue = (unsigned char)0U;
  #line 141 
  u32 fw_cmd = 0U;
  #line 143 
  rtlpriv->dm.txpower_trackinginit = (_Bool)1;
  #line 145 
  thermalvalue = (unsigned char)rtl_get_rfreg(hw,(enum radio_path)RF90_PATH_A,36U,31U);
  #line 147 
  _rtl_dbg_trace(rtlpriv,131072ULL,4,(char *)"Readback Thermal Meter = 0x%x pre thermal meter 0x%x eeprom_thermal meter 0x%x\n",(int)thermalvalue,(int)rtlpriv->dm.thermalvalue,(int)rtlefuse->eeprom_thermalmeter);
  #line 152 
  if ((unsigned int)thermalvalue != 0U) {
    #line 153 
    rtlpriv->dm.thermalvalue = thermalvalue;
    #line 154 
    if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 52U) 
      #line 155 
      rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_TXPWR_TRACK_THERMAL);
    else {
      #line 157 
      fw_cmd = ((unsigned int)((int)rtlpriv->efuse.thermalmeter[0] << 8) | (unsigned int)((int)thermalvalue << 16)) | 4244635673U;
      #line 161 
      _rtl_dbg_trace(rtlpriv,131072ULL,4,(char *)"Write to FW Thermal Val = 0x%x\n",fw_cmd);
      #line 164 
      rtl_write_dword(rtlpriv,704U,fw_cmd);
      #line 165 
      rtl92s_phy_chk_fwcmd_iodone(hw);
    }
  }
  #line 169 
  rtlpriv->dm.txpowercount = (unsigned char)0U;
  #line 170 
  return;
}

#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_check_txpowertracking_thermalmeter(struct ieee80211_hw *hw)
{
  #line 175 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 176 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 177 
  u8 tx_power_checkcnt = (unsigned char)5U;
  #line 180 
  if ((unsigned int)rtlphy->rf_type == 2U) 
                                           #line 181 
                                           return;
  #line 183 
  if (! rtlpriv->dm.txpower_tracking) 
                                      #line 184 
                                      return;
  #line 186 
  if ((int)rtlpriv->dm.txpowercount <= (int)tx_power_checkcnt) {
    #line 187 
    rtlpriv->dm.txpowercount = (u8)((int)rtlpriv->dm.txpowercount + 1);
    #line 188 
    return;
  }
  #line 191 
  if ((unsigned int)rtlpriv->dm.tm_trigger == 0U) {
    #line 192 
    rtl_set_rfreg(hw,(enum radio_path)RF90_PATH_A,36U,1048575U,96U);
    #line 194 
    rtlpriv->dm.tm_trigger = (unsigned char)1U;
  }
  else {
    #line 196 
    _rtl92s_dm_txpowertracking_callback_thermalmeter(hw);
    #line 197 
    rtlpriv->dm.tm_trigger = (unsigned char)0U;
  }
  #line 199 
  return;
}

#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_refresh_rateadaptive_mask(struct ieee80211_hw *hw)
{
  #line 203 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 204 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 205 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 206 
  struct rate_adaptive *ra = & rtlpriv->ra;
  #line 207 
  struct ieee80211_sta *sta = (struct ieee80211_sta *)0;
  #line 208 
  u32 low_rssi_thresh = 0U;
  #line 209 
  u32 middle_rssi_thresh = 0U;
  #line 210 
  u32 high_rssi_thresh = 0U;
  #line 212 
  if ((int)is_hal_stop(rtlhal) != 0) 
                                     #line 213 
                                     return;
  #line 215 
  if (! rtlpriv->dm.useramask) 
                               #line 216 
                               return;
  #line 218 
  if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 60U && ! rtlpriv->dm.inform_fw_driverctrldm) {
    #line 220 
    rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_CTRL_DM_BY_DRIVER);
    #line 221 
    rtlpriv->dm.inform_fw_driverctrldm = (_Bool)1;
  }
  #line 224 
  if (mac->link_state == (unsigned int)MAC80211_LINKED && mac->opmode == (unsigned int)NL80211_IFTYPE_STATION) {
    #line 226 
    switch ((int)ra->pre_ratr_state) {
      #line 227 
      case 0: 
              #line 227 
      ;
      #line 228 
      high_rssi_thresh = 40U;
      #line 229 
      middle_rssi_thresh = 30U;
      #line 230 
      low_rssi_thresh = 20U;
      #line 231 
      break;
      #line 232 
      case 2: 
              #line 232 
      ;
      #line 233 
      high_rssi_thresh = 44U;
      #line 234 
      middle_rssi_thresh = 30U;
      #line 235 
      low_rssi_thresh = 20U;
      #line 236 
      break;
      #line 237 
      case 4: 
              #line 237 
      ;
      #line 238 
      high_rssi_thresh = 44U;
      #line 239 
      middle_rssi_thresh = 34U;
      #line 240 
      low_rssi_thresh = 20U;
      #line 241 
      break;
      #line 242 
      case 5: 
              #line 242 
      ;
      #line 243 
      high_rssi_thresh = 44U;
      #line 244 
      middle_rssi_thresh = 34U;
      #line 245 
      low_rssi_thresh = 24U;
      #line 246 
      break;
      #line 247 
      default: 
               #line 247 
      ;
      #line 248 
      high_rssi_thresh = 44U;
      #line 249 
      middle_rssi_thresh = 34U;
      #line 250 
      low_rssi_thresh = 24U;
      #line 251 
      break;
    }
    #line 254 
    if (rtlpriv->dm.undec_sm_pwdb > (long)high_rssi_thresh) 
                                                            #line 255 
                                                            ra->ratr_state = (unsigned char)0U;
    else 
      #line 256 
      if (rtlpriv->dm.undec_sm_pwdb > (long)middle_rssi_thresh) 
                                                                #line 258 
                                                                ra->ratr_state = (unsigned char)4U;
      else 
        #line 259 
        if (rtlpriv->dm.undec_sm_pwdb > (long)low_rssi_thresh) 
                                                               #line 261 
                                                               ra->ratr_state = (unsigned char)4U; else 
                                                                    #line 263 
                                                                    ra->ratr_state = (unsigned char)5U;
    #line 266 
    if ((int)ra->pre_ratr_state != (int)ra->ratr_state) {
      #line 267 
      _rtl_dbg_trace(rtlpriv,2048ULL,4,(char *)"RSSI = %ld RSSI_LEVEL = %d PreState = %d, CurState = %d\n",rtlpriv->dm.undec_sm_pwdb,(int)ra->ratr_state,(int)ra->pre_ratr_state,(int)ra->ratr_state);
      #line 272 
      rcu_read_lock();
      #line 273 
      sta = rtl_find_sta(hw,(u8 *)(& mac->bssid));
      #line 274 
      if (sta != (struct ieee80211_sta *)0) 
                                            #line 275 
                                            (*(((rtlpriv->cfg)->ops)->update_rate_tbl))(hw,sta,(unsigned char)((int)ra->ratr_state),(_Bool)1);
      #line 278 
      rcu_read_unlock();
      #line 280 
      ra->pre_ratr_state = ra->ratr_state;
    }
  }
  #line 283 
  return;
}

#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_switch_baseband_mrc(struct ieee80211_hw *hw)
{
  #line 291 
  bool current_mrc;
  #line 287 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 288 
  struct rtl_hal *rtlhal = & ((struct rtl_priv *)hw->priv)->rtlhal;
  #line 289 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 290 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 292 
  bool enable_mrc = (_Bool)1;
  #line 293 
  long tmpentry_maxpwdb = 0L;
  #line 294 
  u8 rssi_a = (unsigned char)0U;
  #line 295 
  u8 rssi_b = (unsigned char)0U;
  #line 297 
  if ((int)is_hal_stop(rtlhal) != 0) 
                                     #line 298 
                                     return;
  #line 300 
  if ((unsigned int)rtlphy->rf_type == 0U || (unsigned int)rtlphy->rf_type == 2U) 
    #line 301 
    return;
  #line 303 
  (*(((rtlpriv->cfg)->ops)->get_hw_reg))(hw,(unsigned char)93,(u8 *)(& current_mrc));
  #line 305 
  if (mac->link_state > (unsigned int)MAC80211_LINKING) 
    #line 306 
    if (rtlpriv->dm.undec_sm_pwdb > tmpentry_maxpwdb) {
      #line 307 
      rssi_a = rtlpriv->stats.rx_rssi_percentage[0];
      #line 308 
      rssi_b = rtlpriv->stats.rx_rssi_percentage[1];
    }
  #line 313 
  if ((unsigned int)mac->mode != 2U) 
    #line 314 
    if ((unsigned int)rssi_a == 0U && (unsigned int)rssi_b == 0U) 
                                                                  #line 315 
                                                                  enable_mrc = (_Bool)1;
    else 
      #line 316 
      if ((unsigned int)rssi_b > 30U) 
                                      #line 318 
                                      enable_mrc = (_Bool)1;
      else 
        #line 319 
        if ((unsigned int)rssi_b <= 4U) 
                                        #line 321 
                                        enable_mrc = (_Bool)0;
        else 
          #line 323 
          if ((unsigned int)rssi_a > 15U && (int)rssi_a >= (int)rssi_b) 
            #line 324 
            if ((int)rssi_a - (int)rssi_b > 15) 
                                                #line 326 
                                                enable_mrc = (_Bool)0;
            else 
              #line 327 
              if ((int)rssi_a - (int)rssi_b <= 9) 
                                                  #line 329 
                                                  enable_mrc = (_Bool)1; else 
                                                                    #line 331 
                                                                    enable_mrc = current_mrc;
          else 
               #line 334 
               enable_mrc = (_Bool)1;
  #line 339 
  if ((int)enable_mrc != (int)current_mrc) 
                                           #line 340 
                                           (*(((rtlpriv->cfg)->ops)->set_hw_reg))(hw,(unsigned char)93,(u8 *)(& enable_mrc));
  #line 342 
  return;
}

#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
void rtl92s_dm_init_edca_turbo(struct ieee80211_hw *hw)
{
  #line 347 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 349 
  rtlpriv->dm.current_turbo_edca = (_Bool)0;
  #line 350 
  rtlpriv->dm.is_any_nonbepkts = (_Bool)0;
  #line 351 
  rtlpriv->dm.is_cur_rdlstate = (_Bool)0;
  #line 352 
  return;
}

#line 354  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_init_rate_adaptive_mask(struct ieee80211_hw *hw)
{
  #line 356 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 357 
  struct rate_adaptive *ra = & rtlpriv->ra;
  #line 359 
  ra->ratr_state = (unsigned char)6U;
  #line 360 
  ra->pre_ratr_state = (unsigned char)6U;
  #line 362 
  if ((unsigned int)rtlpriv->dm.dm_type == 1U && (unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 59U) 
    #line 364 
    rtlpriv->dm.useramask = (_Bool)1; else 
                                           #line 366 
                                           rtlpriv->dm.useramask = (_Bool)0;
  #line 368 
  rtlpriv->dm.useramask = (_Bool)0;
  #line 369 
  rtlpriv->dm.inform_fw_driverctrldm = (_Bool)0;
  #line 370 
  return;
}

#line 372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_init_txpowertracking_thermalmeter(struct ieee80211_hw *hw)
{
  #line 375 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 377 
  rtlpriv->dm.txpower_tracking = (_Bool)1;
  #line 378 
  rtlpriv->dm.txpowercount = (unsigned char)0U;
  #line 379 
  rtlpriv->dm.txpower_trackinginit = (_Bool)0;
  #line 380 
  return;
}

#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_false_alarm_counter_statistics(struct ieee80211_hw *hw)
{
  #line 386 
  u32 ret_value;
  #line 384 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 385 
  struct false_alarm_statistics *falsealm_cnt = & rtlpriv->falsealm_cnt;
  #line 388 
  ret_value = rtl_get_bbreg(hw,3488U,4294967295U);
  #line 389 
  falsealm_cnt->cnt_parity_fail = ret_value >> 16;
  #line 391 
  ret_value = rtl_get_bbreg(hw,3492U,4294967295U);
  #line 392 
  falsealm_cnt->cnt_rate_illegal = ret_value & 65535U;
  #line 393 
  falsealm_cnt->cnt_crc8_fail = ret_value >> 16;
  #line 394 
  ret_value = rtl_get_bbreg(hw,3496U,4294967295U);
  #line 395 
  falsealm_cnt->cnt_mcs_fail = ret_value & 65535U;
  #line 397 
  falsealm_cnt->cnt_ofdm_fail = ((falsealm_cnt->cnt_parity_fail + falsealm_cnt->cnt_rate_illegal) + falsealm_cnt->cnt_crc8_fail) + falsealm_cnt->cnt_mcs_fail;
  #line 402 
  ret_value = rtl_get_bbreg(hw,3172U,4294967295U);
  #line 403 
  falsealm_cnt->cnt_cck_fail = ret_value & 65535U;
  #line 404 
  falsealm_cnt->cnt_all = falsealm_cnt->cnt_ofdm_fail + falsealm_cnt->cnt_cck_fail;
  #line 406 
  return;
}

#line 408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void rtl92s_backoff_enable_flag(struct ieee80211_hw *hw)
{
  #line 410 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 411 
  struct dig_t *digtable = & rtlpriv->dm_digtable;
  #line 412 
  struct false_alarm_statistics *falsealm_cnt = & rtlpriv->falsealm_cnt;
  #line 414 
  if (falsealm_cnt->cnt_all > digtable->fa_highthresh) 
    #line 415 
    if ((int)digtable->back_val + -5 <= (int)digtable->backoffval_range_min) 
      #line 417 
      digtable->back_val = digtable->backoffval_range_min; else 
                                                                #line 419 
                                                                digtable->back_val = (signed char)((unsigned int)digtable->back_val + 250U);
  else 
    #line 420 
    if (falsealm_cnt->cnt_all < digtable->fa_lowthresh) 
      #line 421 
      if ((int)digtable->back_val + 5 >= (int)digtable->backoffval_range_max) 
        #line 423 
        digtable->back_val = digtable->backoffval_range_max; else 
                                                                  #line 426 
                                                                  digtable->back_val = (signed char)((unsigned int)digtable->back_val + 6U);
  #line 427 
  return;
}

#line 430  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_initial_gain_sta_beforeconnect(struct ieee80211_hw *hw)
{
  #line 435 
  u8 initialized;
  #line 435 
  u8 force_write;
  #line 432 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 433 
  struct dig_t *digtable = & rtlpriv->dm_digtable;
  #line 434 
  struct false_alarm_statistics *falsealm_cnt = & rtlpriv->falsealm_cnt;
  #line 436 
  u8 initial_gain = (unsigned char)0U;
  #line 438 
  if ((int)digtable->pre_sta_cstate == (int)digtable->cur_sta_cstate || (unsigned int)digtable->cur_sta_cstate == 2U) 
    #line 440 
    if ((unsigned int)digtable->cur_sta_cstate == 2U) {
      #line 441 
      if (rtlpriv->psc.rfpwr_state != (unsigned int)ERFON) 
                                                           #line 442 
                                                           return;
      #line 444 
      if ((unsigned int)digtable->backoff_enable_flag != 0U) 
                                                             #line 445 
                                                             rtl92s_backoff_enable_flag(hw); else 
                                                                    #line 447 
                                                                    digtable->back_val = (signed char)12;
      #line 449 
      if ((digtable->rssi_val + 10L) - (long)digtable->back_val > (long)digtable->rx_gain_max) 
        #line 451 
        digtable->cur_igvalue = (unsigned int)digtable->rx_gain_max;
      else 
        #line 453 
        if ((digtable->rssi_val + 10L) - (long)digtable->back_val < (long)digtable->rx_gain_min) 
          #line 455 
          digtable->cur_igvalue = (unsigned int)digtable->rx_gain_min; else 
                                                                    #line 458 
                                                                    digtable->cur_igvalue = ((unsigned int)digtable->rssi_val - (unsigned int)digtable->back_val) + 10U;
      #line 461 
      if (falsealm_cnt->cnt_all > 10000U) 
        #line 462 
        if (51U > digtable->cur_igvalue) 
                                         #line 462 
                                         digtable->cur_igvalue = 51U; else 
                                                                    #line 462 
                                                                    digtable->cur_igvalue = digtable->cur_igvalue;
      #line 466 
      if (falsealm_cnt->cnt_all > 16000U) 
                                          #line 467 
                                          digtable->cur_igvalue = (unsigned int)digtable->rx_gain_max;
    }
    else 
         #line 472 
         return;
  else {
    #line 478 
    digtable->dig_ext_port_stage = (unsigned char)4U;
    #line 479 
    rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_DIG_ENABLE);
    #line 481 
    digtable->back_val = (signed char)12;
    #line 482 
    digtable->cur_igvalue = (unsigned int)rtlpriv->phy.default_initialgain[0];
    #line 483 
    digtable->pre_igvalue = 0U;
    #line 484 
    return;
  }
  #line 488 
  ;
  #line 488 
  if (digtable->pre_igvalue != rtl_get_bbreg(hw,3152U,255U)) 
                                                             #line 490 
                                                             force_write = (unsigned char)1U;
  #line 492 
  if ((digtable->pre_igvalue != digtable->cur_igvalue || (unsigned int)initialized == 0U) || (unsigned int)force_write != 0U) {
    #line 495 
    rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_DIG_DISABLE);
    #line 497 
    initial_gain = (unsigned char)digtable->cur_igvalue;
    #line 500 
    rtl_set_bbreg(hw,3152U,255U,(unsigned int)initial_gain);
    #line 501 
    rtl_set_bbreg(hw,3160U,255U,(unsigned int)initial_gain);
    #line 502 
    digtable->pre_igvalue = digtable->cur_igvalue;
    #line 503 
    initialized = (unsigned char)1U;
    #line 504 
    force_write = (unsigned char)0U;
  }
  #line 506 
  return;
}

#line 508  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_ctrl_initgain_bytwoport(struct ieee80211_hw *hw)
{
  #line 510 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 511 
  struct dig_t *dig = & rtlpriv->dm_digtable;
  #line 513 
  if ((int)rtlpriv->mac80211.act_scanning != 0) 
                                                #line 514 
                                                return;
  #line 517 
  if (rtlpriv->mac80211.link_state > (unsigned int)MAC80211_LINKING || rtlpriv->mac80211.opmode == (unsigned int)NL80211_IFTYPE_ADHOC) 
    #line 519 
    dig->cur_sta_cstate = (unsigned char)1U; else 
                                                  #line 521 
                                                  dig->cur_sta_cstate = (unsigned char)0U;
  #line 523 
  dig->rssi_val = rtlpriv->dm.undec_sm_pwdb;
  #line 526 
  if ((unsigned int)dig->cur_sta_cstate != 0U) 
    #line 527 
    if ((unsigned int)dig->dig_twoport_algorithm == 1U) {
      #line 529 
      dig->dig_twoport_algorithm = (unsigned char)0U;
      #line 530 
      rtl92s_phy_set_fw_cmd(hw,(enum fwcmd_iotype)FW_CMD_DIG_MODE_SS);
    }
  #line 534 
  _rtl92s_dm_false_alarm_counter_statistics(hw);
  #line 535 
  _rtl92s_dm_initial_gain_sta_beforeconnect(hw);
  #line 537 
  dig->pre_sta_cstate = dig->cur_sta_cstate;
  #line 538 
  return;
}

#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_ctrl_initgain_byrssi(struct ieee80211_hw *hw)
{
  #line 542 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 543 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 544 
  struct dig_t *digtable = & rtlpriv->dm_digtable;
  #line 547 
  if ((unsigned int)rtlphy->rf_type == 2U) 
                                           #line 548 
                                           return;
  #line 550 
  if (! rtlpriv->dm.dm_initialgain_enable) 
                                           #line 551 
                                           return;
  #line 553 
  if ((unsigned int)digtable->dig_enable_flag == 0U) 
                                                     #line 554 
                                                     return;
  #line 556 
  _rtl92s_dm_ctrl_initgain_bytwoport(hw);
  #line 557 
  return;
}

#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_dynamic_txpower(struct ieee80211_hw *hw)
{
  #line 564 
  long undec_sm_pwdb;
  #line 565 
  long txpwr_threshold_lv1;
  #line 565 
  long txpwr_threshold_lv2;
  #line 561 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 562 
  struct rtl_phy *rtlphy = & rtlpriv->phy;
  #line 563 
  struct rtl_mac *mac = & ((struct rtl_priv *)hw->priv)->mac80211;
  #line 568 
  if ((unsigned int)rtlphy->rf_type == 2U) 
                                           #line 569 
                                           return;
  #line 571 
  if (! rtlpriv->dm.dynamic_txpower_enable || ((unsigned long)rtlpriv->dm.dm_flag & 2UL) != 0UL) {
    #line 573 
    rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)0U;
    #line 574 
    return;
  }
  #line 577 
  if (mac->link_state <= (unsigned int)MAC80211_LINKING && rtlpriv->dm.entry_min_undec_sm_pwdb == 0L) {
    #line 579 
    _rtl_dbg_trace(rtlpriv,65536ULL,5,(char *)"Not connected to any\n");
    #line 582 
    rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)0U;
    #line 584 
    rtlpriv->dm.last_dtp_lvl = (unsigned char)0U;
    #line 585 
    return;
  }
  #line 588 
  if (mac->link_state > (unsigned int)MAC80211_LINKING) 
    #line 589 
    if (mac->opmode == (unsigned int)NL80211_IFTYPE_ADHOC) {
      #line 590 
      undec_sm_pwdb = rtlpriv->dm.entry_min_undec_sm_pwdb;
      #line 591 
      _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"AP Client PWDB = 0x%lx\n",undec_sm_pwdb);
    }
    else {
      #line 595 
      undec_sm_pwdb = rtlpriv->dm.undec_sm_pwdb;
      #line 596 
      _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"STA Default Port PWDB = 0x%lx\n",undec_sm_pwdb);
    }
  else {
    #line 601 
    undec_sm_pwdb = rtlpriv->dm.entry_min_undec_sm_pwdb;
    #line 603 
    _rtl_dbg_trace(rtlpriv,65536ULL,4,(char *)"AP Ext Port PWDB = 0x%lx\n",undec_sm_pwdb);
  }
  #line 608 
  txpwr_threshold_lv2 = 74L;
  #line 609 
  txpwr_threshold_lv1 = 67L;
  #line 611 
  if (rtl_get_bbreg(hw,3216U,255U) == 1U) 
                                          #line 612 
                                          rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)0U;
  else 
    #line 613 
    if (undec_sm_pwdb >= txpwr_threshold_lv2) 
                                              #line 614 
                                              rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)2U;
    else 
      #line 615 
      if (txpwr_threshold_lv2 + -3L > undec_sm_pwdb && undec_sm_pwdb >= txpwr_threshold_lv1) 
        #line 617 
        rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)1U;
      else 
        #line 618 
        if (txpwr_threshold_lv1 + -3L > undec_sm_pwdb) 
                                                       #line 619 
                                                       rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)0U;
  #line 621 
  if ((int)rtlpriv->dm.dynamic_txhighpower_lvl != (int)rtlpriv->dm.last_dtp_lvl) 
    #line 622 
    rtl92s_phy_set_txpower(hw,(unsigned char)((int)rtlphy->current_channel));
  #line 624 
  rtlpriv->dm.last_dtp_lvl = rtlpriv->dm.dynamic_txhighpower_lvl;
  #line 625 
  return;
}

#line 627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_init_dig(struct ieee80211_hw *hw)
{
  #line 629 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 630 
  struct dig_t *digtable = & rtlpriv->dm_digtable;
  #line 633 
  digtable->dig_enable_flag = (unsigned char)1U;
  #line 634 
  digtable->backoff_enable_flag = (unsigned char)1U;
  #line 636 
  if ((unsigned int)rtlpriv->dm.dm_type == 1U && (unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 59U) 
    #line 638 
    digtable->dig_algorithm = (unsigned char)3U; else 
                                                      #line 640 
                                                      digtable->dig_algorithm = (unsigned char)2U;
  #line 643 
  digtable->dig_twoport_algorithm = (unsigned char)0U;
  #line 644 
  digtable->dig_ext_port_stage = (unsigned char)4U;
  #line 646 
  digtable->dig_dbgmode = (unsigned char)0U;
  #line 647 
  digtable->dig_slgorithm_switch = (unsigned char)0U;
  #line 650 
  digtable->dig_state = (unsigned char)2U;
  #line 651 
  digtable->dig_highpwrstate = (unsigned char)2U;
  #line 653 
  digtable->cur_sta_cstate = (unsigned char)0U;
  #line 654 
  digtable->pre_sta_cstate = (unsigned char)0U;
  #line 655 
  digtable->cur_ap_cstate = (unsigned char)5U;
  #line 656 
  digtable->pre_ap_cstate = (unsigned char)5U;
  #line 658 
  digtable->rssi_lowthresh = 35U;
  #line 659 
  digtable->rssi_highthresh = 40U;
  #line 661 
  digtable->fa_lowthresh = 400U;
  #line 662 
  digtable->fa_highthresh = 1000U;
  #line 664 
  digtable->rssi_highpower_lowthresh = 70L;
  #line 665 
  digtable->rssi_highpower_highthresh = 75L;
  #line 668 
  digtable->rssi_val = 50L;
  #line 669 
  digtable->back_val = (signed char)12;
  #line 670 
  digtable->rx_gain_max = (unsigned char)62U;
  #line 672 
  digtable->rx_gain_min = (unsigned char)30U;
  #line 674 
  digtable->backoffval_range_max = (signed char)12;
  #line 675 
  digtable->backoffval_range_min = (signed char)(-4);
  #line 676 
  return;
}

#line 678  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
static void _rtl92s_dm_init_dynamic_txpower(struct ieee80211_hw *hw)
{
  #line 680 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 682 
  if ((unsigned int)((struct rt_firmware *)rtlpriv->rtlhal.pfirmware)->firmwareversion > 59U && (unsigned int)rtlpriv->dm.dm_type == 1U) 
    #line 684 
    rtlpriv->dm.dynamic_txpower_enable = (_Bool)1; else 
                                                        #line 686 
                                                        rtlpriv->dm.dynamic_txpower_enable = (_Bool)0;
  #line 688 
  rtlpriv->dm.last_dtp_lvl = (unsigned char)0U;
  #line 689 
  rtlpriv->dm.dynamic_txhighpower_lvl = (unsigned char)0U;
  #line 690 
  return;
}

#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
void rtl92s_dm_init(struct ieee80211_hw *hw)
{
  #line 694 
  struct rtl_priv *rtlpriv = (struct rtl_priv *)hw->priv;
  #line 696 
  rtlpriv->dm.dm_type = (unsigned char)1U;
  #line 697 
  rtlpriv->dm.undec_sm_pwdb = -1L;
  #line 699 
  _rtl92s_dm_init_dynamic_txpower(hw);
  #line 700 
  rtl92s_dm_init_edca_turbo(hw);
  #line 701 
  _rtl92s_dm_init_rate_adaptive_mask(hw);
  #line 702 
  _rtl92s_dm_init_txpowertracking_thermalmeter(hw);
  #line 703 
  _rtl92s_dm_init_dig(hw);
  #line 705 
  rtl_write_dword(rtlpriv,704U,4278190097U);
  #line 706 
  return;
}

#line 708  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/realtek/rtlwifi/rtl8192se/dm.c"
void rtl92s_dm_watchdog(struct ieee80211_hw *hw)
{
  #line 710 
  _rtl92s_dm_check_edca_turbo(hw);
  #line 711 
  _rtl92s_dm_check_txpowertracking_thermalmeter(hw);
  #line 712 
  _rtl92s_dm_ctrl_initgain_byrssi(hw);
  #line 713 
  _rtl92s_dm_dynamic_txpower(hw);
  #line 714 
  _rtl92s_dm_refresh_rateadaptive_mask(hw);
  #line 715 
  _rtl92s_dm_switch_baseband_mrc(hw);
  #line 716 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 123 
#line 123 
void ldv_pre_probe(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
int emg_runtime_enabled = 0;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
int emg_runtime_lowpower = 1;
#line 33 
#line 58 
void emg_dispatch_deregister_3(struct pci_driver *arg0);
#line 34 
#line 47 
void emg_dispatch_register_2(struct pci_driver *arg0);
#line 35 
#line 1287 
void *emg_entry_point_insmod(void *arg0);
#line 36 
#line 67 
void *emg_pci_pci_scenario_rtl92se_driver(void *arg0);
#line 38 
#line 245 
void *emg_pm_pm_ops_scenario_rtlwifi_pm_ops(void *arg0);
#line 39 
#line 1316 
int main(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_4;
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_5;
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_2(struct pci_driver *arg0)
{
  #line 48 
  int ret;
  #line 49 
  struct emg_struct_pci_scenario_rtl92se_driver_4 *cf_arg_4;
  #line 50 
  cf_arg_4 = (struct emg_struct_pci_scenario_rtl92se_driver_4 *)ldv_xmalloc(16UL);
  #line 51 
  cf_arg_4->arg0 = arg0;
  #line 52 
  ret = pthread_create(& emg_thread_4,(pthread_attr_t *)0,& emg_pci_pci_scenario_rtl92se_driver,(void *)cf_arg_4);
  #line 53 
  __VERIFIER_assume(ret == 0);
  #line 54 
  return;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_3(struct pci_driver *arg0)
{
  #line 59 
  int ret;
  #line 60 
  struct emg_struct_pci_scenario_rtl92se_driver_4 *cf_arg_4;
  #line 61 
  ret = pthread_join(emg_thread_4,(void **)0);
  #line 62 
  __VERIFIER_assume(ret == 0);
  #line 63 
  return;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
void *emg_pci_pci_scenario_rtl92se_driver(void *arg0)
{
  #line 70 
  int emg_4_choice;
  #line 71 
  struct pci_driver *emg_4_container;
  #line 72 
  struct pci_device_id *emg_4_device_id;
  #line 73 
  struct pci_dev *emg_4_resource_0;
  #line 74 
  struct pm_message emg_4_resource_1;
  #line 75 
  int emg_4_ret;
  #line 76 
  int emg_repeat_cnt_call_4_0 = 1;
  #line 77 
  int emg_repeat_cnt_call_4_1 = 1;
  #line 78 
  int emg_repeat_cnt_main_4_0 = 1;
  #line 79 
  int emg_repeat_cnt_main_4_1 = 1;
  #line 81 
  struct emg_struct_pci_scenario_rtl92se_driver_4 *data = (struct emg_struct_pci_scenario_rtl92se_driver_4 *)arg0;
  #line 85 
  emg_4_choice = 0;
  #line 86 
  emg_4_ret = ldv_undef_int();
  #line 87 
  emg_4_choice = 0;
  #line 88 
  emg_4_container = emg_alias_rtl92se_driver;
  #line 89 
  emg_4_ret = ldv_undef_int();
  #line 91 
  __VERIFIER_assume(data->arg0 == emg_alias_rtl92se_driver);
  #line 93 
  if (data != (struct emg_struct_pci_scenario_rtl92se_driver_4 *)0) {
    #line 94 
    emg_4_container = data->arg0;
    #line 95 
    ldv_free((void *)data);
  }
  #line 100 
  emg_4_resource_0 = (struct pci_dev *)ldv_xmalloc(3312UL);
  #line 101 
  emg_4_choice = __ldv_undef_int_range(0,5);
  #line 102 
  emg_4_device_id = emg_4_container->id_table + (unsigned long)emg_4_choice;
  #line 106 
  goto emg_main_4;
  #line 110 
  return (void *)0;
  #line 113 
  emg_call_4: 
              #line 113 
  ;
  #line 114 
  switch (ldv_undef_int()) {
    #line 115 
    case 0: 
            #line 115 
    ;
    #line 120 
    if (emg_repeat_cnt_call_4_1 > 0) {
      #line 121 
      emg_repeat_cnt_call_4_1 --;
      #line 123 
      goto emg_call_4;
    }
    else 
         #line 125 
         __VERIFIER_assume(0);
    #line 129 
    break;
    #line 131 
    case 1: 
            #line 131 
    ;
    #line 133 
    if (emg_4_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) 
      #line 134 
      emg_4_ret = (*(emg_4_container->suspend))(emg_4_resource_0,emg_4_resource_1); else 
                                                                    #line 136 
                                                                    emg_4_ret = ldv_undef_int();
    #line 142 
    emg_4_ret = ldv_filter_err_code(emg_4_ret);
    #line 146 
    if (emg_4_container->resume != (int (*)(struct pci_dev *))0) 
                                                                 #line 147 
                                                                 (*(emg_4_container->resume))(emg_4_resource_0);
    #line 151 
    if (emg_repeat_cnt_call_4_0 > 0) {
      #line 152 
      emg_repeat_cnt_call_4_0 --;
      #line 154 
      goto emg_call_4;
    }
    else 
         #line 156 
         __VERIFIER_assume(0);
    #line 160 
    break;
    #line 162 
    case 2: 
            #line 162 
    ;
    #line 164 
    if (emg_4_container->shutdown != (void (*)(struct pci_dev *))0) 
                                                                    #line 165 
                                                                    (*(emg_4_container->shutdown))(emg_4_resource_0);
    #line 170 
    rtl_pci_disconnect(emg_4_resource_0);
    #line 173 
    if (emg_repeat_cnt_main_4_1 > 0) {
      #line 174 
      emg_repeat_cnt_main_4_1 --;
      #line 176 
      goto emg_main_4;
    }
    else 
         #line 178 
         __VERIFIER_assume(0);
    #line 182 
    break;
    #line 184 
    default: 
             #line 184 
    ;
    #line 184 
    __VERIFIER_assume(0);
  }
  #line 187 
  return (void *)0;
  #line 190 
  emg_main_4: 
              #line 190 
  ;
  #line 191 
  if (ldv_undef_int() != 0) {
    #line 194 
    ldv_pre_probe();
    #line 198 
    emg_4_ret = rtl_pci_probe(emg_4_resource_0,emg_4_device_id);
    #line 203 
    emg_4_ret = ldv_post_probe(emg_4_ret);
    #line 206 
    if (ldv_undef_int() != 0) {
      #line 208 
      __VERIFIER_assume(emg_4_ret == 0);
      #line 212 
      goto emg_call_4;
    }
    else 
         #line 217 
         __VERIFIER_assume(emg_4_ret != 0);
    #line 221 
    if (emg_repeat_cnt_main_4_0 > 0) {
      #line 222 
      emg_repeat_cnt_main_4_0 --;
      #line 224 
      goto emg_main_4;
    }
    else 
         #line 226 
         __VERIFIER_assume(0);
  }
  else 
       #line 232 
       ldv_free((void *)emg_4_resource_0);
  #line 240 
  return (void *)0;
}

#line 245  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
void *emg_pm_pm_ops_scenario_rtlwifi_pm_ops(void *arg0)
{
  #line 248 
  struct device *emg_5_device;
  #line 249 
  struct dev_pm_ops *emg_5_pm_ops;
  #line 250 
  int emg_5_ret;
  #line 251 
  int emg_repeat_cnt_poff_5 = 1;
  #line 252 
  int emg_repeat_cnt_reslate_5 = 1;
  #line 253 
  int emg_repeat_cnt_plate_5 = 1;
  #line 254 
  int emg_repeat_cnt_resnoirq_5 = 1;
  #line 255 
  int emg_repeat_cnt_slate_5 = 1;
  #line 256 
  int emg_repeat_cnt_thlate_5 = 1;
  #line 257 
  int emg_repeat_cnt_restnoirq_5 = 1;
  #line 258 
  int emg_repeat_cnt_th_5 = 1;
  #line 259 
  int emg_repeat_cnt_rest_5 = 1;
  #line 260 
  int emg_repeat_cnt_no_irq_5 = 1;
  #line 261 
  int emg_repeat_cnt_pno_irq_5 = 1;
  #line 262 
  int emg_repeat_cnt_res_5 = 1;
  #line 263 
  int emg_repeat_cnt_sus_5 = 1;
  #line 264 
  int emg_repeat_cnt_flate_5 = 1;
  #line 265 
  int emg_repeat_cnt_run_resume_5 = 1;
  #line 266 
  int emg_repeat_cnt_tnoirq_5 = 1;
  #line 267 
  int emg_repeat_cnt_fr_5 = 1;
  #line 268 
  int emg_repeat_cnt_fnoirq_5 = 1;
  #line 269 
  int emg_repeat_cnt_reste_5 = 1;
  #line 272 
  emg_5_ret = ldv_undef_int();
  #line 273 
  emg_5_pm_ops = emg_alias_rtlwifi_pm_ops;
  #line 274 
  emg_5_ret = ldv_undef_int();
  #line 280 
  goto emg_do_5;
  #line 284 
  return (void *)0;
  #line 287 
  emg_compl_5: 
               #line 287 
  ;
  #line 289 
  if (emg_5_pm_ops->complete != (void (*)(struct device *))0) 
                                                              #line 290 
                                                              (*(emg_5_pm_ops->complete))(emg_5_device);
  #line 298 
  return (void *)0;
  #line 301 
  emg_do_5: 
            #line 301 
  ;
  #line 302 
  switch (ldv_undef_int()) {
    #line 303 
    case 0: 
            #line 303 
    ;
    #line 305 
    __VERIFIER_assume((emg_runtime_enabled == 1 && emg_runtime_lowpower == 1) != 0);
    #line 309 
    goto emg_runt_5;
    #line 314 
    case 1: 
            #line 314 
    ;
    #line 316 
    goto emg_normal_5;
    #line 321 
    case 2: 
            #line 321 
    ;
    #line 325 
    break;
    #line 327 
    default: 
             #line 327 
    ;
    #line 327 
    __VERIFIER_assume(0);
  }
  #line 330 
  return (void *)0;
  #line 333 
  emg_flate_5: 
               #line 333 
  ;
  #line 335 
  if (emg_5_pm_ops->freeze_late != (int (*)(struct device *))0) 
                                                                #line 336 
                                                                emg_5_ret = (*(emg_5_pm_ops->freeze_late))(emg_5_device); else 
                                                                    #line 338 
                                                                    emg_5_ret = ldv_undef_int();
  #line 344 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 347 
  if (ldv_undef_int() != 0) {
    #line 349 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 353 
    goto emg_thlate_5;
  }
  else 
       #line 358 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 362 
  if (emg_repeat_cnt_flate_5 > 0) {
    #line 363 
    emg_repeat_cnt_flate_5 --;
    #line 365 
    goto emg_flate_5;
  }
  else 
       #line 367 
       __VERIFIER_assume(0);
  #line 372 
  return (void *)0;
  #line 375 
  emg_fnoirq_5: 
                #line 375 
  ;
  #line 377 
  if (emg_5_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
                                                                 #line 378 
                                                                 emg_5_ret = (*(emg_5_pm_ops->freeze_noirq))(emg_5_device); else 
                                                                    #line 380 
                                                                    emg_5_ret = ldv_undef_int();
  #line 386 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 389 
  if (ldv_undef_int() != 0) {
    #line 391 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 395 
    goto emg_tnoirq_5;
  }
  else 
       #line 400 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 404 
  if (emg_repeat_cnt_fnoirq_5 > 0) {
    #line 405 
    emg_repeat_cnt_fnoirq_5 --;
    #line 407 
    goto emg_fnoirq_5;
  }
  else 
       #line 409 
       __VERIFIER_assume(0);
  #line 414 
  return (void *)0;
  #line 417 
  emg_fr_5: 
            #line 417 
  ;
  #line 419 
  emg_5_ret = rtl_pci_suspend(emg_5_device);
  #line 424 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 427 
  if (ldv_undef_int() != 0) {
    #line 429 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 432 
    if (ldv_undef_int() != 0) 
                              #line 434 
                              goto emg_fnoirq_5; else 
                                                      #line 439 
                                                      goto emg_flate_5;
  }
  else {
    #line 445 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 448 
    if (emg_repeat_cnt_fr_5 > 0) {
      #line 449 
      emg_repeat_cnt_fr_5 --;
      #line 451 
      goto emg_fr_5;
    }
    else 
         #line 453 
         __VERIFIER_assume(0);
  }
  #line 459 
  return (void *)0;
  #line 462 
  emg_no_irq_5: 
                #line 462 
  ;
  #line 464 
  if (emg_5_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
                                                                  #line 465 
                                                                  emg_5_ret = (*(emg_5_pm_ops->suspend_noirq))(emg_5_device); else 
                                                                    #line 467 
                                                                    emg_5_ret = ldv_undef_int();
  #line 473 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 476 
  if (ldv_undef_int() != 0) {
    #line 478 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 482 
    goto emg_resnoirq_5;
  }
  else 
       #line 487 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 491 
  if (emg_repeat_cnt_no_irq_5 > 0) {
    #line 492 
    emg_repeat_cnt_no_irq_5 --;
    #line 494 
    goto emg_no_irq_5;
  }
  else 
       #line 496 
       __VERIFIER_assume(0);
  #line 501 
  return (void *)0;
  #line 504 
  emg_normal_5: 
                #line 504 
  ;
  #line 506 
  if (emg_5_pm_ops->prepare != (int (*)(struct device *))0) 
                                                            #line 507 
                                                            emg_5_ret = (*(emg_5_pm_ops->prepare))(emg_5_device); else 
                                                                    #line 509 
                                                                    emg_5_ret = ldv_undef_int();
  #line 515 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 518 
  if (ldv_undef_int() != 0) {
    #line 520 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 523 
    switch (ldv_undef_int()) {
      #line 524 
      case 0: 
              #line 524 
      ;
      #line 526 
      goto emg_sus_5;
      #line 531 
      case 1: 
              #line 531 
      ;
      #line 533 
      goto emg_fr_5;
      #line 538 
      case 2: 
              #line 538 
      ;
      #line 540 
      goto emg_poff_5;
      #line 545 
      default: 
               #line 545 
      ;
      #line 545 
      __VERIFIER_assume(0);
    }
  }
  else 
       #line 549 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 557 
  return (void *)0;
  #line 560 
  emg_plate_5: 
               #line 560 
  ;
  #line 562 
  if (emg_5_pm_ops->poweroff_late != (int (*)(struct device *))0) 
                                                                  #line 563 
                                                                  emg_5_ret = (*(emg_5_pm_ops->poweroff_late))(emg_5_device); else 
                                                                    #line 565 
                                                                    emg_5_ret = ldv_undef_int();
  #line 571 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 574 
  if (ldv_undef_int() != 0) {
    #line 576 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 580 
    goto emg_reste_5;
  }
  else 
       #line 585 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 589 
  if (emg_repeat_cnt_plate_5 > 0) {
    #line 590 
    emg_repeat_cnt_plate_5 --;
    #line 592 
    goto emg_plate_5;
  }
  else 
       #line 594 
       __VERIFIER_assume(0);
  #line 599 
  return (void *)0;
  #line 602 
  emg_pno_irq_5: 
                 #line 602 
  ;
  #line 604 
  if (emg_5_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
                                                                   #line 605 
                                                                   emg_5_ret = (*(emg_5_pm_ops->poweroff_noirq))(emg_5_device); else 
                                                                    #line 607 
                                                                    emg_5_ret = ldv_undef_int();
  #line 613 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 616 
  if (ldv_undef_int() != 0) {
    #line 618 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 622 
    goto emg_restnoirq_5;
  }
  else 
       #line 627 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 631 
  if (emg_repeat_cnt_pno_irq_5 > 0) {
    #line 632 
    emg_repeat_cnt_pno_irq_5 --;
    #line 634 
    goto emg_pno_irq_5;
  }
  else 
       #line 636 
       __VERIFIER_assume(0);
  #line 641 
  return (void *)0;
  #line 644 
  emg_poff_5: 
              #line 644 
  ;
  #line 646 
  emg_5_ret = rtl_pci_suspend(emg_5_device);
  #line 651 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 654 
  if (ldv_undef_int() != 0) {
    #line 656 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 659 
    if (ldv_undef_int() != 0) 
                              #line 661 
                              goto emg_pno_irq_5; else 
                                                       #line 666 
                                                       goto emg_plate_5;
  }
  else {
    #line 672 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 675 
    if (emg_repeat_cnt_poff_5 > 0) {
      #line 676 
      emg_repeat_cnt_poff_5 --;
      #line 678 
      goto emg_poff_5;
    }
    else 
         #line 680 
         __VERIFIER_assume(0);
  }
  #line 686 
  return (void *)0;
  #line 689 
  emg_res_5: 
             #line 689 
  ;
  #line 691 
  emg_5_ret = rtl_pci_resume(emg_5_device);
  #line 696 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 699 
  if (ldv_undef_int() != 0) {
    #line 701 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 705 
    goto emg_compl_5;
  }
  else {
    #line 710 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 713 
    if (emg_repeat_cnt_res_5 > 0) {
      #line 714 
      emg_repeat_cnt_res_5 --;
      #line 716 
      goto emg_res_5;
    }
    else 
         #line 718 
         __VERIFIER_assume(0);
  }
  #line 724 
  return (void *)0;
  #line 727 
  emg_reslate_5: 
                 #line 727 
  ;
  #line 729 
  if (emg_5_pm_ops->resume_early != (int (*)(struct device *))0) 
                                                                 #line 730 
                                                                 emg_5_ret = (*(emg_5_pm_ops->resume_early))(emg_5_device); else 
                                                                    #line 732 
                                                                    emg_5_ret = ldv_undef_int();
  #line 738 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 741 
  if (ldv_undef_int() != 0) {
    #line 743 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 747 
    goto emg_res_5;
  }
  else 
       #line 752 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 756 
  if (emg_repeat_cnt_reslate_5 > 0) {
    #line 757 
    emg_repeat_cnt_reslate_5 --;
    #line 759 
    goto emg_reslate_5;
  }
  else 
       #line 761 
       __VERIFIER_assume(0);
  #line 766 
  return (void *)0;
  #line 769 
  emg_resnoirq_5: 
                  #line 769 
  ;
  #line 771 
  if (emg_5_pm_ops->resume_noirq != (int (*)(struct device *))0) 
                                                                 #line 772 
                                                                 emg_5_ret = (*(emg_5_pm_ops->resume_noirq))(emg_5_device); else 
                                                                    #line 774 
                                                                    emg_5_ret = ldv_undef_int();
  #line 780 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 783 
  if (ldv_undef_int() != 0) {
    #line 785 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 789 
    goto emg_res_5;
  }
  else 
       #line 794 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 798 
  if (emg_repeat_cnt_resnoirq_5 > 0) {
    #line 799 
    emg_repeat_cnt_resnoirq_5 --;
    #line 801 
    goto emg_resnoirq_5;
  }
  else 
       #line 803 
       __VERIFIER_assume(0);
  #line 808 
  return (void *)0;
  #line 811 
  emg_rest_5: 
              #line 811 
  ;
  #line 813 
  emg_5_ret = rtl_pci_resume(emg_5_device);
  #line 818 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 821 
  if (ldv_undef_int() != 0) {
    #line 823 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 827 
    goto emg_compl_5;
  }
  else {
    #line 832 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 835 
    if (emg_repeat_cnt_rest_5 > 0) {
      #line 836 
      emg_repeat_cnt_rest_5 --;
      #line 838 
      goto emg_rest_5;
    }
    else 
         #line 840 
         __VERIFIER_assume(0);
  }
  #line 846 
  return (void *)0;
  #line 849 
  emg_reste_5: 
               #line 849 
  ;
  #line 851 
  if (emg_5_pm_ops->restore_early != (int (*)(struct device *))0) 
                                                                  #line 852 
                                                                  emg_5_ret = (*(emg_5_pm_ops->restore_early))(emg_5_device); else 
                                                                    #line 854 
                                                                    emg_5_ret = ldv_undef_int();
  #line 860 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 863 
  if (ldv_undef_int() != 0) {
    #line 865 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 869 
    goto emg_rest_5;
  }
  else 
       #line 874 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 878 
  if (emg_repeat_cnt_reste_5 > 0) {
    #line 879 
    emg_repeat_cnt_reste_5 --;
    #line 881 
    goto emg_reste_5;
  }
  else 
       #line 883 
       __VERIFIER_assume(0);
  #line 888 
  return (void *)0;
  #line 891 
  emg_restnoirq_5: 
                   #line 891 
  ;
  #line 893 
  if (emg_5_pm_ops->restore_noirq != (int (*)(struct device *))0) 
                                                                  #line 894 
                                                                  emg_5_ret = (*(emg_5_pm_ops->restore_noirq))(emg_5_device); else 
                                                                    #line 896 
                                                                    emg_5_ret = ldv_undef_int();
  #line 902 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 905 
  if (ldv_undef_int() != 0) {
    #line 907 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 911 
    goto emg_rest_5;
  }
  else 
       #line 916 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 920 
  if (emg_repeat_cnt_restnoirq_5 > 0) {
    #line 921 
    emg_repeat_cnt_restnoirq_5 --;
    #line 923 
    goto emg_restnoirq_5;
  }
  else 
       #line 925 
       __VERIFIER_assume(0);
  #line 930 
  return (void *)0;
  #line 933 
  emg_run_resume_5: 
                    #line 933 
  ;
  #line 935 
  if (emg_5_pm_ops->runtime_resume != (int (*)(struct device *))0) 
                                                                   #line 936 
                                                                   emg_5_ret = (*(emg_5_pm_ops->runtime_resume))(emg_5_device); else 
                                                                    #line 938 
                                                                    emg_5_ret = ldv_undef_int();
  #line 944 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 945 
  if (emg_5_ret != 0) 
                      #line 946 
                      emg_runtime_lowpower = 0;
  #line 949 
  if (ldv_undef_int() != 0) 
                            #line 951 
                            __VERIFIER_assume(emg_5_ret == 0);
  else {
    #line 955 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 958 
    if (emg_repeat_cnt_run_resume_5 > 0) {
      #line 959 
      emg_repeat_cnt_run_resume_5 --;
      #line 961 
      goto emg_run_resume_5;
    }
    else 
         #line 963 
         __VERIFIER_assume(0);
  }
  #line 973 
  return (void *)0;
  #line 976 
  emg_runt_5: 
              #line 976 
  ;
  #line 977 
  if (ldv_undef_int() != 0) {
    #line 979 
    if (emg_5_pm_ops->runtime_idle != (int (*)(struct device *))0) 
                                                                   #line 980 
                                                                   emg_5_ret = (*(emg_5_pm_ops->runtime_idle))(emg_5_device); else 
                                                                    #line 982 
                                                                    emg_5_ret = ldv_undef_int();
    #line 988 
    emg_5_ret = ldv_post_probe(emg_5_ret);
  }
  else {
    #line 992 
    if (emg_5_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      #line 993 
      emg_5_ret = (*(emg_5_pm_ops->runtime_suspend))(emg_5_device); else 
                                                                    #line 995 
                                                                    emg_5_ret = ldv_undef_int();
    #line 1001 
    emg_5_ret = ldv_post_probe(emg_5_ret);
    #line 1002 
    if (emg_5_ret != 0) 
                        #line 1003 
                        emg_runtime_lowpower = 1;
    #line 1006 
    if (ldv_undef_int() != 0) {
      #line 1008 
      __VERIFIER_assume(emg_5_ret == 0);
      #line 1012 
      goto emg_run_resume_5;
    }
    else 
         #line 1017 
         __VERIFIER_assume(emg_5_ret != 0);
  }
  #line 1026 
  return (void *)0;
  #line 1029 
  emg_slate_5: 
               #line 1029 
  ;
  #line 1031 
  if (emg_5_pm_ops->suspend_late != (int (*)(struct device *))0) 
                                                                 #line 1032 
                                                                 emg_5_ret = (*(emg_5_pm_ops->suspend_late))(emg_5_device); else 
                                                                    #line 1034 
                                                                    emg_5_ret = ldv_undef_int();
  #line 1040 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 1043 
  if (ldv_undef_int() != 0) {
    #line 1045 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 1049 
    goto emg_reslate_5;
  }
  else 
       #line 1054 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 1058 
  if (emg_repeat_cnt_slate_5 > 0) {
    #line 1059 
    emg_repeat_cnt_slate_5 --;
    #line 1061 
    goto emg_slate_5;
  }
  else 
       #line 1063 
       __VERIFIER_assume(0);
  #line 1068 
  return (void *)0;
  #line 1071 
  emg_sus_5: 
             #line 1071 
  ;
  #line 1073 
  emg_5_ret = rtl_pci_suspend(emg_5_device);
  #line 1078 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 1081 
  if (ldv_undef_int() != 0) {
    #line 1083 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 1086 
    if (ldv_undef_int() != 0) 
                              #line 1088 
                              goto emg_no_irq_5; else 
                                                      #line 1093 
                                                      goto emg_slate_5;
  }
  else {
    #line 1099 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 1102 
    if (emg_repeat_cnt_sus_5 > 0) {
      #line 1103 
      emg_repeat_cnt_sus_5 --;
      #line 1105 
      goto emg_sus_5;
    }
    else 
         #line 1107 
         __VERIFIER_assume(0);
  }
  #line 1113 
  return (void *)0;
  #line 1116 
  emg_th_5: 
            #line 1116 
  ;
  #line 1118 
  emg_5_ret = rtl_pci_resume(emg_5_device);
  #line 1123 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 1126 
  if (ldv_undef_int() != 0) {
    #line 1128 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 1132 
    goto emg_compl_5;
  }
  else {
    #line 1137 
    __VERIFIER_assume(emg_5_ret != 0);
    #line 1140 
    if (emg_repeat_cnt_th_5 > 0) {
      #line 1141 
      emg_repeat_cnt_th_5 --;
      #line 1143 
      goto emg_th_5;
    }
    else 
         #line 1145 
         __VERIFIER_assume(0);
  }
  #line 1151 
  return (void *)0;
  #line 1154 
  emg_thlate_5: 
                #line 1154 
  ;
  #line 1156 
  if (emg_5_pm_ops->thaw_early != (int (*)(struct device *))0) 
                                                               #line 1157 
                                                               emg_5_ret = (*(emg_5_pm_ops->thaw_early))(emg_5_device); else 
                                                                    #line 1159 
                                                                    emg_5_ret = ldv_undef_int();
  #line 1165 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 1168 
  if (ldv_undef_int() != 0) {
    #line 1170 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 1174 
    goto emg_th_5;
  }
  else 
       #line 1179 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 1183 
  if (emg_repeat_cnt_thlate_5 > 0) {
    #line 1184 
    emg_repeat_cnt_thlate_5 --;
    #line 1186 
    goto emg_thlate_5;
  }
  else 
       #line 1188 
       __VERIFIER_assume(0);
  #line 1193 
  return (void *)0;
  #line 1196 
  emg_tnoirq_5: 
                #line 1196 
  ;
  #line 1198 
  if (emg_5_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
                                                               #line 1199 
                                                               emg_5_ret = (*(emg_5_pm_ops->thaw_noirq))(emg_5_device); else 
                                                                    #line 1201 
                                                                    emg_5_ret = ldv_undef_int();
  #line 1207 
  emg_5_ret = ldv_post_probe(emg_5_ret);
  #line 1210 
  if (ldv_undef_int() != 0) {
    #line 1212 
    __VERIFIER_assume(emg_5_ret == 0);
    #line 1216 
    goto emg_th_5;
  }
  else 
       #line 1221 
       __VERIFIER_assume(emg_5_ret != 0);
  #line 1225 
  if (emg_repeat_cnt_tnoirq_5 > 0) {
    #line 1226 
    emg_repeat_cnt_tnoirq_5 --;
    #line 1228 
    goto emg_tnoirq_5;
  }
  else 
       #line 1230 
       __VERIFIER_assume(0);
  #line 1235 
  return (void *)0;
}

#line 1240  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
int emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  #line 1243 
  struct pci_driver *emg_2_pci_driver;
  #line 1245 
  emg_2_pci_driver = emg_alias_rtl92se_driver;
  #line 1246 
  if (ldv_undef_int() != 0) {
    #line 1248 
    emg_2_pci_driver = arg0;
    #line 1252 
    emg_dispatch_register_2(emg_2_pci_driver);
    #line 1256 
    return 0;
  }
  else {
    #line 1260 
    return ldv_undef_int_negative();
  }
}

#line 1268  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
void emg_pci_unregister_driver(struct pci_driver *arg0)
{
  #line 1271 
  struct pci_driver *emg_3_pci_driver;
  #line 1273 
  emg_3_pci_driver = emg_alias_rtl92se_driver;
  #line 1275 
  emg_3_pci_driver = arg0;
  #line 1279 
  emg_dispatch_deregister_3(emg_3_pci_driver);
  #line 1282 
  return;
}

#line 1287  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 1290 
  int emg_1_ret;
  #line 1293 
  emg_1_ret = emg_rtl92se_driver_init();
  #line 1294 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 1297 
  if (ldv_undef_int() != 0) {
    #line 1299 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 1303 
    emg_rtl92se_driver_exit();
  }
  else 
       #line 1307 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 1311 
  return (void *)0;
}

#line 1316  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/realtek/rtlwifi/rtl8192se/rtl8192se.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 1318 
  ldv_initialize();
  #line 1320 
  emg_entry_point_insmod((void *)0);
  #line 1322 
  return 0;
}

