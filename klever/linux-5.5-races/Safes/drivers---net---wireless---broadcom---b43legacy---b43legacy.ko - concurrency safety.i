/* Generated by Frama-C */
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler_types.h"
typedef signed char __s8;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/int-ll64.h"
typedef __s8 s8;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u8 u8;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s16 s16;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u16 u16;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s32 s32;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u32 u32;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __s64 s64;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/int-ll64.h"
typedef __u64 u64;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/uapi/asm/posix_types_64.h"
typedef long __kernel_long_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_time64_t;
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/posix_types.h"
typedef __u16 __le16;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __le64;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u64 __be64;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef unsigned int __poll_t;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/types.h"
typedef u32 __kernel_dev_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned short umode_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef _Bool bool;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef s32 int32_t;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u8 uint8_t;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u32 uint32_t;
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 sector_t;
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 blkcnt_t;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 dma_addr_t;
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int gfp_t;
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int slab_flags_t;
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned int fmode_t;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef u64 phys_addr_t;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef unsigned long irq_hw_number_t;
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 170  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   s64 counter ;
};
#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 185 
struct hlist_node;
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 219  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
} __attribute__((__aligned__(8)));
#line 14  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
struct task_struct;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct module;
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
struct kernel_symbol {
   int value_offset ;
   int name_offset ;
   int namespace_offset ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
typedef __builtin_va_list __gnuc_va_list;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/usr/lib/gcc/x86_64-linux-gnu/6/include/stdarg.h"
typedef __gnuc_va_list va_list;
#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 139 
struct file_system_type;
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct ctl_table;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct va_format {
   char *fmt ;
   va_list *va ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry;
#line 87 
struct static_key_mod;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
union __anonunion_8 {
   unsigned long type ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct static_key {
   atomic_t enabled ;
   union __anonunion_8 __anonCompField_static_key_4 ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jump_label.h"
struct jump_entry {
   s32 code ;
   s32 target ;
   long key ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_debug.h"
struct device;
#line 65 
struct net_device;
#line 476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
struct file_operations;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/div64.h"
struct completion;
#line 88 
struct pt_regs;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_13 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_15 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_17 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/math64.h"
typedef __s64 time64_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/time_types.h"
struct __kernel_timespec {
   __kernel_time64_t tv_sec ;
   long long tv_nsec ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time64.h"
struct timespec64 {
   time64_t tv_sec ;
   long tv_nsec ;
};
#line 165 
struct old_timespec32;
#line 166 
struct pollfd;
#line 167 
enum timespec_type {
    TT_NONE = 0,
    TT_NATIVE = 1,
    TT_COMPAT = 2
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_futex_27 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_29 {
   struct __kernel_timespec *rmtp ;
   struct old_timespec32 *compat_rmtp ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_nanosleep_28 {
   clockid_t clockid ;
   enum timespec_type type ;
   union __anonunion_29 __anonCompField___anonstruct_nanosleep_28_5 ;
   u64 expires ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct __anonstruct_poll_30 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
union __anonunion_26 {
   struct __anonstruct_futex_27 futex ;
   struct __anonstruct_nanosleep_28 nanosleep ;
   struct __anonstruct_poll_30 poll ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/restart_block.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_26 __anonCompField_restart_block_6 ;
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
struct page;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
struct mm_struct;
#line 49 
struct io_bitmap;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   u16 limit0 ;
   u16 base0 ;
   u16 base1 : 8 ;
   u16 type : 4 ;
   u16 s : 1 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
   u16 limit1 : 4 ;
   u16 avl : 1 ;
   u16 l : 1 ;
   u16 d : 1 ;
   u16 g : 1 ;
   u16 base2 : 8 ;
} __attribute__((__packed__));
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct idt_bits {
   u16 ist : 3 ;
   u16 zero : 5 ;
   u16 type : 5 ;
   u16 dpl : 2 ;
   u16 p : 1 ;
} __attribute__((__packed__));
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct gate_struct {
   u16 offset_low ;
   u16 segment ;
   struct idt_bits bits ;
   u16 offset_middle ;
   u32 offset_high ;
   u32 reserved ;
} __attribute__((__packed__));
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef struct gate_struct gate_desc;
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
struct desc_ptr {
   unsigned short size ;
   unsigned long address ;
} __attribute__((__packed__));
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/desc_defs.h"
typedef unsigned long pteval_t;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pmdval_t;
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pudval_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long p4dval_t;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_53 {
   pteval_t pte ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_53 pte_t;
#line 265  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_54 {
   pgdval_t pgd ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_54 pgd_t;
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_p4d_t_55 {
   p4dval_t p4d ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_p4d_t_55 p4d_t;
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pud_t_56 {
   pudval_t pud ;
};
#line 319  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pud_t_56 pud_t;
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pmd_t_57 {
   pmdval_t pmd ;
};
#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pmd_t_57 pmd_t;
#line 505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 519 
struct file;
#line 530 
struct seq_file;
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/nospec-branch.h"
struct thread_struct;
#line 362 
struct cpumask;
#line 363 
struct flush_tlb_info;
#line 364 
struct mmu_gather;
#line 365 
struct vm_area_struct;
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_callee_save {
   void *func ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_init_ops {
   unsigned int (*patch)(u8 , void *, unsigned long , unsigned int ) ;
};
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lazy_ops {
   void (*enter)(void) ;
   void (*leave)(void) ;
   void (*flush)(void) ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_time_ops {
   unsigned long long (*sched_clock)(void) ;
   unsigned long long (*steal_clock)(int ) ;
};
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_cpu_ops {
   void (*io_delay)(void) ;
   unsigned long (*get_debugreg)(int ) ;
   void (*set_debugreg)(int , unsigned long ) ;
   unsigned long (*read_cr0)(void) ;
   void (*write_cr0)(unsigned long ) ;
   void (*write_cr4)(unsigned long ) ;
   void (*load_tr_desc)(void) ;
   void (*load_gdt)(struct desc_ptr *) ;
   void (*load_idt)(struct desc_ptr *) ;
   void (*set_ldt)(void *, unsigned int ) ;
   unsigned long (*store_tr)(void) ;
   void (*load_tls)(struct thread_struct *, unsigned int ) ;
   void (*load_gs_index)(unsigned int ) ;
   void (*write_ldt_entry)(struct desc_struct *, int , void *) ;
   void (*write_gdt_entry)(struct desc_struct *, int , void *, int ) ;
   void (*write_idt_entry)(gate_desc *, int , gate_desc *) ;
   void (*alloc_ldt)(struct desc_struct *, unsigned int ) ;
   void (*free_ldt)(struct desc_struct *, unsigned int ) ;
   void (*load_sp0)(unsigned long ) ;
   void (*wbinvd)(void) ;
   void (*cpuid)(unsigned int *, unsigned int *, unsigned int *, unsigned int *) ;
   u64 (*read_msr)(unsigned int ) ;
   void (*write_msr)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_msr_safe)(unsigned int , int *) ;
   int (*write_msr_safe)(unsigned int , unsigned int , unsigned int ) ;
   u64 (*read_pmc)(int ) ;
   void (*usergs_sysret64)(void) ;
   void (*iret)(void) ;
   void (*swapgs)(void) ;
   void (*start_context_switch)(struct task_struct *) ;
   void (*end_context_switch)(struct task_struct *) ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_mmu_ops {
   void (*flush_tlb_user)(void) ;
   void (*flush_tlb_kernel)(void) ;
   void (*flush_tlb_one_user)(unsigned long ) ;
   void (*flush_tlb_others)(struct cpumask *, struct flush_tlb_info *) ;
   void (*tlb_remove_table)(struct mmu_gather *, void *) ;
   void (*exit_mmap)(struct mm_struct *) ;
   struct paravirt_callee_save read_cr2 ;
   void (*write_cr2)(unsigned long ) ;
   unsigned long (*read_cr3)(void) ;
   void (*write_cr3)(unsigned long ) ;
   void (*activate_mm)(struct mm_struct *, struct mm_struct *) ;
   void (*dup_mmap)(struct mm_struct *, struct mm_struct *) ;
   int (*pgd_alloc)(struct mm_struct *) ;
   void (*pgd_free)(struct mm_struct *, pgd_t *) ;
   void (*alloc_pte)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pmd)(struct mm_struct *, unsigned long ) ;
   void (*alloc_pud)(struct mm_struct *, unsigned long ) ;
   void (*alloc_p4d)(struct mm_struct *, unsigned long ) ;
   void (*release_pte)(unsigned long ) ;
   void (*release_pmd)(unsigned long ) ;
   void (*release_pud)(unsigned long ) ;
   void (*release_p4d)(unsigned long ) ;
   void (*set_pte)(pte_t *, pte_t ) ;
   void (*set_pte_at)(struct mm_struct *, unsigned long , pte_t *, pte_t ) ;
   void (*set_pmd)(pmd_t *, pmd_t ) ;
   pte_t (*ptep_modify_prot_start)(struct vm_area_struct *, unsigned long , pte_t *) ;
   void (*ptep_modify_prot_commit)(struct vm_area_struct *, unsigned long , pte_t *, pte_t ) ;
   struct paravirt_callee_save pte_val ;
   struct paravirt_callee_save make_pte ;
   struct paravirt_callee_save pgd_val ;
   struct paravirt_callee_save make_pgd ;
   void (*set_pud)(pud_t *, pud_t ) ;
   struct paravirt_callee_save pmd_val ;
   struct paravirt_callee_save make_pmd ;
   struct paravirt_callee_save pud_val ;
   struct paravirt_callee_save make_pud ;
   void (*set_p4d)(p4d_t *, p4d_t ) ;
   struct paravirt_callee_save p4d_val ;
   struct paravirt_callee_save make_p4d ;
   void (*set_pgd)(pgd_t *, pgd_t ) ;
   struct pv_lazy_ops lazy_mode ;
   void (*set_fixmap)(unsigned int , phys_addr_t , pgprot_t ) ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_59 {
   u8 locked ;
   u8 pending ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct __anonstruct_60 {
   u16 locked_pending ;
   u16 tail ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
union __anonunion_58 {
   atomic_t val ;
   struct __anonstruct_59 __anonCompField___anonunion_58_7 ;
   struct __anonstruct_60 __anonCompField___anonunion_58_8 ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
struct qspinlock {
   union __anonunion_58 __anonCompField_qspinlock_9 ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct __anonstruct_62 {
   u8 wlocked ;
   u8 __lstate[3U] ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
union __anonunion_61 {
   atomic_t cnts ;
   struct __anonstruct_62 __anonCompField___anonunion_61_10 ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
struct qrwlock {
   union __anonunion_61 __anonCompField_qrwlock_11 ;
   arch_spinlock_t wait_lock ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct pv_lock_ops {
   void (*queued_spin_lock_slowpath)(struct qspinlock *, u32 ) ;
   struct paravirt_callee_save queued_spin_unlock ;
   void (*wait)(u8 *, u8 ) ;
   void (*kick)(int ) ;
   struct paravirt_callee_save vcpu_is_preempted ;
};
#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
struct paravirt_patch_template {
   struct pv_init_ops init ;
   struct pv_time_ops time ;
   struct pv_cpu_ops cpu ;
   struct pv_irq_ops irq ;
   struct pv_mmu_ops mmu ;
   struct pv_lock_ops lock ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   struct pt_regs *regs ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_67 {
   int __val ;
   char __c[1U] ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_69 {
   int __val ;
   char __c[1U] ;
};
#line 2288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/atomic-fallback.h"
typedef atomic64_t atomic_long_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 690  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint_func {
   void *func ;
   void *data ;
   int prio ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct tracepoint {
   char *name ;
   struct static_key key ;
   int (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
typedef int tracepoint_ptr_t;
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/tracepoint-defs.h"
struct bpf_raw_event_map {
   struct tracepoint *tp ;
   void *bpf_func ;
   u32 num_args ;
   u32 writable_size ;
} __attribute__((__aligned__(32)));
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_90 {
   u64 rip ;
   u64 rdp ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_91 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_89 {
   struct __anonstruct_90 __anonCompField___anonunion_89_17 ;
   struct __anonstruct_91 __anonCompField___anonunion_89_18 ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union __anonunion_92 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_89 __anonCompField_fxregs_state_19 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_92 __anonCompField_fxregs_state_20 ;
} __attribute__((__aligned__(16)));
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
} __attribute__((__packed__));
#line 253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 extended_state_area[0U] ;
} __attribute__((__packed__, __aligned__(64)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned long avx512_timestamp ;
   union fpregs_state state ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/orc_types.h"
struct orc_entry {
   s16 sp_offset ;
   s16 bp_offset ;
   unsigned int sp_reg : 4 ;
   unsigned int bp_reg : 4 ;
   unsigned int type : 2 ;
   unsigned int end : 1 ;
} __attribute__((__packed__));
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 478 
struct perf_event;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_95 {
   unsigned long seg ;
};
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_95 mm_segment_t;
#line 485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fsbase ;
   unsigned long gsbase ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct io_bitmap *io_bitmap ;
   unsigned long iopl_emul ;
   mm_segment_t addr_limit ;
   unsigned int sig_on_uaccess_err : 1 ;
   unsigned int uaccess_err : 1 ;
   struct fpu fpu ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/thread_info.h"
struct thread_info {
   unsigned long flags ;
   u32 status ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bottom_half.h"
struct lockdep_map;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__));
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
union __anonunion_96 {
   struct hlist_node hash_entry ;
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class_key {
   union __anonunion_96 __anonCompField_lock_class_key_23 ;
};
#line 68 
struct lock_trace;
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lock_class {
   struct hlist_node hash_entry ;
   struct list_head lock_entry ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct lock_trace *usage_traces[9U] ;
   int name_version ;
   char *name ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char *name ;
   int cpu ;
   unsigned long ip ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
   unsigned int pin_count ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_98 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
union __anonunion_97 {
   struct raw_spinlock rlock ;
   struct __anonstruct_98 __anonCompField___anonunion_97_24 ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_97 __anonCompField_spinlock_25 ;
};
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_99 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_99 rwlock_t;
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
struct mutex;
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
struct firmware;
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
struct kmem_cache;
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_112 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 403  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_112 seqlock_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timex.h"
typedef s32 old_time32_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/time32.h"
struct old_timespec32 {
   old_time32_t tv_sec ;
   s32 tv_nsec ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/highuid.h"
struct user_namespace;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kuid_t_113 {
   uid_t val ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_113 kuid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
struct __anonstruct_kgid_t_114 {
   gid_t val ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_114 kgid_t;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stat.h"
struct kstat {
   u32 result_mask ;
   umode_t mode ;
   unsigned int nlink ;
   uint32_t blksize ;
   u64 attributes ;
   u64 attributes_mask ;
   u64 ino ;
   dev_t dev ;
   dev_t rdev ;
   kuid_t uid ;
   kgid_t gid ;
   loff_t size ;
   struct timespec64 atime ;
   struct timespec64 mtime ;
   struct timespec64 ctime ;
   struct timespec64 btime ;
   u64 blocks ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct wait_queue_head {
   spinlock_t lock ;
   struct list_head head ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct wait_queue_head wait_queue_head_t;
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
struct __anonstruct_nodemask_t_115 {
   unsigned long bits[16U] ;
};
#line 1133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
typedef struct __anonstruct_nodemask_t_115 nodemask_t;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/tlbbatch.h"
struct arch_tlbflush_unmap_batch {
   struct cpumask cpumask ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct vmacache {
   u64 seqnum ;
   struct vm_area_struct *vmas[4U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct task_rss_stat {
   int events ;
   int count[4U] ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct mm_rss_stat {
   atomic_long_t count[4U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types_task.h"
struct tlbflush_unmap_batch {
   struct arch_tlbflush_unmap_batch arch ;
   bool flush_required ;
   bool writable ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(8)));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree.h"
struct rb_root_cached {
   struct rb_root rb_root ;
   struct rb_node *rb_leftmost ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rwsem.h"
struct rw_semaphore {
   atomic_long_t count ;
   atomic_long_t owner ;
   struct optimistic_spin_queue osq ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 120 
struct inode;
#line 121 
struct notifier_block;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct ww_acquire_ctx;
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex {
   atomic_long_t owner ;
   spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct list_head wait_list ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   struct ww_acquire_ctx *ww_ctx ;
   void *magic ;
};
#line 461  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
typedef s64 ktime_t;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(struct timer_list *) ;
   u32 flags ;
   struct lockdep_map lockdep_map ;
};
#line 196 
struct hrtimer;
#line 197 
enum hrtimer_restart;
#line 221 
struct workqueue_struct;
#line 222 
struct work_struct;
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 124  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
struct rcu_work {
   struct work_struct work ;
   struct callback_head rcu ;
   struct workqueue_struct *wq ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_segcblist.h"
struct rcu_segcblist {
   struct callback_head *head ;
   struct callback_head **tails[4U] ;
   unsigned long gp_seq[4U] ;
   atomic_long_t len ;
   long len_lazy ;
   u8 enabled ;
   u8 offloaded ;
};
#line 80 
struct srcu_struct;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcu.h"
struct srcu_node;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_data {
   unsigned long srcu_lock_count[2U] ;
   unsigned long srcu_unlock_count[2U] ;
   spinlock_t lock ;
   struct rcu_segcblist srcu_cblist ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   bool srcu_cblist_invoking ;
   struct timer_list delay_work ;
   struct work_struct work ;
   struct callback_head srcu_barrier_head ;
   struct srcu_node *mynode ;
   unsigned long grpmask ;
   int cpu ;
   struct srcu_struct *ssp ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_node {
   spinlock_t lock ;
   unsigned long srcu_have_cbs[4U] ;
   unsigned long srcu_data_have_cbs[4U] ;
   unsigned long srcu_gp_seq_needed_exp ;
   struct srcu_node *srcu_parent ;
   int grplo ;
   int grphi ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/srcutree.h"
struct srcu_struct {
   struct srcu_node node[521U] ;
   struct srcu_node *level[4U] ;
   struct mutex srcu_cb_mutex ;
   spinlock_t lock ;
   struct mutex srcu_gp_mutex ;
   unsigned int srcu_idx ;
   unsigned long srcu_gp_seq ;
   unsigned long srcu_gp_seq_needed ;
   unsigned long srcu_gp_seq_needed_exp ;
   unsigned long srcu_last_gp_end ;
   struct srcu_data *sda ;
   unsigned long srcu_barrier_seq ;
   struct mutex srcu_barrier_mutex ;
   struct completion srcu_barrier_completion ;
   atomic_t srcu_barrier_cpu_cnt ;
   struct delayed_work work ;
   struct lockdep_map dep_map ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/notifier.h"
struct raw_notifier_head {
   struct notifier_block *head ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 57 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_128 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_129 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
union __anonunion_127 {
   struct __anonstruct_128 __anonCompField___anonunion_127_28 ;
   struct __anonstruct_129 __anonCompField___anonunion_127_29 ;
};
#line 61 
struct uprobe;
#line 61 
struct return_instance;
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_127 __anonCompField_uprobe_task_30 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct return_instance {
   struct uprobe *uprobe ;
   unsigned long func ;
   unsigned long stack ;
   unsigned long orig_ret_vaddr ;
   bool chained ;
   struct return_instance *next ;
};
#line 98 
struct xol_area;
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 140 
struct ldt_struct;
#line 140 
struct vdso_image;
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
struct __anonstruct_mm_context_t_130 {
   u64 ctx_id ;
   atomic64_t tlb_gen ;
   struct rw_semaphore ldt_usr_sem ;
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   struct vdso_image *vdso_image ;
   atomic_t perf_rdpmc_allowed ;
   u16 pkey_allocation_map ;
   s16 execute_only_pkey ;
   void *bd_addr ;
};
#line 140  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uprobes.h"
typedef struct __anonstruct_mm_context_t_130 mm_context_t;
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct address_space;
#line 67 
struct mem_cgroup;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_132 {
   struct list_head lru ;
   struct address_space *mapping ;
   unsigned long index ;
   unsigned long private ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_133 {
   dma_addr_t dma_addr ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_136 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_135 {
   struct list_head slab_list ;
   struct __anonstruct_136 __anonCompField___anonunion_135_33 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_138 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_137 {
   void *s_mem ;
   unsigned long counters ;
   struct __anonstruct_138 __anonCompField___anonunion_137_35 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_134 {
   union __anonunion_135 __anonCompField___anonstruct_134_34 ;
   struct kmem_cache *slab_cache ;
   void *freelist ;
   union __anonunion_137 __anonCompField___anonstruct_134_36 ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_139 {
   unsigned long compound_head ;
   unsigned char compound_dtor ;
   unsigned char compound_order ;
   atomic_t compound_mapcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_140 {
   unsigned long _compound_pad_1 ;
   unsigned long _compound_pad_2 ;
   struct list_head deferred_list ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_142 {
   struct mm_struct *pt_mm ;
   atomic_t pt_frag_refcount ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_141 {
   unsigned long _pt_pad_1 ;
   pgtable_t pmd_huge_pte ;
   unsigned long _pt_pad_2 ;
   union __anonunion_142 __anonCompField___anonstruct_141_40 ;
   spinlock_t *ptl ;
};
#line 68 
struct dev_pagemap;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct __anonstruct_143 {
   struct dev_pagemap *pgmap ;
   void *zone_device_data ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_131 {
   struct __anonstruct_132 __anonCompField___anonunion_131_31 ;
   struct __anonstruct_133 __anonCompField___anonunion_131_32 ;
   struct __anonstruct_134 __anonCompField___anonunion_131_37 ;
   struct __anonstruct_139 __anonCompField___anonunion_131_38 ;
   struct __anonstruct_140 __anonCompField___anonunion_131_39 ;
   struct __anonstruct_141 __anonCompField___anonunion_131_41 ;
   struct __anonstruct_143 __anonCompField___anonunion_131_42 ;
   struct callback_head callback_head ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
union __anonunion_144 {
   atomic_t _mapcount ;
   unsigned int page_type ;
   unsigned int active ;
   int units ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   union __anonunion_131 __anonCompField_page_43 ;
   union __anonunion_144 __anonCompField_page_44 ;
   atomic_t _refcount ;
   struct mem_cgroup *mem_cgroup ;
} __attribute__((__aligned__(16)));
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct userfaultfd_ctx;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_userfaultfd_ctx {
   struct userfaultfd_ctx *ctx ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_shared_145 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 292 
struct anon_vma;
#line 292 
struct vm_operations_struct;
#line 292 
struct mempolicy;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_145 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   atomic_long_t swap_readahead_info ;
   struct mempolicy *vm_policy ;
   struct vm_userfaultfd_ctx vm_userfaultfd_ctx ;
} __attribute__((__designated_init__));
#line 358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 368 
struct kioctx_table;
#line 370 
struct linux_binfmt;
#line 370 
struct mmu_notifier_mm;
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct __anonstruct_146 {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u64 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long mmap_compat_base ;
   unsigned long mmap_compat_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t membarrier_state ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t pgtables_bytes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   atomic64_t pinned_vm ;
   unsigned long data_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   spinlock_t arg_lock ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct user_namespace *user_ns ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   atomic_t tlb_flush_pending ;
   bool tlb_flush_batched ;
   struct uprobes_state uprobes_state ;
   atomic_long_t hugetlb_usage ;
   struct work_struct async_put_work ;
} __attribute__((__designated_init__));
#line 370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
struct mm_struct {
   struct __anonstruct_146 __anonCompField_mm_struct_45 ;
   unsigned long cpu_bitmap[] ;
};
#line 642 
struct vm_fault;
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm_types.h"
typedef unsigned int vm_fault_t;
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct free_area {
   struct list_head free_list[6U] ;
   unsigned long nr_free ;
};
#line 158 
struct pglist_data;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone_reclaim_stat {
   unsigned long recent_rotated[2U] ;
   unsigned long recent_scanned[2U] ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct lruvec {
   struct list_head lists[5U] ;
   struct zone_reclaim_stat reclaim_stat ;
   atomic_long_t inactive_age ;
   unsigned long refaults ;
   unsigned long flags ;
   struct pglist_data *pgdat ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
typedef unsigned int isolate_mode_t;
#line 340  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pages {
   int count ;
   int high ;
   int batch ;
   struct list_head lists[3U] ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_pageset {
   struct per_cpu_pages pcp ;
   s8 expire ;
   u16 vm_numa_stat_diff[6U] ;
   s8 stat_threshold ;
   s8 vm_stat_diff[13U] ;
};
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct per_cpu_nodestat {
   s8 stat_threshold ;
   s8 vm_node_stat_diff[32U] ;
};
#line 365 
enum zone_type {
    ZONE_DMA = 0,
    ZONE_DMA32 = 1,
    ZONE_NORMAL = 2,
    ZONE_MOVABLE = 3,
    ZONE_DEVICE = 4,
    __MAX_NR_ZONES = 5
};
#line 432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zone {
   unsigned long _watermark[3U] ;
   unsigned long watermark_boost ;
   unsigned long nr_reserved_highatomic ;
   long lowmem_reserve[5U] ;
   int node ;
   struct pglist_data *zone_pgdat ;
   struct per_cpu_pageset *pageset ;
   unsigned long zone_start_pfn ;
   atomic_long_t managed_pages ;
   unsigned long spanned_pages ;
   unsigned long present_pages ;
   char *name ;
   unsigned long nr_isolate_pageblock ;
   seqlock_t span_seqlock ;
   int initialized ;
   struct zone_padding _pad1_ ;
   struct free_area free_area[11U] ;
   unsigned long flags ;
   spinlock_t lock ;
   struct zone_padding _pad2_ ;
   unsigned long percpu_drift_mark ;
   unsigned long compact_cached_free_pfn ;
   unsigned long compact_cached_migrate_pfn[2U] ;
   unsigned long compact_init_migrate_pfn ;
   unsigned long compact_init_free_pfn ;
   unsigned int compact_considered ;
   unsigned int compact_defer_shift ;
   int compact_order_failed ;
   bool compact_blockskip_flush ;
   bool contiguous ;
   struct zone_padding _pad3_ ;
   atomic_long_t vm_stat[13U] ;
   atomic_long_t vm_numa_stat[6U] ;
} __attribute__((__aligned__(4096)));
#line 665  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zoneref {
   struct zone *zone ;
   int zone_idx ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct zonelist {
   struct zoneref _zonerefs[5121U] ;
};
#line 694  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct deferred_split {
   spinlock_t split_queue_lock ;
   struct list_head split_queue ;
   unsigned long split_queue_len ;
};
#line 710  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mmzone.h"
struct pglist_data {
   struct zone node_zones[5U] ;
   struct zonelist node_zonelists[2U] ;
   int nr_zones ;
   spinlock_t node_size_lock ;
   unsigned long node_start_pfn ;
   unsigned long node_present_pages ;
   unsigned long node_spanned_pages ;
   int node_id ;
   wait_queue_head_t kswapd_wait ;
   wait_queue_head_t pfmemalloc_wait ;
   struct task_struct *kswapd ;
   int kswapd_order ;
   enum zone_type kswapd_classzone_idx ;
   int kswapd_failures ;
   int kcompactd_max_order ;
   enum zone_type kcompactd_classzone_idx ;
   wait_queue_head_t kcompactd_wait ;
   struct task_struct *kcompactd ;
   unsigned long totalreserve_pages ;
   unsigned long min_unmapped_pages ;
   unsigned long min_slab_pages ;
   struct zone_padding _pad1_ ;
   spinlock_t lru_lock ;
   unsigned long first_deferred_pfn ;
   struct deferred_split deferred_split_queue ;
   struct lruvec __lruvec ;
   unsigned long flags ;
   struct zone_padding _pad2_ ;
   struct per_cpu_nodestat *per_cpu_nodestats ;
   atomic_long_t vm_stat[32U] ;
};
#line 824 
struct resource;
#line 825 
struct vmem_altmap;
#line 282  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/x86_init.h"
struct pci_dev;
#line 159  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/topology.h"
struct pci_bus;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/io.h"
struct fwnode_operations;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_handle {
   struct fwnode_handle *secondary ;
   struct fwnode_operations *ops ;
   struct device *dev ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_endpoint {
   unsigned int port ;
   unsigned int id ;
   struct fwnode_handle *local_fwnode ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_reference_args {
   struct fwnode_handle *fwnode ;
   unsigned int nargs ;
   u64 args[8U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fwnode.h"
struct fwnode_operations {
   struct fwnode_handle *(*get)(struct fwnode_handle *) ;
   void (*put)(struct fwnode_handle *) ;
   bool (*device_is_available)(struct fwnode_handle *) ;
   void *(*device_get_match_data)(struct fwnode_handle *, struct device *) ;
   bool (*property_present)(struct fwnode_handle *, char *) ;
   int (*property_read_int_array)(struct fwnode_handle *, char *, unsigned int , void *, size_t ) ;
   int (*property_read_string_array)(struct fwnode_handle *, char *, char **, size_t ) ;
   char *(*get_name)(struct fwnode_handle *) ;
   char *(*get_name_prefix)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_parent)(struct fwnode_handle *) ;
   struct fwnode_handle *(*get_next_child_node)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*get_named_child_node)(struct fwnode_handle *, char *) ;
   int (*get_reference_args)(struct fwnode_handle *, char *, char *, unsigned int , unsigned int , struct fwnode_reference_args *) ;
   struct fwnode_handle *(*graph_get_next_endpoint)(struct fwnode_handle *, struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_remote_endpoint)(struct fwnode_handle *) ;
   struct fwnode_handle *(*graph_get_port_parent)(struct fwnode_handle *) ;
   int (*graph_parse_endpoint)(struct fwnode_handle *, struct fwnode_endpoint *) ;
   int (*add_links)(struct fwnode_handle *, struct device *) ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmalloc.h"
struct vm_struct {
   struct vm_struct *next ;
   void *addr ;
   unsigned long size ;
   unsigned long flags ;
   struct page **pages ;
   unsigned int nr_pages ;
   phys_addr_t phys_addr ;
   void *caller ;
};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/apic.h"
struct irq_data;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/smp.h"
struct __call_single_data {
   struct llist_node llist ;
   void (*func)(void *) ;
   void *info ;
   unsigned int flags ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/arch_topology.h"
struct device_node;
#line 822  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 823 
struct ctl_table_root;
#line 824 
struct ctl_table_header;
#line 825 
struct ctl_dir;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table {
   char *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct __anonstruct_237 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_47 ;
   struct callback_head rcu ;
};
#line 142 
struct ctl_table_set;
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_236 __anonCompField_ctl_table_header_48 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
   struct hlist_head inodes ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *) ;
   void (*set_ownership)(struct ctl_table_header *, struct ctl_table *, kuid_t *, kgid_t *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};
#line 242 
struct cred;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/vdso.h"
struct vdso_image {
   void *data ;
   unsigned long size ;
   unsigned long alt ;
   unsigned long alt_len ;
   long sym_vvar_start ;
   long sym_vvar_page ;
   long sym_pvclock_page ;
   long sym_hvclock_page ;
   long sym_VDSO32_NOTE_MASK ;
   long sym___kernel_sigreturn ;
   long sym___kernel_rt_sigreturn ;
   long sym___kernel_vsyscall ;
   long sym_int80_landing_pad ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Off;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 200  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_hdr {
   unsigned char e_ident[16U] ;
   Elf64_Half e_type ;
   Elf64_Half e_machine ;
   Elf64_Word e_version ;
   Elf64_Addr e_entry ;
   Elf64_Off e_phoff ;
   Elf64_Off e_shoff ;
   Elf64_Word e_flags ;
   Elf64_Half e_ehsize ;
   Elf64_Half e_phentsize ;
   Elf64_Half e_phnum ;
   Elf64_Half e_shentsize ;
   Elf64_Half e_shnum ;
   Elf64_Half e_shstrndx ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_hdr Elf64_Ehdr;
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
struct elf64_shdr {
   Elf64_Word sh_name ;
   Elf64_Word sh_type ;
   Elf64_Xword sh_flags ;
   Elf64_Addr sh_addr ;
   Elf64_Off sh_offset ;
   Elf64_Xword sh_size ;
   Elf64_Word sh_link ;
   Elf64_Word sh_info ;
   Elf64_Xword sh_addralign ;
   Elf64_Xword sh_entsize ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/elf.h"
typedef struct elf64_shdr Elf64_Shdr;
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/xarray.h"
struct xarray {
   spinlock_t xa_lock ;
   gfp_t xa_flags ;
   void *xa_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct idr {
   struct xarray idr_rt ;
   unsigned int idr_base ;
   unsigned int idr_next ;
};
#line 322 
struct dentry;
#line 323 
struct iattr;
#line 324 
struct super_block;
#line 325 
struct poll_table_struct;
#line 326 
struct fs_context;
#line 328 
struct kernfs_open_node;
#line 329 
struct kernfs_iattrs;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root;
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 96 
struct kernfs_node;
#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 100 
struct kernfs_ops;
#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
union __anonunion_256 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char *name ;
   struct rb_node rb ;
   void *ns ;
   unsigned int hash ;
   union __anonunion_256 __anonCompField_kernfs_node_51 ;
   void *priv ;
   u64 id ;
   unsigned short flags ;
   umode_t mode ;
   struct kernfs_iattrs *iattr ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char *) ;
   int (*show_path)(struct seq_file *, struct kernfs_node *, struct kernfs_root *) ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct idr ino_idr ;
   u32 last_id_lowbits ;
   u32 id_highbits ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct seq_file *seq_file ;
   void *priv ;
   struct mutex mutex ;
   struct mutex prealloc_mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped : 1 ;
   bool released : 1 ;
   struct vm_operations_struct *vm_ops ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernfs.h"
struct kernfs_ops {
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 595 
struct sock;
#line 596 
struct kobject;
#line 597 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject_ns.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void *(*netlink_ns)(struct sock *) ;
   void *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};
#line 58 
struct bin_attribute;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute {
   char *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct attribute_group {
   char *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   umode_t (*is_bin_visible)(struct kobject *, struct bin_attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};
#line 223  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char *, size_t ) ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
struct refcount_struct {
   atomic_t refs ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/refcount.h"
typedef struct refcount_struct refcount_t;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kref.h"
struct kref {
   refcount_t refcount ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset;
#line 65 
struct kobj_type;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobject {
   char *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
   struct attribute_group **default_groups ;
   struct kobj_ns_type_operations *(*child_ns_type)(struct kobject *) ;
   void *(*namespace)(struct kobject *) ;
   void (*get_ownership)(struct kobject *, kuid_t *, kgid_t *) ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *, struct kobject *) ;
   char *(*name)(struct kset *, struct kobject *) ;
   int (*uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
} __attribute__((__designated_init__));
#line 247 
struct kernel_param;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char *, struct kernel_param *) ;
   int (*get)(char *, struct kernel_param *) ;
   void (*free)(void *) ;
};
#line 69 
struct kparam_string;
#line 69 
struct kparam_array;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
union __anonunion_259 {
   void *arg ;
   struct kparam_string *str ;
   struct kparam_array *arr ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kernel_param {
   char *name ;
   struct module *mod ;
   struct kernel_param_ops *ops ;
   u16 perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_259 __anonCompField_kernel_param_52 ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops *ops ;
   void *elem ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rbtree_latch.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/error-injection.h"
struct error_injection_entry {
   unsigned long addr ;
   int etype ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/module.h"
struct mod_arch_specific {
   unsigned int num_orcs ;
   int *orc_unwind_ip ;
   struct orc_entry *orc_unwind ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct exception_table_entry;
#line 45 
struct module_param_attrs;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
} __attribute__((__designated_init__));
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char *, size_t ) ;
   void (*setup)(struct module *, char *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};
#line 297 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};
#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module_layout {
   void *base ;
   unsigned int size ;
   unsigned int text_size ;
   unsigned int ro_size ;
   unsigned int ro_after_init_size ;
   struct mod_tree_node mtn ;
};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct mod_kallsyms {
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   char *typetab ;
};
#line 342  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct klp_modinfo {
   Elf64_Ehdr hdr ;
   Elf64_Shdr *sechdrs ;
   char *secstrings ;
   unsigned int symndx ;
};
#line 350 
struct module_sect_attrs;
#line 350 
struct module_notes_attrs;
#line 350 
struct trace_event_call;
#line 350 
struct trace_eval_map;
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char *version ;
   char *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol *syms ;
   s32 *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol *gpl_syms ;
   s32 *gpl_crcs ;
   struct kernel_symbol *unused_syms ;
   s32 *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol *unused_gpl_syms ;
   s32 *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol *gpl_future_syms ;
   s32 *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   struct module_layout core_layout ;
   struct module_layout init_layout ;
   struct mod_arch_specific arch ;
   unsigned long taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   struct mod_kallsyms *kallsyms ;
   struct mod_kallsyms core_kallsyms ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   tracepoint_ptr_t *tracepoints_ptrs ;
   unsigned int num_srcu_structs ;
   struct srcu_struct **srcu_struct_ptrs ;
   unsigned int num_bpf_raw_events ;
   struct bpf_raw_event_map *bpf_raw_events ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_eval_map **trace_evals ;
   unsigned int num_trace_evals ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp ;
   bool klp_alive ;
   struct klp_modinfo *klp_info ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
   struct error_injection_entry *ei_funcs ;
   unsigned int num_ei_funcs ;
} __attribute__((__designated_init__, __aligned__(64)));
#line 892 
struct percpu_ref;
#line 893  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/module.h"
typedef void percpu_ref_func_t(struct percpu_ref *);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool force_atomic : 1 ;
   bool allow_reinit : 1 ;
   struct callback_head rcu ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrink_control {
   gfp_t gfp_mask ;
   int nid ;
   unsigned long nr_to_scan ;
   unsigned long nr_scanned ;
   struct mem_cgroup *memcg ;
};
#line 60  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   long batch ;
   int seeks ;
   unsigned int flags ;
   struct list_head list ;
   int id ;
   atomic_long_t *nr_deferred ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char *name ;
   unsigned long flags ;
   unsigned long desc ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct vmem_altmap {
   unsigned long base_pfn ;
   unsigned long end_pfn ;
   unsigned long reserve ;
   unsigned long free ;
   unsigned long align ;
   unsigned long alloc ;
};
#line 26 
enum memory_type {
    MEMORY_DEVICE_PRIVATE = 1,
    MEMORY_DEVICE_FS_DAX = 2,
    MEMORY_DEVICE_DEVDAX = 3,
    MEMORY_DEVICE_PCI_P2PDMA = 4
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap_ops {
   void (*page_free)(struct page *) ;
   void (*kill)(struct dev_pagemap *) ;
   void (*cleanup)(struct dev_pagemap *) ;
   vm_fault_t (*migrate_to_ram)(struct vm_fault *) ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memremap.h"
struct dev_pagemap {
   struct vmem_altmap altmap ;
   struct resource res ;
   struct percpu_ref *ref ;
   struct percpu_ref internal_ref ;
   struct completion done ;
   enum memory_type type ;
   unsigned int flags ;
   struct dev_pagemap_ops *ops ;
};
#line 176 
struct file_ra_state;
#line 177 
struct user_struct;
#line 178 
struct writeback_control;
#line 179 
struct bdi_writeback;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rculist.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_TGID = 1,
    PIDTYPE_PGID = 2,
    PIDTYPE_SID = 3,
    PIDTYPE_MAX = 4
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid_namespace;
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pid.h"
struct pid {
   refcount_t count ;
   unsigned int level ;
   struct hlist_head tasks[4U] ;
   wait_queue_head_t wait_pidfd ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhash_head {
   struct rhash_head *next ;
};
#line 25 
struct bucket_table;
#line 33 
struct rhashtable;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_compare_arg {
   struct rhashtable *ht ;
   void *key ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable_params {
   u16 nelem_hint ;
   u16 key_len ;
   u16 key_offset ;
   u16 head_offset ;
   unsigned int max_size ;
   u16 min_size ;
   bool automatic_shrinking ;
   u32 (*hashfn)(void *, u32 , u32 ) ;
   u32 (*obj_hashfn)(void *, u32 , u32 ) ;
   int (*obj_cmpfn)(struct rhashtable_compare_arg *, void *) ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable-types.h"
struct rhashtable {
   struct bucket_table *tbl ;
   unsigned int key_len ;
   unsigned int max_elems ;
   struct rhashtable_params p ;
   bool rhlist ;
   struct work_struct run_work ;
   struct mutex mutex ;
   spinlock_t lock ;
   atomic_t nelems ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/sem.h"
struct sem_undo_list;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root_cached rb_root ;
};
#line 60 
struct hrtimer_clock_base;
#line 61 
struct hrtimer_cpu_base;
#line 80 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};
#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   u8 state ;
   u8 is_rel ;
   u8 is_soft ;
   u8 is_hard ;
};
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   unsigned int index ;
   clockid_t clockid ;
   seqcount_t seq ;
   struct hrtimer *running ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
} __attribute__((__aligned__(64)));
#line 213  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   unsigned int hres_active : 1 ;
   unsigned int in_hrtirq : 1 ;
   unsigned int hang_detected : 1 ;
   unsigned int softirq_activated : 1 ;
   unsigned int nr_events ;
   unsigned short nr_retries ;
   unsigned short nr_hangs ;
   unsigned int max_hang_time ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   ktime_t softirq_expires_next ;
   struct hrtimer *softirq_next_timer ;
   struct hrtimer_clock_base clock_base[8U] ;
} __attribute__((__aligned__(64)));
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/seccomp.h"
struct seccomp_filter;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/types.h"
struct task_cputime {
   u64 stime ;
   u64 utime ;
   unsigned long long sum_exec_runtime ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_306 {
   unsigned long sig[1U] ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_306 sigset_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/signal.h"
typedef void __signalfn_t(int );
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_307 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_308 {
   __kernel_timer_t _tid ;
   int _overrun ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_309 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_310 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_313 {
   char _dummy_bnd[8U] ;
   void *_lower ;
   void *_upper ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_pkey_314 {
   char _dummy_pkey[8U] ;
   __u32 _pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __anonunion_312 {
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_313 _addr_bnd ;
   struct __anonstruct__addr_pkey_314 _addr_pkey ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_311 {
   void *_addr ;
   union __anonunion_312 __anonCompField___anonstruct__sigfault_311_53 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_315 {
   long _band ;
   int _fd ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_316 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/siginfo.h"
union __sifields {
   struct __anonstruct__kill_307 _kill ;
   struct __anonstruct__timer_308 _timer ;
   struct __anonstruct__rt_309 _rt ;
   struct __anonstruct__sigchld_310 _sigchld ;
   struct __anonstruct__sigfault_311 _sigfault ;
   struct __anonstruct__sigpoll_315 _sigpoll ;
   struct __anonstruct__sigsys_316 _sigsys ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct __anonstruct_321 {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __sifields _sifields ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct kernel_siginfo {
   struct __anonstruct_321 __anonCompField_kernel_siginfo_56 ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
typedef struct kernel_siginfo kernel_siginfo_t;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 35  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/signal_types.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimer_base {
   u64 nextevt ;
   struct timerqueue_head tqhead ;
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/posix-timers.h"
struct posix_cputimers {
   struct posix_cputimer_base bases[3U] ;
   unsigned int timers_active ;
   unsigned int expiry_active ;
};
#line 193 
struct signal_struct;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
union __anonunion_rseq_cs_326 {
   __u64 ptr64 ;
   __u64 ptr ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rseq.h"
struct rseq {
   __u32 cpu_id_start ;
   __u32 cpu_id ;
   union __anonunion_rseq_cs_326 rseq_cs ;
   __u32 flags ;
} __attribute__((__aligned__(32)));
#line 146 
struct audit_context;
#line 147 
struct backing_dev_info;
#line 148 
struct bio_list;
#line 149 
struct blk_plug;
#line 150 
struct capture_control;
#line 151 
struct cfs_rq;
#line 152 
struct fs_struct;
#line 153 
struct futex_pi_state;
#line 154 
struct io_context;
#line 155 
struct nameidata;
#line 156 
struct perf_event_context;
#line 157 
struct pipe_inode_info;
#line 159 
struct reclaim_state;
#line 160 
struct robust_list_head;
#line 165 
struct sighand_struct;
#line 166 
struct task_delay_info;
#line 167 
struct task_group;
#line 242  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct prev_cputime {
   u64 utime ;
   u64 stime ;
   raw_spinlock_t lock ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 352  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct util_est {
   unsigned int enqueued ;
   unsigned int ewma ;
} __attribute__((__aligned__(8)));
#line 401  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_avg {
   u64 last_update_time ;
   u64 load_sum ;
   u64 runnable_load_sum ;
   u32 util_sum ;
   u32 period_contrib ;
   unsigned long load_avg ;
   unsigned long runnable_load_avg ;
   unsigned long util_avg ;
   struct util_est util_est ;
} __attribute__((__aligned__(64)));
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   unsigned long runnable_weight ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 486 
struct rt_rq;
#line 486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   unsigned short on_rq ;
   unsigned short on_list ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
} __attribute__((__designated_init__));
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   u64 dl_density ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   unsigned int dl_throttled : 1 ;
   unsigned int dl_boosted : 1 ;
   unsigned int dl_yielded : 1 ;
   unsigned int dl_non_contending : 1 ;
   unsigned int dl_overrun : 1 ;
   struct hrtimer dl_timer ;
   struct hrtimer inactive_timer ;
};
#line 600  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct uclamp_se {
   unsigned int value : 11 ;
   unsigned int bucket_id : 3 ;
   unsigned int active : 1 ;
   unsigned int user_defined : 1 ;
};
#line 625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};
#line 629 
struct sched_class;
#line 629 
struct key;
#line 629 
struct files_struct;
#line 629 
struct rt_mutex_waiter;
#line 629 
struct css_set;
#line 629 
struct compat_robust_list_head;
#line 629 
struct numa_group;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
union __anonunion_328 {
   refcount_t rcu_users ;
   struct callback_head rcu ;
};
#line 629 
struct ftrace_ret_stack;
#line 629 
struct kcov;
#line 629 
struct request_queue;
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
struct task_struct {
   struct thread_info thread_info ;
   long state ;
   void *stack ;
   refcount_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   unsigned int cpu ;
   unsigned int wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   struct task_struct *last_wakee ;
   int recent_used_cpu ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct uclamp_se uclamp_req[2U] ;
   struct uclamp_se uclamp[2U] ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t *cpus_ptr ;
   cpumask_t cpus_mask ;
   unsigned long rcu_tasks_nvcsw ;
   u8 rcu_tasks_holdout ;
   u8 rcu_tasks_idx ;
   int rcu_tasks_idle_cpu ;
   struct list_head rcu_tasks_holdout_list ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct vmacache vmacache ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned int sched_migrated : 1 ;
   unsigned int sched_remote_wakeup : 1 ;
   unsigned int sched_psi_wake_requeue : 1 ;
   unsigned int  ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int restore_sigmask : 1 ;
   unsigned int in_user_fault : 1 ;
   unsigned int brk_randomized : 1 ;
   unsigned int no_cgroup_migration : 1 ;
   unsigned int frozen : 1 ;
   unsigned int use_memdelay : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid *thread_pid ;
   struct hlist_node pid_links[4U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   u64 utime ;
   u64 stime ;
   u64 gtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 start_boottime ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct posix_cputimers posix_cputimers ;
   struct cred *ptracer_cred ;
   struct cred *real_cred ;
   struct cred *cred ;
   struct key *cached_requested_key ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   unsigned long last_switch_time ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   unsigned int sas_ss_flags ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root_cached pi_waiters ;
   struct task_struct *pi_top_task ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   int non_block_count ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   unsigned int in_ubsan ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   struct capture_control *capture_control ;
   unsigned long ptrace_message ;
   kernel_siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   unsigned int psi_flags ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   u64 acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   u32 closid ;
   u32 rmid ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mutex futex_exit_mutex ;
   unsigned int futex_state ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_prev ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct rseq *rseq ;
   u32 rseq_sig ;
   unsigned long rseq_event_mask ;
   struct tlbflush_unmap_batch tlb_ubc ;
   union __anonunion_328 __anonCompField_task_struct_58 ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   unsigned int fail_nth ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   u64 timer_slack_ns ;
   u64 default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   int curr_ret_depth ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int kcov_mode ;
   unsigned int kcov_size ;
   void *kcov_area ;
   struct kcov *kcov ;
   u64 kcov_handle ;
   int kcov_sequence ;
   struct mem_cgroup *memcg_in_oom ;
   gfp_t memcg_oom_gfp_mask ;
   int memcg_oom_order ;
   unsigned int memcg_nr_pages_over_high ;
   struct mem_cgroup *active_memcg ;
   struct request_queue *throttle_queue ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct task_struct *oom_reaper_list ;
   struct vm_struct *stack_vm_area ;
   refcount_t stack_refcount ;
   int patch_state ;
   void *security ;
   struct thread_struct thread ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/extable.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
   int handler ;
};
#line 417  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_fault {
   struct vm_area_struct *vma ;
   unsigned int flags ;
   gfp_t gfp_mask ;
   unsigned long pgoff ;
   unsigned long address ;
   pmd_t *pmd ;
   pud_t *pud ;
   pte_t orig_pte ;
   struct page *cow_page ;
   struct mem_cgroup *memcg ;
   struct page *page ;
   pte_t *pte ;
   spinlock_t *ptl ;
   pgtable_t prealloc_pte ;
};
#line 448 
enum page_entry_size {
    PE_SIZE_PTE = 0,
    PE_SIZE_PMD = 1,
    PE_SIZE_PUD = 2
};
#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*split)(struct vm_area_struct *, unsigned long ) ;
   int (*mremap)(struct vm_area_struct *) ;
   vm_fault_t (*fault)(struct vm_fault *) ;
   vm_fault_t (*huge_fault)(struct vm_fault *, enum page_entry_size ) ;
   void (*map_pages)(struct vm_fault *, unsigned long , unsigned long ) ;
   unsigned long (*pagesize)(struct vm_area_struct *) ;
   vm_fault_t (*page_mkwrite)(struct vm_fault *) ;
   vm_fault_t (*pfn_mkwrite)(struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct __anonstruct_416 {
   spinlock_t lock ;
   int count ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
union __anonunion_415 {
   struct __anonstruct_416 __anonCompField___anonunion_415_59 ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockref.h"
struct lockref {
   union __anonunion_415 __anonCompField_lockref_60 ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/stringhash.h"
struct path;
#line 79 
struct vfsmount;
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct __anonstruct_418 {
   u32 hash ;
   u32 len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_417 {
   struct __anonstruct_418 __anonCompField___anonunion_417_61 ;
   u64 hash_len ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct qstr {
   union __anonunion_417 __anonCompField_qstr_62 ;
   unsigned char *name ;
};
#line 89 
struct dentry_operations;
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_419 {
   struct list_head d_lru ;
   wait_queue_head_t *d_wait ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
union __anonunion_d_u_420 {
   struct hlist_node d_alias ;
   struct hlist_bl_node d_in_lookup_hash ;
   struct callback_head d_rcu ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   union __anonunion_419 __anonCompField_dentry_63 ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_420 d_u ;
} __attribute__((__designated_init__));
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry *, struct qstr *) ;
   int (*d_compare)(struct dentry *, unsigned int , char *, struct qstr *) ;
   int (*d_delete)(struct dentry *) ;
   int (*d_init)(struct dentry *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct path *, bool ) ;
   struct dentry *(*d_real)(struct dentry *, struct inode *) ;
} __attribute__((__aligned__(64)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
} __attribute__((__designated_init__));
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_memcg {
   struct callback_head rcu ;
   struct list_lru_one *lru[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
   long nr_items ;
} __attribute__((__aligned__(64)));
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
   int shrinker_id ;
   bool memcg_aware ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 39 
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2,
    MIGRATE_SYNC_NO_COPY = 3
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcuwait.h"
struct rcuwait {
   struct task_struct *task ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rcu_sync.h"
struct rcu_sync {
   int gp_state ;
   int gp_count ;
   wait_queue_head_t gp_wait ;
   struct callback_head cb_head ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu-rwsem.h"
struct percpu_rw_semaphore {
   struct rcu_sync rss ;
   unsigned int *read_count ;
   struct rw_semaphore rw_sem ;
   struct rcuwait writer ;
   int readers_block ;
};
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delayed_call.h"
struct delayed_call {
   void (*fn)(void *) ;
   void *arg ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
struct __anonstruct_uuid_t_428 {
   __u8 b[16U] ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uuid.h"
typedef struct __anonstruct_uuid_t_428 uuid_t;
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uuid.h"
typedef u32 errseq_t;
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_429 {
   struct list_head q_node ;
   struct kmem_cache *__rcu_icq_cache ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
union __anonunion_430 {
   struct hlist_node ioc_node ;
   struct callback_head __rcu_head ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_cq {
   struct request_queue *q ;
   struct io_context *ioc ;
   union __anonunion_429 __anonCompField_io_cq_64 ;
   union __anonunion_430 __anonCompField_io_cq_65 ;
   unsigned int flags ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/iocontext.h"
struct io_context {
   atomic_long_t refcount ;
   atomic_t active_ref ;
   atomic_t nr_tasks ;
   spinlock_t lock ;
   unsigned short ioprio ;
   int nr_batch_requests ;
   unsigned long last_waited ;
   struct xarray icq_tree ;
   struct io_cq *icq_hint ;
   struct hlist_head icq_list ;
   struct work_struct release_work ;
};
#line 286  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fs.h"
struct bio;
#line 287 
struct export_operations;
#line 288 
struct hd_geometry;
#line 289 
struct iovec;
#line 290 
struct kiocb;
#line 291 
struct kstatfs;
#line 292 
struct swap_info_struct;
#line 293 
struct iov_iter;
#line 294 
struct fscrypt_info;
#line 295 
struct fscrypt_operations;
#line 296 
struct fsverity_info;
#line 297 
struct fsverity_operations;
#line 298 
struct fs_parameter_description;
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec64 ia_atime ;
   struct timespec64 ia_mtime ;
   struct timespec64 ia_ctime ;
   struct file *ia_file ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/percpu_counter.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dqblk_xfs.h"
struct dquot;
#line 215 
struct kqid;
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
struct __anonstruct_kprojid_t_431 {
   projid_t val ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_431 kprojid_t;
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
typedef long long qsize_t;
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
union __anonunion_432 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct kqid {
   union __anonunion_432 __anonCompField_kqid_66 ;
   enum quota_type type ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time64_t dqb_btime ;
   time64_t dqb_itime ;
};
#line 216 
struct quota_format_type;
#line 222  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};
#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   spinlock_t dq_dqb_lock ;
   atomic_t dq_count ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
   int (*get_inode_usage)(struct inode *, qsize_t *) ;
   int (*get_next_id)(struct super_block *, struct kqid *) ;
};
#line 343  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};
#line 395  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};
#line 409  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_nextdqblk)(struct super_block *, struct kqid *, struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};
#line 443  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 518  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct rw_semaphore dqio_sem ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops *ops[3U] ;
};
#line 538 
enum rw_hint {
    WRITE_LIFE_NOT_SET = 0,
    WRITE_LIFE_NONE = 1,
    WRITE_LIFE_SHORT = 2,
    WRITE_LIFE_MEDIUM = 3,
    WRITE_LIFE_LONG = 4,
    WRITE_LIFE_EXTREME = 5
};
#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
   u16 ki_hint ;
   u16 ki_ioprio ;
   unsigned int ki_cookie ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_arg_434 {
   char *buf ;
   void *data ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_433 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_434 arg ;
   int error ;
};
#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_433 read_descriptor_t;
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   bool (*isolate_page)(struct page *, isolate_mode_t ) ;
   void (*putback_page)(struct page *) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};
#line 445  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct xarray i_pages ;
   gfp_t gfp_mask ;
   atomic_t i_mmap_writable ;
   atomic_t nr_thps ;
   struct rb_root_cached i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrexceptional ;
   unsigned long writeback_index ;
   struct address_space_operations *a_ops ;
   unsigned long flags ;
   errseq_t wb_err ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
} __attribute__((__designated_init__, __aligned__(8)));
#line 473 
struct hd_struct;
#line 473 
struct gendisk;
#line 473  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   u8 bd_partno ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct backing_dev_info *bd_bdi ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
} __attribute__((__designated_init__));
#line 587 
struct posix_acl;
#line 614 
struct fsnotify_mark_connector;
#line 628 
struct inode_operations;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_437 {
   unsigned int i_nlink ;
   unsigned int __i_nlink ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_438 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_439 {
   struct file_operations *i_fop ;
   void (*free_inode)(struct inode *) ;
};
#line 628 
struct file_lock_context;
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_440 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
   unsigned int i_dir_seq ;
};
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_437 __anonCompField_inode_67 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec64 i_atime ;
   struct timespec64 i_mtime ;
   struct timespec64 i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   u8 i_blkbits ;
   u8 i_write_hint ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct rw_semaphore i_rwsem ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_io_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   struct list_head i_wb_list ;
   union __anonunion_438 __anonCompField_inode_68 ;
   atomic64_t i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   union __anonunion_439 __anonCompField_inode_69 ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_440 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct fsnotify_mark_connector *i_fsnotify_marks ;
   struct fscrypt_info *i_crypt_info ;
   struct fsverity_info *i_verity_info ;
   void *i_private ;
} __attribute__((__designated_init__));
#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_f_u_441 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 935  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file {
   union __anonunion_f_u_441 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations *f_op ;
   spinlock_t f_lock ;
   enum rw_hint f_write_hint ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   errseq_t f_wb_err ;
} __attribute__((__designated_init__, __aligned__(4)));
#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
typedef void *fl_owner_t;
#line 1026 
struct file_lock;
#line 1029  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};
#line 1034  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct lock_manager_operations {
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};
#line 1052 
struct net;
#line 1058 
struct nlm_lockowner;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 15 
struct nfs4_lock_state;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct;
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct __anonstruct_afs_443 {
   struct list_head link ;
   int state ;
   unsigned int debug_id ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
union __anonunion_fl_u_442 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_443 afs ;
};
#line 1079  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_blocker ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_blocked_requests ;
   struct list_head fl_blocked_member ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_442 fl_u ;
} __attribute__((__designated_init__));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};
#line 1331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fasync_struct {
   rwlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct sb_writers {
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct percpu_rw_semaphore rw_sem[3U] ;
};
#line 1424 
struct super_operations;
#line 1424 
struct xattr_handler;
#line 1424 
struct mtd_info;
#line 1424  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct fscrypt_operations *s_cop ;
   struct key *s_master_keys ;
   struct fsverity_operations *s_vop ;
   struct hlist_bl_head s_roots ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   void *s_fs_info ;
   u32 s_time_gran ;
   time64_t s_time_min ;
   time64_t s_time_max ;
   __u32 s_fsnotify_mask ;
   struct fsnotify_mark_connector *s_fsnotify_marks ;
   char s_id[32U] ;
   uuid_t s_uuid ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   struct dentry_operations *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   atomic_long_t s_fsnotify_inode_refs ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct user_namespace *s_user_ns ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   struct work_struct destroy_work ;
   struct mutex s_sync_lock ;
   int s_stack_depth ;
   spinlock_t s_inode_list_lock ;
   struct list_head s_inodes ;
   spinlock_t s_inode_wblist_lock ;
   struct list_head s_inodes_wb ;
} __attribute__((__designated_init__));
#line 1746  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1756 
struct dir_context;
#line 1767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};
#line 1771 
struct block_device_operations;
#line 1821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iopoll)(struct kiocb *, bool ) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   int (*iterate_shared)(struct file *, struct dir_context *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   unsigned long mmap_supported_flags ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
   ssize_t (*copy_file_range)(struct file *, loff_t , struct file *, loff_t , size_t , unsigned int ) ;
   loff_t (*remap_file_range)(struct file *, loff_t , struct file *, loff_t , loff_t , unsigned int ) ;
   int (*fadvise)(struct file *, loff_t , loff_t , int ) ;
} __attribute__((__designated_init__));
#line 1863  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char *(*get_link)(struct dentry *, struct inode *, struct delayed_call *) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct path *, struct kstat *, u32 , unsigned int ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec64 *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t ) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
} __attribute__((__aligned__(64)));
#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*free_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};
#line 2217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
struct file_system_type {
   char *name ;
   int fs_flags ;
   int (*init_fs_context)(struct fs_context *) ;
   struct fs_parameter_description *parameters ;
   struct dentry *(*mount)(struct file_system_type *, int , char *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 1565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
struct kvec;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bvec.h"
struct bvec_iter {
   sector_t bi_sector ;
   unsigned int bi_size ;
   unsigned int bi_idx ;
   unsigned int bi_bvec_done ;
};
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
struct scatterlist;
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_457 {
   struct iovec *iov ;
   struct kvec *kvec ;
   struct bio_vec *bvec ;
   struct pipe_inode_info *pipe ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct __anonstruct_459 {
   unsigned int head ;
   unsigned int start_head ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
union __anonunion_458 {
   unsigned long nr_segs ;
   struct __anonstruct_459 __anonCompField___anonunion_458_72 ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
struct iov_iter {
   unsigned int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_457 __anonCompField_iov_iter_71 ;
   union __anonunion_458 __anonCompField_iov_iter_73 ;
};
#line 285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uio.h"
typedef unsigned short __kernel_sa_family_t;
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/socket.h"
struct socket;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 49  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};
#line 422 
struct ns_common;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqnr.h"
struct irq_desc;
#line 201  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
enum ldv_9626 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/random.h"
typedef enum ldv_9626 socket_state;
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   unsigned long flags ;
   struct callback_head rcu ;
} __attribute__((__aligned__(64)));
#line 112 
struct proto_ops;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops *ops ;
   struct socket_wq wq ;
};
#line 125 
struct sk_buff;
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int , bool ) ;
   int (*getname)(struct socket *, struct sockaddr *, int ) ;
   __poll_t (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*gettstamp)(struct socket *, void *, bool , bool ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
   int (*peek_len)(struct socket *) ;
   int (*read_sock)(struct sock *, read_descriptor_t *, int (*)(read_descriptor_t *, struct sk_buff *, unsigned int , size_t )) ;
   int (*sendpage_locked)(struct sock *, struct page *, int , size_t , int ) ;
   int (*sendmsg_locked)(struct sock *, struct msghdr *, size_t ) ;
   int (*set_rcvlowat)(struct sock *, int ) ;
};
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};
#line 303 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};
#line 310 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};
#line 318 
struct wakeup_source;
#line 319 
struct wake_irq;
#line 320 
struct pm_domain_data;
#line 530  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
   struct pm_domain_data *domain_data ;
};
#line 573 
struct dev_pm_qos;
#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool in_dpm_list : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool no_pm : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   u32 driver_flags ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   bool no_pm_callbacks : 1 ;
   unsigned int must_resume : 1 ;
   unsigned int may_skip_resume : 1 ;
   struct hrtimer suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int runtime_auto : 1 ;
   bool ignore_children : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   unsigned int links_count ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   u64 last_busy ;
   u64 active_time ;
   u64 suspended_time ;
   u64 accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};
#line 650  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   int (*start)(struct device *) ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ratelimit.h"
struct ratelimit_state {
   raw_spinlock_t lock ;
   int interval ;
   int burst ;
   int printed ;
   int missed ;
   unsigned long begin ;
   unsigned long flags ;
};
#line 5  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *iommu ;
};
#line 12 
struct dma_map_ops;
#line 23 
struct device_driver;
#line 24 
struct driver_private;
#line 25 
struct class;
#line 26 
struct subsys_private;
#line 27 
struct bus_type;
#line 28 
struct iommu_ops;
#line 29 
struct iommu_group;
#line 30 
struct iommu_fwspec;
#line 31 
struct dev_pin_info;
#line 32 
struct iommu_param;
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct bus_type {
   char *name ;
   char *dev_name ;
   struct device *dev_root ;
   struct attribute_group **bus_groups ;
   struct attribute_group **dev_groups ;
   struct attribute_group **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   int (*num_vf)(struct device *) ;
   int (*dma_configure)(struct device *) ;
   struct dev_pm_ops *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
   bool need_parent_lock ;
};
#line 164 
struct device_type;
#line 309 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};
#line 383 
struct of_device_id;
#line 383 
struct acpi_device_id;
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_driver {
   char *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id *of_match_table ;
   struct acpi_device_id *acpi_match_table ;
   int (*probe)(struct device *) ;
   void (*sync_state)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group **groups ;
   struct attribute_group **dev_groups ;
   struct dev_pm_ops *pm ;
   void (*coredump)(struct device *) ;
   struct driver_private *p ;
};
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct class {
   char *name ;
   struct module *owner ;
   struct attribute_group **class_groups ;
   struct attribute_group **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*shutdown_pre)(struct device *) ;
   struct kobj_ns_type_operations *ns_type ;
   void *(*namespace)(struct device *) ;
   void (*get_ownership)(struct device *, kuid_t *, kgid_t *) ;
   struct dev_pm_ops *pm ;
   struct subsys_private *p ;
};
#line 809  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_type {
   char *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops *pm ;
};
#line 1008  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1139 
enum dl_dev_state {
    DL_DEV_NO_DRIVER = 0,
    DL_DEV_PROBING = 1,
    DL_DEV_DRIVER_BOUND = 2,
    DL_DEV_UNBINDING = 3
};
#line 1164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct dev_links_info {
   struct list_head suppliers ;
   struct list_head consumers ;
   struct list_head needs_suppliers ;
   struct list_head defer_sync ;
   bool need_for_probe ;
   enum dl_dev_state status ;
};
#line 1259 
struct irq_domain;
#line 1259 
struct dma_coherent_mem;
#line 1259 
struct cma;
#line 1259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device {
   struct kobject kobj ;
   struct device *parent ;
   struct device_private *p ;
   char *init_name ;
   struct device_type *type ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct mutex lockdep_mutex ;
   struct mutex mutex ;
   struct dev_links_info links ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct irq_domain *msi_domain ;
   struct dev_pin_info *pins ;
   struct list_head msi_list ;
   struct dma_map_ops *dma_ops ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   u64 bus_dma_limit ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   int numa_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   struct iommu_fwspec *iommu_fwspec ;
   struct iommu_param *iommu_param ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
   bool of_node_reused : 1 ;
   bool state_synced : 1 ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pm_wakeup.h"
struct wakeup_source {
   char *name ;
   int id ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   struct device *dev ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct scatterlist {
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , unsigned long ) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , unsigned long ) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , unsigned long ) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , unsigned long ) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , unsigned long ) ;
   dma_addr_t (*map_resource)(struct device *, phys_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*unmap_resource)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*cache_sync)(struct device *, void *, size_t , enum dma_data_direction ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   u64 (*get_required_mask)(struct device *) ;
   size_t (*max_mapping_size)(struct device *) ;
   unsigned long (*get_merge_boundary)(struct device *) ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
typedef u64 netdev_features_t;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
union __anonunion_in6_u_478 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/in6.h"
struct in6_addr {
   union __anonunion_in6_u_478 in6_u ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
struct __anonstruct_siphash_key_t_479 {
   u64 key[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/in6.h"
typedef struct __anonstruct_siphash_key_t_479 siphash_key_t;
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_ether.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
} __attribute__((__packed__));
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations *ops ;
   unsigned int flags ;
   unsigned long private ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int head ;
   unsigned int tail ;
   unsigned int max_usage ;
   unsigned int ring_size ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
   struct user_struct *user ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   bool (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_tunnel {
   __be64 tun_id ;
};
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi_common {
   int flowic_oif ;
   int flowic_iif ;
   __u32 flowic_mark ;
   __u8 flowic_tos ;
   __u8 flowic_scope ;
   __u8 flowic_proto ;
   __u8 flowic_flags ;
   __u32 flowic_secid ;
   kuid_t flowic_uid ;
   struct flowi_tunnel flowic_tun_key ;
   __u32 flowic_multipath_hash ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_ports_490 {
   __be16 dport ;
   __be16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_icmpt_491 {
   __u8 type ;
   __u8 code ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_dnports_492 {
   __le16 dport ;
   __le16 sport ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct __anonstruct_mht_493 {
   __u8 type ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union flowi_uli {
   struct __anonstruct_ports_490 ports ;
   struct __anonstruct_icmpt_491 icmpt ;
   struct __anonstruct_dnports_492 dnports ;
   __be32 spi ;
   __be32 gre_key ;
   struct __anonstruct_mht_493 mht ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi4 {
   struct flowi_common __fl_common ;
   __be32 saddr ;
   __be32 daddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi6 {
   struct flowi_common __fl_common ;
   struct in6_addr daddr ;
   struct in6_addr saddr ;
   __be32 flowlabel ;
   union flowi_uli uli ;
   __u32 mp_hash ;
} __attribute__((__aligned__(8)));
#line 158  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowidn {
   struct flowi_common __fl_common ;
   __le16 daddr ;
   __le16 saddr ;
   union flowi_uli uli ;
} __attribute__((__aligned__(8)));
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
union __anonunion_u_494 {
   struct flowi_common __fl_common ;
   struct flowi4 ip4 ;
   struct flowi6 ip6 ;
   struct flowidn dn ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow.h"
struct flowi {
   union __anonunion_u_494 u ;
} __attribute__((__aligned__(8)));
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netfilter/nf_conntrack_common.h"
struct ip_conntrack_stat {
   unsigned int found ;
   unsigned int invalid ;
   unsigned int ignore ;
   unsigned int insert ;
   unsigned int insert_failed ;
   unsigned int drop ;
   unsigned int early_drop ;
   unsigned int error ;
   unsigned int expect_new ;
   unsigned int expect_create ;
   unsigned int expect_delete ;
   unsigned int search_restart ;
};
#line 42 
struct bpf_prog;
#line 43 
union bpf_attr;
#line 44 
struct skb_ext;
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 313  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef struct bio_vec skb_frag_t;
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};
#line 510  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_shared_info {
   __u8 __unused ;
   __u8 meta_len ;
   __u8 nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   unsigned int gso_type ;
   u32 tskey ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_501 {
   struct net_device *dev ;
   unsigned long dev_scratch ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_500 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_501 __anonCompField___anonstruct_500_88 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_499 {
   struct __anonstruct_500 __anonCompField___anonunion_499_89 ;
   struct rb_node rbnode ;
   struct list_head list ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_502 {
   struct sock *sk ;
   int ip_defrag_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_503 {
   ktime_t tstamp ;
   u64 skb_mstamp_ns ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_505 {
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_504 {
   struct __anonstruct_505 __anonCompField___anonunion_504_93 ;
   struct list_head tcp_tsorted_anchor ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct __anonstruct_507 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_506 {
   __wsum csum ;
   struct __anonstruct_507 __anonCompField___anonunion_506_95 ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_508 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_509 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
union __anonunion_510 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};
#line 685  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_499 __anonCompField_sk_buff_90 ;
   union __anonunion_502 __anonCompField_sk_buff_91 ;
   union __anonunion_503 __anonCompField_sk_buff_92 ;
   char cb[48U] ;
   union __anonunion_504 __anonCompField_sk_buff_94 ;
   unsigned long _nfct ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __cloned_offset[0U] ;
   __u8 cloned : 1 ;
   __u8 nohdr : 1 ;
   __u8 fclone : 2 ;
   __u8 peeked : 1 ;
   __u8 head_frag : 1 ;
   __u8 pfmemalloc : 1 ;
   __u8 active_extensions ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 pkt_type : 3 ;
   __u8 ignore_df : 1 ;
   __u8 nf_trace : 1 ;
   __u8 ip_summed : 2 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 sw_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 encapsulation : 1 ;
   __u8 encap_hdr_csum : 1 ;
   __u8 csum_valid : 1 ;
   __u8 __pkt_vlan_present_offset[0U] ;
   __u8 vlan_present : 1 ;
   __u8 csum_complete_sw : 1 ;
   __u8 csum_level : 2 ;
   __u8 csum_not_inet : 1 ;
   __u8 dst_pending_confirm : 1 ;
   __u8 ndisc_nodetype : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 inner_protocol_type : 1 ;
   __u8 remcsum_offload : 1 ;
   __u8 offload_fwd_mark : 1 ;
   __u8 offload_l3_fwd_mark : 1 ;
   __u8 tc_skip_classify : 1 ;
   __u8 tc_at_ingress : 1 ;
   __u8 tc_redirected : 1 ;
   __u8 tc_from_ingress : 1 ;
   __u8 decrypted : 1 ;
   __u16 tc_index ;
   union __anonunion_506 __anonCompField_sk_buff_96 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_508 __anonCompField_sk_buff_97 ;
   __u32 secmark ;
   union __anonunion_509 __anonCompField_sk_buff_98 ;
   union __anonunion_510 __anonCompField_sk_buff_99 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   refcount_t users ;
   struct skb_ext *extensions ;
};
#line 920 
struct dst_entry;
#line 4108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
struct skb_ext {
   refcount_t refcnt ;
   u8 offset[3U] ;
   u8 chunks ;
   char data[0U] ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
struct __anonstruct_sync_serial_settings_540 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dynamic_queue_limits.h"
typedef struct __anonstruct_sync_serial_settings_540 sync_serial_settings;
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_541 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_541 te1_settings;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_542 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_542 raw_hdlc_proto;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_543 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_543 fr_proto;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_544 {
   unsigned int dlci ;
};
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_544 fr_proto_pvc;
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_545 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_545 fr_proto_pvc_info;
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_546 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_546 cisco_proto;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_547 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 206  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_547 ifs_ifsu ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_548 {
   char ifrn_name[16U] ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_549 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_548 ifr_ifrn ;
   union __anonunion_ifr_ifru_549 ifr_ifru ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef s32 compat_long_t;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/compat.h"
typedef u32 compat_uptr_t;
#line 367  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 541  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 702  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 758  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_tcpip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tclass ;
};
#line 829  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 spi ;
   __u8 tclass ;
};
#line 844  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_usrip6_spec {
   __be32 ip6src[4U] ;
   __be32 ip6dst[4U] ;
   __be32 l4_4_bytes ;
   __u8 tclass ;
   __u8 l4_proto ;
};
#line 852  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethtool_tcpip6_spec tcp_ip6_spec ;
   struct ethtool_tcpip6_spec udp_ip6_spec ;
   struct ethtool_tcpip6_spec sctp_ip6_spec ;
   struct ethtool_ah_espip6_spec ah_ip6_spec ;
   struct ethtool_ah_espip6_spec esp_ip6_spec ;
   struct ethtool_usrip6_spec usr_ip6_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 905  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
union __anonunion_568 {
   __u32 rule_cnt ;
   __u32 rss_context ;
};
#line 1001  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   union __anonunion_568 __anonCompField_ethtool_rxnfc_102 ;
   __u32 rule_locs[0U] ;
};
#line 1130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 1150  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 1230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 1302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_fecparam {
   __u32 cmd ;
   __u32 active_fec ;
   __u32 fec ;
   __u32 reserved ;
};
#line 1876  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/ethtool.h"
struct ethtool_link_settings {
   __u32 cmd ;
   __u32 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __s8 link_mode_masks_nwords ;
   __u8 transceiver ;
   __u8 reserved1[3U] ;
   __u32 reserved[7U] ;
   __u32 link_mode_masks[0U] ;
};
#line 40  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct __anonstruct_link_modes_571 {
   unsigned long supported[2U] ;
   unsigned long advertising[2U] ;
   unsigned long lp_advertising[2U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_link_ksettings {
   struct ethtool_link_settings base ;
   struct __anonstruct_link_modes_571 link_modes ;
};
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ethtool.h"
struct ethtool_ops {
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 *, u8 *, u8 ) ;
   int (*get_rxfh_context)(struct net_device *, u32 *, u8 *, u8 *, u32 ) ;
   int (*set_rxfh_context)(struct net_device *, u32 *, u8 *, u8 , u32 *, bool ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable *, void *) ;
   int (*get_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*set_per_queue_coalesce)(struct net_device *, u32 , struct ethtool_coalesce *) ;
   int (*get_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*set_link_ksettings)(struct net_device *, struct ethtool_link_ksettings *) ;
   int (*get_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   int (*set_fecparam)(struct net_device *, struct ethtool_fecparam *) ;
   void (*get_ethtool_phy_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
};
#line 422 
struct prot_inuse;
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/core.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   int *sock_inuse ;
   struct prot_inuse *prot_inuse ;
};
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct u64_stats_sync {
   };
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct __anonstruct_local_t_572 {
   atomic_long_t a ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
typedef struct __anonstruct_local_t_572 local_t;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
struct __anonstruct_local64_t_573 {
   local_t a ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/local.h"
typedef struct __anonstruct_local64_t_573 local64_t;
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
struct __anonstruct_u64_stats_t_574 {
   local64_t v ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/local64.h"
typedef struct __anonstruct_u64_stats_t_574 u64_stats_t;
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct ipstats_mib {
   u64 mibs[37U] ;
   struct u64_stats_sync syncp ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[120U] ;
};
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/snmp.h"
struct linux_tls_mib {
   unsigned long mibs[11U] ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct proc_dir_entry;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mib.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
   struct linux_tls_mib *tls_statistics ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/unix.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/packet.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags;
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct fqdir {
   long high_thresh ;
   long low_thresh ;
   int timeout ;
   int max_dist ;
   struct inet_frags *f ;
   struct net *net ;
   bool dead ;
   struct rhashtable rhashtable ;
   atomic_long_t mem ;
   struct work_struct destroy_work ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v4_compare_key {
   __be32 saddr ;
   __be32 daddr ;
   u32 user ;
   u32 vif ;
   __be16 id ;
   u16 protocol ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct frag_v6_compare_key {
   struct in6_addr saddr ;
   struct in6_addr daddr ;
   u32 user ;
   __be32 id ;
   u32 iif ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
union __anonunion_key_575 {
   struct frag_v4_compare_key v4 ;
   struct frag_v6_compare_key v6 ;
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frag_queue {
   struct rhash_head node ;
   union __anonunion_key_575 key ;
   struct timer_list timer ;
   spinlock_t lock ;
   refcount_t refcnt ;
   struct rb_root rb_fragments ;
   struct sk_buff *fragments_tail ;
   struct sk_buff *last_run_head ;
   ktime_t stamp ;
   int len ;
   int meat ;
   __u8 flags ;
   u16 max_size ;
   struct fqdir *fqdir ;
   struct callback_head rcu ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_frag.h"
struct inet_frags {
   unsigned int qsize ;
   void (*constructor)(struct inet_frag_queue *, void *) ;
   void (*destructor)(struct inet_frag_queue *) ;
   void (*frag_expire)(struct timer_list *) ;
   struct kmem_cache *frags_cachep ;
   char *frags_cache_name ;
   struct rhashtable_params rhash_params ;
   refcount_t refcnt ;
   struct completion completion ;
};
#line 177 
struct ipv4_devconf;
#line 178 
struct fib_rules_ops;
#line 179 
struct fib_table;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 31 
struct inet_hashinfo;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct inet_timewait_death_row {
   atomic_t tw_count ;
   struct inet_hashinfo *hashinfo ;
   int sysctl_max_tw_buckets ;
};
#line 40 
struct tcp_fastopen_context;
#line 43 
struct ip_ra_chain;
#line 43 
struct inet_peer_base;
#line 43 
struct xt_table;
#line 43 
struct tcp_congestion_ops;
#line 43 
struct fib_notifier_ops;
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct ip_ra_chain *ra_chain ;
   struct mutex ra_mutex ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   unsigned int fib_rules_require_fldissect ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   bool fib_has_custom_local_routes ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct fqdir *fqdir ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_default_ttl ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_fwd_update_priority ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_ip_dynaddr ;
   int sysctl_ip_early_demux ;
   int sysctl_raw_l3mdev_accept ;
   int sysctl_tcp_early_demux ;
   int sysctl_udp_early_demux ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_l3mdev_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_mtu_probe_floor ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_min_snd_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   int sysctl_tcp_keepalive_time ;
   int sysctl_tcp_keepalive_probes ;
   int sysctl_tcp_keepalive_intvl ;
   int sysctl_tcp_syn_retries ;
   int sysctl_tcp_synack_retries ;
   int sysctl_tcp_syncookies ;
   int sysctl_tcp_reordering ;
   int sysctl_tcp_retries1 ;
   int sysctl_tcp_retries2 ;
   int sysctl_tcp_orphan_retries ;
   int sysctl_tcp_fin_timeout ;
   unsigned int sysctl_tcp_notsent_lowat ;
   int sysctl_tcp_tw_reuse ;
   int sysctl_tcp_sack ;
   int sysctl_tcp_window_scaling ;
   int sysctl_tcp_timestamps ;
   int sysctl_tcp_early_retrans ;
   int sysctl_tcp_recovery ;
   int sysctl_tcp_thin_linear_timeouts ;
   int sysctl_tcp_slow_start_after_idle ;
   int sysctl_tcp_retrans_collapse ;
   int sysctl_tcp_stdurg ;
   int sysctl_tcp_rfc1337 ;
   int sysctl_tcp_abort_on_overflow ;
   int sysctl_tcp_fack ;
   int sysctl_tcp_max_reordering ;
   int sysctl_tcp_dsack ;
   int sysctl_tcp_app_win ;
   int sysctl_tcp_adv_win_scale ;
   int sysctl_tcp_frto ;
   int sysctl_tcp_nometrics_save ;
   int sysctl_tcp_moderate_rcvbuf ;
   int sysctl_tcp_tso_win_divisor ;
   int sysctl_tcp_workaround_signed_windows ;
   int sysctl_tcp_limit_output_bytes ;
   int sysctl_tcp_challenge_ack_limit ;
   int sysctl_tcp_min_tso_segs ;
   int sysctl_tcp_min_rtt_wlen ;
   int sysctl_tcp_autocorking ;
   int sysctl_tcp_invalid_ratelimit ;
   int sysctl_tcp_pacing_ss_ratio ;
   int sysctl_tcp_pacing_ca_ratio ;
   int sysctl_tcp_wmem[3U] ;
   int sysctl_tcp_rmem[3U] ;
   int sysctl_tcp_comp_sack_nr ;
   unsigned long sysctl_tcp_comp_sack_delay_ns ;
   struct inet_timewait_death_row tcp_death_row ;
   int sysctl_max_syn_backlog ;
   int sysctl_tcp_fastopen ;
   struct tcp_congestion_ops *tcp_congestion_control ;
   struct tcp_fastopen_context *tcp_fastopen_ctx ;
   spinlock_t tcp_fastopen_ctx_lock ;
   unsigned int sysctl_tcp_fastopen_blackhole_timeout ;
   atomic_t tfo_active_disable_times ;
   unsigned long tfo_active_disable_stamp ;
   int sysctl_udp_wmem_min ;
   int sysctl_udp_rmem_min ;
   int sysctl_udp_l3mdev_accept ;
   int sysctl_igmp_max_memberships ;
   int sysctl_igmp_max_msf ;
   int sysctl_igmp_llm_reports ;
   int sysctl_igmp_qrv ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   int sysctl_ip_prot_sock ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   int sysctl_fib_multipath_use_neigh ;
   int sysctl_fib_multipath_hash_policy ;
   struct fib_notifier_ops *notifier_ops ;
   unsigned int fib_seq ;
   struct fib_notifier_ops *ipmr_notifier_ops ;
   unsigned int ipmr_seq ;
   atomic_t rt_genid ;
   siphash_key_t ip_id_key ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct neighbour;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst_ops.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry *) ;
   unsigned int (*mtu)(struct dst_entry *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 , bool ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct net *, struct sock *, struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry *, struct sk_buff *, void *) ;
   void (*confirm_neigh)(struct dst_entry *, void *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int multipath_hash_policy ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int icmpv6_echo_ignore_all ;
   int icmpv6_echo_ignore_multicast ;
   int icmpv6_echo_ignore_anycast ;
   unsigned long icmpv6_ratemask[4U] ;
   unsigned long *icmpv6_ratemask_ptr ;
   int anycast_src_echo_reply ;
   int ip_nonlocal_bind ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
   int flowlabel_reflect ;
   int max_dst_opts_cnt ;
   int max_hbh_opts_cnt ;
   int max_dst_opts_len ;
   int max_hbh_opts_len ;
   int seg6_flowlabel ;
   bool skip_notify_on_dev_down ;
};
#line 56 
struct ipv6_devconf;
#line 56 
struct fib6_info;
#line 56 
struct rt6_info;
#line 56 
struct rt6_statistics;
#line 56 
struct fib6_table;
#line 56 
struct seg6_pernet_data;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct __anonstruct_ip6addrlbl_table_577 {
   struct hlist_head head ;
   spinlock_t lock ;
   u32 seq ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct fqdir *fqdir ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct fib6_info *fib6_null_entry ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct list_head fib6_walkers ;
   struct dst_ops ip6_dst_ops ;
   rwlock_t fib6_walker_lock ;
   spinlock_t fib6_gc_lock ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   unsigned int fib6_rules_require_fldissect ;
   bool fib6_has_custom_rules ;
   unsigned int fib6_routes_require_src ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
   struct seg6_pernet_data *seg6_data ;
   struct fib_notifier_ops *notifier_ops ;
   struct fib_notifier_ops *ip6mr_notifier_ops ;
   unsigned int ipmr_seq ;
   struct __anonstruct_ip6addrlbl_table_577 ip6addrlbl_table ;
};
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct fqdir *fqdir ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nexthop.h"
struct netns_nexthop {
   struct rb_root rb_root ;
   struct hlist_head *devhash ;
   unsigned int seq ;
   u32 last_id_allocated ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct fqdir *fqdir ;
};
#line 21 
struct sctp_mib;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/sctp.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int ps_retrans ;
   int pf_enable ;
   int pf_expose ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int reconf_enable ;
   int auth_enable ;
   int intl_enable ;
   int ecn_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/dccp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netfilter.h"
struct nf_logger;
#line 76 
struct nf_queue_handler;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct nf_hook_entries;
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_queue_handler *queue_handler ;
   struct nf_logger *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
   struct nf_hook_entries *hooks_ipv4[5U] ;
   struct nf_hook_entries *hooks_ipv6[5U] ;
   struct nf_hook_entries *hooks_arp[3U] ;
   struct nf_hook_entries *hooks_bridge[5U] ;
   struct nf_hook_entries *hooks_decnet[7U] ;
   bool defrag_ipv4 ;
   bool defrag_ipv6 ;
};
#line 37 
struct ebt_table;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/x_tables.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_generic_net {
   unsigned int timeout ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_tcp_net {
   unsigned int timeouts[14U] ;
   int tcp_loose ;
   int tcp_be_liberal ;
   int tcp_max_retrans ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_udp_net {
   unsigned int timeouts[2U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_icmp_net {
   unsigned int timeout ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_dccp_net {
   int dccp_loose ;
   unsigned int dccp_timeout[10U] ;
};
#line 54  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_sctp_net {
   unsigned int timeouts[10U] ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_gre_net {
   struct list_head keymap_list ;
   unsigned int timeouts[2U] ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct nf_dccp_net dccp ;
   struct nf_sctp_net sctp ;
   struct nf_gre_net gre ;
};
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};
#line 95 
struct nf_ct_event_notifier;
#line 95 
struct nf_exp_event_notifier;
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   bool auto_assign_helper_warned ;
   struct ctl_table_header *sysctl_header ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
};
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/nftables.h"
struct netns_nftables {
   struct list_head tables ;
   struct list_head commit_list ;
   struct list_head module_list ;
   struct mutex commit_mutex ;
   unsigned int base_seq ;
   u8 gencursor ;
   u8 validate_state ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct list_head inexact_bins ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   spinlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
};
#line 79 
struct mpls_route;
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/mpls.h"
struct netns_mpls {
   int ip_ttl_propagate ;
   int default_ttl ;
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};
#line 20 
struct can_dev_rcv_lists;
#line 21 
struct can_pkg_stats;
#line 22 
struct can_rcv_lists_stats;
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/can.h"
struct netns_can {
   struct proc_dir_entry *proc_dir ;
   struct proc_dir_entry *pde_version ;
   struct proc_dir_entry *pde_stats ;
   struct proc_dir_entry *pde_reset_stats ;
   struct proc_dir_entry *pde_rcvlist_all ;
   struct proc_dir_entry *pde_rcvlist_fil ;
   struct proc_dir_entry *pde_rcvlist_inv ;
   struct proc_dir_entry *pde_rcvlist_sff ;
   struct proc_dir_entry *pde_rcvlist_eff ;
   struct proc_dir_entry *pde_rcvlist_err ;
   struct proc_dir_entry *bcmproc_dir ;
   struct can_dev_rcv_lists *rx_alldev_list ;
   spinlock_t rcvlists_lock ;
   struct timer_list stattimer ;
   struct can_pkg_stats *pkg_stats ;
   struct can_rcv_lists_stats *rcv_lists_stats ;
   struct hlist_head cgw_list ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netns/xdp.h"
struct netns_xdp {
   struct mutex lock ;
   struct hlist_head list ;
};
#line 12 
struct proc_ns_operations;
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ns_common.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations *ops ;
   unsigned int inum ;
};
#line 12 
struct net_generic;
#line 13 
struct uevent_sock;
#line 14 
struct netns_ipvs;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct key_tag;
#line 55 
struct ucounts;
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct net {
   refcount_t passive ;
   refcount_t count ;
   spinlock_t rules_mod_lock ;
   unsigned int dev_unreg_count ;
   unsigned int dev_base_seq ;
   int ifindex ;
   spinlock_t nsid_lock ;
   atomic_t fnhe_genid ;
   struct list_head list ;
   struct list_head exit_list ;
   struct llist_node cleanup_list ;
   struct key_tag *key_domain ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct list_head dev_base_head ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct uevent_sock *uevent_sock ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct raw_notifier_head netdev_chain ;
   u32 hash_mix ;
   struct net_device *loopback_dev ;
   struct list_head rules_ops ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_nexthop nexthop ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct ctl_table_header *nf_frag_frags_hdr ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct list_head nfnl_acct_list ;
   struct list_head nfct_timeout_list ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct bpf_prog *flow_dissector_prog ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct netns_can can ;
   struct netns_xdp xdp ;
   struct sock *crypto_nlsk ;
   struct sock *diag_nlsk ;
} __attribute__((__designated_init__));
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array_ptr;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 83  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/assoc_array.h"
typedef int32_t key_serial_t;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 32 
struct key_type;
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_tag {
   struct callback_head rcu ;
   refcount_t usage ;
   bool removed ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_590 {
   u16 desc_len ;
   char desc[6U] ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_589 {
   struct __anonstruct_590 __anonCompField___anonunion_589_103 ;
   unsigned long x ;
};
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct keyring_index_key {
   unsigned long hash ;
   union __anonunion_589 __anonCompField_keyring_index_key_104 ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union key_payload {
   void *rcu_data0 ;
   void *data[4U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key_restriction {
   int (*check)(struct key *, struct key_type *, union key_payload *, struct key *) ;
   struct key *key ;
   struct key_type *keytype ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_591 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 172 
struct key_user;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_592 {
   time64_t expiry ;
   time64_t revoked_at ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_594 {
   unsigned long hash ;
   unsigned long len_desc ;
   struct key_type *type ;
   struct key_tag *domain_tag ;
   char *description ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_593 {
   struct keyring_index_key index_key ;
   struct __anonstruct_594 __anonCompField___anonunion_593_107 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct __anonstruct_596 {
   struct list_head name_link ;
   struct assoc_array keys ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
union __anonunion_595 {
   union key_payload payload ;
   struct __anonstruct_596 __anonCompField___anonunion_595_109 ;
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/key.h"
struct key {
   refcount_t usage ;
   key_serial_t serial ;
   union __anonunion_591 __anonCompField_key_105 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_592 __anonCompField_key_106 ;
   time64_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   short state ;
   unsigned long flags ;
   union __anonunion_593 __anonCompField_key_108 ;
   union __anonunion_595 __anonCompField_key_110 ;
   struct key_restriction *restrict_link ;
};
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/user.h"
struct user_struct {
   refcount_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   unsigned long unix_inflight ;
   atomic_long_t pipe_bufs ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
   struct ratelimit_state ratelimit ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   kgid_t gid[0U] ;
} __attribute__((__designated_init__));
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
union __anonunion_599 {
   int non_rcu ;
   struct callback_head rcu ;
};
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   kernel_cap_t cap_ambient ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   union __anonunion_599 __anonCompField_cred_111 ;
} __attribute__((__designated_init__));
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations *op ;
   int poll_event ;
   struct file *file ;
   void *private ;
};
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_600 {
   struct net *net ;
};
#line 275  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_600 possible_net_t;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 78  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcbnl_buffer {
   __u8 prio2buffer[8U] ;
   __u32 buffer_size[8U] ;
   __u32 total_size ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 259  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
   int (*dcbnl_getbuffer)(struct net_device *, struct dcbnl_buffer *) ;
   int (*dcbnl_setbuffer)(struct net_device *, struct dcbnl_buffer *) ;
};
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/taskstats.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
   __u64 thrashing_count ;
   __u64 thrashing_delay_total ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/cgroupstats.h"
struct mnt_namespace;
#line 60 
struct uts_namespace;
#line 61 
struct ipc_namespace;
#line 62 
struct cgroup_namespace;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/nsproxy.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
   struct cgroup_namespace *cgroup_ns ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_extent {
   u32 first ;
   u32 lower_first ;
   u32 count ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct __anonstruct_602 {
   struct uid_gid_extent *forward ;
   struct uid_gid_extent *reverse ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
union __anonunion_601 {
   struct uid_gid_extent extent[5U] ;
   struct __anonstruct_602 __anonCompField___anonunion_601_112 ;
};
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct uid_gid_map {
   u32 nr_extents ;
   union __anonunion_601 __anonCompField_uid_gid_map_113 ;
};
#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct user_namespace {
   struct uid_gid_map uid_map ;
   struct uid_gid_map gid_map ;
   struct uid_gid_map projid_map ;
   atomic_t count ;
   struct user_namespace *parent ;
   int level ;
   kuid_t owner ;
   kgid_t group ;
   struct ns_common ns ;
   unsigned long flags ;
   struct list_head keyring_name_list ;
   struct key *user_keyring_register ;
   struct rw_semaphore keyring_sem ;
   struct key *persistent_keyring_register ;
   struct work_struct work ;
   struct ctl_table_set set ;
   struct ctl_table_header *sysctls ;
   struct ucounts *ucounts ;
   int ucount_max[9U] ;
} __attribute__((__designated_init__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
struct ucounts {
   struct hlist_node node ;
   struct user_namespace *ns ;
   kuid_t uid ;
   int count ;
   atomic_t ucount[9U] ;
};
#line 139 
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/user_namespace.h"
typedef enum irqreturn irqreturn_t;
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct irqaction {
   irqreturn_t (*handler)(int , void *) ;
   void *dev_id ;
   void *percpu_dev_id ;
   struct irqaction *next ;
   irqreturn_t (*thread_fn)(int , void *) ;
   struct task_struct *thread ;
   struct irqaction *secondary ;
   unsigned int irq ;
   unsigned int flags ;
   unsigned long thread_flags ;
   unsigned long thread_mask ;
   char *name ;
   struct proc_dir_entry *dir ;
} __attribute__((__aligned__(4096)));
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct irq_affinity_notify {
   unsigned int irq ;
   struct kref kref ;
   struct work_struct work ;
   void (*notify)(struct irq_affinity_notify *, cpumask_t *) ;
   void (*release)(struct kref *) ;
};
#line 472 
enum irqchip_irq_state {
    IRQCHIP_STATE_PENDING = 0,
    IRQCHIP_STATE_ACTIVE = 1,
    IRQCHIP_STATE_MASKED = 2,
    IRQCHIP_STATE_LINE_LEVEL = 3
};
#line 604  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_insn {
   __u8 code ;
   __u8 dst_reg : 4 ;
   __u8 src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_cgroup_storage_key {
   __u64 cgroup_inode_id ;
   __u32 attach_type ;
};
#line 110 
enum bpf_map_type {
    BPF_MAP_TYPE_UNSPEC = 0,
    BPF_MAP_TYPE_HASH = 1,
    BPF_MAP_TYPE_ARRAY = 2,
    BPF_MAP_TYPE_PROG_ARRAY = 3,
    BPF_MAP_TYPE_PERF_EVENT_ARRAY = 4,
    BPF_MAP_TYPE_PERCPU_HASH = 5,
    BPF_MAP_TYPE_PERCPU_ARRAY = 6,
    BPF_MAP_TYPE_STACK_TRACE = 7,
    BPF_MAP_TYPE_CGROUP_ARRAY = 8,
    BPF_MAP_TYPE_LRU_HASH = 9,
    BPF_MAP_TYPE_LRU_PERCPU_HASH = 10,
    BPF_MAP_TYPE_LPM_TRIE = 11,
    BPF_MAP_TYPE_ARRAY_OF_MAPS = 12,
    BPF_MAP_TYPE_HASH_OF_MAPS = 13,
    BPF_MAP_TYPE_DEVMAP = 14,
    BPF_MAP_TYPE_SOCKMAP = 15,
    BPF_MAP_TYPE_CPUMAP = 16,
    BPF_MAP_TYPE_XSKMAP = 17,
    BPF_MAP_TYPE_SOCKHASH = 18,
    BPF_MAP_TYPE_CGROUP_STORAGE = 19,
    BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 20,
    BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 21,
    BPF_MAP_TYPE_QUEUE = 22,
    BPF_MAP_TYPE_STACK = 23,
    BPF_MAP_TYPE_SK_STORAGE = 24,
    BPF_MAP_TYPE_DEVMAP_HASH = 25
};
#line 139 
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4,
    BPF_PROG_TYPE_TRACEPOINT = 5,
    BPF_PROG_TYPE_XDP = 6,
    BPF_PROG_TYPE_PERF_EVENT = 7,
    BPF_PROG_TYPE_CGROUP_SKB = 8,
    BPF_PROG_TYPE_CGROUP_SOCK = 9,
    BPF_PROG_TYPE_LWT_IN = 10,
    BPF_PROG_TYPE_LWT_OUT = 11,
    BPF_PROG_TYPE_LWT_XMIT = 12,
    BPF_PROG_TYPE_SOCK_OPS = 13,
    BPF_PROG_TYPE_SK_SKB = 14,
    BPF_PROG_TYPE_CGROUP_DEVICE = 15,
    BPF_PROG_TYPE_SK_MSG = 16,
    BPF_PROG_TYPE_RAW_TRACEPOINT = 17,
    BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 18,
    BPF_PROG_TYPE_LWT_SEG6LOCAL = 19,
    BPF_PROG_TYPE_LIRC_MODE2 = 20,
    BPF_PROG_TYPE_SK_REUSEPORT = 21,
    BPF_PROG_TYPE_FLOW_DISSECTOR = 22,
    BPF_PROG_TYPE_CGROUP_SYSCTL = 23,
    BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 24,
    BPF_PROG_TYPE_CGROUP_SOCKOPT = 25,
    BPF_PROG_TYPE_TRACING = 26
};
#line 169 
enum bpf_attach_type {
    BPF_CGROUP_INET_INGRESS = 0,
    BPF_CGROUP_INET_EGRESS = 1,
    BPF_CGROUP_INET_SOCK_CREATE = 2,
    BPF_CGROUP_SOCK_OPS = 3,
    BPF_SK_SKB_STREAM_PARSER = 4,
    BPF_SK_SKB_STREAM_VERDICT = 5,
    BPF_CGROUP_DEVICE = 6,
    BPF_SK_MSG_VERDICT = 7,
    BPF_CGROUP_INET4_BIND = 8,
    BPF_CGROUP_INET6_BIND = 9,
    BPF_CGROUP_INET4_CONNECT = 10,
    BPF_CGROUP_INET6_CONNECT = 11,
    BPF_CGROUP_INET4_POST_BIND = 12,
    BPF_CGROUP_INET6_POST_BIND = 13,
    BPF_CGROUP_UDP4_SENDMSG = 14,
    BPF_CGROUP_UDP6_SENDMSG = 15,
    BPF_LIRC_MODE2 = 16,
    BPF_FLOW_DISSECTOR = 17,
    BPF_CGROUP_SYSCTL = 18,
    BPF_CGROUP_UDP4_RECVMSG = 19,
    BPF_CGROUP_UDP6_RECVMSG = 20,
    BPF_CGROUP_GETSOCKOPT = 21,
    BPF_CGROUP_SETSOCKOPT = 22,
    BPF_TRACE_RAW_TP = 23,
    BPF_TRACE_FENTRY = 24,
    BPF_TRACE_FEXIT = 25,
    __MAX_BPF_ATTACH_TYPE = 26
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_604 {
   __u32 map_type ;
   __u32 key_size ;
   __u32 value_size ;
   __u32 max_entries ;
   __u32 map_flags ;
   __u32 inner_map_fd ;
   __u32 numa_node ;
   char map_name[16U] ;
   __u32 map_ifindex ;
   __u32 btf_fd ;
   __u32 btf_key_type_id ;
   __u32 btf_value_type_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_606 {
   __u64 value ;
   __u64 next_key ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_605 {
   __u32 map_fd ;
   __u64 key ;
   union __anonunion_606 __anonCompField___anonstruct_605_116 ;
   __u64 flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_607 {
   __u32 prog_type ;
   __u32 insn_cnt ;
   __u64 insns ;
   __u64 license ;
   __u32 log_level ;
   __u32 log_size ;
   __u64 log_buf ;
   __u32 kern_version ;
   __u32 prog_flags ;
   char prog_name[16U] ;
   __u32 prog_ifindex ;
   __u32 expected_attach_type ;
   __u32 prog_btf_fd ;
   __u32 func_info_rec_size ;
   __u64 func_info ;
   __u32 func_info_cnt ;
   __u32 line_info_rec_size ;
   __u64 line_info ;
   __u32 line_info_cnt ;
   __u32 attach_btf_id ;
   __u32 attach_prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_608 {
   __u64 pathname ;
   __u32 bpf_fd ;
   __u32 file_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_609 {
   __u32 target_fd ;
   __u32 attach_bpf_fd ;
   __u32 attach_type ;
   __u32 attach_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_test_610 {
   __u32 prog_fd ;
   __u32 retval ;
   __u32 data_size_in ;
   __u32 data_size_out ;
   __u64 data_in ;
   __u64 data_out ;
   __u32 repeat ;
   __u32 duration ;
   __u32 ctx_size_in ;
   __u32 ctx_size_out ;
   __u64 ctx_in ;
   __u64 ctx_out ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union __anonunion_612 {
   __u32 start_id ;
   __u32 prog_id ;
   __u32 map_id ;
   __u32 btf_id ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_611 {
   union __anonunion_612 __anonCompField___anonstruct_611_121 ;
   __u32 next_id ;
   __u32 open_flags ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_info_613 {
   __u32 bpf_fd ;
   __u32 info_len ;
   __u64 info ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_query_614 {
   __u32 target_fd ;
   __u32 attach_type ;
   __u32 query_flags ;
   __u32 attach_flags ;
   __u64 prog_ids ;
   __u32 prog_cnt ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_raw_tracepoint_615 {
   __u64 name ;
   __u32 prog_fd ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_616 {
   __u64 btf ;
   __u64 btf_log_buf ;
   __u32 btf_size ;
   __u32 btf_log_size ;
   __u32 btf_log_level ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct __anonstruct_task_fd_query_617 {
   __u32 pid ;
   __u32 fd ;
   __u32 flags ;
   __u32 buf_len ;
   __u64 buf ;
   __u32 prog_id ;
   __u32 fd_type ;
   __u64 probe_offset ;
   __u64 probe_addr ;
};
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
union bpf_attr {
   struct __anonstruct_604 __anonCompField_bpf_attr_115 ;
   struct __anonstruct_605 __anonCompField_bpf_attr_117 ;
   struct __anonstruct_607 __anonCompField_bpf_attr_118 ;
   struct __anonstruct_608 __anonCompField_bpf_attr_119 ;
   struct __anonstruct_609 __anonCompField_bpf_attr_120 ;
   struct __anonstruct_test_610 test ;
   struct __anonstruct_611 __anonCompField_bpf_attr_122 ;
   struct __anonstruct_info_613 info ;
   struct __anonstruct_query_614 query ;
   struct __anonstruct_raw_tracepoint_615 raw_tracepoint ;
   struct __anonstruct_616 __anonCompField_bpf_attr_123 ;
   struct __anonstruct_task_fd_query_617 task_fd_query ;
} __attribute__((__aligned__(8)));
#line 3653  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_func_info {
   __u32 insn_off ;
   __u32 type_id ;
};
#line 3661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bpf.h"
struct bpf_line_info {
   __u32 insn_off ;
   __u32 file_name_off ;
   __u32 line_off ;
   __u32 line_col ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/file.h"
struct bpf_prog_aux;
#line 96 
struct bpf_map;
#line 97 
struct btf;
#line 98 
struct btf_type;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_ops {
   int (*map_alloc_check)(union bpf_attr *) ;
   struct bpf_map *(*map_alloc)(union bpf_attr *) ;
   void (*map_release)(struct bpf_map *, struct file *) ;
   void (*map_free)(struct bpf_map *) ;
   int (*map_get_next_key)(struct bpf_map *, void *, void *) ;
   void (*map_release_uref)(struct bpf_map *) ;
   void *(*map_lookup_elem_sys_only)(struct bpf_map *, void *) ;
   void *(*map_lookup_elem)(struct bpf_map *, void *) ;
   int (*map_update_elem)(struct bpf_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_map *, void *) ;
   int (*map_push_elem)(struct bpf_map *, void *, u64 ) ;
   int (*map_pop_elem)(struct bpf_map *, void *) ;
   int (*map_peek_elem)(struct bpf_map *, void *) ;
   void *(*map_fd_get_ptr)(struct bpf_map *, struct file *, int ) ;
   void (*map_fd_put_ptr)(void *) ;
   u32 (*map_gen_lookup)(struct bpf_map *, struct bpf_insn *) ;
   u32 (*map_fd_sys_lookup_elem)(void *) ;
   void (*map_seq_show_elem)(struct bpf_map *, void *, struct seq_file *) ;
   int (*map_check_btf)(struct bpf_map *, struct btf *, struct btf_type *, struct btf_type *) ;
   int (*map_poke_track)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_untrack)(struct bpf_map *, struct bpf_prog_aux *) ;
   void (*map_poke_run)(struct bpf_map *, u32 , struct bpf_prog *, struct bpf_prog *) ;
   int (*map_direct_value_addr)(struct bpf_map *, u64 *, u32 ) ;
   int (*map_direct_value_meta)(struct bpf_map *, u64 , u32 *) ;
   int (*map_mmap)(struct bpf_map *, struct vm_area_struct *) ;
};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_memory {
   u32 pages ;
   struct user_struct *user ;
};
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map {
   struct bpf_map_ops *ops ;
   struct bpf_map *inner_map_meta ;
   void *security ;
   enum bpf_map_type map_type ;
   u32 key_size ;
   u32 value_size ;
   u32 max_entries ;
   u32 map_flags ;
   int spin_lock_off ;
   u32 id ;
   int numa_node ;
   u32 btf_key_type_id ;
   u32 btf_value_type_id ;
   struct btf *btf ;
   struct bpf_map_memory memory ;
   char name[16U] ;
   bool unpriv_array ;
   bool frozen ;
   atomic64_t refcnt ;
   atomic64_t usercnt ;
   struct work_struct work ;
   struct mutex freeze_mutex ;
   u64 writecnt ;
};
#line 151 
struct bpf_offload_dev;
#line 152 
struct bpf_offloaded_map;
#line 156  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_map_dev_ops {
   int (*map_get_next_key)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_lookup_elem)(struct bpf_offloaded_map *, void *, void *) ;
   int (*map_update_elem)(struct bpf_offloaded_map *, void *, void *, u64 ) ;
   int (*map_delete_elem)(struct bpf_offloaded_map *, void *) ;
};
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_offloaded_map {
   struct bpf_map map ;
   struct net_device *netdev ;
   struct bpf_map_dev_ops *dev_ops ;
   void *dev_priv ;
   struct list_head offloads ;
};
#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_ops {
   int (*test_run)(struct bpf_prog *, union bpf_attr *, union bpf_attr *) ;
};
#line 369  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_offload {
   struct bpf_prog *prog ;
   struct net_device *netdev ;
   struct bpf_offload_dev *offdev ;
   void *dev_priv ;
   struct list_head offloads ;
   bool dev_state ;
   bool opt_failed ;
   void *jited_image ;
   u32 jited_len ;
};
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_stats {
   u64 cnt ;
   u64 nsecs ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct btf_func_model {
   u8 ret_size ;
   u8 nr_args ;
   u8 arg_size[12U] ;
};
#line 447 
enum bpf_tramp_prog_type {
    BPF_TRAMP_FENTRY = 0,
    BPF_TRAMP_FEXIT = 1,
    BPF_TRAMP_MAX = 2
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_func_644 {
   struct btf_func_model model ;
   void *addr ;
   bool ftrace_managed ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_trampoline {
   struct hlist_node hlist ;
   struct mutex mutex ;
   refcount_t refcnt ;
   u64 key ;
   struct __anonstruct_func_644 func ;
   struct hlist_head progs_hlist[2U] ;
   int progs_cnt[2U] ;
   void *image ;
   u64 selector ;
};
#line 495  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_func_info_aux {
   bool unreliable ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct __anonstruct_tail_call_646 {
   struct bpf_map *map ;
   u32 key ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_645 {
   struct __anonstruct_tail_call_646 tail_call ;
};
#line 504  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_jit_poke_descriptor {
   void *ip ;
   union __anonunion_645 __anonCompField_bpf_jit_poke_descriptor_148 ;
   bool ip_stable ;
   u8 adj_off ;
   u16 reason ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
union __anonunion_647 {
   struct work_struct work ;
   struct callback_head rcu ;
};
#line 517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_aux {
   atomic64_t refcnt ;
   u32 used_map_cnt ;
   u32 max_ctx_offset ;
   u32 max_pkt_offset ;
   u32 max_tp_access ;
   u32 stack_depth ;
   u32 id ;
   u32 func_cnt ;
   u32 func_idx ;
   u32 attach_btf_id ;
   struct bpf_prog *linked_prog ;
   bool verifier_zext ;
   bool offload_requested ;
   bool attach_btf_trace ;
   bool func_proto_unreliable ;
   enum bpf_tramp_prog_type trampoline_prog_type ;
   struct bpf_trampoline *trampoline ;
   struct hlist_node tramp_hlist ;
   struct btf_type *attach_func_proto ;
   char *attach_func_name ;
   struct bpf_prog **func ;
   void *jit_data ;
   struct bpf_jit_poke_descriptor *poke_tab ;
   u32 size_poke_tab ;
   struct latch_tree_node ksym_tnode ;
   struct list_head ksym_lnode ;
   struct bpf_prog_ops *ops ;
   struct bpf_map **used_maps ;
   struct bpf_prog *prog ;
   struct user_struct *user ;
   u64 load_time ;
   struct bpf_map *cgroup_storage[2U] ;
   char name[16U] ;
   void *security ;
   struct bpf_prog_offload *offload ;
   struct btf *btf ;
   struct bpf_func_info *func_info ;
   struct bpf_func_info_aux *func_info_aux ;
   struct bpf_line_info *linfo ;
   void **jited_linfo ;
   u32 func_info_cnt ;
   u32 nr_linfo ;
   u32 linfo_idx ;
   u32 num_exentries ;
   struct exception_table_entry *extable ;
   struct bpf_prog_stats *stats ;
   union __anonunion_647 __anonCompField_bpf_prog_aux_149 ;
};
#line 686 
struct bpf_cgroup_storage;
#line 686  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array_item {
   struct bpf_prog *prog ;
   struct bpf_cgroup_storage *cgroup_storage[2U] ;
};
#line 691  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf.h"
struct bpf_prog_array {
   struct callback_head rcu ;
   struct bpf_prog_array_item items[0U] ;
};
#line 1335 
struct cgroup;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage_map;
#line 37  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_storage_buffer {
   struct callback_head rcu ;
   char data[0U] ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
union __anonunion_649 {
   struct bpf_storage_buffer *buf ;
   void *percpu_buf ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct bpf_cgroup_storage {
   union __anonunion_649 __anonCompField_bpf_cgroup_storage_151 ;
   struct bpf_cgroup_storage_map *map ;
   struct bpf_cgroup_storage_key key ;
   struct list_head list ;
   struct rb_node node ;
   struct callback_head rcu ;
};
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bpf-cgroup.h"
struct cgroup_bpf {
   struct bpf_prog_array *effective[26U] ;
   struct list_head progs[26U] ;
   u32 flags[26U] ;
   struct bpf_prog_array *inactive ;
   struct percpu_ref refcnt ;
   struct work_struct release_work ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work;
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_worker {
   unsigned int flags ;
   raw_spinlock_t lock ;
   struct list_head work_list ;
   struct list_head delayed_work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
   int canceling ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kthread.h"
struct kthread_delayed_work {
   struct kthread_work work ;
   struct timer_list timer ;
};
#line 199 
struct cgroup_subsys_state;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group_cpu {
   seqcount_t seq ;
   unsigned int tasks[3U] ;
   u32 state_mask ;
   u32 times[6U] ;
   u64 state_start ;
   u32 times_prev[2U][6U] ;
};
#line 96 
struct psi_group;
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/psi_types.h"
struct psi_group {
   struct mutex avgs_lock ;
   struct psi_group_cpu *pcpu ;
   u64 avg_total[5U] ;
   u64 avg_last_update ;
   u64 avg_next_update ;
   struct delayed_work avgs_work ;
   u64 total[2U][5U] ;
   unsigned long avg[5U][3U] ;
   atomic_t poll_scheduled ;
   struct kthread_worker *poll_kworker ;
   struct kthread_delayed_work poll_work ;
   struct mutex trigger_lock ;
   struct list_head triggers ;
   u32 nr_triggers[5U] ;
   u32 poll_states ;
   u64 poll_min_period ;
   u64 polling_total[5U] ;
   u64 polling_next_update ;
   u64 polling_until ;
};
#line 166 
struct cgroup_root;
#line 167 
struct cgroup_subsys;
#line 168 
struct cgroup_taskset;
#line 119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_file {
   struct kernfs_node *kn ;
   unsigned long notified_at ;
   struct timer_list notify_timer ;
};
#line 133  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct list_head rstat_css_node ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   atomic_t online_cnt ;
   struct work_struct destroy_work ;
   struct rcu_work destroy_rwork ;
   struct cgroup_subsys_state *parent ;
};
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct css_set {
   struct cgroup_subsys_state *subsys[14U] ;
   refcount_t refcount ;
   struct css_set *dom_cset ;
   struct cgroup *dfl_cgrp ;
   int nr_tasks ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head dying_tasks ;
   struct list_head task_iters ;
   struct list_head e_cset_node[14U] ;
   struct list_head threaded_csets ;
   struct list_head threaded_csets_node ;
   struct hlist_node hlist ;
   struct list_head cgrp_links ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct cgroup *mg_dst_cgrp ;
   struct css_set *mg_dst_cset ;
   bool dead ;
   struct callback_head callback_head ;
};
#line 279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_base_stat {
   struct task_cputime cputime ;
};
#line 303  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_rstat_cpu {
   struct u64_stats_sync bsync ;
   struct cgroup_base_stat bstat ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup *updated_children ;
   struct cgroup *updated_next ;
};
#line 332  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_freezer_state {
   bool freeze ;
   int e_freeze ;
   int nr_frozen_descendants ;
   int nr_frozen_tasks ;
};
#line 351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int level ;
   int max_depth ;
   int nr_descendants ;
   int nr_dying_descendants ;
   int max_descendants ;
   int nr_populated_csets ;
   int nr_populated_domain_children ;
   int nr_populated_threaded_children ;
   int nr_threaded_children ;
   struct kernfs_node *kn ;
   struct cgroup_file procs_file ;
   struct cgroup_file events_file ;
   u16 subtree_control ;
   u16 subtree_ss_mask ;
   u16 old_subtree_control ;
   u16 old_subtree_ss_mask ;
   struct cgroup_subsys_state *subsys[14U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[14U] ;
   struct cgroup *dom_cgrp ;
   struct cgroup *old_dom_cgrp ;
   struct cgroup_rstat_cpu *rstat_cpu ;
   struct list_head rstat_css_list ;
   struct cgroup_base_stat last_bstat ;
   struct cgroup_base_stat bstat ;
   struct prev_cputime prev_cputime ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
   struct psi_group psi ;
   struct cgroup_bpf bpf ;
   atomic_t congestion_count ;
   struct cgroup_freezer_state freezer ;
   u64 ancestor_ids[] ;
};
#line 489  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   u64 cgrp_ancestor_id_storage ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   unsigned long private ;
   size_t max_write_len ;
   unsigned int flags ;
   unsigned int file_offset ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   int (*open)(struct kernfs_open_file *) ;
   void (*release)(struct kernfs_open_file *) ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   __poll_t (*poll)(struct kernfs_open_file *, struct poll_table_struct *) ;
   struct lock_class_key lockdep_key ;
};
#line 616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_rstat_flush)(struct cgroup_subsys_state *, int ) ;
   int (*css_extra_stat_show)(struct seq_file *, struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_taskset *) ;
   void (*post_attach)(void) ;
   int (*can_fork)(struct task_struct *) ;
   void (*cancel_fork)(struct task_struct *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct task_struct *) ;
   void (*release)(struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   bool early_init : 1 ;
   bool implicit_on_dfl : 1 ;
   bool threaded : 1 ;
   bool broken_hierarchy : 1 ;
   bool warned_broken_hierarchy : 1 ;
   int id ;
   char *name ;
   char *legacy_name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct __anonstruct_651 {
   u8 is_data ;
   u8 padding ;
   u16 prioidx ;
   u32 classid ;
} __attribute__((__packed__));
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
union __anonunion_650 {
   struct __anonstruct_651 __anonCompField___anonunion_650_152 ;
   u64 val ;
};
#line 783  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup-defs.h"
struct sock_cgroup_data {
   union __anonunion_650 __anonCompField_sock_cgroup_data_153 ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cgroup.h"
struct cgroup_namespace {
   refcount_t count ;
   struct ns_common ns ;
   struct user_namespace *user_ns ;
   struct ucounts *ucounts ;
   struct css_set *root_cset ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netprio_cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_mem_info {
   u32 type ;
   u32 id ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_rxq_info {
   struct net_device *dev ;
   u32 queue_index ;
   u32 reg_state ;
   struct xdp_mem_info mem ;
} __attribute__((__aligned__(64)));
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/xdp.h"
struct xdp_frame {
   void *data ;
   u16 len ;
   u16 headroom ;
   u16 metasize ;
   struct xdp_mem_info mem ;
   struct net_device *dev_rx ;
};
#line 175 
struct netdev_bpf;
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/security.h"
struct xfrm_policy;
#line 161 
struct xfrm_state;
#line 178 
struct request_sock;
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct sighand_struct {
   spinlock_t siglock ;
   refcount_t count ;
   wait_queue_head_t signalfd_wqh ;
   struct k_sigaction action[64U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   u64 ac_utime ;
   u64 ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct cpu_itimer {
   u64 expires ;
   u64 incr ;
};
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};
#line 64  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
};
#line 80 
struct tty_struct;
#line 80 
struct autogroup;
#line 80 
struct tty_audit_buf;
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
struct signal_struct {
   refcount_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   struct hlist_head multiprocess ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct posix_cputimers posix_cputimers ;
   struct pid *pids[4U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   u64 utime ;
   u64 stime ;
   u64 cutime ;
   u64 cstime ;
   u64 gtime ;
   u64 cgtime ;
   struct prev_cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   bool oom_flag_origin ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mm_struct *oom_mm ;
   struct mutex cred_guard_mutex ;
} __attribute__((__designated_init__));
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 211  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_ext_ack {
   char *_msg ;
   struct nlattr *bad_attr ;
   u8 cookie[20U] ;
   u8 cookie_len ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
union __anonunion_674 {
   u8 ctx[48U] ;
   long args[6U] ;
};
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   struct netlink_ext_ack *extack ;
   u16 family ;
   u16 min_dump_alloc ;
   bool strict_check ;
   u16 answer_flags ;
   unsigned int prev_seq ;
   unsigned int seq ;
   union __anonunion_674 __anonCompField_netlink_callback_154 ;
};
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/neighbour.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
   __u64 rx_nohandler ;
};
#line 753  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/if_link.h"
struct ifla_vf_guid {
   __u32 vf ;
   __u64 guid ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
};
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
   __u32 trusted ;
   __be16 vlan_proto ;
};
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_stats {
   __u64 bytes ;
   __u32 packets ;
   __u32 drops ;
   __u32 overlimits ;
   __u32 bps ;
   __u32 pps ;
   __u32 qlen ;
   __u32 backlog ;
};
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/pkt_sched.h"
struct tc_sizespec {
   unsigned char cell_log ;
   unsigned char size_log ;
   short cell_align ;
   int overhead ;
   unsigned int linklayer ;
   unsigned int mpu ;
   unsigned int mtu ;
   unsigned int tsize ;
};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hashtable.h"
struct netpoll_info;
#line 119 
struct phy_device;
#line 120 
struct dsa_port;
#line 121 
struct sfp_bus;
#line 122 
struct wireless_dev;
#line 123 
struct wpan_dev;
#line 124 
struct mpls_dev;
#line 125 
struct udp_tunnel_info;
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 195 
struct neigh_parms;
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct hh_cache {
   unsigned int hh_len ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void *, void *, unsigned int ) ;
   int (*parse)(struct sk_buff *, unsigned char *) ;
   int (*cache)(struct neighbour *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device *, unsigned char *) ;
   bool (*validate)(char *, unsigned int ) ;
   __be16 (*parse_protocol)(struct sk_buff *) ;
};
#line 372 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};
#line 379  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);
#line 589 
struct Qdisc;
#line 589 
struct xdp_umem;
#line 589  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   unsigned long tx_maxrate ;
   unsigned long trans_timeout ;
   struct net_device *sb_dev ;
   struct xdp_umem *umem ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long state ;
   struct dql dql ;
} __attribute__((__aligned__(64)));
#line 662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 684  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 736  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
   struct xdp_rxq_info xdp_rxq ;
   struct xdp_umem *umem ;
} __attribute__((__aligned__(64)));
#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 777  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *attr_map[0U] ;
};
#line 793  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 820  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 833 
enum tc_setup_type {
    TC_SETUP_QDISC_MQPRIO = 0,
    TC_SETUP_CLSU32 = 1,
    TC_SETUP_CLSFLOWER = 2,
    TC_SETUP_CLSMATCHALL = 3,
    TC_SETUP_CLSBPF = 4,
    TC_SETUP_BLOCK = 5,
    TC_SETUP_QDISC_CBS = 6,
    TC_SETUP_QDISC_RED = 7,
    TC_SETUP_QDISC_PRIO = 8,
    TC_SETUP_QDISC_MQ = 9,
    TC_SETUP_QDISC_ETF = 10,
    TC_SETUP_ROOT_QDISC = 11,
    TC_SETUP_QDISC_GRED = 12,
    TC_SETUP_QDISC_TAPRIO = 13,
    TC_SETUP_FT = 14
};
#line 851 
enum bpf_netdev_command {
    XDP_SETUP_PROG = 0,
    XDP_SETUP_PROG_HW = 1,
    XDP_QUERY_PROG = 2,
    XDP_QUERY_PROG_HW = 3,
    BPF_OFFLOAD_MAP_ALLOC = 4,
    BPF_OFFLOAD_MAP_FREE = 5,
    XDP_SETUP_XSK_UMEM = 6
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_679 {
   u32 flags ;
   struct bpf_prog *prog ;
   struct netlink_ext_ack *extack ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_680 {
   u32 prog_id ;
   u32 prog_flags ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_681 {
   struct bpf_offloaded_map *offmap ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_xsk_682 {
   struct xdp_umem *umem ;
   u16 queue_id ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_678 {
   struct __anonstruct_679 __anonCompField___anonunion_678_156 ;
   struct __anonstruct_680 __anonCompField___anonunion_678_157 ;
   struct __anonstruct_681 __anonCompField___anonunion_678_158 ;
   struct __anonstruct_xsk_682 xsk ;
};
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_bpf {
   enum bpf_netdev_command command ;
   union __anonunion_678 __anonCompField_netdev_bpf_159 ;
};
#line 911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct xfrmdev_ops {
   int (*xdo_dev_state_add)(struct xfrm_state *) ;
   void (*xdo_dev_state_delete)(struct xfrm_state *) ;
   void (*xdo_dev_state_free)(struct xfrm_state *) ;
   bool (*xdo_dev_offload_ok)(struct sk_buff *, struct xfrm_state *) ;
   void (*xdo_dev_state_advance_esn)(struct xfrm_state *) ;
};
#line 921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct dev_ifalias {
   struct callback_head rcuhead ;
   char ifalias[] ;
};
#line 926 
struct tlsdev_ops;
#line 929  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct netdev_name_node {
   struct hlist_node hlist ;
   struct list_head list ;
   struct net_device *dev ;
   char *name ;
};
#line 1257 
struct devlink_port;
#line 1257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, struct net_device *) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   void (*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   bool (*ndo_has_offload_stats)(struct net_device *, int ) ;
   int (*ndo_get_offload_stats)(int , struct net_device *, void *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 , __be16 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_set_vf_trust)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_get_vf_guid)(struct net_device *, int , struct ifla_vf_guid *, struct ifla_vf_guid *) ;
   int (*ndo_set_vf_guid)(struct net_device *, int , u64 , int ) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, enum tc_setup_type , void *) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *, struct netlink_ext_ack *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct net_device *, struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct net_device *, struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 , u16 , struct netlink_ext_ack *) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int *) ;
   int (*ndo_fdb_get)(struct sk_buff *, struct nlattr **, struct net_device *, unsigned char *, u16 , u32 , u32 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 , struct netlink_ext_ack *) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_port_parent_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_udp_tunnel_add)(struct net_device *, struct udp_tunnel_info *) ;
   void (*ndo_udp_tunnel_del)(struct net_device *, struct udp_tunnel_info *) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device *) ;
   int (*ndo_change_proto_down)(struct net_device *, bool ) ;
   int (*ndo_fill_metadata_dst)(struct net_device *, struct sk_buff *) ;
   void (*ndo_set_rx_headroom)(struct net_device *, int ) ;
   int (*ndo_bpf)(struct net_device *, struct netdev_bpf *) ;
   int (*ndo_xdp_xmit)(struct net_device *, int , struct xdp_frame **, u32 ) ;
   int (*ndo_xsk_wakeup)(struct net_device *, u32 , u32 ) ;
   struct devlink_port *(*ndo_get_devlink_port)(struct net_device *) ;
};
#line 1492 
enum ldv_14739 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};
#line 1501 
enum ldv_14740 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct __anonstruct_adj_list_683 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1795 
struct iw_handler_def;
#line 1795 
struct iw_public_data;
#line 1795 
struct l3mdev_ops;
#line 1795 
struct ndisc_ops;
#line 1795 
struct vlan_info;
#line 1795 
struct tipc_bearer;
#line 1795 
struct in_device;
#line 1795 
struct dn_dev;
#line 1795 
struct inet6_dev;
#line 1795 
struct mini_Qdisc;
#line 1795 
struct cpu_rmap;
#line 1795 
struct pcpu_lstats;
#line 1795 
struct pcpu_sw_netstats;
#line 1795 
struct pcpu_dstats;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
union __anonunion_684 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
};
#line 1795 
struct garp_port;
#line 1795 
struct mrp_port;
#line 1795 
struct rtnl_link_ops;
#line 1795  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct netdev_name_node *name_node ;
   struct dev_ifalias *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_683 adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   netdev_features_t gso_partial_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_long_t rx_nohandler ;
   atomic_t carrier_up_count ;
   atomic_t carrier_down_count ;
   struct iw_handler_def *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops *netdev_ops ;
   struct ethtool_ops *ethtool_ops ;
   struct l3mdev_ops *l3mdev_ops ;
   struct ndisc_ops *ndisc_ops ;
   struct xfrmdev_ops *xfrmdev_ops ;
   struct tlsdev_ops *tlsdev_ops ;
   struct header_ops *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned int min_mtu ;
   unsigned int max_mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned char min_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned char upper_level ;
   unsigned char lower_level ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_port *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   struct bpf_prog *xdp_prog ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct mini_Qdisc *miniq_ingress ;
   struct netdev_queue *ingress_queue ;
   struct nf_hook_entries *nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   struct hlist_head qdisc_hash[16U] ;
   unsigned int tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_cpus_map ;
   struct xps_dev_maps *xps_rxqs_map ;
   struct mini_Qdisc *miniq_egress ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_14739 reg_state : 8 ;
   bool dismantle ;
   enum ldv_14740 rtnl_link_state : 16 ;
   bool needs_free_netdev ;
   void (*priv_destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_684 __anonCompField_net_device_160 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[4U] ;
   struct attribute_group *sysfs_rx_queue_group ;
   struct rtnl_link_ops *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   s16 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct sfp_bus *sfp_bus ;
   struct lock_class_key qdisc_tx_busylock_key ;
   struct lock_class_key qdisc_running_key ;
   struct lock_class_key qdisc_xmit_lock_key ;
   struct lock_class_key addr_list_lock_key ;
   bool proto_down ;
   unsigned int wol_enabled : 1 ;
};
#line 2400  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(32)));
#line 2408  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
struct pcpu_lstats {
   u64_stats_t packets ;
   u64_stats_t bytes ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 3610 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
struct firmware {
   size_t size ;
   u8 *data ;
   struct page **pages ;
   void *priv ;
};
#line 567  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/rtnetlink.h"
struct tcmsg {
   unsigned char tcm_family ;
   unsigned char tcm__pad1 ;
   unsigned short tcm__pad2 ;
   int tcm_ifindex ;
   __u32 tcm_handle ;
   __u32 tcm_parent ;
   __u32 tcm_info ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct __anonstruct_701 {
   s16 min ;
   s16 max ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
union __anonunion_700 {
   void *validation_data ;
   struct __anonstruct_701 __anonCompField___anonunion_700_161 ;
   int (*validate)(struct nlattr *, struct netlink_ext_ack *) ;
   u16 strict_start_type ;
};
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/netlink.h"
struct nla_policy {
   u8 type ;
   u8 validation_type ;
   u16 len ;
   union __anonunion_700 __anonCompField_nla_policy_162 ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   unsigned int maxtype ;
   struct nla_policy *policy ;
   int (*validate)(struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device *) ;
   int (*fill_info)(struct sk_buff *, struct net_device *) ;
   size_t (*get_xstats_size)(struct net_device *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   unsigned int slave_maxtype ;
   struct nla_policy *slave_policy ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **, struct netlink_ext_ack *) ;
   size_t (*get_slave_size)(struct net_device *, struct net_device *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device *, struct net_device *) ;
   struct net *(*get_link_net)(struct net_device *) ;
   size_t (*get_linkxstats_size)(struct net_device *, int ) ;
   int (*fill_linkxstats)(struct sk_buff *, struct net_device *, int *, int ) ;
};
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table;
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   refcount_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
   unsigned long table_fulls ;
};
#line 134 
struct neigh_ops;
#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   refcount_t refcnt ;
   unsigned int arp_queue_len_bytes ;
   struct sk_buff_head arp_queue ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   u8 protocol ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops *ops ;
   struct list_head gc_list ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
} __attribute__((__designated_init__));
#line 163  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 protocol ;
   u8 key[0U] ;
};
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/neighbour.h"
struct neigh_table {
   int family ;
   unsigned int entry_size ;
   unsigned int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void *, struct net_device *, __u32 *) ;
   bool (*key_eq)(struct neighbour *, void *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   bool (*allow_add)(struct net_device *, struct netlink_ext_ack *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   atomic_t gc_entries ;
   struct list_head gc_list ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct lwtunnel_state;
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/dst.h"
struct dst_entry {
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct net *, struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   struct lwtunnel_state *lwtstate ;
   struct callback_head callback_head ;
   short error ;
   short __pad ;
   __u32 tclassid ;
};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hw_random.h"
struct hwrng {
   char *name ;
   int (*init)(struct hwrng *) ;
   void (*cleanup)(struct hwrng *) ;
   int (*data_present)(struct hwrng *, int ) ;
   int (*data_read)(struct hwrng *, u32 *) ;
   int (*read)(struct hwrng *, void *, size_t , bool ) ;
   unsigned long priv ;
   unsigned short quality ;
   struct list_head list ;
   struct kref ref ;
   struct completion cleanup_done ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hw_random.h"
typedef unsigned long kernel_ulong_t;
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};
#line 260  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mod_devicetable.h"
struct ssb_device_id {
   __u16 vendor ;
   __u16 coreid ;
   __u8 revision ;
   __u8 __pad ;
} __attribute__((__packed__, __aligned__(2)));
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct hotplug_slot;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef int pci_power_t;
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;
#line 162 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;
#line 282 
struct pcie_link_state;
#line 283 
struct pci_vpd;
#line 284 
struct pci_sriov;
#line 285 
struct pci_p2pdma;
#line 290 
struct aer_stats;
#line 290 
struct pci_driver;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
union __anonunion_715 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u16 aer_cap ;
   struct aer_stats *aer_stats ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   unsigned long *dma_alias_mask ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   unsigned int imm_ready : 1 ;
   u8 pm_cap ;
   unsigned int pme_support : 5 ;
   unsigned int pme_poll : 1 ;
   unsigned int d1_support : 1 ;
   unsigned int d2_support : 1 ;
   unsigned int no_d1d2 : 1 ;
   unsigned int no_d3cold : 1 ;
   unsigned int bridge_d3 : 1 ;
   unsigned int d3cold_allowed : 1 ;
   unsigned int mmio_always_on : 1 ;
   unsigned int wakeup_prepared : 1 ;
   unsigned int runtime_d3cold : 1 ;
   unsigned int skip_bus_pm : 1 ;
   unsigned int ignore_hotplug : 1 ;
   unsigned int hotplug_user_indicators : 1 ;
   unsigned int clear_retrain_link : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   unsigned int ltr_path : 1 ;
   unsigned int eetlp_prefix_path : 1 ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int transparent : 1 ;
   unsigned int io_window : 1 ;
   unsigned int pref_window : 1 ;
   unsigned int pref_64_window : 1 ;
   unsigned int multifunction : 1 ;
   unsigned int is_busmaster : 1 ;
   unsigned int no_msi : 1 ;
   unsigned int no_64bit_msi : 1 ;
   unsigned int block_cfg_access : 1 ;
   unsigned int broken_parity_status : 1 ;
   unsigned int irq_reroute_variant : 2 ;
   unsigned int msi_enabled : 1 ;
   unsigned int msix_enabled : 1 ;
   unsigned int ari_enabled : 1 ;
   unsigned int ats_enabled : 1 ;
   unsigned int pasid_enabled : 1 ;
   unsigned int pri_enabled : 1 ;
   unsigned int is_managed : 1 ;
   unsigned int needs_freset : 1 ;
   unsigned int state_saved : 1 ;
   unsigned int is_physfn : 1 ;
   unsigned int is_virtfn : 1 ;
   unsigned int reset_fn : 1 ;
   unsigned int is_hotplug_bridge : 1 ;
   unsigned int shpc_managed : 1 ;
   unsigned int is_thunderbolt : 1 ;
   unsigned int untrusted : 1 ;
   unsigned int __aer_firmware_first_valid : 1 ;
   unsigned int __aer_firmware_first : 1 ;
   unsigned int broken_intx_masking : 1 ;
   unsigned int io_window_1k : 1 ;
   unsigned int irq_managed : 1 ;
   unsigned int non_compliant_bars : 1 ;
   unsigned int is_probed : 1 ;
   unsigned int link_active_reporting : 1 ;
   unsigned int no_vf_scan : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   unsigned int broken_cmd_compl : 1 ;
   unsigned int ptm_root : 1 ;
   unsigned int ptm_enabled : 1 ;
   u8 ptm_granularity ;
   struct attribute_group **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_715 __anonCompField_pci_dev_163 ;
   u16 ats_cap ;
   u8 ats_stu ;
   u16 pri_cap ;
   u32 pri_reqs_alloc ;
   unsigned int pasid_required : 1 ;
   u16 pasid_cap ;
   u16 pasid_features ;
   struct pci_p2pdma *p2pdma ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
   unsigned long priv_flags ;
};
#line 493 
struct pci_ops;
#line 493 
struct msi_controller;
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int is_added : 1 ;
};
#line 697  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_ops {
   int (*add_bus)(struct pci_bus *) ;
   void (*remove_bus)(struct pci_bus *) ;
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};
#line 725  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;
#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_prepare)(struct pci_dev *) ;
   void (*reset_done)(struct pci_dev *) ;
   void (*resume)(struct pci_dev *) ;
};
#line 824  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char *name ;
   struct pci_device_id *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers *err_handler ;
   struct attribute_group **groups ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/pci.h"
struct msi_desc;
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/property.h"
typedef u32 phandle;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   struct bin_attribute attr ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct device_node {
   char *name ;
   phandle phandle ;
   char *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/of.h"
struct of_phandle_args {
   struct device_node *np ;
   int args_count ;
   uint32_t args[16U] ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irq_regs.h"
struct msi_msg;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_common_data {
   unsigned int state_use_accessors ;
   unsigned int node ;
   void *handler_data ;
   struct msi_desc *msi_desc ;
   cpumask_var_t affinity ;
   cpumask_var_t effective_affinity ;
};
#line 173 
struct irq_chip;
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_data {
   u32 mask ;
   unsigned int irq ;
   unsigned long hwirq ;
   struct irq_common_data *common ;
   struct irq_chip *chip ;
   struct irq_domain *domain ;
   struct irq_data *parent_data ;
   void *chip_data ;
};
#line 449  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_chip {
   struct device *parent_device ;
   char *name ;
   unsigned int (*irq_startup)(struct irq_data *) ;
   void (*irq_shutdown)(struct irq_data *) ;
   void (*irq_enable)(struct irq_data *) ;
   void (*irq_disable)(struct irq_data *) ;
   void (*irq_ack)(struct irq_data *) ;
   void (*irq_mask)(struct irq_data *) ;
   void (*irq_mask_ack)(struct irq_data *) ;
   void (*irq_unmask)(struct irq_data *) ;
   void (*irq_eoi)(struct irq_data *) ;
   int (*irq_set_affinity)(struct irq_data *, struct cpumask *, bool ) ;
   int (*irq_retrigger)(struct irq_data *) ;
   int (*irq_set_type)(struct irq_data *, unsigned int ) ;
   int (*irq_set_wake)(struct irq_data *, unsigned int ) ;
   void (*irq_bus_lock)(struct irq_data *) ;
   void (*irq_bus_sync_unlock)(struct irq_data *) ;
   void (*irq_cpu_online)(struct irq_data *) ;
   void (*irq_cpu_offline)(struct irq_data *) ;
   void (*irq_suspend)(struct irq_data *) ;
   void (*irq_resume)(struct irq_data *) ;
   void (*irq_pm_shutdown)(struct irq_data *) ;
   void (*irq_calc_mask)(struct irq_data *) ;
   void (*irq_print_chip)(struct irq_data *, struct seq_file *) ;
   int (*irq_request_resources)(struct irq_data *) ;
   void (*irq_release_resources)(struct irq_data *) ;
   void (*irq_compose_msi_msg)(struct irq_data *, struct msi_msg *) ;
   void (*irq_write_msi_msg)(struct irq_data *, struct msi_msg *) ;
   int (*irq_get_irqchip_state)(struct irq_data *, enum irqchip_irq_state , bool *) ;
   int (*irq_set_irqchip_state)(struct irq_data *, enum irqchip_irq_state , bool ) ;
   int (*irq_set_vcpu_affinity)(struct irq_data *, void *) ;
   void (*ipi_send_single)(struct irq_data *, unsigned int ) ;
   void (*ipi_send_mask)(struct irq_data *, struct cpumask *) ;
   int (*irq_nmi_setup)(struct irq_data *) ;
   void (*irq_nmi_teardown)(struct irq_data *) ;
   unsigned long flags ;
};
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdesc.h"
struct irq_desc {
   struct irq_common_data irq_common_data ;
   struct irq_data irq_data ;
   unsigned int *kstat_irqs ;
   void (*handle_irq)(struct irq_desc *) ;
   struct irqaction *action ;
   unsigned int status_use_accessors ;
   unsigned int core_internal_state__do_not_mess_with_it ;
   unsigned int depth ;
   unsigned int wake_depth ;
   unsigned int tot_count ;
   unsigned int irq_count ;
   unsigned long last_unhandled ;
   unsigned int irqs_unhandled ;
   atomic_t threads_handled ;
   int threads_handled_last ;
   raw_spinlock_t lock ;
   struct cpumask *percpu_enabled ;
   struct cpumask *percpu_affinity ;
   struct cpumask *affinity_hint ;
   struct irq_affinity_notify *affinity_notify ;
   cpumask_var_t pending_mask ;
   unsigned long threads_oneshot ;
   atomic_t threads_active ;
   wait_queue_head_t wait_for_threads ;
   unsigned int nr_actions ;
   unsigned int no_suspend_depth ;
   unsigned int cond_suspend_depth ;
   unsigned int force_resume_depth ;
   struct proc_dir_entry *dir ;
   struct dentry *debugfs_file ;
   char *dev_name ;
   struct callback_head rcu ;
   struct kobject kobj ;
   struct mutex request_mutex ;
   int parent_irq ;
   struct module *owner ;
   char *name ;
} __attribute__((__aligned__(4096)));
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_chip_regs {
   unsigned long enable ;
   unsigned long disable ;
   unsigned long mask ;
   unsigned long ack ;
   unsigned long eoi ;
   unsigned long type ;
   unsigned long polarity ;
};
#line 953  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_chip_type {
   struct irq_chip chip ;
   struct irq_chip_regs regs ;
   void (*handler)(struct irq_desc *) ;
   u32 type ;
   u32 mask_cache_priv ;
   u32 *mask_cache ;
};
#line 995  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_chip_generic {
   raw_spinlock_t lock ;
   void *reg_base ;
   u32 (*reg_readl)(void *) ;
   void (*reg_writel)(u32 , void *) ;
   void (*suspend)(struct irq_chip_generic *) ;
   void (*resume)(struct irq_chip_generic *) ;
   unsigned int irq_base ;
   unsigned int irq_cnt ;
   u32 mask_cache ;
   u32 type_cache ;
   u32 polarity_cache ;
   u32 wake_enabled ;
   u32 wake_active ;
   unsigned int num_ct ;
   void *private ;
   unsigned long installed ;
   unsigned long unused ;
   struct irq_domain *domain ;
   struct list_head list ;
   struct irq_chip_type chip_types[0U] ;
};
#line 1017 
enum irq_gc_flags {
    IRQ_GC_INIT_MASK_CACHE = 1,
    IRQ_GC_INIT_NESTED_LOCK = 2,
    IRQ_GC_MASK_CACHE_PER_TYPE = 4,
    IRQ_GC_NO_MASK = 8,
    IRQ_GC_BE_IO = 16
};
#line 1045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irq.h"
struct irq_domain_chip_generic {
   unsigned int irqs_per_chip ;
   unsigned int num_chips ;
   unsigned int irq_flags_to_clear ;
   unsigned int irq_flags_to_set ;
   enum irq_gc_flags gc_flags ;
   struct irq_chip_generic *gc[0U] ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_fwspec {
   struct fwnode_handle *fwnode ;
   int param_count ;
   u32 param[16U] ;
};
#line 68 
enum irq_domain_bus_token {
    DOMAIN_BUS_ANY = 0,
    DOMAIN_BUS_WIRED = 1,
    DOMAIN_BUS_GENERIC_MSI = 2,
    DOMAIN_BUS_PCI_MSI = 3,
    DOMAIN_BUS_PLATFORM_MSI = 4,
    DOMAIN_BUS_NEXUS = 5,
    DOMAIN_BUS_IPI = 6,
    DOMAIN_BUS_FSL_MC_MSI = 7,
    DOMAIN_BUS_TI_SCI_INTA_MSI = 8,
    DOMAIN_BUS_WAKEUP = 9
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain_ops {
   int (*match)(struct irq_domain *, struct device_node *, enum irq_domain_bus_token ) ;
   int (*select)(struct irq_domain *, struct irq_fwspec *, enum irq_domain_bus_token ) ;
   int (*map)(struct irq_domain *, unsigned int , irq_hw_number_t ) ;
   void (*unmap)(struct irq_domain *, unsigned int ) ;
   int (*xlate)(struct irq_domain *, struct device_node *, u32 *, unsigned int , unsigned long *, unsigned int *) ;
   int (*alloc)(struct irq_domain *, unsigned int , unsigned int , void *) ;
   void (*free)(struct irq_domain *, unsigned int , unsigned int ) ;
   int (*activate)(struct irq_domain *, struct irq_data *, bool ) ;
   void (*deactivate)(struct irq_domain *, struct irq_data *) ;
   int (*translate)(struct irq_domain *, struct irq_fwspec *, unsigned long *, unsigned int *) ;
   void (*debug_show)(struct seq_file *, struct irq_domain *, struct irq_data *, int ) ;
};
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqdomain.h"
struct irq_domain {
   struct list_head link ;
   char *name ;
   struct irq_domain_ops *ops ;
   void *host_data ;
   unsigned int flags ;
   unsigned int mapcount ;
   struct fwnode_handle *fwnode ;
   enum irq_domain_bus_token bus_token ;
   struct irq_domain_chip_generic *gc ;
   struct irq_domain *parent ;
   struct dentry *debugfs_file ;
   irq_hw_number_t hwirq_max ;
   unsigned int revmap_direct_max_irq ;
   unsigned int revmap_size ;
   struct xarray revmap_tree ;
   struct mutex revmap_tree_mutex ;
   unsigned int linear_revmap[] ;
};
#line 532 
struct pinctrl;
#line 533 
struct pinctrl_state;
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pinctrl/devinfo.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *init_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 47 
struct gpio_chip;
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pinctrl/pinconf-generic.h"
struct gpio_device;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gpio/driver.h"
struct gpio_irq_chip {
   struct irq_chip *chip ;
   struct irq_domain *domain ;
   struct irq_domain_ops *domain_ops ;
   struct fwnode_handle *fwnode ;
   struct irq_domain *parent_domain ;
   int (*child_to_parent_hwirq)(struct gpio_chip *, unsigned int , unsigned int , unsigned int *, unsigned int *) ;
   void (*populate_parent_fwspec)(struct gpio_chip *, struct irq_fwspec *, unsigned int , unsigned int ) ;
   unsigned int (*child_offset_to_irq)(struct gpio_chip *, unsigned int ) ;
   struct irq_domain_ops child_irq_domain_ops ;
   void (*handler)(struct irq_desc *) ;
   unsigned int default_type ;
   struct lock_class_key *lock_key ;
   struct lock_class_key *request_key ;
   void (*parent_handler)(struct irq_desc *) ;
   void *parent_handler_data ;
   unsigned int num_parents ;
   unsigned int *parents ;
   unsigned int *map ;
   bool threaded ;
   int (*init_hw)(struct gpio_chip *) ;
   void (*init_valid_mask)(struct gpio_chip *, unsigned long *, unsigned int ) ;
   unsigned long *valid_mask ;
   unsigned int first ;
   void (*irq_enable)(struct irq_data *) ;
   void (*irq_disable)(struct irq_data *) ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gpio/driver.h"
struct gpio_chip {
   char *label ;
   struct gpio_device *gpiodev ;
   struct device *parent ;
   struct module *owner ;
   int (*request)(struct gpio_chip *, unsigned int ) ;
   void (*free)(struct gpio_chip *, unsigned int ) ;
   int (*get_direction)(struct gpio_chip *, unsigned int ) ;
   int (*direction_input)(struct gpio_chip *, unsigned int ) ;
   int (*direction_output)(struct gpio_chip *, unsigned int , int ) ;
   int (*get)(struct gpio_chip *, unsigned int ) ;
   int (*get_multiple)(struct gpio_chip *, unsigned long *, unsigned long *) ;
   void (*set)(struct gpio_chip *, unsigned int , int ) ;
   void (*set_multiple)(struct gpio_chip *, unsigned long *, unsigned long *) ;
   int (*set_config)(struct gpio_chip *, unsigned int , unsigned long ) ;
   int (*to_irq)(struct gpio_chip *, unsigned int ) ;
   void (*dbg_show)(struct seq_file *, struct gpio_chip *) ;
   int (*init_valid_mask)(struct gpio_chip *, unsigned long *, unsigned int ) ;
   int (*add_pin_ranges)(struct gpio_chip *) ;
   int base ;
   u16 ngpio ;
   char **names ;
   bool can_sleep ;
   unsigned long (*read_reg)(void *) ;
   void (*write_reg)(void *, unsigned long ) ;
   bool be_bits ;
   void *reg_dat ;
   void *reg_set ;
   void *reg_clr ;
   void *reg_dir_out ;
   void *reg_dir_in ;
   bool bgpio_dir_unreadable ;
   int bgpio_bits ;
   spinlock_t bgpio_lock ;
   unsigned long bgpio_data ;
   unsigned long bgpio_dir ;
   struct gpio_irq_chip irq ;
   unsigned long *valid_mask ;
   struct device_node *of_node ;
   unsigned int of_gpio_n_cells ;
   int (*of_xlate)(struct gpio_chip *, struct of_phandle_args *, u32 *) ;
};
#line 362  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/platform_device.h"
struct pcmcia_device;
#line 363 
struct ssb_bus;
#line 364 
struct ssb_driver;
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_sprom_core_pwr_info {
   u8 itssi_2g ;
   u8 itssi_5g ;
   u8 maxpwr_2g ;
   u8 maxpwr_5gl ;
   u8 maxpwr_5g ;
   u8 maxpwr_5gh ;
   u16 pa_2g[4U] ;
   u16 pa_5gl[4U] ;
   u16 pa_5g[4U] ;
   u16 pa_5gh[4U] ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct __anonstruct_antenna_gain_726 {
   s8 a0 ;
   s8 a1 ;
   s8 a2 ;
   s8 a3 ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct __anonstruct_ghz2_728 {
   u8 tssipos ;
   u8 extpa_gain ;
   u8 pdet_range ;
   u8 tr_iso ;
   u8 antswlut ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct __anonstruct_ghz5_729 {
   u8 tssipos ;
   u8 extpa_gain ;
   u8 pdet_range ;
   u8 tr_iso ;
   u8 antswlut ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct __anonstruct_fem_727 {
   struct __anonstruct_ghz2_728 ghz2 ;
   struct __anonstruct_ghz5_729 ghz5 ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_sprom {
   u8 revision ;
   u8 il0mac[6U] ;
   u8 et0mac[6U] ;
   u8 et1mac[6U] ;
   u8 et2mac[6U] ;
   u8 et0phyaddr ;
   u8 et1phyaddr ;
   u8 et2phyaddr ;
   u8 et0mdcport ;
   u8 et1mdcport ;
   u8 et2mdcport ;
   u16 dev_id ;
   u16 board_rev ;
   u16 board_num ;
   u16 board_type ;
   u8 country_code ;
   char alpha2[2U] ;
   u8 leddc_on_time ;
   u8 leddc_off_time ;
   u8 ant_available_a ;
   u8 ant_available_bg ;
   u16 pa0b0 ;
   u16 pa0b1 ;
   u16 pa0b2 ;
   u16 pa1b0 ;
   u16 pa1b1 ;
   u16 pa1b2 ;
   u16 pa1lob0 ;
   u16 pa1lob1 ;
   u16 pa1lob2 ;
   u16 pa1hib0 ;
   u16 pa1hib1 ;
   u16 pa1hib2 ;
   u8 gpio0 ;
   u8 gpio1 ;
   u8 gpio2 ;
   u8 gpio3 ;
   u8 maxpwr_bg ;
   u8 maxpwr_al ;
   u8 maxpwr_a ;
   u8 maxpwr_ah ;
   u8 itssi_a ;
   u8 itssi_bg ;
   u8 tri2g ;
   u8 tri5gl ;
   u8 tri5g ;
   u8 tri5gh ;
   u8 txpid2g[4U] ;
   u8 txpid5gl[4U] ;
   u8 txpid5g[4U] ;
   u8 txpid5gh[4U] ;
   s8 rxpo2g ;
   s8 rxpo5g ;
   u8 rssisav2g ;
   u8 rssismc2g ;
   u8 rssismf2g ;
   u8 bxa2g ;
   u8 rssisav5g ;
   u8 rssismc5g ;
   u8 rssismf5g ;
   u8 bxa5g ;
   u16 cck2gpo ;
   u32 ofdm2gpo ;
   u32 ofdm5glpo ;
   u32 ofdm5gpo ;
   u32 ofdm5ghpo ;
   u32 boardflags ;
   u32 boardflags2 ;
   u32 boardflags3 ;
   u16 boardflags_lo ;
   u16 boardflags_hi ;
   u16 boardflags2_lo ;
   u16 boardflags2_hi ;
   struct ssb_sprom_core_pwr_info core_pwr_info[4U] ;
   struct __anonstruct_antenna_gain_726 antenna_gain ;
   struct __anonstruct_fem_727 fem ;
   u16 mcs2gpo[8U] ;
   u16 mcs5gpo[8U] ;
   u16 mcs5glpo[8U] ;
   u16 mcs5ghpo[8U] ;
   u8 opo ;
   u8 rxgainerr2ga[3U] ;
   u8 rxgainerr5gla[3U] ;
   u8 rxgainerr5gma[3U] ;
   u8 rxgainerr5gha[3U] ;
   u8 rxgainerr5gua[3U] ;
   u8 noiselvl2ga[3U] ;
   u8 noiselvl5gla[3U] ;
   u8 noiselvl5gma[3U] ;
   u8 noiselvl5gha[3U] ;
   u8 noiselvl5gua[3U] ;
   u8 regrev ;
   u8 txchain ;
   u8 rxchain ;
   u8 antswitch ;
   u16 cddpo ;
   u16 stbcpo ;
   u16 bw40po ;
   u16 bwduppo ;
   u8 tempthresh ;
   u8 tempoffset ;
   u16 rawtempsense ;
   u8 measpower ;
   u8 tempsense_slope ;
   u8 tempcorrx ;
   u8 tempsense_option ;
   u8 freqoffset_corr ;
   u8 iqcal_swp_dis ;
   u8 hw_iqcal_en ;
   u8 elna2g ;
   u8 elna5g ;
   u8 phycal_tempdelta ;
   u8 temps_period ;
   u8 temps_hysteresis ;
   u8 measpower1 ;
   u8 measpower2 ;
   u8 pcieingress_war ;
   u16 cckbw202gpo ;
   u16 cckbw20ul2gpo ;
   u32 legofdmbw202gpo ;
   u32 legofdmbw20ul2gpo ;
   u32 legofdmbw205glpo ;
   u32 legofdmbw20ul5glpo ;
   u32 legofdmbw205gmpo ;
   u32 legofdmbw20ul5gmpo ;
   u32 legofdmbw205ghpo ;
   u32 legofdmbw20ul5ghpo ;
   u32 mcsbw202gpo ;
   u32 mcsbw20ul2gpo ;
   u32 mcsbw402gpo ;
   u32 mcsbw205glpo ;
   u32 mcsbw20ul5glpo ;
   u32 mcsbw405glpo ;
   u32 mcsbw205gmpo ;
   u32 mcsbw20ul5gmpo ;
   u32 mcsbw405gmpo ;
   u32 mcsbw205ghpo ;
   u32 mcsbw20ul5ghpo ;
   u32 mcsbw405ghpo ;
   u16 mcs32po ;
   u16 legofdm40duppo ;
   u8 sar2g ;
   u8 sar5g ;
};
#line 198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_boardinfo {
   u16 vendor ;
   u16 type ;
};
#line 202 
struct ssb_device;
#line 207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_bus_ops {
   u8 (*read8)(struct ssb_device *, u16 ) ;
   u16 (*read16)(struct ssb_device *, u16 ) ;
   u32 (*read32)(struct ssb_device *, u16 ) ;
   void (*write8)(struct ssb_device *, u16 , u8 ) ;
   void (*write16)(struct ssb_device *, u16 , u16 ) ;
   void (*write32)(struct ssb_device *, u16 , u32 ) ;
   void (*block_read)(struct ssb_device *, void *, size_t , u16 , u8 ) ;
   void (*block_write)(struct ssb_device *, void *, size_t , u16 , u8 ) ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_device {
   struct ssb_bus_ops *ops ;
   struct device *dev ;
   struct device *dma_dev ;
   struct ssb_bus *bus ;
   struct ssb_device_id id ;
   u8 core_index ;
   unsigned int irq ;
   void *drvdata ;
   void *devtypedata ;
};
#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_driver {
   char *name ;
   struct ssb_device_id *id_table ;
   int (*probe)(struct ssb_device *, struct ssb_device_id *) ;
   void (*remove)(struct ssb_device *) ;
   int (*suspend)(struct ssb_device *, pm_message_t ) ;
   int (*resume)(struct ssb_device *) ;
   void (*shutdown)(struct ssb_device *) ;
   struct device_driver drv ;
};
#line 335 
enum ssb_bustype {
    SSB_BUSTYPE_SSB = 0,
    SSB_BUSTYPE_PCI = 1,
    SSB_BUSTYPE_PCMCIA = 2,
    SSB_BUSTYPE_SDIO = 3
};
#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb_driver_chipcommon.h"
struct ssb_chipcommon_pmu {
   u8 rev ;
   u32 crystalfreq ;
};
#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb_driver_chipcommon.h"
struct ssb_chipcommon {
   struct ssb_device *dev ;
   u32 capabilities ;
   u32 status ;
   u16 fast_pwrup_delay ;
   spinlock_t gpio_lock ;
   struct ssb_chipcommon_pmu pmu ;
   u32 ticks_per_ms ;
   u32 max_timer_ms ;
};
#line 671  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb_driver_chipcommon.h"
struct ssb_mipscore {
   };
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb_driver_mips.h"
struct ssb_extif {
   };
#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb_driver_pci.h"
struct ssb_pcicore {
   struct ssb_device *dev ;
   u8 setup_done : 1 ;
   u8 hostmode : 1 ;
   u8 cardbusmode : 1 ;
};
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
union __anonunion_730 {
   u8 mapped_pcmcia_seg ;
   u32 sdio_sbaddr ;
};
#line 416 
struct sdio_func;
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
union __anonunion_731 {
   struct pci_dev *host_pci ;
   struct pcmcia_device *host_pcmcia ;
   struct sdio_func *host_sdio ;
};
#line 416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct ssb_bus {
   void *mmio ;
   struct ssb_bus_ops *ops ;
   struct ssb_device *mapped_device ;
   union __anonunion_730 __anonCompField_ssb_bus_172 ;
   spinlock_t bar_lock ;
   enum ssb_bustype bustype ;
   union __anonunion_731 __anonCompField_ssb_bus_173 ;
   unsigned int quirks ;
   struct mutex sprom_mutex ;
   u16 chip_id ;
   u8 chip_rev ;
   u16 sprom_offset ;
   u16 sprom_size ;
   u8 chip_package ;
   struct ssb_device devices[16U] ;
   u8 nr_devices ;
   unsigned int busnumber ;
   struct ssb_chipcommon chipco ;
   struct ssb_pcicore pcicore ;
   struct ssb_mipscore mipscore ;
   struct ssb_extif extif ;
   struct ssb_boardinfo boardinfo ;
   struct ssb_sprom sprom ;
   bool has_cardbus_slot ;
   struct gpio_chip gpio ;
   struct irq_domain *irq_domain ;
   struct list_head list ;
   bool powered_up ;
   int power_warn_count ;
};
#line 233  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_hdr {
   __le16 frame_control ;
   __le16 duration_id ;
   u8 addr1[6U] ;
   u8 addr2[6U] ;
   u8 addr3[6U] ;
   __le16 seq_ctrl ;
   u8 addr4[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 706  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_msrment_ie {
   u8 token ;
   u8 mode ;
   u8 type ;
   u8 request[0U] ;
} __attribute__((__packed__));
#line 729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ext_chansw_ie {
   u8 mode ;
   u8 new_operating_class ;
   u8 new_ch_num ;
   u8 count ;
} __attribute__((__packed__));
#line 879  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_tpc_report_ie {
   u8 tx_power ;
   u8 link_margin ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_auth_733 {
   __le16 auth_alg ;
   __le16 auth_transaction ;
   __le16 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_deauth_734 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_req_735 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_assoc_resp_736 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_resp_737 {
   __le16 capab_info ;
   __le16 status_code ;
   __le16 aid ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_reassoc_req_738 {
   __le16 capab_info ;
   __le16 listen_interval ;
   u8 current_ap[6U] ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_disassoc_739 {
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_beacon_740 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_req_741 {
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_probe_resp_742 {
   __le64 timestamp ;
   __le16 beacon_int ;
   __le16 capab_info ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_wme_action_745 {
   u8 action_code ;
   u8 dialog_token ;
   u8 status_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_chan_switch_746 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ext_chan_switch_747 {
   u8 action_code ;
   struct ieee80211_ext_chansw_ie data ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_measurement_748 {
   u8 action_code ;
   u8 dialog_token ;
   u8 element_id ;
   u8 length ;
   struct ieee80211_msrment_ie msr_elem ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_req_749 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capab ;
   __le16 timeout ;
   __le16 start_seq_num ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_addba_resp_750 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 status ;
   __le16 capab ;
   __le16 timeout ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_delba_751 {
   u8 action_code ;
   __le16 params ;
   __le16 reason_code ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_self_prot_752 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_mesh_action_753 {
   u8 action_code ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_sa_query_754 {
   u8 action ;
   u8 trans_id[2U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_smps_755 {
   u8 action ;
   u8 smps_control ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ht_notify_cw_756 {
   u8 action_code ;
   u8 chanwidth ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tdls_discover_resp_757 {
   u8 action_code ;
   u8 dialog_token ;
   __le16 capability ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_opmode_notif_758 {
   u8 action_code ;
   u8 operating_mode ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_vht_group_notif_759 {
   u8 action_code ;
   u8 membership[8U] ;
   u8 position[16U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_tpc_report_760 {
   u8 action_code ;
   u8 dialog_token ;
   u8 tpc_elem_id ;
   u8 tpc_elem_length ;
   struct ieee80211_tpc_report_ie tpc ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_ftm_761 {
   u8 action_code ;
   u8 dialog_token ;
   u8 follow_up ;
   u8 tod[6U] ;
   u8 toa[6U] ;
   __le16 tod_error ;
   __le16 toa_error ;
   u8 variable[0U] ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_744 {
   struct __anonstruct_wme_action_745 wme_action ;
   struct __anonstruct_chan_switch_746 chan_switch ;
   struct __anonstruct_ext_chan_switch_747 ext_chan_switch ;
   struct __anonstruct_measurement_748 measurement ;
   struct __anonstruct_addba_req_749 addba_req ;
   struct __anonstruct_addba_resp_750 addba_resp ;
   struct __anonstruct_delba_751 delba ;
   struct __anonstruct_self_prot_752 self_prot ;
   struct __anonstruct_mesh_action_753 mesh_action ;
   struct __anonstruct_sa_query_754 sa_query ;
   struct __anonstruct_ht_smps_755 ht_smps ;
   struct __anonstruct_ht_notify_cw_756 ht_notify_cw ;
   struct __anonstruct_tdls_discover_resp_757 tdls_discover_resp ;
   struct __anonstruct_vht_opmode_notif_758 vht_opmode_notif ;
   struct __anonstruct_vht_group_notif_759 vht_group_notif ;
   struct __anonstruct_tpc_report_760 tpc_report ;
   struct __anonstruct_ftm_761 ftm ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct __anonstruct_action_743 {
   u8 category ;
   union __anonunion_u_744 u ;
} __attribute__((__packed__));
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
union __anonunion_u_732 {
   struct __anonstruct_auth_733 auth ;
   struct __anonstruct_deauth_734 deauth ;
   struct __anonstruct_assoc_req_735 assoc_req ;
   struct __anonstruct_assoc_resp_736 assoc_resp ;
   struct __anonstruct_reassoc_resp_737 reassoc_resp ;
   struct __anonstruct_reassoc_req_738 reassoc_req ;
   struct __anonstruct_disassoc_739 disassoc ;
   struct __anonstruct_beacon_740 beacon ;
   struct __anonstruct_probe_req_741 probe_req ;
   struct __anonstruct_probe_resp_742 probe_resp ;
   struct __anonstruct_action_743 action ;
};
#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mgmt {
   __le16 frame_control ;
   __le16 duration ;
   u8 da[6U] ;
   u8 sa[6U] ;
   u8 bssid[6U] ;
   __le16 seq_ctrl ;
   union __anonunion_u_732 u ;
} __attribute__((__packed__, __aligned__(2)));
#line 1227  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_desc {
   u8 count ;
   __le32 duration ;
   __le32 interval ;
   __le32 start_time ;
} __attribute__((__packed__));
#line 1234  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_p2p_noa_attr {
   u8 index ;
   u8 oppps_ctwindow ;
   struct ieee80211_p2p_noa_desc desc[4U] ;
} __attribute__((__packed__));
#line 1276  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
} __attribute__((__packed__));
#line 1310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
} __attribute__((__packed__));
#line 1483  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
} __attribute__((__packed__));
#line 1526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
} __attribute__((__packed__));
#line 1569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_cap_elem {
   u8 mac_cap_info[6U] ;
   u8 phy_cap_info[11U] ;
} __attribute__((__packed__));
#line 1616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mcs_nss_supp {
   __le16 rx_mcs_80 ;
   __le16 tx_mcs_80 ;
   __le16 rx_mcs_160 ;
   __le16 tx_mcs_160 ;
   __le16 rx_mcs_80p80 ;
   __le16 tx_mcs_80p80 ;
} __attribute__((__packed__));
#line 1631  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_operation {
   __le32 he_oper_params ;
   __le16 he_mcs_nss_set ;
   u8 optional[0U] ;
} __attribute__((__packed__));
#line 1656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_he_mu_edca_param_ac_rec {
   u8 aifsn ;
   u8 ecw_min_max ;
   u8 mu_edca_timer ;
} __attribute__((__packed__));
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NL80211_IFTYPE_NAN = 12,
    NUM_NL80211_IFTYPES = 13,
    NL80211_IFTYPE_MAX = 12
};
#line 3039  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_sta_flag_update {
   __u32 mask ;
   __u32 set ;
} __attribute__((__packed__));
#line 3263 
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};
#line 3320 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};
#line 3327 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};
#line 3362 
enum nl80211_mesh_power_mode {
    NL80211_MESH_POWER_UNKNOWN = 0,
    NL80211_MESH_POWER_ACTIVE = 1,
    NL80211_MESH_POWER_LIGHT_SLEEP = 2,
    NL80211_MESH_POWER_DEEP_SLEEP = 3,
    __NL80211_MESH_POWER_AFTER_LAST = 4,
    NL80211_MESH_POWER_MAX = 3
};
#line 3446 
enum nl80211_key_mode {
    NL80211_KEY_RX_TX = 0,
    NL80211_KEY_NO_TX = 1,
    NL80211_KEY_SET_TX = 2
};
#line 3452 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};
#line 3463 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};
#line 3500 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    NL80211_AUTHTYPE_FILS_SK = 5,
    NL80211_AUTHTYPE_FILS_SK_PFS = 6,
    NL80211_AUTHTYPE_FILS_PK = 7,
    __NL80211_AUTHTYPE_NUM = 8,
    NL80211_AUTHTYPE_MAX = 7,
    NL80211_AUTHTYPE_AUTOMATIC = 8
};
#line 3521 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1,
    NL80211_MFP_OPTIONAL = 2
};
#line 4593 
enum nl80211_txrate_gi {
    NL80211_TXRATE_DEFAULT_GI = 0,
    NL80211_TXRATE_FORCE_SGI = 1,
    NL80211_TXRATE_FORCE_LGI = 2
};
#line 4599 
enum nl80211_band {
    NL80211_BAND_2GHZ = 0,
    NL80211_BAND_5GHZ = 1,
    NL80211_BAND_60GHZ = 2,
    NL80211_BAND_6GHZ = 3,
    NUM_NL80211_BANDS = 4
};
#line 4633 
enum nl80211_tx_power_setting {
    NL80211_TX_POWER_AUTOMATIC = 0,
    NL80211_TX_POWER_LIMITED = 1,
    NL80211_TX_POWER_FIXED = 2
};
#line 4914  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};
#line 4925  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};
#line 4936  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};
#line 5133 
enum nl80211_ext_feature_index {
    NL80211_EXT_FEATURE_VHT_IBSS = 0,
    NL80211_EXT_FEATURE_RRM = 1,
    NL80211_EXT_FEATURE_MU_MIMO_AIR_SNIFFER = 2,
    NL80211_EXT_FEATURE_SCAN_START_TIME = 3,
    NL80211_EXT_FEATURE_BSS_PARENT_TSF = 4,
    NL80211_EXT_FEATURE_SET_SCAN_DWELL = 5,
    NL80211_EXT_FEATURE_BEACON_RATE_LEGACY = 6,
    NL80211_EXT_FEATURE_BEACON_RATE_HT = 7,
    NL80211_EXT_FEATURE_BEACON_RATE_VHT = 8,
    NL80211_EXT_FEATURE_FILS_STA = 9,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA = 10,
    NL80211_EXT_FEATURE_MGMT_TX_RANDOM_TA_CONNECTED = 11,
    NL80211_EXT_FEATURE_SCHED_SCAN_RELATIVE_RSSI = 12,
    NL80211_EXT_FEATURE_CQM_RSSI_LIST = 13,
    NL80211_EXT_FEATURE_FILS_SK_OFFLOAD = 14,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_PSK = 15,
    NL80211_EXT_FEATURE_4WAY_HANDSHAKE_STA_1X = 16,
    NL80211_EXT_FEATURE_FILS_MAX_CHANNEL_TIME = 17,
    NL80211_EXT_FEATURE_ACCEPT_BCAST_PROBE_RESP = 18,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_HIGH_TX_RATE = 19,
    NL80211_EXT_FEATURE_OCE_PROBE_REQ_DEFERRAL_SUPPRESSION = 20,
    NL80211_EXT_FEATURE_MFP_OPTIONAL = 21,
    NL80211_EXT_FEATURE_LOW_SPAN_SCAN = 22,
    NL80211_EXT_FEATURE_LOW_POWER_SCAN = 23,
    NL80211_EXT_FEATURE_HIGH_ACCURACY_SCAN = 24,
    NL80211_EXT_FEATURE_DFS_OFFLOAD = 25,
    NL80211_EXT_FEATURE_CONTROL_PORT_OVER_NL80211 = 26,
    NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_DATA_ACK_SIGNAL_SUPPORT = 27,
    NL80211_EXT_FEATURE_TXQS = 28,
    NL80211_EXT_FEATURE_SCAN_RANDOM_SN = 29,
    NL80211_EXT_FEATURE_SCAN_MIN_PREQ_CONTENT = 30,
    NL80211_EXT_FEATURE_CAN_REPLACE_PTK0 = 31,
    NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER = 32,
    NL80211_EXT_FEATURE_AIRTIME_FAIRNESS = 33,
    NL80211_EXT_FEATURE_AP_PMKSA_CACHING = 34,
    NL80211_EXT_FEATURE_SCHED_SCAN_BAND_SPECIFIC_RSSI_THOLD = 35,
    NL80211_EXT_FEATURE_EXT_KEY_ID = 36,
    NL80211_EXT_FEATURE_STA_TX_PWR = 37,
    NL80211_EXT_FEATURE_SAE_OFFLOAD = 38,
    NL80211_EXT_FEATURE_VLAN_OFFLOAD = 39,
    NL80211_EXT_FEATURE_AQL = 40,
    NUM_NL80211_EXT_FEATURES = 41,
    MAX_NL80211_EXT_FEATURES = 40
};
#line 5237 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};
#line 5847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};
#line 5903 
enum nl80211_bss_select_attr {
    __NL80211_BSS_SELECT_ATTR_INVALID = 0,
    NL80211_BSS_SELECT_ATTR_RSSI = 1,
    NL80211_BSS_SELECT_ATTR_BAND_PREF = 2,
    NL80211_BSS_SELECT_ATTR_RSSI_ADJUST = 3,
    __NL80211_BSS_SELECT_ATTR_AFTER_LAST = 4,
    NL80211_BSS_SELECT_ATTR_MAX = 3
};
#line 5912 
enum nl80211_nan_function_type {
    NL80211_NAN_FUNC_PUBLISH = 0,
    NL80211_NAN_FUNC_SUBSCRIBE = 1,
    NL80211_NAN_FUNC_FOLLOW_UP = 2,
    __NL80211_NAN_FUNC_TYPE_AFTER_LAST = 3,
    NL80211_NAN_FUNC_MAX_TYPE = 2
};
#line 6001 
enum nl80211_preamble {
    NL80211_PREAMBLE_LEGACY = 0,
    NL80211_PREAMBLE_HT = 1,
    NL80211_PREAMBLE_VHT = 2,
    NL80211_PREAMBLE_DMG = 3
};
#line 6138 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};
#line 181  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};
#line 205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_ac {
   u16 cw_min ;
   u16 cw_max ;
   u16 cot ;
   u8 aifsn ;
};
#line 212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_wmm_rule {
   struct ieee80211_wmm_ac client[4U] ;
   struct ieee80211_wmm_ac ap[4U] ;
};
#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   struct ieee80211_wmm_rule wmm_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
   bool has_wmm ;
};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};
#line 233 
struct wiphy;
#line 147  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_channel {
   enum nl80211_band band ;
   u32 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};
#line 172 
enum ieee80211_bss_type {
    IEEE80211_BSS_TYPE_ESS = 0,
    IEEE80211_BSS_TYPE_PBSS = 1,
    IEEE80211_BSS_TYPE_IBSS = 2,
    IEEE80211_BSS_TYPE_MBSS = 3,
    IEEE80211_BSS_TYPE_ANY = 4
};
#line 243  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_he_obss_pd {
   bool enable ;
   u8 min_offset ;
   u8 max_offset ;
};
#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};
#line 292  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};
#line 311  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sta_he_cap {
   bool has_he ;
   struct ieee80211_he_cap_elem he_cap_elem ;
   struct ieee80211_he_mcs_nss_supp he_mcs_nss_supp ;
   u8 ppe_thres[25U] ;
};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_sband_iftype_data {
   u16 types_mask ;
   struct ieee80211_sta_he_cap he_cap ;
};
#line 332 
enum ieee80211_edmg_bw_config {
    IEEE80211_EDMG_BW_CONFIG_4 = 4,
    IEEE80211_EDMG_BW_CONFIG_5 = 5,
    IEEE80211_EDMG_BW_CONFIG_6 = 6,
    IEEE80211_EDMG_BW_CONFIG_7 = 7,
    IEEE80211_EDMG_BW_CONFIG_8 = 8,
    IEEE80211_EDMG_BW_CONFIG_9 = 9,
    IEEE80211_EDMG_BW_CONFIG_10 = 10,
    IEEE80211_EDMG_BW_CONFIG_11 = 11,
    IEEE80211_EDMG_BW_CONFIG_12 = 12,
    IEEE80211_EDMG_BW_CONFIG_13 = 13,
    IEEE80211_EDMG_BW_CONFIG_14 = 14,
    IEEE80211_EDMG_BW_CONFIG_15 = 15
};
#line 382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_edmg {
   u8 channels ;
   enum ieee80211_edmg_bw_config bw_config ;
};
#line 410  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum nl80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_edmg edmg_cap ;
   u16 n_iftype_data ;
   struct ieee80211_sband_iftype_data *iftype_data ;
};
#line 571  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct key_params {
   u8 *key ;
   u8 *seq ;
   int key_len ;
   int seq_len ;
   u16 vlan_id ;
   u32 cipher ;
   enum nl80211_key_mode mode ;
};
#line 593  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
   struct ieee80211_edmg edmg ;
};
#line 811  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct survey_info {
   struct ieee80211_channel *channel ;
   u64 time ;
   u64 time_busy ;
   u64 time_ext_busy ;
   u64 time_rx ;
   u64 time_tx ;
   u64 time_scan ;
   u64 time_bss_rx ;
   u32 filled ;
   s8 noise ;
};
#line 853  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
   bool control_port_over_nl80211 ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
   u8 *psk ;
   u8 *sae_pwd ;
   u8 sae_pwd_len ;
};
#line 917  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_control_773 {
   u32 legacy ;
   u8 ht_mcs[10U] ;
   u16 vht_mcs[8U] ;
   enum nl80211_txrate_gi gi ;
};
#line 940  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bitrate_mask {
   struct __anonstruct_control_773 control[4U] ;
};
#line 1314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct rate_info {
   u8 flags ;
   u8 mcs ;
   u16 legacy ;
   u8 nss ;
   u8 bw ;
   u8 he_gi ;
   u8 he_dcm ;
   u8 he_ru_alloc ;
   u8 n_bonded_ch ;
};
#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct sta_bss_parameters {
   u8 flags ;
   u8 dtim_period ;
   u16 beacon_interval ;
};
#line 1373  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_txq_stats {
   u32 filled ;
   u32 backlog_bytes ;
   u32 backlog_packets ;
   u32 flows ;
   u32 drops ;
   u32 ecn_marks ;
   u32 overlimit ;
   u32 overmemory ;
   u32 collisions ;
   u32 tx_bytes ;
   u32 tx_packets ;
   u32 max_flows ;
};
#line 1399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_tid_stats {
   u32 filled ;
   u64 rx_msdu ;
   u64 tx_msdu ;
   u64 tx_msdu_retries ;
   u64 tx_msdu_failed ;
   struct cfg80211_txq_stats txq_stats ;
};
#line 1476  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct station_info {
   u64 filled ;
   u32 connected_time ;
   u32 inactive_time ;
   u64 assoc_at ;
   u64 rx_bytes ;
   u64 tx_bytes ;
   u16 llid ;
   u16 plid ;
   u8 plink_state ;
   s8 signal ;
   s8 signal_avg ;
   u8 chains ;
   s8 chain_signal[4U] ;
   s8 chain_signal_avg[4U] ;
   struct rate_info txrate ;
   struct rate_info rxrate ;
   u32 rx_packets ;
   u32 tx_packets ;
   u32 tx_retries ;
   u32 tx_failed ;
   u32 rx_dropped_misc ;
   struct sta_bss_parameters bss_param ;
   struct nl80211_sta_flag_update sta_flags ;
   int generation ;
   u8 *assoc_req_ies ;
   size_t assoc_req_ies_len ;
   u32 beacon_loss_count ;
   s64 t_offset ;
   enum nl80211_mesh_power_mode local_pm ;
   enum nl80211_mesh_power_mode peer_pm ;
   enum nl80211_mesh_power_mode nonpeer_pm ;
   u32 expected_throughput ;
   u64 tx_duration ;
   u64 rx_duration ;
   u64 rx_beacon ;
   u8 rx_beacon_signal_avg ;
   u8 connected_to_gate ;
   struct cfg80211_tid_stats *pertid ;
   s8 ack_signal ;
   s8 avg_ack_signal ;
   u16 airtime_weight ;
   u32 rx_mpdu_count ;
   u32 fcs_err_count ;
   u32 airtime_link_metric ;
};
#line 1885  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};
#line 1899  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_info {
   u64 scan_start_tsf ;
   u8 tsf_bssid[6U] ;
   bool aborted ;
};
#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u16 duration ;
   bool duration_mandatory ;
   u32 flags ;
   u32 rates[4U] ;
   struct wireless_dev *wdev ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   u8 bssid[6U] ;
   struct wiphy *wiphy ;
   unsigned long scan_start ;
   struct cfg80211_scan_info info ;
   bool notified ;
   bool no_cck ;
   struct ieee80211_channel *channels[0U] ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   u8 bssid[6U] ;
   s32 rssi_thold ;
   s32 per_band_rssi_thold[4U] ;
};
#line 2007  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_plan {
   u32 interval ;
   u32 iterations ;
};
#line 2018  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_select_adjust {
   enum nl80211_band band ;
   s8 delta ;
};
#line 2073  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   u64 reqid ;
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u8 *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   struct cfg80211_sched_scan_plan *scan_plans ;
   int n_scan_plans ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   bool relative_rssi_set ;
   s8 relative_rssi ;
   struct cfg80211_bss_select_adjust rssi_adjust ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   bool report_results ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   struct list_head list ;
   struct ieee80211_channel *channels[0U] ;
};
#line 2109 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};
#line 2432  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 *ssid ;
   u8 *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool control_port_over_nl80211 ;
   bool userspace_handles_dfs ;
   int mcast_rate[4U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct key_params *wep_keys ;
   int wep_tx_key ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
union __anonunion_param_774 {
   enum nl80211_band band_pref ;
   struct cfg80211_bss_select_adjust adjust ;
};
#line 2460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_bss_selection {
   enum nl80211_bss_select_attr behaviour ;
   union __anonunion_param_774 param ;
};
#line 2531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 *bssid ;
   u8 *bssid_hint ;
   u8 *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
   bool pbss ;
   struct cfg80211_bss_selection bss_select ;
   u8 *prev_bssid ;
   u8 *fils_erp_username ;
   size_t fils_erp_username_len ;
   u8 *fils_erp_realm ;
   size_t fils_erp_realm_len ;
   u16 fils_erp_next_seq_num ;
   u8 *fils_erp_rrk ;
   size_t fils_erp_rrk_len ;
   bool want_1x ;
   struct ieee80211_edmg edmg ;
};
#line 2656  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 *mask ;
   u8 *pattern ;
   int pattern_len ;
   int pkt_offset ;
};
#line 2681  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 *wake_data ;
   u8 *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};
#line 2715  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};
#line 2821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_gtk_rekey_data {
   u8 *kek ;
   u8 *kck ;
   u8 *replay_ctr ;
};
#line 2921  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_conf {
   u8 master_pref ;
   u8 bands ;
};
#line 2944  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func_filter {
   u8 *filter ;
   u8 len ;
};
#line 2978  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_nan_func {
   enum nl80211_nan_function_type type ;
   u8 service_id[6U] ;
   u8 publish_type ;
   bool close_range ;
   bool publish_bcast ;
   bool subscribe_active ;
   u8 followup_id ;
   u8 followup_reqid ;
   struct mac_address followup_dest ;
   u32 ttl ;
   u8 *serv_spec_info ;
   u8 serv_spec_info_len ;
   bool srf_include ;
   u8 *srf_bf ;
   u8 srf_bf_len ;
   u8 srf_bf_idx ;
   struct mac_address *srf_macs ;
   int srf_num_macs ;
   struct cfg80211_nan_func_filter *rx_filters ;
   struct cfg80211_nan_func_filter *tx_filters ;
   u8 num_tx_filters ;
   u8 num_rx_filters ;
   u8 instance_id ;
   u64 cookie ;
};
#line 3072  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_ftm_responder_stats {
   u32 filled ;
   u32 success_num ;
   u32 partial_num ;
   u32 failed_num ;
   u32 asap_num ;
   u32 non_asap_num ;
   u64 total_duration_ms ;
   u32 unknown_triggers_num ;
   u32 reschedule_requests_num ;
   u32 out_of_window_triggers_num ;
};
#line 3210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_ftm_request_peer {
   enum nl80211_preamble preamble ;
   u16 burst_period ;
   u8 requested : 1 ;
   u8 asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
   u8 num_bursts_exp ;
   u8 burst_duration ;
   u8 ftms_per_burst ;
   u8 ftmr_retries ;
};
#line 3230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request_peer {
   u8 addr[6U] ;
   struct cfg80211_chan_def chandef ;
   u8 report_ap_tsf : 1 ;
   struct cfg80211_pmsr_ftm_request_peer ftm ;
};
#line 3253  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_request {
   u64 cookie ;
   void *drv_data ;
   u32 n_peers ;
   u32 nl_portid ;
   u32 timeout ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct list_head list ;
   struct cfg80211_pmsr_request_peer peers[] ;
};
#line 4043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};
#line 4107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
   u32 beacon_int_min_gcd ;
};
#line 4165  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};
#line 4198  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};
#line 4221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support *tcp ;
};
#line 4241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};
#line 4312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void *, int ) ;
   int (*dumpit)(struct wiphy *, struct wireless_dev *, struct sk_buff *, void *, int , unsigned long *) ;
   struct nla_policy *policy ;
   unsigned int maxattr ;
};
#line 4335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy_iftype_ext_capab {
   enum nl80211_iftype iftype ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_ftm_776 {
   u32 preambles ;
   u32 bandwidths ;
   s8 max_bursts_exponent ;
   u8 max_ftms_per_burst ;
   u8 supported : 1 ;
   u8 asap : 1 ;
   u8 non_asap : 1 ;
   u8 request_lci : 1 ;
   u8 request_civicloc : 1 ;
};
#line 4360  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct cfg80211_pmsr_capabilities {
   unsigned int max_peers ;
   u8 report_ap_tsf : 1 ;
   u8 randomize_mac_addr : 1 ;
   struct __anonstruct_ftm_776 ftm ;
};
#line 4552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes *mgmt_stypes ;
   struct ieee80211_iface_combination *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[6U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_reqs ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   u32 max_sched_scan_plans ;
   u32 max_sched_scan_plan_interval ;
   u32 max_sched_scan_plan_iterations ;
   int n_cipher_suites ;
   u32 *cipher_suites ;
   int n_akm_suites ;
   u32 *akm_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 *extended_capabilities ;
   u8 *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   struct wiphy_iftype_ext_capab *iftype_ext_capab ;
   unsigned int num_iftype_ext_capab ;
   void *privid ;
   struct ieee80211_supported_band *bands[4U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap *ht_capa_mod_mask ;
   struct ieee80211_vht_cap *vht_capa_mod_mask ;
   struct list_head wdev_list ;
   possible_net_t _net ;
   struct iw_handler_def *wext ;
   struct wiphy_coalesce_support *coalesce ;
   struct wiphy_vendor_command *vendor_commands ;
   struct nl80211_vendor_cmd_info *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   u32 bss_select_support ;
   u8 nan_supported_bands ;
   u32 txq_limit ;
   u32 txq_memory_limit ;
   u32 txq_quantum ;
   u8 support_mbssid : 1 ;
   u8 support_only_he_mbssid : 1 ;
   struct cfg80211_pmsr_capabilities *pmsr_capa ;
   char priv[0U] ;
};
#line 4826 
struct cfg80211_conn;
#line 4827 
struct cfg80211_internal_bss;
#line 4828 
struct cfg80211_cached_keys;
#line 4829 
struct cfg80211_cqm_config;
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct __anonstruct_wext_777 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};
#line 4912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool is_running ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   enum ieee80211_bss_type conn_bss_type ;
   u32 conn_owner_nlportid ;
   struct work_struct disconnect_wk ;
   u8 disconnect_bssid[6U] ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   u32 owner_nlportid ;
   bool nl_owner_dead ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   struct __anonstruct_wext_777 wext ;
   struct cfg80211_cqm_config *cqm_config ;
   struct list_head pmsr_list ;
   spinlock_t pmsr_lock ;
   struct work_struct pmsr_free_wk ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/gen_stats.h"
struct gnet_stats_queue {
   __u32 qlen ;
   __u32 backlog ;
   __u32 drops ;
   __u32 requeues ;
   __u32 overlimits ;
};
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_packed {
   __u64 bytes ;
   __u64 packets ;
};
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_stats_basic_cpu {
   struct gnet_stats_basic_packed bstats ;
   struct u64_stats_sync syncp ;
} __attribute__((__aligned__(16)));
#line 20 
struct net_rate_estimator;
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/gen_stats.h"
struct gnet_dump {
   spinlock_t *lock ;
   struct sk_buff *skb ;
   struct nlattr *tail ;
   int compat_tc_stats ;
   int compat_xstats ;
   int padattr ;
   void *xstats ;
   int xstats_len ;
   struct tc_stats tc_stats ;
};
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jhash.h"
struct rhash_lock_head {
   };
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rhashtable.h"
struct bucket_table {
   unsigned int size ;
   unsigned int nest ;
   u32 hash_rnd ;
   struct list_head walkers ;
   struct callback_head rcu ;
   struct bucket_table *future_tbl ;
   struct lockdep_map dep_map ;
   struct rhash_lock_head *buckets[] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
struct flow_block {
   struct list_head cb_list ;
};
#line 298  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/flow_offload.h"
typedef int flow_setup_cb_t(enum tc_setup_type , void *, void *);
#line 412 
struct Qdisc_ops;
#line 413 
struct qdisc_walker;
#line 414 
struct tcf_walker;
#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_size_table {
   struct callback_head rcu ;
   struct list_head list ;
   struct tc_sizespec szopts ;
   int refcnt ;
   u16 data[] ;
};
#line 50  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct qdisc_skb_head {
   struct sk_buff *head ;
   struct sk_buff *tail ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc {
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   unsigned int flags ;
   u32 limit ;
   struct Qdisc_ops *ops ;
   struct qdisc_size_table *stab ;
   struct hlist_node hash ;
   u32 handle ;
   u32 parent ;
   struct netdev_queue *dev_queue ;
   struct net_rate_estimator *rate_est ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   int padded ;
   refcount_t refcnt ;
   struct sk_buff_head gso_skb ;
   struct qdisc_skb_head q ;
   struct gnet_stats_basic_packed bstats ;
   seqcount_t running ;
   struct gnet_stats_queue qstats ;
   unsigned long state ;
   struct Qdisc *next_sched ;
   struct sk_buff_head skb_bad_txq ;
   spinlock_t busylock ;
   spinlock_t seqlock ;
   bool empty ;
   struct callback_head rcu ;
};
#line 195 
struct tcf_block;
#line 195  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_class_ops {
   unsigned int flags ;
   struct netdev_queue *(*select_queue)(struct Qdisc *, struct tcmsg *) ;
   int (*graft)(struct Qdisc *, unsigned long , struct Qdisc *, struct Qdisc **, struct netlink_ext_ack *) ;
   struct Qdisc *(*leaf)(struct Qdisc *, unsigned long ) ;
   void (*qlen_notify)(struct Qdisc *, unsigned long ) ;
   unsigned long (*find)(struct Qdisc *, u32 ) ;
   int (*change)(struct Qdisc *, u32 , u32 , struct nlattr **, unsigned long *, struct netlink_ext_ack *) ;
   int (*delete)(struct Qdisc *, unsigned long ) ;
   void (*walk)(struct Qdisc *, struct qdisc_walker *) ;
   struct tcf_block *(*tcf_block)(struct Qdisc *, unsigned long , struct netlink_ext_ack *) ;
   unsigned long (*bind_tcf)(struct Qdisc *, unsigned long , u32 ) ;
   void (*unbind_tcf)(struct Qdisc *, unsigned long ) ;
   int (*dump)(struct Qdisc *, unsigned long , struct sk_buff *, struct tcmsg *) ;
   int (*dump_stats)(struct Qdisc *, unsigned long , struct gnet_dump *) ;
};
#line 235  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct Qdisc_ops {
   struct Qdisc_ops *next ;
   struct Qdisc_class_ops *cl_ops ;
   char id[16U] ;
   int priv_size ;
   unsigned int static_flags ;
   int (*enqueue)(struct sk_buff *, struct Qdisc *, struct sk_buff **) ;
   struct sk_buff *(*dequeue)(struct Qdisc *) ;
   struct sk_buff *(*peek)(struct Qdisc *) ;
   int (*init)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*reset)(struct Qdisc *) ;
   void (*destroy)(struct Qdisc *) ;
   int (*change)(struct Qdisc *, struct nlattr *, struct netlink_ext_ack *) ;
   void (*attach)(struct Qdisc *) ;
   int (*change_tx_queue_len)(struct Qdisc *, unsigned int ) ;
   int (*dump)(struct Qdisc *, struct sk_buff *) ;
   int (*dump_stats)(struct Qdisc *, struct gnet_dump *) ;
   void (*ingress_block_set)(struct Qdisc *, u32 ) ;
   void (*egress_block_set)(struct Qdisc *, u32 ) ;
   u32 (*ingress_block_get)(struct Qdisc *) ;
   u32 (*egress_block_get)(struct Qdisc *) ;
   struct module *owner ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_852 {
   unsigned long class ;
   u32 classid ;
};
#line 272 
struct tcf_proto;
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_853 {
   bool ingress ;
   struct gnet_stats_queue *qstats ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
union __anonunion_851 {
   struct __anonstruct_852 __anonCompField___anonunion_851_177 ;
   struct tcf_proto *goto_tp ;
   struct __anonstruct_853 __anonCompField___anonunion_851_178 ;
};
#line 272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_result {
   union __anonunion_851 __anonCompField_tcf_result_179 ;
};
#line 287 
struct tcf_chain;
#line 290  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto_ops {
   struct list_head head ;
   char kind[16U] ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   int (*init)(struct tcf_proto *) ;
   void (*destroy)(struct tcf_proto *, bool , struct netlink_ext_ack *) ;
   void *(*get)(struct tcf_proto *, u32 ) ;
   void (*put)(struct tcf_proto *, void *) ;
   int (*change)(struct net *, struct sk_buff *, struct tcf_proto *, unsigned long , u32 , struct nlattr **, void **, bool , bool , struct netlink_ext_ack *) ;
   int (*delete)(struct tcf_proto *, void *, bool *, bool , struct netlink_ext_ack *) ;
   bool (*delete_empty)(struct tcf_proto *) ;
   void (*walk)(struct tcf_proto *, struct tcf_walker *, bool ) ;
   int (*reoffload)(struct tcf_proto *, bool , flow_setup_cb_t *, void *, struct netlink_ext_ack *) ;
   void (*hw_add)(struct tcf_proto *, void *) ;
   void (*hw_del)(struct tcf_proto *, void *) ;
   void (*bind_class)(void *, u32 , unsigned long ) ;
   void *(*tmplt_create)(struct net *, struct tcf_chain *, struct nlattr **, struct netlink_ext_ack *) ;
   void (*tmplt_destroy)(void *) ;
   int (*dump)(struct net *, struct tcf_proto *, void *, struct sk_buff *, struct tcmsg *, bool ) ;
   int (*tmplt_dump)(struct sk_buff *, struct net *, void *) ;
   struct module *owner ;
   int flags ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_proto {
   struct tcf_proto *next ;
   void *root ;
   int (*classify)(struct sk_buff *, struct tcf_proto *, struct tcf_result *) ;
   __be16 protocol ;
   u32 prio ;
   void *data ;
   struct tcf_proto_ops *ops ;
   struct tcf_chain *chain ;
   spinlock_t lock ;
   bool deleting ;
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct hlist_node destroy_ht_node ;
};
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_chain {
   struct mutex filter_chain_lock ;
   struct tcf_proto *filter_chain ;
   struct list_head list ;
   struct tcf_block *block ;
   u32 index ;
   unsigned int refcnt ;
   unsigned int action_refcnt ;
   bool explicitly_created ;
   bool flushing ;
   struct tcf_proto_ops *tmplt_ops ;
   void *tmplt_priv ;
   struct callback_head rcu ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct __anonstruct_chain0_855 {
   struct tcf_chain *chain ;
   struct list_head filter_chain_list ;
};
#line 402  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct tcf_block {
   struct mutex lock ;
   struct list_head chain_list ;
   u32 index ;
   refcount_t refcnt ;
   struct net *net ;
   struct Qdisc *q ;
   struct rw_semaphore cb_lock ;
   struct flow_block flow_block ;
   struct list_head owner_list ;
   bool keep_dst ;
   atomic_t offloadcnt ;
   unsigned int nooffloaddevcnt ;
   unsigned int lockeddevcnt ;
   struct __anonstruct_chain0_855 chain0 ;
   struct callback_head rcu ;
   struct hlist_head proto_destroy_ht[128U] ;
   struct mutex proto_destroy_lock ;
};
#line 1269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sch_generic.h"
struct mini_Qdisc {
   struct tcf_proto *filter_list ;
   struct gnet_stats_basic_cpu *cpu_bstats ;
   struct gnet_stats_queue *cpu_qstats ;
   struct callback_head rcu ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/pkt_sched.h"
struct qdisc_walker {
   int stop ;
   int skip ;
   int count ;
   int (*fn)(struct Qdisc *, unsigned long , struct qdisc_walker *) ;
};
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/page_counter.h"
struct page_counter {
   atomic_long_t usage ;
   unsigned long min ;
   unsigned long low ;
   unsigned long max ;
   struct page_counter *parent ;
   unsigned long emin ;
   atomic_long_t min_usage ;
   atomic_long_t children_min_usage ;
   unsigned long elow ;
   atomic_long_t low_usage ;
   atomic_long_t children_low_usage ;
   unsigned long watermark ;
   unsigned long failcnt ;
};
#line 66 
struct eventfd_ctx;
#line 13  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/vmpressure.h"
struct vmpressure {
   unsigned long scanned ;
   unsigned long reclaimed ;
   unsigned long tree_scanned ;
   unsigned long tree_reclaimed ;
   spinlock_t sr_lock ;
   struct list_head events ;
   struct mutex events_lock ;
   struct work_struct work ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_global {
   struct percpu_counter events ;
   unsigned int period ;
   seqcount_t sequence ;
};
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
struct fprop_local_percpu {
   struct percpu_counter events ;
   unsigned int period ;
   raw_spinlock_t lock ;
};
#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/flex_proportions.h"
typedef int congested_fn(void *, int );
#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
enum wb_reason {
    WB_REASON_BACKGROUND = 0,
    WB_REASON_VMSCAN = 1,
    WB_REASON_SYNC = 2,
    WB_REASON_PERIODIC = 3,
    WB_REASON_LAPTOP_TIMER = 4,
    WB_REASON_FREE_MORE_MEM = 5,
    WB_REASON_FS_FREE_SPACE = 6,
    WB_REASON_FORKER_THREAD = 7,
    WB_REASON_FOREIGN_FLUSH = 8,
    WB_REASON_MAX = 9
};
#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct wb_completion {
   atomic_t cnt ;
   wait_queue_head_t *waitq ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback_congested {
   unsigned long state ;
   refcount_t refcnt ;
   struct backing_dev_info *__bdi ;
   int blkcg_id ;
   struct rb_node rb_node ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
union __anonunion_868 {
   struct work_struct release_work ;
   struct callback_head rcu ;
};
#line 130  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct bdi_writeback {
   struct backing_dev_info *bdi ;
   unsigned long state ;
   unsigned long last_old_flush ;
   struct list_head b_dirty ;
   struct list_head b_io ;
   struct list_head b_more_io ;
   struct list_head b_dirty_time ;
   spinlock_t list_lock ;
   struct percpu_counter stat[4U] ;
   struct bdi_writeback_congested *congested ;
   unsigned long bw_time_stamp ;
   unsigned long dirtied_stamp ;
   unsigned long written_stamp ;
   unsigned long write_bandwidth ;
   unsigned long avg_write_bandwidth ;
   unsigned long dirty_ratelimit ;
   unsigned long balanced_dirty_ratelimit ;
   struct fprop_local_percpu completions ;
   int dirty_exceeded ;
   enum wb_reason start_all_reason ;
   spinlock_t work_lock ;
   struct list_head work_list ;
   struct delayed_work dwork ;
   unsigned long dirty_sleep ;
   struct list_head bdi_node ;
   struct percpu_ref refcnt ;
   struct fprop_local_percpu memcg_completions ;
   struct cgroup_subsys_state *memcg_css ;
   struct cgroup_subsys_state *blkcg_css ;
   struct list_head memcg_node ;
   struct list_head blkcg_node ;
   union __anonunion_868 __anonCompField_bdi_writeback_181 ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
struct backing_dev_info {
   u64 id ;
   struct rb_node rb_node ;
   struct list_head bdi_list ;
   unsigned long ra_pages ;
   unsigned long io_pages ;
   congested_fn *congested_fn ;
   void *congested_data ;
   char *name ;
   struct kref refcnt ;
   unsigned int capabilities ;
   unsigned int min_ratio ;
   unsigned int max_ratio ;
   unsigned int max_prop_frac ;
   atomic_long_t tot_write_bandwidth ;
   struct bdi_writeback wb ;
   struct list_head wb_list ;
   struct xarray cgwb_tree ;
   struct rb_root cgwb_congested_tree ;
   struct mutex cgwb_release_mutex ;
   struct rw_semaphore wb_switch_rwsem ;
   wait_queue_head_t wb_waitq ;
   struct device *dev ;
   struct device *owner ;
   struct timer_list laptop_mode_wb_timer ;
   struct dentry *debug_dir ;
};
#line 306 
struct bio_set;
#line 307 
struct bio_integrity_payload;
#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backing-dev-defs.h"
typedef void bio_end_io_t(struct bio *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef u8 blk_status_t;
#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio_issue {
   u64 value ;
};
#line 144 
struct blkcg_gq;
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
union __anonunion_869 {
   struct bio_integrity_payload *bi_integrity ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct bio {
   struct bio *bi_next ;
   struct gendisk *bi_disk ;
   unsigned int bi_opf ;
   unsigned short bi_flags ;
   unsigned short bi_ioprio ;
   unsigned short bi_write_hint ;
   blk_status_t bi_status ;
   u8 bi_partno ;
   atomic_t __bi_remaining ;
   struct bvec_iter bi_iter ;
   bio_end_io_t *bi_end_io ;
   void *bi_private ;
   struct blkcg_gq *bi_blkg ;
   struct bio_issue bi_issue ;
   u64 bi_iocost_cost ;
   union __anonunion_869 __anonCompField_bio_182 ;
   unsigned short bi_vcnt ;
   unsigned short bi_max_vecs ;
   atomic_t __bi_cnt ;
   struct bio_vec *bi_io_vec ;
   struct bio_set *bi_pool ;
   struct bio_vec bi_inline_vecs[0U] ;
};
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
typedef unsigned int blk_qc_t;
#line 479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk_types.h"
struct blk_rq_stat {
   u64 mean ;
   u64 min ;
   u64 max ;
   u32 nr_samples ;
   u64 batch ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_stats {
   u64 nsecs[4U] ;
   unsigned long sectors[4U] ;
   unsigned long ios[4U] ;
   unsigned long merges[4U] ;
   unsigned long io_ticks ;
   unsigned long time_in_queue ;
   local_t in_flight[2U] ;
};
#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct partition_meta_info {
   char uuid[37U] ;
   u8 volname[64U] ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct hd_struct {
   sector_t start_sect ;
   sector_t nr_sects ;
   seqcount_t nr_sects_seq ;
   sector_t alignment_offset ;
   unsigned int discard_alignment ;
   struct device __dev ;
   struct kobject *holder_dir ;
   int policy ;
   int partno ;
   struct partition_meta_info *info ;
   int make_it_fail ;
   unsigned long stamp ;
   struct disk_stats *dkstats ;
   struct percpu_ref ref ;
   struct rcu_work rcu_work ;
};
#line 160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct disk_part_tbl {
   struct callback_head callback_head ;
   int len ;
   struct hd_struct *last_lookup ;
   struct hd_struct *part[] ;
};
#line 166 
struct disk_events;
#line 167 
struct badblocks;
#line 172 
struct blk_integrity_profile;
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct blk_integrity {
   struct blk_integrity_profile *profile ;
   unsigned char flags ;
   unsigned char tuple_size ;
   unsigned char interval_exp ;
   unsigned char tag_size ;
};
#line 182 
struct timer_rand_state;
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/genhd.h"
struct gendisk {
   int major ;
   int first_minor ;
   int minors ;
   char disk_name[32U] ;
   char *(*devnode)(struct gendisk *, umode_t *) ;
   unsigned short events ;
   unsigned short event_flags ;
   struct disk_part_tbl *part_tbl ;
   struct hd_struct part0 ;
   struct block_device_operations *fops ;
   struct request_queue *queue ;
   void *private_data ;
   int flags ;
   struct rw_semaphore lookup_sem ;
   struct kobject *slave_dir ;
   struct timer_rand_state *random ;
   atomic_t sync_io ;
   struct disk_events *ev ;
   struct kobject integrity_kobj ;
   int node_id ;
   struct badblocks *bb ;
   struct lockdep_map lockdep_map ;
};
#line 637  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/pagemap.h"
typedef void *mempool_alloc_t(gfp_t , void *);
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef void mempool_free_t(void *, void *);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
struct mempool_s {
   spinlock_t lock ;
   int min_nr ;
   int curr_nr ;
   void **elements ;
   void *pool_data ;
   mempool_alloc_t *alloc ;
   mempool_free_t *free ;
   wait_queue_head_t wait ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mempool.h"
typedef struct mempool_s mempool_t;
#line 307  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_integrity_payload {
   struct bio *bip_bio ;
   struct bvec_iter bip_iter ;
   unsigned short bip_slab ;
   unsigned short bip_vcnt ;
   unsigned short bip_max_vcnt ;
   unsigned short bip_flags ;
   struct bvec_iter bio_iter ;
   struct work_struct bip_work ;
   struct bio_vec *bip_vec ;
   struct bio_vec bip_inline_vecs[0U] ;
};
#line 575  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_list {
   struct bio *head ;
   struct bio *tail ;
};
#line 703  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bio.h"
struct bio_set {
   struct kmem_cache *bio_slab ;
   unsigned int front_pad ;
   mempool_t bio_pool ;
   mempool_t bvec_pool ;
   mempool_t bio_integrity_pool ;
   mempool_t bvec_integrity_pool ;
   spinlock_t rescue_lock ;
   struct bio_list rescue_list ;
   struct work_struct rescue_work ;
   struct workqueue_struct *rescue_workqueue ;
};
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/bsg.h"
struct sg_io_v4 {
   __s32 guard ;
   __u32 protocol ;
   __u32 subprotocol ;
   __u32 request_len ;
   __u64 request ;
   __u64 request_tag ;
   __u32 request_attr ;
   __u32 request_priority ;
   __u32 request_extra ;
   __u32 max_response_len ;
   __u64 response ;
   __u32 dout_iovec_count ;
   __u32 dout_xfer_len ;
   __u32 din_iovec_count ;
   __u32 din_xfer_len ;
   __u64 dout_xferp ;
   __u64 din_xferp ;
   __u32 timeout ;
   __u32 flags ;
   __u64 usr_ptr ;
   __u32 spare_in ;
   __u32 driver_status ;
   __u32 transport_status ;
   __u32 device_status ;
   __u32 retry_delay ;
   __u32 info ;
   __u32 duration ;
   __u32 response_len ;
   __s32 din_resid ;
   __s32 dout_resid ;
   __u64 generated_tag ;
   __u32 spare_out ;
   __u32 padding ;
};
#line 65 
struct request;
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_ops {
   int (*check_proto)(struct sg_io_v4 *) ;
   int (*fill_hdr)(struct request *, struct sg_io_v4 *, fmode_t ) ;
   int (*complete_rq)(struct request *, struct sg_io_v4 *) ;
   void (*free_rq)(struct request *) ;
};
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/bsg.h"
struct bsg_class_device {
   struct device *class_dev ;
   int minor ;
   struct request_queue *queue ;
   struct bsg_ops *ops ;
};
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
struct blk_zone {
   __u64 start ;
   __u64 len ;
   __u64 wp ;
   __u8 type ;
   __u8 cond ;
   __u8 non_seq ;
   __u8 reset ;
   __u8 reserved[36U] ;
};
#line 134 
struct elevator_queue;
#line 135 
struct blk_trace;
#line 138 
struct blk_flush_queue;
#line 139 
struct pr_ops;
#line 140 
struct rq_qos;
#line 141 
struct blk_queue_stats;
#line 142 
struct blk_stat_callback;
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/blkzoned.h"
typedef void rq_end_io_fn(struct request *, blk_status_t );
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef __u32 req_flags_t;
#line 67 
enum mq_rq_state {
    MQ_RQ_IDLE = 0,
    MQ_RQ_IN_FLIGHT = 1,
    MQ_RQ_COMPLETE = 2
};
#line 132 
struct blk_mq_ctx;
#line 132 
struct blk_mq_hw_ctx;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_872 {
   struct hlist_node hash ;
   struct list_head ipi_list ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_873 {
   struct rb_node rb_node ;
   struct bio_vec special_vec ;
   void *completion_data ;
   int error_count ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_elv_875 {
   struct io_cq *icq ;
   void *priv[2U] ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct __anonstruct_flush_876 {
   unsigned int seq ;
   struct list_head list ;
   rq_end_io_fn *saved_end_io ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_874 {
   struct __anonstruct_elv_875 elv ;
   struct __anonstruct_flush_876 flush ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
union __anonunion_877 {
   struct __call_single_data csd ;
   u64 fifo_time ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request {
   struct request_queue *q ;
   struct blk_mq_ctx *mq_ctx ;
   struct blk_mq_hw_ctx *mq_hctx ;
   unsigned int cmd_flags ;
   req_flags_t rq_flags ;
   int tag ;
   int internal_tag ;
   unsigned int __data_len ;
   sector_t __sector ;
   struct bio *bio ;
   struct bio *biotail ;
   struct list_head queuelist ;
   union __anonunion_872 __anonCompField_request_183 ;
   union __anonunion_873 __anonCompField_request_184 ;
   union __anonunion_874 __anonCompField_request_185 ;
   struct gendisk *rq_disk ;
   struct hd_struct *part ;
   u64 alloc_time_ns ;
   u64 start_time_ns ;
   u64 io_start_time_ns ;
   unsigned short wbt_flags ;
   unsigned short stats_sectors ;
   unsigned short nr_phys_segments ;
   unsigned short nr_integrity_segments ;
   unsigned short write_hint ;
   unsigned short ioprio ;
   unsigned int extra_len ;
   enum mq_rq_state state ;
   refcount_t ref ;
   unsigned int timeout ;
   unsigned long deadline ;
   union __anonunion_877 __anonCompField_request_186 ;
   rq_end_io_fn *end_io ;
   void *end_io_data ;
};
#line 285 
struct elevator_type;
#line 286 
struct blk_mq_debugfs_attr;
#line 287 
enum elv_merge {
    ELEVATOR_NO_MERGE = 0,
    ELEVATOR_FRONT_MERGE = 1,
    ELEVATOR_BACK_MERGE = 2,
    ELEVATOR_DISCARD_MERGE = 3
};
#line 294 
struct blk_mq_alloc_data;
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_mq_ops {
   int (*init_sched)(struct request_queue *, struct elevator_type *) ;
   void (*exit_sched)(struct elevator_queue *) ;
   int (*init_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*exit_hctx)(struct blk_mq_hw_ctx *, unsigned int ) ;
   void (*depth_updated)(struct blk_mq_hw_ctx *) ;
   bool (*allow_merge)(struct request_queue *, struct request *, struct bio *) ;
   bool (*bio_merge)(struct blk_mq_hw_ctx *, struct bio *, unsigned int ) ;
   int (*request_merge)(struct request_queue *, struct request **, struct bio *) ;
   void (*request_merged)(struct request_queue *, struct request *, enum elv_merge ) ;
   void (*requests_merged)(struct request_queue *, struct request *, struct request *) ;
   void (*limit_depth)(unsigned int , struct blk_mq_alloc_data *) ;
   void (*prepare_request)(struct request *, struct bio *) ;
   void (*finish_request)(struct request *) ;
   void (*insert_requests)(struct blk_mq_hw_ctx *, struct list_head *, bool ) ;
   struct request *(*dispatch_request)(struct blk_mq_hw_ctx *) ;
   bool (*has_work)(struct blk_mq_hw_ctx *) ;
   void (*completed_request)(struct request *, u64 ) ;
   void (*requeue_request)(struct request *) ;
   struct request *(*former_request)(struct request_queue *, struct request *) ;
   struct request *(*next_request)(struct request_queue *, struct request *) ;
   void (*init_icq)(struct io_cq *) ;
   void (*exit_icq)(struct io_cq *) ;
};
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elv_fs_entry {
   struct attribute attr ;
   ssize_t (*show)(struct elevator_queue *, char *) ;
   ssize_t (*store)(struct elevator_queue *, char *, size_t ) ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_type {
   struct kmem_cache *icq_cache ;
   struct elevator_mq_ops ops ;
   size_t icq_size ;
   size_t icq_align ;
   struct elv_fs_entry *elevator_attrs ;
   char *elevator_name ;
   char *elevator_alias ;
   unsigned int elevator_features ;
   struct module *elevator_owner ;
   struct blk_mq_debugfs_attr *queue_debugfs_attrs ;
   struct blk_mq_debugfs_attr *hctx_debugfs_attrs ;
   char icq_cache_name[22U] ;
   struct list_head list ;
};
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
struct elevator_queue {
   struct elevator_type *type ;
   void *elevator_data ;
   struct kobject kobj ;
   struct mutex sysfs_lock ;
   unsigned int registered : 1 ;
   struct hlist_head hash[64U] ;
};
#line 153  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/elevator.h"
typedef blk_qc_t make_request_fn(struct request_queue *, struct bio *);
#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef int dma_drain_needed_fn(struct request *);
#line 304 
enum blk_zoned_model {
    BLK_ZONED_NONE = 0,
    BLK_ZONED_HA = 1,
    BLK_ZONED_HM = 2
};
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct queue_limits {
   unsigned long bounce_pfn ;
   unsigned long seg_boundary_mask ;
   unsigned long virt_boundary_mask ;
   unsigned int max_hw_sectors ;
   unsigned int max_dev_sectors ;
   unsigned int chunk_sectors ;
   unsigned int max_sectors ;
   unsigned int max_segment_size ;
   unsigned int physical_block_size ;
   unsigned int logical_block_size ;
   unsigned int alignment_offset ;
   unsigned int io_min ;
   unsigned int io_opt ;
   unsigned int max_discard_sectors ;
   unsigned int max_hw_discard_sectors ;
   unsigned int max_write_same_sectors ;
   unsigned int max_write_zeroes_sectors ;
   unsigned int discard_granularity ;
   unsigned int discard_alignment ;
   unsigned short max_segments ;
   unsigned short max_integrity_segments ;
   unsigned short max_discard_segments ;
   unsigned char misaligned ;
   unsigned char discard_misaligned ;
   unsigned char raid_partial_stripes_expensive ;
   enum blk_zoned_model zoned ;
};
#line 394 
struct blk_mq_ops;
#line 394 
struct throtl_data;
#line 394 
struct blk_mq_tag_set;
#line 394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct request_queue {
   struct request *last_merge ;
   struct elevator_queue *elevator ;
   struct blk_queue_stats *stats ;
   struct rq_qos *rq_qos ;
   make_request_fn *make_request_fn ;
   dma_drain_needed_fn *dma_drain_needed ;
   struct blk_mq_ops *mq_ops ;
   struct blk_mq_ctx *queue_ctx ;
   unsigned int queue_depth ;
   struct blk_mq_hw_ctx **queue_hw_ctx ;
   unsigned int nr_hw_queues ;
   struct backing_dev_info *backing_dev_info ;
   void *queuedata ;
   unsigned long queue_flags ;
   atomic_t pm_only ;
   int id ;
   gfp_t bounce_gfp ;
   spinlock_t queue_lock ;
   struct kobject kobj ;
   struct kobject *mq_kobj ;
   struct blk_integrity integrity ;
   struct device *dev ;
   int rpm_status ;
   unsigned int nr_pending ;
   unsigned long nr_requests ;
   unsigned int dma_drain_size ;
   void *dma_drain_buffer ;
   unsigned int dma_pad_mask ;
   unsigned int dma_alignment ;
   unsigned int rq_timeout ;
   int poll_nsec ;
   struct blk_stat_callback *poll_cb ;
   struct blk_rq_stat poll_stat[16U] ;
   struct timer_list timeout ;
   struct work_struct timeout_work ;
   struct list_head icq_list ;
   unsigned long blkcg_pols[1U] ;
   struct blkcg_gq *root_blkg ;
   struct list_head blkg_list ;
   struct queue_limits limits ;
   unsigned int required_elevator_features ;
   unsigned int nr_zones ;
   unsigned long *conv_zones_bitmap ;
   unsigned long *seq_zones_wlock ;
   unsigned int sg_timeout ;
   unsigned int sg_reserved_size ;
   int node ;
   struct blk_trace *blk_trace ;
   struct mutex blk_trace_mutex ;
   struct blk_flush_queue *fq ;
   struct list_head requeue_list ;
   spinlock_t requeue_lock ;
   struct delayed_work requeue_work ;
   struct mutex sysfs_lock ;
   struct mutex sysfs_dir_lock ;
   struct list_head unused_hctx_list ;
   spinlock_t unused_hctx_lock ;
   int mq_freeze_depth ;
   struct bsg_class_device bsg_dev ;
   struct throtl_data *td ;
   struct callback_head callback_head ;
   wait_queue_head_t mq_freeze_wq ;
   struct mutex mq_freeze_lock ;
   struct percpu_ref q_usage_counter ;
   struct blk_mq_tag_set *tag_set ;
   struct list_head tag_set_list ;
   struct bio_set bio_split ;
   struct dentry *debugfs_dir ;
   struct dentry *sched_debugfs_dir ;
   struct dentry *rqos_debugfs_dir ;
   bool mq_sysfs_init_done ;
   size_t cmd_size ;
   struct work_struct release_work ;
   u64 write_hints[5U] ;
};
#line 1160  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_plug {
   struct list_head mq_list ;
   struct list_head cb_list ;
   unsigned short rq_count ;
   bool multiple_queues ;
};
#line 1514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_iter {
   void *prot_buf ;
   void *data_buf ;
   sector_t seed ;
   unsigned int data_size ;
   unsigned short interval ;
   char *disk_name ;
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef blk_status_t integrity_processing_fn(struct blk_integrity_iter *);
#line 1524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_prepare_fn(struct request *);
#line 1525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
typedef void integrity_complete_fn(struct request *, unsigned int );
#line 1527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct blk_integrity_profile {
   integrity_processing_fn *generate_fn ;
   integrity_processing_fn *verify_fn ;
   integrity_prepare_fn *prepare_fn ;
   integrity_complete_fn *complete_fn ;
   char *name ;
};
#line 1693  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blkdev.h"
struct block_device_operations {
   int (*open)(struct block_device *, fmode_t ) ;
   void (*release)(struct gendisk *, fmode_t ) ;
   int (*rw_page)(struct block_device *, sector_t , struct page *, unsigned int ) ;
   int (*ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct block_device *, fmode_t , unsigned int , unsigned long ) ;
   unsigned int (*check_events)(struct gendisk *, unsigned int ) ;
   int (*media_changed)(struct gendisk *) ;
   void (*unlock_native_capacity)(struct gendisk *) ;
   int (*revalidate_disk)(struct gendisk *) ;
   int (*getgeo)(struct block_device *, struct hd_geometry *) ;
   void (*swap_slot_free_notify)(struct block_device *, unsigned long ) ;
   int (*report_zones)(struct gendisk *, sector_t , unsigned int , int (*)(struct blk_zone *, unsigned int , void *), void *) ;
   struct module *owner ;
   struct pr_ops *pr_ops ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data;
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg {
   struct cgroup_subsys_state css ;
   spinlock_t lock ;
   struct xarray blkg_tree ;
   struct blkcg_gq *blkg_hint ;
   struct hlist_head blkg_list ;
   struct blkcg_policy_data *cpd[5U] ;
   struct list_head all_blkcgs_node ;
   struct list_head cgwb_list ;
   refcount_t cgwb_refcnt ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat {
   u64 bytes[3U] ;
   u64 ios[3U] ;
};
#line 68  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_iostat_set {
   struct u64_stats_sync sync ;
   struct blkg_iostat cur ;
   struct blkg_iostat last ;
};
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkg_policy_data {
   struct blkcg_gq *blkg ;
   int plid ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_policy_data {
   struct blkcg *blkcg ;
   int plid ;
};
#line 105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/blk-cgroup.h"
struct blkcg_gq {
   struct request_queue *q ;
   struct list_head q_node ;
   struct hlist_node blkcg_node ;
   struct blkcg *blkcg ;
   struct bdi_writeback_congested *wb_congested ;
   struct blkcg_gq *parent ;
   struct percpu_ref refcnt ;
   bool online ;
   struct blkg_iostat_set *iostat_cpu ;
   struct blkg_iostat_set iostat ;
   struct blkg_policy_data *pd[5U] ;
   spinlock_t async_bio_lock ;
   struct bio_list async_bios ;
   struct work_struct async_bio_work ;
   atomic_t use_delay ;
   atomic64_t delay_nsec ;
   atomic64_t delay_start ;
   u64 last_delay ;
   int last_use ;
   struct callback_head callback_head ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
enum writeback_sync_modes {
    WB_SYNC_NONE = 0,
    WB_SYNC_ALL = 1
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct writeback_control {
   long nr_to_write ;
   long pages_skipped ;
   loff_t range_start ;
   loff_t range_end ;
   enum writeback_sync_modes sync_mode ;
   unsigned int for_kupdate : 1 ;
   unsigned int for_background : 1 ;
   unsigned int tagged_writepages : 1 ;
   unsigned int for_reclaim : 1 ;
   unsigned int range_cyclic : 1 ;
   unsigned int for_sync : 1 ;
   unsigned int no_cgroup_owner : 1 ;
   unsigned int punt_to_cgroup : 1 ;
   struct bdi_writeback *wb ;
   struct inode *inode ;
   int wb_id ;
   int wb_lcand_id ;
   int wb_tcand_id ;
   size_t wb_bytes ;
   size_t wb_lcand_bytes ;
   size_t wb_tcand_bytes ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/writeback.h"
struct wb_domain {
   spinlock_t lock ;
   struct fprop_global completions ;
   struct timer_list period_timer ;
   unsigned long period_time ;
   unsigned long dirty_limit_tstamp ;
   unsigned long dirty_limit ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_id {
   int id ;
   refcount_t ref ;
};
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_vmstats_percpu {
   long stat[38U] ;
   unsigned long events[91U] ;
   unsigned long nr_page_events ;
   unsigned long targets[2U] ;
};
#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_reclaim_iter {
   struct mem_cgroup *position ;
   unsigned int generation ;
};
#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct lruvec_stat {
   long count[32U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_shrinker_map {
   struct callback_head rcu ;
   unsigned long map[0U] ;
};
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_per_node {
   struct lruvec lruvec ;
   struct lruvec_stat *lruvec_stat_local ;
   struct lruvec_stat *lruvec_stat_cpu ;
   atomic_long_t lruvec_stat[32U] ;
   unsigned long lru_zone_size[5U][5U] ;
   struct mem_cgroup_reclaim_iter iter ;
   struct memcg_shrinker_map *shrinker_map ;
   struct rb_node tree_node ;
   unsigned long usage_in_excess ;
   bool on_tree ;
   struct mem_cgroup *memcg ;
};
#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold {
   struct eventfd_ctx *eventfd ;
   unsigned long threshold ;
};
#line 145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_threshold_ary {
   int current_threshold ;
   unsigned int size ;
   struct mem_cgroup_threshold entries[0U] ;
};
#line 154  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup_thresholds {
   struct mem_cgroup_threshold_ary *primary ;
   struct mem_cgroup_threshold_ary *spare ;
};
#line 164 
enum memcg_kmem_state {
    KMEM_NONE = 0,
    KMEM_ALLOCATED = 1,
    KMEM_ONLINE = 2
};
#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_padding {
   char x[0U] ;
} __attribute__((__aligned__(4096)));
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct memcg_cgwb_frn {
   u64 bdi_id ;
   int memcg_id ;
   u64 at ;
   struct wb_completion done ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/memcontrol.h"
struct mem_cgroup {
   struct cgroup_subsys_state css ;
   struct mem_cgroup_id id ;
   struct page_counter memory ;
   struct page_counter swap ;
   struct page_counter memsw ;
   struct page_counter kmem ;
   struct page_counter tcpmem ;
   unsigned long high ;
   struct work_struct high_work ;
   unsigned long soft_limit ;
   struct vmpressure vmpressure ;
   bool use_hierarchy ;
   bool oom_group ;
   bool oom_lock ;
   int under_oom ;
   int swappiness ;
   int oom_kill_disable ;
   struct cgroup_file events_file ;
   struct cgroup_file events_local_file ;
   struct cgroup_file swap_events_file ;
   struct mutex thresholds_lock ;
   struct mem_cgroup_thresholds thresholds ;
   struct mem_cgroup_thresholds memsw_thresholds ;
   struct list_head oom_notify ;
   unsigned long move_charge_at_immigrate ;
   spinlock_t move_lock ;
   unsigned long move_lock_flags ;
   struct memcg_padding _pad1_ ;
   atomic_t moving_account ;
   struct task_struct *move_lock_task ;
   struct memcg_vmstats_percpu *vmstats_local ;
   struct memcg_vmstats_percpu *vmstats_percpu ;
   struct memcg_padding _pad2_ ;
   atomic_long_t vmstats[38U] ;
   atomic_long_t vmevents[91U] ;
   atomic_long_t memory_events[7U] ;
   atomic_long_t memory_events_local[7U] ;
   unsigned long socket_pressure ;
   bool tcpmem_active ;
   int tcpmem_pressure ;
   int kmemcg_id ;
   enum memcg_kmem_state kmem_state ;
   struct list_head kmem_caches ;
   struct list_head cgwb_list ;
   struct wb_domain cgwb_domain ;
   struct memcg_cgwb_frn cgwb_frn[4U] ;
   struct list_head event_list ;
   spinlock_t event_list_lock ;
   struct deferred_split deferred_split_queue ;
   struct mem_cgroup_per_node *nodeinfo[0U] ;
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/filter.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 35 
struct sock_reuseport;
#line 513  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
union __anonunion_893 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};
#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   u16 jited : 1 ;
   u16 jit_requested : 1 ;
   u16 gpl_compatible : 1 ;
   u16 cb_access : 1 ;
   u16 dst_needed : 1 ;
   u16 blinded : 1 ;
   u16 is_func : 1 ;
   u16 kprobe_override : 1 ;
   u16 has_callchain_buf : 1 ;
   u16 enforce_expected_attach_type : 1 ;
   enum bpf_prog_type type ;
   enum bpf_attach_type expected_attach_type ;
   u32 len ;
   u32 jited_len ;
   u8 tag[8U] ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(void *, struct bpf_insn *) ;
   union __anonunion_893 __anonCompField_bpf_prog_187 ;
};
#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/filter.h"
struct sk_filter {
   refcount_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/asm-generic/poll.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 43  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   __poll_t _key ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_hdr {
   __u8 family ;
   __u8 dst_len ;
   __u8 src_len ;
   __u8 tos ;
   __u8 table ;
   __u8 res1 ;
   __u8 res2 ;
   __u8 action ;
   __u32 flags ;
};
#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fib_rules.h"
struct fib_rule_port_range {
   __u16 start ;
   __u16 end ;
};
#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_notifier.h"
struct fib_notifier_ops {
   int family ;
   struct list_head list ;
   unsigned int (*fib_seq_read)(struct net *) ;
   int (*fib_dump)(struct net *, struct notifier_block *, struct netlink_ext_ack *) ;
   struct module *owner ;
   struct callback_head rcu ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_kuid_range {
   kuid_t start ;
   kuid_t end ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rule {
   struct list_head list ;
   int iifindex ;
   int oifindex ;
   u32 mark ;
   u32 mark_mask ;
   u32 flags ;
   u32 table ;
   u8 action ;
   u8 l3mdev ;
   u8 proto ;
   u8 ip_proto ;
   u32 target ;
   __be64 tun_id ;
   struct fib_rule *ctarget ;
   struct net *fr_net ;
   refcount_t refcnt ;
   u32 pref ;
   int suppress_ifgroup ;
   int suppress_prefixlen ;
   char iifname[16U] ;
   char oifname[16U] ;
   struct fib_kuid_range uid_range ;
   struct fib_rule_port_range sport_range ;
   struct fib_rule_port_range dport_range ;
   struct callback_head rcu ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_lookup_arg {
   void *lookup_ptr ;
   void *lookup_data ;
   void *result ;
   struct fib_rule *rule ;
   u32 table ;
   int flags ;
};
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/fib_rules.h"
struct fib_rules_ops {
   int family ;
   struct list_head list ;
   int rule_size ;
   int addr_size ;
   int unresolved_rules ;
   int nr_goto_rules ;
   unsigned int fib_rules_seq ;
   int (*action)(struct fib_rule *, struct flowi *, int , struct fib_lookup_arg *) ;
   bool (*suppress)(struct fib_rule *, struct fib_lookup_arg *) ;
   int (*match)(struct fib_rule *, struct flowi *, int ) ;
   int (*configure)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *, struct nlattr **, struct netlink_ext_ack *) ;
   int (*delete)(struct fib_rule *) ;
   int (*compare)(struct fib_rule *, struct fib_rule_hdr *, struct nlattr **) ;
   int (*fill)(struct fib_rule *, struct sk_buff *, struct fib_rule_hdr *) ;
   size_t (*nlmsg_payload)(struct fib_rule *) ;
   void (*flush_cache)(struct fib_rules_ops *) ;
   int nlgroup ;
   struct nla_policy *policy ;
   struct list_head rules_list ;
   struct module *owner ;
   struct net *fro_net ;
   struct callback_head rcu ;
};
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct l3mdev_ops {
   u32 (*l3mdev_fib_table)(struct net_device *) ;
   struct sk_buff *(*l3mdev_l3_rcv)(struct net_device *, struct sk_buff *, u16 ) ;
   struct sk_buff *(*l3mdev_l3_out)(struct net_device *, struct sock *, struct sk_buff *, u16 ) ;
   struct dst_entry *(*l3mdev_link_scope_lookup)(struct net_device *, struct flowi6 *) ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
struct __anonstruct_socket_lock_t_903 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/l3mdev.h"
typedef struct __anonstruct_socket_lock_t_903 socket_lock_t;
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto;
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u32 __portpair;
#line 114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
typedef __u64 __addrpair;
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_905 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_904 {
   __addrpair skc_addrpair ;
   struct __anonstruct_905 __anonCompField___anonunion_904_189 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_906 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_908 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_907 {
   __portpair skc_portpair ;
   struct __anonstruct_908 __anonCompField___anonunion_907_192 ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_909 {
   struct hlist_node skc_bind_node ;
   struct hlist_node skc_portaddr_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_910 {
   unsigned long skc_flags ;
   struct sock *skc_listener ;
   struct inet_timewait_death_row *skc_tw_dr ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_911 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_912 {
   int skc_incoming_cpu ;
   u32 skc_rcv_wnd ;
   u32 skc_tw_rcv_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_913 {
   u32 skc_rxhash ;
   u32 skc_window_clamp ;
   u32 skc_tw_snd_nxt ;
};
#line 146  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock_common {
   union __anonunion_904 __anonCompField_sock_common_190 ;
   union __anonunion_906 __anonCompField_sock_common_191 ;
   union __anonunion_907 __anonCompField_sock_common_193 ;
   unsigned short skc_family ;
   unsigned char skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 1 ;
   unsigned char skc_ipv6only : 1 ;
   unsigned char skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_909 __anonCompField_sock_common_194 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   union __anonunion_910 __anonCompField_sock_common_195 ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_911 __anonCompField_sock_common_196 ;
   unsigned short skc_tx_queue_mapping ;
   unsigned short skc_rx_queue_mapping ;
   union __anonunion_912 __anonCompField_sock_common_197 ;
   refcount_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
   union __anonunion_913 __anonCompField_sock_common_198 ;
};
#line 231 
struct bpf_sk_storage;
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct __anonstruct_sk_backlog_914 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_915 {
   struct socket_wq *sk_wq ;
   struct socket_wq *sk_wq_raw ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_916 {
   struct sk_buff *sk_send_head ;
   struct rb_root tcp_rtx_queue ;
};
#line 323  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   atomic_t sk_drops ;
   int sk_rcvlowat ;
   struct sk_buff_head sk_error_queue ;
   struct sk_buff *sk_rx_skb_cache ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_914 sk_backlog ;
   int sk_forward_alloc ;
   unsigned int sk_ll_usec ;
   unsigned int sk_napi_id ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   union __anonunion_915 __anonCompField_sock_199 ;
   struct xfrm_policy *sk_policy[2U] ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   int sk_wmem_queued ;
   refcount_t sk_wmem_alloc ;
   unsigned long sk_tsq_flags ;
   union __anonunion_916 __anonCompField_sock_200 ;
   struct sk_buff *sk_tx_skb_cache ;
   struct sk_buff_head sk_write_queue ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   __u32 sk_dst_pending_confirm ;
   u32 sk_pacing_status ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   __u32 sk_priority ;
   __u32 sk_mark ;
   unsigned long sk_pacing_rate ;
   unsigned long sk_max_pacing_rate ;
   struct page_frag sk_frag ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   netdev_features_t sk_route_forced_caps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   gfp_t sk_allocation ;
   __u32 sk_txhash ;
   unsigned int __sk_flags_offset[0U] ;
   unsigned int sk_padding : 1 ;
   unsigned int sk_kern_sock : 1 ;
   unsigned int sk_no_check_tx : 1 ;
   unsigned int sk_no_check_rx : 1 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   u16 sk_gso_max_segs ;
   u8 sk_pacing_shift ;
   unsigned long sk_lingertime ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   kuid_t sk_uid ;
   struct pid *sk_peer_pid ;
   struct cred *sk_peer_cred ;
   long sk_rcvtimeo ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u8 sk_shutdown ;
   u32 sk_tskey ;
   atomic_t sk_zckey ;
   u8 sk_clockid ;
   u8 sk_txtime_deadline_mode : 1 ;
   u8 sk_txtime_report_errors : 1 ;
   u8 sk_txtime_unused : 6 ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   void *sk_security ;
   struct sock_cgroup_data sk_cgrp_data ;
   struct mem_cgroup *sk_memcg ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   struct sk_buff *(*sk_validate_xmit_skb)(struct sock *, struct net_device *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
   struct sock_reuseport *sk_reuseport_cb ;
   struct bpf_sk_storage *sk_bpf_storage ;
   struct callback_head sk_rcu ;
};
#line 1048 
struct request_sock_ops;
#line 1049 
struct timewait_sock_ops;
#line 1050 
struct raw_hashinfo;
#line 1051 
struct smc_hashinfo;
#line 1071 
struct udp_table;
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
union __anonunion_h_951 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
   struct smc_hashinfo *smc_hash ;
};
#line 1071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*pre_connect)(struct sock *, struct sockaddr *, int ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *, bool ) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   void (*keepalive)(struct sock *, int ) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   int (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock *, int ) ;
   bool (*stream_memory_read)(struct sock *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   void (*leave_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   unsigned long *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   u32 sysctl_wmem_offset ;
   u32 sysctl_rmem_offset ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   slab_flags_t slab_flags ;
   unsigned int useroffset ;
   unsigned int usersize ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_951 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*diag_destroy)(struct sock *, int ) ;
} __attribute__((__designated_init__));
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock_ops {
   int family ;
   unsigned int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock *) ;
};
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   u16 mss ;
   u8 num_retrans ;
   u8 cookie_ts : 1 ;
   u8 num_timeout : 7 ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_max_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_min_hop_limit ;
   __s32 accept_ra_pinfo ;
   __s32 ignore_routes_with_linkdown ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_min_plen ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 drop_unicast_in_l2_multicast ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   __s32 drop_unsolicited_na ;
   struct ipv6_stable_secret stable_secret ;
   __s32 use_oif_addrs_only ;
   __s32 keep_addr_on_down ;
   __s32 seg6_enabled ;
   __s32 seg6_require_hmac ;
   __u32 enhanced_dad ;
   __u32 addr_gen_mode ;
   __s32 disable_policy ;
   __s32 ndisc_tclass ;
   struct ctl_table_header *sysctl_header ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/timewait_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/inet_ecn.h"
typedef u32 codel_time_t;
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_queue_params {
   u16 txop ;
   u16 cw_min ;
   u16 cw_max ;
   u8 aifs ;
   bool acm ;
   bool uapsd ;
   bool mu_edca ;
   struct ieee80211_he_mu_edca_param_ac_rec mu_edca_param_rec ;
};
#line 184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_low_level_stats {
   unsigned int dot11ACKFailureCount ;
   unsigned int dot11RTSFailureCount ;
   unsigned int dot11FCSErrorCount ;
   unsigned int dot11RTSSuccessCount ;
};
#line 225  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_chanctx_conf {
   struct cfg80211_chan_def def ;
   struct cfg80211_chan_def min_def ;
   u8 rx_chains_static ;
   u8 rx_chains_dynamic ;
   bool radar_enabled ;
   u8 drv_priv[0U] ;
};
#line 235 
enum ieee80211_chanctx_switch_mode {
    CHANCTX_SWMODE_REASSIGN_VIF = 0,
    CHANCTX_SWMODE_SWAP_CONTEXTS = 1
};
#line 267 
struct ieee80211_vif;
#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif_chanctx_switch {
   struct ieee80211_vif *vif ;
   struct ieee80211_chanctx_conf *old_ctx ;
   struct ieee80211_chanctx_conf *new_ctx ;
};
#line 304 
enum ieee80211_event_type {
    RSSI_EVENT = 0,
    MLME_EVENT = 1,
    BAR_RX_EVENT = 2,
    BA_FRAME_TIMEOUT = 3
};
#line 311 
enum ieee80211_rssi_event_data {
    RSSI_EVENT_HIGH = 0,
    RSSI_EVENT_LOW = 1
};
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rssi_event {
   enum ieee80211_rssi_event_data data ;
};
#line 395 
enum ieee80211_mlme_event_data {
    AUTH_EVENT = 0,
    ASSOC_EVENT = 1,
    DEAUTH_RX_EVENT = 2,
    DEAUTH_TX_EVENT = 3
};
#line 402 
enum ieee80211_mlme_event_status {
    MLME_SUCCESS = 0,
    MLME_DENIED = 1,
    MLME_TIMEOUT = 2
};
#line 428  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mlme_event {
   enum ieee80211_mlme_event_data data ;
   enum ieee80211_mlme_event_status status ;
   u16 reason ;
};
#line 440 
struct ieee80211_sta;
#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ba_event {
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_u_1023 {
   struct ieee80211_rssi_event rssi ;
   struct ieee80211_mlme_event mlme ;
   struct ieee80211_ba_event ba ;
};
#line 454  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_event {
   enum ieee80211_event_type type ;
   union __anonunion_u_1023 u ;
};
#line 471  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_mu_group_data {
   u8 membership[8U] ;
   u8 position[16U] ;
};
#line 484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ftm_responder_params {
   u8 *lci ;
   u8 *civicloc ;
   size_t lci_len ;
   size_t civicloc_len ;
};
#line 608  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_bss_conf {
   u8 *bssid ;
   u8 bss_color ;
   u8 htc_trig_based_pkt_ext ;
   bool multi_sta_back_32bit ;
   bool uora_exists ;
   bool ack_enabled ;
   u8 uora_ocw_range ;
   u16 frame_time_rts_th ;
   bool he_support ;
   bool twt_requester ;
   bool twt_responder ;
   bool assoc ;
   bool ibss_joined ;
   bool ibss_creator ;
   u16 aid ;
   bool use_cts_prot ;
   bool use_short_preamble ;
   bool use_short_slot ;
   bool enable_beacon ;
   u8 dtim_period ;
   u16 beacon_int ;
   u16 assoc_capability ;
   u64 sync_tsf ;
   u32 sync_device_ts ;
   u8 sync_dtim_count ;
   u32 basic_rates ;
   struct ieee80211_rate *beacon_rate ;
   int mcast_rate[4U] ;
   u16 ht_operation_mode ;
   s32 cqm_rssi_thold ;
   u32 cqm_rssi_hyst ;
   s32 cqm_rssi_low ;
   s32 cqm_rssi_high ;
   struct cfg80211_chan_def chandef ;
   struct ieee80211_mu_group_data mu_group ;
   __be32 arp_addr_list[4U] ;
   int arp_addr_cnt ;
   bool qos ;
   bool idle ;
   bool ps ;
   u8 ssid[32U] ;
   size_t ssid_len ;
   bool hidden_ssid ;
   int txpower ;
   enum nl80211_tx_power_setting txpower_type ;
   struct ieee80211_p2p_noa_attr p2p_noa_attr ;
   bool allow_p2p_go_ps ;
   u16 max_idle_period ;
   bool protected_keep_alive ;
   bool ftm_responder ;
   struct ieee80211_ftm_responder_params *ftmr_params ;
   bool nontransmitted ;
   u8 transmitter_bssid[6U] ;
   u8 bssid_index ;
   u8 bssid_indicator ;
   bool ema_ap ;
   u8 profile_periodicity ;
   struct ieee80211_he_operation he_operation ;
   struct ieee80211_he_obss_pd he_obss_pd ;
};
#line 930  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_rate {
   s8 idx ;
   u16 count : 5 ;
   u16 flags : 11 ;
} __attribute__((__packed__));
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1027 {
   struct ieee80211_tx_rate rates[4U] ;
   s8 rts_cts_rate_idx ;
   u8 use_rts : 1 ;
   u8 use_cts_prot : 1 ;
   u8 short_preamble : 1 ;
   u8 skip_table : 1 ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1026 {
   struct __anonstruct_1027 __anonCompField___anonunion_1026_203 ;
   unsigned long jiffies ;
};
#line 1004 
struct ieee80211_key_conf;
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_control_1025 {
   union __anonunion_1026 __anonCompField___anonstruct_control_1025_204 ;
   struct ieee80211_vif *vif ;
   struct ieee80211_key_conf *hw_key ;
   u32 flags ;
   codel_time_t enqueue_time ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ack_1028 {
   u64 cookie ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_status_1029 {
   struct ieee80211_tx_rate rates[4U] ;
   s32 ack_signal ;
   u8 ampdu_ack_len ;
   u8 ampdu_len ;
   u8 antenna ;
   u16 tx_time ;
   bool is_valid_ack_signal ;
   void *status_driver_data[2U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_1030 {
   struct ieee80211_tx_rate driver_rates[4U] ;
   u8 pad[4U] ;
   void *rate_driver_data[3U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1024 {
   struct __anonstruct_control_1025 control ;
   struct __anonstruct_ack_1028 ack ;
   struct __anonstruct_status_1029 status ;
   struct __anonstruct_1030 __anonCompField___anonunion_1024_205 ;
   void *driver_data[5U] ;
};
#line 1004  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_info {
   u32 flags ;
   u8 band ;
   u8 hw_queue ;
   u16 ack_frame_id : 6 ;
   u16 tx_time_est : 10 ;
   union __anonunion_1024 __anonCompField_ieee80211_tx_info_206 ;
};
#line 1106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_ies {
   u8 *ies[4U] ;
   size_t len[4U] ;
   u8 *common_ies ;
   size_t common_ie_len ;
};
#line 1430 
enum ieee80211_smps_mode {
    IEEE80211_SMPS_AUTOMATIC = 0,
    IEEE80211_SMPS_OFF = 1,
    IEEE80211_SMPS_STATIC = 2,
    IEEE80211_SMPS_DYNAMIC = 3,
    IEEE80211_SMPS_NUM_MODES = 4
};
#line 1522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_conf {
   u32 flags ;
   int power_level ;
   int dynamic_ps_timeout ;
   u16 listen_interval ;
   u8 ps_dtim_period ;
   u8 long_frame_max_tx_count ;
   u8 short_frame_max_tx_count ;
   struct cfg80211_chan_def chandef ;
   bool radar_enabled ;
   enum ieee80211_smps_mode smps_mode ;
};
#line 1556  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_channel_switch {
   u64 timestamp ;
   u32 device_timestamp ;
   bool block_tx ;
   struct cfg80211_chan_def chandef ;
   u8 count ;
   u32 delay ;
};
#line 1627 
struct ieee80211_txq;
#line 1627  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_vif {
   enum nl80211_iftype type ;
   struct ieee80211_bss_conf bss_conf ;
   u8 addr[6U] ;
   bool p2p ;
   bool csa_active ;
   bool mu_mimo_owner ;
   u8 cab_queue ;
   u8 hw_queue[4U] ;
   struct ieee80211_txq *txq ;
   struct ieee80211_chanctx_conf *chanctx_conf ;
   u32 driver_flags ;
   struct dentry *debugfs_dir ;
   unsigned int probe_req_reg ;
   bool txqs_stopped[4U] ;
   u8 drv_priv[0U] ;
};
#line 1772  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_conf {
   atomic64_t tx_pn ;
   u32 cipher ;
   u8 icv_len ;
   u8 iv_len ;
   u8 hw_key_idx ;
   s8 keyidx ;
   u16 flags ;
   u8 keylen ;
   u8 key[0U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_tkip_1032 {
   u32 iv32 ;
   u16 iv16 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_ccmp_1033 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_cmac_1034 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_aes_gmac_1035 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_gcmp_1036 {
   u8 pn[6U] ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_hw_1037 {
   u8 seq[16U] ;
   u8 seq_len ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
union __anonunion_1031 {
   struct __anonstruct_tkip_1032 tkip ;
   struct __anonstruct_ccmp_1033 ccmp ;
   struct __anonstruct_aes_cmac_1034 aes_cmac ;
   struct __anonstruct_aes_gmac_1035 aes_gmac ;
   struct __anonstruct_gcmp_1036 gcmp ;
   struct __anonstruct_hw_1037 hw ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_key_seq {
   union __anonunion_1031 __anonCompField_ieee80211_key_seq_207 ;
};
#line 1846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_cipher_scheme {
   u32 cipher ;
   u16 iftype ;
   u8 hdr_len ;
   u8 pn_len ;
   u8 pn_off ;
   u8 key_idx_off ;
   u8 key_idx_mask ;
   u8 key_idx_shift ;
   u8 mic_len ;
};
#line 1857 
enum set_key_cmd {
    SET_KEY = 0,
    DISABLE_KEY = 1
};
#line 1862 
enum ieee80211_sta_state {
    IEEE80211_STA_NOTEXIST = 0,
    IEEE80211_STA_NONE = 1,
    IEEE80211_STA_AUTH = 2,
    IEEE80211_STA_ASSOC = 3,
    IEEE80211_STA_AUTHORIZED = 4
};
#line 1870 
enum ieee80211_sta_rx_bandwidth {
    IEEE80211_STA_RX_BW_20 = 0,
    IEEE80211_STA_RX_BW_40 = 1,
    IEEE80211_STA_RX_BW_80 = 2,
    IEEE80211_STA_RX_BW_160 = 3
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_rate_1038 {
   s8 idx ;
   u8 count ;
   u8 count_cts ;
   u8 count_rts ;
   u16 flags ;
};
#line 1915  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_rates {
   struct callback_head callback_head ;
   struct __anonstruct_rate_1038 rate[4U] ;
};
#line 1939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta_txpwr {
   s16 power ;
   enum nl80211_tx_power_setting type ;
};
#line 1991  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_sta {
   u32 supp_rates[4U] ;
   u8 addr[6U] ;
   u16 aid ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
   struct ieee80211_sta_he_cap he_cap ;
   u16 max_rx_aggregation_subframes ;
   bool wme ;
   u8 uapsd_queues ;
   u8 max_sp ;
   u8 rx_nss ;
   enum ieee80211_sta_rx_bandwidth bandwidth ;
   enum ieee80211_smps_mode smps_mode ;
   struct ieee80211_sta_rates *rates ;
   bool tdls ;
   bool tdls_initiator ;
   bool mfp ;
   u8 max_amsdu_subframes ;
   u16 max_amsdu_len ;
   bool support_p2p_ps ;
   u16 max_rc_amsdu_len ;
   u16 max_tid_amsdu_len[16U] ;
   struct ieee80211_sta_txpwr txpwr ;
   struct ieee80211_txq *txq[17U] ;
   u8 drv_priv[0U] ;
};
#line 2037 
enum sta_notify_cmd {
    STA_NOTIFY_SLEEP = 0,
    STA_NOTIFY_AWAKE = 1
};
#line 2057  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tx_control {
   struct ieee80211_sta *sta ;
};
#line 2074  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_txq {
   struct ieee80211_vif *vif ;
   struct ieee80211_sta *sta ;
   u8 tid ;
   u8 ac ;
   u8 drv_priv[0U] ;
};
#line 2083 
enum ieee80211_hw_flags {
    IEEE80211_HW_HAS_RATE_CONTROL = 0,
    IEEE80211_HW_RX_INCLUDES_FCS = 1,
    IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING = 2,
    IEEE80211_HW_SIGNAL_UNSPEC = 3,
    IEEE80211_HW_SIGNAL_DBM = 4,
    IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC = 5,
    IEEE80211_HW_SPECTRUM_MGMT = 6,
    IEEE80211_HW_AMPDU_AGGREGATION = 7,
    IEEE80211_HW_SUPPORTS_PS = 8,
    IEEE80211_HW_PS_NULLFUNC_STACK = 9,
    IEEE80211_HW_SUPPORTS_DYNAMIC_PS = 10,
    IEEE80211_HW_MFP_CAPABLE = 11,
    IEEE80211_HW_WANT_MONITOR_VIF = 12,
    IEEE80211_HW_NO_AUTO_VIF = 13,
    IEEE80211_HW_SW_CRYPTO_CONTROL = 14,
    IEEE80211_HW_SUPPORT_FAST_XMIT = 15,
    IEEE80211_HW_REPORTS_TX_ACK_STATUS = 16,
    IEEE80211_HW_CONNECTION_MONITOR = 17,
    IEEE80211_HW_QUEUE_CONTROL = 18,
    IEEE80211_HW_SUPPORTS_PER_STA_GTK = 19,
    IEEE80211_HW_AP_LINK_PS = 20,
    IEEE80211_HW_TX_AMPDU_SETUP_IN_HW = 21,
    IEEE80211_HW_SUPPORTS_RC_TABLE = 22,
    IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF = 23,
    IEEE80211_HW_TIMING_BEACON_ONLY = 24,
    IEEE80211_HW_SUPPORTS_HT_CCK_RATES = 25,
    IEEE80211_HW_CHANCTX_STA_CSA = 26,
    IEEE80211_HW_SUPPORTS_CLONED_SKBS = 27,
    IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS = 28,
    IEEE80211_HW_TDLS_WIDER_BW = 29,
    IEEE80211_HW_SUPPORTS_AMSDU_IN_AMPDU = 30,
    IEEE80211_HW_BEACON_TX_STATUS = 31,
    IEEE80211_HW_NEEDS_UNIQUE_STA_ADDR = 32,
    IEEE80211_HW_SUPPORTS_REORDERING_BUFFER = 33,
    IEEE80211_HW_USES_RSS = 34,
    IEEE80211_HW_TX_AMSDU = 35,
    IEEE80211_HW_TX_FRAG_LIST = 36,
    IEEE80211_HW_REPORTS_LOW_ACK = 37,
    IEEE80211_HW_SUPPORTS_TX_FRAG = 38,
    IEEE80211_HW_SUPPORTS_TDLS_BUFFER_STA = 39,
    IEEE80211_HW_DEAUTH_NEED_MGD_TX_PREP = 40,
    IEEE80211_HW_DOESNT_SUPPORT_QOS_NDP = 41,
    IEEE80211_HW_BUFF_MMPDU_TXQ = 42,
    IEEE80211_HW_SUPPORTS_VHT_EXT_NSS_BW = 43,
    IEEE80211_HW_STA_MMPDU_TXQ = 44,
    IEEE80211_HW_TX_STATUS_NO_AMPDU_LEN = 45,
    IEEE80211_HW_SUPPORTS_MULTI_BSSID = 46,
    IEEE80211_HW_SUPPORTS_ONLY_HE_MULTI_BSSID = 47,
    IEEE80211_HW_AMPDU_KEYBORDER_SUPPORT = 48,
    NUM_IEEE80211_HW_FLAGS = 49
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct __anonstruct_radiotap_timestamp_1039 {
   int units_pos ;
   s16 accuracy ;
};
#line 2487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_hw {
   struct ieee80211_conf conf ;
   struct wiphy *wiphy ;
   char *rate_control_algorithm ;
   void *priv ;
   unsigned long flags[1U] ;
   unsigned int extra_tx_headroom ;
   unsigned int extra_beacon_tailroom ;
   int vif_data_size ;
   int sta_data_size ;
   int chanctx_data_size ;
   int txq_data_size ;
   u16 queues ;
   u16 max_listen_interval ;
   s8 max_signal ;
   u8 max_rates ;
   u8 max_report_rates ;
   u8 max_rate_tries ;
   u16 max_rx_aggregation_subframes ;
   u16 max_tx_aggregation_subframes ;
   u8 max_tx_fragments ;
   u8 offchannel_tx_hw_queue ;
   u8 radiotap_mcs_details ;
   u16 radiotap_vht_details ;
   struct __anonstruct_radiotap_timestamp_1039 radiotap_timestamp ;
   netdev_features_t netdev_features ;
   u8 uapsd_queues ;
   u8 uapsd_max_sp_len ;
   u8 n_cipher_schemes ;
   struct ieee80211_cipher_scheme *cipher_schemes ;
   u8 max_nan_de_entries ;
   u8 tx_sk_pacing_shift ;
   u8 weight_multiplier ;
   u32 max_mtu ;
};
#line 2546  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_scan_request {
   struct ieee80211_scan_ies ies ;
   struct cfg80211_scan_request req ;
};
#line 2566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_tdls_ch_sw_params {
   struct ieee80211_sta *sta ;
   struct cfg80211_chan_def *chandef ;
   u8 action_code ;
   u32 status ;
   u32 timestamp ;
   u16 switch_time ;
   u16 switch_timeout ;
   struct sk_buff *tmpl_skb ;
   u32 ch_sw_tm_ie ;
};
#line 2662 
enum ieee80211_ampdu_mlme_action {
    IEEE80211_AMPDU_RX_START = 0,
    IEEE80211_AMPDU_RX_STOP = 1,
    IEEE80211_AMPDU_TX_START = 2,
    IEEE80211_AMPDU_TX_STOP_CONT = 3,
    IEEE80211_AMPDU_TX_STOP_FLUSH = 4,
    IEEE80211_AMPDU_TX_STOP_FLUSH_CONT = 5,
    IEEE80211_AMPDU_TX_OPERATIONAL = 6
};
#line 3161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ampdu_params {
   enum ieee80211_ampdu_mlme_action action ;
   struct ieee80211_sta *sta ;
   u16 tid ;
   u16 ssn ;
   u16 buf_size ;
   bool amsdu ;
   u16 timeout ;
};
#line 3170 
enum ieee80211_frame_release_type {
    IEEE80211_FRAME_RELEASE_PSPOLL = 0,
    IEEE80211_FRAME_RELEASE_UAPSD = 1
};
#line 3182 
enum ieee80211_roc_type {
    IEEE80211_ROC_TYPE_NORMAL = 0,
    IEEE80211_ROC_TYPE_MGMT_TX = 1
};
#line 3187 
enum ieee80211_reconfig_type {
    IEEE80211_RECONFIG_TYPE_RESTART = 0,
    IEEE80211_RECONFIG_TYPE_SUSPEND = 1
};
#line 3778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_ops {
   void (*tx)(struct ieee80211_hw *, struct ieee80211_tx_control *, struct sk_buff *) ;
   int (*start)(struct ieee80211_hw *) ;
   void (*stop)(struct ieee80211_hw *) ;
   int (*suspend)(struct ieee80211_hw *, struct cfg80211_wowlan *) ;
   int (*resume)(struct ieee80211_hw *) ;
   void (*set_wakeup)(struct ieee80211_hw *, bool ) ;
   int (*add_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*change_interface)(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_iftype , bool ) ;
   void (*remove_interface)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*config)(struct ieee80211_hw *, u32 ) ;
   void (*bss_info_changed)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_bss_conf *, u32 ) ;
   int (*start_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*stop_ap)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u64 (*prepare_multicast)(struct ieee80211_hw *, struct netdev_hw_addr_list *) ;
   void (*configure_filter)(struct ieee80211_hw *, unsigned int , unsigned int *, u64 ) ;
   void (*config_iface_filter)(struct ieee80211_hw *, struct ieee80211_vif *, unsigned int , unsigned int ) ;
   int (*set_tim)(struct ieee80211_hw *, struct ieee80211_sta *, bool ) ;
   int (*set_key)(struct ieee80211_hw *, enum set_key_cmd , struct ieee80211_vif *, struct ieee80211_sta *, struct ieee80211_key_conf *) ;
   void (*update_tkip_key)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_key_conf *, struct ieee80211_sta *, u32 , u16 *) ;
   void (*set_rekey_data)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_gtk_rekey_data *) ;
   void (*set_default_unicast_key)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   int (*hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_scan_request *) ;
   void (*cancel_hw_scan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*sched_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_sched_scan_request *, struct ieee80211_scan_ies *) ;
   int (*sched_scan_stop)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*sw_scan_start)(struct ieee80211_hw *, struct ieee80211_vif *, u8 *) ;
   void (*sw_scan_complete)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*get_stats)(struct ieee80211_hw *, struct ieee80211_low_level_stats *) ;
   void (*get_key_seq)(struct ieee80211_hw *, struct ieee80211_key_conf *, struct ieee80211_key_seq *) ;
   int (*set_frag_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*set_rts_threshold)(struct ieee80211_hw *, u32 ) ;
   int (*sta_add)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_add_debugfs)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct dentry *) ;
   void (*sta_notify)(struct ieee80211_hw *, struct ieee80211_vif *, enum sta_notify_cmd , struct ieee80211_sta *) ;
   int (*sta_set_txpwr)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   int (*sta_state)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, enum ieee80211_sta_state , enum ieee80211_sta_state ) ;
   void (*sta_pre_rcu_remove)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_rc_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u32 ) ;
   void (*sta_rate_tbl_update)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*sta_statistics)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, struct station_info *) ;
   int (*conf_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 , struct ieee80211_tx_queue_params *) ;
   u64 (*get_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*set_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, u64 ) ;
   void (*offset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *, s64 ) ;
   void (*reset_tsf)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*tx_last_beacon)(struct ieee80211_hw *) ;
   int (*ampdu_action)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_ampdu_params *) ;
   int (*get_survey)(struct ieee80211_hw *, int , struct survey_info *) ;
   void (*rfkill_poll)(struct ieee80211_hw *) ;
   void (*set_coverage_class)(struct ieee80211_hw *, s16 ) ;
   int (*testmode_cmd)(struct ieee80211_hw *, struct ieee80211_vif *, void *, int ) ;
   int (*testmode_dump)(struct ieee80211_hw *, struct sk_buff *, struct netlink_callback *, void *, int ) ;
   void (*flush)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , bool ) ;
   void (*channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*set_antenna)(struct ieee80211_hw *, u32 , u32 ) ;
   int (*get_antenna)(struct ieee80211_hw *, u32 *, u32 *) ;
   int (*remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel *, int , enum ieee80211_roc_type ) ;
   int (*cancel_remain_on_channel)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*set_ringparam)(struct ieee80211_hw *, u32 , u32 ) ;
   void (*get_ringparam)(struct ieee80211_hw *, u32 *, u32 *, u32 *, u32 *) ;
   bool (*tx_frames_pending)(struct ieee80211_hw *) ;
   int (*set_bitrate_mask)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_bitrate_mask *) ;
   void (*event_callback)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_event *) ;
   void (*allow_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   void (*release_buffered_frames)(struct ieee80211_hw *, struct ieee80211_sta *, u16 , int , enum ieee80211_frame_release_type , bool ) ;
   int (*get_et_sset_count)(struct ieee80211_hw *, struct ieee80211_vif *, int ) ;
   void (*get_et_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct ethtool_stats *, u64 *) ;
   void (*get_et_strings)(struct ieee80211_hw *, struct ieee80211_vif *, u32 , u8 *) ;
   void (*mgd_prepare_tx)(struct ieee80211_hw *, struct ieee80211_vif *, u16 ) ;
   void (*mgd_protect_tdls_discover)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*add_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*remove_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *) ;
   void (*change_chanctx)(struct ieee80211_hw *, struct ieee80211_chanctx_conf *, u32 ) ;
   int (*assign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   void (*unassign_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_chanctx_conf *) ;
   int (*switch_vif_chanctx)(struct ieee80211_hw *, struct ieee80211_vif_chanctx_switch *, int , enum ieee80211_chanctx_switch_mode ) ;
   void (*reconfig_complete)(struct ieee80211_hw *, enum ieee80211_reconfig_type ) ;
   void (*ipv6_addr_change)(struct ieee80211_hw *, struct ieee80211_vif *, struct inet6_dev *) ;
   void (*channel_switch_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_chan_def *) ;
   int (*pre_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*post_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*abort_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*channel_switch_rx_beacon)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_channel_switch *) ;
   int (*join_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   void (*leave_ibss)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   u32 (*get_expected_throughput)(struct ieee80211_hw *, struct ieee80211_sta *) ;
   int (*get_txpower)(struct ieee80211_hw *, struct ieee80211_vif *, int *) ;
   int (*tdls_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *, u8 , struct cfg80211_chan_def *, struct sk_buff *, u32 ) ;
   void (*tdls_cancel_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_sta *) ;
   void (*tdls_recv_channel_switch)(struct ieee80211_hw *, struct ieee80211_vif *, struct ieee80211_tdls_ch_sw_params *) ;
   void (*wake_tx_queue)(struct ieee80211_hw *, struct ieee80211_txq *) ;
   void (*sync_rx_queues)(struct ieee80211_hw *) ;
   int (*start_nan)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *) ;
   int (*stop_nan)(struct ieee80211_hw *, struct ieee80211_vif *) ;
   int (*nan_change_conf)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_conf *, u32 ) ;
   int (*add_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_nan_func *) ;
   void (*del_nan_func)(struct ieee80211_hw *, struct ieee80211_vif *, u8 ) ;
   bool (*can_aggregate_in_amsdu)(struct ieee80211_hw *, struct sk_buff *, struct sk_buff *) ;
   int (*get_ftm_responder_stats)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_ftm_responder_stats *) ;
   int (*start_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
   void (*abort_pmsr)(struct ieee80211_hw *, struct ieee80211_vif *, struct cfg80211_pmsr_request *) ;
};
#line 6481 
struct b43legacy_wldev;
#line 6482 
struct b43legacy_txstatus;
#line 6483 
enum b43legacy_dyndbg {
    B43legacy_DBG_XMITPOWER = 0,
    B43legacy_DBG_DMAOVERFLOW = 1,
    B43legacy_DBG_DMAVERBOSE = 2,
    B43legacy_DBG_PWORK_FAST = 3,
    B43legacy_DBG_PWORK_STOP = 4,
    __B43legacy_NR_DYNDBG = 5
};
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.h"
struct b43legacy_txstatus_log {
   struct b43legacy_txstatus *log ;
   int end ;
   spinlock_t lock ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.h"
struct b43legacy_dfs_file {
   struct dentry *dentry ;
   char *buffer ;
   size_t data_len ;
};
#line 36  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.h"
struct b43legacy_dfsentry {
   struct b43legacy_wldev *dev ;
   struct dentry *subdir ;
   struct b43legacy_dfs_file file_tsf ;
   struct b43legacy_dfs_file file_ucode_regs ;
   struct b43legacy_dfs_file file_shm ;
   struct b43legacy_dfs_file file_txstat ;
   struct b43legacy_dfs_file file_txpower_g ;
   struct b43legacy_dfs_file file_restart ;
   struct b43legacy_dfs_file file_loctls ;
   struct b43legacy_txstatus_log txstatlog ;
   bool dyn_debug[5U] ;
   struct dentry *dyn_debug_dentries[5U] ;
};
#line 64 
struct led_pattern;
#line 65 
enum led_brightness {
    LED_OFF = 0,
    LED_ON = 1,
    LED_HALF = 127,
    LED_FULL = 255
};
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_classdev {
   char *name ;
   enum led_brightness brightness ;
   enum led_brightness max_brightness ;
   int flags ;
   unsigned long work_flags ;
   void (*brightness_set)(struct led_classdev *, enum led_brightness ) ;
   int (*brightness_set_blocking)(struct led_classdev *, enum led_brightness ) ;
   enum led_brightness (*brightness_get)(struct led_classdev *) ;
   int (*blink_set)(struct led_classdev *, unsigned long *, unsigned long *) ;
   int (*pattern_set)(struct led_classdev *, struct led_pattern *, u32 , int ) ;
   int (*pattern_clear)(struct led_classdev *) ;
   struct device *dev ;
   struct attribute_group **groups ;
   struct list_head node ;
   char *default_trigger ;
   unsigned long blink_delay_on ;
   unsigned long blink_delay_off ;
   struct timer_list blink_timer ;
   int blink_brightness ;
   int new_blink_brightness ;
   void (*flash_resume)(struct led_classdev *) ;
   struct work_struct set_brightness_work ;
   int delayed_set_value ;
   struct rw_semaphore trigger_lock ;
   struct led_trigger *trigger ;
   struct list_head trig_list ;
   void *trigger_data ;
   bool activated ;
   int brightness_hw_changed ;
   struct kernfs_node *brightness_hw_changed_kn ;
   struct mutex led_access ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_trigger {
   char *name ;
   int (*activate)(struct led_classdev *) ;
   void (*deactivate)(struct led_classdev *) ;
   rwlock_t leddev_list_lock ;
   struct list_head led_cdevs ;
   struct list_head next_trig ;
   struct attribute_group **groups ;
};
#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_pattern {
   u32 delta_t ;
   int brightness ;
};
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.h"
struct b43legacy_led {
   struct b43legacy_wldev *dev ;
   struct led_classdev led_dev ;
   u8 index ;
   bool activelow ;
   char name[32U] ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
struct b43legacy_dmaring;
#line 204 
struct b43legacy_pioqueue;
#line 363  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_fw_header {
   u8 type ;
   u8 ver ;
   u8 __padding[2U] ;
   __be32 size ;
} __attribute__((__packed__));
#line 377  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
union __anonunion_data_1041 {
   __be16 d16 ;
   __be32 d32 ;
};
#line 377  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_iv {
   __be16 offset_size ;
   union __anonunion_data_1041 data ;
} __attribute__((__packed__));
#line 392  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_lopair {
   s8 low ;
   s8 high ;
   u8 used : 1 ;
};
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct __anonstruct_radio_off_context_1042 {
   bool valid ;
   u16 rfover ;
   u16 rfoverval ;
};
#line 399 
struct b43legacy_txpower_lo_control;
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct __anonstruct_1043 {
   u16 rfatt ;
   u16 bbatt ;
   u16 txctl1 ;
   u16 txctl2 ;
};
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct __anonstruct_1044 {
   u16 txpwr_offset ;
};
#line 399  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_phy {
   u8 possible_phymodes ;
   bool gmode ;
   u8 analog ;
   u8 type ;
   u8 rev ;
   u16 antenna_diversity ;
   u16 savedpctlreg ;
   u16 radio_manuf ;
   u16 radio_ver ;
   u8 calibrated : 1 ;
   u8 radio_rev ;
   bool dyn_tssi_tbl ;
   bool aci_enable ;
   bool aci_wlan_automatic ;
   bool aci_hw_rssi ;
   bool radio_on ;
   struct __anonstruct_radio_off_context_1042 radio_off_context ;
   u16 minlowsig[2U] ;
   u16 minlowsigpos[2U] ;
   struct b43legacy_lopair *_lo_pairs ;
   s8 *tssi2dbm ;
   s8 idle_tssi ;
   int tgt_idle_tssi ;
   int cur_idle_tssi ;
   struct b43legacy_txpower_lo_control *lo_control ;
   s16 max_lb_gain ;
   s16 trsw_rx_gain ;
   s16 lna_lod_gain ;
   s16 lna_gain ;
   s16 pga_gain ;
   u8 power_level ;
   u16 loopback_gain[2U] ;
   struct __anonstruct_1043 __anonCompField_b43legacy_phy_208 ;
   struct __anonstruct_1044 __anonCompField_b43legacy_phy_209 ;
   int interfmode ;
   u32 interfstack[26U] ;
   s16 nrssi[2U] ;
   s32 nrssislope ;
   s8 nrssi_lt[64U] ;
   u8 channel ;
   u16 lofcal ;
   u16 initval ;
   atomic_t txerr_cnt ;
   bool manual_txpower_control ;
   bool phy_locked ;
};
#line 522  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_dma {
   struct b43legacy_dmaring *tx_ring0 ;
   struct b43legacy_dmaring *tx_ring1 ;
   struct b43legacy_dmaring *tx_ring2 ;
   struct b43legacy_dmaring *tx_ring3 ;
   struct b43legacy_dmaring *tx_ring4 ;
   struct b43legacy_dmaring *tx_ring5 ;
   struct b43legacy_dmaring *rx_ring0 ;
   struct b43legacy_dmaring *rx_ring3 ;
   u32 translation ;
};
#line 537  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_pio {
   struct b43legacy_pioqueue *queue0 ;
   struct b43legacy_pioqueue *queue1 ;
   struct b43legacy_pioqueue *queue2 ;
   struct b43legacy_pioqueue *queue3 ;
};
#line 545  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_noise_calculation {
   u8 channel_at_start ;
   bool calculation_running ;
   u8 nr_samples ;
   s8 samples[8U][4U] ;
};
#line 552  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_stats {
   u8 link_noise ;
   unsigned long last_tx ;
   unsigned long last_rx ;
};
#line 559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_key {
   void *keyconf ;
   bool enabled ;
   u8 algorithm ;
};
#line 570  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_qos_params {
   struct ieee80211_tx_queue_params p ;
};
#line 576  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_wl {
   struct b43legacy_wldev *current_dev ;
   struct ieee80211_hw *hw ;
   spinlock_t irq_lock ;
   struct mutex mutex ;
   spinlock_t leds_lock ;
   struct work_struct firmware_load ;
   struct ieee80211_vif *vif ;
   u8 mac_addr[6U] ;
   u8 bssid[6U] ;
   int if_type ;
   bool operating ;
   unsigned int filter_flags ;
   struct ieee80211_low_level_stats ieee_stats ;
   struct hwrng rng ;
   u8 rng_initialized ;
   char rng_name[31U] ;
   struct list_head devlist ;
   u8 nr_devs ;
   bool radiotap_enabled ;
   bool radio_enabled ;
   struct sk_buff *current_beacon ;
   bool beacon0_uploaded ;
   bool beacon1_uploaded ;
   bool beacon_templates_virgin ;
   struct work_struct beacon_update_trigger ;
   struct b43legacy_qos_params qos_params[4U] ;
   struct work_struct tx_work ;
   struct sk_buff_head tx_queue[4U] ;
   bool tx_queue_stopped[4U] ;
};
#line 642  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_firmware {
   struct firmware *ucode ;
   struct firmware *pcm ;
   struct firmware *initvals ;
   struct firmware *initvals_band ;
   u16 rev ;
   u16 patch ;
};
#line 678  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
union __anonunion_1045 {
   struct b43legacy_dma dma ;
   struct b43legacy_pio pio ;
};
#line 678  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
struct b43legacy_wldev {
   struct ssb_device *dev ;
   struct b43legacy_wl *wl ;
   atomic_t __init_status ;
   int suspend_init_status ;
   bool __using_pio ;
   bool bad_frames_preempt ;
   bool dfq_valid ;
   bool short_preamble ;
   bool radio_hw_enable ;
   struct b43legacy_phy phy ;
   union __anonunion_1045 __anonCompField_b43legacy_wldev_210 ;
   struct b43legacy_stats stats ;
   struct b43legacy_led led_tx ;
   struct b43legacy_led led_rx ;
   struct b43legacy_led led_assoc ;
   struct b43legacy_led led_radio ;
   u32 irq_reason ;
   u32 dma_reason[6U] ;
   u32 irq_mask ;
   struct b43legacy_noise_calculation noisecalc ;
   int mac_suspended ;
   struct tasklet_struct isr_tasklet ;
   struct delayed_work periodic_work ;
   unsigned int periodic_state ;
   struct work_struct restart_work ;
   u16 ktp ;
   u8 max_nr_keys ;
   struct b43legacy_key key[58U] ;
   struct b43legacy_firmware fw ;
   struct firmware *fwp ;
   struct completion fw_load_complete ;
   struct list_head list ;
   struct b43legacy_dfsentry *dfsentry ;
};
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
struct b43legacy_dmadesc_meta {
   struct sk_buff *skb ;
   dma_addr_t dmaaddr ;
   bool is_last_fragment ;
};
#line 116 
enum b43legacy_dmatype {
    B43legacy_DMA_30BIT = 30,
    B43legacy_DMA_32BIT = 32
};
#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
struct b43legacy_dmaring {
   void *descbase ;
   struct b43legacy_dmadesc_meta *meta ;
   u8 *txhdr_cache ;
   dma_addr_t dmabase ;
   int nr_slots ;
   int used_slots ;
   int current_slot ;
   u32 frameoffset ;
   u16 rx_buffersize ;
   u16 mmio_base ;
   int index ;
   bool tx ;
   enum b43legacy_dmatype type ;
   bool stopped ;
   u8 queue_prio ;
   struct b43legacy_wldev *dev ;
   int max_used_slots ;
   unsigned long last_injected_overflow ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
struct b43legacy_pio_txpacket {
   struct b43legacy_pioqueue *queue ;
   struct sk_buff *skb ;
   struct list_head list ;
};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
struct b43legacy_pioqueue {
   struct b43legacy_wldev *dev ;
   u16 mmio_base ;
   bool tx_suspended ;
   bool tx_frozen ;
   bool need_workarounds ;
   u16 tx_devq_size ;
   u16 tx_devq_used ;
   u8 tx_devq_packets ;
   struct list_head txfree ;
   unsigned int nr_txfree ;
   struct list_head txqueue ;
   struct list_head txrunning ;
   struct tasklet_struct txtask ;
   struct b43legacy_pio_txpacket tx_packets_cache[256U] ;
};
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
union __anonunion_1046 {
   __le32 data ;
   __u8 raw[4U] ;
} __attribute__((__packed__));
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
struct b43legacy_plcp_hdr4 {
   union __anonunion_1046 __anonCompField_b43legacy_plcp_hdr4_211 ;
} __attribute__((__packed__));
#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
struct b43legacy_txstatus {
   u16 cookie ;
   u16 seq ;
   u8 phy_stat ;
   u8 frame_count ;
   u8 rts_count ;
   u8 supp_reason ;
   u8 pm_indicated ;
   u8 intermediate ;
   u8 for_ampdu ;
   u8 acked ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
struct led_init_data {
   struct fwnode_handle *fwnode ;
   char *default_label ;
   char *devicename ;
   bool devname_mandatory ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.h"
enum b43legacy_led_behaviour {
    B43legacy_LED_OFF = 0,
    B43legacy_LED_ON = 1,
    B43legacy_LED_ACTIVITY = 2,
    B43legacy_LED_RADIO_ALL = 3,
    B43legacy_LED_RADIO_A = 4,
    B43legacy_LED_RADIO_B = 5,
    B43legacy_LED_MODE_BG = 6,
    B43legacy_LED_TRANSFER = 7,
    B43legacy_LED_APTRANSFER = 8,
    B43legacy_LED_WEIRD = 9,
    B43legacy_LED_ASSOC = 10,
    B43legacy_LED_INACTIVE = 11
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_2193 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 821  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char *, size_t ) ;
};
#line 263  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
struct __ssb_dev_wrapper {
   struct device dev ;
   struct ssb_device *sdev ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
struct b43legacy_dmadesc32 {
   __le32 control ;
   __le32 address ;
} __attribute__((__packed__));
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
struct b43legacy_hwtxstatus {
   u8 __p4dding119[4U] ;
   __le16 cookie ;
   u8 flags ;
   u8 count ;
   u8 __p4dding123[2U] ;
   __le16 seq ;
   u8 phy_stat ;
   u8 __p4dding126[1U] ;
} __attribute__((__packed__));
#line 131  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
struct b43legacy_rxhdr_fw3 {
   __le16 frame_len ;
   u8 __p4dding133[2U] ;
   __le16 phy_status0 ;
   __u8 jssi ;
   __u8 sig_qual ;
   u8 __p4dding137[2U] ;
   __le16 phy_status3 ;
   __le16 mac_status ;
   __le16 mac_time ;
   __le16 channel ;
} __attribute__((__packed__));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_4286 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 1110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_rts {
   __le16 frame_control ;
   __le16 duration ;
   u8 ra[6U] ;
   u8 ta[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 1117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
struct ieee80211_cts {
   __le16 frame_control ;
   __le16 duration ;
   u8 ra[6U] ;
} __attribute__((__packed__, __aligned__(2)));
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status;
#line 1358  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
struct ieee80211_rx_status {
   u64 mactime ;
   u64 boottime_ns ;
   u32 device_timestamp ;
   u32 ampdu_reference ;
   u32 flag ;
   u16 freq ;
   u8 enc_flags ;
   u8 encoding : 2 ;
   u8 bw : 3 ;
   u8 he_ru : 3 ;
   u8 he_gi : 2 ;
   u8 he_dcm : 1 ;
   u8 rate_idx ;
   u8 nss ;
   u8 rx_flags ;
   u8 band ;
   u8 antenna ;
   s8 signal ;
   u8 chains ;
   s8 chain_signal[4U] ;
   u8 ampdu_delimiter_crc ;
   u8 zero_length_psdu_type ;
};
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
union __anonunion_6311 {
   __le32 data ;
   __u8 raw[6U] ;
} __attribute__((__packed__));
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
struct b43legacy_plcp_hdr6 {
   union __anonunion_6311 __anonCompField_b43legacy_plcp_hdr6_212 ;
} __attribute__((__packed__));
#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
struct b43legacy_txhdr_fw3 {
   __le32 mac_ctl ;
   __le16 mac_frame_ctl ;
   __le16 tx_fes_time_norm ;
   __le16 phy_ctl ;
   __u8 iv[16U] ;
   __u8 tx_receiver[6U] ;
   __le16 tx_fes_time_fb ;
   struct b43legacy_plcp_hdr4 rts_plcp_fb ;
   __le16 rts_dur_fb ;
   struct b43legacy_plcp_hdr4 plcp_fb ;
   __le16 dur_fb ;
   u8 __p4dding37[2U] ;
   __le16 cookie ;
   __le16 unknown_scb_stuff ;
   struct b43legacy_plcp_hdr6 rts_plcp ;
   __u8 rts_frame[18U] ;
   struct b43legacy_plcp_hdr6 plcp ;
} __attribute__((__packed__));
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_6384 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
struct b43legacy_debugfs_fops {
   ssize_t (*read)(struct b43legacy_wldev *, char *, size_t ) ;
   int (*write)(struct b43legacy_wldev *, char *, size_t ) ;
   struct file_operations fops ;
   size_t file_struct_offset ;
   bool take_irqlock ;
};
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_7377 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_7379 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 268  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
union __anonunion___u_7381 {
   struct list_head *__val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
union txhdr_union {
   struct b43legacy_txhdr_fw3 txhdr_fw3 ;
};
#line 31  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
union __anonunion___u_8478 {
   int __val ;
   char __c[1U] ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 197 
enum hrtimer_restart;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
struct device_private {
   void *driver_data ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/idr.h"
struct ida {
   struct xarray xa ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root_cached waiters ;
   struct task_struct *owner ;
   int save_state ;
   char *name ;
   char *file ;
   int line ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm;
#line 28 
struct i2c_adapter;
#line 29 
struct i2c_client;
#line 33 
enum i2c_slave_event;
#line 33 
enum i2c_slave_event;
#line 314  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int init_irq ;
   int irq ;
   struct list_head detected ;
   int (*slave_cb)(struct i2c_client *, enum i2c_slave_event , u8 *) ;
};
#line 360 
enum i2c_slave_event {
    I2C_SLAVE_READ_REQUESTED = 0,
    I2C_SLAVE_WRITE_REQUESTED = 1,
    I2C_SLAVE_READ_PROCESSED = 2,
    I2C_SLAVE_WRITE_RECEIVED = 3,
    I2C_SLAVE_STOP = 4
};
#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*master_xfer_atomic)(struct i2c_adapter *, struct i2c_msg *, int ) ;
   int (*smbus_xfer)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   int (*smbus_xfer_atomic)(struct i2c_adapter *, u16 , unsigned short , char , u8 , int , union i2c_smbus_data *) ;
   u32 (*functionality)(struct i2c_adapter *) ;
   int (*reg_slave)(struct i2c_client *) ;
   int (*unreg_slave)(struct i2c_client *) ;
};
#line 565  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_lock_operations {
   void (*lock_bus)(struct i2c_adapter *, unsigned int ) ;
   int (*trylock_bus)(struct i2c_adapter *, unsigned int ) ;
   void (*unlock_bus)(struct i2c_adapter *, unsigned int ) ;
};
#line 618 
struct gpio_desc;
#line 618  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter *) ;
   int (*get_scl)(struct i2c_adapter *) ;
   void (*set_scl)(struct i2c_adapter *, int ) ;
   int (*get_sda)(struct i2c_adapter *) ;
   void (*set_sda)(struct i2c_adapter *, int ) ;
   int (*get_bus_free)(struct i2c_adapter *) ;
   void (*prepare_recovery)(struct i2c_adapter *) ;
   void (*unprepare_recovery)(struct i2c_adapter *) ;
   struct gpio_desc *scl_gpiod ;
   struct gpio_desc *sda_gpiod ;
};
#line 661  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter_quirks {
   u64 flags ;
   int max_num_msgs ;
   u16 max_write_len ;
   u16 max_read_len ;
   u16 max_comb_1st_msg_len ;
   u16 max_comb_2nd_msg_len ;
};
#line 692  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm *algo ;
   void *algo_data ;
   struct i2c_lock_operations *lock_ops ;
   struct rt_mutex bus_lock ;
   struct rt_mutex mux_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   unsigned long locked_flags ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
   struct i2c_adapter_quirks *quirks ;
   struct irq_domain *host_notify_domain ;
};
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/cdev.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
} __attribute__((__designated_init__));
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-common.h"
struct v4l2_edid {
   __u32 pad ;
   __u32 start_block ;
   __u32 blocks ;
   __u32 reserved[5U] ;
   __u8 *edid ;
};
#line 754 
enum v4l2_priority {
    V4L2_PRIORITY_UNSET = 0,
    V4L2_PRIORITY_BACKGROUND = 1,
    V4L2_PRIORITY_INTERACTIVE = 2,
    V4L2_PRIORITY_RECORD = 3,
    V4L2_PRIORITY_DEFAULT = 2
};
#line 413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_rect {
   __s32 left ;
   __s32 top ;
   __u32 width ;
   __u32 height ;
};
#line 420  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_fract {
   __u32 numerator ;
   __u32 denominator ;
};
#line 1212  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
typedef __u64 v4l2_std_id;
#line 1394  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings {
   __u32 width ;
   __u32 height ;
   __u32 interlaced ;
   __u32 polarities ;
   __u64 pixelclock ;
   __u32 hfrontporch ;
   __u32 hsync ;
   __u32 hbackporch ;
   __u32 vfrontporch ;
   __u32 vsync ;
   __u32 vbackporch ;
   __u32 il_vfrontporch ;
   __u32 il_vsync ;
   __u32 il_vbackporch ;
   __u32 standards ;
   __u32 flags ;
   struct v4l2_fract picture_aspect ;
   __u8 cea861_vic ;
   __u8 hdmi_vic ;
   __u8 reserved[46U] ;
} __attribute__((__packed__));
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_13325 {
   struct v4l2_bt_timings bt ;
   __u32 reserved[32U] ;
};
#line 1517  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings {
   __u32 type ;
   union __anonunion_13325 __anonCompField_v4l2_dv_timings_77 ;
} __attribute__((__packed__));
#line 1536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_enum_dv_timings {
   __u32 index ;
   __u32 pad ;
   __u32 reserved[2U] ;
   struct v4l2_dv_timings timings ;
};
#line 1554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_bt_timings_cap {
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u64 min_pixelclock ;
   __u64 max_pixelclock ;
   __u32 standards ;
   __u32 capabilities ;
   __u32 reserved[16U] ;
} __attribute__((__packed__));
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_13326 {
   struct v4l2_bt_timings_cap bt ;
   __u32 raw_data[32U] ;
};
#line 1581  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dv_timings_cap {
   __u32 type ;
   __u32 pad ;
   __u32 reserved[2U] ;
   union __anonunion_13326 __anonCompField_v4l2_dv_timings_cap_78 ;
};
#line 1803  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_tuner {
   __u32 index ;
   __u8 name[32U] ;
   __u32 type ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 rxsubchans ;
   __u32 audmode ;
   __s32 signal ;
   __s32 afc ;
   __u32 reserved[4U] ;
};
#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_modulator {
   __u32 index ;
   __u8 name[32U] ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 txsubchans ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 1860  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency {
   __u32 tuner ;
   __u32 type ;
   __u32 frequency ;
   __u32 reserved[8U] ;
};
#line 1871  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_frequency_band {
   __u32 tuner ;
   __u32 type ;
   __u32 index ;
   __u32 capability ;
   __u32 rangelow ;
   __u32 rangehigh ;
   __u32 modulation ;
   __u32 reserved[9U] ;
};
#line 2043  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_vbi_format {
   __u32 sampling_rate ;
   __u32 offset ;
   __u32 samples_per_line ;
   __u32 sample_format ;
   __s32 start[2U] ;
   __u32 count[2U] ;
   __u32 flags ;
   __u32 reserved[2U] ;
};
#line 2071  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_format {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 io_size ;
   __u32 reserved[2U] ;
};
#line 2095  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_cap {
   __u16 service_set ;
   __u16 service_lines[2U][24U] ;
   __u32 type ;
   __u32 reserved[3U] ;
};
#line 2106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_sliced_vbi_data {
   __u32 id ;
   __u32 field ;
   __u32 line ;
   __u32 reserved ;
   __u8 data[48U] ;
};
#line 2350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_event_subscription {
   __u32 type ;
   __u32 id ;
   __u32 flags ;
   __u32 reserved[5U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
union __anonunion_13342 {
   __u32 addr ;
   char name[32U] ;
};
#line 2375  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_match {
   __u32 type ;
   union __anonunion_13342 __anonCompField_v4l2_dbg_match_87 ;
} __attribute__((__packed__));
#line 2383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/videodev2.h"
struct v4l2_dbg_register {
   struct v4l2_dbg_match match ;
   __u32 size ;
   __u64 reg ;
   __u64 val ;
} __attribute__((__packed__));
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_device;
#line 57  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_gobj {
   struct media_device *mdev ;
   u32 id ;
   struct list_head list ;
};
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_enum {
   unsigned long *bmap ;
   int idx_max ;
};
#line 88 
struct media_entity;
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_stack_13346 {
   struct media_entity *entity ;
   struct list_head *link ;
};
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_graph {
   struct __anonstruct_stack_13346 stack[16U] ;
   struct media_entity_enum ent_enum ;
   int top ;
};
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pipeline {
   int streaming_count ;
   struct media_graph graph ;
};
#line 132 
struct media_pad;
#line 132 
struct media_interface;
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_13347 {
   struct media_gobj *gobj0 ;
   struct media_pad *source ;
   struct media_interface *intf ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_13348 {
   struct media_gobj *gobj1 ;
   struct media_pad *sink ;
   struct media_entity *entity ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_link {
   struct media_gobj graph_obj ;
   struct list_head list ;
   union __anonunion_13347 __anonCompField_media_link_90 ;
   union __anonunion_13348 __anonCompField_media_link_91 ;
   struct media_link *reverse ;
   unsigned long flags ;
   bool is_backlink ;
};
#line 149 
enum media_pad_signal_type {
    PAD_SIGNAL_DEFAULT = 0,
    PAD_SIGNAL_ANALOG = 1,
    PAD_SIGNAL_DV = 2,
    PAD_SIGNAL_AUDIO = 3
};
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_pad {
   struct media_gobj graph_obj ;
   struct media_entity *entity ;
   u16 index ;
   enum media_pad_signal_type sig_type ;
   unsigned long flags ;
};
#line 214  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity_operations {
   int (*get_fwnode_pad)(struct fwnode_endpoint *) ;
   int (*link_setup)(struct media_entity *, struct media_pad *, struct media_pad *, u32 ) ;
   int (*link_validate)(struct media_link *) ;
};
#line 221 
enum media_entity_type {
    MEDIA_ENTITY_TYPE_BASE = 0,
    MEDIA_ENTITY_TYPE_VIDEO_DEVICE = 1,
    MEDIA_ENTITY_TYPE_V4L2_SUBDEV = 2
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct __anonstruct_dev_13350 {
   u32 major ;
   u32 minor ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
union __anonunion_info_13349 {
   struct __anonstruct_dev_13350 dev ;
};
#line 289  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_entity {
   struct media_gobj graph_obj ;
   char *name ;
   enum media_entity_type obj_type ;
   u32 function ;
   unsigned long flags ;
   u16 num_pads ;
   u16 num_links ;
   u16 num_backlinks ;
   int internal_idx ;
   struct media_pad *pads ;
   struct list_head links ;
   struct media_entity_operations *ops ;
   int stream_count ;
   int use_count ;
   struct media_pipeline *pipe ;
   union __anonunion_info_13349 info ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_interface {
   struct media_gobj graph_obj ;
   struct list_head links ;
   u32 type ;
   u32 flags ;
};
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-entity.h"
struct media_intf_devnode {
   struct media_interface intf ;
   u32 major ;
   u32 minor ;
};
#line 1087 
enum vfl_devnode_type {
    VFL_TYPE_GRABBER = 0,
    VFL_TYPE_VBI = 1,
    VFL_TYPE_RADIO = 2,
    VFL_TYPE_SUBDEV = 3,
    VFL_TYPE_SDR = 4,
    VFL_TYPE_TOUCH = 5,
    VFL_TYPE_MAX = 6
};
#line 1097 
enum vfl_devnode_direction {
    VFL_DIR_RX = 0,
    VFL_DIR_TX = 1,
    VFL_DIR_M2M = 2
};
#line 1104 
struct video_device;
#line 1105 
struct v4l2_device;
#line 1106 
struct v4l2_ctrl_handler;
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_prio_state {
   atomic_t prios[4U] ;
};
#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct v4l2_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl32)(struct file *, unsigned int , unsigned long ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 256 
struct vb2_queue;
#line 256 
struct v4l2_ioctl_ops;
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-dev.h"
struct video_device {
   struct media_entity entity ;
   struct media_intf_devnode *intf_devnode ;
   struct media_pipeline pipe ;
   struct v4l2_file_operations *fops ;
   u32 device_caps ;
   struct device dev ;
   struct cdev *cdev ;
   struct v4l2_device *v4l2_dev ;
   struct device *dev_parent ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct vb2_queue *queue ;
   struct v4l2_prio_state *prio ;
   char name[32U] ;
   enum vfl_devnode_type vfl_type ;
   enum vfl_devnode_direction vfl_dir ;
   int minor ;
   u16 num ;
   unsigned long flags ;
   int index ;
   spinlock_t fh_lock ;
   struct list_head fh_list ;
   int dev_debug ;
   v4l2_std_id tvnorms ;
   void (*release)(struct video_device *) ;
   struct v4l2_ioctl_ops *ioctl_ops ;
   unsigned long valid_ioctls[3U] ;
   struct mutex *lock ;
};
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_subdev;
#line 96 
struct v4l2_subdev_ops;
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-common.h"
struct v4l2_priv_tun_config {
   int tuner ;
   void *priv ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_file_operations {
   struct module *owner ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char *, size_t , loff_t *) ;
   __poll_t (*poll)(struct file *, struct poll_table_struct *) ;
   long (*ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*open)(struct file *) ;
   int (*release)(struct file *) ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-devnode.h"
struct media_devnode {
   struct media_device *media_dev ;
   struct media_file_operations *fops ;
   struct device dev ;
   struct cdev cdev ;
   struct device *parent ;
   int minor ;
   unsigned long flags ;
   void (*release)(struct media_devnode *) ;
};
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_request;
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device_ops {
   int (*link_notify)(struct media_link *, u32 , unsigned int ) ;
   struct media_request *(*req_alloc)(struct media_device *) ;
   void (*req_free)(struct media_request *) ;
   int (*req_validate)(struct media_request *) ;
   void (*req_queue)(struct media_request *) ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/media-device.h"
struct media_device {
   struct device *dev ;
   struct media_devnode *devnode ;
   char model[32U] ;
   char driver_name[32U] ;
   char serial[40U] ;
   char bus_info[32U] ;
   u32 hw_revision ;
   u64 topology_version ;
   u32 id ;
   struct ida entity_internal_idx ;
   int entity_internal_idx_max ;
   struct list_head entities ;
   struct list_head interfaces ;
   struct list_head pads ;
   struct list_head links ;
   struct list_head entity_notify ;
   struct mutex graph_mutex ;
   struct media_graph pm_count_walk ;
   void *source_priv ;
   int (*enable_source)(struct media_entity *, struct media_pipeline *) ;
   void (*disable_source)(struct media_entity *) ;
   struct media_device_ops *ops ;
   struct mutex req_queue_mutex ;
   atomic_t request_id ;
};
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-mediabus.h"
struct v4l2_mbus_framefmt {
   __u32 width ;
   __u32 height ;
   __u32 code ;
   __u32 field ;
   __u32 colorspace ;
   __u16 ycbcr_enc ;
   __u16 quantization ;
   __u16 xfer_func ;
   __u16 reserved[11U] ;
};
#line 48  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_format {
   __u32 which ;
   __u32 pad ;
   struct v4l2_mbus_framefmt format ;
   __u32 reserved[8U] ;
};
#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_mbus_code_enum {
   __u32 pad ;
   __u32 index ;
   __u32 code ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_size_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 min_width ;
   __u32 max_width ;
   __u32 min_height ;
   __u32 max_height ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval {
   __u32 pad ;
   struct v4l2_fract interval ;
   __u32 reserved[9U] ;
};
#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_frame_interval_enum {
   __u32 index ;
   __u32 pad ;
   __u32 code ;
   __u32 width ;
   __u32 height ;
   struct v4l2_fract interval ;
   __u32 which ;
   __u32 reserved[8U] ;
};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/v4l2-subdev.h"
struct v4l2_subdev_selection {
   __u32 which ;
   __u32 pad ;
   __u32 target ;
   __u32 flags ;
   struct v4l2_rect r ;
   __u32 reserved[8U] ;
};
#line 157 
struct v4l2_async_notifier;
#line 158 
enum v4l2_async_match_type {
    V4L2_ASYNC_MATCH_CUSTOM = 0,
    V4L2_ASYNC_MATCH_DEVNAME = 1,
    V4L2_ASYNC_MATCH_I2C = 2,
    V4L2_ASYNC_MATCH_FWNODE = 3
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_i2c_13364 {
   int adapter_id ;
   unsigned short address ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct __anonstruct_custom_13365 {
   bool (*match)(struct device *, struct v4l2_async_subdev *) ;
   void *priv ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
union __anonunion_match_13363 {
   struct fwnode_handle *fwnode ;
   char *device_name ;
   struct __anonstruct_i2c_13364 i2c ;
   struct __anonstruct_custom_13365 custom ;
};
#line 79  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_subdev {
   enum v4l2_async_match_type match_type ;
   union __anonunion_match_13363 match ;
   struct list_head list ;
   struct list_head asd_list ;
};
#line 107  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier_operations {
   int (*bound)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
   int (*complete)(struct v4l2_async_notifier *) ;
   void (*unbind)(struct v4l2_async_notifier *, struct v4l2_subdev *, struct v4l2_async_subdev *) ;
};
#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-async.h"
struct v4l2_async_notifier {
   struct v4l2_async_notifier_operations *ops ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev *sd ;
   struct v4l2_async_notifier *parent ;
   struct list_head asd_list ;
   struct list_head waiting ;
   struct list_head done ;
   struct list_head list ;
};
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_m2m_ctx;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-fh.h"
struct v4l2_fh {
   struct list_head list ;
   struct video_device *vdev ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   enum v4l2_priority prio ;
   wait_queue_head_t wait ;
   struct mutex subscribe_lock ;
   struct list_head subscribed ;
   struct list_head available ;
   unsigned int navailable ;
   u32 sequence ;
   struct v4l2_m2m_ctx *m2m_ctx ;
};
#line 162 
enum v4l2_mbus_type {
    V4L2_MBUS_UNKNOWN = 0,
    V4L2_MBUS_PARALLEL = 1,
    V4L2_MBUS_BT656 = 2,
    V4L2_MBUS_CSI1 = 3,
    V4L2_MBUS_CCP2 = 4,
    V4L2_MBUS_CSI2_DPHY = 5,
    V4L2_MBUS_CSI2_CPHY = 6
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-mediabus.h"
struct v4l2_mbus_config {
   enum v4l2_mbus_type type ;
   unsigned int flags ;
};
#line 184 
struct v4l2_subdev_fh;
#line 185 
struct tuner_setup;
#line 186 
struct v4l2_mbus_frame_desc;
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_decode_vbi_line {
   u32 is_second_field ;
   u8 *p ;
   u32 line ;
   u32 type ;
};
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_io_pin_config {
   u32 flags ;
   u8 pin ;
   u8 function ;
   u8 value ;
   u8 strength ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_core_ops {
   int (*log_status)(struct v4l2_subdev *) ;
   int (*s_io_pin_config)(struct v4l2_subdev *, size_t , struct v4l2_subdev_io_pin_config *) ;
   int (*init)(struct v4l2_subdev *, u32 ) ;
   int (*load_fw)(struct v4l2_subdev *) ;
   int (*reset)(struct v4l2_subdev *, u32 ) ;
   int (*s_gpio)(struct v4l2_subdev *, u32 ) ;
   long (*ioctl)(struct v4l2_subdev *, unsigned int , void *) ;
   long (*compat_ioctl32)(struct v4l2_subdev *, unsigned int , unsigned long ) ;
   int (*g_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_register)(struct v4l2_subdev *, struct v4l2_dbg_register *) ;
   int (*s_power)(struct v4l2_subdev *, int ) ;
   int (*interrupt_service_routine)(struct v4l2_subdev *, u32 , bool *) ;
   int (*subscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
   int (*unsubscribe_event)(struct v4l2_subdev *, struct v4l2_fh *, struct v4l2_event_subscription *) ;
};
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_tuner_ops {
   int (*standby)(struct v4l2_subdev *) ;
   int (*s_radio)(struct v4l2_subdev *) ;
   int (*s_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*g_frequency)(struct v4l2_subdev *, struct v4l2_frequency *) ;
   int (*enum_freq_bands)(struct v4l2_subdev *, struct v4l2_frequency_band *) ;
   int (*g_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*s_tuner)(struct v4l2_subdev *, struct v4l2_tuner *) ;
   int (*g_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_modulator)(struct v4l2_subdev *, struct v4l2_modulator *) ;
   int (*s_type_addr)(struct v4l2_subdev *, struct tuner_setup *) ;
   int (*s_config)(struct v4l2_subdev *, struct v4l2_priv_tun_config *) ;
};
#line 304  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_audio_ops {
   int (*s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_i2s_clock_freq)(struct v4l2_subdev *, u32 ) ;
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
};
#line 310 
enum v4l2_mbus_frame_desc_flags {
    V4L2_MBUS_FRAME_DESC_FL_LEN_MAX = 1,
    V4L2_MBUS_FRAME_DESC_FL_BLOB = 2
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc_entry {
   enum v4l2_mbus_frame_desc_flags flags ;
   u32 pixelcode ;
   u32 length ;
};
#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_mbus_frame_desc {
   struct v4l2_mbus_frame_desc_entry entry[4U] ;
   unsigned short num_entries ;
};
#line 415  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_video_ops {
   int (*s_routing)(struct v4l2_subdev *, u32 , u32 , u32 ) ;
   int (*s_crystal_freq)(struct v4l2_subdev *, u32 , u32 ) ;
   int (*g_std)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*s_std)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*s_std_output)(struct v4l2_subdev *, v4l2_std_id ) ;
   int (*g_std_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*querystd)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_tvnorms_output)(struct v4l2_subdev *, v4l2_std_id *) ;
   int (*g_input_status)(struct v4l2_subdev *, u32 *) ;
   int (*s_stream)(struct v4l2_subdev *, int ) ;
   int (*g_pixelaspect)(struct v4l2_subdev *, struct v4l2_fract *) ;
   int (*g_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_frame_interval *) ;
   int (*s_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*query_dv_timings)(struct v4l2_subdev *, struct v4l2_dv_timings *) ;
   int (*g_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_mbus_config)(struct v4l2_subdev *, struct v4l2_mbus_config *) ;
   int (*s_rx_buffer)(struct v4l2_subdev *, void *, unsigned int *) ;
};
#line 481  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_vbi_ops {
   int (*decode_vbi_line)(struct v4l2_subdev *, struct v4l2_decode_vbi_line *) ;
   int (*s_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_vbi_data)(struct v4l2_subdev *, struct v4l2_sliced_vbi_data *) ;
   int (*g_sliced_vbi_cap)(struct v4l2_subdev *, struct v4l2_sliced_vbi_cap *) ;
   int (*s_raw_fmt)(struct v4l2_subdev *, struct v4l2_vbi_format *) ;
   int (*g_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
   int (*s_sliced_fmt)(struct v4l2_subdev *, struct v4l2_sliced_vbi_format *) ;
};
#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_sensor_ops {
   int (*g_skip_top_lines)(struct v4l2_subdev *, u32 *) ;
   int (*g_skip_frames)(struct v4l2_subdev *, u32 *) ;
};
#line 505 
enum v4l2_subdev_ir_mode {
    V4L2_SUBDEV_IR_MODE_PULSE_WIDTH = 0
};
#line 540  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_parameters {
   unsigned int bytes_per_data_element ;
   enum v4l2_subdev_ir_mode mode ;
   bool enable ;
   bool interrupt_enable ;
   bool shutdown ;
   bool modulation ;
   u32 max_pulse_width ;
   unsigned int carrier_freq ;
   unsigned int duty_cycle ;
   bool invert_level ;
   bool invert_carrier_sense ;
   u32 noise_filter_min_width ;
   unsigned int carrier_range_lower ;
   unsigned int carrier_range_upper ;
   u32 resolution ;
};
#line 599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ir_ops {
   int (*rx_read)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*rx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*rx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_write)(struct v4l2_subdev *, u8 *, size_t , ssize_t *) ;
   int (*tx_g_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
   int (*tx_s_parameters)(struct v4l2_subdev *, struct v4l2_subdev_ir_parameters *) ;
};
#line 630  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_config {
   struct v4l2_mbus_framefmt try_fmt ;
   struct v4l2_rect try_crop ;
   struct v4l2_rect try_compose ;
};
#line 674  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_pad_ops {
   int (*init_cfg)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *) ;
   int (*enum_mbus_code)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_mbus_code_enum *) ;
   int (*enum_frame_size)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_size_enum *) ;
   int (*enum_frame_interval)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_frame_interval_enum *) ;
   int (*get_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*set_fmt)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_format *) ;
   int (*get_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*set_selection)(struct v4l2_subdev *, struct v4l2_subdev_pad_config *, struct v4l2_subdev_selection *) ;
   int (*get_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*set_edid)(struct v4l2_subdev *, struct v4l2_edid *) ;
   int (*dv_timings_cap)(struct v4l2_subdev *, struct v4l2_dv_timings_cap *) ;
   int (*enum_dv_timings)(struct v4l2_subdev *, struct v4l2_enum_dv_timings *) ;
   int (*link_validate)(struct v4l2_subdev *, struct media_link *, struct v4l2_subdev_format *, struct v4l2_subdev_format *) ;
   int (*get_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
   int (*set_frame_desc)(struct v4l2_subdev *, unsigned int , struct v4l2_mbus_frame_desc *) ;
};
#line 727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_ops {
   struct v4l2_subdev_core_ops *core ;
   struct v4l2_subdev_tuner_ops *tuner ;
   struct v4l2_subdev_audio_ops *audio ;
   struct v4l2_subdev_video_ops *video ;
   struct v4l2_subdev_vbi_ops *vbi ;
   struct v4l2_subdev_ir_ops *ir ;
   struct v4l2_subdev_sensor_ops *sensor ;
   struct v4l2_subdev_pad_ops *pad ;
};
#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_internal_ops {
   int (*registered)(struct v4l2_subdev *) ;
   void (*unregistered)(struct v4l2_subdev *) ;
   int (*open)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   int (*close)(struct v4l2_subdev *, struct v4l2_subdev_fh *) ;
   void (*release)(struct v4l2_subdev *) ;
};
#line 772 
struct regulator_bulk_data;
#line 797  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_platform_data {
   struct regulator_bulk_data *regulators ;
   int num_regulators ;
   void *host_priv ;
};
#line 848  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev {
   struct media_entity entity ;
   struct list_head list ;
   struct module *owner ;
   bool owner_v4l2_dev ;
   u32 flags ;
   struct v4l2_device *v4l2_dev ;
   struct v4l2_subdev_ops *ops ;
   struct v4l2_subdev_internal_ops *internal_ops ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   char name[32U] ;
   u32 grp_id ;
   void *dev_priv ;
   void *host_priv ;
   struct video_device *devnode ;
   struct device *dev ;
   struct fwnode_handle *fwnode ;
   struct list_head async_list ;
   struct v4l2_async_subdev *asd ;
   struct v4l2_async_notifier *notifier ;
   struct v4l2_async_notifier *subdev_notifier ;
   struct v4l2_subdev_platform_data *pdata ;
};
#line 906  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
struct v4l2_subdev_fh {
   struct v4l2_fh vfh ;
   struct module *owner ;
   struct v4l2_subdev_pad_config *pad ;
};
#line 47  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-device.h"
struct v4l2_device {
   struct device *dev ;
   struct media_device *mdev ;
   struct list_head subdevs ;
   spinlock_t lock ;
   char name[36U] ;
   void (*notify)(struct v4l2_subdev *, unsigned int , void *) ;
   struct v4l2_ctrl_handler *ctrl_handler ;
   struct v4l2_prio_state prio ;
   struct kref ref ;
   void (*release)(struct v4l2_device *) ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ptp_clock_kernel.h"
struct ptp_system_timestamp {
   struct timespec64 pre_ts ;
   struct timespec64 post_ts ;
};
#line 277 
struct dma_chan;
#line 279 
struct spi_controller;
#line 280 
struct spi_transfer;
#line 281 
struct spi_controller_mem_ops;
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_statistics {
   spinlock_t lock ;
   unsigned long messages ;
   unsigned long transfers ;
   unsigned long errors ;
   unsigned long timedout ;
   unsigned long spi_sync ;
   unsigned long spi_sync_immediate ;
   unsigned long spi_async ;
   unsigned long long bytes ;
   unsigned long long bytes_rx ;
   unsigned long long bytes_tx ;
   unsigned long transfer_bytes_histo[17U] ;
   unsigned long transfers_split_maxsize ;
};
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_delay {
   u16 value ;
   u8 unit ;
};
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_controller *controller ;
   struct spi_controller *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   bool rt ;
   u32 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   char *driver_override ;
   int cs_gpio ;
   struct gpio_desc *cs_gpiod ;
   struct spi_delay word_delay ;
   struct spi_statistics statistics ;
};
#line 247 
struct spi_message;
#line 452  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_controller {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u32 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   bool slave ;
   size_t (*max_transfer_size)(struct spi_device *) ;
   size_t (*max_message_size)(struct spi_device *) ;
   struct mutex io_mutex ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*set_cs_timing)(struct spi_device *, struct spi_delay *, struct spi_delay *, struct spi_delay *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_controller *) ;
   int (*transfer_one_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_controller *) ;
   int (*prepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_controller *, struct spi_message *) ;
   int (*slave_abort)(struct spi_controller *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_controller *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_controller *, struct spi_message *) ;
   struct spi_controller_mem_ops *mem_ops ;
   struct spi_delay cs_setup ;
   struct spi_delay cs_hold ;
   struct spi_delay cs_inactive ;
   int *cs_gpios ;
   struct gpio_desc **cs_gpiods ;
   bool use_gpio_descriptors ;
   struct spi_statistics statistics ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
   int (*fw_translate_cs)(struct spi_controller *, unsigned int ) ;
   bool ptp_sts_supported ;
   unsigned long irq_flags ;
};
#line 890  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_transfer {
   void *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   struct spi_delay delay ;
   struct spi_delay cs_change_delay ;
   struct spi_delay word_delay ;
   u32 speed_hz ;
   u32 effective_speed_hz ;
   unsigned int ptp_sts_word_pre ;
   unsigned int ptp_sts_word_post ;
   struct ptp_system_timestamp *ptp_sts ;
   bool timestamped_pre ;
   bool timestamped_post ;
   struct list_head transfer_list ;
};
#line 961  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
   struct list_head resources ;
};
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 157  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fix_screeninfo {
   char id[16U] ;
   unsigned long smem_start ;
   __u32 smem_len ;
   __u32 type ;
   __u32 type_aux ;
   __u32 visual ;
   __u16 xpanstep ;
   __u16 ypanstep ;
   __u16 ywrapstep ;
   __u32 line_length ;
   unsigned long mmio_start ;
   __u32 mmio_len ;
   __u32 accel ;
   __u16 capabilities ;
   __u16 reserved[2U] ;
};
#line 188  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_bitfield {
   __u32 offset ;
   __u32 length ;
   __u32 msb_right ;
};
#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_var_screeninfo {
   __u32 xres ;
   __u32 yres ;
   __u32 xres_virtual ;
   __u32 yres_virtual ;
   __u32 xoffset ;
   __u32 yoffset ;
   __u32 bits_per_pixel ;
   __u32 grayscale ;
   struct fb_bitfield red ;
   struct fb_bitfield green ;
   struct fb_bitfield blue ;
   struct fb_bitfield transp ;
   __u32 nonstd ;
   __u32 activate ;
   __u32 height ;
   __u32 width ;
   __u32 accel_flags ;
   __u32 pixclock ;
   __u32 left_margin ;
   __u32 right_margin ;
   __u32 upper_margin ;
   __u32 lower_margin ;
   __u32 hsync_len ;
   __u32 vsync_len ;
   __u32 sync ;
   __u32 vmode ;
   __u32 rotate ;
   __u32 colorspace ;
   __u32 reserved[4U] ;
};
#line 281  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cmap {
   __u32 start ;
   __u32 len ;
   __u16 *red ;
   __u16 *green ;
   __u16 *blue ;
   __u16 *transp ;
};
#line 341  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_copyarea {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 sx ;
   __u32 sy ;
};
#line 350  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_fillrect {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 color ;
   __u32 rop ;
};
#line 359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_image {
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
   __u32 fg_color ;
   __u32 bg_color ;
   __u8 depth ;
   char *data ;
   struct fb_cmap cmap ;
};
#line 383  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fbcurpos {
   __u16 x ;
   __u16 y ;
};
#line 387  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/fb.h"
struct fb_cursor {
   __u16 set ;
   __u16 enable ;
   __u16 rop ;
   char *mask ;
   struct fbcurpos hot ;
   struct fb_image image ;
};
#line 400 
enum backlight_type {
    BACKLIGHT_RAW = 1,
    BACKLIGHT_PLATFORM = 2,
    BACKLIGHT_FIRMWARE = 3,
    BACKLIGHT_TYPE_MAX = 4
};
#line 412 
enum backlight_scale {
    BACKLIGHT_SCALE_UNKNOWN = 0,
    BACKLIGHT_SCALE_LINEAR = 1,
    BACKLIGHT_SCALE_NON_LINEAR = 2
};
#line 418 
struct backlight_device;
#line 419 
struct fb_info;
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device *) ;
   int (*get_brightness)(struct backlight_device *) ;
   int (*check_fb)(struct backlight_device *, struct fb_info *) ;
};
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   enum backlight_type type ;
   unsigned int state ;
   enum backlight_scale scale ;
};
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct list_head entry ;
   struct device dev ;
   bool fb_bl_on[32U] ;
   int use_count ;
};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_chroma {
   __u32 redx ;
   __u32 greenx ;
   __u32 bluex ;
   __u32 whitex ;
   __u32 redy ;
   __u32 greeny ;
   __u32 bluey ;
   __u32 whitey ;
};
#line 63 
struct fb_videomode;
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_monspecs {
   struct fb_chroma chroma ;
   struct fb_videomode *modedb ;
   __u8 manufacturer[4U] ;
   __u8 monitor[14U] ;
   __u8 serial_no[14U] ;
   __u8 ascii[14U] ;
   __u32 modedb_len ;
   __u32 model ;
   __u32 serial ;
   __u32 year ;
   __u32 week ;
   __u32 hfmin ;
   __u32 hfmax ;
   __u32 dclkmin ;
   __u32 dclkmax ;
   __u16 input ;
   __u16 dpms ;
   __u16 signal ;
   __u16 vfmin ;
   __u16 vfmax ;
   __u16 gamma ;
   __u16 gtf : 1 ;
   __u16 misc ;
   __u8 version ;
   __u8 revision ;
   __u8 max_x ;
   __u8 max_y ;
};
#line 144  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_blit_caps {
   u32 x ;
   u32 y ;
   u32 len ;
   u32 flags ;
};
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_pixmap {
   u8 *addr ;
   u32 size ;
   u32 offset ;
   u32 buf_align ;
   u32 scan_align ;
   u32 access_align ;
   u32 flags ;
   u32 blit_x ;
   u32 blit_y ;
   void (*writeio)(struct fb_info *, void *, void *, unsigned int ) ;
   void (*readio)(struct fb_info *, void *, void *, unsigned int ) ;
};
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_deferred_io {
   unsigned long delay ;
   struct mutex lock ;
   struct list_head pagelist ;
   void (*first_io)(struct fb_info *) ;
   void (*deferred_io)(struct fb_info *, struct list_head *) ;
};
#line 228  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_ops {
   struct module *owner ;
   int (*fb_open)(struct fb_info *, int ) ;
   int (*fb_release)(struct fb_info *, int ) ;
   ssize_t (*fb_read)(struct fb_info *, char *, size_t , loff_t *) ;
   ssize_t (*fb_write)(struct fb_info *, char *, size_t , loff_t *) ;
   int (*fb_check_var)(struct fb_var_screeninfo *, struct fb_info *) ;
   int (*fb_set_par)(struct fb_info *) ;
   int (*fb_setcolreg)(unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , struct fb_info *) ;
   int (*fb_setcmap)(struct fb_cmap *, struct fb_info *) ;
   int (*fb_blank)(int , struct fb_info *) ;
   int (*fb_pan_display)(struct fb_var_screeninfo *, struct fb_info *) ;
   void (*fb_fillrect)(struct fb_info *, struct fb_fillrect *) ;
   void (*fb_copyarea)(struct fb_info *, struct fb_copyarea *) ;
   void (*fb_imageblit)(struct fb_info *, struct fb_image *) ;
   int (*fb_cursor)(struct fb_info *, struct fb_cursor *) ;
   int (*fb_sync)(struct fb_info *) ;
   int (*fb_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_compat_ioctl)(struct fb_info *, unsigned int , unsigned long ) ;
   int (*fb_mmap)(struct fb_info *, struct vm_area_struct *) ;
   void (*fb_get_caps)(struct fb_info *, struct fb_blit_caps *, struct fb_var_screeninfo *) ;
   void (*fb_destroy)(struct fb_info *) ;
   int (*fb_debug_enter)(struct fb_info *) ;
   int (*fb_debug_leave)(struct fb_info *) ;
};
#line 306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilemap {
   __u32 width ;
   __u32 height ;
   __u32 depth ;
   __u32 length ;
   __u8 *data ;
};
#line 315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilerect {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 index ;
   __u32 fg ;
   __u32 bg ;
   __u32 rop ;
};
#line 326  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilearea {
   __u32 sx ;
   __u32 sy ;
   __u32 dx ;
   __u32 dy ;
   __u32 width ;
   __u32 height ;
};
#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tileblit {
   __u32 sx ;
   __u32 sy ;
   __u32 width ;
   __u32 height ;
   __u32 fg ;
   __u32 bg ;
   __u32 length ;
   __u32 *indices ;
};
#line 346  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tilecursor {
   __u32 sx ;
   __u32 sy ;
   __u32 mode ;
   __u32 shape ;
   __u32 fg ;
   __u32 bg ;
};
#line 355  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_tile_ops {
   void (*fb_settile)(struct fb_info *, struct fb_tilemap *) ;
   void (*fb_tilecopy)(struct fb_info *, struct fb_tilearea *) ;
   void (*fb_tilefill)(struct fb_info *, struct fb_tilerect *) ;
   void (*fb_tileblit)(struct fb_info *, struct fb_tileblit *) ;
   void (*fb_tilecursor)(struct fb_info *, struct fb_tilecursor *) ;
   int (*fb_get_tilemax)(struct fb_info *) ;
};
#line 499  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct aperture {
   resource_size_t base ;
   resource_size_t size ;
};
#line 497  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct apertures_struct {
   unsigned int count ;
   struct aperture ranges[0U] ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
union __anonunion_14266 {
   char *screen_base ;
   char *screen_buffer ;
};
#line 439  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_info {
   atomic_t count ;
   int node ;
   int flags ;
   int fbcon_rotate_hint ;
   struct mutex lock ;
   struct mutex mm_lock ;
   struct fb_var_screeninfo var ;
   struct fb_fix_screeninfo fix ;
   struct fb_monspecs monspecs ;
   struct work_struct queue ;
   struct fb_pixmap pixmap ;
   struct fb_pixmap sprite ;
   struct fb_cmap cmap ;
   struct list_head modelist ;
   struct fb_videomode *mode ;
   struct backlight_device *bl_dev ;
   struct mutex bl_curve_mutex ;
   u8 bl_curve[128U] ;
   struct delayed_work deferred_work ;
   struct fb_deferred_io *fbdefio ;
   struct fb_ops *fbops ;
   struct device *device ;
   struct device *dev ;
   int class_flag ;
   struct fb_tile_ops *tileops ;
   union __anonunion_14266 __anonCompField_fb_info_73 ;
   unsigned long screen_size ;
   void *pseudo_palette ;
   u32 state ;
   void *fbcon_par ;
   void *par ;
   struct apertures_struct *apertures ;
   bool skip_vt_switch ;
};
#line 767  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fb.h"
struct fb_videomode {
   char *name ;
   u32 refresh ;
   u32 xres ;
   u32 yres ;
   u32 pixclock ;
   u32 left_margin ;
   u32 right_margin ;
   u32 upper_margin ;
   u32 lower_margin ;
   u32 hsync_len ;
   u32 vsync_len ;
   u32 sync ;
   u32 vmode ;
   u32 flag ;
};
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct ldv_kmem_cache {
   char *name ;
   unsigned int size ;
};
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
typedef unsigned long pthread_t;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
enum hrtimer_restart;
#line 19  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_free_irq_7 {
   int arg0 ;
   int signal_pending ;
};
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_interrupt_scenario_b43legacy_interrupt_handler_18 {
   int arg0 ;
   enum irqreturn (*arg1)(int , void *) ;
   enum irqreturn (*arg2)(int , void *) ;
   void *arg3 ;
   int signal_pending ;
};
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_devattr_instance_dev_attr_interference_14 {
   struct device *arg0 ;
   struct device_attribute *arg1 ;
   int signal_pending ;
};
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_character_driver_scenario_generic_file_llseek_16 {
   struct file_operations *arg0 ;
   int signal_pending ;
};
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 {
   struct ieee80211_hw *arg0 ;
   int signal_pending ;
};
/* compiler builtin: 
   unsigned short __builtin_bswap16(unsigned short);   */
/* compiler builtin: 
   unsigned int __builtin_bswap32(unsigned int);   */
/* compiler builtin: 
   void *__builtin_memcpy(void *, void const *, unsigned long);   */
/* compiler builtin: 
   void __builtin_unreachable(void);   */
/* compiler builtin: 
   void __builtin_va_end(__builtin_va_list);   */
/* compiler builtin: 
   void __builtin_va_start(__builtin_va_list);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/inline_asm.h"
#line 22 
void ldv_inline_asm(void);
#line 16  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
#line 16 
struct task_struct *ldv_get_current(void);
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/export.h"
#line 16 
extern struct module __this_module;
#line 197  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __read_once_size(void *p, void *res, int size)
{
  #line 199 
  switch (size) {
    #line 199 
    case 1: 
            #line 199 
    ;
    #line 199 
    *((__u8 *)res) = *((__u8 *)p);
    #line 199 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 199 
    *((__u16 *)res) = *((__u16 *)p);
    #line 199 
    break;
    #line 199 
    case 4: 
            #line 199 
    ;
    #line 199 
    *((__u32 *)res) = *((__u32 *)p);
    #line 199 
    break;
    #line 199 
    case 8: 
            #line 199 
    ;
    #line 199 
    *((__u64 *)res) = *((__u64 *)p);
    #line 199 
    break;
    #line 199 
    default: 
             #line 199 
    ;
    #line 200 
    ldv_inline_asm();
    #line 199 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    #line 200 
    ldv_inline_asm();
  }
  #line 203 
  return;
}

#line 220  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/compiler.h"
__inline static void __write_once_size(void *p, void *res, int size)
{
  #line 222 
  switch (size) {
    #line 223 
    case 1: 
            #line 223 
    ;
    #line 223 
    *((__u8 *)p) = *((__u8 *)res);
    #line 223 
    break;
    #line 224 
    case 2: 
            #line 224 
    ;
    #line 224 
    *((__u16 *)p) = *((__u16 *)res);
    #line 224 
    break;
    #line 225 
    case 4: 
            #line 225 
    ;
    #line 225 
    *((__u32 *)p) = *((__u32 *)res);
    #line 225 
    break;
    #line 226 
    case 8: 
            #line 226 
    ;
    #line 226 
    *((__u64 *)p) = *((__u64 *)res);
    #line 226 
    break;
    #line 227 
    default: 
             #line 227 
    ;
    #line 228 
    ldv_inline_asm();
    #line 229 
    __builtin_memcpy(p,(void const *)res,(unsigned long)size);
    #line 230 
    ldv_inline_asm();
  }
  #line 232 
  return;
}

#line 34  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kasan-checks.h"
__inline static bool kasan_check_read(void *p, unsigned int size)
{
  #line 36 
  return (_Bool)1;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static void arch___set_bit(long nr, unsigned long *addr)
{
  #line 68 
  ldv_inline_asm();
  #line 69 
  return;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool constant_test_bit(long nr, unsigned long *addr)
{
  #line 207 
  return (_Bool)(((*(addr + (unsigned long)(nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL);
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static bool variable_test_bit(long nr, unsigned long *addr)
{
  #line 212 
  bool oldbit;
  #line 213 
  ldv_inline_asm();
  #line 219 
  return oldbit;
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static void __set_bit(long nr, unsigned long *addr)
{
  #line 27 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 28 
  arch___set_bit(nr,addr);
  #line 29 
  return;
}

#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bitops/instrumented-non-atomic.h"
__inline static bool test_bit(long nr, unsigned long *addr)
{
  #line 111 
  int tmp_1;
  #line 110 
  kasan_check_read((void *)(addr + (unsigned long)(nr / 64L)),8U);
  #line 111 
  if (0 != 0) {
    #line 111 
    tmp_1 = (int)constant_test_bit(nr,addr) != 0;
  }
  else {
    #line 111 
    tmp_1 = (int)variable_test_bit(nr,addr) != 0;
  }
  #line 111 
  return (_Bool)(tmp_1 != 0);
}

#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/swab.h"
__inline static __u32 __swab32p(__u32 *p)
{
  #line 179 
  return __builtin_bswap32(*p);
}

#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/uapi/linux/byteorder/little_endian.h"
__inline static __u32 __be32_to_cpup(__be32 *p)
{
  #line 82 
  return __swab32p(p);
}

#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 171 
int printk(char * , ...);
#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 204 
void __might_sleep(char *, int, int);
#line 472 
#line 472 
int snprintf(char *, size_t, char * , ...);
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void INIT_LIST_HEAD(struct list_head *list);
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 33 
bool __list_add_valid(struct list_head *, struct list_head *, struct list_head *);
#line 36 
#line 36 
bool __list_del_entry_valid(struct list_head *);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_13 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  #line 79 
  __list_add(new,head,head->next);
  #line 80 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_15 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del(entry->prev,entry->next);
  #line 135 
  return;
}

#line 137  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_del(struct list_head *entry)
{
  #line 139 
  __list_del_entry(entry);
  #line 140 
  entry->next = (struct list_head *)(-2401263026318606080);
  #line 141 
  entry->prev = (struct list_head *)(-2401263026318606046);
  #line 142 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty(struct list_head *head)
{
  #line 269 
  union __anonunion___u_17 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt_types.h"
#line 334 
extern struct paravirt_patch_template pv_ops;
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 14 
void *memcpy(void *, void *, size_t);
#line 18 
#line 18 
void *memset(void *, int, size_t);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_67 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 41  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static void arch_atomic_set(atomic_t *v, int i)
{
  #line 44 
  union __anonunion___u_69 __u = {.__val = i};
  #line 43 
  __write_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 43 
  int tmp = __u.__val;
  #line 45 
  return;
}

#line 123  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
__inline static bool arch_atomic_dec_and_test(atomic_t *v)
{
  #line 125 
  bool c;
  #line 126 
  ldv_inline_asm();
  #line 125 
  return c;
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read(v);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  #line 44 
  kasan_check_read((void *)v,4U);
  #line 45 
  arch_atomic_set(v,i);
  #line 46 
  return;
}

#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static bool atomic_dec_and_test(atomic_t *v)
{
  #line 747 
  kasan_check_read((void *)v,4U);
  #line 748 
  return arch_atomic_dec_and_test(v);
}

#line 745  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void)
{
  #line 747 
  unsigned long __ret;
  {
    #line 747 
    unsigned long __edi = __edi;
    #line 747 
    unsigned long __esi = __esi;
    #line 747 
    unsigned long __edx = __edx;
    #line 747 
    unsigned long __ecx = __ecx;
    #line 747 
    unsigned long __eax = __eax;
    #line 747 
    if ((long)(pv_ops.irq.save_fl.func == (void *)0) != 0L) {
      #line 748 
      ldv_inline_asm();
      #line 749 
      ldv_inline_asm();
      #line 750 
      ldv_inline_asm();
      #line 747 
      ;
    }
    {
      #line 747 
      unsigned long __mask;
      #line 751 
      ldv_inline_asm();
      #line 747 
      __mask = 18446744073709551615UL;
      #line 747 
      switch (8UL) {
        #line 747 
        case (unsigned long)1: 
                               #line 747 
        ;
        #line 747 
        __mask = 255UL;
        #line 747 
        break;
        #line 747 
        case (unsigned long)2: 
                               #line 747 
        ;
        #line 747 
        __mask = 65535UL;
        #line 747 
        break;
        #line 747 
        case (unsigned long)4: 
                               #line 747 
        ;
        #line 747 
        __mask = 4294967295UL;
        #line 747 
        break;
        #line 747 
        default: 
                 #line 747 
        ;
        #line 747 
        break;
      }
      #line 747 
      __ret = __mask & __eax;
    }
    }
  #line 747 
  return __ret;
}

#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
#line 20 
unsigned long native_save_fl(void);
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
unsigned long native_save_fl(void)
{
  #line 22 
  unsigned long flags;
  #line 23 
  ldv_inline_asm();
  #line 35 
  return flags;
}

#line 38 
#line 39 
void native_restore_fl(unsigned long flags);
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
void native_restore_fl(unsigned long flags)
{
  #line 41 
  ldv_inline_asm();
  #line 42 
  return;
}

#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags)
{
  #line 164 
  return (flags & 512UL) == 0UL;
}

#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static int test_ti_thread_flag(struct thread_info *ti, int flag)
{
  #line 84 
  return (int)test_bit((long)flag,& ti->flags);
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/lockdep.h"
#line 302 
void lockdep_init_map(struct lockdep_map *, char *, struct lock_class_key *, int);
#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
#line 95 
void __raw_spin_lock_init(raw_spinlock_t *, char *, struct lock_class_key *);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock_api_smp.h"
#line 22 
void _raw_spin_lock(raw_spinlock_t *);
#line 29 
#line 29 
void _raw_spin_lock_irq(raw_spinlock_t *);
#line 39 
#line 39 
void _raw_spin_unlock(raw_spinlock_t *);
#line 41 
#line 41 
void _raw_spin_unlock_irq(raw_spinlock_t *);
#line 43 
#line 43 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);
#line 325  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  #line 327 
  return & lock->__anonCompField_spinlock_25.rlock;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 935  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_irq_lock_of_b43legacy_wl(spinlock_t *lock);
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  #line 363 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 364 
  return;
}

#line 365 
#line 892  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_irq_irq_lock_of_b43legacy_wl(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 952  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irq_lock_of_b43legacy_wl(spinlock_t *lock);
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  #line 388 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 389 
  return;
}

#line 390 
#line 901  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irq_irq_lock_of_b43legacy_wl(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 926  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(spinlock_t *lock, unsigned long flags);
#line 26 
#line 885 
static void cif_mutex_lock_mutex_of_b43legacy_wl(struct mutex *lock);
#line 29 
#line 29 
void ldv_mutex_model_lock(struct mutex *, char *);
#line 31 
#line 31 
void ldv_mutex_model_unlock(struct mutex *, char *);
#line 33 
#line 33 
void __ldv_spin_lock(spinlock_t *);
#line 35 
#line 917 
static void cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(spinlock_t *lock);
#line 40 
#line 40 
void ldv_spin_model_lock(char *);
#line 41 
#line 41 
void ldv_spin_model_unlock(char *);
#line 51 
#line 51 
int ldv_request_firmware(struct firmware **fw);
#line 52 
#line 52 
void ldv_release_firmware(struct firmware *fw);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/list.h"
#line 23 
void ldv_init_list_head(struct list_head *list);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 23 
void *ldv_kzalloc(size_t size, gfp_t flags);
#line 24 
#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);
#line 25 
#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);
#line 11  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/delay.h"
#line 11 
void __const_udelay(unsigned long);
#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/delay.h"
#line 59 
void msleep(unsigned int);
#line 60 
#line 60 
unsigned long msleep_interruptible(unsigned int);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/wait.h"
#line 61 
void __init_waitqueue_head(struct wait_queue_head *, char *, struct lock_class_key *);
#line 85  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/completion.h"
__inline static void __init_completion(struct completion *x)
{
  #line 87 
  x->done = 0U;
  {
    #line 88 
    struct lock_class_key __key;
    #line 88 
    __init_waitqueue_head(& x->wait,(char *)"&x->wait",& __key);
  }
  #line 90 
  return;
}

#line 103 
#line 103 
void wait_for_completion(struct completion *);
#line 118 
#line 118 
void complete(struct completion *);
#line 128  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 128 
void __mutex_init(struct mutex *, char *, struct lock_class_key *);
#line 185 
#line 910  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl(struct mutex *lock);
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 302 
unsigned long __msecs_to_jiffies(unsigned int);
#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int m)
{
  #line 311 
  return (unsigned long)(((long)m + 3L) / 4L);
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int m)
{
  #line 366 
  if (0 != 0) {
    #line 367 
    if ((int)m < 0) 
                    #line 368 
                    return 4611686018427387902UL;
    #line 369 
    return _msecs_to_jiffies(m);
  }
  else {
    #line 371 
    return __msecs_to_jiffies(m);
  }
}

#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/timer.h"
#line 90 
void init_timer_key(struct timer_list *, void (*)(struct timer_list *), unsigned int, char *, struct lock_class_key *);
#line 211 
#line 211 
unsigned long round_jiffies_relative(unsigned long);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/workqueue.h"
#line 22 
void delayed_work_timer_fn(struct timer_list *);
#line 207 
#line 207 
void __init_work(struct work_struct *, int);
#line 462 
#line 462 
bool cancel_work_sync(struct work_struct *);
#line 466 
#line 466 
bool cancel_delayed_work_sync(struct delayed_work *);
#line 554 
#line 743  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static bool cif_schedule_work(struct work_struct *work);
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kobject.h"
__inline static char *kobject_name(struct kobject *kobj)
{
  #line 91 
  return kobj->name;
}

#line 1660  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
__inline static struct thread_info *task_thread_info(struct task_struct *task)
{
  #line 1662 
  return & task->thread_info;
}

#line 1751  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
__inline static int test_tsk_thread_flag(struct task_struct *tsk, int flag)
{
  #line 1753 
  ;
  #line 1753 
  return test_ti_thread_flag(task_thread_info(tsk),flag);
}

#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 189 
void kfree(void *);
#line 542 
#line 464  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kmalloc(size_t size, gfp_t flags);
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 478  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 499  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kzalloc(size_t size, gfp_t flags);
#line 244  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/net.h"
#line 244 
int net_ratelimit(void);
#line 1370  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
__inline static char *dev_name(struct device *dev)
{
  #line 1373 
  if (dev->init_name != (char *)0) 
                                   #line 1374 
                                   return dev->init_name;
  #line 1376 
  return kobject_name(& dev->kobj);
}

#line 1023  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1023 
void consume_skb(struct sk_buff *);
#line 1381  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff *skb)
{
  #line 1383 
  return skb->head + (unsigned long)skb->end;
}

#line 1812  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head *list_)
{
  #line 1814 
  return list_->qlen;
}

#line 1827  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1829 
  list->next = ((struct sk_buff *)list);
  #line 1829 
  list->prev = ((struct sk_buff *)list);
  #line 1830 
  list->qlen = 0U;
  #line 1831 
  return;
}

#line 1841  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  #line 1843 
  spinlock_check(& list->lock);
  {
    #line 1843 
    struct lock_class_key __key;
    #line 1843 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&list->lock)->rlock",& __key);
  }
  #line 1844 
  __skb_queue_head_init(list);
  #line 1845 
  return;
}

#line 1994 
#line 1994 
void skb_queue_head(struct sk_buff_head *, struct sk_buff *);
#line 2011 
#line 2011 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);
#line 2045 
#line 2045 
struct sk_buff *skb_dequeue(struct sk_buff_head *);
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hardirq.h"
#line 12 
void synchronize_irq(unsigned int);
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 983  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev);
#line 189  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 975  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2);
#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 944  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t);
#line 683  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 683 
void tasklet_kill(struct tasklet_struct *);
#line 687 
#line 991  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data);
#line 347  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched/signal.h"
__inline static int signal_pending(struct task_struct *p)
{
  #line 349 
  return (long)(test_tsk_thread_flag(p,2) != 0);
}

#line 3617  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3617 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);
#line 3648  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  #line 3650 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3651 
  return;
}

#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/unaligned/access_ok.h"
__inline static u32 get_unaligned_be32(void *p)
{
  #line 30 
  return __be32_to_cpup((__be32 *)p);
}

#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 *addr)
{
  #line 101 
  return (_Bool)((*((u32 *)addr) | (unsigned int)*((u16 *)(addr + 4U))) == 0U);
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 *addr)
{
  #line 119 
  u32 a = *((u32 *)addr);
  #line 126 
  return (_Bool)((a & 1U) != 0U);
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 *addr)
{
  #line 195 
  int tmp_1;
  #line 195 
  if (is_multicast_ether_addr(addr)) 
                                     #line 195 
                                     tmp_1 = 0;
  else {
    #line 195 
    if (is_zero_ether_addr(addr)) 
                                  #line 195 
                                  tmp_1 = 0; else 
                                                  #line 195 
                                                  tmp_1 = 1;
  }
  #line 195 
  return (_Bool)(tmp_1 != 0);
}

#line 249  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  #line 251 
  memset((void *)addr,0,6UL);
  #line 252 
  return;
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 968  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/firmware.h"
#line 46 
int request_firmware_nowait(struct module *, bool, char *, struct device *, gfp_t, void *, void (*)(struct firmware *, void *));
#line 57 
#line 961  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_release_firmware(struct firmware *fw);
#line 58  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/hw_random.h"
#line 58 
int hwrng_register(struct hwrng *);
#line 61 
#line 61 
void hwrng_unregister(struct hwrng *);
#line 297  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static void ssb_set_drvdata(struct ssb_device *dev, void *data)
{
  #line 299 
  dev->drvdata = data;
  #line 300 
  return;
}

#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static void *ssb_get_drvdata(struct ssb_device *dev)
{
  #line 304 
  return dev->drvdata;
}

#line 308 
#line 308 
void ssb_set_devtypedata(struct ssb_device *, void *);
#line 310  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static void *ssb_get_devtypedata(struct ssb_device *dev)
{
  #line 312 
  return dev->devtypedata;
}

#line 330 
#line 330 
int __ssb_driver_register(struct ssb_driver *, struct module *);
#line 334 
#line 334 
void ssb_driver_unregister(struct ssb_driver *);
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb_driver_pci.h"
#line 94 
int ssb_pcicore_dev_irqvecs_enable(struct ssb_pcicore *, struct ssb_device *);
#line 566  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
#line 566 
int ssb_device_is_enabled(struct ssb_device *);
#line 569 
#line 569 
void ssb_device_enable(struct ssb_device *, u32);
#line 571 
#line 571 
void ssb_device_disable(struct ssb_device *, u32);
#line 579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static u16 ssb_read16(struct ssb_device *dev, u16 offset)
{
  #line 581 
  return (*((dev->ops)->read16))(dev,(unsigned short)((int)offset));
}

#line 583  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static u32 ssb_read32(struct ssb_device *dev, u16 offset)
{
  #line 585 
  return (*((dev->ops)->read32))(dev,(unsigned short)((int)offset));
}

#line 591  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static void ssb_write16(struct ssb_device *dev, u16 offset, u16 value)
{
  #line 593 
  (*((dev->ops)->write16))(dev,(unsigned short)((int)offset),(unsigned short)((int)value));
  #line 594 
  return;
}

#line 595  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static void ssb_write32(struct ssb_device *dev, u16 offset, u32 value)
{
  #line 597 
  (*((dev->ops)->write32))(dev,(unsigned short)((int)offset),value);
  #line 598 
  return;
}

#line 662 
#line 662 
int ssb_bus_may_powerdown(struct ssb_bus *);
#line 666 
#line 666 
int ssb_bus_powerup(struct ssb_bus *, bool);
#line 4738  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
  #line 4740 
  wiphy->dev.parent = dev;
  #line 4741 
  return;
}

#line 4760  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static char *wiphy_name(struct wiphy *wiphy)
{
  #line 4762 
  return dev_name(& wiphy->dev);
}

#line 5059 
#line 5059 
struct ieee80211_rate *ieee80211_get_response_rate(struct ieee80211_supported_band *, u32, int);
#line 6088 
#line 6088 
void wiphy_rfkill_start_polling(struct wiphy *);
#line 7322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
__inline static void wiphy_ext_feature_set(struct wiphy *wiphy, enum nl80211_ext_feature_index ftidx)
{
  #line 7325 
  u8 *ft_byte;
  #line 7327 
  ft_byte = & wiphy->ext_features[(unsigned int)ftidx / 8U];
  #line 7328 
  *ft_byte = (unsigned char)((int)*ft_byte | (int)((unsigned char)(1UL << ((unsigned int)ftidx & 7U))));
  #line 7329 
  return;
}

#line 1114  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
  #line 1116 
  return (struct ieee80211_tx_info *)(& skb->cb);
}

#line 2533  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void _ieee80211_hw_set(struct ieee80211_hw *hw, enum ieee80211_hw_flags flg)
{
  #line 2536 
  __set_bit((long)flg,(unsigned long *)(& hw->flags));
  #line 2537 
  return;
}

#line 2599  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
  #line 2601 
  set_wiphy_dev(hw->wiphy,dev);
  #line 2602 
  return;
}

#line 2610  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
  #line 2612 
  memcpy((void *)(& (hw->wiphy)->perm_addr),(void *)addr,6UL);
  #line 2613 
  return;
}

#line 2616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_tx_rate(struct ieee80211_hw *hw, struct ieee80211_tx_info *c)
{
  #line 2619 
  int __ret_warn_on;
  #line 2619 
  __ret_warn_on = (int)c->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rates[0].idx < 0;
  #line 2619 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 2620 
    ldv_inline_asm();
    #line 2621 
    ldv_inline_asm();
  }
  #line 2619 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 2620 
                                                return (struct ieee80211_rate *)0;
  #line 2621 
  return ((hw->wiphy)->bands[(int)c->band])->bitrates + (unsigned long)c->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rates[0].idx;
}

#line 4123 
#line 1007  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops);
#line 4135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4135 
int ieee80211_register_hw(struct ieee80211_hw *);
#line 4289 
#line 4289 
void ieee80211_unregister_hw(struct ieee80211_hw *);
#line 4301 
#line 999  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw);
#line 4737  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4737 
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *, struct ieee80211_vif *, u16 *, u16 *);
#line 4750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 4753 
  return ieee80211_beacon_get_tim(hw,vif,(u16 *)0U,(u16 *)0U);
}

#line 4962 
#line 4962 
__le16 ieee80211_generic_frame_duration(struct ieee80211_hw *, struct ieee80211_vif *, enum nl80211_band, size_t, struct ieee80211_rate *);
#line 5179 
#line 5179 
void ieee80211_stop_queue(struct ieee80211_hw *, int);
#line 5207 
#line 5207 
void ieee80211_wake_queues(struct ieee80211_hw *);
#line 5371 
#line 5371 
void ieee80211_queue_work(struct ieee80211_hw *, struct work_struct *);
#line 5383 
#line 5383 
void ieee80211_queue_delayed_work(struct ieee80211_hw *, struct delayed_work *, unsigned long);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.h"
#line 56 
int b43legacy_debug(struct b43legacy_wldev *dev, enum b43legacy_dyndbg feature);
#line 59 
#line 59 
void b43legacy_debugfs_init(void);
#line 60 
#line 60 
void b43legacy_debugfs_exit(void);
#line 61 
#line 61 
void b43legacy_debugfs_add_device(struct b43legacy_wldev *dev);
#line 62 
#line 62 
void b43legacy_debugfs_remove_device(struct b43legacy_wldev *dev);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.h"
#line 46 
void b43legacy_leds_init(struct b43legacy_wldev *dev);
#line 47 
#line 47 
void b43legacy_leds_exit(struct b43legacy_wldev *dev);
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/rfkill.h"
#line 8 
void b43legacy_rfkill_poll(struct ieee80211_hw *hw);
#line 171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 171 
int b43legacy_phy_init_tssi2dbm_table(struct b43legacy_wldev *dev);
#line 172 
#line 172 
int b43legacy_phy_init(struct b43legacy_wldev *dev);
#line 176 
#line 176 
void b43legacy_phy_set_antenna_diversity(struct b43legacy_wldev *dev);
#line 177 
#line 177 
void b43legacy_phy_calibrate(struct b43legacy_wldev *dev);
#line 181 
#line 181 
void b43legacy_phy_lo_g_measure(struct b43legacy_wldev *dev);
#line 182 
#line 182 
void b43legacy_phy_xmitpower(struct b43legacy_wldev *dev);
#line 188 
#line 188 
void b43legacy_phy_lo_mark_all_unused(struct b43legacy_wldev *dev);
#line 193 
#line 193 
void b43legacy_power_saving_ctl_bits(struct b43legacy_wldev *dev, int bit25, int bit26);
#line 754  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static struct b43legacy_wl *hw_to_b43legacy_wl(struct ieee80211_hw *hw)
{
  #line 756 
  return (struct b43legacy_wl *)hw->priv;
}

#line 764  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static int b43legacy_using_pio(struct b43legacy_wldev *dev)
{
  #line 766 
  return (int)dev->__using_pio;
}

#line 794  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static int b43legacy_is_mode(struct b43legacy_wl *wl, int type)
{
  #line 796 
  return ((int)wl->operating != 0 && wl->if_type == type) != 0;
}

#line 807  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static u16 b43legacy_read16(struct b43legacy_wldev *dev, u16 offset)
{
  #line 809 
  return ssb_read16(dev->dev,(unsigned short)((int)offset));
}

#line 813  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static void b43legacy_write16(struct b43legacy_wldev *dev, u16 offset, u16 value)
{
  #line 815 
  ssb_write16(dev->dev,(unsigned short)((int)offset),(unsigned short)((int)value));
  #line 816 
  return;
}

#line 819  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static u32 b43legacy_read32(struct b43legacy_wldev *dev, u16 offset)
{
  #line 821 
  return ssb_read32(dev->dev,(unsigned short)((int)offset));
}

#line 825  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static void b43legacy_write32(struct b43legacy_wldev *dev, u16 offset, u32 value)
{
  #line 827 
  ssb_write32(dev->dev,(unsigned short)((int)offset),value);
  #line 828 
  return;
}

#line 843 
#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacyinfo(struct b43legacy_wl *wl, char *fmt , ...);
#line 845  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacyerr(struct b43legacy_wl *wl, char *fmt , ...);
#line 847  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacywarn(struct b43legacy_wl *wl, char *fmt , ...);
#line 850  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacydbg(struct b43legacy_wl *wl, char *fmt , ...);
#line 73  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
__inline static int b43legacy_is_cck_rate(int rate)
{
  #line 77 
  return ((rate == 2 || rate == 4) || (rate == 11 || rate == 22)) != 0;
}

#line 87 
#line 388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_tsf_read(struct b43legacy_wldev *dev, u64 *tsf);
#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_tsf_write(struct b43legacy_wldev *dev, u64 tsf);
#line 90  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 270  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
u32 b43legacy_shm_read32(struct b43legacy_wldev *dev, u16 routing, u16 offset);
#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 297  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
u16 b43legacy_shm_read16(struct b43legacy_wldev *dev, u16 routing, u16 offset);
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_shm_write32(struct b43legacy_wldev *dev, u16 routing, u16 offset, u32 value);
#line 97  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_shm_write16(struct b43legacy_wldev *dev, u16 routing, u16 offset, u16 value);
#line 101  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
u32 b43legacy_hf_read(struct b43legacy_wldev *dev);
#line 102  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_hf_write(struct b43legacy_wldev *dev, u32 value);
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_dummy_transmission(struct b43legacy_wldev *dev);
#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_wireless_core_reset(struct b43legacy_wldev *dev, u32 flags);
#line 108  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 1963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_mac_suspend(struct b43legacy_wldev *dev);
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 1937  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_mac_enable(struct b43legacy_wldev *dev);
#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
#line 3907  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_controller_restart(struct b43legacy_wldev *dev, char *reason);
#line 182  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
#line 182 
int b43legacy_dma_init(struct b43legacy_wldev *dev);
#line 183 
#line 183 
void b43legacy_dma_free(struct b43legacy_wldev *dev);
#line 188 
#line 188 
int b43legacy_dma_tx(struct b43legacy_wldev *dev, struct sk_buff *skb);
#line 193 
#line 193 
void b43legacy_dma_rx(struct b43legacy_dmaring *ring);
#line 98  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
#line 98 
int b43legacy_pio_init(struct b43legacy_wldev *dev);
#line 99 
#line 99 
void b43legacy_pio_free(struct b43legacy_wldev *dev);
#line 101 
#line 101 
int b43legacy_pio_tx(struct b43legacy_wldev *dev, struct sk_buff *skb);
#line 105 
#line 105 
void b43legacy_pio_rx(struct b43legacy_pioqueue *queue);
#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
#line 192 
u8 b43legacy_plcp_get_ratecode_cck(u8 bitrate);
#line 193 
#line 193 
u8 b43legacy_plcp_get_ratecode_ofdm(u8 bitrate);
#line 195 
#line 195 
void b43legacy_generate_plcp_hdr(struct b43legacy_plcp_hdr4 *plcp, u16 octets, u8 bitrate);
#line 202 
#line 202 
void b43legacy_handle_txstatus(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status);
#line 224 
#line 224 
void b43legacy_qos_init(struct b43legacy_wldev *dev);
#line 46  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 46 
void b43legacy_radio_write16(struct b43legacy_wldev *dev, u16 offset, u16 val);
#line 50 
#line 50 
void b43legacy_radio_turn_on(struct b43legacy_wldev *dev);
#line 51 
#line 51 
void b43legacy_radio_turn_off(struct b43legacy_wldev *dev, bool force);
#line 53 
#line 53 
int b43legacy_radio_selectchannel(struct b43legacy_wldev *dev, u8 channel, int synthetic_pu_workaround);
#line 61 
#line 61 
u16 b43legacy_default_baseband_attenuation(struct b43legacy_wldev *dev);
#line 62 
#line 62 
u16 b43legacy_default_radio_attenuation(struct b43legacy_wldev *dev);
#line 63 
#line 63 
u16 b43legacy_default_txctl1(struct b43legacy_wldev *dev);
#line 72 
#line 72 
int b43legacy_radio_set_interference_mitigation(struct b43legacy_wldev *dev, int mode);
#line 75 
#line 75 
void b43legacy_calc_nrssi_slope(struct b43legacy_wldev *dev);
#line 53  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int modparam_pio;
#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int modparam_bad_frames_preempt;
#line 67  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static char modparam_fwpostfix[16U];
#line 72  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ssb_device_id b43legacy_ssb_tbl[3U] = {{.vendor = (unsigned short)16963U, .coreid = (unsigned short)2066U, .revision = (unsigned char)2U}, {.vendor = (unsigned short)16963U, .coreid = (unsigned short)2066U, .revision = (unsigned char)4U}};
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
struct ssb_device_id __mod_ssb__b43legacy_ssb_tbl_device_table[3U];
#line 94  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ieee80211_rate __b43legacy_ratetable[12U] = {{.bitrate = (unsigned short)10U, .hw_value = (unsigned short)2U}, {.flags = 1U, .bitrate = (unsigned short)20U, .hw_value = (unsigned short)4U}, {.flags = 1U, .bitrate = (unsigned short)55U, .hw_value = (unsigned short)11U}, {.flags = 1U, .bitrate = (unsigned short)110U, .hw_value = (unsigned short)22U}, {.bitrate = (unsigned short)60U, .hw_value = (unsigned short)12U}, {.bitrate = (unsigned short)90U, .hw_value = (unsigned short)18U}, {.bitrate = (unsigned short)120U, .hw_value = (unsigned short)24U}, {.bitrate = (unsigned short)180U, .hw_value = (unsigned short)36U}, {.bitrate = (unsigned short)240U, .hw_value = (unsigned short)48U}, {.bitrate = (unsigned short)360U, .hw_value = (unsigned short)72U}, {.bitrate = (unsigned short)480U, .hw_value = (unsigned short)96U}, {.bitrate = (unsigned short)540U, .hw_value = (unsigned short)108U}};
#line 118  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ieee80211_channel b43legacy_bg_chantable[14U] = {{.center_freq = 2412U, .hw_value = (unsigned short)1U}, {.center_freq = 2417U, .hw_value = (unsigned short)2U}, {.center_freq = 2422U, .hw_value = (unsigned short)3U}, {.center_freq = 2427U, .hw_value = (unsigned short)4U}, {.center_freq = 2432U, .hw_value = (unsigned short)5U}, {.center_freq = 2437U, .hw_value = (unsigned short)6U}, {.center_freq = 2442U, .hw_value = (unsigned short)7U}, {.center_freq = 2447U, .hw_value = (unsigned short)8U}, {.center_freq = 2452U, .hw_value = (unsigned short)9U}, {.center_freq = 2457U, .hw_value = (unsigned short)10U}, {.center_freq = 2462U, .hw_value = (unsigned short)11U}, {.center_freq = 2467U, .hw_value = (unsigned short)12U}, {.center_freq = 2472U, .hw_value = (unsigned short)13U}, {.center_freq = 2484U, .hw_value = (unsigned short)14U}};
#line 135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ieee80211_supported_band b43legacy_band_2GHz_BPHY = {.channels = (struct ieee80211_channel *)(& b43legacy_bg_chantable), .bitrates = (struct ieee80211_rate *)(& __b43legacy_ratetable), .n_channels = 14, .n_bitrates = 4};
#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ieee80211_supported_band b43legacy_band_2GHz_GPHY = {.channels = (struct ieee80211_channel *)(& b43legacy_bg_chantable), .bitrates = (struct ieee80211_rate *)(& __b43legacy_ratetable), .n_channels = 14, .n_bitrates = 12};
#line 149 
#line 3171 
static void b43legacy_wireless_core_exit(struct b43legacy_wldev *dev);
#line 150 
#line 3247 
static int b43legacy_wireless_core_init(struct b43legacy_wldev *dev);
#line 151 
#line 2911 
static void b43legacy_wireless_core_stop(struct b43legacy_wldev *dev);
#line 152 
#line 2950 
static int b43legacy_wireless_core_start(struct b43legacy_wldev *dev);
#line 155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_ratelimit(struct b43legacy_wl *wl)
{
  #line 157 
  if (wl == (struct b43legacy_wl *)0 || wl->current_dev == (struct b43legacy_wldev *)0) 
    #line 158 
    return 1;
  #line 159 
  if (atomic_read(& (wl->current_dev)->__init_status) <= 1) 
                                                            #line 160 
                                                            return 1;
  #line 163 
  return net_ratelimit();
}

#line 166  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacyinfo(struct b43legacy_wl *wl, char *fmt , ...)
{
  #line 168 
  struct va_format vaf;
  #line 169 
  va_list args;
  #line 179 
  char *tmp_1;
  #line 171 
  if (b43legacy_ratelimit(wl) == 0) 
                                    #line 172 
                                    return;
  #line 174 
  #line 174 
  __builtin_va_start(args,fmt);
  #line 176 
  vaf.fmt = fmt;
  #line 177 
  vaf.va = & args;
  #line 179 
  if (wl != (struct b43legacy_wl *)0 && wl->hw != (struct ieee80211_hw *)0) 
    #line 180 
    tmp_1 = wiphy_name((wl->hw)->wiphy); else 
                                              #line 179 
                                              tmp_1 = (char *)"wlan";
  #line 179 
  printk((char *)"\001",tmp_1,& vaf);
  #line 182 
  __builtin_va_end(args);
  #line 183 
  return;
}

#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacyerr(struct b43legacy_wl *wl, char *fmt , ...)
{
  #line 187 
  struct va_format vaf;
  #line 188 
  va_list args;
  #line 198 
  char *tmp_1;
  #line 190 
  if (b43legacy_ratelimit(wl) == 0) 
                                    #line 191 
                                    return;
  #line 193 
  #line 193 
  __builtin_va_start(args,fmt);
  #line 195 
  vaf.fmt = fmt;
  #line 196 
  vaf.va = & args;
  #line 198 
  if (wl != (struct b43legacy_wl *)0 && wl->hw != (struct ieee80211_hw *)0) 
    #line 199 
    tmp_1 = wiphy_name((wl->hw)->wiphy); else 
                                              #line 198 
                                              tmp_1 = (char *)"wlan";
  #line 198 
  printk((char *)"\001",tmp_1,& vaf);
  #line 201 
  __builtin_va_end(args);
  #line 202 
  return;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacywarn(struct b43legacy_wl *wl, char *fmt , ...)
{
  #line 206 
  struct va_format vaf;
  #line 207 
  va_list args;
  #line 217 
  char *tmp_1;
  #line 209 
  if (b43legacy_ratelimit(wl) == 0) 
                                    #line 210 
                                    return;
  #line 212 
  #line 212 
  __builtin_va_start(args,fmt);
  #line 214 
  vaf.fmt = fmt;
  #line 215 
  vaf.va = & args;
  #line 217 
  if (wl != (struct b43legacy_wl *)0 && wl->hw != (struct ieee80211_hw *)0) 
    #line 218 
    tmp_1 = wiphy_name((wl->hw)->wiphy); else 
                                              #line 217 
                                              tmp_1 = (char *)"wlan";
  #line 217 
  printk((char *)"\001",tmp_1,& vaf);
  #line 220 
  __builtin_va_end(args);
  #line 221 
  return;
}

#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacydbg(struct b43legacy_wl *wl, char *fmt , ...)
{
  #line 226 
  struct va_format vaf;
  #line 227 
  va_list args;
  #line 234 
  char *tmp_0;
  #line 229 
  #line 229 
  __builtin_va_start(args,fmt);
  #line 231 
  vaf.fmt = fmt;
  #line 232 
  vaf.va = & args;
  #line 234 
  if (wl != (struct b43legacy_wl *)0 && wl->hw != (struct ieee80211_hw *)0) 
    #line 235 
    tmp_0 = wiphy_name((wl->hw)->wiphy); else 
                                              #line 234 
                                              tmp_0 = (char *)"wlan";
  #line 234 
  printk((char *)"\001",tmp_0,& vaf);
  #line 237 
  __builtin_va_end(args);
  #line 238 
  return;
}

#line 241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_ram_write(struct b43legacy_wldev *dev, u16 offset, u32 val)
{
  #line 244 
  u32 status;
  {
    #line 246 
    int __ret_warn_on = ((unsigned int)offset & 3U) != 0U;
    #line 246 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 247 
      ldv_inline_asm();
      #line 248 
      ldv_inline_asm();
    }
    #line 246 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 248 
  status = b43legacy_read32(dev,(unsigned short)288);
  #line 249 
  if ((status & 65536U) != 0U) 
                               #line 250 
                               val = __builtin_bswap32(val);
  #line 252 
  b43legacy_write32(dev,(unsigned short)304,(unsigned int)offset);
  #line 253 
  b43legacy_write32(dev,(unsigned short)308,val);
  #line 254 
  return;
}

#line 257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
__inline static void b43legacy_shm_control_word(struct b43legacy_wldev *dev, u16 routing, u16 offset)
{
  #line 260 
  u32 control;
  #line 264 
  control = (unsigned int)routing;
  #line 265 
  control <<= 16;
  #line 266 
  control = (unsigned int)offset | control;
  #line 267 
  b43legacy_write32(dev,(unsigned short)352,control);
  #line 268 
  return;
}

#line 270  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
u32 b43legacy_shm_read32(struct b43legacy_wldev *dev, u16 routing, u16 offset)
{
  #line 273 
  u32 ret;
  #line 275 
  if ((unsigned int)routing == 1U) {
    {
      #line 276 
      int __ret_warn_on = ((int)offset & 1) != 0;
      #line 276 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 277 
        ldv_inline_asm();
        #line 278 
        ldv_inline_asm();
      }
      #line 276 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 277 
    if (((int)offset & 3) != 0) {
      #line 279 
      b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset >> 2));
      #line 280 
      ret = (unsigned int)b43legacy_read16(dev,(unsigned short)358);
      #line 282 
      ret <<= 16;
      #line 283 
      b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)((unsigned int)((unsigned short)((int)offset >> 2)) + 1U)));
      #line 285 
      ret = (unsigned int)b43legacy_read16(dev,(unsigned short)356) | ret;
      #line 287 
      return ret;
    }
    #line 289 
    offset = (unsigned short)((int)offset >> 2);
  }
  #line 291 
  b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset));
  #line 292 
  ret = b43legacy_read32(dev,(unsigned short)356);
  #line 294 
  return ret;
}

#line 297  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
u16 b43legacy_shm_read16(struct b43legacy_wldev *dev, u16 routing, u16 offset)
{
  #line 300 
  u16 ret;
  #line 302 
  if ((unsigned int)routing == 1U) {
    {
      #line 303 
      int __ret_warn_on = ((int)offset & 1) != 0;
      #line 303 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 304 
        ldv_inline_asm();
        #line 305 
        ldv_inline_asm();
      }
      #line 303 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 304 
    if (((int)offset & 3) != 0) {
      #line 306 
      b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset >> 2));
      #line 307 
      ret = b43legacy_read16(dev,(unsigned short)358);
      #line 310 
      return ret;
    }
    #line 312 
    offset = (unsigned short)((int)offset >> 2);
  }
  #line 314 
  b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset));
  #line 315 
  ret = b43legacy_read16(dev,(unsigned short)356);
  #line 317 
  return ret;
}

#line 320  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_shm_write32(struct b43legacy_wldev *dev, u16 routing, u16 offset, u32 value)
{
  #line 324 
  if ((unsigned int)routing == 1U) {
    {
      #line 325 
      int __ret_warn_on = ((int)offset & 1) != 0;
      #line 325 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 326 
        ldv_inline_asm();
        #line 327 
        ldv_inline_asm();
      }
      #line 325 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 326 
    if (((int)offset & 3) != 0) {
      #line 328 
      b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset >> 2));
      #line 329 
      b43legacy_write16(dev,(unsigned short)358,(unsigned short)((int)((unsigned short)(value >> 16))));
      #line 332 
      b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)((unsigned int)((unsigned short)((int)offset >> 2)) + 1U)));
      #line 334 
      b43legacy_write16(dev,(unsigned short)356,(unsigned short)((int)((unsigned short)value)));
      #line 336 
      return;
    }
    #line 338 
    offset = (unsigned short)((int)offset >> 2);
  }
  #line 340 
  b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset));
  #line 341 
  b43legacy_write32(dev,(unsigned short)356,value);
  #line 342 
  return;
}

#line 344  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_shm_write16(struct b43legacy_wldev *dev, u16 routing, u16 offset, u16 value)
{
  #line 347 
  if ((unsigned int)routing == 1U) {
    {
      #line 348 
      int __ret_warn_on = ((int)offset & 1) != 0;
      #line 348 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 349 
        ldv_inline_asm();
        #line 350 
        ldv_inline_asm();
      }
      #line 348 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 349 
    if (((int)offset & 3) != 0) {
      #line 351 
      b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset >> 2));
      #line 352 
      b43legacy_write16(dev,(unsigned short)358,(unsigned short)((int)value));
      #line 355 
      return;
    }
    #line 357 
    offset = (unsigned short)((int)offset >> 2);
  }
  #line 359 
  b43legacy_shm_control_word(dev,(unsigned short)((int)routing),(unsigned short)((int)offset));
  #line 360 
  b43legacy_write16(dev,(unsigned short)356,(unsigned short)((int)value));
  #line 361 
  return;
}

#line 364  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
u32 b43legacy_hf_read(struct b43legacy_wldev *dev)
{
  #line 366 
  u32 ret;
  #line 368 
  ret = (unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)96);
  #line 370 
  ret <<= 16;
  #line 372 
  ret = (unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)94) | ret;
  #line 374 
  return ret;
}

#line 378  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_hf_write(struct b43legacy_wldev *dev, u32 value)
{
  #line 380 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)94,(unsigned short)((int)((unsigned short)value)));
  #line 383 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)96,(unsigned short)((int)((unsigned short)(value >> 16))));
  #line 386 
  return;
}

#line 388  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_tsf_read(struct b43legacy_wldev *dev, u64 *tsf)
{
  #line 396 
  if ((unsigned int)(dev->dev)->id.revision > 2U) {
    #line 397 
    u32 low;
    #line 398 
    u32 high;
    #line 399 
    u32 high2;
    #line 401 
    while (1) {
      #line 402 
      high = b43legacy_read32(dev,(unsigned short)388);
      #line 404 
      low = b43legacy_read32(dev,(unsigned short)384);
      #line 406 
      high2 = b43legacy_read32(dev,(unsigned short)388);
      #line 407 
      if (! ((long)(high != high2) != 0L)) 
                                           #line 401 
                                           break;
    }
    #line 410 
    *tsf = (unsigned long long)high;
    #line 411 
    *tsf <<= 32;
    #line 412 
    *tsf |= (unsigned long long)low;
  }
  else {
    #line 414 
    u64 tmp;
    #line 415 
    u16 v0;
    #line 416 
    u16 v1;
    #line 417 
    u16 v2;
    #line 418 
    u16 v3;
    #line 419 
    u16 test1;
    #line 420 
    u16 test2;
    #line 421 
    u16 test3;
    #line 423 
    while (1) {
      #line 424 
      v3 = b43legacy_read16(dev,(unsigned short)1592);
      #line 425 
      v2 = b43legacy_read16(dev,(unsigned short)1590);
      #line 426 
      v1 = b43legacy_read16(dev,(unsigned short)1588);
      #line 427 
      v0 = b43legacy_read16(dev,(unsigned short)1586);
      #line 429 
      test3 = b43legacy_read16(dev,(unsigned short)1592);
      #line 430 
      test2 = b43legacy_read16(dev,(unsigned short)1590);
      #line 431 
      test1 = b43legacy_read16(dev,(unsigned short)1588);
      #line 432 
      if (! (((int)v3 != (int)test3 || (int)v2 != (int)test2) || (int)v1 != (int)test1)) 
        #line 423 
        break;
    }
    #line 434 
    *tsf = (unsigned long long)v3;
    #line 435 
    *tsf <<= 48;
    #line 436 
    tmp = (unsigned long long)v2;
    #line 437 
    tmp <<= 32;
    #line 438 
    *tsf |= tmp;
    #line 439 
    tmp = (unsigned long long)v1;
    #line 440 
    tmp <<= 16;
    #line 441 
    *tsf |= tmp;
    #line 442 
    *tsf |= (unsigned long long)v0;
  }
  #line 444 
  return;
}

#line 446  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_time_lock(struct b43legacy_wldev *dev)
{
  #line 448 
  u32 status;
  #line 450 
  status = b43legacy_read32(dev,(unsigned short)288);
  #line 451 
  status |= 268435456U;
  #line 452 
  b43legacy_write32(dev,(unsigned short)288,status);
  #line 453 
  return;
}

#line 455  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_time_unlock(struct b43legacy_wldev *dev)
{
  #line 457 
  u32 status;
  #line 459 
  status = b43legacy_read32(dev,(unsigned short)288);
  #line 460 
  status &= 4026531839U;
  #line 461 
  b43legacy_write32(dev,(unsigned short)288,status);
  #line 462 
  return;
}

#line 464  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_tsf_write_locked(struct b43legacy_wldev *dev, u64 tsf)
{
  #line 470 
  if ((unsigned int)(dev->dev)->id.revision > 2U) {
    #line 471 
    u32 lo = (unsigned int)tsf;
    #line 472 
    u32 hi = (unsigned int)(tsf >> 32);
    #line 474 
    b43legacy_write32(dev,(unsigned short)384,0U);
    #line 475 
    b43legacy_write32(dev,(unsigned short)388,hi);
    #line 477 
    b43legacy_write32(dev,(unsigned short)384,lo);
  }
  else {
    #line 480 
    u16 v0 = (unsigned short)tsf;
    #line 481 
    u16 v1 = (unsigned short)(tsf >> 16);
    #line 482 
    u16 v2 = (unsigned short)(tsf >> 32);
    #line 483 
    u16 v3 = (unsigned short)(tsf >> 48);
    #line 485 
    b43legacy_write16(dev,(unsigned short)1586,(unsigned short)0);
    #line 486 
    b43legacy_write16(dev,(unsigned short)1592,(unsigned short)((int)v3));
    #line 487 
    b43legacy_write16(dev,(unsigned short)1590,(unsigned short)((int)v2));
    #line 488 
    b43legacy_write16(dev,(unsigned short)1588,(unsigned short)((int)v1));
    #line 489 
    b43legacy_write16(dev,(unsigned short)1586,(unsigned short)((int)v0));
  }
  #line 491 
  return;
}

#line 493  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_tsf_write(struct b43legacy_wldev *dev, u64 tsf)
{
  #line 495 
  b43legacy_time_lock(dev);
  #line 496 
  b43legacy_tsf_write_locked(dev,tsf);
  #line 497 
  b43legacy_time_unlock(dev);
  #line 498 
  return;
}

#line 501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_macfilter_set(struct b43legacy_wldev *dev, u16 offset, u8 *mac)
{
  #line 505 
  u16 data;
  #line 504 
  u8 zero_addr[6U] = {(unsigned char)0U};
  #line 507 
  if (mac == (u8 *)0U) 
                       #line 508 
                       mac = (u8 *)(& zero_addr);
  #line 510 
  offset = (unsigned short)((unsigned int)offset | 32U);
  #line 511 
  b43legacy_write16(dev,(unsigned short)1056,(unsigned short)((int)offset));
  #line 513 
  data = (unsigned short)*mac;
  #line 514 
  data = (unsigned short)(((int)*(mac + 1U) << 8) | (int)data);
  #line 515 
  b43legacy_write16(dev,(unsigned short)1058,(unsigned short)((int)data));
  #line 516 
  data = (unsigned short)*(mac + 2U);
  #line 517 
  data = (unsigned short)(((int)*(mac + 3U) << 8) | (int)data);
  #line 518 
  b43legacy_write16(dev,(unsigned short)1058,(unsigned short)((int)data));
  #line 519 
  data = (unsigned short)*(mac + 4U);
  #line 520 
  data = (unsigned short)(((int)*(mac + 5U) << 8) | (int)data);
  #line 521 
  b43legacy_write16(dev,(unsigned short)1058,(unsigned short)((int)data));
  #line 522 
  return;
}

#line 524  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_write_mac_bssid_templates(struct b43legacy_wldev *dev)
{
  #line 529 
  u8 mac_bssid[12U];
  #line 530 
  int i;
  #line 531 
  u32 tmp;
  #line 526 
  u8 zero_addr[6U] = {(unsigned char)0U};
  #line 527 
  u8 *mac = (u8 *)(& (dev->wl)->mac_addr);
  #line 528 
  u8 *bssid = (u8 *)(& (dev->wl)->bssid);
  #line 533 
  if (bssid == (u8 *)0U) 
                         #line 534 
                         bssid = (u8 *)(& zero_addr);
  #line 535 
  if (mac == (u8 *)0U) 
                       #line 536 
                       mac = (u8 *)(& zero_addr);
  #line 538 
  b43legacy_macfilter_set(dev,(unsigned short)3,bssid);
  #line 540 
  memcpy((void *)(& mac_bssid),(void *)mac,6UL);
  #line 541 
  memcpy((void *)((u8 *)(& mac_bssid) + 6U),(void *)bssid,6UL);
  #line 544 
  i = 0;
  #line 544 
  while ((unsigned int)i <= 11U) {
    #line 545 
    tmp = (unsigned int)mac_bssid[i];
    #line 546 
    tmp = ((unsigned int)mac_bssid[i + 1] << 8) | tmp;
    #line 547 
    tmp = ((unsigned int)mac_bssid[i + 2] << 16) | tmp;
    #line 548 
    tmp = ((unsigned int)mac_bssid[i + 3] << 24) | tmp;
    #line 549 
    b43legacy_ram_write(dev,(unsigned short)((int)((unsigned int)((unsigned short)i) + 32U)),tmp);
    #line 550 
    b43legacy_ram_write(dev,(unsigned short)((int)((unsigned int)((unsigned short)i) + 120U)),tmp);
    #line 551 
    b43legacy_ram_write(dev,(unsigned short)((int)((unsigned int)((unsigned short)i) + 1144U)),tmp);
    #line 544 
    i = (int)((unsigned int)i + 4U);
  }
  #line 553 
  return;
}

#line 555  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_upload_card_macaddress(struct b43legacy_wldev *dev)
{
  #line 557 
  b43legacy_write_mac_bssid_templates(dev);
  #line 558 
  b43legacy_macfilter_set(dev,(unsigned short)0,(u8 *)(& (dev->wl)->mac_addr));
  #line 560 
  return;
}

#line 562  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_set_slot_time(struct b43legacy_wldev *dev, u16 slot_time)
{
  #line 566 
  if ((unsigned int)dev->phy.type != 2U) 
                                         #line 567 
                                         return;
  #line 568 
  b43legacy_write16(dev,(unsigned short)1668,(unsigned short)((int)((unsigned int)slot_time + 510U)));
  #line 569 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)16,(unsigned short)((int)slot_time));
  #line 570 
  return;
}

#line 573  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_short_slot_timing_enable(struct b43legacy_wldev *dev)
{
  #line 575 
  b43legacy_set_slot_time(dev,(unsigned short)9);
  #line 576 
  return;
}

#line 578  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_short_slot_timing_disable(struct b43legacy_wldev *dev)
{
  #line 580 
  b43legacy_set_slot_time(dev,(unsigned short)20);
  #line 581 
  return;
}

#line 587  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_synchronize_irq(struct b43legacy_wldev *dev)
{
  #line 589 
  synchronize_irq((dev->dev)->irq);
  #line 590 
  tasklet_kill(& dev->isr_tasklet);
  #line 591 
  return;
}

#line 596  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_dummy_transmission(struct b43legacy_wldev *dev)
{
  #line 599 
  unsigned int i;
  #line 600 
  unsigned int max_loop;
  #line 601 
  u16 value;
  #line 598 
  struct b43legacy_phy *phy = & dev->phy;
  #line 602 
  u32 buffer[5U] = {0U, 13893632U, 0U, 16777216U, 0U};
  #line 610 
  switch ((int)phy->type) {
    #line 611 
    case 1: 
            #line 611 
    ;
    #line 612 
    case 2: 
            #line 612 
    ;
    #line 613 
    max_loop = 250U;
    #line 614 
    buffer[0] = 754798U;
    #line 615 
    break;
    #line 616 
    default: 
             #line 616 
    ;
    #line 617 
    printk((char *)"\001",(char *)"1");
    #line 618 
    ldv_inline_asm();
    #line 619 
    ldv_inline_asm();
    #line 620 
    ldv_inline_asm();
    #line 617 
    ;
    #line 618 
    return;
  }
  #line 621 
  i = 0U;
  #line 621 
  while (i <= 4U) {
    #line 622 
    b43legacy_ram_write(dev,(unsigned short)((int)((unsigned int)((unsigned short)i) * 4U)),buffer[i]);
    #line 621 
    i ++;
  }
  #line 625 
  b43legacy_read32(dev,(unsigned short)288);
  #line 627 
  b43legacy_write16(dev,(unsigned short)1384,(unsigned short)0);
  #line 628 
  b43legacy_write16(dev,(unsigned short)1984,(unsigned short)0);
  #line 629 
  b43legacy_write16(dev,(unsigned short)1292,(unsigned short)0);
  #line 630 
  b43legacy_write16(dev,(unsigned short)1288,(unsigned short)0);
  #line 631 
  b43legacy_write16(dev,(unsigned short)1290,(unsigned short)0);
  #line 632 
  b43legacy_write16(dev,(unsigned short)1356,(unsigned short)0);
  #line 633 
  b43legacy_write16(dev,(unsigned short)1386,(unsigned short)20);
  #line 634 
  b43legacy_write16(dev,(unsigned short)1384,(unsigned short)2086);
  #line 635 
  b43legacy_write16(dev,(unsigned short)1280,(unsigned short)0);
  #line 636 
  b43legacy_write16(dev,(unsigned short)1282,(unsigned short)48);
  #line 638 
  if ((unsigned int)phy->radio_ver == 8272U && (unsigned int)phy->radio_rev <= 5U) 
    #line 639 
    b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)23);
  #line 640 
  i = 0U;
  #line 640 
  while (i < max_loop) {
    #line 641 
    value = b43legacy_read16(dev,(unsigned short)1294);
    #line 642 
    if (((int)value & 128) != 0) 
                                 #line 643 
                                 break;
    #line 644 
    __const_udelay(42950UL);
    #line 640 
    i ++;
  }
  #line 646 
  i = 0U;
  #line 646 
  while (i <= 9U) {
    #line 647 
    value = b43legacy_read16(dev,(unsigned short)1294);
    #line 648 
    if (((int)value & 1024) != 0) 
                                  #line 649 
                                  break;
    #line 650 
    __const_udelay(42950UL);
    #line 646 
    i ++;
  }
  #line 652 
  i = 0U;
  #line 652 
  while (i <= 9U) {
    #line 653 
    value = b43legacy_read16(dev,(unsigned short)1680);
    #line 654 
    if (((int)value & 256) == 0) 
                                 #line 655 
                                 break;
    #line 656 
    __const_udelay(42950UL);
    #line 652 
    i ++;
  }
  #line 658 
  if ((unsigned int)phy->radio_ver == 8272U && (unsigned int)phy->radio_rev <= 5U) 
    #line 659 
    b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)55);
  #line 660 
  return;
}

#line 663  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_switch_analog(struct b43legacy_wldev *dev, int on)
{
  #line 665 
  int tmp;
  #line 665 
  if (on != 0) 
               #line 665 
               tmp = 0; else 
                             #line 665 
                             tmp = 244;
  #line 665 
  ;
  #line 665 
  b43legacy_write16(dev,(unsigned short)998,(unsigned short)tmp);
  #line 666 
  return;
}

#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_wireless_core_reset(struct b43legacy_wldev *dev, u32 flags)
{
  #line 670 
  u32 tmslow;
  #line 671 
  u32 macctl;
  #line 673 
  flags |= 262144U;
  #line 674 
  flags |= 524288U;
  #line 675 
  ssb_device_enable(dev->dev,flags);
  #line 676 
  msleep(2U);
  #line 679 
  tmslow = ssb_read32(dev->dev,(unsigned short)3992);
  #line 680 
  tmslow |= 131072U;
  #line 681 
  tmslow &= 4294443007U;
  #line 682 
  ssb_write32(dev->dev,(unsigned short)3992,tmslow);
  #line 683 
  ssb_read32(dev->dev,(unsigned short)3992);
  #line 684 
  msleep(1U);
  #line 685 
  tmslow &= 4294836223U;
  #line 686 
  ssb_write32(dev->dev,(unsigned short)3992,tmslow);
  #line 687 
  ssb_read32(dev->dev,(unsigned short)3992);
  #line 688 
  msleep(1U);
  #line 691 
  b43legacy_switch_analog(dev,1);
  #line 693 
  macctl = b43legacy_read32(dev,(unsigned short)288);
  #line 694 
  macctl &= 2147483647U;
  #line 695 
  if ((flags & 536870912U) != 0U) {
    #line 696 
    macctl |= 2147483648U;
    #line 697 
    dev->phy.gmode = (_Bool)1;
  }
  else 
       #line 699 
       dev->phy.gmode = (_Bool)0;
  #line 700 
  macctl |= 1024U;
  #line 701 
  b43legacy_write32(dev,(unsigned short)288,macctl);
  #line 702 
  return;
}

#line 704  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_transmit_status(struct b43legacy_wldev *dev)
{
  #line 706 
  u32 v0;
  #line 707 
  u32 v1;
  #line 708 
  u16 tmp;
  #line 709 
  struct b43legacy_txstatus stat;
  #line 711 
  while (1) {
    #line 712 
    v0 = b43legacy_read32(dev,(unsigned short)368);
    #line 713 
    if ((v0 & 1U) == 0U) 
                         #line 714 
                         break;
    #line 715 
    v1 = b43legacy_read32(dev,(unsigned short)372);
    #line 717 
    stat.cookie = (unsigned short)(v0 >> 16);
    #line 718 
    stat.seq = (unsigned short)v1;
    #line 719 
    stat.phy_stat = (unsigned char)(v1 >> 16);
    #line 720 
    tmp = (unsigned short)v0;
    #line 721 
    stat.frame_count = (unsigned char)((int)tmp >> 12);
    #line 722 
    stat.rts_count = (unsigned char)((unsigned int)((unsigned char)((int)tmp >> 8)) & 15U);
    #line 723 
    stat.supp_reason = (unsigned char)((unsigned int)((unsigned char)((int)tmp >> 2)) & 7U);
    #line 724 
    stat.pm_indicated = (unsigned char)(((int)tmp & 128) != 0);
    #line 725 
    stat.intermediate = (unsigned char)(((int)tmp & 64) != 0);
    #line 726 
    stat.for_ampdu = (unsigned char)(((int)tmp & 32) != 0);
    #line 727 
    stat.acked = (unsigned char)(((int)tmp & 2) != 0);
    #line 729 
    b43legacy_handle_txstatus(dev,& stat);
  }
  #line 731 
  return;
}

#line 733  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void drain_txstatus_queue(struct b43legacy_wldev *dev)
{
  #line 735 
  u32 dummy;
  #line 737 
  if ((unsigned int)(dev->dev)->id.revision <= 4U) 
                                                   #line 738 
                                                   return;
  #line 742 
  while (1) {
    #line 743 
    dummy = b43legacy_read32(dev,(unsigned short)368);
    #line 744 
    if ((dummy & 1U) == 0U) 
                            #line 745 
                            break;
    #line 746 
    dummy = b43legacy_read32(dev,(unsigned short)372);
  }
  #line 748 
  return;
}

#line 750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static u32 b43legacy_jssi_read(struct b43legacy_wldev *dev)
{
  #line 752 
  u32 val = 0U;
  #line 754 
  val = (unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)1034);
  #line 755 
  val <<= 16;
  #line 756 
  val = (unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)1032) | val;
  #line 758 
  return val;
}

#line 761  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_jssi_write(struct b43legacy_wldev *dev, u32 jssi)
{
  #line 763 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)1032,(unsigned short)((int)((unsigned short)jssi)));
  #line 765 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)1034,(unsigned short)((int)((unsigned short)(jssi >> 16))));
  #line 767 
  return;
}

#line 769  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_generate_noise_sample(struct b43legacy_wldev *dev)
{
  #line 771 
  b43legacy_jssi_write(dev,2139062143U);
  #line 772 
  ;
  #line 772 
  b43legacy_write32(dev,(unsigned short)292,b43legacy_read32(dev,(unsigned short)292) | 16U);
  {
    #line 775 
    int __ret_warn_on = (int)dev->noisecalc.channel_at_start != (int)dev->phy.channel;
    #line 775 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 776 
      ldv_inline_asm();
      #line 777 
      ldv_inline_asm();
    }
    #line 775 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 777 
  return;
}

#line 779  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_calculate_link_quality(struct b43legacy_wldev *dev)
{
  #line 783 
  if ((int)dev->noisecalc.calculation_running != 0) 
                                                    #line 784 
                                                    return;
  #line 785 
  dev->noisecalc.channel_at_start = dev->phy.channel;
  #line 786 
  dev->noisecalc.calculation_running = (_Bool)1;
  #line 787 
  dev->noisecalc.nr_samples = (unsigned char)0U;
  #line 789 
  b43legacy_generate_noise_sample(dev);
  #line 790 
  return;
}

#line 792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_noise(struct b43legacy_wldev *dev)
{
  #line 816 
  unsigned char __UNIQUE_ID___x586;
  #line 814 
  unsigned char __UNIQUE_ID___x578;
  #line 816 
  int tmp_11;
  #line 814 
  int tmp_3;
  #line 817 
  unsigned char __UNIQUE_ID___x590;
  #line 815 
  unsigned char __UNIQUE_ID___x582;
  #line 817 
  int tmp_15;
  #line 815 
  int tmp_7;
  #line 795 
  u16 tmp;
  #line 796 
  u8 noise[4U];
  #line 797 
  u8 i;
  #line 798 
  u8 j;
  #line 799 
  s32 average;
  #line 794 
  struct b43legacy_phy *phy = & dev->phy;
  {
    #line 803 
    int __ret_warn_on = ! dev->noisecalc.calculation_running;
    #line 803 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 804 
      ldv_inline_asm();
      #line 805 
      ldv_inline_asm();
    }
    #line 803 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 804 
  if ((int)dev->noisecalc.channel_at_start != (int)phy->channel) 
                                                                 #line 805 
                                                                 goto drop_calculation;
  #line 806 
  *((__le32 *)(& noise)) = b43legacy_jssi_read(dev);
  #line 807 
  if ((((unsigned int)noise[0] == 127U || (unsigned int)noise[1] == 127U) || (unsigned int)noise[2] == 127U) || (unsigned int)noise[3] == 127U) 
    #line 809 
    goto generate_new;
  {
    #line 812 
    int __ret_warn_on_0 = (unsigned int)dev->noisecalc.nr_samples > 7U;
    #line 812 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 813 
      ldv_inline_asm();
      #line 814 
      ldv_inline_asm();
    }
    #line 812 
    long tmp_4 = (long)(__ret_warn_on_0 != 0);
  }
  #line 813 
  i = dev->noisecalc.nr_samples;
  {
    #line 814 
    unsigned char __UNIQUE_ID___x576;
    #line 814 
    int tmp_1;
    {
      #line 814 
      __UNIQUE_ID___x576 = noise[0];
      #line 814 
      unsigned char __UNIQUE_ID___y577 = (unsigned char)0U;
      #line 814 
      if ((int)__UNIQUE_ID___x576 > (int)__UNIQUE_ID___y577) 
                                                             #line 814 
                                                             tmp_1 = (int)__UNIQUE_ID___x576; else 
                                                                    #line 814 
                                                                    tmp_1 = (int)__UNIQUE_ID___y577;
      }
    #line 814 
    __UNIQUE_ID___x578 = (unsigned char)tmp_1;
    #line 814 
    unsigned char __UNIQUE_ID___y579 = (unsigned char)63U;
    #line 814 
    if ((int)__UNIQUE_ID___x578 < (int)__UNIQUE_ID___y579) 
                                                           #line 814 
                                                           tmp_3 = (int)__UNIQUE_ID___x578; else 
                                                                    #line 814 
                                                                    tmp_3 = (int)__UNIQUE_ID___y579;
    }
  #line 814 
  noise[0] = (unsigned char)tmp_3;
  {
    #line 815 
    unsigned char __UNIQUE_ID___x580;
    #line 815 
    int tmp_5;
    {
      #line 815 
      __UNIQUE_ID___x580 = noise[1];
      #line 815 
      unsigned char __UNIQUE_ID___y581 = (unsigned char)0U;
      #line 815 
      if ((int)__UNIQUE_ID___x580 > (int)__UNIQUE_ID___y581) 
                                                             #line 815 
                                                             tmp_5 = (int)__UNIQUE_ID___x580; else 
                                                                    #line 815 
                                                                    tmp_5 = (int)__UNIQUE_ID___y581;
      }
    #line 815 
    __UNIQUE_ID___x582 = (unsigned char)tmp_5;
    #line 815 
    unsigned char __UNIQUE_ID___y583 = (unsigned char)63U;
    #line 815 
    if ((int)__UNIQUE_ID___x582 < (int)__UNIQUE_ID___y583) 
                                                           #line 815 
                                                           tmp_7 = (int)__UNIQUE_ID___x582; else 
                                                                    #line 815 
                                                                    tmp_7 = (int)__UNIQUE_ID___y583;
    }
  #line 815 
  noise[1] = (unsigned char)tmp_7;
  {
    #line 816 
    unsigned char __UNIQUE_ID___x584;
    #line 816 
    int tmp_9;
    {
      #line 816 
      __UNIQUE_ID___x584 = noise[2];
      #line 816 
      unsigned char __UNIQUE_ID___y585 = (unsigned char)0U;
      #line 816 
      if ((int)__UNIQUE_ID___x584 > (int)__UNIQUE_ID___y585) 
                                                             #line 816 
                                                             tmp_9 = (int)__UNIQUE_ID___x584; else 
                                                                    #line 816 
                                                                    tmp_9 = (int)__UNIQUE_ID___y585;
      }
    #line 816 
    __UNIQUE_ID___x586 = (unsigned char)tmp_9;
    #line 816 
    unsigned char __UNIQUE_ID___y587 = (unsigned char)63U;
    #line 816 
    if ((int)__UNIQUE_ID___x586 < (int)__UNIQUE_ID___y587) 
                                                           #line 816 
                                                           tmp_11 = (int)__UNIQUE_ID___x586; else 
                                                                    #line 816 
                                                                    tmp_11 = (int)__UNIQUE_ID___y587;
    }
  #line 816 
  noise[2] = (unsigned char)tmp_11;
  {
    #line 817 
    unsigned char __UNIQUE_ID___x588;
    #line 817 
    int tmp_13;
    {
      #line 817 
      __UNIQUE_ID___x588 = noise[3];
      #line 817 
      unsigned char __UNIQUE_ID___y589 = (unsigned char)0U;
      #line 817 
      if ((int)__UNIQUE_ID___x588 > (int)__UNIQUE_ID___y589) 
                                                             #line 817 
                                                             tmp_13 = (int)__UNIQUE_ID___x588; else 
                                                                    #line 817 
                                                                    tmp_13 = (int)__UNIQUE_ID___y589;
      }
    #line 817 
    __UNIQUE_ID___x590 = (unsigned char)tmp_13;
    #line 817 
    unsigned char __UNIQUE_ID___y591 = (unsigned char)63U;
    #line 817 
    if ((int)__UNIQUE_ID___x590 < (int)__UNIQUE_ID___y591) 
                                                           #line 817 
                                                           tmp_15 = (int)__UNIQUE_ID___x590; else 
                                                                    #line 817 
                                                                    tmp_15 = (int)__UNIQUE_ID___y591;
    }
  #line 817 
  noise[3] = (unsigned char)tmp_15;
  #line 818 
  dev->noisecalc.samples[(int)i][0] = phy->nrssi_lt[(int)noise[0]];
  #line 819 
  dev->noisecalc.samples[(int)i][1] = phy->nrssi_lt[(int)noise[1]];
  #line 820 
  dev->noisecalc.samples[(int)i][2] = phy->nrssi_lt[(int)noise[2]];
  #line 821 
  dev->noisecalc.samples[(int)i][3] = phy->nrssi_lt[(int)noise[3]];
  #line 822 
  dev->noisecalc.nr_samples = (u8)((int)dev->noisecalc.nr_samples + 1);
  #line 823 
  if ((unsigned int)dev->noisecalc.nr_samples == 8U) {
    #line 825 
    average = 0;
    #line 826 
    i = (unsigned char)0U;
    #line 826 
    while ((unsigned int)i <= 7U) {
      #line 827 
      j = (unsigned char)0U;
      #line 827 
      while ((unsigned int)j <= 3U) {
        #line 828 
        average = (int)dev->noisecalc.samples[(int)i][(int)j] + average;
        #line 827 
        j = (u8)((int)j + 1);
      }
      #line 826 
      i = (u8)((int)i + 1);
    }
    #line 830 
    average /= 32;
    #line 831 
    average *= 125;
    #line 832 
    average += 64;
    #line 833 
    average /= 128;
    #line 834 
    tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)1036);
    #line 836 
    tmp = (unsigned short)((unsigned int)((unsigned short)((unsigned int)tmp / 128U)) & 31U);
    #line 837 
    if ((unsigned int)tmp > 7U) 
                                #line 838 
                                average += 2; else 
                                                   #line 840 
                                                   average += -25;
    #line 841 
    if ((unsigned int)tmp == 8U) 
                                 #line 842 
                                 average += -72; else 
                                                      #line 844 
                                                      average += -48;
    #line 846 
    dev->stats.link_noise = (unsigned char)average;
    #line 847 
    drop_calculation: 
                      #line 847 
    ;
    #line 848 
    dev->noisecalc.calculation_running = (_Bool)0;
    #line 849 
    return;
  }
  #line 851 
  generate_new: 
                #line 851 
  ;
  #line 852 
  b43legacy_generate_noise_sample(dev);
  #line 853 
  return;
}

#line 855  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_tbtt_indication(struct b43legacy_wldev *dev)
{
  #line 857 
  if (! (b43legacy_is_mode(dev->wl,3) != 0)) 
                                             #line 861 
                                             b43legacy_power_saving_ctl_bits(dev,-1,-1);
  #line 863 
  if (b43legacy_is_mode(dev->wl,1) != 0) 
                                         #line 864 
                                         dev->dfq_valid = (_Bool)1;
  #line 865 
  return;
}

#line 867  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_atim_end(struct b43legacy_wldev *dev)
{
  #line 869 
  if ((int)dev->dfq_valid != 0) {
    #line 870 
    ;
    #line 870 
    b43legacy_write32(dev,(unsigned short)292,b43legacy_read32(dev,(unsigned short)292) | 4U);
    #line 873 
    dev->dfq_valid = (_Bool)0;
  }
  #line 875 
  return;
}

#line 877  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_pmq(struct b43legacy_wldev *dev)
{
  #line 879 
  u32 tmp;
  #line 883 
  while (1) {
    #line 884 
    tmp = b43legacy_read32(dev,(unsigned short)320);
    #line 885 
    if ((tmp & 8U) == 0U) 
                          #line 886 
                          break;
  }
  #line 889 
  b43legacy_write16(dev,(unsigned short)320,(unsigned short)2);
  #line 890 
  return;
}

#line 892  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_write_template_common(struct b43legacy_wldev *dev, u8 *data, u16 size, u16 ram_offset, u16 shm_size_offset, u8 rate)
{
  #line 897 
  u32 i;
  #line 898 
  u32 tmp;
  #line 899 
  struct b43legacy_plcp_hdr4 plcp;
  #line 901 
  plcp.__anonCompField_b43legacy_plcp_hdr4_211.data = 0U;
  #line 902 
  b43legacy_generate_plcp_hdr(& plcp,(unsigned short)((int)((unsigned int)size + 4U)),(unsigned char)((int)rate));
  #line 903 
  b43legacy_ram_write(dev,(unsigned short)((int)ram_offset),plcp.__anonCompField_b43legacy_plcp_hdr4_211.data);
  #line 904 
  ram_offset = (unsigned short)((unsigned int)ram_offset + 4U);
  #line 908 
  tmp = (unsigned int)*data << 16;
  #line 909 
  tmp = ((unsigned int)*(data + 1U) << 24) | tmp;
  #line 910 
  b43legacy_ram_write(dev,(unsigned short)((int)ram_offset),tmp);
  #line 911 
  ram_offset = (unsigned short)((unsigned int)ram_offset + 4U);
  #line 912 
  i = 2U;
  #line 912 
  while ((unsigned int)size > i) {
    #line 913 
    tmp = (unsigned int)*(data + (unsigned long)i);
    #line 914 
    if (i + 1U < (unsigned int)size) 
                                     #line 915 
                                     tmp = ((unsigned int)*(data + (unsigned long)(i + 1U)) << 8) | tmp;
    #line 916 
    if (i + 2U < (unsigned int)size) 
                                     #line 917 
                                     tmp = ((unsigned int)*(data + (unsigned long)(i + 2U)) << 16) | tmp;
    #line 918 
    if (i + 3U < (unsigned int)size) 
                                     #line 919 
                                     tmp = ((unsigned int)*(data + (unsigned long)(i + 3U)) << 24) | tmp;
    #line 920 
    b43legacy_ram_write(dev,(unsigned short)((int)((unsigned int)((int)((unsigned short)i) + (int)ram_offset) + 65534U)),tmp);
    #line 912 
    i += 4U;
  }
  #line 922 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)shm_size_offset),(unsigned short)((int)((unsigned int)size + 6U)));
  #line 924 
  return;
}

#line 927  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static u16 b43legacy_antenna_to_phyctl(int antenna)
{
  #line 929 
  switch (antenna) {
    #line 930 
    case 0: 
            #line 930 
    ;
    #line 931 
    return (unsigned short)0U;
    #line 932 
    case 1: 
            #line 932 
    ;
    #line 933 
    return (unsigned short)256U;
  }
  #line 935 
  return (unsigned short)768U;
}

#line 938  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_write_beacon_template(struct b43legacy_wldev *dev, u16 ram_offset, u16 shm_size_offset)
{
  #line 953 
  unsigned long __UNIQUE_ID___x592;
  #line 953 
  unsigned long tmp_0;
  #line 943 
  unsigned int i;
  #line 943 
  unsigned int len;
  #line 943 
  unsigned int variable_len;
  #line 944 
  struct ieee80211_mgmt *bcn;
  #line 945 
  u8 *ie;
  #line 947 
  unsigned int rate;
  #line 948 
  u16 ctl;
  #line 949 
  int antenna;
  #line 946 
  bool tim_found = (_Bool)0;
  #line 950 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB((dev->wl)->current_beacon);
  #line 952 
  bcn = (struct ieee80211_mgmt *)((dev->wl)->current_beacon)->data;
  {
    #line 953 
    __UNIQUE_ID___x592 = (unsigned long)((dev->wl)->current_beacon)->len;
    #line 953 
    unsigned long __UNIQUE_ID___y593 = 506UL;
    #line 953 
    if (__UNIQUE_ID___x592 < __UNIQUE_ID___y593) 
                                                 #line 953 
                                                 tmp_0 = __UNIQUE_ID___x592; else 
                                                                    #line 953 
                                                                    tmp_0 = __UNIQUE_ID___y593;
    }
  #line 953 
  len = (unsigned int)tmp_0;
  #line 955 
  rate = (unsigned int)ieee80211_get_tx_rate((dev->wl)->hw,info)->hw_value;
  #line 957 
  b43legacy_write_template_common(dev,(u8 *)bcn,(unsigned short)((int)((unsigned short)len)),(unsigned short)((int)ram_offset),(unsigned short)((int)shm_size_offset),(unsigned char)((int)((unsigned char)rate)));
  #line 961 
  antenna = 3;
  #line 962 
  antenna = (int)b43legacy_antenna_to_phyctl(antenna);
  #line 963 
  ctl = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)84);
  #line 966 
  ctl = (unsigned short)((unsigned int)ctl & 65519U);
  #line 967 
  ctl = (unsigned short)((unsigned int)ctl & 64575U);
  #line 968 
  ctl = (unsigned short)((unsigned int)ctl & 65532U);
  #line 969 
  ctl = (unsigned short)(antenna | (int)ctl);
  #line 970 
  ctl = ctl;
  #line 971 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)84,(unsigned short)((int)ctl));
  #line 976 
  ie = (u8 *)(& bcn->u.beacon.variable);
  #line 977 
  variable_len = len + 4294967260U;
  #line 978 
  i = 0U;
  #line 978 
  while (variable_len + 4294967294U > i) {
    #line 979 
    uint8_t ie_id;
    #line 979 
    uint8_t ie_len;
    #line 981 
    ie_id = *(ie + (unsigned long)i);
    #line 982 
    ie_len = *(ie + (unsigned long)(i + 1U));
    #line 983 
    if ((unsigned int)ie_id == 5U) {
      #line 984 
      u16 tim_position;
      #line 985 
      u16 dtim_period;
      #line 989 
      if (((unsigned int)ie_len + i) + 2U > variable_len) 
                                                          #line 990 
                                                          break;
      #line 992 
      if ((unsigned int)ie_len <= 3U) 
                                      #line 993 
                                      break;
      #line 994 
      tim_found = (_Bool)1;
      #line 996 
      tim_position = (unsigned short)6U;
      #line 997 
      tim_position = (unsigned short)((unsigned int)tim_position + 36U);
      #line 999 
      tim_position = (unsigned short)((int)((unsigned short)i) + (int)tim_position);
      #line 1001 
      dtim_period = (unsigned short)*(ie + (unsigned long)(i + 3U));
      #line 1003 
      b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)30,(unsigned short)((int)tim_position));
      #line 1005 
      b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)18,(unsigned short)((int)dtim_period));
      #line 1007 
      break;
    }
    #line 1009 
    i = ((unsigned int)ie_len + i) + 2U;
  }
  #line 1011 
  if (! tim_found) 
                   #line 1012 
                   b43legacywarn(dev->wl,(char *)"Did not find a valid TIM IE in the "); else 
                                                                    #line 1016 
                                                                    b43legacydbg(dev->wl,(char *)"Updated beacon template\n");
  #line 1017 
  return;
}

#line 1019  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_write_probe_resp_plcp(struct b43legacy_wldev *dev, u16 shm_offset, u16 size, struct ieee80211_rate *rate)
{
  #line 1023 
  struct b43legacy_plcp_hdr4 plcp;
  #line 1024 
  u32 tmp;
  #line 1025 
  __le16 dur;
  #line 1027 
  plcp.__anonCompField_b43legacy_plcp_hdr4_211.data = 0U;
  #line 1028 
  b43legacy_generate_plcp_hdr(& plcp,(unsigned short)((int)((unsigned int)size + 4U)),(unsigned char)((int)((unsigned char)rate->hw_value)));
  #line 1029 
  dur = ieee80211_generic_frame_duration((dev->wl)->hw,(dev->wl)->vif,(enum nl80211_band)NL80211_BAND_2GHZ,(unsigned long)size,rate);
  #line 1035 
  tmp = plcp.__anonCompField_b43legacy_plcp_hdr4_211.data;
  #line 1036 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)shm_offset),(unsigned short)((int)((unsigned short)tmp)));
  #line 1038 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)((unsigned int)shm_offset + 2U)),(unsigned short)((int)((unsigned short)(tmp >> 16))));
  #line 1040 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)((unsigned int)shm_offset + 6U)),(unsigned short)((int)dur));
  #line 1042 
  return;
}

#line 1050  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static u8 *b43legacy_generate_probe_resp(struct b43legacy_wldev *dev, u16 *dest_size, struct ieee80211_rate *rate)
{
  #line 1069 
  int __ret_warn_on_0;
  #line 1054 
  u8 *src_data;
  #line 1055 
  u8 *dest_data;
  #line 1056 
  u16 src_size;
  #line 1056 
  u16 elem_size;
  #line 1056 
  u16 src_pos;
  #line 1056 
  u16 dest_pos;
  #line 1057 
  __le16 dur;
  #line 1058 
  struct ieee80211_hdr *hdr;
  #line 1059 
  size_t ie_start;
  #line 1061 
  src_size = (unsigned short)((dev->wl)->current_beacon)->len;
  #line 1062 
  src_data = ((dev->wl)->current_beacon)->data;
  #line 1065 
  ie_start = 36UL;
  {
    #line 1066 
    int __ret_warn_on = ie_start != 36UL;
    #line 1066 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1067 
      ldv_inline_asm();
      #line 1068 
      ldv_inline_asm();
    }
    #line 1066 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1069 
  __ret_warn_on_0 = (unsigned long)src_size < ie_start;
  #line 1069 
  if ((long)(__ret_warn_on_0 != 0) != 0L) {
    #line 1070 
    ldv_inline_asm();
    #line 1071 
    ldv_inline_asm();
  }
  #line 1069 
  if ((long)((long)(__ret_warn_on_0 != 0)) != 0L) 
                                                  #line 1070 
                                                  return (u8 *)0U;
  #line 1072 
  dest_data = (u8 *)kmalloc((unsigned long)src_size,2592U);
  #line 1073 
  if ((long)(dest_data == (u8 *)0U) != 0L) 
                                           #line 1074 
                                           return (u8 *)0U;
  #line 1077 
  memcpy((void *)dest_data,(void *)src_data,ie_start);
  #line 1078 
  src_pos = (unsigned short)ie_start;
  #line 1079 
  dest_pos = (unsigned short)ie_start;
  #line 1080 
  while ((int)src_pos < (int)src_size + -2) {
    #line 1081 
    elem_size = (unsigned short)((unsigned int)((unsigned short)*(src_data + ((unsigned long)src_pos + (unsigned long)1U))) + 2U);
    #line 1082 
    if ((unsigned int)*(src_data + (unsigned long)src_pos) == 5U) 
                                                                  #line 1084 
                                                                  goto __Cont;
    #line 1086 
    memcpy((void *)(dest_data + (unsigned long)dest_pos),(void *)(src_data + (unsigned long)src_pos),(unsigned long)elem_size);
    #line 1087 
    dest_pos = (unsigned short)((int)dest_pos + (int)elem_size);
    #line 1080 
    __Cont: 
            #line 1080 
    src_pos = (unsigned short)((int)src_pos + (int)elem_size);
  }
  #line 1089 
  *dest_size = dest_pos;
  #line 1090 
  hdr = (struct ieee80211_hdr *)dest_data;
  #line 1093 
  hdr->frame_control = (unsigned short)80U;
  #line 1095 
  dur = ieee80211_generic_frame_duration((dev->wl)->hw,(dev->wl)->vif,(enum nl80211_band)NL80211_BAND_2GHZ,(unsigned long)*dest_size,rate);
  #line 1100 
  hdr->duration_id = dur;
  #line 1102 
  return dest_data;
}

#line 1105  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_write_probe_resp_template(struct b43legacy_wldev *dev, u16 ram_offset, u16 shm_size_offset, struct ieee80211_rate *rate)
{
  #line 1130 
  unsigned long __UNIQUE_ID___x596;
  #line 1130 
  unsigned long tmp;
  #line 1110 
  u8 *probe_resp_data;
  #line 1111 
  u16 size;
  #line 1113 
  size = (unsigned short)((dev->wl)->current_beacon)->len;
  #line 1114 
  probe_resp_data = b43legacy_generate_probe_resp(dev,& size,rate);
  #line 1115 
  if ((long)(probe_resp_data == (u8 *)0U) != 0L) 
                                                 #line 1116 
                                                 return;
  #line 1121 
  b43legacy_write_probe_resp_plcp(dev,(unsigned short)794,(unsigned short)((int)size),(struct ieee80211_rate *)(& __b43legacy_ratetable));
  #line 1123 
  b43legacy_write_probe_resp_plcp(dev,(unsigned short)812,(unsigned short)((int)size),(struct ieee80211_rate *)(& __b43legacy_ratetable) + 1U);
  #line 1125 
  b43legacy_write_probe_resp_plcp(dev,(unsigned short)830,(unsigned short)((int)size),(struct ieee80211_rate *)(& __b43legacy_ratetable) + 2U);
  #line 1127 
  b43legacy_write_probe_resp_plcp(dev,(unsigned short)848,(unsigned short)((int)size),(struct ieee80211_rate *)(& __b43legacy_ratetable) + 3U);
  {
    #line 1130 
    __UNIQUE_ID___x596 = (unsigned long)size;
    #line 1130 
    unsigned long __UNIQUE_ID___y597 = 506UL;
    #line 1130 
    if (__UNIQUE_ID___x596 < __UNIQUE_ID___y597) 
                                                 #line 1130 
                                                 tmp = __UNIQUE_ID___x596; else 
                                                                    #line 1130 
                                                                    tmp = __UNIQUE_ID___y597;
    }
  #line 1130 
  size = (unsigned short)tmp;
  #line 1132 
  b43legacy_write_template_common(dev,probe_resp_data,(unsigned short)((int)size),(unsigned short)((int)ram_offset),(unsigned short)((int)shm_size_offset),(unsigned char)((int)((unsigned char)rate->hw_value)));
  #line 1135 
  kfree((void *)probe_resp_data);
  #line 1136 
  return;
}

#line 1138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_upload_beacon0(struct b43legacy_wldev *dev)
{
  #line 1140 
  struct b43legacy_wl *wl = dev->wl;
  #line 1142 
  if ((int)wl->beacon0_uploaded != 0) 
                                      #line 1143 
                                      return;
  #line 1144 
  b43legacy_write_beacon_template(dev,(unsigned short)104,(unsigned short)24);
  #line 1147 
  b43legacy_write_probe_resp_template(dev,(unsigned short)616,(unsigned short)74,& __b43legacy_ratetable[3]);
  #line 1149 
  wl->beacon0_uploaded = (_Bool)1;
  #line 1150 
  return;
}

#line 1152  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_upload_beacon1(struct b43legacy_wldev *dev)
{
  #line 1154 
  struct b43legacy_wl *wl = dev->wl;
  #line 1156 
  if ((int)wl->beacon1_uploaded != 0) 
                                      #line 1157 
                                      return;
  #line 1158 
  b43legacy_write_beacon_template(dev,(unsigned short)1128,(unsigned short)26);
  #line 1159 
  wl->beacon1_uploaded = (_Bool)1;
  #line 1160 
  return;
}

#line 1162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_beacon(struct b43legacy_wldev *dev)
{
  #line 1165 
  u32 cmd;
  #line 1165 
  u32 beacon0_valid;
  #line 1165 
  u32 beacon1_valid;
  #line 1164 
  struct b43legacy_wl *wl = dev->wl;
  #line 1167 
  if (b43legacy_is_mode(wl,3) == 0) 
                                    #line 1168 
                                    return;
  #line 1173 
  dev->irq_mask &= 4294967293U;
  #line 1175 
  cmd = b43legacy_read32(dev,(unsigned short)292);
  #line 1176 
  beacon0_valid = cmd & 1U;
  #line 1177 
  beacon1_valid = cmd & 2U;
  #line 1180 
  if (beacon0_valid != 0U && beacon1_valid != 0U) {
    #line 1181 
    b43legacy_write32(dev,(unsigned short)296,2U);
    #line 1182 
    dev->irq_mask |= 2U;
    #line 1183 
    return;
  }
  #line 1186 
  if ((long)((int)wl->beacon_templates_virgin != 0) != 0L) {
    #line 1189 
    wl->beacon_templates_virgin = (_Bool)0;
    #line 1190 
    b43legacy_upload_beacon0(dev);
    #line 1191 
    b43legacy_upload_beacon1(dev);
    #line 1192 
    cmd = b43legacy_read32(dev,(unsigned short)292);
    #line 1193 
    cmd |= 1U;
    #line 1194 
    b43legacy_write32(dev,(unsigned short)292,cmd);
  }
  else 
    #line 1196 
    if (beacon0_valid == 0U) {
      #line 1197 
      b43legacy_upload_beacon0(dev);
      #line 1198 
      cmd = b43legacy_read32(dev,(unsigned short)292);
      #line 1199 
      cmd |= 1U;
      #line 1200 
      b43legacy_write32(dev,(unsigned short)292,cmd);
    }
    else 
      #line 1201 
      if (beacon1_valid == 0U) {
        #line 1202 
        b43legacy_upload_beacon1(dev);
        #line 1203 
        cmd = b43legacy_read32(dev,(unsigned short)292);
        #line 1204 
        cmd |= 2U;
        #line 1205 
        b43legacy_write32(dev,(unsigned short)292,cmd);
      }
  #line 1207 
  return;
}

#line 1210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_beacon_update_trigger_work(struct work_struct *work)
{
  #line 1212 
  void *__mptr;
  #line 1214 
  struct b43legacy_wldev *dev;
  #line 1212 
  __mptr = (void *)work;
  #line 1212 
  struct b43legacy_wl *wl = ((struct b43legacy_wl *)(__mptr + 18446744073709550912U));
  #line 1216 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 1217 
  dev = wl->current_dev;
  #line 1218 
  if ((long)(dev != (struct b43legacy_wldev *)0) != 0L) {
    #line 1218 
    if ((long)(atomic_read(& dev->__init_status) > 0) != 0L) {
      #line 1219 
      cif_spin_lock_irq_irq_lock_of_b43legacy_wl(& wl->irq_lock);
      #line 1221 
      handle_irq_beacon(dev);
      #line 1223 
      b43legacy_write32(dev,(unsigned short)300,dev->irq_mask);
      #line 1225 
      cif_spin_unlock_irq_irq_lock_of_b43legacy_wl(& wl->irq_lock);
    }
  }
  #line 1227 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 1228 
  return;
}

#line 1232  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_update_templates(struct b43legacy_wl *wl)
{
  #line 1234 
  struct sk_buff *beacon;
  #line 1244 
  beacon = ieee80211_beacon_get(wl->hw,wl->vif);
  #line 1245 
  if ((long)(beacon == (struct sk_buff *)0) != 0L) 
                                                   #line 1246 
                                                   return;
  #line 1248 
  if (wl->current_beacon != (struct sk_buff *)0) 
                                                 #line 1249 
                                                 dev_kfree_skb_any(wl->current_beacon);
  #line 1250 
  wl->current_beacon = beacon;
  #line 1251 
  wl->beacon0_uploaded = (_Bool)0;
  #line 1252 
  wl->beacon1_uploaded = (_Bool)0;
  #line 1253 
  ieee80211_queue_work(wl->hw,& wl->beacon_update_trigger);
  #line 1254 
  return;
}

#line 1256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_set_beacon_int(struct b43legacy_wldev *dev, u16 beacon_int)
{
  #line 1259 
  b43legacy_time_lock(dev);
  #line 1260 
  if ((unsigned int)(dev->dev)->id.revision > 2U) {
    #line 1261 
    b43legacy_write32(dev,(unsigned short)392,(unsigned int)((int)beacon_int << 16));
    #line 1263 
    b43legacy_write32(dev,(unsigned short)396,(unsigned int)((int)beacon_int << 10));
  }
  else {
    #line 1266 
    b43legacy_write16(dev,(unsigned short)1542,(unsigned short)((int)beacon_int >> 6));
    #line 1267 
    b43legacy_write16(dev,(unsigned short)1552,(unsigned short)((int)beacon_int));
  }
  #line 1269 
  b43legacy_time_unlock(dev);
  #line 1270 
  b43legacydbg(dev->wl,(char *)"Set beacon interval to %u\n",(int)beacon_int);
  #line 1271 
  return;
}

#line 1273  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void handle_irq_ucode_debug(struct b43legacy_wldev *dev)
{
  #line 1275 
  return;
}

#line 1278  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_interrupt_tasklet(struct b43legacy_wldev *dev)
{
  #line 1280 
  u32 reason;
  #line 1281 
  u32 dma_reason[6U];
  #line 1283 
  int i;
  #line 1284 
  unsigned long flags;
  #line 1282 
  u32 merged_dma_reason = 0U;
  #line 1286 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
  {
    #line 1288 
    int __ret_warn_on = atomic_read(& dev->__init_status) <= 0;
    #line 1288 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1289 
      ldv_inline_asm();
      #line 1290 
      ldv_inline_asm();
    }
    #line 1288 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 1291 
  reason = dev->irq_reason;
  #line 1292 
  i = 0;
  #line 1292 
  while ((unsigned int)i <= 5U) {
    #line 1293 
    dma_reason[i] = dev->dma_reason[i];
    #line 1294 
    merged_dma_reason = dma_reason[i] | merged_dma_reason;
    #line 1292 
    i ++;
  }
  #line 1297 
  if ((long)((reason & 512U) != 0U) != 0L) 
                                           #line 1298 
                                           b43legacyerr(dev->wl,(char *)"MAC transmission error\n");
  #line 1300 
  if ((long)((reason & 2048U) != 0U) != 0L) {
    #line 1301 
    b43legacyerr(dev->wl,(char *)"PHY transmission error\n");
    #line 1302 
    ldv_inline_asm();
    #line 1303 
    if ((long)((int)atomic_dec_and_test(& dev->phy.txerr_cnt) != 0) != 0L) {
      #line 1304 
      b43legacyerr(dev->wl,(char *)"Too many PHY TX errors, ");
      #line 1306 
      b43legacy_controller_restart(dev,(char *)"PHY TX errors");
    }
  }
  #line 1310 
  if ((long)((merged_dma_reason & 64512U) != 0U) != 0L) {
    #line 1312 
    if ((merged_dma_reason & 56320U) != 0U) {
      #line 1313 
      b43legacyerr(dev->wl,(char *)"Fatal DMA error: ",dma_reason[0],dma_reason[1],dma_reason[2],dma_reason[3],dma_reason[4],dma_reason[5]);
      #line 1319 
      b43legacy_controller_restart(dev,(char *)"DMA error");
      #line 1320 
      cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock,flags);
      #line 1321 
      return;
    }
    #line 1323 
    if ((merged_dma_reason & 8192U) != 0U) 
                                           #line 1324 
                                           b43legacyerr(dev->wl,(char *)"DMA error: ",dma_reason[0],dma_reason[1],dma_reason[2],dma_reason[3],dma_reason[4],dma_reason[5]);
  }
  #line 1332 
  if ((long)((reason & 134217728U) != 0U) != 0L) 
                                                 #line 1333 
                                                 handle_irq_ucode_debug(dev);
  #line 1334 
  if ((reason & 4U) != 0U) 
                           #line 1335 
                           handle_irq_tbtt_indication(dev);
  #line 1336 
  if ((reason & 32U) != 0U) 
                            #line 1337 
                            handle_irq_atim_end(dev);
  #line 1338 
  if ((reason & 2U) != 0U) 
                           #line 1339 
                           handle_irq_beacon(dev);
  #line 1340 
  if ((reason & 64U) != 0U) 
                            #line 1341 
                            handle_irq_pmq(dev);
  #line 1342 
  int tmp_4 = (reason & 65536U) != 0U;
  #line 1344 
  if ((reason & 262144U) != 0U) 
                                #line 1345 
                                handle_irq_noise(dev);
  #line 1348 
  if ((dma_reason[0] & 65536U) != 0U) {
    #line 1349 
    if (b43legacy_using_pio(dev) != 0) 
                                       #line 1350 
                                       b43legacy_pio_rx(dev->__anonCompField_b43legacy_wldev_210.pio.queue0); else 
                                                                    #line 1352 
                                                                    b43legacy_dma_rx(dev->__anonCompField_b43legacy_wldev_210.dma.rx_ring0);
  }
  {
    #line 1354 
    int __ret_warn_on_0 = (dma_reason[1] & 65536U) != 0U;
    #line 1354 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1355 
      ldv_inline_asm();
      #line 1356 
      ldv_inline_asm();
    }
    #line 1354 
    long tmp_6 = (long)(__ret_warn_on_0 != 0);
  }
  {
    #line 1355 
    int __ret_warn_on_1 = (dma_reason[2] & 65536U) != 0U;
    #line 1355 
    if ((long)(__ret_warn_on_1 != 0) != 0L) {
      #line 1356 
      ldv_inline_asm();
      #line 1357 
      ldv_inline_asm();
    }
    #line 1355 
    long tmp_8 = (long)(__ret_warn_on_1 != 0);
  }
  #line 1356 
  if ((dma_reason[3] & 65536U) != 0U) {
    #line 1357 
    if (b43legacy_using_pio(dev) != 0) 
                                       #line 1358 
                                       b43legacy_pio_rx(dev->__anonCompField_b43legacy_wldev_210.pio.queue3); else 
                                                                    #line 1360 
                                                                    b43legacy_dma_rx(dev->__anonCompField_b43legacy_wldev_210.dma.rx_ring3);
  }
  {
    #line 1362 
    int __ret_warn_on_2 = (dma_reason[4] & 65536U) != 0U;
    #line 1362 
    if ((long)(__ret_warn_on_2 != 0) != 0L) {
      #line 1363 
      ldv_inline_asm();
      #line 1364 
      ldv_inline_asm();
    }
    #line 1362 
    long tmp_10 = (long)(__ret_warn_on_2 != 0);
  }
  {
    #line 1363 
    int __ret_warn_on_3 = (dma_reason[5] & 65536U) != 0U;
    #line 1363 
    if ((long)(__ret_warn_on_3 != 0) != 0L) {
      #line 1364 
      ldv_inline_asm();
      #line 1365 
      ldv_inline_asm();
    }
    #line 1363 
    long tmp_12 = (long)(__ret_warn_on_3 != 0);
  }
  #line 1365 
  if ((reason & 536870912U) != 0U) 
                                   #line 1366 
                                   handle_irq_transmit_status(dev);
  #line 1368 
  b43legacy_write32(dev,(unsigned short)300,dev->irq_mask);
  #line 1369 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock,flags);
  #line 1370 
  return;
}

#line 1372  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void pio_irq_workaround(struct b43legacy_wldev *dev, u16 base, int queueidx)
{
  #line 1375 
  u16 rxctl;
  #line 1377 
  rxctl = b43legacy_read16(dev,(unsigned short)((int)((unsigned int)base + 8U)));
  #line 1378 
  if (((int)rxctl & 1) != 0) 
                             #line 1379 
                             dev->dma_reason[queueidx] |= 65536U; else 
                                                                    #line 1381 
                                                                    dev->dma_reason[queueidx] &= 4294901759U;
  #line 1382 
  return;
}

#line 1384  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_interrupt_ack(struct b43legacy_wldev *dev, u32 reason)
{
  #line 1386 
  if (b43legacy_using_pio(dev) != 0) 
    #line 1386 
    if ((unsigned int)(dev->dev)->id.revision <= 2U) 
      #line 1387 
      if ((reason & 256U) == 0U) {
        #line 1390 
        pio_irq_workaround(dev,(unsigned short)768,0);
        #line 1391 
        pio_irq_workaround(dev,(unsigned short)784,1);
        #line 1392 
        pio_irq_workaround(dev,(unsigned short)800,2);
        #line 1393 
        pio_irq_workaround(dev,(unsigned short)816,3);
      }
  #line 1396 
  b43legacy_write32(dev,(unsigned short)296,reason);
  #line 1398 
  b43legacy_write32(dev,(unsigned short)32,dev->dma_reason[0]);
  #line 1400 
  b43legacy_write32(dev,(unsigned short)40,dev->dma_reason[1]);
  #line 1402 
  b43legacy_write32(dev,(unsigned short)48,dev->dma_reason[2]);
  #line 1404 
  b43legacy_write32(dev,(unsigned short)56,dev->dma_reason[3]);
  #line 1406 
  b43legacy_write32(dev,(unsigned short)64,dev->dma_reason[4]);
  #line 1408 
  b43legacy_write32(dev,(unsigned short)72,dev->dma_reason[5]);
  #line 1410 
  return;
}

#line 1413  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static irqreturn_t b43legacy_interrupt_handler(int irq, void *dev_id)
{
  #line 1417 
  u32 reason;
  #line 1415 
  irqreturn_t ret = IRQ_NONE;
  #line 1416 
  struct b43legacy_wldev *dev = (struct b43legacy_wldev *)dev_id;
  {
    #line 1419 
    int __ret_warn_on = dev == (struct b43legacy_wldev *)0;
    #line 1419 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1420 
      ldv_inline_asm();
      #line 1421 
      ldv_inline_asm();
    }
    #line 1419 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1421 
  cif_spin_lock_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
  #line 1423 
  if ((long)(atomic_read(& dev->__init_status) <= 1) != 0L) 
                                                            #line 1425 
                                                            goto out;
  #line 1426 
  reason = b43legacy_read32(dev,(unsigned short)296);
  #line 1427 
  if (reason == 4294967295U) 
                             #line 1428 
                             goto out;
  #line 1429 
  ret = IRQ_HANDLED;
  #line 1430 
  reason = dev->irq_mask & reason;
  #line 1431 
  if (reason == 0U) 
                    #line 1432 
                    goto out;
  #line 1434 
  dev->dma_reason[0] = b43legacy_read32(dev,(unsigned short)32) & 121856U;
  #line 1437 
  dev->dma_reason[1] = b43legacy_read32(dev,(unsigned short)40) & 56320U;
  #line 1440 
  dev->dma_reason[2] = b43legacy_read32(dev,(unsigned short)48) & 56320U;
  #line 1443 
  dev->dma_reason[3] = b43legacy_read32(dev,(unsigned short)56) & 121856U;
  #line 1446 
  dev->dma_reason[4] = b43legacy_read32(dev,(unsigned short)64) & 56320U;
  #line 1449 
  dev->dma_reason[5] = b43legacy_read32(dev,(unsigned short)72) & 56320U;
  #line 1453 
  b43legacy_interrupt_ack(dev,reason);
  #line 1455 
  b43legacy_write32(dev,(unsigned short)300,0U);
  #line 1457 
  dev->irq_reason = reason;
  #line 1458 
  cif_tasklet_schedule(& dev->isr_tasklet);
  #line 1459 
  out: 
       #line 1459 
  ;
  #line 1460 
  cif_spin_unlock_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
  #line 1462 
  return ret;
}

#line 1465  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_release_firmware(struct b43legacy_wldev *dev)
{
  #line 1467 
  cif_release_firmware(dev->fw.ucode);
  #line 1468 
  dev->fw.ucode = (struct firmware *)0;
  #line 1469 
  cif_release_firmware(dev->fw.pcm);
  #line 1470 
  dev->fw.pcm = (struct firmware *)0;
  #line 1471 
  cif_release_firmware(dev->fw.initvals);
  #line 1472 
  dev->fw.initvals = (struct firmware *)0;
  #line 1473 
  cif_release_firmware(dev->fw.initvals_band);
  #line 1474 
  dev->fw.initvals_band = (struct firmware *)0;
  #line 1475 
  return;
}

#line 1477  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_print_fw_helptext(struct b43legacy_wl *wl)
{
  #line 1479 
  b43legacyerr(wl,(char *)"You must go to http://wireless.kernel.org/en/users/");
  #line 1480 
  return;
}

#line 1484  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_fw_cb(struct firmware *firmware, void *context)
{
  #line 1486 
  struct b43legacy_wldev *dev = (struct b43legacy_wldev *)context;
  #line 1488 
  dev->fwp = firmware;
  #line 1489 
  complete(& dev->fw_load_complete);
  #line 1490 
  return;
}

#line 1492  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int do_request_fw(struct b43legacy_wldev *dev, char *name, struct firmware **fw, bool async)
{
  #line 1496 
  char path[48U];
  #line 1497 
  struct b43legacy_fw_header *hdr;
  #line 1498 
  u32 size;
  #line 1499 
  int err;
  #line 1501 
  if (name == (char *)0) 
                         #line 1502 
                         return 0;
  #line 1504 
  snprintf((char *)(& path),48UL,(char *)"b43legacy%s/%s.fw",(char *)(& modparam_fwpostfix),name);
  #line 1507 
  b43legacyinfo(dev->wl,(char *)"Loading firmware %s\n",(char *)(& path));
  #line 1508 
  if ((int)async != 0) {
    #line 1509 
    __init_completion(& dev->fw_load_complete);
    #line 1510 
    err = request_firmware_nowait(& __this_module,(_Bool)1,(char *)(& path),(dev->dev)->dev,3264U,(void *)dev,& b43legacy_fw_cb);
    #line 1513 
    if (err != 0) {
      #line 1514 
      b43legacyerr(dev->wl,(char *)"Unable to load firmware\n");
      #line 1515 
      return err;
    }
    #line 1518 
    wait_for_completion(& dev->fw_load_complete);
    #line 1519 
    if (dev->fwp == (struct firmware *)0) 
                                          #line 1520 
                                          err = -22;
    #line 1521 
    *fw = dev->fwp;
  }
  else 
       #line 1523 
       err = cif_request_firmware(fw,(char *)(& path),(dev->dev)->dev);
  #line 1525 
  if (err != 0) {
    #line 1526 
    b43legacyerr(dev->wl,(char *)"Firmware file \"%s\" not found ",(char *)(& path));
    #line 1528 
    return err;
  }
  #line 1530 
  if ((*fw)->size <= 7UL) 
                          #line 1531 
                          goto err_format;
  #line 1532 
  hdr = (struct b43legacy_fw_header *)(*fw)->data;
  #line 1533 
  switch ((int)hdr->type) {
    #line 1534 
    case 117: 
              #line 1534 
    ;
    #line 1535 
    case 112: 
              #line 1535 
    ;
    #line 1536 
    size = __builtin_bswap32(hdr->size);
    #line 1537 
    if ((unsigned long)size != (*fw)->size + 18446744073709551608UL) 
      #line 1538 
      goto err_format;
    #line 1540 
    case 105: 
              #line 1540 
    ;
    #line 1541 
    if ((unsigned int)hdr->ver != 1U) 
                                      #line 1542 
                                      goto err_format;
    #line 1543 
    break;
    #line 1544 
    default: 
             #line 1544 
    ;
    #line 1545 
    goto err_format;
  }
  #line 1548 
  return err;
  #line 1550 
  err_format: 
              #line 1550 
  ;
  #line 1551 
  b43legacyerr(dev->wl,(char *)"Firmware file \"%s\" format error.\n",(char *)(& path));
  #line 1552 
  return -71;
}

#line 1555 
#line 3729 
static int b43legacy_one_core_attach(struct ssb_device *dev, struct b43legacy_wl *wl);
#line 1557 
#line 3711 
static void b43legacy_one_core_detach(struct ssb_device *dev);
#line 1559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_request_firmware(struct work_struct *work)
{
  #line 1561 
  void *__mptr;
  #line 1566 
  char *filename;
  #line 1567 
  int err;
  #line 1561 
  __mptr = (void *)work;
  #line 1561 
  struct b43legacy_wl *wl = ((struct b43legacy_wl *)(__mptr + 18446744073709551296U));
  #line 1563 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 1564 
  struct b43legacy_firmware *fw = & dev->fw;
  #line 1565 
  u8 rev = (dev->dev)->id.revision;
  #line 1569 
  if (fw->ucode == (struct firmware *)0) {
    #line 1570 
    if ((unsigned int)rev == 2U) 
                                 #line 1571 
                                 filename = (char *)"ucode2";
    else 
      #line 1572 
      if ((unsigned int)rev == 4U) 
                                   #line 1573 
                                   filename = (char *)"ucode4"; else 
                                                                  #line 1575 
                                                                  filename = (char *)"ucode5";
    #line 1576 
    err = do_request_fw(dev,filename,& fw->ucode,(_Bool)1);
    #line 1577 
    if (err != 0) 
                  #line 1578 
                  goto err_load;
  }
  #line 1580 
  if (fw->pcm == (struct firmware *)0) {
    #line 1581 
    if ((unsigned int)rev <= 4U) 
                                 #line 1582 
                                 filename = (char *)"pcm4"; else 
                                                                 #line 1584 
                                                                 filename = (char *)"pcm5";
    #line 1585 
    err = do_request_fw(dev,filename,& fw->pcm,(_Bool)0);
    #line 1586 
    if (err != 0) 
                  #line 1587 
                  goto err_load;
  }
  #line 1589 
  if (fw->initvals == (struct firmware *)0) {
    #line 1590 
    switch ((int)dev->phy.type) {
      #line 1591 
      case 1: 
              #line 1591 
      ;
      #line 1592 
      case 2: 
              #line 1592 
      ;
      #line 1593 
      if ((unsigned int)rev + 251U <= 5U) 
                                          #line 1594 
                                          filename = (char *)"b0g0initvals5";
      else 
        #line 1595 
        if ((unsigned int)rev == 2U || (unsigned int)rev == 4U) 
                                                                #line 1596 
                                                                filename = (char *)"b0g0initvals2"; else 
                                                                    #line 1598 
                                                                    goto err_no_initvals;
      #line 1599 
      break;
      #line 1600 
      default: 
               #line 1600 
      ;
      #line 1601 
      goto err_no_initvals;
    }
    #line 1603 
    err = do_request_fw(dev,filename,& fw->initvals,(_Bool)0);
    #line 1604 
    if (err != 0) 
                  #line 1605 
                  goto err_load;
  }
  #line 1607 
  if (fw->initvals_band == (struct firmware *)0) {
    #line 1608 
    switch ((int)dev->phy.type) {
      #line 1609 
      case 1: 
              #line 1609 
      ;
      #line 1610 
      case 2: 
              #line 1610 
      ;
      #line 1611 
      if ((unsigned int)rev + 251U <= 5U) 
                                          #line 1612 
                                          filename = (char *)"b0g0bsinitvals5";
      else 
        #line 1613 
        if ((unsigned int)rev > 10U) 
                                     #line 1614 
                                     filename = (char *)0;
        else 
          #line 1615 
          if ((unsigned int)rev == 2U || (unsigned int)rev == 4U) 
                                                                  #line 1616 
                                                                  filename = (char *)0; else 
                                                                    #line 1618 
                                                                    goto err_no_initvals;
      #line 1619 
      break;
      #line 1620 
      default: 
               #line 1620 
      ;
      #line 1621 
      goto err_no_initvals;
    }
    #line 1623 
    err = do_request_fw(dev,filename,& fw->initvals_band,(_Bool)0);
    #line 1624 
    if (err != 0) 
                  #line 1625 
                  goto err_load;
  }
  #line 1627 
  err = ieee80211_register_hw(wl->hw);
  #line 1628 
  if (err != 0) 
                #line 1629 
                goto err_one_core_detach;
  #line 1630 
  return;
  #line 1632 
  err_one_core_detach: 
                       #line 1632 
  ;
  #line 1633 
  b43legacy_one_core_detach(dev->dev);
  #line 1634 
  goto error;
  #line 1636 
  err_load: 
            #line 1636 
  ;
  #line 1637 
  b43legacy_print_fw_helptext(dev->wl);
  #line 1638 
  goto error;
  #line 1640 
  err_no_initvals: 
                   #line 1640 
  ;
  #line 1641 
  err = -19;
  #line 1642 
  b43legacyerr(dev->wl,(char *)"No Initial Values firmware file for PHY %u, ",(int)dev->phy.type,(int)rev);
  #line 1644 
  goto error;
  #line 1646 
  error: 
         #line 1646 
  ;
  #line 1647 
  b43legacy_release_firmware(dev);
  #line 1648 
  return;
}

#line 1651  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_upload_microcode(struct b43legacy_wldev *dev)
{
  #line 1655 
  __be32 *data;
  #line 1656 
  unsigned int i;
  #line 1657 
  unsigned int len;
  #line 1658 
  u16 fwrev;
  #line 1659 
  u16 fwpatch;
  #line 1660 
  u16 fwdate;
  #line 1661 
  u16 fwtime;
  #line 1662 
  u32 tmp;
  #line 1662 
  u32 macctl;
  #line 1653 
  struct wiphy *wiphy = ((dev->wl)->hw)->wiphy;
  #line 1654 
  size_t hdr_len = 8UL;
  #line 1663 
  int err = 0;
  #line 1666 
  macctl = b43legacy_read32(dev,(unsigned short)288);
  {
    #line 1667 
    int __ret_warn_on = (macctl & 2U) != 0U;
    #line 1667 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1668 
      ldv_inline_asm();
      #line 1669 
      ldv_inline_asm();
    }
    #line 1667 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 1668 
  macctl |= 4U;
  #line 1669 
  b43legacy_write32(dev,(unsigned short)288,macctl);
  #line 1671 
  i = 0U;
  #line 1671 
  while (i <= 63U) {
    #line 1672 
    b43legacy_shm_write16(dev,(unsigned short)2,(unsigned short)((int)((unsigned short)i)),(unsigned short)0);
    #line 1671 
    i ++;
  }
  #line 1673 
  i = 0U;
  #line 1673 
  while (i <= 4095U) {
    #line 1674 
    b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)((unsigned short)i)),(unsigned short)0);
    #line 1673 
    i += 2U;
  }
  #line 1677 
  data = (__be32 *)((dev->fw.ucode)->data + 8UL);
  #line 1678 
  len = (unsigned int)(((dev->fw.ucode)->size + 18446744073709551608UL) / 4UL);
  #line 1679 
  b43legacy_shm_control_word(dev,(unsigned short)768,(unsigned short)0);
  #line 1683 
  i = 0U;
  #line 1683 
  while (i < len) {
    {
      #line 1684 
      ;
      #line 1684 
      b43legacy_write32(dev,(unsigned short)356,__builtin_bswap32(*(data + (unsigned long)i)));
      #line 1686 
      __const_udelay(42950UL);
    }
    #line 1683 
    i ++;
  }
  #line 1689 
  if (dev->fw.pcm != (struct firmware *)0) {
    #line 1691 
    data = (__be32 *)((dev->fw.pcm)->data + 8UL);
    #line 1692 
    len = (unsigned int)(((dev->fw.pcm)->size + 18446744073709551608UL) / 4UL);
    #line 1693 
    b43legacy_shm_control_word(dev,(unsigned short)4,(unsigned short)490);
    #line 1694 
    b43legacy_write32(dev,(unsigned short)356,16384U);
    #line 1696 
    b43legacy_shm_control_word(dev,(unsigned short)4,(unsigned short)491);
    #line 1697 
    i = 0U;
    #line 1697 
    while (i < len) {
      {
        #line 1698 
        ;
        #line 1698 
        b43legacy_write32(dev,(unsigned short)356,__builtin_bswap32(*(data + (unsigned long)i)));
        #line 1700 
        __const_udelay(42950UL);
      }
      #line 1697 
      i ++;
    }
  }
  #line 1704 
  b43legacy_write32(dev,(unsigned short)296,4294967295U);
  #line 1708 
  macctl = b43legacy_read32(dev,(unsigned short)288);
  #line 1709 
  macctl &= 4294967291U;
  #line 1710 
  macctl |= 2U;
  #line 1711 
  b43legacy_write32(dev,(unsigned short)288,macctl);
  #line 1714 
  i = 0U;
  #line 1715 
  while (1) {
    {
      #line 1716 
      tmp = b43legacy_read32(dev,(unsigned short)296);
      #line 1717 
      if (tmp == 1U) 
                     #line 1718 
                     break;
      #line 1719 
      i ++;
      #line 1720 
      if (i > 19U) {
        #line 1721 
        b43legacyerr(dev->wl,(char *)"Microcode not responding\n");
        #line 1722 
        b43legacy_print_fw_helptext(dev->wl);
        #line 1723 
        err = -19;
        #line 1724 
        goto error;
      }
      #line 1726 
      msleep_interruptible(50U);
      #line 1727 
      if (signal_pending(ldv_get_current()) != 0) {
        #line 1728 
        err = -4;
        #line 1729 
        goto error;
      }
    }
  }
  #line 1733 
  b43legacy_read32(dev,(unsigned short)296);
  #line 1736 
  fwrev = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)0);
  #line 1738 
  fwpatch = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)2);
  #line 1740 
  fwdate = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)4);
  #line 1742 
  fwtime = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)6);
  #line 1745 
  if ((unsigned int)fwrev > 296U) {
    #line 1746 
    b43legacyerr(dev->wl,(char *)"YOU ARE TRYING TO LOAD V4 FIRMWARE.");
    #line 1750 
    b43legacy_print_fw_helptext(dev->wl);
    #line 1751 
    err = -95;
    #line 1752 
    goto error;
  }
  #line 1754 
  b43legacyinfo(dev->wl,(char *)"Loading firmware version 0x%X, patch level %u ",(int)fwrev,(int)fwpatch,((int)fwdate >> 12) & 15,((int)fwdate >> 8) & 15,(int)fwdate & 255,((int)fwtime >> 11) & 31,((int)fwtime >> 5) & 63,(int)fwtime & 31);
  #line 1760 
  dev->fw.rev = fwrev;
  #line 1761 
  dev->fw.patch = fwpatch;
  #line 1763 
  snprintf((char *)(& wiphy->fw_version),32UL,(char *)"%u.%u",(int)dev->fw.rev,(int)dev->fw.patch);
  #line 1765 
  wiphy->hw_version = (unsigned int)(dev->dev)->id.coreid;
  #line 1767 
  return 0;
  #line 1769 
  error: 
         #line 1769 
  ;
  #line 1770 
  macctl = b43legacy_read32(dev,(unsigned short)288);
  #line 1771 
  macctl &= 4294967293U;
  #line 1772 
  macctl |= 4U;
  #line 1773 
  b43legacy_write32(dev,(unsigned short)288,macctl);
  #line 1775 
  return err;
}

#line 1778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_write_initvals(struct b43legacy_wldev *dev, struct b43legacy_iv *ivals, size_t count, size_t array_size)
{
  #line 1783 
  struct b43legacy_iv *iv;
  #line 1784 
  u16 offset;
  #line 1785 
  size_t i;
  #line 1786 
  bool bit32;
  #line 1789 
  iv = ivals;
  #line 1790 
  i = 0UL;
  #line 1790 
  while (i < count) {
    #line 1791 
    if (array_size <= 1UL) 
                           #line 1792 
                           goto err_format;
    #line 1793 
    array_size += 18446744073709551614UL;
    #line 1794 
    offset = __builtin_bswap16((unsigned short)((int)iv->offset_size));
    #line 1795 
    bit32 = (_Bool)(((int)offset & 32768) != 0);
    #line 1796 
    offset = (unsigned short)((unsigned int)offset & 32767U);
    #line 1797 
    if ((unsigned int)offset > 4095U) 
                                      #line 1798 
                                      goto err_format;
    #line 1799 
    if ((int)bit32 != 0) {
      #line 1800 
      u32 value;
      #line 1802 
      if (array_size <= 3UL) 
                             #line 1803 
                             goto err_format;
      #line 1804 
      array_size += 18446744073709551612UL;
      #line 1806 
      value = get_unaligned_be32((void *)(& iv->data.d32));
      #line 1807 
      b43legacy_write32(dev,(unsigned short)((int)offset),value);
      #line 1809 
      iv = (struct b43legacy_iv *)((uint8_t *)iv + 6UL);
    }
    else {
      #line 1813 
      u16 value_0;
      #line 1815 
      if (array_size <= 1UL) 
                             #line 1816 
                             goto err_format;
      #line 1817 
      array_size += 18446744073709551614UL;
      #line 1819 
      value_0 = __builtin_bswap16((unsigned short)((int)iv->data.d16));
      #line 1820 
      b43legacy_write16(dev,(unsigned short)((int)offset),(unsigned short)((int)value_0));
      #line 1822 
      iv = (struct b43legacy_iv *)((uint8_t *)iv + 4UL);
    }
    #line 1790 
    i ++;
  }
  #line 1827 
  if (array_size != 0UL) 
                         #line 1828 
                         goto err_format;
  #line 1830 
  return 0;
  #line 1832 
  err_format: 
              #line 1832 
  ;
  #line 1833 
  b43legacyerr(dev->wl,(char *)"Initial Values Firmware file-format error.\n");
  #line 1834 
  b43legacy_print_fw_helptext(dev->wl);
  #line 1836 
  return -71;
}

#line 1839  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_upload_initvals(struct b43legacy_wldev *dev)
{
  #line 1842 
  struct b43legacy_fw_header *hdr;
  #line 1844 
  struct b43legacy_iv *ivals;
  #line 1845 
  size_t count;
  #line 1846 
  int err;
  #line 1841 
  size_t hdr_len = 8UL;
  #line 1843 
  struct b43legacy_firmware *fw = & dev->fw;
  #line 1848 
  hdr = (struct b43legacy_fw_header *)(fw->initvals)->data;
  #line 1849 
  ivals = (struct b43legacy_iv *)((fw->initvals)->data + 8UL);
  #line 1850 
  count = (unsigned long)__builtin_bswap32(hdr->size);
  #line 1851 
  err = b43legacy_write_initvals(dev,ivals,count,(fw->initvals)->size + 18446744073709551608UL);
  #line 1853 
  if (err != 0) 
                #line 1854 
                goto out;
  #line 1855 
  if (fw->initvals_band != (struct firmware *)0) {
    #line 1856 
    hdr = (struct b43legacy_fw_header *)(fw->initvals_band)->data;
    #line 1858 
    ivals = (struct b43legacy_iv *)((fw->initvals_band)->data + 8UL);
    #line 1860 
    count = (unsigned long)__builtin_bswap32(hdr->size);
    #line 1861 
    err = b43legacy_write_initvals(dev,ivals,count,(fw->initvals_band)->size + 18446744073709551608UL);
    #line 1863 
    if (err != 0) 
                  #line 1864 
                  goto out;
  }
  #line 1866 
  out: 
       #line 1866 
  ;
  #line 1868 
  return err;
}

#line 1874  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_gpio_init(struct b43legacy_wldev *dev)
{
  #line 1877 
  struct ssb_device *gpiodev;
  #line 1878 
  u32 mask;
  #line 1879 
  u32 set;
  #line 1911 
  struct ssb_device *tmp_2;
  #line 1876 
  struct ssb_bus *bus = (dev->dev)->bus;
  #line 1877 
  struct ssb_device *pcidev = (struct ssb_device *)0;
  #line 1881 
  ;
  #line 1881 
  b43legacy_write32(dev,(unsigned short)288,b43legacy_read32(dev,(unsigned short)288) & 4294918143U);
  #line 1886 
  ;
  #line 1886 
  b43legacy_write16(dev,(unsigned short)1182,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)1182) | 15U)));
  #line 1891 
  mask = 31U;
  #line 1892 
  set = 15U;
  #line 1893 
  if ((unsigned int)((dev->dev)->bus)->chip_id == 17153U) {
    #line 1894 
    mask |= 96U;
    #line 1895 
    set |= 96U;
  }
  #line 1897 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 2) != 0) {
    #line 1898 
    ;
    #line 1898 
    b43legacy_write16(dev,(unsigned short)1182,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)1182) | 512U)));
    #line 1902 
    mask |= 512U;
    #line 1903 
    set |= 512U;
  }
  #line 1905 
  if ((unsigned int)(dev->dev)->id.revision > 1U) 
                                                  #line 1906 
                                                  mask |= 16U;
  #line 1909 
  pcidev = bus->pcicore.dev;
  #line 1911 
  tmp_2 = (struct ssb_device *)(bus->chipco.dev != (struct ssb_device *)0);
  #line 1911 
  if (! tmp_2) 
               #line 1911 
               tmp_2 = pcidev;
  #line 1911 
  gpiodev = tmp_2;
  #line 1912 
  if (gpiodev == (struct ssb_device *)0) 
                                         #line 1913 
                                         return 0;
  #line 1914 
  ;
  #line 1914 
  ;
  #line 1914 
  ssb_write32(gpiodev,(unsigned short)108,(ssb_read32(gpiodev,(unsigned short)108) & ~ mask) | set);
  #line 1918 
  return 0;
}

#line 1922  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_gpio_cleanup(struct b43legacy_wldev *dev)
{
  #line 1925 
  struct ssb_device *gpiodev;
  #line 1930 
  struct ssb_device *tmp;
  #line 1924 
  struct ssb_bus *bus = (dev->dev)->bus;
  #line 1925 
  struct ssb_device *pcidev = (struct ssb_device *)0;
  #line 1928 
  pcidev = bus->pcicore.dev;
  #line 1930 
  tmp = (struct ssb_device *)(bus->chipco.dev != (struct ssb_device *)0);
  #line 1930 
  if (! tmp) 
             #line 1930 
             tmp = pcidev;
  #line 1930 
  gpiodev = tmp;
  #line 1931 
  if (gpiodev == (struct ssb_device *)0) 
                                         #line 1932 
                                         return;
  #line 1933 
  ssb_write32(gpiodev,(unsigned short)108,0U);
  #line 1934 
  return;
}

#line 1937  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_mac_enable(struct b43legacy_wldev *dev)
{
  #line 1939 
  (dev->mac_suspended) --;
  {
    #line 1940 
    int __ret_warn_on = dev->mac_suspended < 0;
    #line 1940 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1941 
      ldv_inline_asm();
      #line 1942 
      ldv_inline_asm();
    }
    #line 1940 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 1941 
    unsigned long _flags;
    {
      #line 1941 
      unsigned long __dummy;
      #line 1941 
      unsigned long __dummy2;
      }
    #line 1941 
    _flags = arch_local_save_flags();
    {
      #line 1941 
      unsigned long __dummy_0;
      #line 1941 
      unsigned long __dummy2_0;
      }
    #line 1941 
    int __ret_warn_on_0 = arch_irqs_disabled_flags(_flags) != 0;
    #line 1941 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1942 
      ldv_inline_asm();
      #line 1943 
      ldv_inline_asm();
    }
    #line 1941 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 1942 
  if (dev->mac_suspended == 0) {
    #line 1943 
    ;
    #line 1943 
    b43legacy_write32(dev,(unsigned short)288,b43legacy_read32(dev,(unsigned short)288) | 1U);
    #line 1947 
    b43legacy_write32(dev,(unsigned short)296,1U);
    #line 1950 
    b43legacy_read32(dev,(unsigned short)288);
    #line 1951 
    b43legacy_read32(dev,(unsigned short)296);
    #line 1952 
    b43legacy_power_saving_ctl_bits(dev,-1,-1);
    #line 1955 
    cif_spin_lock_irq_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
    #line 1956 
    b43legacy_write32(dev,(unsigned short)300,dev->irq_mask);
    #line 1958 
    cif_spin_unlock_irq_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
  }
  #line 1960 
  return;
}

#line 1963  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_mac_suspend(struct b43legacy_wldev *dev)
{
  #line 1965 
  int i;
  #line 1966 
  u32 tmp;
  #line 1968 
  __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c",1968,0);
  {
    #line 1969 
    unsigned long _flags;
    {
      #line 1969 
      unsigned long __dummy;
      #line 1969 
      unsigned long __dummy2;
      }
    #line 1969 
    _flags = arch_local_save_flags();
    {
      #line 1969 
      unsigned long __dummy_0;
      #line 1969 
      unsigned long __dummy2_0;
      }
    #line 1969 
    int __ret_warn_on = arch_irqs_disabled_flags(_flags) != 0;
    #line 1969 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1970 
      ldv_inline_asm();
      #line 1971 
      ldv_inline_asm();
    }
    #line 1969 
    long tmp_3 = (long)(__ret_warn_on != 0);
  }
  {
    #line 1970 
    int __ret_warn_on_0 = dev->mac_suspended < 0;
    #line 1970 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1971 
      ldv_inline_asm();
      #line 1972 
      ldv_inline_asm();
    }
    #line 1970 
    long tmp_5 = (long)(__ret_warn_on_0 != 0);
  }
  #line 1972 
  if (dev->mac_suspended == 0) {
    #line 1975 
    cif_spin_lock_irq_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
    #line 1976 
    b43legacy_write32(dev,(unsigned short)300,0U);
    #line 1977 
    cif_spin_unlock_irq_irq_lock_of_b43legacy_wl(& (dev->wl)->irq_lock);
    #line 1978 
    b43legacy_synchronize_irq(dev);
    #line 1980 
    b43legacy_power_saving_ctl_bits(dev,-1,1);
    #line 1981 
    ;
    #line 1981 
    b43legacy_write32(dev,(unsigned short)288,b43legacy_read32(dev,(unsigned short)288) & 4294967294U);
    #line 1985 
    b43legacy_read32(dev,(unsigned short)296);
    #line 1986 
    i = 40;
    #line 1986 
    while (i != 0) {
      #line 1987 
      tmp = b43legacy_read32(dev,(unsigned short)296);
      #line 1989 
      if ((tmp & 1U) != 0U) 
                            #line 1990 
                            goto out;
      #line 1991 
      msleep(1U);
      #line 1986 
      i --;
    }
    #line 1993 
    b43legacyerr(dev->wl,(char *)"MAC suspend failed\n");
  }
  #line 1995 
  out: 
       #line 1995 
  ;
  #line 1996 
  (dev->mac_suspended) ++;
  #line 1997 
  return;
}

#line 1999  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_adjust_opmode(struct b43legacy_wldev *dev)
{
  #line 2002 
  u32 ctl;
  #line 2003 
  u16 cfp_pretbtt;
  #line 2001 
  struct b43legacy_wl *wl = dev->wl;
  #line 2005 
  ctl = b43legacy_read32(dev,(unsigned short)288);
  #line 2007 
  ctl &= 4294705151U;
  #line 2008 
  ctl &= 4290772991U;
  #line 2009 
  ctl &= 4292870143U;
  #line 2010 
  ctl &= 4286578687U;
  #line 2011 
  ctl &= 4278190079U;
  #line 2012 
  ctl &= 4293918719U;
  #line 2013 
  ctl |= 131072U;
  #line 2015 
  if (b43legacy_is_mode(wl,3) != 0) 
                                    #line 2016 
                                    ctl |= 262144U;
  else {
    #line 2017 
    if (b43legacy_is_mode(wl,1) != 0) 
                                      #line 2018 
                                      ctl &= 4294836223U;
  }
  #line 2020 
  if ((wl->filter_flags & 32U) != 0U) 
                                      #line 2021 
                                      ctl |= 4194304U;
  #line 2022 
  if ((wl->filter_flags & 4U) != 0U) 
                                     #line 2023 
                                     ctl |= 8388608U;
  #line 2024 
  if ((wl->filter_flags & 8U) != 0U) 
                                     #line 2025 
                                     ctl |= 2097152U;
  #line 2026 
  if ((wl->filter_flags & 16U) != 0U) 
                                      #line 2027 
                                      ctl |= 1048576U;
  #line 2032 
  if ((unsigned int)(dev->dev)->id.revision <= 4U) 
                                                   #line 2033 
                                                   ctl |= 16777216U;
  #line 2035 
  b43legacy_write32(dev,(unsigned short)288,ctl);
  #line 2037 
  cfp_pretbtt = (unsigned short)2U;
  #line 2038 
  if ((ctl & 131072U) != 0U && (ctl & 262144U) == 0U) 
    #line 2040 
    if ((unsigned int)((dev->dev)->bus)->chip_id == 17158U && (unsigned int)((dev->dev)->bus)->chip_rev == 3U) 
      #line 2042 
      cfp_pretbtt = (unsigned short)100U; else 
                                               #line 2044 
                                               cfp_pretbtt = (unsigned short)50U;
  #line 2046 
  b43legacy_write16(dev,(unsigned short)1554,(unsigned short)((int)cfp_pretbtt));
  #line 2047 
  return;
}

#line 2049  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_rate_memory_write(struct b43legacy_wldev *dev, u16 rate, int is_ofdm)
{
  #line 2053 
  u16 offset;
  #line 2055 
  if (is_ofdm != 0) {
    #line 2056 
    offset = (unsigned short)1152U;
    #line 2057 
    offset = (unsigned short)((int)((unsigned short)(((int)b43legacy_plcp_get_ratecode_ofdm((unsigned char)((int)((unsigned char)rate))) & 15) * 2)) + (int)offset);
  }
  else {
    #line 2059 
    offset = (unsigned short)1216U;
    #line 2060 
    offset = (unsigned short)((int)((unsigned short)(((int)b43legacy_plcp_get_ratecode_cck((unsigned char)((int)((unsigned char)rate))) & 15) * 2)) + (int)offset);
  }
  #line 2062 
  ;
  #line 2062 
  ;
  #line 2062 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)((unsigned int)offset + 32U)),(unsigned short)((int)b43legacy_shm_read16(dev,(unsigned short)1,
                             (unsigned short)((int)offset))));
  #line 2064 
  return;
}

#line 2067  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_rate_memory_init(struct b43legacy_wldev *dev)
{
  #line 2069 
  switch ((int)dev->phy.type) {
    #line 2070 
    case 2: 
            #line 2070 
    ;
    #line 2071 
    b43legacy_rate_memory_write(dev,(unsigned short)12,1);
    #line 2072 
    b43legacy_rate_memory_write(dev,(unsigned short)24,1);
    #line 2073 
    b43legacy_rate_memory_write(dev,(unsigned short)36,1);
    #line 2074 
    b43legacy_rate_memory_write(dev,(unsigned short)48,1);
    #line 2075 
    b43legacy_rate_memory_write(dev,(unsigned short)72,1);
    #line 2076 
    b43legacy_rate_memory_write(dev,(unsigned short)96,1);
    #line 2077 
    b43legacy_rate_memory_write(dev,(unsigned short)108,1);
    #line 2079 
    case 1: 
            #line 2079 
    ;
    #line 2080 
    b43legacy_rate_memory_write(dev,(unsigned short)2,0);
    #line 2081 
    b43legacy_rate_memory_write(dev,(unsigned short)4,0);
    #line 2082 
    b43legacy_rate_memory_write(dev,(unsigned short)11,0);
    #line 2083 
    b43legacy_rate_memory_write(dev,(unsigned short)22,0);
    #line 2084 
    break;
    #line 2085 
    default: 
             #line 2085 
    ;
    #line 2086 
    printk((char *)"\001",(char *)"1");
    #line 2087 
    ldv_inline_asm();
    #line 2088 
    ldv_inline_asm();
    #line 2089 
    ldv_inline_asm();
    #line 2086 
    ;
  }
  #line 2091 
  return;
}

#line 2091  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_mgmtframe_txantenna(struct b43legacy_wldev *dev, int antenna)
{
  #line 2095 
  u16 tmp;
  #line 2094 
  u16 ant = (unsigned short)0U;
  #line 2097 
  switch (antenna) {
    #line 2098 
    case 0: 
            #line 2098 
    ;
    #line 2099 
    ant = ant;
    #line 2100 
    break;
    #line 2101 
    case 1: 
            #line 2101 
    ;
    #line 2102 
    ant = (unsigned short)((unsigned int)ant | 256U);
    #line 2103 
    break;
    #line 2104 
    case 3: 
            #line 2104 
    ;
    #line 2105 
    ant = (unsigned short)((unsigned int)ant | 768U);
    #line 2106 
    break;
    #line 2107 
    default: 
             #line 2107 
    ;
    #line 2108 
    printk((char *)"\001",(char *)"1");
    #line 2109 
    ldv_inline_asm();
    #line 2110 
    ldv_inline_asm();
    #line 2111 
    ldv_inline_asm();
    #line 2108 
    ;
  }
  #line 2115 
  tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)84);
  #line 2117 
  tmp = (unsigned short)(((int)tmp & -961) | (int)ant);
  #line 2118 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)84,(unsigned short)((int)tmp));
  #line 2121 
  tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)34);
  #line 2123 
  tmp = (unsigned short)(((int)tmp & -961) | (int)ant);
  #line 2124 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)34,(unsigned short)((int)tmp));
  #line 2127 
  tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)392);
  #line 2129 
  tmp = (unsigned short)(((int)tmp & -961) | (int)ant);
  #line 2130 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)392,(unsigned short)((int)tmp));
  #line 2131 
  return;
}

#line 2135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_chip_exit(struct b43legacy_wldev *dev)
{
  #line 2137 
  b43legacy_radio_turn_off(dev,(_Bool)1);
  #line 2138 
  b43legacy_gpio_cleanup(dev);
  #line 2139 
  return;
}

#line 2145  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_chip_init(struct b43legacy_wldev *dev)
{
  #line 2148 
  int err;
  #line 2149 
  int tmp;
  #line 2150 
  u32 value32;
  #line 2150 
  u32 macctl;
  #line 2151 
  u16 value16;
  #line 2147 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2154 
  macctl = 1280U;
  #line 2155 
  if ((int)dev->phy.gmode != 0) 
                                #line 2156 
                                macctl |= 2147483648U;
  #line 2157 
  macctl |= 131072U;
  #line 2158 
  b43legacy_write32(dev,(unsigned short)288,macctl);
  #line 2160 
  err = b43legacy_upload_microcode(dev);
  #line 2161 
  if (err != 0) 
                #line 2162 
                goto out;
  #line 2164 
  err = b43legacy_gpio_init(dev);
  #line 2165 
  if (err != 0) 
                #line 2166 
                goto out;
  #line 2168 
  err = b43legacy_upload_initvals(dev);
  #line 2169 
  if (err != 0) 
                #line 2170 
                goto err_gpio_clean;
  #line 2171 
  b43legacy_radio_turn_on(dev);
  #line 2173 
  b43legacy_write16(dev,(unsigned short)998,(unsigned short)0);
  #line 2174 
  err = b43legacy_phy_init(dev);
  #line 2175 
  if (err != 0) 
                #line 2176 
                goto err_radio_off;
  #line 2179 
  tmp = phy->interfmode;
  #line 2180 
  phy->interfmode = 0;
  #line 2181 
  b43legacy_radio_set_interference_mitigation(dev,tmp);
  #line 2183 
  b43legacy_phy_set_antenna_diversity(dev);
  #line 2184 
  b43legacy_mgmtframe_txantenna(dev,3);
  #line 2186 
  if ((unsigned int)phy->type == 1U) {
    #line 2187 
    value16 = b43legacy_read16(dev,(unsigned short)94);
    #line 2188 
    value16 = (unsigned short)((unsigned int)value16 | 4U);
    #line 2189 
    b43legacy_write16(dev,(unsigned short)94,(unsigned short)((int)value16));
  }
  #line 2191 
  b43legacy_write32(dev,(unsigned short)256,16777216U);
  #line 2192 
  if ((unsigned int)(dev->dev)->id.revision <= 4U) 
                                                   #line 2193 
                                                   b43legacy_write32(dev,(unsigned short)268,16777216U);
  #line 2195 
  value32 = b43legacy_read32(dev,(unsigned short)288);
  #line 2196 
  value32 &= 4294836223U;
  #line 2197 
  b43legacy_write32(dev,(unsigned short)288,value32);
  #line 2198 
  value32 = b43legacy_read32(dev,(unsigned short)288);
  #line 2199 
  value32 |= 131072U;
  #line 2200 
  b43legacy_write32(dev,(unsigned short)288,value32);
  #line 2202 
  if (b43legacy_using_pio(dev) != 0) {
    #line 2203 
    b43legacy_write32(dev,(unsigned short)528,256U);
    #line 2204 
    b43legacy_write32(dev,(unsigned short)560,256U);
    #line 2205 
    b43legacy_write32(dev,(unsigned short)592,256U);
    #line 2206 
    b43legacy_write32(dev,(unsigned short)624,256U);
    #line 2207 
    b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)52,(unsigned short)0);
  }
  #line 2213 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)116,(unsigned short)0);
  #line 2216 
  b43legacy_adjust_opmode(dev);
  #line 2218 
  if ((unsigned int)(dev->dev)->id.revision <= 2U) {
    #line 2219 
    b43legacy_write16(dev,(unsigned short)1550,(unsigned short)0);
    #line 2220 
    b43legacy_write16(dev,(unsigned short)1552,(unsigned short)32768);
    #line 2221 
    b43legacy_write16(dev,(unsigned short)1540,(unsigned short)0);
    #line 2222 
    b43legacy_write16(dev,(unsigned short)1542,(unsigned short)512);
  }
  else {
    #line 2224 
    b43legacy_write32(dev,(unsigned short)392,2147483648U);
    #line 2225 
    b43legacy_write32(dev,(unsigned short)396,33554432U);
  }
  #line 2227 
  b43legacy_write32(dev,(unsigned short)296,16384U);
  #line 2228 
  b43legacy_write32(dev,(unsigned short)36,121856U);
  #line 2229 
  b43legacy_write32(dev,(unsigned short)44,56320U);
  #line 2230 
  b43legacy_write32(dev,(unsigned short)52,56320U);
  #line 2231 
  b43legacy_write32(dev,(unsigned short)60,121856U);
  #line 2232 
  b43legacy_write32(dev,(unsigned short)68,56320U);
  #line 2233 
  b43legacy_write32(dev,(unsigned short)76,56320U);
  #line 2235 
  value32 = ssb_read32(dev->dev,(unsigned short)3992);
  #line 2236 
  value32 |= 1048576U;
  #line 2237 
  ssb_write32(dev->dev,(unsigned short)3992,value32);
  #line 2239 
  b43legacy_write16(dev,(unsigned short)1704,(unsigned short)((int)((dev->dev)->bus)->chipco.fast_pwrup_delay));
  #line 2243 
  atomic_set(& phy->txerr_cnt,1000);
  {
    #line 2245 
    int __ret_warn_on = err != 0;
    #line 2245 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2246 
      ldv_inline_asm();
      #line 2247 
      ldv_inline_asm();
    }
    #line 2245 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 2246 
  b43legacydbg(dev->wl,(char *)"Chip initialized\n");
  #line 2247 
  out: 
       #line 2247 
  ;
  #line 2248 
  return err;
  #line 2250 
  err_radio_off: 
                 #line 2250 
  ;
  #line 2251 
  b43legacy_radio_turn_off(dev,(_Bool)1);
  #line 2252 
  err_gpio_clean: 
                  #line 2252 
  ;
  #line 2253 
  b43legacy_gpio_cleanup(dev);
  #line 2254 
  goto out;
}

#line 2257  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_periodic_every120sec(struct b43legacy_wldev *dev)
{
  #line 2259 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2261 
  if ((unsigned int)phy->type != 2U || (unsigned int)phy->rev <= 1U) 
    #line 2262 
    return;
  #line 2264 
  b43legacy_mac_suspend(dev);
  #line 2265 
  b43legacy_phy_lo_g_measure(dev);
  #line 2266 
  b43legacy_mac_enable(dev);
  #line 2267 
  return;
}

#line 2269  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_periodic_every60sec(struct b43legacy_wldev *dev)
{
  #line 2271 
  b43legacy_phy_lo_mark_all_unused(dev);
  #line 2272 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) != 0) {
    #line 2273 
    b43legacy_mac_suspend(dev);
    #line 2274 
    b43legacy_calc_nrssi_slope(dev);
    #line 2275 
    b43legacy_mac_enable(dev);
  }
  #line 2277 
  return;
}

#line 2279  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_periodic_every30sec(struct b43legacy_wldev *dev)
{
  #line 2282 
  b43legacy_calculate_link_quality(dev);
  #line 2283 
  return;
}

#line 2285  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_periodic_every15sec(struct b43legacy_wldev *dev)
{
  #line 2287 
  b43legacy_phy_xmitpower(dev);
  #line 2289 
  atomic_set(& dev->phy.txerr_cnt,1000);
  #line 2290 
  ldv_inline_asm();
  #line 2291 
  return;
}

#line 2293  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void do_periodic_work(struct b43legacy_wldev *dev)
{
  #line 2295 
  unsigned int state;
  #line 2297 
  state = dev->periodic_state;
  #line 2298 
  if ((state & 7U) == 0U) 
                          #line 2299 
                          b43legacy_periodic_every120sec(dev);
  #line 2300 
  if ((state & 3U) == 0U) 
                          #line 2301 
                          b43legacy_periodic_every60sec(dev);
  #line 2302 
  if ((state & 1U) == 0U) 
                          #line 2303 
                          b43legacy_periodic_every30sec(dev);
  #line 2304 
  b43legacy_periodic_every15sec(dev);
  #line 2305 
  return;
}

#line 2312  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_periodic_work_handler(struct work_struct *work)
{
  #line 2314 
  void *__mptr;
  #line 2317 
  unsigned long delay;
  #line 2314 
  __mptr = (void *)work;
  #line 2314 
  struct b43legacy_wldev *dev = ((struct b43legacy_wldev *)(__mptr + 18446744073709548064U));
  #line 2316 
  struct b43legacy_wl *wl = dev->wl;
  #line 2319 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2321 
  if ((long)(atomic_read(& dev->__init_status) != 2) != 0L) 
                                                            #line 2322 
                                                            goto out;
  #line 2323 
  if (b43legacy_debug(dev,(enum b43legacy_dyndbg)B43legacy_DBG_PWORK_STOP) != 0) 
    #line 2324 
    goto out_requeue;
  #line 2326 
  do_periodic_work(dev);
  #line 2328 
  (dev->periodic_state) ++;
  #line 2329 
  out_requeue: 
               #line 2329 
  ;
  #line 2330 
  if (b43legacy_debug(dev,(enum b43legacy_dyndbg)B43legacy_DBG_PWORK_FAST) != 0) 
    #line 2331 
    delay = msecs_to_jiffies(50U); else 
                                        #line 2333 
                                        delay = round_jiffies_relative(3750UL);
  #line 2334 
  ieee80211_queue_delayed_work(wl->hw,& dev->periodic_work,delay);
  #line 2335 
  out: 
       #line 2335 
  ;
  #line 2336 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2337 
  return;
}

#line 2339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_periodic_tasks_setup(struct b43legacy_wldev *dev)
{
  #line 2341 
  struct delayed_work *work = & dev->periodic_work;
  #line 2343 
  dev->periodic_state = 0U;
  {
    #line 2344 
    struct lock_class_key __key;
    #line 2344 
    __init_work(& work->work,0);
    #line 2344 
    atomic_long_t __constr_expr_41 = {.counter = 137438953408LL};
    #line 2344 
    work->work.data = __constr_expr_41;
    #line 2344 
    lockdep_init_map(& work->work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 2344 
    INIT_LIST_HEAD(& work->work.entry);
    #line 2344 
    work->work.func = & b43legacy_periodic_work_handler;
  }
  {
    #line 2344 
    struct lock_class_key __key_0;
    #line 2344 
    init_timer_key(& work->timer,& delayed_work_timer_fn,2097152U,(char *)"&(work)->timer",& __key_0);
  }
  #line 2345 
  ieee80211_queue_delayed_work((dev->wl)->hw,work,0UL);
  #line 2346 
  return;
}

#line 2349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_validate_chipaccess(struct b43legacy_wldev *dev)
{
  #line 2351 
  u32 value;
  #line 2352 
  u32 shm_backup;
  #line 2354 
  shm_backup = b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)0);
  #line 2355 
  b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)0,2857719210U);
  #line 2356 
  if (b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)0) != 2857719210U) 
    #line 2358 
    goto error;
  #line 2359 
  b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)0,1437248085U);
  #line 2360 
  if (b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)0) != 1437248085U) 
    #line 2362 
    goto error;
  #line 2363 
  b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)0,shm_backup);
  #line 2365 
  value = b43legacy_read32(dev,(unsigned short)288);
  #line 2366 
  if ((value | 2147483648U) != 2147484672U) 
                                            #line 2368 
                                            goto error;
  #line 2370 
  value = b43legacy_read32(dev,(unsigned short)296);
  #line 2371 
  if (value != 0U) 
                   #line 2372 
                   goto error;
  #line 2374 
  return 0;
  #line 2375 
  error: 
         #line 2375 
  ;
  #line 2376 
  b43legacyerr(dev->wl,(char *)"Failed to validate the chipaccess\n");
  #line 2377 
  return -19;
}

#line 2380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_security_init(struct b43legacy_wldev *dev)
{
  #line 2382 
  if ((unsigned int)(dev->dev)->id.revision > 4U) 
                                                  #line 2382 
                                                  dev->max_nr_keys = (unsigned char)58U; else 
                                                                    #line 2382 
                                                                    dev->max_nr_keys = (unsigned char)20U;
  {
    #line 2383 
    int __ret_warn_on = (unsigned int)dev->max_nr_keys > 58U;
    #line 2383 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2384 
      ldv_inline_asm();
      #line 2385 
      ldv_inline_asm();
    }
    #line 2383 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 2384 
  dev->ktp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)86);
  #line 2389 
  dev->ktp = (unsigned short)((unsigned int)dev->ktp * 2U);
  #line 2390 
  if ((unsigned int)(dev->dev)->id.revision > 4U) 
                                                  #line 2392 
                                                  b43legacy_write16(dev,(unsigned short)1084,(unsigned short)((int)((unsigned int)((unsigned short)dev->max_nr_keys) + 65528U)));
  #line 2394 
  return;
}

#line 2397  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_rng_read(struct hwrng *rng, u32 *data)
{
  #line 2400 
  unsigned long flags;
  #line 2399 
  struct b43legacy_wl *wl = (struct b43legacy_wl *)rng->priv;
  #line 2406 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2407 
  *data = (unsigned int)b43legacy_read16(wl->current_dev,(unsigned short)1626);
  #line 2408 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2410 
  return 2;
}

#line 2414  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_rng_exit(struct b43legacy_wl *wl)
{
  #line 2417 
  if ((unsigned int)wl->rng_initialized != 0U) 
                                               #line 2418 
                                               hwrng_unregister(& wl->rng);
  #line 2419 
  return;
}

#line 2422  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_rng_init(struct b43legacy_wl *wl)
{
  #line 2424 
  int err = 0;
  #line 2427 
  ;
  #line 2427 
  snprintf((char *)(& wl->rng_name),31UL,(char *)"%s_%s",(char *)"b43legacy",wiphy_name((wl->hw)->wiphy));
  #line 2429 
  wl->rng.name = (char *)(& wl->rng_name);
  #line 2430 
  wl->rng.data_read = & b43legacy_rng_read;
  #line 2431 
  wl->rng.priv = (unsigned long)wl;
  #line 2432 
  wl->rng_initialized = (unsigned char)1U;
  #line 2433 
  err = hwrng_register(& wl->rng);
  #line 2434 
  if (err != 0) {
    #line 2435 
    wl->rng_initialized = (unsigned char)0U;
    #line 2436 
    b43legacyerr(wl,(char *)"Failed to register the random ",err);
  }
  #line 2441 
  return err;
}

#line 2444  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_tx_work(struct work_struct *work)
{
  #line 2446 
  void *__mptr;
  #line 2448 
  struct b43legacy_wldev *dev;
  #line 2449 
  struct sk_buff *skb;
  #line 2450 
  int queue_num;
  #line 2446 
  __mptr = (void *)work;
  #line 2446 
  struct b43legacy_wl *wl = ((struct b43legacy_wl *)(__mptr + 18446744073709550776U));
  #line 2451 
  int err = 0;
  #line 2453 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2454 
  dev = wl->current_dev;
  #line 2455 
  if ((long)(dev == (struct b43legacy_wldev *)0) != 0L) 
                                                        #line 2455 
                                                        goto _LOR;
  else {
    #line 2455 
    if ((long)(atomic_read(& dev->__init_status) <= 1) != 0L) {
      #line 2455 
      _LOR: {
              #line 2456 
              cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
              #line 2457 
              return;
            }
    }
  }
  #line 2460 
  queue_num = 0;
  #line 2460 
  while (queue_num <= 3) {
    #line 2461 
    while (1) {
      #line 2461 
      if (! (skb_queue_len(& wl->tx_queue[queue_num]) != 0U)) 
                                                              #line 2461 
                                                              break;
      {
        #line 2462 
        skb = skb_dequeue(& wl->tx_queue[queue_num]);
        #line 2463 
        if (b43legacy_using_pio(dev) != 0) 
                                           #line 2464 
                                           err = b43legacy_pio_tx(dev,skb); else 
                                                                    #line 2466 
                                                                    err = b43legacy_dma_tx(dev,skb);
        #line 2467 
        if (err == -28) {
          #line 2468 
          wl->tx_queue_stopped[queue_num] = (_Bool)1;
          #line 2469 
          ieee80211_stop_queue(wl->hw,queue_num);
          #line 2470 
          skb_queue_head(& wl->tx_queue[queue_num],skb);
          #line 2471 
          break;
        }
        #line 2473 
        if ((long)(err != 0) != 0L) 
                                    #line 2474 
                                    consume_skb(skb);
        #line 2475 
        err = 0;
      }
    }
    #line 2478 
    if (err == 0) 
                  #line 2479 
                  wl->tx_queue_stopped[queue_num] = (_Bool)0;
    #line 2460 
    queue_num ++;
  }
  #line 2482 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2483 
  return;
}

#line 2485  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_op_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control, struct sk_buff *skb)
{
  #line 2489 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 2491 
  if ((long)(skb->len <= 9U) != 0L) {
    #line 2493 
    dev_kfree_skb_any(skb);
    #line 2494 
    return;
  }
  {
    #line 2496 
    int __ret_warn_on = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags != 0U;
    #line 2496 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2497 
      ldv_inline_asm();
      #line 2498 
      ldv_inline_asm();
    }
    #line 2496 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 2498 
  skb_queue_tail(& wl->tx_queue[(int)skb->queue_mapping],skb);
  #line 2499 
  if (! wl->tx_queue_stopped[(int)skb->queue_mapping]) 
                                                       #line 2500 
                                                       ieee80211_queue_work(wl->hw,& wl->tx_work); else 
                                                                    #line 2502 
                                                                    ieee80211_stop_queue(wl->hw,(int)skb->queue_mapping);
  #line 2503 
  return;
}

#line 2505  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_conf_tx(struct ieee80211_hw *hw, struct ieee80211_vif *vif, u16 queue, struct ieee80211_tx_queue_params *params)
{
  #line 2509 
  return 0;
}

#line 2512  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_get_stats(struct ieee80211_hw *hw, struct ieee80211_low_level_stats *stats)
{
  #line 2516 
  unsigned long flags;
  #line 2515 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 2518 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2519 
  memcpy((void *)stats,(void *)(& wl->ieee_stats),16UL);
  #line 2520 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2522 
  return 0;
}

#line 2525  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static char *phymode_to_string(unsigned int phymode)
{
  #line 2527 
  switch (phymode) {
    #line 2528 
    case (unsigned int)2: 
                          #line 2528 
    ;
    #line 2529 
    return (char *)"B";
    #line 2530 
    case (unsigned int)4: 
                          #line 2530 
    ;
    #line 2531 
    return (char *)"G";
    #line 2532 
    default: 
             #line 2532 
    ;
    #line 2533 
    printk((char *)"\001",(char *)"1");
    #line 2534 
    ldv_inline_asm();
    #line 2535 
    ldv_inline_asm();
    #line 2536 
    ldv_inline_asm();
    #line 2533 
    ;
  }
  #line 2535 
  return (char *)"";
}

#line 2538  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int find_wldev_for_phymode(struct b43legacy_wl *wl, unsigned int phymode, struct b43legacy_wldev **dev, bool *gmode)
{
  #line 2545 
  void *__mptr;
  #line 2543 
  struct b43legacy_wldev *d;
  #line 2545 
  __mptr = (void *)wl->devlist.next;
  #line 2545 
  d = ((struct b43legacy_wldev *)(__mptr + 18446744073709546712U));
  #line 2545 
  while (& d->list != & wl->devlist) {
    #line 2545 
    void *__mptr_0;
    #line 2546 
    if (((unsigned int)d->phy.possible_phymodes & phymode) != 0U) {
      #line 2549 
      *gmode = (_Bool)1;
      #line 2550 
      *dev = d;
      #line 2552 
      return 0;
    }
    #line 2545 
    __mptr_0 = (void *)d->list.next;
    #line 2545 
    d = ((struct b43legacy_wldev *)(__mptr_0 + 18446744073709546712U));
  }
  #line 2556 
  return -3;
}

#line 2559  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_put_phy_into_reset(struct b43legacy_wldev *dev)
{
  #line 2562 
  u32 tmslow;
  #line 2561 
  struct ssb_device *sdev = dev->dev;
  #line 2564 
  tmslow = ssb_read32(sdev,(unsigned short)3992);
  #line 2565 
  tmslow &= 3758096383U;
  #line 2566 
  tmslow |= 524288U;
  #line 2567 
  tmslow |= 131072U;
  #line 2568 
  ssb_write32(sdev,(unsigned short)3992,tmslow);
  #line 2569 
  msleep(1U);
  #line 2571 
  tmslow = ssb_read32(sdev,(unsigned short)3992);
  #line 2572 
  tmslow &= 4294836223U;
  #line 2573 
  tmslow |= 524288U;
  #line 2574 
  ssb_write32(sdev,(unsigned short)3992,tmslow);
  #line 2575 
  msleep(1U);
  #line 2576 
  return;
}

#line 2579  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_switch_phymode(struct b43legacy_wl *wl, unsigned int new_mode)
{
  #line 2583 
  struct b43legacy_wldev *down_dev;
  #line 2584 
  int err;
  #line 2586 
  int prev_status;
  #line 2582 
  struct b43legacy_wldev *up_dev = up_dev;
  #line 2585 
  bool gmode = (_Bool)0;
  #line 2588 
  err = find_wldev_for_phymode(wl,new_mode,& up_dev,& gmode);
  #line 2589 
  if (err != 0) {
    #line 2590 
    ;
    #line 2590 
    b43legacyerr(wl,(char *)"Could not find a device for %s-PHY mode\n",phymode_to_string(new_mode));
    #line 2592 
    return err;
  }
  #line 2594 
  if (wl->current_dev == up_dev && ((int)(wl->current_dev)->phy.gmode == 0) ^ ((int)gmode != 0)) 
    #line 2597 
    return 0;
  #line 2598 
  ;
  #line 2598 
  b43legacydbg(wl,(char *)"Reconfiguring PHYmode to %s-PHY\n",phymode_to_string(new_mode));
  #line 2600 
  down_dev = wl->current_dev;
  #line 2602 
  prev_status = atomic_read(& down_dev->__init_status);
  #line 2604 
  if (prev_status > 1) 
                       #line 2605 
                       b43legacy_wireless_core_stop(down_dev);
  #line 2606 
  if (prev_status > 0) 
                       #line 2607 
                       b43legacy_wireless_core_exit(down_dev);
  #line 2609 
  if (down_dev != up_dev) 
                          #line 2612 
                          b43legacy_put_phy_into_reset(down_dev);
  #line 2615 
  up_dev->phy.gmode = gmode;
  #line 2616 
  if (prev_status > 0) {
    #line 2617 
    err = b43legacy_wireless_core_init(up_dev);
    #line 2618 
    if (err != 0) {
      #line 2619 
      ;
      #line 2619 
      b43legacyerr(wl,(char *)"Fatal: Could not initialize device",phymode_to_string(new_mode));
      #line 2622 
      goto init_failure;
    }
  }
  #line 2625 
  if (prev_status > 1) {
    #line 2626 
    err = b43legacy_wireless_core_start(up_dev);
    #line 2627 
    if (err != 0) {
      #line 2628 
      ;
      #line 2628 
      b43legacyerr(wl,(char *)"Fatal: Could not start device for ",phymode_to_string(new_mode));
      #line 2631 
      b43legacy_wireless_core_exit(up_dev);
      #line 2632 
      goto init_failure;
    }
  }
  {
    #line 2635 
    int __ret_warn_on = atomic_read(& up_dev->__init_status) != prev_status;
    #line 2635 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2636 
      ldv_inline_asm();
      #line 2637 
      ldv_inline_asm();
    }
    #line 2635 
    long tmp_4 = (long)(__ret_warn_on != 0);
  }
  #line 2637 
  b43legacy_shm_write32(up_dev,(unsigned short)1,(unsigned short)62,0U);
  #line 2639 
  wl->current_dev = up_dev;
  #line 2641 
  return 0;
  #line 2642 
  init_failure: 
                #line 2642 
  ;
  #line 2644 
  wl->current_dev = (struct b43legacy_wldev *)0;
  #line 2645 
  return err;
}

#line 2649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_set_retry_limits(struct b43legacy_wldev *dev, unsigned int short_retry, unsigned int long_retry)
{
  #line 2655 
  unsigned int __UNIQUE_ID___x616;
  #line 2655 
  unsigned int tmp;
  #line 2656 
  unsigned int __UNIQUE_ID___x618;
  #line 2656 
  unsigned int tmp_1;
  {
    #line 2655 
    __UNIQUE_ID___x616 = short_retry;
    #line 2655 
    unsigned int __UNIQUE_ID___y617 = 15U;
    #line 2655 
    if (__UNIQUE_ID___x616 < __UNIQUE_ID___y617) 
                                                 #line 2655 
                                                 tmp = __UNIQUE_ID___x616; else 
                                                                    #line 2655 
                                                                    tmp = __UNIQUE_ID___y617;
    }
  #line 2655 
  short_retry = tmp;
  {
    #line 2656 
    __UNIQUE_ID___x618 = long_retry;
    #line 2656 
    unsigned int __UNIQUE_ID___y619 = 15U;
    #line 2656 
    if (__UNIQUE_ID___x618 < __UNIQUE_ID___y619) 
                                                 #line 2656 
                                                 tmp_1 = __UNIQUE_ID___x618; else 
                                                                    #line 2656 
                                                                    tmp_1 = __UNIQUE_ID___y619;
    }
  #line 2656 
  long_retry = tmp_1;
  #line 2658 
  b43legacy_shm_write16(dev,(unsigned short)2,(unsigned short)6,(unsigned short)((int)((unsigned short)short_retry)));
  #line 2659 
  b43legacy_shm_write16(dev,(unsigned short)2,(unsigned short)7,(unsigned short)((int)((unsigned short)long_retry)));
  #line 2660 
  return;
}

#line 2662  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_dev_config(struct ieee80211_hw *hw, u32 changed)
{
  #line 2666 
  struct b43legacy_wldev *dev;
  #line 2667 
  struct b43legacy_phy *phy;
  #line 2669 
  unsigned long flags;
  #line 2671 
  int antenna_tx;
  #line 2665 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 2668 
  struct ieee80211_conf *conf = & hw->conf;
  #line 2670 
  unsigned int new_phymode = 65535U;
  #line 2672 
  int err = 0;
  #line 2674 
  antenna_tx = 3;
  #line 2676 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2677 
  dev = wl->current_dev;
  #line 2678 
  phy = & dev->phy;
  #line 2680 
  if ((changed & 128U) != 0U) 
                              #line 2681 
                              b43legacy_set_retry_limits(dev,(unsigned int)conf->short_frame_max_tx_count,(unsigned int)conf->long_frame_max_tx_count);
  #line 2684 
  changed &= 4294967167U;
  #line 2685 
  if (changed == 0U) 
                     #line 2686 
                     goto out_unlock_mutex;
  #line 2689 
  switch ((unsigned int)(conf->chandef.chan)->band) {
    #line 2690 
    case (unsigned int)0: 
                          #line 2690 
    ;
    #line 2691 
    if ((unsigned int)phy->type == 1U) 
                                       #line 2692 
                                       new_phymode = 2U; else 
                                                              #line 2694 
                                                              new_phymode = 4U;
    #line 2695 
    break;
    #line 2696 
    default: 
             #line 2696 
    ;
    {
      #line 2697 
      int __ret_warn_on = 1;
      #line 2697 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 2698 
        ldv_inline_asm();
        #line 2699 
        ldv_inline_asm();
      }
      #line 2697 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
  }
  #line 2699 
  err = b43legacy_switch_phymode(wl,new_phymode);
  #line 2700 
  if (err != 0) 
                #line 2701 
                goto out_unlock_mutex;
  #line 2706 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2707 
  if (atomic_read(& dev->__init_status) <= 1) {
    #line 2708 
    cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
    #line 2709 
    goto out_unlock_mutex;
  }
  #line 2711 
  b43legacy_write32(dev,(unsigned short)300,0U);
  #line 2712 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2713 
  b43legacy_synchronize_irq(dev);
  #line 2717 
  if ((int)(conf->chandef.chan)->hw_value != (int)((unsigned short)phy->channel)) 
    #line 2718 
    b43legacy_radio_selectchannel(dev,(unsigned char)((int)((unsigned char)(conf->chandef.chan)->hw_value)),0);
  #line 2721 
  (dev->wl)->radiotap_enabled = (_Bool)((conf->flags & 1U) != 0U);
  #line 2724 
  if (conf->power_level != 0) 
    #line 2725 
    if (conf->power_level != (int)phy->power_level) {
      #line 2726 
      phy->power_level = (unsigned char)conf->power_level;
      #line 2727 
      b43legacy_phy_xmitpower(dev);
    }
  #line 2732 
  b43legacy_mgmtframe_txantenna(dev,antenna_tx);
  #line 2734 
  if ((int)wl->radio_enabled != (int)phy->radio_on) 
    #line 2735 
    if ((int)wl->radio_enabled != 0) {
      #line 2736 
      b43legacy_radio_turn_on(dev);
      #line 2737 
      b43legacyinfo(dev->wl,(char *)"Radio turned on by software\n");
      #line 2738 
      if (! dev->radio_hw_enable) 
                                  #line 2739 
                                  b43legacyinfo(dev->wl,(char *)"The hardware RF-kill");
    }
    else {
      #line 2744 
      b43legacy_radio_turn_off(dev,(_Bool)0);
      #line 2745 
      b43legacyinfo(dev->wl,(char *)"Radio turned off by");
    }
  #line 2750 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2751 
  b43legacy_write32(dev,(unsigned short)300,dev->irq_mask);
  #line 2752 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2753 
  out_unlock_mutex: 
                    #line 2753 
  ;
  #line 2754 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2756 
  return err;
}

#line 2759  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_update_basic_rates(struct b43legacy_wldev *dev, u32 brates)
{
  #line 2763 
  struct ieee80211_rate *rate;
  #line 2764 
  int i;
  #line 2765 
  u16 basic;
  #line 2765 
  u16 direct;
  #line 2765 
  u16 offset;
  #line 2765 
  u16 basic_offset;
  #line 2765 
  u16 rateptr;
  #line 2761 
  struct ieee80211_supported_band *sband = (((dev->wl)->hw)->wiphy)->bands[0];
  #line 2767 
  i = 0;
  #line 2767 
  while (sband->n_bitrates > i) {
    {
      #line 2768 
      rate = sband->bitrates + (unsigned long)i;
      #line 2770 
      if (b43legacy_is_cck_rate((int)rate->hw_value) != 0) {
        #line 2771 
        direct = (unsigned short)1216U;
        #line 2772 
        basic = (unsigned short)1248U;
        #line 2773 
        offset = (unsigned short)b43legacy_plcp_get_ratecode_cck((unsigned char)((int)((unsigned char)rate->hw_value)));
        #line 2774 
        offset = (unsigned short)((unsigned int)offset & 15U);
      }
      else {
        #line 2776 
        direct = (unsigned short)1152U;
        #line 2777 
        basic = (unsigned short)1184U;
        #line 2778 
        offset = (unsigned short)b43legacy_plcp_get_ratecode_ofdm((unsigned char)((int)((unsigned char)rate->hw_value)));
        #line 2779 
        offset = (unsigned short)((unsigned int)offset & 15U);
      }
      #line 2782 
      rate = ieee80211_get_response_rate(sband,brates,(int)rate->bitrate);
      #line 2784 
      if (b43legacy_is_cck_rate((int)rate->hw_value) != 0) {
        #line 2785 
        basic_offset = (unsigned short)b43legacy_plcp_get_ratecode_cck((unsigned char)((int)((unsigned char)rate->hw_value)));
        #line 2786 
        basic_offset = (unsigned short)((unsigned int)basic_offset & 15U);
      }
      else {
        #line 2788 
        basic_offset = (unsigned short)b43legacy_plcp_get_ratecode_ofdm((unsigned char)((int)((unsigned char)rate->hw_value)));
        #line 2789 
        basic_offset = (unsigned short)((unsigned int)basic_offset & 15U);
      }
      #line 2796 
      rateptr = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)((int)((unsigned int)basic_offset * 2U + (unsigned int)direct)));
      #line 2799 
      b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)((int)((unsigned int)offset * 2U + (unsigned int)basic)),(unsigned short)((int)rateptr));
    }
    #line 2767 
    i ++;
  }
  #line 2802 
  return;
}

#line 2804  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_op_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif, struct ieee80211_bss_conf *conf, u32 changed)
{
  #line 2810 
  struct b43legacy_wldev *dev;
  #line 2811 
  unsigned long flags;
  #line 2809 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 2813 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  {
    #line 2814 
    int __ret_warn_on = wl->vif != vif;
    #line 2814 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2815 
      ldv_inline_asm();
      #line 2816 
      ldv_inline_asm();
    }
    #line 2814 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 2816 
  dev = wl->current_dev;
  #line 2821 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2822 
  if (atomic_read(& dev->__init_status) <= 1) {
    #line 2823 
    cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
    #line 2824 
    goto out_unlock_mutex;
  }
  #line 2826 
  b43legacy_write32(dev,(unsigned short)300,0U);
  #line 2828 
  if ((changed & 128U) != 0U) {
    #line 2829 
    b43legacy_synchronize_irq(dev);
    #line 2831 
    if (conf->bssid != (u8 *)0U) 
                                 #line 2832 
                                 memcpy((void *)(& wl->bssid),(void *)conf->bssid,6UL); else 
                                                                    #line 2834 
                                                                    eth_zero_addr((u8 *)(& wl->bssid));
  }
  #line 2837 
  if (atomic_read(& dev->__init_status) > 0) {
    #line 2838 
    if ((changed & 256U) != 0U) {
      #line 2838 
      if (b43legacy_is_mode(wl,3) != 0) 
                                        #line 2841 
                                        b43legacy_update_templates(wl);
      else {
        #line 2839 
        if (b43legacy_is_mode(wl,1) != 0) 
                                          #line 2841 
                                          b43legacy_update_templates(wl);
      }
    }
    #line 2843 
    if ((changed & 128U) != 0U) 
                                #line 2844 
                                b43legacy_write_mac_bssid_templates(dev);
  }
  #line 2846 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2848 
  b43legacy_mac_suspend(dev);
  #line 2850 
  if ((changed & 64U) != 0U) {
    #line 2850 
    if (b43legacy_is_mode(wl,3) != 0) 
                                      #line 2853 
                                      b43legacy_set_beacon_int(dev,(unsigned short)((int)conf->beacon_int));
    else {
      #line 2851 
      if (b43legacy_is_mode(wl,1) != 0) 
                                        #line 2853 
                                        b43legacy_set_beacon_int(dev,(unsigned short)((int)conf->beacon_int));
    }
  }
  #line 2855 
  if ((changed & 32U) != 0U) 
                             #line 2856 
                             b43legacy_update_basic_rates(dev,conf->basic_rates);
  #line 2858 
  if ((changed & 8U) != 0U) 
    #line 2859 
    if ((int)conf->use_short_slot != 0) 
                                        #line 2860 
                                        b43legacy_short_slot_timing_enable(dev); else 
                                                                    #line 2862 
                                                                    b43legacy_short_slot_timing_disable(dev);
  #line 2865 
  b43legacy_mac_enable(dev);
  #line 2867 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2868 
  b43legacy_write32(dev,(unsigned short)300,dev->irq_mask);
  #line 2870 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2871 
  out_unlock_mutex: 
                    #line 2871 
  ;
  #line 2872 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2873 
  return;
}

#line 2875  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_op_configure_filter(struct ieee80211_hw *hw, unsigned int changed, unsigned int *fflags, u64 multicast)
{
  #line 2881 
  unsigned long flags;
  #line 2879 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 2880 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 2883 
  if (dev == (struct b43legacy_wldev *)0) {
    #line 2884 
    *fflags = 0U;
    #line 2885 
    return;
  }
  #line 2888 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2889 
  *fflags &= 126U;
  #line 2896 
  changed &= 126U;
  #line 2903 
  wl->filter_flags = *fflags;
  #line 2905 
  if (changed != 0U) {
    #line 2905 
    if (atomic_read(& dev->__init_status) > 0) 
                                               #line 2906 
                                               b43legacy_adjust_opmode(dev);
  }
  #line 2907 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2908 
  return;
}

#line 2911  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_wireless_core_stop(struct b43legacy_wldev *dev)
{
  #line 2914 
  unsigned long flags;
  #line 2915 
  int queue_num;
  #line 2913 
  struct b43legacy_wl *wl = dev->wl;
  #line 2917 
  if (atomic_read(& dev->__init_status) <= 1) 
                                              #line 2918 
                                              return;
  #line 2923 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 2924 
  b43legacy_write32(dev,(unsigned short)300,0U);
  #line 2925 
  b43legacy_read32(dev,(unsigned short)300);
  #line 2926 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 2927 
  b43legacy_synchronize_irq(dev);
  #line 2929 
  atomic_set(& dev->__init_status,1);
  #line 2930 
  ldv_inline_asm();
  #line 2931 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2934 
  cancel_delayed_work_sync(& dev->periodic_work);
  #line 2935 
  cancel_work_sync(& wl->tx_work);
  #line 2936 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 2939 
  queue_num = 0;
  #line 2939 
  while (queue_num <= 3) {
    #line 2940 
    while (1) {
      #line 2940 
      if (! (skb_queue_len(& wl->tx_queue[queue_num]) != 0U)) 
                                                              #line 2940 
                                                              break;
      #line 2941 
      consume_skb(skb_dequeue(& wl->tx_queue[queue_num]));
    }
    #line 2939 
    queue_num ++;
  }
  #line 2944 
  b43legacy_mac_suspend(dev);
  #line 2945 
  cif_free_irq((dev->dev)->irq,(void *)dev);
  #line 2946 
  b43legacydbg(wl,(char *)"Wireless interface stopped\n");
  #line 2947 
  return;
}

#line 2950  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_wireless_core_start(struct b43legacy_wldev *dev)
{
  #line 2952 
  int err;
  {
    #line 2954 
    int __ret_warn_on = atomic_read(& dev->__init_status) != 1;
    #line 2954 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2955 
      ldv_inline_asm();
      #line 2956 
      ldv_inline_asm();
    }
    #line 2954 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 2956 
  drain_txstatus_queue(dev);
  #line 2957 
  err = cif_request_irq((dev->dev)->irq,& b43legacy_interrupt_handler,128UL,(char *)"b43legacy",(void *)dev);
  #line 2959 
  if (err != 0) {
    #line 2960 
    b43legacyerr(dev->wl,(char *)"Cannot request IRQ-%d\n",(dev->dev)->irq);
    #line 2962 
    goto out;
  }
  #line 2965 
  ieee80211_wake_queues((dev->wl)->hw);
  #line 2966 
  atomic_set(& dev->__init_status,2);
  #line 2967 
  ldv_inline_asm();
  #line 2969 
  b43legacy_mac_enable(dev);
  #line 2970 
  b43legacy_write32(dev,(unsigned short)300,dev->irq_mask);
  #line 2973 
  b43legacy_periodic_tasks_setup(dev);
  #line 2975 
  b43legacydbg(dev->wl,(char *)"Wireless interface started\n");
  #line 2976 
  out: 
       #line 2976 
  ;
  #line 2977 
  return err;
}

#line 2981  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_phy_versioning(struct b43legacy_wldev *dev)
{
  #line 2984 
  u32 tmp;
  #line 2985 
  u8 analog_type;
  #line 2986 
  u8 phy_type;
  #line 2987 
  u8 phy_rev;
  #line 2988 
  u16 radio_manuf;
  #line 2989 
  u16 radio_ver;
  #line 2990 
  u16 radio_rev;
  #line 2983 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2991 
  int unsupported = 0;
  #line 2994 
  tmp = (unsigned int)b43legacy_read16(dev,(unsigned short)992);
  #line 2995 
  analog_type = (unsigned char)((unsigned int)((unsigned char)(tmp >> 12)) & 15U);
  #line 2997 
  phy_type = (unsigned char)((unsigned int)((unsigned char)(tmp >> 8)) & 15U);
  #line 2998 
  phy_rev = (unsigned char)tmp;
  #line 2999 
  switch ((int)phy_type) {
    #line 3000 
    case 1: 
            #line 3000 
    ;
    #line 3001 
    if (((unsigned int)phy_rev != 2U && (unsigned int)phy_rev != 4U) && (unsigned int)phy_rev + 250U > 1U) 
      #line 3003 
      unsupported = 1;
    #line 3004 
    break;
    #line 3005 
    case 2: 
            #line 3005 
    ;
    #line 3006 
    if ((unsigned int)phy_rev > 8U) 
                                    #line 3007 
                                    unsupported = 1;
    #line 3008 
    break;
    #line 3009 
    default: 
             #line 3009 
    ;
    #line 3010 
    unsupported = 1;
  }
  #line 3012 
  if (unsupported != 0) {
    #line 3013 
    b43legacyerr(dev->wl,(char *)"FOUND UNSUPPORTED PHY ",(int)analog_type,(int)phy_type,(int)phy_rev);
    #line 3016 
    return -95;
  }
  #line 3018 
  b43legacydbg(dev->wl,(char *)"Found PHY: Analog %u, Type %u, Revision %u\n",(int)analog_type,(int)phy_type,(int)phy_rev);
  #line 3023 
  if ((unsigned int)((dev->dev)->bus)->chip_id == 17175U) 
    #line 3024 
    if ((unsigned int)((dev->dev)->bus)->chip_rev == 0U) 
                                                         #line 3025 
                                                         tmp = 839188863U;
    else 
      #line 3026 
      if ((unsigned int)((dev->dev)->bus)->chip_rev == 1U) 
                                                           #line 3027 
                                                           tmp = 1107624319U; else 
                                                                    #line 3029 
                                                                    tmp = 1376059775U;
  else {
    #line 3031 
    b43legacy_write16(dev,(unsigned short)1014,(unsigned short)1);
    #line 3033 
    tmp = (unsigned int)b43legacy_read16(dev,(unsigned short)1016);
    #line 3034 
    tmp <<= 16;
    #line 3035 
    b43legacy_write16(dev,(unsigned short)1014,(unsigned short)1);
    #line 3037 
    tmp = (unsigned int)b43legacy_read16(dev,(unsigned short)1018) | tmp;
  }
  #line 3039 
  radio_manuf = (unsigned short)((unsigned int)((unsigned short)tmp) & 4095U);
  #line 3040 
  radio_ver = (unsigned short)(tmp >> 12);
  #line 3041 
  radio_rev = (unsigned short)(tmp >> 28);
  #line 3042 
  switch ((int)phy_type) {
    #line 3043 
    case 1: 
            #line 3043 
    ;
    #line 3044 
    if (((int)radio_ver & 65520) != 8272) 
                                          #line 3045 
                                          unsupported = 1;
    #line 3046 
    break;
    #line 3047 
    case 2: 
            #line 3047 
    ;
    #line 3048 
    if ((unsigned int)radio_ver != 8272U) 
                                          #line 3049 
                                          unsupported = 1;
    #line 3050 
    break;
    #line 3051 
    default: 
             #line 3051 
    ;
    #line 3052 
    printk((char *)"\001",(char *)"1");
    #line 3053 
    ldv_inline_asm();
    #line 3054 
    ldv_inline_asm();
    #line 3055 
    ldv_inline_asm();
    #line 3052 
    ;
  }
  #line 3054 
  if (unsupported != 0) {
    #line 3055 
    b43legacyerr(dev->wl,(char *)"FOUND UNSUPPORTED RADIO ",(int)radio_manuf,(int)radio_ver,(int)radio_rev);
    #line 3058 
    return -95;
  }
  #line 3060 
  b43legacydbg(dev->wl,(char *)"Found Radio: Manuf 0x%X, Version 0x%X,",(int)radio_manuf,(int)radio_ver,(int)radio_rev);
  #line 3064 
  phy->radio_manuf = radio_manuf;
  #line 3065 
  phy->radio_ver = radio_ver;
  #line 3066 
  phy->radio_rev = (unsigned char)radio_rev;
  #line 3068 
  phy->analog = analog_type;
  #line 3069 
  phy->type = phy_type;
  #line 3070 
  phy->rev = phy_rev;
  #line 3072 
  return 0;
}

#line 3075  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void setup_struct_phy_for_init(struct b43legacy_wldev *dev, struct b43legacy_phy *phy)
{
  #line 3078 
  struct b43legacy_lopair *lo;
  #line 3079 
  int i;
  #line 3081 
  memset((void *)(& phy->minlowsig),255,4UL);
  #line 3082 
  memset((void *)(& phy->minlowsigpos),0,4UL);
  #line 3086 
  dev->radio_hw_enable = (_Bool)1;
  #line 3088 
  phy->savedpctlreg = (unsigned short)65535U;
  #line 3089 
  phy->aci_enable = (_Bool)0;
  #line 3090 
  phy->aci_wlan_automatic = (_Bool)0;
  #line 3091 
  phy->aci_hw_rssi = (_Bool)0;
  #line 3093 
  lo = phy->_lo_pairs;
  #line 3094 
  if (lo != (struct b43legacy_lopair *)0) 
                                          #line 3095 
                                          memset((void *)lo,0,168UL);
  #line 3097 
  phy->max_lb_gain = (short)0;
  #line 3098 
  phy->trsw_rx_gain = (short)0;
  #line 3101 
  phy->__anonCompField_b43legacy_phy_208.bbatt = b43legacy_default_baseband_attenuation(dev);
  #line 3102 
  phy->__anonCompField_b43legacy_phy_208.rfatt = b43legacy_default_radio_attenuation(dev);
  #line 3103 
  phy->__anonCompField_b43legacy_phy_208.txctl1 = b43legacy_default_txctl1(dev);
  #line 3104 
  phy->__anonCompField_b43legacy_phy_209.txpwr_offset = (unsigned short)0U;
  #line 3107 
  phy->nrssislope = 0;
  #line 3108 
  i = 0;
  #line 3108 
  while ((unsigned int)i <= 1U) {
    #line 3109 
    phy->nrssi[i] = (short)(-1000);
    #line 3108 
    i ++;
  }
  #line 3110 
  i = 0;
  #line 3110 
  while ((unsigned int)i <= 63U) {
    #line 3111 
    phy->nrssi_lt[i] = (signed char)i;
    #line 3110 
    i ++;
  }
  #line 3113 
  phy->lofcal = (unsigned short)65535U;
  #line 3114 
  phy->initval = (unsigned short)65535U;
  #line 3116 
  phy->interfmode = 0;
  #line 3117 
  phy->channel = (unsigned char)255U;
  #line 3118 
  return;
}

#line 3120  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void setup_struct_wldev_for_init(struct b43legacy_wldev *dev)
{
  #line 3123 
  dev->dfq_valid = (_Bool)0;
  #line 3126 
  memset((void *)(& dev->stats),0,24UL);
  #line 3128 
  setup_struct_phy_for_init(dev,& dev->phy);
  #line 3131 
  dev->irq_reason = 0U;
  #line 3132 
  memset((void *)(& dev->dma_reason),0,24UL);
  #line 3133 
  dev->irq_mask = 939887205U;
  #line 3135 
  dev->mac_suspended = 1;
  #line 3138 
  memset((void *)(& dev->noisecalc),0,35UL);
  #line 3139 
  return;
}

#line 3141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_set_synth_pu_delay(struct b43legacy_wldev *dev, bool idle)
{
  #line 3143 
  u16 pu_delay = (unsigned short)1050U;
  #line 3145 
  if (b43legacy_is_mode(dev->wl,1) != 0) 
                                         #line 3146 
                                         pu_delay = (unsigned short)500U;
  else 
    #line 3145 
    if ((int)idle != 0) 
                        #line 3146 
                        pu_delay = (unsigned short)500U;
  #line 3147 
  if ((unsigned int)dev->phy.radio_ver == 8272U && (unsigned int)dev->phy.radio_rev == 8U) {
    #line 3148 
    int tmp_0;
    #line 3148 
    u16 __UNIQUE_ID___x624;
    {
      #line 3148 
      __UNIQUE_ID___x624 = pu_delay;
      #line 3148 
      unsigned short __UNIQUE_ID___y625 = (unsigned short)2400U;
      #line 3148 
      if ((int)__UNIQUE_ID___x624 > (int)__UNIQUE_ID___y625) 
                                                             #line 3148 
                                                             tmp_0 = (int)__UNIQUE_ID___x624; else 
                                                                    #line 3148 
                                                                    tmp_0 = (int)__UNIQUE_ID___y625;
      }
    #line 3148 
    pu_delay = (unsigned short)tmp_0;
  }
  #line 3150 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)148,(unsigned short)((int)pu_delay));
  #line 3151 
  return;
}

#line 3155  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_set_pretbtt(struct b43legacy_wldev *dev)
{
  #line 3157 
  u16 pretbtt;
  #line 3160 
  if (b43legacy_is_mode(dev->wl,1) != 0) 
                                         #line 3161 
                                         pretbtt = (unsigned short)2U; else 
                                                                    #line 3163 
                                                                    pretbtt = (unsigned short)250U;
  #line 3164 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)150,(unsigned short)((int)pretbtt));
  #line 3166 
  b43legacy_write16(dev,(unsigned short)1554,(unsigned short)((int)pretbtt));
  #line 3167 
  return;
}

#line 3171  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_wireless_core_exit(struct b43legacy_wldev *dev)
{
  #line 3174 
  u32 macctl;
  #line 3173 
  struct b43legacy_phy *phy = & dev->phy;
  {
    #line 3176 
    int __ret_warn_on = atomic_read(& dev->__init_status) > 1;
    #line 3176 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 3177 
      ldv_inline_asm();
      #line 3178 
      ldv_inline_asm();
    }
    #line 3176 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 3177 
  if (atomic_read(& dev->__init_status) != 1) 
                                              #line 3178 
                                              return;
  #line 3179 
  atomic_set(& dev->__init_status,0);
  #line 3180 
  ldv_inline_asm();
  #line 3182 
  macctl = b43legacy_read32(dev,(unsigned short)288);
  #line 3183 
  macctl &= 4294967293U;
  #line 3184 
  macctl |= 4U;
  #line 3185 
  b43legacy_write32(dev,(unsigned short)288,macctl);
  #line 3187 
  b43legacy_leds_exit(dev);
  #line 3188 
  b43legacy_rng_exit(dev->wl);
  #line 3189 
  b43legacy_pio_free(dev);
  #line 3190 
  b43legacy_dma_free(dev);
  #line 3191 
  b43legacy_chip_exit(dev);
  #line 3192 
  b43legacy_radio_turn_off(dev,(_Bool)1);
  #line 3193 
  b43legacy_switch_analog(dev,0);
  #line 3194 
  if ((int)phy->dyn_tssi_tbl != 0) 
                                   #line 3195 
                                   kfree((void *)phy->tssi2dbm);
  #line 3196 
  kfree((void *)phy->lo_control);
  #line 3197 
  phy->lo_control = (struct b43legacy_txpower_lo_control *)0;
  #line 3198 
  if ((dev->wl)->current_beacon != (struct sk_buff *)0) {
    #line 3199 
    dev_kfree_skb_any((dev->wl)->current_beacon);
    #line 3200 
    (dev->wl)->current_beacon = (struct sk_buff *)0;
  }
  #line 3203 
  ssb_device_disable(dev->dev,0U);
  #line 3204 
  ssb_bus_may_powerdown((dev->dev)->bus);
  #line 3205 
  return;
}

#line 3207  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void prepare_phy_data_for_init(struct b43legacy_wldev *dev)
{
  #line 3210 
  int i;
  #line 3209 
  struct b43legacy_phy *phy = & dev->phy;
  #line 3213 
  phy->__anonCompField_b43legacy_phy_208.bbatt = b43legacy_default_baseband_attenuation(dev);
  #line 3214 
  phy->__anonCompField_b43legacy_phy_208.rfatt = b43legacy_default_radio_attenuation(dev);
  #line 3215 
  phy->__anonCompField_b43legacy_phy_208.txctl1 = b43legacy_default_txctl1(dev);
  #line 3216 
  phy->__anonCompField_b43legacy_phy_208.txctl2 = (unsigned short)65535U;
  #line 3217 
  phy->__anonCompField_b43legacy_phy_209.txpwr_offset = (unsigned short)0U;
  #line 3220 
  phy->nrssislope = 0;
  #line 3221 
  i = 0;
  #line 3221 
  while ((unsigned int)i <= 1U) {
    #line 3222 
    phy->nrssi[i] = (short)(-1000);
    #line 3221 
    i ++;
  }
  #line 3223 
  i = 0;
  #line 3223 
  while ((unsigned int)i <= 63U) {
    #line 3224 
    phy->nrssi_lt[i] = (signed char)i;
    #line 3223 
    i ++;
  }
  #line 3226 
  phy->lofcal = (unsigned short)65535U;
  #line 3227 
  phy->initval = (unsigned short)65535U;
  #line 3229 
  phy->aci_enable = (_Bool)0;
  #line 3230 
  phy->aci_wlan_automatic = (_Bool)0;
  #line 3231 
  phy->aci_hw_rssi = (_Bool)0;
  #line 3233 
  phy->antenna_diversity = (unsigned short)65535U;
  #line 3234 
  memset((void *)(& phy->minlowsig),255,4UL);
  #line 3235 
  memset((void *)(& phy->minlowsigpos),0,4UL);
  #line 3238 
  phy->calibrated = (unsigned char)0U;
  #line 3240 
  if (phy->_lo_pairs != (struct b43legacy_lopair *)0) 
                                                      #line 3241 
                                                      memset((void *)phy->_lo_pairs,0,168UL);
  #line 3243 
  memset((void *)(& phy->loopback_gain),0,4UL);
  #line 3244 
  return;
}

#line 3247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_wireless_core_init(struct b43legacy_wldev *dev)
{
  #line 3253 
  int err;
  #line 3254 
  u32 hf;
  #line 3255 
  u32 tmp;
  #line 3249 
  struct b43legacy_wl *wl = dev->wl;
  #line 3250 
  struct ssb_bus *bus = (dev->dev)->bus;
  #line 3251 
  struct b43legacy_phy *phy = & dev->phy;
  #line 3252 
  struct ssb_sprom *sprom = & ((dev->dev)->bus)->sprom;
  {
    #line 3257 
    int __ret_warn_on = atomic_read(& dev->__init_status) != 0;
    #line 3257 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 3258 
      ldv_inline_asm();
      #line 3259 
      ldv_inline_asm();
    }
    #line 3257 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 3259 
  err = ssb_bus_powerup(bus,(_Bool)0);
  #line 3260 
  if (err != 0) 
                #line 3261 
                goto out;
  #line 3262 
  if (ssb_device_is_enabled(dev->dev) == 0) {
    #line 3263 
    if ((int)phy->gmode != 0) 
                              #line 3263 
                              tmp = 536870912U; else 
                                                     #line 3263 
                                                     tmp = 0U;
    #line 3264 
    b43legacy_wireless_core_reset(dev,tmp);
  }
  #line 3267 
  if ((unsigned int)phy->type + 255U <= 1U) {
    #line 3269 
    phy->_lo_pairs = (struct b43legacy_lopair *)kcalloc(56UL,3UL,3264U);
    #line 3272 
    if (phy->_lo_pairs == (struct b43legacy_lopair *)0) 
                                                        #line 3273 
                                                        return -12;
  }
  #line 3275 
  setup_struct_wldev_for_init(dev);
  #line 3277 
  err = b43legacy_phy_init_tssi2dbm_table(dev);
  #line 3278 
  if (err != 0) 
                #line 3279 
                goto err_kfree_lo_control;
  #line 3282 
  ssb_pcicore_dev_irqvecs_enable(& bus->pcicore,dev->dev);
  #line 3284 
  prepare_phy_data_for_init(dev);
  #line 3285 
  b43legacy_phy_calibrate(dev);
  #line 3286 
  err = b43legacy_chip_init(dev);
  #line 3287 
  if (err != 0) 
                #line 3288 
                goto err_kfree_tssitbl;
  #line 3289 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)22,(unsigned short)((int)(dev->dev)->id.revision));
  #line 3292 
  hf = b43legacy_hf_read(dev);
  #line 3293 
  if ((unsigned int)phy->type == 2U) {
    #line 3294 
    hf |= 2U;
    #line 3295 
    if ((unsigned int)phy->rev == 1U) 
                                      #line 3296 
                                      hf |= 32U;
    #line 3297 
    if (((int)sprom->boardflags_lo & 2) != 0) 
                                              #line 3298 
                                              hf |= 64U;
  }
  else 
    #line 3299 
    if ((unsigned int)phy->type == 1U) {
      #line 3300 
      hf |= 2U;
      #line 3301 
      if ((unsigned int)phy->rev > 1U && (unsigned int)phy->radio_ver == 8272U) 
        #line 3302 
        hf &= 4294967263U;
    }
  #line 3304 
  b43legacy_hf_write(dev,hf);
  #line 3306 
  b43legacy_set_retry_limits(dev,7U,4U);
  #line 3310 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)68,(unsigned short)3);
  #line 3312 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)70,(unsigned short)2);
  #line 3319 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)116,(unsigned short)1);
  #line 3322 
  b43legacy_rate_memory_init(dev);
  #line 3325 
  if ((unsigned int)phy->type == 1U) 
                                     #line 3326 
                                     b43legacy_shm_write16(dev,(unsigned short)2,(unsigned short)3,(unsigned short)31); else 
                                                                    #line 3329 
                                                                    b43legacy_shm_write16(dev,(unsigned short)2,(unsigned short)3,(unsigned short)15);
  #line 3332 
  b43legacy_shm_write16(dev,(unsigned short)2,(unsigned short)4,(unsigned short)1023);
  #line 3335 
  while (1) {
    #line 3336 
    if (b43legacy_using_pio(dev) != 0) 
                                       #line 3337 
                                       err = b43legacy_pio_init(dev);
    else {
      #line 3339 
      err = b43legacy_dma_init(dev);
      #line 3340 
      if (err == 0) 
                    #line 3341 
                    b43legacy_qos_init(dev);
    }
    #line 3342 
    if (! (err == -11)) 
                        #line 3335 
                        break;
  }
  #line 3344 
  if (err != 0) 
                #line 3345 
                goto err_chip_exit;
  #line 3347 
  b43legacy_set_synth_pu_delay(dev,(_Bool)1);
  #line 3349 
  ssb_bus_powerup(bus,(_Bool)1);
  #line 3350 
  b43legacy_upload_card_macaddress(dev);
  #line 3351 
  b43legacy_security_init(dev);
  #line 3352 
  b43legacy_rng_init(wl);
  #line 3354 
  ieee80211_wake_queues((dev->wl)->hw);
  #line 3355 
  atomic_set(& dev->__init_status,1);
  #line 3356 
  ldv_inline_asm();
  #line 3357 
  b43legacy_leds_init(dev);
  #line 3358 
  out: 
       #line 3358 
  ;
  #line 3359 
  return err;
  #line 3361 
  err_chip_exit: 
                 #line 3361 
  ;
  #line 3362 
  b43legacy_chip_exit(dev);
  #line 3363 
  err_kfree_tssitbl: 
                     #line 3363 
  ;
  #line 3364 
  if ((int)phy->dyn_tssi_tbl != 0) 
                                   #line 3365 
                                   kfree((void *)phy->tssi2dbm);
  #line 3366 
  err_kfree_lo_control: 
                        #line 3366 
  ;
  #line 3367 
  kfree((void *)phy->lo_control);
  #line 3368 
  phy->lo_control = (struct b43legacy_txpower_lo_control *)0;
  #line 3369 
  ssb_bus_may_powerdown(bus);
  {
    #line 3370 
    int __ret_warn_on_0 = atomic_read(& dev->__init_status) != 0;
    #line 3370 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 3371 
      ldv_inline_asm();
      #line 3372 
      ldv_inline_asm();
    }
    #line 3370 
    long tmp_5 = (long)(__ret_warn_on_0 != 0);
  }
  #line 3371 
  return err;
}

#line 3374  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_add_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 3378 
  struct b43legacy_wldev *dev;
  #line 3379 
  unsigned long flags;
  #line 3377 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 3380 
  int err = -95;
  #line 3385 
  if (((unsigned int)vif->type + 4294967294U > 1U && vif->type != (unsigned int)NL80211_IFTYPE_WDS) && vif->type != (unsigned int)NL80211_IFTYPE_ADHOC) 
    #line 3388 
    return -95;
  #line 3390 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3391 
  if ((int)wl->operating != 0) 
                               #line 3392 
                               goto out_mutex_unlock;
  #line 3394 
  b43legacydbg(wl,(char *)"Adding Interface type %d\n",(unsigned int)vif->type);
  #line 3396 
  dev = wl->current_dev;
  #line 3397 
  wl->operating = (_Bool)1;
  #line 3398 
  wl->vif = vif;
  #line 3399 
  wl->if_type = (int)vif->type;
  #line 3400 
  memcpy((void *)(& wl->mac_addr),(void *)(& vif->addr),6UL);
  #line 3402 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 3403 
  b43legacy_adjust_opmode(dev);
  #line 3404 
  b43legacy_set_pretbtt(dev);
  #line 3405 
  b43legacy_set_synth_pu_delay(dev,(_Bool)0);
  #line 3406 
  b43legacy_upload_card_macaddress(dev);
  #line 3407 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 3409 
  err = 0;
  #line 3410 
  out_mutex_unlock: 
                    #line 3410 
  ;
  #line 3411 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3413 
  return err;
}

#line 3416  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_op_remove_interface(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
{
  #line 3421 
  unsigned long flags;
  #line 3419 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 3420 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 3423 
  b43legacydbg(wl,(char *)"Removing Interface type %d\n",(unsigned int)vif->type);
  #line 3425 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  {
    #line 3427 
    int __ret_warn_on = ! wl->operating;
    #line 3427 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 3428 
      ldv_inline_asm();
      #line 3429 
      ldv_inline_asm();
    }
    #line 3427 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  {
    #line 3428 
    int __ret_warn_on_0 = wl->vif != vif;
    #line 3428 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 3429 
      ldv_inline_asm();
      #line 3430 
      ldv_inline_asm();
    }
    #line 3428 
    long tmp_4 = (long)(__ret_warn_on_0 != 0);
  }
  #line 3429 
  wl->vif = (struct ieee80211_vif *)0;
  #line 3431 
  wl->operating = (_Bool)0;
  #line 3433 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 3434 
  b43legacy_adjust_opmode(dev);
  #line 3435 
  eth_zero_addr((u8 *)(& wl->mac_addr));
  #line 3436 
  b43legacy_upload_card_macaddress(dev);
  #line 3437 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 3439 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3440 
  return;
}

#line 3442  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_start(struct ieee80211_hw *hw)
{
  #line 3444 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 3445 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 3446 
  int did_init = 0;
  #line 3447 
  int err = 0;
  #line 3452 
  eth_zero_addr((u8 *)(& wl->bssid));
  #line 3453 
  eth_zero_addr((u8 *)(& wl->mac_addr));
  #line 3454 
  wl->filter_flags = 0U;
  #line 3455 
  wl->beacon0_uploaded = (_Bool)0;
  #line 3456 
  wl->beacon1_uploaded = (_Bool)0;
  #line 3457 
  wl->beacon_templates_virgin = (_Bool)1;
  #line 3458 
  wl->radio_enabled = (_Bool)1;
  #line 3460 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3462 
  if (atomic_read(& dev->__init_status) <= 0) {
    #line 3463 
    err = b43legacy_wireless_core_init(dev);
    #line 3464 
    if (err != 0) 
                  #line 3465 
                  goto out_mutex_unlock;
    #line 3466 
    did_init = 1;
  }
  #line 3469 
  if (atomic_read(& dev->__init_status) <= 1) {
    #line 3470 
    err = b43legacy_wireless_core_start(dev);
    #line 3471 
    if (err != 0) {
      #line 3472 
      if (did_init != 0) 
                         #line 3473 
                         b43legacy_wireless_core_exit(dev);
      #line 3474 
      goto out_mutex_unlock;
    }
  }
  #line 3478 
  wiphy_rfkill_start_polling(hw->wiphy);
  #line 3480 
  out_mutex_unlock: 
                    #line 3480 
  ;
  #line 3481 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3483 
  return err;
}

#line 3486  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_op_stop(struct ieee80211_hw *hw)
{
  #line 3488 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 3489 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 3491 
  cancel_work_sync(& wl->beacon_update_trigger);
  #line 3493 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3494 
  if (atomic_read(& dev->__init_status) > 1) 
                                             #line 3495 
                                             b43legacy_wireless_core_stop(dev);
  #line 3496 
  b43legacy_wireless_core_exit(dev);
  #line 3497 
  wl->radio_enabled = (_Bool)0;
  #line 3498 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3499 
  return;
}

#line 3501  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_beacon_set_tim(struct ieee80211_hw *hw, struct ieee80211_sta *sta, bool set)
{
  #line 3505 
  unsigned long flags;
  #line 3504 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 3507 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(& wl->irq_lock);
  #line 3508 
  b43legacy_update_templates(wl);
  #line 3509 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(& wl->irq_lock,flags);
  #line 3511 
  return 0;
}

#line 3514  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_op_get_survey(struct ieee80211_hw *hw, int idx, struct survey_info *survey)
{
  #line 3517 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 3518 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 3519 
  struct ieee80211_conf *conf = & hw->conf;
  #line 3521 
  if (idx != 0) 
                #line 3522 
                return -2;
  #line 3524 
  survey->channel = conf->chandef.chan;
  #line 3525 
  survey->filled = 1U;
  #line 3526 
  survey->noise = (signed char)dev->stats.link_noise;
  #line 3528 
  return 0;
}

#line 3531  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ieee80211_ops b43legacy_hw_ops = {.tx = & b43legacy_op_tx, .start = & b43legacy_op_start, .stop = & b43legacy_op_stop, .add_interface = & b43legacy_op_add_interface, .remove_interface = & b43legacy_op_remove_interface, .config = & b43legacy_op_dev_config, .bss_info_changed = & b43legacy_op_bss_info_changed, .configure_filter = & b43legacy_op_configure_filter, .set_tim = & b43legacy_op_beacon_set_tim, .get_stats = & b43legacy_op_get_stats, .conf_tx = & b43legacy_op_conf_tx, .get_survey = & b43legacy_op_get_survey, .rfkill_poll = & b43legacy_rfkill_poll};
#line 3550  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_chip_reset(struct work_struct *work)
{
  #line 3553 
  void *__mptr;
  #line 3556 
  int prev_status;
  #line 3553 
  __mptr = (void *)work;
  #line 3552 
  struct b43legacy_wldev *dev = ((struct b43legacy_wldev *)(__mptr + 18446744073709547872U));
  #line 3554 
  struct b43legacy_wl *wl = dev->wl;
  #line 3555 
  int err = 0;
  #line 3558 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3560 
  prev_status = atomic_read(& dev->__init_status);
  #line 3562 
  if (prev_status > 1) 
                       #line 3563 
                       b43legacy_wireless_core_stop(dev);
  #line 3564 
  if (prev_status > 0) 
                       #line 3565 
                       b43legacy_wireless_core_exit(dev);
  #line 3568 
  if (prev_status > 0) {
    #line 3569 
    err = b43legacy_wireless_core_init(dev);
    #line 3570 
    if (err != 0) 
                  #line 3571 
                  goto out;
  }
  #line 3573 
  if (prev_status > 1) {
    #line 3574 
    err = b43legacy_wireless_core_start(dev);
    #line 3575 
    if (err != 0) {
      #line 3576 
      b43legacy_wireless_core_exit(dev);
      #line 3577 
      goto out;
    }
  }
  #line 3580 
  out: 
       #line 3580 
  ;
  #line 3581 
  if (err != 0) 
                #line 3582 
                wl->current_dev = (struct b43legacy_wldev *)0;
  #line 3583 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3584 
  if (err != 0) 
                #line 3585 
                b43legacyerr(wl,(char *)"Controller restart FAILED\n"); else 
                                                                    #line 3587 
                                                                    b43legacyinfo(wl,(char *)"Controller restarted\n");
  #line 3588 
  return;
}

#line 3590  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_setup_modes(struct b43legacy_wldev *dev, int have_bphy, int have_gphy)
{
  #line 3594 
  struct ieee80211_hw *hw = (dev->wl)->hw;
  #line 3595 
  struct b43legacy_phy *phy = & dev->phy;
  #line 3597 
  phy->possible_phymodes = (unsigned char)0U;
  #line 3598 
  if (have_bphy != 0) {
    #line 3599 
    (hw->wiphy)->bands[0] = & b43legacy_band_2GHz_BPHY;
    #line 3601 
    phy->possible_phymodes = (unsigned char)((unsigned int)phy->possible_phymodes | 2U);
  }
  #line 3604 
  if (have_gphy != 0) {
    #line 3605 
    (hw->wiphy)->bands[0] = & b43legacy_band_2GHz_GPHY;
    #line 3607 
    phy->possible_phymodes = (unsigned char)((unsigned int)phy->possible_phymodes | 4U);
  }
  #line 3610 
  return 0;
}

#line 3613  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_wireless_core_detach(struct b43legacy_wldev *dev)
{
  #line 3617 
  b43legacy_release_firmware(dev);
  #line 3618 
  return;
}

#line 3620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_wireless_core_attach(struct b43legacy_wldev *dev)
{
  #line 3624 
  struct pci_dev *tmp;
  #line 3625 
  int err;
  #line 3628 
  u32 tmp_0;
  #line 3622 
  struct b43legacy_wl *wl = dev->wl;
  #line 3623 
  struct ssb_bus *bus = (dev->dev)->bus;
  #line 3624 
  if (bus->bustype == (unsigned int)SSB_BUSTYPE_PCI) 
                                                     #line 3624 
                                                     tmp = bus->__anonCompField_ssb_bus_173.host_pci; else 
                                                                    #line 3624 
                                                                    tmp = (struct pci_dev *)0;
  #line 3624 
  struct pci_dev *pdev = tmp;
  #line 3626 
  int have_bphy = 0;
  #line 3627 
  int have_gphy = 0;
  #line 3637 
  err = ssb_bus_powerup(bus,(_Bool)0);
  #line 3638 
  if (err != 0) {
    #line 3639 
    b43legacyerr(wl,(char *)"Bus powerup failed\n");
    #line 3640 
    goto out;
  }
  #line 3643 
  if ((unsigned int)(dev->dev)->id.revision > 4U) {
    #line 3644 
    u32 tmshigh;
    #line 3646 
    tmshigh = ssb_read32(dev->dev,(unsigned short)3996);
    #line 3647 
    have_gphy = (tmshigh & 65536U) != 0U;
    #line 3648 
    if (have_gphy == 0) 
                        #line 3649 
                        have_bphy = 1;
  }
  else 
    #line 3650 
    if ((unsigned int)(dev->dev)->id.revision == 4U) 
                                                     #line 3651 
                                                     have_gphy = 1; else 
                                                                    #line 3653 
                                                                    have_bphy = 1;
  #line 3655 
  dev->phy.gmode = (_Bool)((have_gphy != 0 || have_bphy != 0) != 0);
  #line 3656 
  dev->phy.radio_on = (_Bool)1;
  #line 3657 
  if ((int)dev->phy.gmode != 0) 
                                #line 3657 
                                tmp_0 = 536870912U; else 
                                                         #line 3657 
                                                         tmp_0 = 0U;
  #line 3658 
  b43legacy_wireless_core_reset(dev,tmp_0);
  #line 3660 
  err = b43legacy_phy_versioning(dev);
  #line 3661 
  if (err != 0) 
                #line 3662 
                goto err_powerdown;
  #line 3664 
  if (pdev == (struct pci_dev *)0 || ((unsigned int)pdev->device != 17170U && (unsigned int)pdev->device != 17177U) && (unsigned int)pdev->device != 17188U) {
    #line 3669 
    have_bphy = 0;
    #line 3670 
    have_gphy = 0;
    #line 3671 
    switch ((int)dev->phy.type) {
      #line 3672 
      case 1: 
              #line 3672 
      ;
      #line 3673 
      have_bphy = 1;
      #line 3674 
      break;
      #line 3675 
      case 2: 
              #line 3675 
      ;
      #line 3676 
      have_gphy = 1;
      #line 3677 
      break;
      #line 3678 
      default: 
               #line 3678 
      ;
      #line 3679 
      printk((char *)"\001",(char *)"1");
      #line 3680 
      ldv_inline_asm();
      #line 3681 
      ldv_inline_asm();
      #line 3682 
      ldv_inline_asm();
      #line 3679 
      ;
    }
  }
  #line 3682 
  dev->phy.gmode = (_Bool)((have_gphy != 0 || have_bphy != 0) != 0);
  #line 3683 
  if ((int)dev->phy.gmode != 0) 
                                #line 3683 
                                tmp_0 = 536870912U; else 
                                                         #line 3683 
                                                         tmp_0 = 0U;
  #line 3684 
  b43legacy_wireless_core_reset(dev,tmp_0);
  #line 3686 
  err = b43legacy_validate_chipaccess(dev);
  #line 3687 
  if (err != 0) 
                #line 3688 
                goto err_powerdown;
  #line 3689 
  err = b43legacy_setup_modes(dev,have_bphy,have_gphy);
  #line 3690 
  if (err != 0) 
                #line 3691 
                goto err_powerdown;
  #line 3694 
  if (wl->current_dev == (struct b43legacy_wldev *)0) 
                                                      #line 3695 
                                                      wl->current_dev = dev;
  {
    #line 3696 
    struct lock_class_key __key;
    #line 3696 
    __init_work(& dev->restart_work,0);
    #line 3696 
    atomic_long_t __constr_expr_42 = {.counter = 137438953408LL};
    #line 3696 
    dev->restart_work.data = __constr_expr_42;
    #line 3696 
    lockdep_init_map(& dev->restart_work.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 3696 
    INIT_LIST_HEAD(& dev->restart_work.entry);
    #line 3696 
    dev->restart_work.func = & b43legacy_chip_reset;
  }
  #line 3698 
  b43legacy_radio_turn_off(dev,(_Bool)1);
  #line 3699 
  b43legacy_switch_analog(dev,0);
  #line 3700 
  ssb_device_disable(dev->dev,0U);
  #line 3701 
  ssb_bus_may_powerdown(bus);
  #line 3703 
  out: 
       #line 3703 
  ;
  #line 3704 
  return err;
  #line 3706 
  err_powerdown: 
                 #line 3706 
  ;
  #line 3707 
  ssb_bus_may_powerdown(bus);
  #line 3708 
  return err;
}

#line 3711  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_one_core_detach(struct ssb_device *dev)
{
  #line 3713 
  struct b43legacy_wldev *wldev;
  #line 3714 
  struct b43legacy_wl *wl;
  #line 3719 
  wldev = (struct b43legacy_wldev *)ssb_get_drvdata(dev);
  #line 3720 
  wl = wldev->wl;
  #line 3721 
  b43legacy_debugfs_remove_device(wldev);
  #line 3722 
  b43legacy_wireless_core_detach(wldev);
  #line 3723 
  list_del(& wldev->list);
  #line 3724 
  wl->nr_devs = (u8)((int)wl->nr_devs - 1);
  #line 3725 
  ssb_set_drvdata(dev,(void *)0);
  #line 3726 
  kfree((void *)wldev);
  #line 3727 
  return;
}

#line 3729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_one_core_attach(struct ssb_device *dev, struct b43legacy_wl *wl)
{
  #line 3732 
  struct b43legacy_wldev *wldev;
  #line 3733 
  int err = -12;
  #line 3735 
  wldev = (struct b43legacy_wldev *)kzalloc(4928UL,3264U);
  #line 3736 
  if (wldev == (struct b43legacy_wldev *)0) 
                                            #line 3737 
                                            goto out;
  #line 3739 
  wldev->dev = dev;
  #line 3740 
  wldev->wl = wl;
  #line 3741 
  atomic_set(& wldev->__init_status,0);
  #line 3742 
  ldv_inline_asm();
  #line 3742 
  wldev->bad_frames_preempt = (_Bool)(modparam_bad_frames_preempt != 0);
  #line 3743 
  cif_tasklet_init(& wldev->isr_tasklet,(void (*)(unsigned long ))(& b43legacy_interrupt_tasklet),(unsigned long)wldev);
  #line 3746 
  if (modparam_pio != 0) 
                         #line 3747 
                         wldev->__using_pio = (_Bool)1;
  #line 3748 
  INIT_LIST_HEAD(& wldev->list);
  #line 3750 
  err = b43legacy_wireless_core_attach(wldev);
  #line 3751 
  if (err != 0) 
                #line 3752 
                goto err_kfree_wldev;
  #line 3754 
  list_add(& wldev->list,& wl->devlist);
  #line 3755 
  wl->nr_devs = (u8)((int)wl->nr_devs + 1);
  #line 3756 
  ssb_set_drvdata(dev,(void *)wldev);
  #line 3757 
  b43legacy_debugfs_add_device(wldev);
  #line 3758 
  out: 
       #line 3758 
  ;
  #line 3759 
  return err;
  #line 3761 
  err_kfree_wldev: 
                   #line 3761 
  ;
  #line 3762 
  kfree((void *)wldev);
  #line 3763 
  return err;
}

#line 3766  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_sprom_fixup(struct ssb_bus *bus)
{
  #line 3769 
  if (((unsigned int)bus->boardinfo.vendor == 4203U && (unsigned int)bus->boardinfo.type == 78U) && (unsigned int)bus->sprom.board_rev > 64U) 
    #line 3772 
    bus->sprom.boardflags_lo = (unsigned short)((unsigned int)bus->sprom.boardflags_lo | 2U);
  #line 3773 
  return;
}

#line 3775  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_wireless_exit(struct ssb_device *dev, struct b43legacy_wl *wl)
{
  #line 3778 
  struct ieee80211_hw *hw = wl->hw;
  #line 3780 
  ssb_set_devtypedata(dev,(void *)0);
  #line 3781 
  cif_ieee80211_free_hw(hw);
  #line 3782 
  return;
}

#line 3784  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_wireless_init(struct ssb_device *dev)
{
  #line 3787 
  struct ieee80211_hw *hw;
  #line 3788 
  struct b43legacy_wl *wl;
  #line 3790 
  int queue_num;
  #line 3786 
  struct ssb_sprom *sprom = & (dev->bus)->sprom;
  #line 3789 
  int err = -12;
  #line 3792 
  b43legacy_sprom_fixup(dev->bus);
  #line 3794 
  hw = cif_ieee80211_alloc_hw(1312UL,& b43legacy_hw_ops);
  #line 3795 
  if (hw == (struct ieee80211_hw *)0) {
    #line 3796 
    b43legacyerr((struct b43legacy_wl *)0,(char *)"Could not allocate ieee80211 device\n");
    #line 3797 
    goto out;
  }
  #line 3801 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_RX_INCLUDES_FCS);
  #line 3802 
  _ieee80211_hw_set(hw,(enum ieee80211_hw_flags)IEEE80211_HW_SIGNAL_DBM);
  #line 3804 
  (hw->wiphy)->interface_modes = (unsigned short)46U;
  #line 3811 
  hw->queues = (unsigned short)1U;
  #line 3812 
  hw->max_rates = (unsigned char)2U;
  #line 3813 
  SET_IEEE80211_DEV(hw,dev->dev);
  #line 3814 
  if ((int)is_valid_ether_addr((u8 *)(& sprom->et1mac)) != 0) 
                                                              #line 3815 
                                                              SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& sprom->et1mac)); else 
                                                                    #line 3817 
                                                                    SET_IEEE80211_PERM_ADDR(hw,(u8 *)(& sprom->il0mac));
  #line 3819 
  wiphy_ext_feature_set(hw->wiphy,(enum nl80211_ext_feature_index)NL80211_EXT_FEATURE_CQM_RSSI_LIST);
  #line 3822 
  wl = hw_to_b43legacy_wl(hw);
  #line 3823 
  memset((void *)wl,0,1312UL);
  #line 3824 
  wl->hw = hw;
  #line 3825 
  spinlock_check(& wl->irq_lock);
  {
    #line 3825 
    struct lock_class_key __key;
    #line 3825 
    __raw_spin_lock_init(& wl->irq_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&wl->irq_lock)->rlock",& __key);
  }
  #line 3826 
  spinlock_check(& wl->leds_lock);
  {
    #line 3826 
    struct lock_class_key __key_0;
    #line 3826 
    __raw_spin_lock_init(& wl->leds_lock.__anonCompField_spinlock_25.rlock,(char *)"&(&wl->leds_lock)->rlock",& __key_0);
  }
  {
    #line 3827 
    struct lock_class_key __key_1;
    #line 3827 
    __mutex_init(& wl->mutex,(char *)"&wl->mutex",& __key_1);
  }
  #line 3828 
  INIT_LIST_HEAD(& wl->devlist);
  {
    #line 3829 
    struct lock_class_key __key_2;
    #line 3829 
    __init_work(& wl->beacon_update_trigger,0);
    #line 3829 
    atomic_long_t __constr_expr_43 = {.counter = 137438953408LL};
    #line 3829 
    wl->beacon_update_trigger.data = __constr_expr_43;
    #line 3829 
    lockdep_init_map(& wl->beacon_update_trigger.lockdep_map,(char *)"(work_completion)",& __key_2,0);
    #line 3829 
    INIT_LIST_HEAD(& wl->beacon_update_trigger.entry);
    #line 3829 
    wl->beacon_update_trigger.func = & b43legacy_beacon_update_trigger_work;
  }
  {
    #line 3830 
    struct lock_class_key __key_3;
    #line 3830 
    __init_work(& wl->tx_work,0);
    #line 3830 
    atomic_long_t __constr_expr_44 = {.counter = 137438953408LL};
    #line 3830 
    wl->tx_work.data = __constr_expr_44;
    #line 3830 
    lockdep_init_map(& wl->tx_work.lockdep_map,(char *)"(work_completion)",& __key_3,0);
    #line 3830 
    INIT_LIST_HEAD(& wl->tx_work.entry);
    #line 3830 
    wl->tx_work.func = & b43legacy_tx_work;
  }
  #line 3833 
  queue_num = 0;
  #line 3833 
  while (queue_num <= 3) {
    #line 3834 
    skb_queue_head_init(& wl->tx_queue[queue_num]);
    #line 3835 
    wl->tx_queue_stopped[queue_num] = (_Bool)0;
    #line 3833 
    queue_num ++;
  }
  #line 3838 
  ssb_set_devtypedata(dev,(void *)wl);
  #line 3839 
  b43legacyinfo(wl,(char *)"Broadcom %04X WLAN found (core revision %u)\n",(int)(dev->bus)->chip_id,(int)dev->id.revision);
  #line 3841 
  err = 0;
  #line 3842 
  out: 
       #line 3842 
  ;
  #line 3843 
  return err;
}

#line 3846  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_probe(struct ssb_device *dev, struct ssb_device_id *id)
{
  #line 3849 
  struct b43legacy_wl *wl;
  #line 3850 
  int err;
  #line 3851 
  int first = 0;
  #line 3853 
  wl = (struct b43legacy_wl *)ssb_get_devtypedata(dev);
  #line 3854 
  if (wl == (struct b43legacy_wl *)0) {
    #line 3856 
    first = 1;
    #line 3857 
    err = b43legacy_wireless_init(dev);
    #line 3858 
    if (err != 0) 
                  #line 3859 
                  goto out;
    #line 3860 
    wl = (struct b43legacy_wl *)ssb_get_devtypedata(dev);
    {
      #line 3861 
      int __ret_warn_on = wl == (struct b43legacy_wl *)0;
      #line 3861 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 3862 
        ldv_inline_asm();
        #line 3863 
        ldv_inline_asm();
      }
      #line 3861 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
  }
  #line 3863 
  err = b43legacy_one_core_attach(dev,wl);
  #line 3864 
  if (err != 0) 
                #line 3865 
                goto err_wireless_exit;
  {
    #line 3868 
    struct lock_class_key __key;
    #line 3868 
    __init_work(& wl->firmware_load,0);
    #line 3868 
    atomic_long_t __constr_expr_45 = {.counter = 137438953408LL};
    #line 3868 
    wl->firmware_load.data = __constr_expr_45;
    #line 3868 
    lockdep_init_map(& wl->firmware_load.lockdep_map,(char *)"(work_completion)",& __key,0);
    #line 3868 
    INIT_LIST_HEAD(& wl->firmware_load.entry);
    #line 3868 
    wl->firmware_load.func = & b43legacy_request_firmware;
  }
  #line 3869 
  cif_schedule_work(& wl->firmware_load);
  #line 3871 
  out: 
       #line 3871 
  ;
  #line 3872 
  return err;
  #line 3874 
  err_wireless_exit: 
                     #line 3874 
  ;
  #line 3875 
  if (first != 0) 
                  #line 3876 
                  b43legacy_wireless_exit(dev,wl);
  #line 3877 
  return err;
}

#line 3880  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_remove(struct ssb_device *dev)
{
  #line 3882 
  struct b43legacy_wl *wl = ssb_get_devtypedata(dev);
  #line 3883 
  struct b43legacy_wldev *wldev = ssb_get_drvdata(dev);
  #line 3887 
  cancel_work_sync(& wldev->restart_work);
  #line 3888 
  cancel_work_sync(& wl->firmware_load);
  #line 3889 
  complete(& wldev->fw_load_complete);
  {
    #line 3891 
    int __ret_warn_on = wl == (struct b43legacy_wl *)0;
    #line 3891 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 3892 
      ldv_inline_asm();
      #line 3893 
      ldv_inline_asm();
    }
    #line 3891 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 3892 
  if (wldev->fw.ucode == (struct firmware *)0) 
                                               #line 3893 
                                               return;
  #line 3894 
  if (wl->current_dev == wldev) 
                                #line 3895 
                                ieee80211_unregister_hw(wl->hw);
  #line 3897 
  b43legacy_one_core_detach(dev);
  #line 3899 
  if (list_empty(& wl->devlist) != 0) 
                                      #line 3903 
                                      b43legacy_wireless_exit(dev,wl);
  #line 3904 
  return;
}

#line 3907  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
void b43legacy_controller_restart(struct b43legacy_wldev *dev, char *reason)
{
  #line 3911 
  if (atomic_read(& dev->__init_status) <= 0) 
                                              #line 3912 
                                              return;
  #line 3913 
  b43legacyinfo(dev->wl,(char *)"Controller RESET (%s) ...\n",reason);
  #line 3914 
  ieee80211_queue_work((dev->wl)->hw,& dev->restart_work);
  #line 3915 
  return;
}

#line 3919  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_suspend(struct ssb_device *dev, pm_message_t state)
{
  #line 3921 
  struct b43legacy_wldev *wldev = ssb_get_drvdata(dev);
  #line 3922 
  struct b43legacy_wl *wl = wldev->wl;
  #line 3924 
  b43legacydbg(wl,(char *)"Suspending...\n");
  #line 3926 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3927 
  wldev->suspend_init_status = atomic_read(& wldev->__init_status);
  #line 3928 
  if (wldev->suspend_init_status > 1) 
                                      #line 3929 
                                      b43legacy_wireless_core_stop(wldev);
  #line 3930 
  if (wldev->suspend_init_status > 0) 
                                      #line 3931 
                                      b43legacy_wireless_core_exit(wldev);
  #line 3932 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3934 
  b43legacydbg(wl,(char *)"Device suspended.\n");
  #line 3936 
  return 0;
}

#line 3939  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_resume(struct ssb_device *dev)
{
  #line 3941 
  struct b43legacy_wldev *wldev = ssb_get_drvdata(dev);
  #line 3942 
  struct b43legacy_wl *wl = wldev->wl;
  #line 3943 
  int err = 0;
  #line 3945 
  b43legacydbg(wl,(char *)"Resuming...\n");
  #line 3947 
  cif_mutex_lock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3948 
  if (wldev->suspend_init_status > 0) {
    #line 3949 
    err = b43legacy_wireless_core_init(wldev);
    #line 3950 
    if (err != 0) {
      #line 3951 
      b43legacyerr(wl,(char *)"Resume failed at core init\n");
      #line 3952 
      goto out;
    }
  }
  #line 3955 
  if (wldev->suspend_init_status > 1) {
    #line 3956 
    err = b43legacy_wireless_core_start(wldev);
    #line 3957 
    if (err != 0) {
      #line 3958 
      b43legacy_wireless_core_exit(wldev);
      #line 3959 
      b43legacyerr(wl,(char *)"Resume failed at core start\n");
      #line 3960 
      goto out;
    }
  }
  #line 3964 
  b43legacydbg(wl,(char *)"Device resumed.\n");
  #line 3965 
  out: 
       #line 3965 
  ;
  #line 3966 
  cif_mutex_unlock_mutex_of_b43legacy_wl(& wl->mutex);
  #line 3967 
  return err;
}

#line 3975  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static struct ssb_driver b43legacy_ssb_driver = {.name = (char *)"b43legacy", .id_table = (struct ssb_device_id *)(& b43legacy_ssb_tbl), .probe = & b43legacy_probe, .remove = & b43legacy_remove, .suspend = & b43legacy_suspend, .resume = & b43legacy_resume};
#line 3984  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_print_driverinfo(void)
{
  #line 3986 
  char *feat_pci = (char *)"";
  #line 3986 
  char *feat_leds = (char *)"";
  #line 3987 
  char *feat_pio = (char *)"";
  #line 3987 
  char *feat_dma = (char *)"";
  #line 3990 
  feat_pci = (char *)"P";
  #line 3993 
  feat_leds = (char *)"L";
  #line 3996 
  feat_pio = (char *)"I";
  #line 3999 
  feat_dma = (char *)"D";
  #line 4001 
  printk((char *)"\001",feat_pci,feat_leds,feat_pio,feat_dma);
  #line 4002 
  return;
}

#line 4006  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static int b43legacy_init(void)
{
  #line 4008 
  int err;
  #line 4010 
  b43legacy_debugfs_init();
  #line 4012 
  err = __ssb_driver_register(& b43legacy_ssb_driver,& __this_module);
  #line 4013 
  if (err != 0) 
                #line 4014 
                goto err_dfs_exit;
  #line 4016 
  b43legacy_print_driverinfo();
  #line 4018 
  return err;
  #line 4020 
  err_dfs_exit: 
                #line 4020 
  ;
  #line 4021 
  b43legacy_debugfs_exit();
  #line 4022 
  return err;
}

#line 4025  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.c"
static void b43legacy_exit(void)
{
  #line 4027 
  ssb_driver_unregister(& b43legacy_ssb_driver);
  #line 4028 
  b43legacy_debugfs_exit();
  #line 4029 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
struct ieee80211_ops *emg_alias_b43legacy_hw_ops = & b43legacy_hw_ops;
#line 101 
#line 101 
void *emg_free_irq(unsigned int arg0, void *arg1);
#line 102 
#line 102 
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1);
#line 103 
#line 103 
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0);
#line 104 
#line 104 
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);
#line 105 
#line 105 
_Bool emg_schedule_work(struct work_struct *arg0);
#line 106 
#line 106 
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);
#line 107 
#line 107 
void emg_tasklet_schedule(struct tasklet_struct *arg0);
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_b43legacy_exit(void)
{
  #line 112 
  b43legacy_exit();
  #line 113 
  return;
}

#line 115  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_b43legacy_init(void)
{
  #line 116 
  return b43legacy_init();
}

#line 119  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
enum irqreturn emg_wrapper_b43legacy_interrupt_handler(int arg0, void *arg1)
{
  #line 120 
  return b43legacy_interrupt_handler(arg0,arg1);
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_add_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 125 
  return b43legacy_op_add_interface(arg0,arg1);
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_beacon_set_tim(struct ieee80211_hw *arg0, struct ieee80211_sta *arg1, _Bool arg2)
{
  #line 130 
  return b43legacy_op_beacon_set_tim(arg0,arg1,(_Bool)((bool)((int)arg2) != 0));
}

#line 134  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_b43legacy_op_bss_info_changed(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, struct ieee80211_bss_conf *arg2, unsigned int arg3)
{
  #line 135 
  b43legacy_op_bss_info_changed(arg0,arg1,arg2,arg3);
  #line 136 
  return;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_conf_tx(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1, unsigned short arg2, struct ieee80211_tx_queue_params *arg3)
{
  #line 140 
  return b43legacy_op_conf_tx(arg0,arg1,(unsigned short)((int)arg2),arg3);
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_b43legacy_op_configure_filter(struct ieee80211_hw *arg0, unsigned int arg1, unsigned int *arg2, unsigned long long arg3)
{
  #line 145 
  b43legacy_op_configure_filter(arg0,arg1,arg2,arg3);
  #line 146 
  return;
}

#line 149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_dev_config(struct ieee80211_hw *arg0, unsigned int arg1)
{
  #line 150 
  return b43legacy_op_dev_config(arg0,arg1);
}

#line 154  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_get_stats(struct ieee80211_hw *arg0, struct ieee80211_low_level_stats *arg1)
{
  #line 155 
  return b43legacy_op_get_stats(arg0,arg1);
}

#line 159  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_get_survey(struct ieee80211_hw *arg0, int arg1, struct survey_info *arg2)
{
  #line 160 
  return b43legacy_op_get_survey(arg0,arg1,arg2);
}

#line 164  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_b43legacy_op_remove_interface(struct ieee80211_hw *arg0, struct ieee80211_vif *arg1)
{
  #line 165 
  b43legacy_op_remove_interface(arg0,arg1);
  #line 166 
  return;
}

#line 169  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
int emg_wrapper_b43legacy_op_start(struct ieee80211_hw *arg0)
{
  #line 170 
  return b43legacy_op_start(arg0);
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_b43legacy_op_stop(struct ieee80211_hw *arg0)
{
  #line 175 
  b43legacy_op_stop(arg0);
  #line 176 
  return;
}

#line 179  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
void emg_wrapper_b43legacy_op_tx(struct ieee80211_hw *arg0, struct ieee80211_tx_control *arg1, struct sk_buff *arg2)
{
  #line 180 
  b43legacy_op_tx(arg0,arg1,arg2);
  #line 181 
  return;
}

#line 213  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void INIT_LIST_HEAD(struct list_head *list)
{
  #line 216 
  ldv_init_list_head(list);
  #line 217 
  return;
}

#line 464  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  #line 467 
  return ldv_kmalloc(size,flags);
}

#line 478  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 481 
  return ldv_kcalloc(n,size,flags);
}

#line 499  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  #line 502 
  return ldv_kzalloc(size,flags);
}

#line 743  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static bool cif_schedule_work(struct work_struct *work)
{
  #line 747 
  return emg_schedule_work(work);
}

#line 885  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_mutex_lock_mutex_of_b43legacy_wl(struct mutex *lock)
{
  #line 888 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 889 
  return;
}

#line 892  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_irq_irq_lock_of_b43legacy_wl(spinlock_t *lock)
{
  #line 895 
  ldv_spin_model_lock((char *)"irq_lock_of_b43legacy_wl");
  #line 897 
  spin_lock_irq(lock);
  #line 898 
  return;
}

#line 901  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irq_irq_lock_of_b43legacy_wl(spinlock_t *lock)
{
  #line 904 
  ldv_spin_model_unlock((char *)"irq_lock_of_b43legacy_wl");
  #line 906 
  spin_unlock_irq(lock);
  #line 907 
  return;
}

#line 910  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl(struct mutex *lock)
{
  #line 913 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 914 
  return;
}

#line 917  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif___ldv_spin_lock_irq_lock_of_b43legacy_wl(spinlock_t *lock)
{
  #line 920 
  ldv_spin_model_lock((char *)"irq_lock_of_b43legacy_wl");
  #line 922 
  __ldv_spin_lock(lock);
  #line 923 
  return;
}

#line 926  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl(spinlock_t *lock, unsigned long flags)
{
  #line 929 
  ldv_spin_model_unlock((char *)"irq_lock_of_b43legacy_wl");
  #line 931 
  spin_unlock_irqrestore(lock,flags);
  #line 932 
  return;
}

#line 935  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_lock_irq_lock_of_b43legacy_wl(spinlock_t *lock)
{
  #line 938 
  ldv_spin_model_lock((char *)"irq_lock_of_b43legacy_wl");
  #line 940 
  spin_lock(lock);
  #line 941 
  return;
}

#line 944  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_tasklet_schedule(struct tasklet_struct *t)
{
  #line 948 
  emg_tasklet_schedule(t);
  #line 949 
  return;
}

#line 952  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_spin_unlock_irq_lock_of_b43legacy_wl(spinlock_t *lock)
{
  #line 955 
  ldv_spin_model_unlock((char *)"irq_lock_of_b43legacy_wl");
  #line 957 
  spin_unlock(lock);
  #line 958 
  return;
}

#line 961  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_release_firmware(struct firmware *fw)
{
  #line 964 
  ldv_release_firmware(fw);
  #line 965 
  return;
}

#line 968  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static int cif_request_firmware(struct firmware **fw, char *name, struct device *device)
{
  #line 971 
  return ldv_request_firmware(fw);
}

#line 975  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void *cif_free_irq(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  #line 979 
  return emg_free_irq(ldv_func_arg1,ldv_func_arg2);
}

#line 983  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static int cif_request_irq(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char *name, void *dev)
{
  #line 987 
  return emg_request_irq(irq,handler,flags,name,dev);
}

#line 991  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_tasklet_init(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data)
{
  #line 995 
  emg_tasklet_init(t,func,data);
  #line 996 
  return;
}

#line 999  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static void cif_ieee80211_free_hw(struct ieee80211_hw *hw)
{
  #line 1003 
  emg_ieee80211_free_hw(hw);
  #line 1004 
  return;
}

#line 1007  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/main.i.aux"
static struct ieee80211_hw *cif_ieee80211_alloc_hw(size_t priv_data_len, struct ieee80211_ops *ops)
{
  #line 1011 
  return emg_ieee80211_alloc_hw(priv_data_len,ops);
}

#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/string.h"
#line 29 
size_t strlcpy(char *, char *, size_t);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/leds.i.aux"
static void cif_spin_unlock_irqrestore_leds_lock_of_b43legacy_wl(spinlock_t *lock, unsigned long flags);
#line 35 
#line 807 
static void cif___ldv_spin_lock_leds_lock_of_b43legacy_wl(spinlock_t *lock);
#line 4162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
#line 4162 
char *__ieee80211_get_tx_led_name(struct ieee80211_hw *);
#line 4163 
#line 4163 
char *__ieee80211_get_rx_led_name(struct ieee80211_hw *);
#line 4164 
#line 4164 
char *__ieee80211_get_assoc_led_name(struct ieee80211_hw *);
#line 4165 
#line 4165 
char *__ieee80211_get_radio_led_name(struct ieee80211_hw *);
#line 4184  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_tx_led_name(struct ieee80211_hw *hw)
{
  #line 4187 
  return __ieee80211_get_tx_led_name(hw);
}

#line 4205  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_rx_led_name(struct ieee80211_hw *hw)
{
  #line 4208 
  return __ieee80211_get_rx_led_name(hw);
}

#line 4226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_assoc_led_name(struct ieee80211_hw *hw)
{
  #line 4229 
  return __ieee80211_get_assoc_led_name(hw);
}

#line 4247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static char *ieee80211_get_radio_led_name(struct ieee80211_hw *hw)
{
  #line 4250 
  return __ieee80211_get_radio_led_name(hw);
}

#line 164  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
#line 164 
int led_classdev_register_ext(struct device *, struct led_classdev *, struct led_init_data *);
#line 178  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/leds.h"
__inline static int led_classdev_register(struct device *parent, struct led_classdev *led_cdev)
{
  #line 181 
  return led_classdev_register_ext(parent,led_cdev,(struct led_init_data *)0);
}

#line 193 
#line 193 
void led_classdev_unregister(struct led_classdev *);
#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/rfkill.h"
#line 10 
bool b43legacy_is_hw_radio_enabled(struct b43legacy_wldev *dev);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
static void b43legacy_led_turn_on(struct b43legacy_wldev *dev, u8 led_index, bool activelow)
{
  #line 25 
  unsigned long flags;
  #line 26 
  u16 ctl;
  #line 24 
  struct b43legacy_wl *wl = dev->wl;
  #line 28 
  cif___ldv_spin_lock_leds_lock_of_b43legacy_wl(& wl->leds_lock);
  #line 29 
  ctl = b43legacy_read16(dev,(unsigned short)1180);
  #line 30 
  if ((int)activelow != 0) 
                           #line 31 
                           ctl = (unsigned short)(~ (1 << (int)led_index) & (int)ctl); else 
                                                                    #line 33 
                                                                    ctl = (unsigned short)((1 << (int)led_index) | (int)ctl);
  #line 34 
  b43legacy_write16(dev,(unsigned short)1180,(unsigned short)((int)ctl));
  #line 35 
  cif_spin_unlock_irqrestore_leds_lock_of_b43legacy_wl(& wl->leds_lock,flags);
  #line 36 
  return;
}

#line 38  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
static void b43legacy_led_turn_off(struct b43legacy_wldev *dev, u8 led_index, bool activelow)
{
  #line 42 
  unsigned long flags;
  #line 43 
  u16 ctl;
  #line 41 
  struct b43legacy_wl *wl = dev->wl;
  #line 45 
  cif___ldv_spin_lock_leds_lock_of_b43legacy_wl(& wl->leds_lock);
  #line 46 
  ctl = b43legacy_read16(dev,(unsigned short)1180);
  #line 47 
  if ((int)activelow != 0) 
                           #line 48 
                           ctl = (unsigned short)((1 << (int)led_index) | (int)ctl); else 
                                                                    #line 50 
                                                                    ctl = (unsigned short)(~ (1 << (int)led_index) & (int)ctl);
  #line 51 
  b43legacy_write16(dev,(unsigned short)1180,(unsigned short)((int)ctl));
  #line 52 
  cif_spin_unlock_irqrestore_leds_lock_of_b43legacy_wl(& wl->leds_lock,flags);
  #line 53 
  return;
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
static void b43legacy_led_brightness_set(struct led_classdev *led_dev, enum led_brightness brightness)
{
  #line 59 
  void *__mptr;
  #line 62 
  bool radio_enabled;
  #line 59 
  __mptr = (void *)led_dev;
  #line 59 
  struct b43legacy_led *led = ((struct b43legacy_led *)(__mptr + 18446744073709551608U));
  #line 61 
  struct b43legacy_wldev *dev = led->dev;
  #line 67 
  radio_enabled = (_Bool)(((int)dev->phy.radio_on != 0 && (int)dev->radio_hw_enable != 0) != 0);
  #line 69 
  if (brightness == (unsigned int)LED_OFF || ! radio_enabled) 
                                                              #line 70 
                                                              b43legacy_led_turn_off(dev,(unsigned char)((int)led->index),(_Bool)((bool)((int)led->activelow) != 0)); else 
                                                                    #line 72 
                                                                    b43legacy_led_turn_on(dev,(unsigned char)((int)led->index),(_Bool)((bool)((int)led->activelow) != 0));
  #line 73 
  return;
}

#line 75  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
static int b43legacy_register_led(struct b43legacy_wldev *dev, struct b43legacy_led *led, char *name, char *default_trigger, u8 led_index, bool activelow)
{
  #line 81 
  int err;
  #line 83 
  b43legacy_led_turn_off(dev,(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
  #line 84 
  if (led->dev != (struct b43legacy_wldev *)0) 
                                               #line 85 
                                               return -17;
  #line 86 
  if (default_trigger == (char *)0) 
                                    #line 87 
                                    return -22;
  #line 88 
  led->dev = dev;
  #line 89 
  led->index = led_index;
  #line 90 
  led->activelow = activelow;
  #line 91 
  strlcpy((char *)(& led->name),name,32UL);
  #line 93 
  led->led_dev.name = (char *)(& led->name);
  #line 94 
  led->led_dev.default_trigger = default_trigger;
  #line 95 
  led->led_dev.brightness_set = & b43legacy_led_brightness_set;
  #line 97 
  err = led_classdev_register((dev->dev)->dev,& led->led_dev);
  #line 98 
  if (err != 0) {
    #line 99 
    b43legacywarn(dev->wl,(char *)"LEDs: Failed to register %s\n",name);
    #line 100 
    led->dev = (struct b43legacy_wldev *)0;
    #line 101 
    return err;
  }
  #line 103 
  return 0;
}

#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
static void b43legacy_unregister_led(struct b43legacy_led *led)
{
  #line 108 
  if (led->dev == (struct b43legacy_wldev *)0) 
                                               #line 109 
                                               return;
  #line 110 
  led_classdev_unregister(& led->led_dev);
  #line 111 
  b43legacy_led_turn_off(led->dev,(unsigned char)((int)led->index),(_Bool)((bool)((int)led->activelow) != 0));
  #line 112 
  led->dev = (struct b43legacy_wldev *)0;
  #line 113 
  return;
}

#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
static void b43legacy_map_led(struct b43legacy_wldev *dev, u8 led_index, enum b43legacy_led_behaviour behaviour, bool activelow)
{
  #line 121 
  char name[32U];
  #line 120 
  struct ieee80211_hw *hw = (dev->wl)->hw;
  #line 125 
  switch ((unsigned int)behaviour) {
    #line 126 
    case (unsigned int)11: 
                           #line 126 
    ;
    #line 127 
    break;
    #line 128 
    case (unsigned int)0: 
                          #line 128 
    ;
    #line 129 
    b43legacy_led_turn_off(dev,(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    #line 130 
    break;
    #line 131 
    case (unsigned int)1: 
                          #line 131 
    ;
    #line 132 
    b43legacy_led_turn_on(dev,(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    #line 133 
    break;
    #line 134 
    case (unsigned int)2: 
                          #line 134 
    ;
    #line 135 
    case (unsigned int)7: 
                          #line 135 
    ;
    #line 136 
    case (unsigned int)8: 
                          #line 136 
    ;
    #line 137 
    snprintf((char *)(& name),32UL,(char *)"b43legacy-%s::tx",wiphy_name(hw->wiphy));
    #line 139 
    ;
    #line 139 
    ;
    #line 139 
    ;
    #line 139 
    ;
    #line 139 
    b43legacy_register_led(dev,& dev->led_tx,(char *)(& name),ieee80211_get_tx_led_name(hw),(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    #line 142 
    snprintf((char *)(& name),32UL,(char *)"b43legacy-%s::rx",wiphy_name(hw->wiphy));
    #line 144 
    ;
    #line 144 
    ;
    #line 144 
    ;
    #line 144 
    ;
    #line 144 
    b43legacy_register_led(dev,& dev->led_rx,(char *)(& name),ieee80211_get_rx_led_name(hw),(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    #line 147 
    break;
    #line 148 
    case (unsigned int)3: 
                          #line 148 
    ;
    #line 149 
    case (unsigned int)4: 
                          #line 149 
    ;
    #line 150 
    case (unsigned int)5: 
                          #line 150 
    ;
    #line 151 
    case (unsigned int)6: 
                          #line 151 
    ;
    #line 152 
    snprintf((char *)(& name),32UL,(char *)"b43legacy-%s::radio",wiphy_name(hw->wiphy));
    #line 154 
    ;
    #line 154 
    ;
    #line 154 
    ;
    #line 154 
    ;
    #line 154 
    b43legacy_register_led(dev,& dev->led_radio,(char *)(& name),ieee80211_get_radio_led_name(hw),(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    #line 158 
    if ((int)dev->phy.radio_on != 0) {
      #line 158 
      if ((int)b43legacy_is_hw_radio_enabled(dev) != 0) 
                                                        #line 159 
                                                        b43legacy_led_turn_on(dev,(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    }
    #line 160 
    break;
    #line 161 
    case (unsigned int)9: 
                          #line 161 
    ;
    #line 162 
    case (unsigned int)10: 
                           #line 162 
    ;
    #line 163 
    snprintf((char *)(& name),32UL,(char *)"b43legacy-%s::assoc",wiphy_name(hw->wiphy));
    #line 165 
    ;
    #line 165 
    ;
    #line 165 
    ;
    #line 165 
    ;
    #line 165 
    b43legacy_register_led(dev,& dev->led_assoc,(char *)(& name),ieee80211_get_assoc_led_name(hw),(unsigned char)((int)led_index),(_Bool)((bool)((int)activelow) != 0));
    #line 168 
    break;
    #line 169 
    default: 
             #line 169 
    ;
    #line 170 
    b43legacywarn(dev->wl,(char *)"LEDs: Unknown behaviour 0x%02X\n",(unsigned int)behaviour);
    #line 172 
    break;
  }
  #line 174 
  return;
}

#line 176  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
void b43legacy_leds_init(struct b43legacy_wldev *dev)
{
  #line 179 
  u8 sprom[4U];
  #line 180 
  int i;
  #line 181 
  enum b43legacy_led_behaviour behaviour;
  #line 182 
  bool activelow;
  #line 178 
  struct ssb_bus *bus = (dev->dev)->bus;
  #line 184 
  sprom[0] = bus->sprom.gpio0;
  #line 185 
  sprom[1] = bus->sprom.gpio1;
  #line 186 
  sprom[2] = bus->sprom.gpio2;
  #line 187 
  sprom[3] = bus->sprom.gpio3;
  #line 189 
  i = 0;
  #line 189 
  while (i <= 3) {
    #line 190 
    if ((unsigned int)sprom[i] == 255U) {
      #line 193 
      activelow = (_Bool)0;
      #line 194 
      switch (i) {
        #line 195 
        case 0: 
                #line 195 
        ;
        #line 196 
        behaviour = B43legacy_LED_ACTIVITY;
        #line 197 
        activelow = (_Bool)1;
        #line 198 
        if ((unsigned int)bus->boardinfo.vendor == 3601U) 
                                                          #line 199 
                                                          behaviour = B43legacy_LED_RADIO_ALL;
        #line 200 
        break;
        #line 201 
        case 1: 
                #line 201 
        ;
        #line 202 
        behaviour = B43legacy_LED_RADIO_B;
        #line 203 
        if ((unsigned int)bus->boardinfo.vendor == 4163U) 
                                                          #line 204 
                                                          behaviour = B43legacy_LED_ASSOC;
        #line 205 
        break;
        #line 206 
        case 2: 
                #line 206 
        ;
        #line 207 
        behaviour = B43legacy_LED_RADIO_A;
        #line 208 
        break;
        #line 209 
        case 3: 
                #line 209 
        ;
        #line 210 
        behaviour = B43legacy_LED_OFF;
        #line 211 
        break;
        #line 212 
        default: 
                 #line 212 
        ;
        {
          #line 213 
          int __ret_warn_on = 1;
          #line 213 
          if ((long)(__ret_warn_on != 0) != 0L) {
            #line 214 
            ldv_inline_asm();
            #line 215 
            ldv_inline_asm();
          }
          #line 213 
          long tmp = (long)(__ret_warn_on != 0);
        }
        #line 214 
        return;
      }
    }
    else {
      #line 217 
      behaviour = (enum b43legacy_led_behaviour)((int)sprom[i] & 127);
      #line 218 
      activelow = (_Bool)(((int)sprom[i] & 128) != 0);
    }
    #line 220 
    b43legacy_map_led(dev,(unsigned char)((int)((unsigned char)i)),behaviour,(_Bool)((bool)((int)activelow) != 0));
    #line 189 
    i ++;
  }
  #line 222 
  return;
}

#line 224  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/leds.c"
void b43legacy_leds_exit(struct b43legacy_wldev *dev)
{
  #line 226 
  b43legacy_unregister_led(& dev->led_tx);
  #line 227 
  b43legacy_unregister_led(& dev->led_rx);
  #line 228 
  b43legacy_unregister_led(& dev->led_assoc);
  #line 229 
  b43legacy_unregister_led(& dev->led_radio);
  #line 230 
  return;
}

#line 807  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/leds.i.aux"
static void cif___ldv_spin_lock_leds_lock_of_b43legacy_wl(spinlock_t *lock)
{
  #line 810 
  ldv_spin_model_lock((char *)"leds_lock_of_b43legacy_wl");
  #line 812 
  __ldv_spin_lock(lock);
  #line 813 
  return;
}

#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/leds.i.aux"
static void cif_spin_unlock_irqrestore_leds_lock_of_b43legacy_wl(spinlock_t *lock, unsigned long flags)
{
  #line 819 
  ldv_spin_model_unlock((char *)"leds_lock_of_b43legacy_wl");
  #line 821 
  spin_unlock_irqrestore_0(lock,flags);
  #line 822 
  return;
}

#line 460  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 460 
long simple_strtol(char *, char **, unsigned int);
#line 61  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 61 
int memcmp(void *, void *, size_t);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_0(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_2193 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_0(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_0(v);
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_1(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 856  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_0(spinlock_t *lock, unsigned long flags);
#line 26 
#line 833 
static void cif_mutex_lock_mutex_of_b43legacy_wl_0(struct mutex *lock);
#line 35 
#line 847 
static void cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_0(spinlock_t *lock);
#line 7  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.h"
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
int b43legacy_sysfs_register(struct b43legacy_wldev *wldev);
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.h"
#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
void b43legacy_sysfs_unregister(struct b43legacy_wldev *wldev);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl_0(struct mutex *lock);
#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/capability.h"
#line 210 
bool capable(int);
#line 873  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 865  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static int cif_device_create_file(struct device *device, struct device_attribute *entry);
#line 875  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 873  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_device_remove_file(struct device *dev, struct device_attribute *attr);
#line 288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
__inline static struct ssb_device *dev_to_ssb_dev(struct device *dev)
{
  #line 291 
  void *__mptr;
  #line 290 
  struct __ssb_dev_wrapper *wrap;
  #line 291 
  __mptr = (void *)dev;
  #line 291 
  wrap = ((struct __ssb_dev_wrapper *)__mptr);
  #line 292 
  return wrap->sdev;
}

#line 786  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static struct b43legacy_wldev *dev_to_b43legacy_wldev(struct device *dev)
{
  #line 788 
  struct ssb_device *ssb_dev = dev_to_ssb_dev(dev);
  #line 789 
  return (struct b43legacy_wldev *)ssb_get_drvdata(ssb_dev);
}

#line 25  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static int get_integer(char *buf, size_t count)
{
  #line 32 
  unsigned long __UNIQUE_ID___x554;
  #line 32 
  unsigned long tmp_0;
  #line 27 
  char tmp[11U] = {(char)0};
  #line 28 
  int ret = -22;
  #line 30 
  if (count == 0UL) 
                    #line 31 
                    goto out;
  {
    #line 32 
    __UNIQUE_ID___x554 = count;
    #line 32 
    unsigned long __UNIQUE_ID___y555 = 10UL;
    #line 32 
    if (__UNIQUE_ID___x554 < __UNIQUE_ID___y555) 
                                                 #line 32 
                                                 tmp_0 = __UNIQUE_ID___x554; else 
                                                                    #line 32 
                                                                    tmp_0 = __UNIQUE_ID___y555;
    }
  #line 32 
  count = tmp_0;
  #line 33 
  memcpy((void *)(& tmp),(void *)buf,count);
  #line 34 
  ret = (int)simple_strtol((char *)(& tmp),(char **)0,10U);
  #line 35 
  out: 
       #line 35 
  ;
  #line 36 
  return ret;
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static int get_boolean(char *buf, size_t count)
{
  #line 41 
  if (count != 0UL) {
    #line 42 
    if ((int)*buf == 49) 
                         #line 43 
                         return 1;
    #line 44 
    if ((int)*buf == 48) 
                         #line 45 
                         return 0;
    #line 46 
    if (count > 3UL) {
      #line 46 
      if (memcmp((void *)buf,(void *)"true",4UL) == 0) 
                                                       #line 47 
                                                       return 1;
    }
    #line 48 
    if (count > 4UL) {
      #line 48 
      if (memcmp((void *)buf,(void *)"false",5UL) == 0) 
                                                        #line 49 
                                                        return 0;
    }
    #line 50 
    if (count > 2UL) {
      #line 50 
      if (memcmp((void *)buf,(void *)"yes",3UL) == 0) 
                                                      #line 51 
                                                      return 1;
    }
    #line 52 
    if (count > 1UL) {
      #line 52 
      if (memcmp((void *)buf,(void *)"no",2UL) == 0) 
                                                     #line 53 
                                                     return 0;
    }
    #line 54 
    if (count > 1UL) {
      #line 54 
      if (memcmp((void *)buf,(void *)"on",2UL) == 0) 
                                                     #line 55 
                                                     return 1;
    }
    #line 56 
    if (count > 2UL) {
      #line 56 
      if (memcmp((void *)buf,(void *)"off",3UL) == 0) 
                                                      #line 57 
                                                      return 0;
    }
  }
  #line 59 
  return -22;
}

#line 62  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static ssize_t b43legacy_attr_interfmode_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 66 
  struct b43legacy_wldev *wldev = dev_to_b43legacy_wldev(dev);
  #line 67 
  ssize_t count = 0L;
  #line 69 
  if (! capable(12)) 
                     #line 70 
                     return -1L;
  #line 72 
  cif_mutex_lock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 74 
  switch (wldev->phy.interfmode) {
    #line 75 
    case 0: 
            #line 75 
    ;
    #line 76 
    count = (long)snprintf(buf,4096UL,(char *)"0 (No Interference");
    #line 78 
    break;
    #line 79 
    case 1: 
            #line 79 
    ;
    #line 80 
    count = (long)snprintf(buf,4096UL,(char *)"1 (Non-WLAN Interference");
    #line 82 
    break;
    #line 83 
    case 2: 
            #line 83 
    ;
    #line 84 
    count = (long)snprintf(buf,4096UL,(char *)"2 (WLAN Interference");
    #line 86 
    break;
    #line 87 
    default: 
             #line 87 
    ;
    {
      #line 88 
      int __ret_warn_on = 1;
      #line 88 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 89 
        ldv_inline_asm();
        #line 90 
        ldv_inline_asm();
      }
      #line 88 
      long tmp_4 = (long)(__ret_warn_on != 0);
    }
  }
  #line 91 
  cif_mutex_unlock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 93 
  return count;
}

#line 96  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static ssize_t b43legacy_attr_interfmode_store(struct device *dev, struct device_attribute *attr, char *buf, size_t count)
{
  #line 101 
  unsigned long flags;
  #line 102 
  int err;
  #line 103 
  int mode;
  #line 136 
  long tmp_1;
  #line 100 
  struct b43legacy_wldev *wldev = dev_to_b43legacy_wldev(dev);
  #line 105 
  if (! capable(12)) 
                     #line 106 
                     return -1L;
  #line 108 
  mode = get_integer(buf,count);
  #line 109 
  switch (mode) {
    #line 110 
    case 0: 
            #line 110 
    ;
    #line 111 
    mode = 0;
    #line 112 
    break;
    #line 113 
    case 1: 
            #line 113 
    ;
    #line 114 
    mode = 1;
    #line 115 
    break;
    #line 116 
    case 2: 
            #line 116 
    ;
    #line 117 
    mode = 2;
    #line 118 
    break;
    #line 119 
    case 3: 
            #line 119 
    ;
    #line 120 
    mode = 3;
    #line 121 
    break;
    #line 122 
    default: 
             #line 122 
    ;
    #line 123 
    return -22L;
  }
  #line 126 
  cif_mutex_lock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 127 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_0(& (wldev->wl)->irq_lock);
  #line 129 
  err = b43legacy_radio_set_interference_mitigation(wldev,mode);
  #line 130 
  if (err != 0) 
                #line 131 
                b43legacyerr(wldev->wl,(char *)"Interference Mitigation not ");
  #line 133 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_0(& (wldev->wl)->irq_lock,flags);
  #line 134 
  cif_mutex_unlock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 136 
  if (err != 0) 
                #line 136 
                tmp_1 = (long)err; else 
                                        #line 136 
                                        tmp_1 = (long)count;
  #line 136 
  return tmp_1;
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static struct device_attribute dev_attr_interference = {.attr = {.name = (char *)"interference", .mode = (unsigned short)420U}, .show = & b43legacy_attr_interfmode_show, .store = & b43legacy_attr_interfmode_store};
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static ssize_t b43legacy_attr_preamble_show(struct device *dev, struct device_attribute *attr, char *buf)
{
  #line 148 
  ssize_t count;
  #line 147 
  struct b43legacy_wldev *wldev = dev_to_b43legacy_wldev(dev);
  #line 150 
  if (! capable(12)) 
                     #line 151 
                     return -1L;
  #line 153 
  cif_mutex_lock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 155 
  if ((int)wldev->short_preamble != 0) {
    #line 156 
    count = (long)snprintf(buf,4096UL,(char *)"1 (Short Preamble");
  }
  else {
    #line 159 
    count = (long)snprintf(buf,4096UL,(char *)"0 (Short Preamble");
  }
  #line 162 
  cif_mutex_unlock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 164 
  return count;
}

#line 167  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static ssize_t b43legacy_attr_preamble_store(struct device *dev, struct device_attribute *attr, char *buf, size_t count)
{
  #line 172 
  unsigned long flags;
  #line 173 
  int value;
  #line 171 
  struct b43legacy_wldev *wldev = dev_to_b43legacy_wldev(dev);
  #line 175 
  if (! capable(12)) 
                     #line 176 
                     return -1L;
  #line 178 
  value = get_boolean(buf,count);
  #line 179 
  if (value < 0) 
                 #line 180 
                 return (long)value;
  #line 181 
  cif_mutex_lock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 182 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_0(& (wldev->wl)->irq_lock);
  #line 184 
  wldev->short_preamble = (_Bool)(value != 0);
  #line 186 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_0(& (wldev->wl)->irq_lock,flags);
  #line 187 
  cif_mutex_unlock_mutex_of_b43legacy_wl_0(& (wldev->wl)->mutex);
  #line 189 
  return (long)count;
}

#line 192  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
static struct device_attribute dev_attr_shortpreamble = {.attr = {.name = (char *)"shortpreamble", .mode = (unsigned short)420U}, .show = & b43legacy_attr_preamble_show, .store = & b43legacy_attr_preamble_store};
#line 196  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
int b43legacy_sysfs_register(struct b43legacy_wldev *wldev)
{
  #line 199 
  int err;
  #line 198 
  struct device *dev = (wldev->dev)->dev;
  {
    #line 201 
    int __ret_warn_on = atomic_read_0(& wldev->__init_status) != 1;
    #line 201 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 202 
      ldv_inline_asm();
      #line 203 
      ldv_inline_asm();
    }
    #line 201 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 204 
  err = cif_device_create_file(dev,& dev_attr_interference);
  #line 205 
  if (err != 0) 
                #line 206 
                goto out;
  #line 207 
  err = cif_device_create_file(dev,& dev_attr_shortpreamble);
  #line 208 
  if (err != 0) 
                #line 209 
                goto err_remove_interfmode;
  #line 211 
  out: 
       #line 211 
  ;
  #line 212 
  return err;
  #line 213 
  err_remove_interfmode: 
                         #line 213 
  ;
  #line 214 
  cif_device_remove_file(dev,& dev_attr_interference);
  #line 215 
  goto out;
}

#line 218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/sysfs.c"
void b43legacy_sysfs_unregister(struct b43legacy_wldev *wldev)
{
  #line 220 
  struct device *dev = (wldev->dev)->dev;
  #line 222 
  cif_device_remove_file(dev,& dev_attr_shortpreamble);
  #line 223 
  cif_device_remove_file(dev,& dev_attr_interference);
  #line 224 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
struct device_attribute *emg_alias_dev_attr_interference = & dev_attr_interference;
#line 94  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
struct device_attribute *emg_alias_dev_attr_shortpreamble = & dev_attr_shortpreamble;
#line 100 
#line 100 
int emg_device_create_file(struct device *arg0, struct device_attribute *arg1);
#line 101 
#line 101 
void emg_device_remove_file(struct device *arg0, struct device_attribute *arg1);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
long emg_wrapper_b43legacy_attr_interfmode_show(struct device *arg0, struct device_attribute *arg1, char *arg2)
{
  #line 113 
  return b43legacy_attr_interfmode_show(arg0,arg1,arg2);
}

#line 117  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
long emg_wrapper_b43legacy_attr_interfmode_store(struct device *arg0, struct device_attribute *arg1, char *arg2, unsigned long arg3)
{
  #line 118 
  return b43legacy_attr_interfmode_store(arg0,arg1,arg2,arg3);
}

#line 122  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
long emg_wrapper_b43legacy_attr_preamble_show(struct device *arg0, struct device_attribute *arg1, char *arg2)
{
  #line 123 
  return b43legacy_attr_preamble_show(arg0,arg1,arg2);
}

#line 127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
long emg_wrapper_b43legacy_attr_preamble_store(struct device *arg0, struct device_attribute *arg1, char *arg2, unsigned long arg3)
{
  #line 128 
  return b43legacy_attr_preamble_store(arg0,arg1,arg2,arg3);
}

#line 833  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_mutex_lock_mutex_of_b43legacy_wl_0(struct mutex *lock)
{
  #line 836 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 837 
  return;
}

#line 840  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl_0(struct mutex *lock)
{
  #line 843 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 844 
  return;
}

#line 847  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_0(spinlock_t *lock)
{
  #line 850 
  ldv_spin_model_lock((char *)"irq_lock_of_b43legacy_wl");
  #line 852 
  __ldv_spin_lock(lock);
  #line 853 
  return;
}

#line 856  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_0(spinlock_t *lock, unsigned long flags)
{
  #line 859 
  ldv_spin_model_unlock((char *)"irq_lock_of_b43legacy_wl");
  #line 861 
  spin_unlock_irqrestore_1(lock,flags);
  #line 862 
  return;
}

#line 865  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static int cif_device_create_file(struct device *device, struct device_attribute *entry)
{
  #line 869 
  return emg_device_create_file(device,entry);
}

#line 873  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/sysfs.i.aux"
static void cif_device_remove_file(struct device *dev, struct device_attribute *attr)
{
  #line 877 
  emg_device_remove_file(dev,attr);
  #line 878 
  return;
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/bug.h"
#line 89 
void __warn_printk(char * , ...);
#line 15  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/page_64.h"
#line 15 
extern unsigned long vmalloc_base;
#line 16 
#line 16 
extern unsigned long vmemmap_base;
#line 29 
#line 29 
unsigned long __phys_addr(unsigned long);
#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cpufeature.h"
__inline static bool _static_cpu_has(u16 bit)
{
  #line 177 
  ldv_inline_asm();
  #line 178 
  ldv_inline_asm();
  #line 211 
  t_yes: 
         #line 211 
  ;
  #line 212 
  return (_Bool)1;
  #line 213 
  t_no: 
        #line 213 
  ;
  #line 214 
  return (_Bool)0;
}

#line 81  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/jiffies.h"
#line 81 
extern unsigned long jiffies;
#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 337  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/dma.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 358  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/dma.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags);
#line 628  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mm.h"
__inline static bool is_vmalloc_addr(void *x)
{
  #line 633 
  int tmp_1;
  #line 631 
  unsigned long addr = (unsigned long)x;
  #line 633 
  if (addr >= vmalloc_base) {
    #line 633 
    unsigned long tmp_0;
    #line 633 
    if ((int)_static_cpu_has((unsigned short)528) != 0) 
                                                        #line 633 
                                                        tmp_0 = 14073748835532800UL; else 
                                                                    #line 633 
                                                                    tmp_0 = 35184372088832UL;
    #line 633 
    ;
    #line 633 
    if ((tmp_0 + vmalloc_base) + 18446744073709551615UL > addr) 
                                                                #line 633 
                                                                tmp_1 = 1; else 
                                                                    #line 633 
                                                                    tmp_1 = 0;
  }
  else 
       #line 633 
       tmp_1 = 0;
  #line 633 
  return (_Bool)(tmp_1 != 0);
}

#line 1680  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/device.h"
#line 1680 
char *dev_driver_string(struct device *);
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-debug.h"
#line 21 
void debug_dma_map_single(struct device *, void *, unsigned long);
#line 24 
#line 24 
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t);
#line 28 
#line 28 
void debug_dma_mapping_error(struct device *, dma_addr_t);
#line 30 
#line 30 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int);
#line 52 
#line 52 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);
#line 56 
#line 56 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);
#line 143  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  #line 146 
  return (unsigned int)dma_direction <= 2U;
}

#line 191  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static bool dma_is_direct(struct dma_map_ops *ops)
{
  #line 193 
  return (_Bool)((long)(ops == (struct dma_map_ops *)0) != 0L);
}

#line 200 
#line 200 
dma_addr_t dma_direct_map_page(struct device *, struct page *, unsigned long, size_t, enum dma_data_direction, unsigned long);
#line 210 
#line 210 
void dma_direct_sync_single_for_device(struct device *, dma_addr_t, size_t, enum dma_data_direction);
#line 228 
#line 228 
void dma_direct_unmap_page(struct device *, dma_addr_t, size_t, enum dma_data_direction, unsigned long);
#line 232 
#line 232 
void dma_direct_sync_single_for_cpu(struct device *, dma_addr_t, size_t, enum dma_data_direction);
#line 19  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
#line 19 
extern struct dma_map_ops *dma_ops;
#line 21  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
{
  #line 23 
  return dma_ops;
}

#line 261  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  #line 263 
  if (dev->dma_ops != (struct dma_map_ops *)0) 
                                               #line 264 
                                               return dev->dma_ops;
  #line 265 
  return get_arch_dma_ops(dev->bus);
}

#line 274  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_page_attrs(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 279 
  dma_addr_t addr;
  #line 278 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 281 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 282 
    ldv_inline_asm();
    #line 283 
    ldv_inline_asm();
    #line 284 
    ldv_inline_asm();
    #line 281 
    ;
  }
  #line 282 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 283 
                                    addr = dma_direct_map_page(dev,page,offset,size,dir,attrs); else 
                                                                    #line 285 
                                                                    addr = (*(ops->map_page))(dev,page,offset,size,dir,attrs);
  #line 286 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr);
  #line 288 
  return addr;
}

#line 291  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_unmap_page_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 294 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 296 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 297 
    ldv_inline_asm();
    #line 298 
    ldv_inline_asm();
    #line 299 
    ldv_inline_asm();
    #line 296 
    ;
  }
  #line 297 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 298 
                                    dma_direct_unmap_page(dev,addr,size,dir,attrs);
  else 
    #line 299 
    if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , unsigned long ))0) 
      #line 300 
      (*(ops->unmap_page))(dev,addr,size,dir,attrs);
  #line 301 
  debug_dma_unmap_page(dev,addr,size,(int)dir);
  #line 302 
  return;
}

#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  #line 380 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 382 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 383 
    ldv_inline_asm();
    #line 384 
    ldv_inline_asm();
    #line 385 
    ldv_inline_asm();
    #line 382 
    ;
  }
  #line 383 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 384 
                                    dma_direct_sync_single_for_cpu(dev,addr,size,dir);
  else 
    #line 385 
    if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
      #line 386 
      (*(ops->sync_single_for_cpu))(dev,addr,size,dir);
  #line 387 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  #line 388 
  return;
}

#line 390  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  #line 394 
  struct dma_map_ops *ops = get_dma_ops(dev);
  #line 396 
  if ((long)(valid_dma_direction((int)dir) == 0) != 0L) {
    #line 397 
    ldv_inline_asm();
    #line 398 
    ldv_inline_asm();
    #line 399 
    ldv_inline_asm();
    #line 396 
    ;
  }
  #line 397 
  if ((int)dma_is_direct(ops) != 0) 
                                    #line 398 
                                    dma_direct_sync_single_for_device(dev,addr,size,dir);
  else 
    #line 399 
    if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
      #line 400 
      (*(ops->sync_single_for_device))(dev,addr,size,dir);
  #line 401 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  #line 402 
  return;
}

#line 433  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  #line 435 
  debug_dma_mapping_error(dev,dma_addr);
  #line 437 
  if (dma_addr == 18446744073709551615ULL) 
                                           #line 438 
                                           return -12;
  #line 439 
  return 0;
}

#line 442 
#line 442 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, unsigned long);
#line 444 
#line 444 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, unsigned long);
#line 460 
#line 460 
int dma_set_mask(struct device *, u64);
#line 461 
#line 461 
int dma_set_coherent_mask(struct device *, u64);
#line 580  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 584 
  int __ret_warn_once;
  {
    #line 584 
    bool __warned;
    #line 584 
    __ret_warn_once = (int)is_vmalloc_addr(ptr) != 0;
    #line 584 
    if ((long)(__ret_warn_once != 0) != 0L && (long)(! __warned) != 0L) {
      #line 584 
      __warned = (_Bool)1;
      {
        #line 584 
        int __ret_warn_on = 1;
        #line 584 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 584 
          __warn_printk((char *)"%s %s: ",dev_driver_string(dev),dev_name(dev));
          #line 585 
          ldv_inline_asm();
          #line 586 
          ldv_inline_asm();
        }
        #line 584 
        long tmp_2 = (long)(__ret_warn_on != 0);
      }
    }
    }
  #line 584 
  if ((long)((long)(__ret_warn_once != 0)) != 0L) 
                                                  #line 586 
                                                  return 18446744073709551615ULL;
  #line 587 
  debug_dma_map_single(dev,ptr,size);
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  ;
  #line 588 
  return dma_map_page_attrs(dev,
                           (struct page *)((__phys_addr((unsigned long)ptr) >> 12) + vmemmap_base),
                           (unsigned long)ptr & 4095UL,size,dir,attrs);
}

#line 592  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, unsigned long attrs)
{
  #line 595 
  dma_unmap_page_attrs(dev,addr,size,dir,attrs);
  #line 596 
  return;
}

#line 641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void *dma_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t gfp)
{
  #line 645 
  return dma_alloc_attrs(dev,size,dma_handle,gfp,
                      (unsigned long)(gfp >> 5) & 256UL);
}

#line 649  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static void dma_free_coherent(struct device *dev, size_t size, void *cpu_addr, dma_addr_t dma_handle)
{
  #line 652 
  dma_free_attrs(dev,size,cpu_addr,dma_handle,0UL);
  #line 653 
  return;
}

#line 669  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  #line 671 
  int rc = dma_set_mask(dev,mask);
  #line 672 
  if (rc == 0) 
               #line 673 
               dma_set_coherent_mask(dev,mask);
  #line 674 
  return rc;
}

#line 1032  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 1032 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);
#line 1046  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  #line 1049 
  return __alloc_skb(size,priority,0,-1);
}

#line 2189 
#line 2189 
void *skb_put(struct sk_buff *, unsigned int);
#line 2230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void *skb_put_data(struct sk_buff *skb, void *data, unsigned int len)
{
  #line 2233 
  void *tmp = skb_put(skb,len);
  #line 2235 
  memcpy(tmp,data,(unsigned long)len);
  #line 2237 
  return tmp;
}

#line 2253 
#line 2253 
void *skb_pull(struct sk_buff *, unsigned int);
#line 2762 
#line 2762 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);
#line 2785  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *__dev_alloc_skb(unsigned int length, gfp_t gfp_mask)
{
  #line 2788 
  return __netdev_alloc_skb((struct net_device *)0,length,gfp_mask);
}

#line 4272  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static void skb_set_queue_mapping(struct sk_buff *skb, u16 queue_mapping)
{
  #line 4274 
  skb->queue_mapping = queue_mapping;
  #line 4275 
  return;
}

#line 4277  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff *skb)
{
  #line 4279 
  return skb->queue_mapping;
}

#line 3616  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
#line 3616 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);
#line 3638  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  #line 3640 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  #line 3641 
  return;
}

#line 620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ssb/ssb.h"
#line 620 
u32 ssb_dma_translation(struct ssb_device *);
#line 1139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static void ieee80211_tx_info_clear_status(struct ieee80211_tx_info *info)
{
  #line 1141 
  int i;
  #line 1149 
  i = 0;
  #line 1149 
  while (i <= 3) {
    #line 1150 
    info->__anonCompField_ieee80211_tx_info_206.status.rates[i].count = (unsigned short)0U;
    #line 1149 
    i ++;
  }
  #line 1154 
  memset((void *)(& info->__anonCompField_ieee80211_tx_info_206.status.ampdu_ack_len),0,24UL);
  #line 1155 
  return;
}

#line 4660 
#line 4660 
void ieee80211_tx_status_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 5170 
#line 5170 
void ieee80211_wake_queue(struct ieee80211_hw *, int);
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
__inline static u32 b43legacy_dma_read(struct b43legacy_dmaring *ring, u16 offset)
{
  #line 171 
  return b43legacy_read32(ring->dev,
                       (unsigned short)((int)ring->mmio_base + (int)offset));
}

#line 175  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
__inline static void b43legacy_dma_write(struct b43legacy_dmaring *ring, u16 offset, u32 value)
{
  #line 178 
  b43legacy_write32(ring->dev,(unsigned short)((int)ring->mmio_base + (int)offset),value);
  #line 179 
  return;
}

#line 185 
#line 1371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_tx_suspend(struct b43legacy_wldev *dev);
#line 186  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
#line 1382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_tx_resume(struct b43legacy_wldev *dev);
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.h"
#line 1122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_handle_txstatus(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status);
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
#line 82 
int b43legacy_generate_txhdr(struct b43legacy_wldev *dev, u8 *txhdr, unsigned char *fragment_data, unsigned int fragment_len, struct ieee80211_tx_info *info, u16 cookie);
#line 198 
#line 198 
void b43legacy_rx(struct b43legacy_wldev *dev, struct sk_buff *skb, void *_rxhdr);
#line 205 
#line 205 
void b43legacy_handle_hwtxstatus(struct b43legacy_wldev *dev, struct b43legacy_hwtxstatus *hw);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static struct b43legacy_dmadesc32 *op32_idx2desc(struct b43legacy_dmaring *ring, int slot, struct b43legacy_dmadesc_meta **meta)
{
  #line 36 
  struct b43legacy_dmadesc32 *desc;
  #line 38 
  *meta = ring->meta + (unsigned long)slot;
  #line 39 
  desc = (struct b43legacy_dmadesc32 *)ring->descbase;
  #line 40 
  desc += (unsigned long)slot;
  #line 42 
  return desc;
}

#line 45  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void op32_fill_descriptor(struct b43legacy_dmaring *ring, struct b43legacy_dmadesc32 *desc, dma_addr_t dmaaddr, u16 bufsize, int start, int end, int irq)
{
  #line 51 
  int slot;
  #line 52 
  u32 ctl;
  #line 53 
  u32 addr;
  #line 54 
  u32 addrext;
  #line 50 
  struct b43legacy_dmadesc32 *descbase = (struct b43legacy_dmadesc32 *)ring->descbase;
  #line 56 
  slot = (int)((desc - descbase) / 8L);
  {
    #line 57 
    int __ret_warn_on = (slot < 0 || ring->nr_slots <= slot) != 0;
    #line 57 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 58 
      ldv_inline_asm();
      #line 59 
      ldv_inline_asm();
    }
    #line 57 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 59 
  addr = (unsigned int)dmaaddr & 1073741823U;
  #line 60 
  addrext = (unsigned int)dmaaddr >> 30;
  #line 62 
  addr = (ring->dev)->__anonCompField_b43legacy_wldev_210.dma.translation | addr;
  #line 63 
  ctl = ((unsigned int)bufsize - ring->frameoffset) & 8191U;
  #line 65 
  if (ring->nr_slots + -1 == slot) 
                                   #line 66 
                                   ctl |= 268435456U;
  #line 67 
  if (start != 0) 
                  #line 68 
                  ctl |= 2147483648U;
  #line 69 
  if (end != 0) 
                #line 70 
                ctl |= 1073741824U;
  #line 71 
  if (irq != 0) 
                #line 72 
                ctl |= 536870912U;
  #line 73 
  ctl = ((addrext << 16) & 196608U) | ctl;
  #line 76 
  desc->control = ctl;
  #line 77 
  desc->address = addr;
  #line 78 
  return;
}

#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void op32_poke_tx(struct b43legacy_dmaring *ring, int slot)
{
  #line 82 
  b43legacy_dma_write(ring,(unsigned short)8,(unsigned int)((unsigned long)slot) * 8U);
  #line 84 
  return;
}

#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void op32_tx_suspend(struct b43legacy_dmaring *ring)
{
  #line 88 
  ;
  #line 88 
  b43legacy_dma_write(ring,(unsigned short)0,b43legacy_dma_read(ring,(unsigned short)0) | 2U);
  #line 91 
  return;
}

#line 93  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void op32_tx_resume(struct b43legacy_dmaring *ring)
{
  #line 95 
  ;
  #line 95 
  b43legacy_dma_write(ring,(unsigned short)0,b43legacy_dma_read(ring,(unsigned short)0) & 4294967293U);
  #line 98 
  return;
}

#line 100  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int op32_get_current_rxslot(struct b43legacy_dmaring *ring)
{
  #line 102 
  u32 val;
  #line 104 
  val = b43legacy_dma_read(ring,(unsigned short)28);
  #line 105 
  val &= 4095U;
  #line 107 
  return (int)(val / 8U);
}

#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void op32_set_current_rxslot(struct b43legacy_dmaring *ring, int slot)
{
  #line 113 
  b43legacy_dma_write(ring,(unsigned short)24,(unsigned int)((unsigned long)slot) * 8U);
  #line 115 
  return;
}

#line 117  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static int free_slots(struct b43legacy_dmaring *ring)
{
  #line 119 
  return ring->nr_slots - ring->used_slots;
}

#line 122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static int next_slot(struct b43legacy_dmaring *ring, int slot)
{
  {
    #line 124 
    int __ret_warn_on = (slot < -1 || ring->nr_slots <= slot) != 0;
    #line 124 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 125 
      ldv_inline_asm();
      #line 126 
      ldv_inline_asm();
    }
    #line 124 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 125 
  if (ring->nr_slots + -1 == slot) 
                                   #line 126 
                                   return 0;
  #line 127 
  return slot + 1;
}

#line 139  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void update_max_used_slots(struct b43legacy_dmaring *ring, int current_used_slots)
{
  #line 142 
  if (ring->max_used_slots >= current_used_slots) 
                                                  #line 143 
                                                  return;
  #line 144 
  ring->max_used_slots = current_used_slots;
  #line 145 
  if (b43legacy_debug(ring->dev,
                        (enum b43legacy_dyndbg)B43legacy_DBG_DMAVERBOSE) != 0) {
    #line 148 
    char *tmp;
    #line 146 
    ;
    #line 148 
    if ((int)ring->tx != 0) 
                            #line 148 
                            tmp = (char *)"TX"; else 
                                                     #line 148 
                                                     tmp = (char *)"RX";
    #line 146 
    ;
    #line 146 
    ;
    #line 146 
    b43legacydbg((ring->dev)->wl,(char *)"max_used_slots increased to %d on %s ring %d\n",ring->max_used_slots,tmp,ring->index);
  }
  #line 151 
  return;
}

#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static int request_slot(struct b43legacy_dmaring *ring)
{
  #line 163 
  int slot;
  {
    #line 165 
    int __ret_warn_on = ! ring->tx;
    #line 165 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 166 
      ldv_inline_asm();
      #line 167 
      ldv_inline_asm();
    }
    #line 165 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 166 
    int __ret_warn_on_0 = (int)ring->stopped != 0;
    #line 166 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 167 
      ldv_inline_asm();
      #line 168 
      ldv_inline_asm();
    }
    #line 166 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  {
    #line 167 
    int __ret_warn_on_1 = free_slots(ring) == 0;
    #line 167 
    if ((long)(__ret_warn_on_1 != 0) != 0L) {
      #line 168 
      ldv_inline_asm();
      #line 169 
      ldv_inline_asm();
    }
    #line 167 
    long tmp_5 = (long)(__ret_warn_on_1 != 0);
  }
  #line 169 
  slot = next_slot(ring,ring->current_slot);
  #line 170 
  ring->current_slot = slot;
  #line 171 
  (ring->used_slots) ++;
  #line 173 
  update_max_used_slots(ring,ring->used_slots);
  #line 175 
  return slot;
}

#line 179  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static struct b43legacy_dmaring *priority_to_txring(struct b43legacy_wldev *dev, int queue_priority)
{
  #line 183 
  struct b43legacy_dmaring *ring;
  #line 186 
  return dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring1;
  #line 189 
  switch (queue_priority) {
    #line 190 
    default: 
             #line 190 
    ;
    {
      #line 191 
      int __ret_warn_on = 1;
      #line 191 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 192 
        ldv_inline_asm();
        #line 193 
        ldv_inline_asm();
      }
      #line 191 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 193 
    case 0: 
            #line 193 
    ;
    #line 194 
    ring = dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring3;
    #line 195 
    break;
    #line 196 
    case 1: 
            #line 196 
    ;
    #line 197 
    ring = dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring2;
    #line 198 
    break;
    #line 199 
    case 2: 
            #line 199 
    ;
    #line 200 
    ring = dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring1;
    #line 201 
    break;
    #line 202 
    case 3: 
            #line 202 
    ;
    #line 203 
    ring = dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring0;
    #line 204 
    break;
    #line 205 
    case 4: 
            #line 205 
    ;
    #line 206 
    ring = dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring4;
    #line 207 
    break;
    #line 208 
    case 5: 
            #line 208 
    ;
    #line 209 
    ring = dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring5;
    #line 210 
    break;
  }
  #line 213 
  return ring;
}

#line 229  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static u16 b43legacy_dmacontroller_base(enum b43legacy_dmatype type, int controller_idx)
{
  #line 232 
  u16 map32[6U] = {(unsigned short)512U, (unsigned short)544U, (unsigned short)576U, (unsigned short)608U, (unsigned short)640U, (unsigned short)672U};
  {
    #line 241 
    int __ret_warn_on = (unsigned int)controller_idx > 5U;
    #line 241 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 242 
      ldv_inline_asm();
      #line 243 
      ldv_inline_asm();
    }
    #line 241 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 243 
  return map32[controller_idx];
}

#line 247  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static dma_addr_t map_descbuffer(struct b43legacy_dmaring *ring, unsigned char *buf, size_t len, int tx)
{
  #line 252 
  dma_addr_t dmaaddr;
  #line 254 
  if (tx != 0) 
               #line 255 
               dmaaddr = dma_map_single_attrs(((ring->dev)->dev)->dma_dev,(void *)buf,len,(enum dma_data_direction)DMA_TO_DEVICE,0UL); else 
                                                                    #line 259 
                                                                    dmaaddr = dma_map_single_attrs(((ring->dev)->dev)->dma_dev,(void *)buf,len,(enum dma_data_direction)DMA_FROM_DEVICE,0UL);
  #line 263 
  return dmaaddr;
}

#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static void unmap_descbuffer(struct b43legacy_dmaring *ring, dma_addr_t addr, size_t len, int tx)
{
  #line 272 
  if (tx != 0) 
               #line 273 
               dma_unmap_single_attrs(((ring->dev)->dev)->dma_dev,addr,len,(enum dma_data_direction)DMA_TO_DEVICE,0UL); else 
                                                                    #line 277 
                                                                    dma_unmap_single_attrs(((ring->dev)->dev)->dma_dev,addr,len,(enum dma_data_direction)DMA_FROM_DEVICE,0UL);
  #line 278 
  return;
}

#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static void sync_descbuffer_for_cpu(struct b43legacy_dmaring *ring, dma_addr_t addr, size_t len)
{
  {
    #line 287 
    int __ret_warn_on = (int)ring->tx != 0;
    #line 287 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 288 
      ldv_inline_asm();
      #line 289 
      ldv_inline_asm();
    }
    #line 287 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 289 
  dma_sync_single_for_cpu(((ring->dev)->dev)->dma_dev,addr,len,(enum dma_data_direction)DMA_FROM_DEVICE);
  #line 290 
  return;
}

#line 294  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static void sync_descbuffer_for_device(struct b43legacy_dmaring *ring, dma_addr_t addr, size_t len)
{
  {
    #line 298 
    int __ret_warn_on = (int)ring->tx != 0;
    #line 298 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 299 
      ldv_inline_asm();
      #line 300 
      ldv_inline_asm();
    }
    #line 298 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 300 
  dma_sync_single_for_device(((ring->dev)->dev)->dma_dev,addr,len,(enum dma_data_direction)DMA_FROM_DEVICE);
  #line 301 
  return;
}

#line 305  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static void free_descriptor_buffer(struct b43legacy_dmaring *ring, struct b43legacy_dmadesc_meta *meta, int irq_context)
{
  #line 309 
  if (meta->skb != (struct sk_buff *)0) {
    #line 310 
    if (irq_context != 0) 
                          #line 311 
                          dev_kfree_skb_irq(meta->skb); else 
                                                             #line 313 
                                                             consume_skb(meta->skb);
    #line 314 
    meta->skb = (struct sk_buff *)0;
  }
  #line 316 
  return;
}

#line 318  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int alloc_ringmemory(struct b43legacy_dmaring *ring)
{
  #line 321 
  ring->descbase = dma_alloc_coherent(((ring->dev)->dev)->dma_dev,4096UL,& ring->dmabase,3264U);
  #line 324 
  if (ring->descbase == (void *)0) 
                                   #line 325 
                                   return -12;
  #line 327 
  return 0;
}

#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void free_ringmemory(struct b43legacy_dmaring *ring)
{
  #line 332 
  dma_free_coherent(((ring->dev)->dev)->dma_dev,4096UL,ring->descbase,ring->dmabase);
  #line 334 
  return;
}

#line 337  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int b43legacy_dmacontroller_rx_reset(struct b43legacy_wldev *dev, u16 mmio_base, enum b43legacy_dmatype type)
{
  #line 341 
  int i;
  #line 342 
  u32 value;
  #line 343 
  u16 offset;
  #line 345 
  __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c",345,0);
  #line 347 
  offset = (unsigned short)16U;
  #line 348 
  b43legacy_write32(dev,(unsigned short)((int)mmio_base + (int)offset),0U);
  #line 349 
  i = 0;
  #line 349 
  while (i <= 9) {
    #line 350 
    offset = (unsigned short)28U;
    #line 351 
    value = b43legacy_read32(dev,(unsigned short)((int)mmio_base + (int)offset));
    #line 352 
    value &= 61440U;
    #line 353 
    if (value == 0U) {
      #line 354 
      i = -1;
      #line 355 
      break;
    }
    #line 357 
    msleep(1U);
    #line 349 
    i ++;
  }
  #line 359 
  if (i != -1) {
    #line 360 
    b43legacyerr(dev->wl,(char *)"DMA RX reset timed out\n");
    #line 361 
    return -19;
  }
  #line 364 
  return 0;
}

#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int b43legacy_dmacontroller_tx_reset(struct b43legacy_wldev *dev, u16 mmio_base, enum b43legacy_dmatype type)
{
  #line 372 
  int i;
  #line 373 
  u32 value;
  #line 374 
  u16 offset;
  #line 376 
  __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c",376,0);
  #line 378 
  i = 0;
  #line 378 
  while (i <= 9) {
    #line 379 
    offset = (unsigned short)12U;
    #line 380 
    value = b43legacy_read32(dev,(unsigned short)((int)mmio_base + (int)offset));
    #line 381 
    value &= 61440U;
    #line 382 
    if ((value == 0U || value == 8192U) || value == 12288U) 
                                                            #line 385 
                                                            break;
    #line 386 
    msleep(1U);
    #line 378 
    i ++;
  }
  #line 388 
  offset = (unsigned short)0U;
  #line 389 
  b43legacy_write32(dev,(unsigned short)((int)mmio_base + (int)offset),0U);
  #line 390 
  i = 0;
  #line 390 
  while (i <= 9) {
    #line 391 
    offset = (unsigned short)12U;
    #line 392 
    value = b43legacy_read32(dev,(unsigned short)((int)mmio_base + (int)offset));
    #line 393 
    value &= 61440U;
    #line 394 
    if (value == 0U) {
      #line 395 
      i = -1;
      #line 396 
      break;
    }
    #line 398 
    msleep(1U);
    #line 390 
    i ++;
  }
  #line 400 
  if (i != -1) {
    #line 401 
    b43legacyerr(dev->wl,(char *)"DMA TX reset timed out\n");
    #line 402 
    return -19;
  }
  #line 405 
  msleep(1U);
  #line 407 
  return 0;
}

#line 411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static bool b43legacy_dma_mapping_error(struct b43legacy_dmaring *ring, dma_addr_t addr, size_t buffersize, bool dma_to_device)
{
  #line 416 
  if ((long)(dma_mapping_error(((ring->dev)->dev)->dma_dev,addr) != 0) != 0L) 
    #line 417 
    return (_Bool)1;
  #line 419 
  switch ((unsigned int)ring->type) {
    #line 420 
    case (unsigned int)30: 
                           #line 420 
    ;
    #line 421 
    if (addr + (unsigned long long)buffersize > 1073741824ULL) 
                                                               #line 422 
                                                               goto address_error;
    #line 423 
    break;
    #line 424 
    case (unsigned int)32: 
                           #line 424 
    ;
    #line 425 
    if (addr + (unsigned long long)buffersize > 4294967296ULL) 
                                                               #line 426 
                                                               goto address_error;
    #line 427 
    break;
  }
  #line 431 
  return (_Bool)0;
  #line 433 
  address_error: 
                 #line 433 
  ;
  #line 435 
  unmap_descbuffer(ring,addr,buffersize,(int)dma_to_device);
  #line 437 
  return (_Bool)1;
}

#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int setup_rx_descbuffer(struct b43legacy_dmaring *ring, struct b43legacy_dmadesc32 *desc, struct b43legacy_dmadesc_meta *meta, gfp_t gfp_flags)
{
  #line 445 
  struct b43legacy_rxhdr_fw3 *rxhdr;
  #line 446 
  struct b43legacy_hwtxstatus *txstat;
  #line 447 
  dma_addr_t dmaaddr;
  #line 448 
  struct sk_buff *skb;
  {
    #line 450 
    int __ret_warn_on = (int)ring->tx != 0;
    #line 450 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 451 
      ldv_inline_asm();
      #line 452 
      ldv_inline_asm();
    }
    #line 450 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 452 
  skb = __dev_alloc_skb((unsigned int)ring->rx_buffersize,gfp_flags);
  #line 453 
  if ((long)(skb == (struct sk_buff *)0) != 0L) 
                                                #line 454 
                                                return -12;
  #line 455 
  dmaaddr = map_descbuffer(ring,skb->data,(unsigned long)ring->rx_buffersize,0);
  #line 457 
  if ((int)b43legacy_dma_mapping_error(ring,dmaaddr,
                                    (unsigned long)ring->rx_buffersize,
                                    (_Bool)0) != 0) {
    #line 459 
    gfp_flags |= 1U;
    #line 461 
    dev_kfree_skb_any(skb);
    #line 463 
    skb = __dev_alloc_skb((unsigned int)ring->rx_buffersize,gfp_flags);
    #line 464 
    if ((long)(skb == (struct sk_buff *)0) != 0L) 
                                                  #line 465 
                                                  return -12;
    #line 466 
    dmaaddr = map_descbuffer(ring,skb->data,(unsigned long)ring->rx_buffersize,0);
  }
  #line 470 
  if ((int)b43legacy_dma_mapping_error(ring,dmaaddr,
                                      (unsigned long)ring->rx_buffersize,
                                      (_Bool)0) != 0) {
    #line 471 
    dev_kfree_skb_any(skb);
    #line 472 
    return -5;
  }
  #line 475 
  meta->skb = skb;
  #line 476 
  meta->dmaaddr = dmaaddr;
  #line 477 
  op32_fill_descriptor(ring,desc,dmaaddr,(unsigned short)((int)ring->rx_buffersize),0,0,0);
  #line 479 
  rxhdr = (struct b43legacy_rxhdr_fw3 *)skb->data;
  #line 480 
  rxhdr->frame_len = (unsigned short)0U;
  #line 481 
  txstat = (struct b43legacy_hwtxstatus *)skb->data;
  #line 482 
  txstat->cookie = (unsigned short)0U;
  #line 484 
  return 0;
}

#line 490  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int alloc_initial_descbuffers(struct b43legacy_dmaring *ring)
{
  #line 492 
  int i;
  #line 494 
  struct b43legacy_dmadesc32 *desc;
  #line 495 
  struct b43legacy_dmadesc_meta *meta;
  #line 493 
  int err = -12;
  #line 497 
  i = 0;
  #line 497 
  while (ring->nr_slots > i) {
    #line 498 
    desc = op32_idx2desc(ring,i,& meta);
    #line 500 
    err = setup_rx_descbuffer(ring,desc,meta,3264U);
    #line 501 
    if (err != 0) {
      #line 502 
      b43legacyerr((ring->dev)->wl,(char *)"Failed to allocate initial descbuffers\n");
      #line 504 
      goto err_unwind;
    }
    #line 497 
    i ++;
  }
  #line 507 
  ldv_inline_asm();
  #line 508 
  ring->used_slots = ring->nr_slots;
  #line 509 
  err = 0;
  #line 510 
  out: 
       #line 510 
  ;
  #line 511 
  return err;
  #line 513 
  err_unwind: 
              #line 513 
  ;
  #line 514 
  i --;
  #line 514 
  while (i >= 0) {
    #line 515 
    desc = op32_idx2desc(ring,i,& meta);
    #line 517 
    unmap_descbuffer(ring,meta->dmaaddr,(unsigned long)ring->rx_buffersize,0);
    #line 518 
    consume_skb(meta->skb);
    #line 514 
    i --;
  }
  #line 520 
  goto out;
}

#line 527  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int dmacontroller_setup(struct b43legacy_dmaring *ring)
{
  #line 530 
  u32 value;
  #line 531 
  u32 addrext;
  #line 529 
  int err = 0;
  #line 532 
  u32 trans = (ring->dev)->__anonCompField_b43legacy_wldev_210.dma.translation;
  #line 533 
  u32 ringbase = (unsigned int)ring->dmabase;
  #line 535 
  if ((int)ring->tx != 0) {
    #line 536 
    addrext = ringbase >> 30;
    #line 538 
    value = 1U;
    #line 539 
    value = ((addrext << 16) & 196608U) | value;
    #line 541 
    b43legacy_dma_write(ring,(unsigned short)0,value);
    #line 542 
    b43legacy_dma_write(ring,(unsigned short)4,(ringbase & 1073741823U) | trans);
  }
  else {
    #line 546 
    err = alloc_initial_descbuffers(ring);
    #line 547 
    if (err != 0) 
                  #line 548 
                  goto out;
    #line 550 
    addrext = ringbase >> 30;
    #line 552 
    value = ring->frameoffset << 1;
    #line 554 
    value |= 1U;
    #line 555 
    value = ((addrext << 16) & 196608U) | value;
    #line 557 
    b43legacy_dma_write(ring,(unsigned short)16,value);
    #line 558 
    b43legacy_dma_write(ring,(unsigned short)20,(ringbase & 1073741823U) | trans);
    #line 561 
    b43legacy_dma_write(ring,(unsigned short)24,200U);
  }
  #line 564 
  out: 
       #line 564 
  ;
  #line 565 
  return err;
}

#line 569  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void dmacontroller_cleanup(struct b43legacy_dmaring *ring)
{
  #line 571 
  if ((int)ring->tx != 0) {
    #line 572 
    b43legacy_dmacontroller_tx_reset(ring->dev,(unsigned short)((int)ring->mmio_base),ring->type);
    #line 574 
    b43legacy_dma_write(ring,(unsigned short)4,0U);
  }
  else {
    #line 576 
    b43legacy_dmacontroller_rx_reset(ring->dev,(unsigned short)((int)ring->mmio_base),ring->type);
    #line 578 
    b43legacy_dma_write(ring,(unsigned short)20,0U);
  }
  #line 580 
  return;
}

#line 582  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void free_all_descbuffers(struct b43legacy_dmaring *ring)
{
  #line 584 
  struct b43legacy_dmadesc_meta *meta;
  #line 585 
  int i;
  #line 587 
  if (ring->used_slots == 0) 
                             #line 588 
                             return;
  #line 589 
  i = 0;
  #line 589 
  while (ring->nr_slots > i) {
    #line 590 
    op32_idx2desc(ring,i,& meta);
    #line 592 
    if (meta->skb == (struct sk_buff *)0) {
      {
        #line 593 
        int __ret_warn_on = ! ring->tx;
        #line 593 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 594 
          ldv_inline_asm();
          #line 595 
          ldv_inline_asm();
        }
        #line 593 
        long tmp = (long)(__ret_warn_on != 0);
      }
      #line 594 
      goto __Cont;
    }
    #line 596 
    if ((int)ring->tx != 0) 
                            #line 597 
                            unmap_descbuffer(ring,meta->dmaaddr,(unsigned long)(meta->skb)->len,1); else 
                                                                    #line 600 
                                                                    unmap_descbuffer(ring,meta->dmaaddr,(unsigned long)ring->rx_buffersize,0);
    #line 602 
    free_descriptor_buffer(ring,meta,0);
    #line 589 
    __Cont: 
            #line 589 
    i ++;
  }
  #line 604 
  return;
}

#line 606  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static enum b43legacy_dmatype b43legacy_engine_type(struct b43legacy_wldev *dev)
{
  #line 608 
  u32 tmp;
  #line 609 
  u16 mmio_base;
  #line 611 
  mmio_base = b43legacy_dmacontroller_base((enum b43legacy_dmatype)0,0);
  #line 612 
  b43legacy_write32(dev,(unsigned short)((int)mmio_base),196608U);
  #line 615 
  tmp = b43legacy_read32(dev,(unsigned short)((int)mmio_base));
  #line 617 
  if ((tmp & 196608U) != 0U) 
                             #line 618 
                             return B43legacy_DMA_32BIT;
  #line 619 
  return B43legacy_DMA_30BIT;
}

#line 624  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static struct b43legacy_dmaring *b43legacy_setup_dmaring(struct b43legacy_wldev *dev, int controller_index, int for_tx, enum b43legacy_dmatype type)
{
  #line 629 
  struct b43legacy_dmaring *ring;
  #line 630 
  int err;
  #line 631 
  int nr_slots;
  #line 632 
  dma_addr_t dma_test;
  #line 634 
  ring = (struct b43legacy_dmaring *)kzalloc_0(96UL,3264U);
  #line 635 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 636 
                                             goto out;
  #line 637 
  ring->type = type;
  #line 638 
  ring->dev = dev;
  #line 640 
  nr_slots = 64;
  #line 641 
  if (for_tx != 0) 
                   #line 642 
                   nr_slots = 128;
  #line 644 
  ring->meta = (struct b43legacy_dmadesc_meta *)kcalloc_0((unsigned long)nr_slots,24UL,3264U);
  #line 646 
  if (ring->meta == (struct b43legacy_dmadesc_meta *)0) 
                                                        #line 647 
                                                        goto err_kfree_ring;
  #line 648 
  if (for_tx != 0) {
    #line 649 
    ring->txhdr_cache = (u8 *)kcalloc_0((unsigned long)nr_slots,82UL,3264U);
    #line 652 
    if (ring->txhdr_cache == (u8 *)0U) 
                                       #line 653 
                                       goto err_kfree_meta;
    #line 656 
    dma_test = dma_map_single_attrs((dev->dev)->dma_dev,(void *)ring->txhdr_cache,82UL,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
    #line 660 
    if ((int)b43legacy_dma_mapping_error(ring,dma_test,82UL,(_Bool)1) != 0) {
      #line 663 
      kfree((void *)ring->txhdr_cache);
      #line 664 
      ring->txhdr_cache = (u8 *)kcalloc_0((unsigned long)nr_slots,82UL,3265U);
      #line 667 
      if (ring->txhdr_cache == (u8 *)0U) 
                                         #line 668 
                                         goto err_kfree_meta;
      #line 670 
      dma_test = dma_map_single_attrs((dev->dev)->dma_dev,(void *)ring->txhdr_cache,82UL,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
      #line 675 
      if ((int)b43legacy_dma_mapping_error(ring,dma_test,82UL,(_Bool)1) != 0) 
        #line 677 
        goto err_kfree_txhdr_cache;
    }
    #line 680 
    dma_unmap_single_attrs((dev->dev)->dma_dev,dma_test,82UL,(enum dma_data_direction)DMA_TO_DEVICE,0UL);
  }
  #line 685 
  ring->nr_slots = nr_slots;
  #line 686 
  ring->mmio_base = b43legacy_dmacontroller_base(type,controller_index);
  #line 687 
  ring->index = controller_index;
  #line 688 
  if (for_tx != 0) {
    #line 689 
    ring->tx = (_Bool)1;
    #line 690 
    ring->current_slot = -1;
  }
  else 
    #line 692 
    if (ring->index == 0) {
      #line 693 
      ring->rx_buffersize = (unsigned short)2404U;
      #line 694 
      ring->frameoffset = 30U;
    }
    else 
      #line 695 
      if (ring->index == 3) {
        #line 696 
        ring->rx_buffersize = (unsigned short)16U;
        #line 697 
        ring->frameoffset = 0U;
      }
      else {
        #line 699 
        int __ret_warn_on = 1;
        #line 699 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 700 
          ldv_inline_asm();
          #line 701 
          ldv_inline_asm();
        }
        #line 699 
        long tmp_5 = (long)(__ret_warn_on != 0);
      }
  #line 702 
  ring->last_injected_overflow = jiffies;
  #line 705 
  err = alloc_ringmemory(ring);
  #line 706 
  if (err != 0) 
                #line 707 
                goto err_kfree_txhdr_cache;
  #line 708 
  err = dmacontroller_setup(ring);
  #line 709 
  if (err != 0) 
                #line 710 
                goto err_free_ringmemory;
  #line 712 
  out: 
       #line 712 
  ;
  #line 713 
  return ring;
  #line 715 
  err_free_ringmemory: 
                       #line 715 
  ;
  #line 716 
  free_ringmemory(ring);
  #line 717 
  err_kfree_txhdr_cache: 
                         #line 717 
  ;
  #line 718 
  kfree((void *)ring->txhdr_cache);
  #line 719 
  err_kfree_meta: 
                  #line 719 
  ;
  #line 720 
  kfree((void *)ring->meta);
  #line 721 
  err_kfree_ring: 
                  #line 721 
  ;
  #line 722 
  kfree((void *)ring);
  #line 723 
  ring = (struct b43legacy_dmaring *)0;
  #line 724 
  goto out;
}

#line 728  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void b43legacy_destroy_dmaring(struct b43legacy_dmaring *ring)
{
  #line 734 
  char *tmp;
  #line 730 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 731 
                                             return;
  #line 733 
  ;
  #line 733 
  ;
  #line 734 
  if ((int)ring->tx != 0) 
                          #line 734 
                          tmp = (char *)"TX"; else 
                                                   #line 734 
                                                   tmp = (char *)"RX";
  #line 733 
  ;
  #line 733 
  ;
  #line 733 
  ;
  #line 733 
  b43legacydbg((ring->dev)->wl,(char *)"DMA-%u 0x%04X (%s) max used slots:",(unsigned int)ring->type,(int)ring->mmio_base,tmp,ring->max_used_slots,ring->nr_slots);
  #line 740 
  dmacontroller_cleanup(ring);
  #line 741 
  free_all_descbuffers(ring);
  #line 742 
  free_ringmemory(ring);
  #line 744 
  kfree((void *)ring->txhdr_cache);
  #line 745 
  kfree((void *)ring->meta);
  #line 746 
  kfree((void *)ring);
  #line 747 
  return;
}

#line 749  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_free(struct b43legacy_wldev *dev)
{
  #line 751 
  struct b43legacy_dma *dma;
  #line 753 
  if (b43legacy_using_pio(dev) != 0) 
                                     #line 754 
                                     return;
  #line 755 
  dma = & dev->__anonCompField_b43legacy_wldev_210.dma;
  #line 757 
  b43legacy_destroy_dmaring(dma->rx_ring3);
  #line 758 
  dma->rx_ring3 = (struct b43legacy_dmaring *)0;
  #line 759 
  b43legacy_destroy_dmaring(dma->rx_ring0);
  #line 760 
  dma->rx_ring0 = (struct b43legacy_dmaring *)0;
  #line 762 
  b43legacy_destroy_dmaring(dma->tx_ring5);
  #line 763 
  dma->tx_ring5 = (struct b43legacy_dmaring *)0;
  #line 764 
  b43legacy_destroy_dmaring(dma->tx_ring4);
  #line 765 
  dma->tx_ring4 = (struct b43legacy_dmaring *)0;
  #line 766 
  b43legacy_destroy_dmaring(dma->tx_ring3);
  #line 767 
  dma->tx_ring3 = (struct b43legacy_dmaring *)0;
  #line 768 
  b43legacy_destroy_dmaring(dma->tx_ring2);
  #line 769 
  dma->tx_ring2 = (struct b43legacy_dmaring *)0;
  #line 770 
  b43legacy_destroy_dmaring(dma->tx_ring1);
  #line 771 
  dma->tx_ring1 = (struct b43legacy_dmaring *)0;
  #line 772 
  b43legacy_destroy_dmaring(dma->tx_ring0);
  #line 773 
  dma->tx_ring0 = (struct b43legacy_dmaring *)0;
  #line 774 
  return;
}

#line 776  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
int b43legacy_dma_init(struct b43legacy_wldev *dev)
{
  #line 779 
  struct b43legacy_dmaring *ring;
  #line 781 
  int err;
  #line 783 
  unsigned long long tmp_0;
  #line 778 
  struct b43legacy_dma *dma = & dev->__anonCompField_b43legacy_wldev_210.dma;
  #line 780 
  enum b43legacy_dmatype type = b43legacy_engine_type(dev);
  #line 783 
  if (type != (unsigned int)64) 
                                #line 783 
                                tmp_0 = (1ULL << (unsigned int)type) + 18446744073709551615ULL; else 
                                                                    #line 783 
                                                                    tmp_0 = 18446744073709551615ULL;
  #line 783 
  ;
  #line 783 
  err = dma_set_mask_and_coherent((dev->dev)->dma_dev,tmp_0);
  #line 784 
  if (err != 0) {
    #line 786 
    b43legacywarn(dev->wl,(char *)"DMA for this device not supported. ");
    #line 788 
    dev->__using_pio = (_Bool)1;
    #line 789 
    return -11;
  }
  #line 796 
  dma->translation = ssb_dma_translation(dev->dev);
  #line 798 
  err = -12;
  #line 800 
  ring = b43legacy_setup_dmaring(dev,0,1,type);
  #line 801 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 802 
                                             goto out;
  #line 803 
  dma->tx_ring0 = ring;
  #line 805 
  ring = b43legacy_setup_dmaring(dev,1,1,type);
  #line 806 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 807 
                                             goto err_destroy_tx0;
  #line 808 
  dma->tx_ring1 = ring;
  #line 810 
  ring = b43legacy_setup_dmaring(dev,2,1,type);
  #line 811 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 812 
                                             goto err_destroy_tx1;
  #line 813 
  dma->tx_ring2 = ring;
  #line 815 
  ring = b43legacy_setup_dmaring(dev,3,1,type);
  #line 816 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 817 
                                             goto err_destroy_tx2;
  #line 818 
  dma->tx_ring3 = ring;
  #line 820 
  ring = b43legacy_setup_dmaring(dev,4,1,type);
  #line 821 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 822 
                                             goto err_destroy_tx3;
  #line 823 
  dma->tx_ring4 = ring;
  #line 825 
  ring = b43legacy_setup_dmaring(dev,5,1,type);
  #line 826 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 827 
                                             goto err_destroy_tx4;
  #line 828 
  dma->tx_ring5 = ring;
  #line 831 
  ring = b43legacy_setup_dmaring(dev,0,0,type);
  #line 832 
  if (ring == (struct b43legacy_dmaring *)0) 
                                             #line 833 
                                             goto err_destroy_tx5;
  #line 834 
  dma->rx_ring0 = ring;
  #line 836 
  if ((unsigned int)(dev->dev)->id.revision <= 4U) {
    #line 837 
    ring = b43legacy_setup_dmaring(dev,3,0,type);
    #line 838 
    if (ring == (struct b43legacy_dmaring *)0) 
                                               #line 839 
                                               goto err_destroy_rx0;
    #line 840 
    dma->rx_ring3 = ring;
  }
  #line 843 
  b43legacydbg(dev->wl,(char *)"%u-bit DMA initialized\n",(unsigned int)type);
  #line 844 
  err = 0;
  #line 845 
  out: 
       #line 845 
  ;
  #line 846 
  return err;
  #line 848 
  err_destroy_rx0: 
                   #line 848 
  ;
  #line 849 
  b43legacy_destroy_dmaring(dma->rx_ring0);
  #line 850 
  dma->rx_ring0 = (struct b43legacy_dmaring *)0;
  #line 851 
  err_destroy_tx5: 
                   #line 851 
  ;
  #line 852 
  b43legacy_destroy_dmaring(dma->tx_ring5);
  #line 853 
  dma->tx_ring5 = (struct b43legacy_dmaring *)0;
  #line 854 
  err_destroy_tx4: 
                   #line 854 
  ;
  #line 855 
  b43legacy_destroy_dmaring(dma->tx_ring4);
  #line 856 
  dma->tx_ring4 = (struct b43legacy_dmaring *)0;
  #line 857 
  err_destroy_tx3: 
                   #line 857 
  ;
  #line 858 
  b43legacy_destroy_dmaring(dma->tx_ring3);
  #line 859 
  dma->tx_ring3 = (struct b43legacy_dmaring *)0;
  #line 860 
  err_destroy_tx2: 
                   #line 860 
  ;
  #line 861 
  b43legacy_destroy_dmaring(dma->tx_ring2);
  #line 862 
  dma->tx_ring2 = (struct b43legacy_dmaring *)0;
  #line 863 
  err_destroy_tx1: 
                   #line 863 
  ;
  #line 864 
  b43legacy_destroy_dmaring(dma->tx_ring1);
  #line 865 
  dma->tx_ring1 = (struct b43legacy_dmaring *)0;
  #line 866 
  err_destroy_tx0: 
                   #line 866 
  ;
  #line 867 
  b43legacy_destroy_dmaring(dma->tx_ring0);
  #line 868 
  dma->tx_ring0 = (struct b43legacy_dmaring *)0;
  #line 869 
  goto out;
}

#line 873  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static u16 generate_cookie(struct b43legacy_dmaring *ring, int slot)
{
  #line 876 
  u16 cookie = (unsigned short)4096U;
  #line 884 
  switch (ring->index) {
    #line 885 
    case 0: 
            #line 885 
    ;
    #line 886 
    cookie = (unsigned short)40960U;
    #line 887 
    break;
    #line 888 
    case 1: 
            #line 888 
    ;
    #line 889 
    cookie = (unsigned short)45056U;
    #line 890 
    break;
    #line 891 
    case 2: 
            #line 891 
    ;
    #line 892 
    cookie = (unsigned short)49152U;
    #line 893 
    break;
    #line 894 
    case 3: 
            #line 894 
    ;
    #line 895 
    cookie = (unsigned short)53248U;
    #line 896 
    break;
    #line 897 
    case 4: 
            #line 897 
    ;
    #line 898 
    cookie = (unsigned short)57344U;
    #line 899 
    break;
    #line 900 
    case 5: 
            #line 900 
    ;
    #line 901 
    cookie = (unsigned short)61440U;
    #line 902 
    break;
  }
  {
    #line 904 
    int __ret_warn_on = ((int)((unsigned short)slot) & 61440) != 0;
    #line 904 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 905 
      ldv_inline_asm();
      #line 906 
      ldv_inline_asm();
    }
    #line 904 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 905 
  cookie = (unsigned short)((int)((unsigned short)slot) | (int)cookie);
  #line 907 
  return cookie;
}

#line 912  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static struct b43legacy_dmaring *parse_cookie(struct b43legacy_wldev *dev, u16 cookie, int *slot)
{
  #line 915 
  struct b43legacy_dma *dma = & dev->__anonCompField_b43legacy_wldev_210.dma;
  #line 916 
  struct b43legacy_dmaring *ring = (struct b43legacy_dmaring *)0;
  #line 918 
  switch ((int)cookie & 61440) {
    #line 919 
    case 40960: 
                #line 919 
    ;
    #line 920 
    ring = dma->tx_ring0;
    #line 921 
    break;
    #line 922 
    case 45056: 
                #line 922 
    ;
    #line 923 
    ring = dma->tx_ring1;
    #line 924 
    break;
    #line 925 
    case 49152: 
                #line 925 
    ;
    #line 926 
    ring = dma->tx_ring2;
    #line 927 
    break;
    #line 928 
    case 53248: 
                #line 928 
    ;
    #line 929 
    ring = dma->tx_ring3;
    #line 930 
    break;
    #line 931 
    case 57344: 
                #line 931 
    ;
    #line 932 
    ring = dma->tx_ring4;
    #line 933 
    break;
    #line 934 
    case 61440: 
                #line 934 
    ;
    #line 935 
    ring = dma->tx_ring5;
    #line 936 
    break;
    #line 937 
    default: 
             #line 937 
    ;
    {
      #line 938 
      int __ret_warn_on = 1;
      #line 938 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 939 
        ldv_inline_asm();
        #line 940 
        ldv_inline_asm();
      }
      #line 938 
      long tmp = (long)(__ret_warn_on != 0);
    }
  }
  #line 940 
  *slot = (int)cookie & 4095;
  {
    #line 941 
    int __ret_warn_on_0 = ((ring == (struct b43legacy_dmaring *)0 || *slot < 0) || *slot >= ring->nr_slots) != 0;
    #line 941 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 942 
      ldv_inline_asm();
      #line 943 
      ldv_inline_asm();
    }
    #line 941 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 943 
  return ring;
}

#line 946  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static int dma_tx_fragment(struct b43legacy_dmaring *ring, struct sk_buff **in_skb)
{
  #line 951 
  u8 *header;
  #line 952 
  int slot;
  #line 952 
  int old_top_slot;
  #line 952 
  int old_used_slots;
  #line 953 
  int err;
  #line 954 
  struct b43legacy_dmadesc32 *desc;
  #line 955 
  struct b43legacy_dmadesc_meta *meta;
  #line 956 
  struct b43legacy_dmadesc_meta *meta_hdr;
  #line 957 
  struct sk_buff *bounce_skb;
  #line 949 
  struct sk_buff *skb = *in_skb;
  #line 950 
  struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
  {
    #line 960 
    int __ret_warn_on = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags != 0U;
    #line 960 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 961 
      ldv_inline_asm();
      #line 962 
      ldv_inline_asm();
    }
    #line 960 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 962 
  old_top_slot = ring->current_slot;
  #line 963 
  old_used_slots = ring->used_slots;
  #line 966 
  slot = request_slot(ring);
  #line 967 
  desc = op32_idx2desc(ring,slot,& meta_hdr);
  #line 968 
  memset((void *)meta_hdr,0,24UL);
  #line 970 
  header = ring->txhdr_cache + (unsigned long)slot * 82UL;
  #line 972 
  ;
  #line 972 
  ;
  #line 972 
  ;
  #line 972 
  ;
  #line 972 
  ;
  #line 972 
  err = b43legacy_generate_txhdr(ring->dev,header,skb->data,skb->len,info,(unsigned short)((int)generate_cookie(ring,slot)));
  #line 975 
  if ((long)(err != 0) != 0L) {
    #line 976 
    ring->current_slot = old_top_slot;
    #line 977 
    ring->used_slots = old_used_slots;
    #line 978 
    return err;
  }
  #line 981 
  meta_hdr->dmaaddr = map_descbuffer(ring,header,82UL,1);
  #line 983 
  if ((int)b43legacy_dma_mapping_error(ring,meta_hdr->dmaaddr,82UL,(_Bool)1) != 0) {
    #line 985 
    ring->current_slot = old_top_slot;
    #line 986 
    ring->used_slots = old_used_slots;
    #line 987 
    return -5;
  }
  #line 989 
  op32_fill_descriptor(ring,desc,meta_hdr->dmaaddr,(unsigned short)82,1,0,0);
  #line 993 
  slot = request_slot(ring);
  #line 994 
  desc = op32_idx2desc(ring,slot,& meta);
  #line 995 
  memset((void *)meta,0,24UL);
  #line 997 
  meta->skb = skb;
  #line 998 
  meta->is_last_fragment = (_Bool)1;
  #line 1000 
  meta->dmaaddr = map_descbuffer(ring,skb->data,(unsigned long)skb->len,1);
  #line 1002 
  if ((int)b43legacy_dma_mapping_error(ring,meta->dmaaddr,
                                    (unsigned long)skb->len,(_Bool)1) != 0) {
    #line 1003 
    bounce_skb = alloc_skb(skb->len,3265U);
    #line 1004 
    if (bounce_skb == (struct sk_buff *)0) {
      #line 1005 
      ring->current_slot = old_top_slot;
      #line 1006 
      ring->used_slots = old_used_slots;
      #line 1007 
      err = -12;
      #line 1008 
      goto out_unmap_hdr;
    }
    #line 1011 
    skb_put_data(bounce_skb,(void *)skb->data,skb->len);
    #line 1012 
    memcpy((void *)(& bounce_skb->cb),(void *)(& skb->cb),48UL);
    #line 1013 
    bounce_skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_499_89.__anonCompField___anonstruct_500_88.dev = skb->__anonCompField_sk_buff_90.__anonCompField___anonunion_499_89.__anonCompField___anonstruct_500_88.dev;
    #line 1014 
    ;
    #line 1014 
    skb_set_queue_mapping(bounce_skb,(unsigned short)((int)skb_get_queue_mapping(skb)));
    #line 1015 
    info = IEEE80211_SKB_CB(bounce_skb);
    #line 1017 
    dev_kfree_skb_any(skb);
    #line 1018 
    skb = bounce_skb;
    #line 1019 
    *in_skb = bounce_skb;
    #line 1020 
    meta->skb = skb;
    #line 1021 
    meta->dmaaddr = map_descbuffer(ring,skb->data,(unsigned long)skb->len,1);
    #line 1022 
    if ((int)b43legacy_dma_mapping_error(ring,meta->dmaaddr,
                                    (unsigned long)skb->len,(_Bool)1) != 0) {
      #line 1023 
      ring->current_slot = old_top_slot;
      #line 1024 
      ring->used_slots = old_used_slots;
      #line 1025 
      err = -5;
      #line 1026 
      goto out_free_bounce;
    }
  }
  #line 1030 
  op32_fill_descriptor(ring,desc,meta->dmaaddr,(unsigned short)((int)((unsigned short)skb->len)),0,1,1);
  #line 1032 
  ldv_inline_asm();
  #line 1035 
  ;
  #line 1035 
  op32_poke_tx(ring,next_slot(ring,slot));
  #line 1036 
  return 0;
  #line 1038 
  out_free_bounce: 
                   #line 1038 
  ;
  #line 1039 
  dev_kfree_skb_any(skb);
  #line 1040 
  out_unmap_hdr: 
                 #line 1040 
  ;
  #line 1041 
  unmap_descbuffer(ring,meta_hdr->dmaaddr,82UL,1);
  #line 1043 
  return err;
}

#line 1047  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
__inline static int should_inject_overflow(struct b43legacy_dmaring *ring)
{
  #line 1050 
  if ((long)(b43legacy_debug(ring->dev,
                        (enum b43legacy_dyndbg)B43legacy_DBG_DMAOVERFLOW) != 0) != 0L) {
    #line 1054 
    unsigned long next_overflow;
    #line 1056 
    next_overflow = ring->last_injected_overflow + 250UL;
    {
      #line 1057 
      unsigned long __dummy;
      #line 1057 
      unsigned long __dummy2;
      }
    #line 1057 
    if (1 != 0) {
      {
        #line 1057 
        unsigned long __dummy_0;
        #line 1057 
        unsigned long __dummy2_0;
        }
      #line 1057 
      if (1 != 0) 
        #line 1057 
        if ((long)(next_overflow - jiffies) < 0L) {
          #line 1058 
          ring->last_injected_overflow = jiffies;
          #line 1059 
          b43legacydbg((ring->dev)->wl,(char *)"Injecting TX ring overflow on ",ring->index);
          #line 1062 
          return 1;
        }
    }
  }
  #line 1066 
  return 0;
}

#line 1069  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
int b43legacy_dma_tx(struct b43legacy_wldev *dev, struct sk_buff *skb)
{
  #line 1088 
  int __ret_warn_on_0;
  #line 1072 
  struct b43legacy_dmaring *ring;
  #line 1073 
  int err = 0;
  #line 1075 
  ;
  #line 1075 
  ring = priority_to_txring(dev,(int)skb_get_queue_mapping(skb));
  {
    #line 1076 
    int __ret_warn_on = ! ring->tx;
    #line 1076 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1077 
      ldv_inline_asm();
      #line 1078 
      ldv_inline_asm();
    }
    #line 1076 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 1078 
  if ((long)((int)ring->stopped != 0) != 0L) {
    #line 1083 
    if (b43legacy_debug(dev,(enum b43legacy_dyndbg)B43legacy_DBG_DMAVERBOSE) != 0) 
      #line 1084 
      b43legacyerr(dev->wl,(char *)"Packet after queue stopped\n");
    #line 1085 
    return -28;
  }
  {
    #line 1088 
    __ret_warn_on_0 = free_slots(ring) <= 1;
    #line 1088 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1089 
      ldv_inline_asm();
      #line 1090 
      ldv_inline_asm();
    }
    }
  #line 1088 
  if ((long)((long)(__ret_warn_on_0 != 0)) != 0L) {
    #line 1091 
    b43legacyerr(dev->wl,(char *)"DMA queue overflow\n");
    #line 1092 
    return -28;
  }
  #line 1097 
  err = dma_tx_fragment(ring,& skb);
  #line 1098 
  if ((long)(err == -126) != 0L) {
    #line 1101 
    dev_kfree_skb_any(skb);
    #line 1102 
    return 0;
  }
  #line 1104 
  if ((long)(err != 0) != 0L) {
    #line 1105 
    b43legacyerr(dev->wl,(char *)"DMA tx mapping failure\n");
    #line 1106 
    return err;
  }
  #line 1108 
  if (free_slots(ring) <= 1) 
                             #line 1108 
                             goto _LOR;
  else {
    #line 1108 
    if (should_inject_overflow(ring) != 0) {
      #line 1108 
      _LOR: {
              #line 1111 
              unsigned int skb_mapping = (unsigned int)skb_get_queue_mapping(skb);
              #line 1112 
              ieee80211_stop_queue((dev->wl)->hw,(int)skb_mapping);
              #line 1113 
              (dev->wl)->tx_queue_stopped[skb_mapping] = (_Bool)1;
              #line 1114 
              ring->stopped = (_Bool)1;
              #line 1115 
              if (b43legacy_debug(dev,(enum b43legacy_dyndbg)B43legacy_DBG_DMAVERBOSE) != 0) 
                #line 1116 
                b43legacydbg(dev->wl,(char *)"Stopped TX ring %d\n",ring->index);
            }
    }
  }
  #line 1119 
  return err;
}

#line 1122  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_handle_txstatus(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status)
{
  #line 1125 
  struct b43legacy_dmaring *ring;
  #line 1126 
  struct b43legacy_dmadesc_meta *meta;
  #line 1127 
  int retry_limit;
  #line 1128 
  int slot;
  #line 1129 
  int firstused;
  #line 1131 
  ring = parse_cookie(dev,(unsigned short)((int)status->cookie),& slot);
  #line 1132 
  if ((long)(ring == (struct b43legacy_dmaring *)0) != 0L) 
                                                           #line 1133 
                                                           return;
  {
    #line 1134 
    int __ret_warn_on = ! ring->tx;
    #line 1134 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1135 
      ldv_inline_asm();
      #line 1136 
      ldv_inline_asm();
    }
    #line 1134 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1139 
  firstused = (ring->current_slot - ring->used_slots) + 1;
  #line 1140 
  if (firstused < 0) 
                     #line 1141 
                     firstused = ring->nr_slots + firstused;
  #line 1142 
  if ((long)(slot != firstused) != 0L) {
    #line 1146 
    b43legacydbg(dev->wl,(char *)"Out of order TX status report on DMA ",ring->index,firstused,slot);
    #line 1149 
    return;
  }
  #line 1152 
  while (1) {
    {
      #line 1153 
      int __ret_warn_on_0 = (slot < 0 || ring->nr_slots <= slot) != 0;
      #line 1153 
      if ((long)(__ret_warn_on_0 != 0) != 0L) {
        #line 1154 
        ldv_inline_asm();
        #line 1155 
        ldv_inline_asm();
      }
      #line 1153 
      long tmp_3 = (long)(__ret_warn_on_0 != 0);
    }
    #line 1154 
    op32_idx2desc(ring,slot,& meta);
    #line 1156 
    if (meta->skb != (struct sk_buff *)0) 
                                          #line 1157 
                                          unmap_descbuffer(ring,meta->dmaaddr,(unsigned long)(meta->skb)->len,1); else 
                                                                    #line 1160 
                                                                    unmap_descbuffer(ring,meta->dmaaddr,82UL,1);
    #line 1164 
    if ((int)meta->is_last_fragment != 0) {
      #line 1165 
      struct ieee80211_tx_info *info;
      #line 1166 
      if ((long)(meta->skb == (struct sk_buff *)0) != 0L) {
        #line 1167 
        ldv_inline_asm();
        #line 1168 
        ldv_inline_asm();
        #line 1169 
        ldv_inline_asm();
        #line 1166 
        ;
      }
      #line 1167 
      info = IEEE80211_SKB_CB(meta->skb);
      #line 1172 
      retry_limit = (int)info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count;
      #line 1173 
      ieee80211_tx_info_clear_status(info);
      #line 1175 
      if ((unsigned int)status->acked != 0U) 
                                             #line 1176 
                                             info->flags |= 512U;
      #line 1178 
      if ((int)status->rts_count > (int)((dev->wl)->hw)->conf.short_frame_max_tx_count) {
        #line 1186 
        info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count = (unsigned short)0U;
        #line 1187 
        info->__anonCompField_ieee80211_tx_info_206.status.rates[1].count = (unsigned short)status->frame_count;
      }
      else 
        #line 1189 
        if ((int)status->frame_count > retry_limit) {
          #line 1190 
          info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count = (unsigned short)retry_limit;
          #line 1191 
          info->__anonCompField_ieee80211_tx_info_206.status.rates[1].count = (unsigned short)((int)status->frame_count - (int)((unsigned char)retry_limit));
        }
        else {
          #line 1195 
          info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count = (unsigned short)status->frame_count;
          #line 1196 
          info->__anonCompField_ieee80211_tx_info_206.status.rates[1].idx = (signed char)(-1);
        }
      #line 1204 
      ieee80211_tx_status_irqsafe((dev->wl)->hw,meta->skb);
      #line 1206 
      meta->skb = (struct sk_buff *)0;
    }
    else {
      #line 1211 
      int __ret_warn_on_1 = meta->skb != (struct sk_buff *)0;
      #line 1211 
      if ((long)(__ret_warn_on_1 != 0) != 0L) {
        #line 1212 
        ldv_inline_asm();
        #line 1213 
        ldv_inline_asm();
      }
      #line 1211 
      long tmp_5 = (long)(__ret_warn_on_1 != 0);
    }
    #line 1215 
    (ring->used_slots) --;
    #line 1217 
    if ((int)meta->is_last_fragment != 0) 
                                          #line 1218 
                                          break;
    #line 1219 
    slot = next_slot(ring,slot);
  }
  #line 1221 
  dev->stats.last_tx = jiffies;
  #line 1222 
  if ((int)ring->stopped != 0) {
    {
      #line 1223 
      int __ret_warn_on_2 = free_slots(ring) <= 1;
      #line 1223 
      if ((long)(__ret_warn_on_2 != 0) != 0L) {
        #line 1224 
        ldv_inline_asm();
        #line 1225 
        ldv_inline_asm();
      }
      #line 1223 
      long tmp_7 = (long)(__ret_warn_on_2 != 0);
    }
    #line 1224 
    ring->stopped = (_Bool)0;
  }
  #line 1227 
  if ((int)(dev->wl)->tx_queue_stopped[(int)ring->queue_prio] != 0) 
                                                                    #line 1228 
                                                                    (dev->wl)->tx_queue_stopped[(int)ring->queue_prio] = (_Bool)0;
  else {
    #line 1232 
    ieee80211_wake_queue((dev->wl)->hw,(int)ring->queue_prio);
    #line 1233 
    if (b43legacy_debug(dev,
                          (enum b43legacy_dyndbg)B43legacy_DBG_DMAVERBOSE) != 0) 
      #line 1234 
      b43legacydbg(dev->wl,(char *)"Woke up TX ring %d\n",ring->index);
  }
  #line 1238 
  ieee80211_queue_work((dev->wl)->hw,& (dev->wl)->tx_work);
  #line 1239 
  return;
}

#line 1241  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void dma_rx(struct b43legacy_dmaring *ring, int *slot)
{
  #line 1244 
  struct b43legacy_dmadesc32 *desc;
  #line 1245 
  struct b43legacy_dmadesc_meta *meta;
  #line 1246 
  struct b43legacy_rxhdr_fw3 *rxhdr;
  #line 1247 
  struct sk_buff *skb;
  #line 1248 
  u16 len;
  #line 1249 
  int err;
  #line 1250 
  dma_addr_t dmaaddr;
  #line 1252 
  desc = op32_idx2desc(ring,*slot,& meta);
  #line 1254 
  sync_descbuffer_for_cpu(ring,meta->dmaaddr,(unsigned long)ring->rx_buffersize);
  #line 1255 
  skb = meta->skb;
  #line 1257 
  if (ring->index == 3) {
    #line 1259 
    struct b43legacy_hwtxstatus *hw = (struct b43legacy_hwtxstatus *)skb->data;
    #line 1261 
    int i = 0;
    #line 1263 
    while ((unsigned int)hw->cookie == 0U) {
      #line 1264 
      if (i > 100) 
                   #line 1265 
                   break;
      #line 1266 
      i ++;
      #line 1267 
      __const_udelay(8590UL);
      #line 1269 
      ldv_inline_asm();
    }
    #line 1270 
    b43legacy_handle_hwtxstatus(ring->dev,hw);
    #line 1272 
    sync_descbuffer_for_device(ring,meta->dmaaddr,(unsigned long)ring->rx_buffersize);
    #line 1275 
    return;
  }
  #line 1277 
  rxhdr = (struct b43legacy_rxhdr_fw3 *)skb->data;
  #line 1278 
  len = rxhdr->frame_len;
  #line 1279 
  if ((unsigned int)len == 0U) {
    #line 1280 
    int i_0 = 0;
    #line 1282 
    while (1) {
      #line 1283 
      __const_udelay(8590UL);
      #line 1285 
      ldv_inline_asm();
      #line 1285 
      len = rxhdr->frame_len;
      #line 1286 
      if ((unsigned int)len == 0U) {
        #line 1286 
        int tmp;
        #line 1286 
        tmp = i_0;
        #line 1286 
        i_0 ++;
        #line 1286 
        ;
        #line 1286 
        if (! (tmp <= 4)) 
                          #line 1282 
                          break;
      }
      else 
           #line 1282 
           break;
    }
    #line 1287 
    if ((long)((unsigned int)len == 0U) != 0L) {
      #line 1289 
      sync_descbuffer_for_device(ring,meta->dmaaddr,(unsigned long)ring->rx_buffersize);
      #line 1291 
      goto drop;
    }
  }
  #line 1294 
  if ((long)((int)ring->rx_buffersize < (int)len) != 0L) {
    #line 1300 
    int cnt = 0;
    #line 1301 
    s32 tmp_0 = (int)len;
    #line 1303 
    while (1) {
      #line 1304 
      desc = op32_idx2desc(ring,*slot,& meta);
      #line 1306 
      sync_descbuffer_for_device(ring,meta->dmaaddr,(unsigned long)ring->rx_buffersize);
      #line 1308 
      *slot = next_slot(ring,*slot);
      #line 1309 
      cnt ++;
      #line 1310 
      tmp_0 -= (int)ring->rx_buffersize;
      #line 1311 
      if (tmp_0 <= 0) 
                      #line 1312 
                      break;
    }
    #line 1314 
    b43legacyerr((ring->dev)->wl,(char *)"DMA RX buffer too small ",(int)len,(int)ring->rx_buffersize,cnt);
    #line 1317 
    goto drop;
  }
  #line 1320 
  dmaaddr = meta->dmaaddr;
  #line 1321 
  err = setup_rx_descbuffer(ring,desc,meta,2592U);
  #line 1322 
  if ((long)(err != 0) != 0L) {
    #line 1323 
    b43legacydbg((ring->dev)->wl,(char *)"DMA RX: setup_rx_descbuffer()");
    #line 1325 
    sync_descbuffer_for_device(ring,dmaaddr,(unsigned long)ring->rx_buffersize);
    #line 1327 
    goto drop;
  }
  #line 1330 
  unmap_descbuffer(ring,dmaaddr,(unsigned long)ring->rx_buffersize,0);
  #line 1331 
  skb_put(skb,(unsigned int)len + ring->frameoffset);
  #line 1332 
  skb_pull(skb,ring->frameoffset);
  #line 1334 
  b43legacy_rx(ring->dev,skb,(void *)rxhdr);
  #line 1335 
  drop: 
        #line 1335 
  ;
  #line 1336 
  return;
}

#line 1339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_rx(struct b43legacy_dmaring *ring)
{
  #line 1341 
  int slot;
  #line 1342 
  int current_slot;
  #line 1343 
  int used_slots = 0;
  {
    #line 1345 
    int __ret_warn_on = (int)ring->tx != 0;
    #line 1345 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1346 
      ldv_inline_asm();
      #line 1347 
      ldv_inline_asm();
    }
    #line 1345 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1346 
  current_slot = op32_get_current_rxslot(ring);
  {
    #line 1347 
    int __ret_warn_on_0 = (current_slot < 0 || ring->nr_slots <= current_slot) != 0;
    #line 1347 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1348 
      ldv_inline_asm();
      #line 1349 
      ldv_inline_asm();
    }
    #line 1347 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 1350 
  slot = ring->current_slot;
  #line 1351 
  while (slot != current_slot) {
    #line 1352 
    dma_rx(ring,& slot);
    #line 1353 
    used_slots ++;
    #line 1353 
    ;
    #line 1353 
    update_max_used_slots(ring,used_slots);
    #line 1351 
    slot = next_slot(ring,slot);
  }
  #line 1355 
  op32_set_current_rxslot(ring,slot);
  #line 1356 
  ring->current_slot = slot;
  #line 1357 
  return;
}

#line 1359  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void b43legacy_dma_tx_suspend_ring(struct b43legacy_dmaring *ring)
{
  {
    #line 1361 
    int __ret_warn_on = ! ring->tx;
    #line 1361 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1362 
      ldv_inline_asm();
      #line 1363 
      ldv_inline_asm();
    }
    #line 1361 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1362 
  op32_tx_suspend(ring);
  #line 1363 
  return;
}

#line 1365  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
static void b43legacy_dma_tx_resume_ring(struct b43legacy_dmaring *ring)
{
  {
    #line 1367 
    int __ret_warn_on = ! ring->tx;
    #line 1367 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1368 
      ldv_inline_asm();
      #line 1369 
      ldv_inline_asm();
    }
    #line 1367 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1368 
  op32_tx_resume(ring);
  #line 1369 
  return;
}

#line 1371  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_tx_suspend(struct b43legacy_wldev *dev)
{
  #line 1373 
  b43legacy_power_saving_ctl_bits(dev,-1,1);
  #line 1374 
  b43legacy_dma_tx_suspend_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring0);
  #line 1375 
  b43legacy_dma_tx_suspend_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring1);
  #line 1376 
  b43legacy_dma_tx_suspend_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring2);
  #line 1377 
  b43legacy_dma_tx_suspend_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring3);
  #line 1378 
  b43legacy_dma_tx_suspend_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring4);
  #line 1379 
  b43legacy_dma_tx_suspend_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring5);
  #line 1380 
  return;
}

#line 1382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/dma.c"
void b43legacy_dma_tx_resume(struct b43legacy_wldev *dev)
{
  #line 1384 
  b43legacy_dma_tx_resume_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring5);
  #line 1385 
  b43legacy_dma_tx_resume_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring4);
  #line 1386 
  b43legacy_dma_tx_resume_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring3);
  #line 1387 
  b43legacy_dma_tx_resume_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring2);
  #line 1388 
  b43legacy_dma_tx_resume_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring1);
  #line 1389 
  b43legacy_dma_tx_resume_ring(dev->__anonCompField_b43legacy_wldev_210.dma.tx_ring0);
  #line 1390 
  b43legacy_power_saving_ctl_bits(dev,-1,-1);
  #line 1391 
  return;
}

#line 337  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/dma.i.aux"
static void *kcalloc_0(size_t n, size_t size, gfp_t flags)
{
  #line 340 
  return ldv_kcalloc(n,size,flags);
}

#line 358  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/dma.i.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  #line 361 
  return ldv_kzalloc(size,flags);
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_1(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_4286 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_1(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_1(v);
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/rfkill.i.aux"
#line 807 
static void cif_mutex_lock_mutex_of_b43legacy_wl_1(struct mutex *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 814  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/rfkill.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl_1(struct mutex *lock);
#line 6082  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
#line 6082 
void wiphy_rfkill_set_hw_state(struct wiphy *, bool);
#line 17  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/rfkill.c"
bool b43legacy_is_hw_radio_enabled(struct b43legacy_wldev *dev)
{
  #line 19 
  if ((unsigned int)(dev->dev)->id.revision > 2U) {
    #line 20 
    if ((b43legacy_read32(dev,(unsigned short)344) & 65536U) == 0U) 
                                                                    #line 22 
                                                                    return (_Bool)1;
  }
  else {
    #line 29 
    if (atomic_read_1(& dev->__init_status) <= 1) 
                                                  #line 30 
                                                  return (_Bool)1;
    #line 31 
    if (((int)b43legacy_read16(dev,(unsigned short)1178) & 16) != 0) 
      #line 33 
      return (_Bool)1;
  }
  #line 35 
  return (_Bool)0;
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/rfkill.c"
void b43legacy_rfkill_poll(struct ieee80211_hw *hw)
{
  #line 44 
  bool enabled;
  #line 41 
  struct b43legacy_wl *wl = hw_to_b43legacy_wl(hw);
  #line 42 
  struct b43legacy_wldev *dev = wl->current_dev;
  #line 43 
  struct ssb_bus *bus = (dev->dev)->bus;
  #line 45 
  bool brought_up = (_Bool)0;
  #line 47 
  cif_mutex_lock_mutex_of_b43legacy_wl_1(& wl->mutex);
  #line 48 
  if ((long)(atomic_read_1(& dev->__init_status) <= 0) != 0L) {
    #line 49 
    if (ssb_bus_powerup(bus,(_Bool)0) != 0) {
      #line 50 
      cif_mutex_unlock_mutex_of_b43legacy_wl_1(& wl->mutex);
      #line 51 
      return;
    }
    #line 53 
    ssb_device_enable(dev->dev,0U);
    #line 54 
    brought_up = (_Bool)1;
  }
  #line 57 
  enabled = b43legacy_is_hw_radio_enabled(dev);
  #line 59 
  if ((long)((int)dev->radio_hw_enable != (int)enabled) != 0L) {
    #line 61 
    char *tmp_2;
    #line 60 
    dev->radio_hw_enable = enabled;
    #line 61 
    if ((int)enabled != 0) 
                           #line 61 
                           tmp_2 = (char *)"ENABLED"; else 
                                                           #line 61 
                                                           tmp_2 = (char *)"DISABLED";
    #line 61 
    ;
    #line 61 
    b43legacyinfo(wl,(char *)"Radio hardware status changed to %s\n",tmp_2);
    #line 63 
    wiphy_rfkill_set_hw_state(hw->wiphy,(_Bool)((int)((_Bool)(! ((int)enabled != 0)))));
    #line 64 
    if ((int)dev->phy.radio_on != (int)enabled) 
      #line 65 
      if ((int)enabled != 0) 
                             #line 66 
                             b43legacy_radio_turn_on(dev); else 
                                                                #line 68 
                                                                b43legacy_radio_turn_off(dev,(_Bool)0);
  }
  #line 72 
  if ((int)brought_up != 0) {
    #line 73 
    ssb_device_disable(dev->dev,0U);
    #line 74 
    ssb_bus_may_powerdown(bus);
  }
  #line 77 
  cif_mutex_unlock_mutex_of_b43legacy_wl_1(& wl->mutex);
  #line 78 
  return;
}

#line 807  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/rfkill.i.aux"
static void cif_mutex_lock_mutex_of_b43legacy_wl_1(struct mutex *lock)
{
  #line 810 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 811 
  return;
}

#line 814  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/rfkill.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl_1(struct mutex *lock)
{
  #line 817 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 818 
  return;
}

#line 59  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/string_64.h"
#line 59 
void *__memmove(void *, void *, size_t);
#line 2652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
#line 2652 
void skb_trim(struct sk_buff *, unsigned int);
#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_has_protected(__le16 fc)
{
  #line 332 
  return (_Bool)(((int)fc & 16384) != 0);
}

#line 466  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/ieee80211.h"
__inline static bool ieee80211_is_beacon(__le16 fc)
{
  #line 468 
  return (_Bool)(((int)fc & 252) == 128);
}

#line 5177  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/cfg80211.h"
#line 5177 
unsigned int ieee80211_hdrlen(__le16);
#line 1119  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
  #line 1121 
  return (struct ieee80211_rx_status *)(& skb->cb);
}

#line 2625  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_rts_cts_rate(struct ieee80211_hw *hw, struct ieee80211_tx_info *c)
{
  #line 2628 
  if ((int)c->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rts_cts_rate_idx < 0) 
    #line 2629 
    return (struct ieee80211_rate *)0;
  #line 2630 
  return ((hw->wiphy)->bands[(int)c->band])->bitrates + (unsigned long)c->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rts_cts_rate_idx;
}

#line 2634  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/net/mac80211.h"
__inline static struct ieee80211_rate *ieee80211_get_alt_retry_rate(struct ieee80211_hw *hw, struct ieee80211_tx_info *c, int idx)
{
  #line 2637 
  if ((int)c->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rates[idx + 1].idx < 0) 
    #line 2638 
    return (struct ieee80211_rate *)0;
  #line 2639 
  return ((hw->wiphy)->bands[(int)c->band])->bitrates + (unsigned long)c->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rates[idx + 1].idx;
}

#line 4379 
#line 4379 
void ieee80211_rx_irqsafe(struct ieee80211_hw *, struct sk_buff *);
#line 4889 
#line 4889 
void ieee80211_rts_get(struct ieee80211_hw *, struct ieee80211_vif *, void *, size_t, struct ieee80211_tx_info *, struct ieee80211_rts *);
#line 4925 
#line 4925 
void ieee80211_ctstoself_get(struct ieee80211_hw *, struct ieee80211_vif *, void *, size_t, struct ieee80211_tx_info *, struct ieee80211_cts *);
#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.h"
#line 63 
void b43legacy_debugfs_log_txstat(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status);
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/main.h"
__inline static int b43legacy_is_ofdm_rate(int rate)
{
  #line 84 
  return b43legacy_is_cck_rate(rate) == 0;
}

#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
#line 620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_tx_suspend(struct b43legacy_wldev *dev);
#line 209  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_tx_resume(struct b43legacy_wldev *dev);
#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
__inline static int b43legacy_new_kidx_api(struct b43legacy_wldev *dev)
{
  #line 234 
  return (unsigned int)dev->fw.rev > 350U;
}

#line 237  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
__inline static u8 b43legacy_kidx_to_fw(struct b43legacy_wldev *dev, u8 raw_kidx)
{
  #line 239 
  u8 firmware_kidx;
  #line 240 
  if (b43legacy_new_kidx_api(dev) != 0) 
                                        #line 241 
                                        firmware_kidx = raw_kidx;
  else 
    #line 243 
    if ((unsigned int)raw_kidx > 3U) 
                                     #line 244 
                                     firmware_kidx = (unsigned char)((unsigned int)raw_kidx + 252U); else 
                                                                    #line 246 
                                                                    firmware_kidx = raw_kidx;
  #line 248 
  return firmware_kidx;
}

#line 251  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.h"
__inline static u8 b43legacy_kidx_to_raw(struct b43legacy_wldev *dev, u8 firmware_kidx)
{
  #line 253 
  u8 raw_kidx;
  #line 254 
  if (b43legacy_new_kidx_api(dev) != 0) 
                                        #line 255 
                                        raw_kidx = firmware_kidx; else 
                                                                    #line 258 
                                                                    raw_kidx = (unsigned char)((unsigned int)firmware_kidx + 4U);
  #line 259 
  return raw_kidx;
}

#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
#line 103 
void b43legacy_pio_handle_txstatus(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status);
#line 111 
#line 111 
void b43legacy_pio_freeze_txqueues(struct b43legacy_wldev *dev);
#line 112 
#line 112 
void b43legacy_pio_thaw_txqueues(struct b43legacy_wldev *dev);
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
static u8 b43legacy_plcp_get_bitrate_idx_cck(struct b43legacy_plcp_hdr6 *plcp)
{
  #line 29 
  switch ((int)plcp->__anonCompField_b43legacy_plcp_hdr6_212.raw[0]) {
    #line 30 
    case 10: 
             #line 30 
    ;
    #line 31 
    return (unsigned char)0U;
    #line 32 
    case 20: 
             #line 32 
    ;
    #line 33 
    return (unsigned char)1U;
    #line 34 
    case 55: 
             #line 34 
    ;
    #line 35 
    return (unsigned char)2U;
    #line 36 
    case 110: 
              #line 36 
    ;
    #line 37 
    return (unsigned char)3U;
  }
  #line 39 
  printk((char *)"\001",(char *)"1");
  #line 40 
  ldv_inline_asm();
  #line 41 
  ldv_inline_asm();
  #line 42 
  ldv_inline_asm();
  #line 39 
  ;
  #line 40 
  return (unsigned char)255U;
}

#line 44  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
static u8 b43legacy_plcp_get_bitrate_idx_ofdm(struct b43legacy_plcp_hdr6 *plcp, bool aphy)
{
  #line 47 
  int tmp;
  #line 47 
  if ((int)aphy != 0) 
                      #line 47 
                      tmp = 0; else 
                                    #line 47 
                                    tmp = 4;
  #line 47 
  int base = tmp;
  #line 49 
  switch ((int)plcp->__anonCompField_b43legacy_plcp_hdr6_212.raw[0] & 15) {
    #line 50 
    case 11: 
             #line 50 
    ;
    #line 51 
    return (unsigned char)base;
    #line 52 
    case 15: 
             #line 52 
    ;
    #line 53 
    return (unsigned char)((unsigned int)((unsigned char)base) + 1U);
    #line 54 
    case 10: 
             #line 54 
    ;
    #line 55 
    return (unsigned char)((unsigned int)((unsigned char)base) + 2U);
    #line 56 
    case 14: 
             #line 56 
    ;
    #line 57 
    return (unsigned char)((unsigned int)((unsigned char)base) + 3U);
    #line 58 
    case 9: 
            #line 58 
    ;
    #line 59 
    return (unsigned char)((unsigned int)((unsigned char)base) + 4U);
    #line 60 
    case 13: 
             #line 60 
    ;
    #line 61 
    return (unsigned char)((unsigned int)((unsigned char)base) + 5U);
    #line 62 
    case 8: 
            #line 62 
    ;
    #line 63 
    return (unsigned char)((unsigned int)((unsigned char)base) + 6U);
    #line 64 
    case 12: 
             #line 64 
    ;
    #line 65 
    return (unsigned char)((unsigned int)((unsigned char)base) + 7U);
  }
  #line 67 
  printk((char *)"\001",(char *)"1");
  #line 68 
  ldv_inline_asm();
  #line 69 
  ldv_inline_asm();
  #line 70 
  ldv_inline_asm();
  #line 67 
  ;
  #line 68 
  return (unsigned char)255U;
}

#line 71  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
u8 b43legacy_plcp_get_ratecode_cck(u8 bitrate)
{
  #line 73 
  switch ((int)bitrate) {
    #line 74 
    case 2: 
            #line 74 
    ;
    #line 75 
    return (unsigned char)10U;
    #line 76 
    case 4: 
            #line 76 
    ;
    #line 77 
    return (unsigned char)20U;
    #line 78 
    case 11: 
             #line 78 
    ;
    #line 79 
    return (unsigned char)55U;
    #line 80 
    case 22: 
             #line 80 
    ;
    #line 81 
    return (unsigned char)110U;
  }
  #line 83 
  printk((char *)"\001",(char *)"1");
  #line 84 
  ldv_inline_asm();
  #line 85 
  ldv_inline_asm();
  #line 86 
  ldv_inline_asm();
  #line 83 
  ;
  #line 84 
  return (unsigned char)0U;
}

#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
u8 b43legacy_plcp_get_ratecode_ofdm(u8 bitrate)
{
  #line 89 
  switch ((int)bitrate) {
    #line 90 
    case 12: 
             #line 90 
    ;
    #line 91 
    return (unsigned char)11U;
    #line 92 
    case 18: 
             #line 92 
    ;
    #line 93 
    return (unsigned char)15U;
    #line 94 
    case 24: 
             #line 94 
    ;
    #line 95 
    return (unsigned char)10U;
    #line 96 
    case 36: 
             #line 96 
    ;
    #line 97 
    return (unsigned char)14U;
    #line 98 
    case 48: 
             #line 98 
    ;
    #line 99 
    return (unsigned char)9U;
    #line 100 
    case 72: 
             #line 100 
    ;
    #line 101 
    return (unsigned char)13U;
    #line 102 
    case 96: 
             #line 102 
    ;
    #line 103 
    return (unsigned char)8U;
    #line 104 
    case 108: 
              #line 104 
    ;
    #line 105 
    return (unsigned char)12U;
  }
  #line 107 
  printk((char *)"\001",(char *)"1");
  #line 108 
  ldv_inline_asm();
  #line 109 
  ldv_inline_asm();
  #line 110 
  ldv_inline_asm();
  #line 107 
  ;
  #line 108 
  return (unsigned char)0U;
}

#line 111  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_generate_plcp_hdr(struct b43legacy_plcp_hdr4 *plcp, u16 octets, u8 bitrate)
{
  #line 114 
  __le32 *data = & plcp->__anonCompField_b43legacy_plcp_hdr4_211.data;
  #line 115 
  __u8 *raw = (__u8 *)(& plcp->__anonCompField_b43legacy_plcp_hdr4_211.raw);
  #line 117 
  if (b43legacy_is_ofdm_rate((int)bitrate) != 0) {
    #line 118 
    u16 d;
    #line 120 
    d = (unsigned short)b43legacy_plcp_get_ratecode_ofdm((unsigned char)((int)bitrate));
    {
      #line 121 
      int __ret_warn_on = ((int)octets & 61440) != 0;
      #line 121 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 122 
        ldv_inline_asm();
        #line 123 
        ldv_inline_asm();
      }
      #line 121 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 122 
    d = (unsigned short)(((int)octets << 5) | (int)d);
    #line 123 
    *data = (unsigned int)d;
  }
  else {
    #line 125 
    u32 plen;
    #line 127 
    plen = (unsigned int)(((int)octets * 16) / (int)bitrate);
    #line 128 
    if (((int)octets * 16) % (int)bitrate > 0) {
      #line 129 
      plen ++;
      #line 130 
      if ((unsigned int)bitrate == 22U && ((int)octets * 8) % 11 <= 3) 
        #line 132 
        *(raw + 1U) = (unsigned char)132U; else 
                                                #line 134 
                                                *(raw + 1U) = (unsigned char)4U;
    }
    else 
         #line 136 
         *(raw + 1U) = (unsigned char)4U;
    #line 137 
    *data |= plen << 16;
    #line 138 
    *raw = b43legacy_plcp_get_ratecode_cck((unsigned char)((int)bitrate));
  }
  #line 140 
  return;
}

#line 142  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
static u8 b43legacy_calc_fallback_rate(u8 bitrate)
{
  #line 144 
  switch ((int)bitrate) {
    #line 145 
    case 2: 
            #line 145 
    ;
    #line 146 
    return (unsigned char)2U;
    #line 147 
    case 4: 
            #line 147 
    ;
    #line 148 
    return (unsigned char)2U;
    #line 149 
    case 11: 
             #line 149 
    ;
    #line 150 
    return (unsigned char)4U;
    #line 151 
    case 22: 
             #line 151 
    ;
    #line 152 
    return (unsigned char)11U;
    #line 153 
    case 12: 
             #line 153 
    ;
    #line 154 
    return (unsigned char)11U;
    #line 155 
    case 18: 
             #line 155 
    ;
    #line 156 
    return (unsigned char)12U;
    #line 157 
    case 24: 
             #line 157 
    ;
    #line 158 
    return (unsigned char)18U;
    #line 159 
    case 36: 
             #line 159 
    ;
    #line 160 
    return (unsigned char)24U;
    #line 161 
    case 48: 
             #line 161 
    ;
    #line 162 
    return (unsigned char)36U;
    #line 163 
    case 72: 
             #line 163 
    ;
    #line 164 
    return (unsigned char)48U;
    #line 165 
    case 96: 
             #line 165 
    ;
    #line 166 
    return (unsigned char)72U;
    #line 167 
    case 108: 
              #line 167 
    ;
    #line 168 
    return (unsigned char)96U;
  }
  #line 170 
  printk((char *)"\001",(char *)"1");
  #line 171 
  ldv_inline_asm();
  #line 172 
  ldv_inline_asm();
  #line 173 
  ldv_inline_asm();
  #line 170 
  ;
  #line 171 
  return (unsigned char)0U;
}

#line 174  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
static int generate_txhdr_fw3(struct b43legacy_wldev *dev, struct b43legacy_txhdr_fw3 *txhdr, unsigned char *fragment_data, unsigned int fragment_len, struct ieee80211_tx_info *info, u16 cookie)
{
  #line 181 
  struct ieee80211_hdr *wlhdr;
  #line 183 
  u8 rate;
  #line 184 
  struct ieee80211_rate *rate_fb;
  #line 185 
  int rate_ofdm;
  #line 186 
  int rate_fb_ofdm;
  #line 187 
  unsigned int plcp_fragment_len;
  #line 190 
  struct ieee80211_rate *tx_rate;
  #line 191 
  struct ieee80211_tx_rate *rates;
  #line 201 
  struct ieee80211_rate *tmp_0;
  #line 182 
  int use_encryption = info->__anonCompField_ieee80211_tx_info_206.control.hw_key != (struct ieee80211_key_conf *)0;
  #line 188 
  u32 mac_ctl = 0U;
  #line 189 
  u16 phy_ctl = (unsigned short)0U;
  #line 193 
  wlhdr = (struct ieee80211_hdr *)fragment_data;
  #line 195 
  memset((void *)txhdr,0,82UL);
  #line 197 
  tx_rate = ieee80211_get_tx_rate((dev->wl)->hw,info);
  #line 199 
  rate = (unsigned char)tx_rate->hw_value;
  #line 200 
  rate_ofdm = b43legacy_is_ofdm_rate((int)rate);
  #line 201 
  tmp_0 = (struct ieee80211_rate *)(ieee80211_get_alt_retry_rate((dev->wl)->hw,info,0) != (struct ieee80211_rate *)0);
  #line 201 
  if (! tmp_0) 
               #line 201 
               tmp_0 = tx_rate;
  #line 201 
  rate_fb = tmp_0;
  #line 202 
  rate_fb_ofdm = b43legacy_is_ofdm_rate((int)rate_fb->hw_value);
  #line 204 
  txhdr->mac_frame_ctl = wlhdr->frame_control;
  #line 205 
  memcpy((void *)(& txhdr->tx_receiver),(void *)(& wlhdr->addr1),6UL);
  #line 208 
  if (((int)rate_fb->hw_value == (int)((unsigned short)rate) || ((int)wlhdr->duration_id & 32768) != 0) || (unsigned int)wlhdr->duration_id == 0U) 
    #line 214 
    txhdr->dur_fb = wlhdr->duration_id; else 
                                             #line 216 
                                             txhdr->dur_fb = ieee80211_generic_frame_duration((dev->wl)->hw,info->__anonCompField_ieee80211_tx_info_206.control.vif,(enum nl80211_band)info->band,(unsigned long)fragment_len,rate_fb);
  #line 223 
  plcp_fragment_len = fragment_len + 4U;
  #line 224 
  if (use_encryption != 0) {
    #line 226 
    struct b43legacy_key *key;
    #line 227 
    int wlhdr_len;
    #line 228 
    size_t iv_len;
    #line 225 
    u8 key_idx = (info->__anonCompField_ieee80211_tx_info_206.control.hw_key)->hw_key_idx;
    {
      #line 230 
      int __ret_warn_on = (int)dev->max_nr_keys <= (int)key_idx;
      #line 230 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 231 
        ldv_inline_asm();
        #line 232 
        ldv_inline_asm();
      }
      #line 230 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 231 
    key = & dev->key[(int)key_idx];
    #line 233 
    if ((int)key->enabled != 0) {
      #line 244 
      unsigned long __UNIQUE_ID___x561;
      #line 244 
      unsigned long tmp_3;
      #line 235 
      plcp_fragment_len = (unsigned int)(info->__anonCompField_ieee80211_tx_info_206.control.hw_key)->icv_len + plcp_fragment_len;
      #line 237 
      key_idx = b43legacy_kidx_to_fw(dev,(unsigned char)((int)key_idx));
      #line 238 
      mac_ctl = ((unsigned int)((int)key_idx << 20) & 267386880U) | mac_ctl;
      #line 240 
      mac_ctl = ((unsigned int)((int)key->algorithm << 16) & 458752U) | mac_ctl;
      #line 243 
      wlhdr_len = (int)ieee80211_hdrlen((unsigned short)((int)wlhdr->frame_control));
      {
        #line 244 
        __UNIQUE_ID___x561 = (unsigned long)(info->__anonCompField_ieee80211_tx_info_206.control.hw_key)->iv_len;
        #line 244 
        unsigned long __UNIQUE_ID___y562 = 16UL;
        #line 244 
        if (__UNIQUE_ID___x561 < __UNIQUE_ID___y562) 
                                                     #line 244 
                                                     tmp_3 = __UNIQUE_ID___x561; else 
                                                                    #line 244 
                                                                    tmp_3 = __UNIQUE_ID___y562;
        }
      #line 244 
      iv_len = tmp_3;
      #line 246 
      memcpy((void *)(& txhdr->iv),(void *)((u8 *)wlhdr + (unsigned long)wlhdr_len),iv_len);
    }
    else 
         #line 253 
         return -126;
  }
  #line 256 
  b43legacy_generate_plcp_hdr((struct b43legacy_plcp_hdr4 *)(& txhdr->plcp),(unsigned short)((int)((unsigned short)plcp_fragment_len)),(unsigned char)((int)rate));
  #line 259 
  b43legacy_generate_plcp_hdr(& txhdr->plcp_fb,(unsigned short)((int)((unsigned short)plcp_fragment_len)),(unsigned char)((int)((unsigned char)rate_fb->hw_value)));
  #line 263 
  if (rate_ofdm != 0) 
                      #line 264 
                      phy_ctl = (unsigned short)((unsigned int)phy_ctl | 1U);
  #line 265 
  if (((int)info->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rates[0].flags & 4) != 0) 
    #line 266 
    phy_ctl = (unsigned short)((unsigned int)phy_ctl | 16U);
  #line 267 
  phy_ctl = (unsigned short)((unsigned int)phy_ctl | 768U);
  #line 270 
  rates = (struct ieee80211_tx_rate *)(& info->__anonCompField_ieee80211_tx_info_206.control.__anonCompField___anonstruct_control_1025_204.__anonCompField___anonunion_1026_203.rates);
  #line 271 
  if ((info->flags & 4U) == 0U) 
                                #line 272 
                                mac_ctl |= 1U;
  #line 273 
  if ((info->flags & 2U) != 0U) 
                                #line 274 
                                mac_ctl |= 16U;
  #line 275 
  if ((info->flags & 16U) != 0U) 
                                 #line 276 
                                 mac_ctl |= 8U;
  #line 277 
  if (rate_fb_ofdm != 0) 
                         #line 278 
                         mac_ctl |= 256U;
  #line 284 
  if (((int)rates->flags & 1) != 0 || (int)rates->count <= (int)((dev->wl)->hw)->conf.long_frame_max_tx_count) {
    #line 286 
    rates->count = (unsigned short)((dev->wl)->hw)->conf.long_frame_max_tx_count;
    #line 287 
    mac_ctl |= 2U;
  }
  else 
       #line 289 
       rates->count = (unsigned short)((dev->wl)->hw)->conf.short_frame_max_tx_count;
  #line 293 
  if (((int)rates->flags & 1) != 0 || ((int)rates->flags & 2) != 0) {
    #line 295 
    unsigned int len;
    #line 296 
    struct ieee80211_hdr *hdr;
    #line 297 
    int rts_rate;
    #line 298 
    int rts_rate_fb;
    #line 299 
    int rts_rate_fb_ofdm;
    #line 301 
    rts_rate = (int)ieee80211_get_rts_cts_rate((dev->wl)->hw,info)->hw_value;
    #line 302 
    rts_rate_fb = (int)b43legacy_calc_fallback_rate((unsigned char)((int)((unsigned char)rts_rate)));
    #line 303 
    rts_rate_fb_ofdm = b43legacy_is_ofdm_rate(rts_rate_fb);
    #line 304 
    if (rts_rate_fb_ofdm != 0) 
                               #line 305 
                               mac_ctl |= 512U;
    #line 307 
    if (((int)rates->flags & 2) != 0) {
      #line 308 
      ieee80211_ctstoself_get((dev->wl)->hw,info->__anonCompField_ieee80211_tx_info_206.control.vif,(void *)fragment_data,(unsigned long)fragment_len,info,(struct ieee80211_cts *)(& txhdr->rts_frame));
      #line 314 
      mac_ctl |= 1024U;
      #line 315 
      len = 10U;
    }
    else {
      #line 317 
      ieee80211_rts_get((dev->wl)->hw,info->__anonCompField_ieee80211_tx_info_206.control.vif,(void *)fragment_data,(unsigned long)fragment_len,info,(struct ieee80211_rts *)(& txhdr->rts_frame));
      #line 322 
      mac_ctl |= 4U;
      #line 323 
      len = 16U;
    }
    #line 325 
    len += 4U;
    #line 326 
    b43legacy_generate_plcp_hdr((struct b43legacy_plcp_hdr4 *)(& txhdr->rts_plcp),(unsigned short)((int)((unsigned short)len)),(unsigned char)((int)((unsigned char)rts_rate)));
    #line 329 
    b43legacy_generate_plcp_hdr(& txhdr->rts_plcp_fb,(unsigned short)((int)((unsigned short)len)),(unsigned char)((int)((unsigned char)rts_rate_fb)));
    #line 331 
    hdr = (struct ieee80211_hdr *)(& txhdr->rts_frame);
    #line 332 
    txhdr->rts_dur_fb = hdr->duration_id;
  }
  #line 336 
  txhdr->cookie = cookie;
  #line 339 
  txhdr->mac_ctl = mac_ctl;
  #line 340 
  txhdr->phy_ctl = phy_ctl;
  #line 342 
  return 0;
}

#line 345  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
int b43legacy_generate_txhdr(struct b43legacy_wldev *dev, u8 *txhdr, unsigned char *fragment_data, unsigned int fragment_len, struct ieee80211_tx_info *info, u16 cookie)
{
  #line 352 
  return generate_txhdr_fw3(dev,(struct b43legacy_txhdr_fw3 *)txhdr,
                         fragment_data,fragment_len,info,
                         (unsigned short)((int)cookie));
}

#line 357  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
static s8 b43legacy_rssi_postprocess(struct b43legacy_wldev *dev, u8 in_rssi, int ofdm, int adjust_2053, int adjust_2050)
{
  #line 362 
  s32 tmp;
  #line 361 
  struct b43legacy_phy *phy = & dev->phy;
  #line 364 
  switch ((int)phy->radio_ver) {
    #line 365 
    case 8272: 
               #line 365 
    ;
    #line 366 
    if (ofdm != 0) {
      #line 367 
      tmp = (int)in_rssi;
      #line 368 
      if (tmp > 127) 
                     #line 369 
                     tmp += -256;
      #line 370 
      tmp *= 73;
      #line 371 
      tmp /= 64;
      #line 372 
      if (adjust_2050 != 0) 
                            #line 373 
                            tmp += 25; else 
                                            #line 375 
                                            tmp += -3;
    }
    else {
      #line 377 
      if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) != 0) {
        #line 379 
        if ((unsigned int)in_rssi > 63U) 
                                         #line 380 
                                         in_rssi = (unsigned char)63U;
        #line 381 
        tmp = (int)phy->nrssi_lt[(int)in_rssi];
        #line 382 
        tmp = 31 - tmp;
        #line 383 
        tmp *= -131;
        #line 384 
        tmp /= 128;
        #line 385 
        tmp += -57;
      }
      else {
        #line 387 
        tmp = (int)in_rssi;
        #line 388 
        tmp = 31 - tmp;
        #line 389 
        tmp *= -149;
        #line 390 
        tmp /= 128;
        #line 391 
        tmp += -68;
      }
      #line 393 
      if ((unsigned int)phy->type == 2U && adjust_2050 != 0) 
                                                             #line 395 
                                                             tmp += 25;
    }
    #line 397 
    break;
    #line 398 
    case 8288: 
               #line 398 
    ;
    #line 399 
    if ((int)in_rssi < 0) 
                          #line 400 
                          tmp = (int)in_rssi + -256; else 
                                                          #line 402 
                                                          tmp = (int)in_rssi;
    #line 403 
    break;
    #line 404 
    default: 
             #line 404 
    ;
    #line 405 
    tmp = (int)in_rssi;
    #line 406 
    tmp += -11;
    #line 407 
    tmp *= 103;
    #line 408 
    tmp /= 64;
    #line 409 
    if (adjust_2053 != 0) 
                          #line 410 
                          tmp += -109; else 
                                            #line 412 
                                            tmp += -83;
  }
  #line 415 
  return (signed char)tmp;
}

#line 418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_rx(struct b43legacy_wldev *dev, struct sk_buff *skb, void *_rxhdr)
{
  #line 422 
  struct ieee80211_rx_status status;
  #line 423 
  struct b43legacy_plcp_hdr6 *plcp;
  #line 424 
  struct ieee80211_hdr *wlhdr;
  #line 426 
  __le16 fctl;
  #line 427 
  u16 phystat0;
  #line 428 
  u16 phystat3;
  #line 429 
  u16 chanstat;
  #line 430 
  u16 mactime;
  #line 431 
  u32 macstat;
  #line 432 
  u16 chanid;
  #line 433 
  u8 jssi;
  #line 434 
  int padding;
  #line 425 
  struct b43legacy_rxhdr_fw3 *rxhdr = (struct b43legacy_rxhdr_fw3 *)_rxhdr;
  #line 436 
  memset((void *)(& status),0,48UL);
  #line 439 
  phystat0 = rxhdr->phy_status0;
  #line 440 
  phystat3 = rxhdr->phy_status3;
  #line 441 
  jssi = rxhdr->jssi;
  #line 442 
  macstat = (unsigned int)rxhdr->mac_status;
  #line 443 
  mactime = rxhdr->mac_time;
  #line 444 
  chanstat = rxhdr->channel;
  #line 446 
  if ((macstat & 1U) != 0U) 
                            #line 447 
                            ((dev->wl)->ieee_stats.dot11FCSErrorCount) ++;
  #line 450 
  padding = (int)(macstat >> 1) & 2;
  #line 451 
  if ((long)((unsigned long)skb->len < (unsigned long)padding + 6UL) != 0L) {
    #line 453 
    b43legacydbg(dev->wl,(char *)"RX: Packet size underrun (1)\n");
    #line 454 
    goto drop;
  }
  #line 456 
  plcp = (struct b43legacy_plcp_hdr6 *)(skb->data + (unsigned long)padding);
  #line 457 
  skb_pull(skb,(unsigned int)padding + 6U);
  #line 459 
  if ((long)(skb->len <= 13U) != 0L) {
    #line 460 
    b43legacydbg(dev->wl,(char *)"RX: Packet size underrun (2)\n");
    #line 461 
    goto drop;
  }
  #line 463 
  wlhdr = (struct ieee80211_hdr *)skb->data;
  #line 464 
  fctl = wlhdr->frame_control;
  #line 466 
  if ((macstat & 8U) != 0U && (macstat & 16U) == 0U) {
    #line 468 
    unsigned int keyidx;
    #line 469 
    int wlhdr_len;
    #line 470 
    int iv_len;
    #line 471 
    int icv_len;
    #line 473 
    keyidx = (macstat >> 5) & 63U;
    #line 478 
    keyidx = (unsigned int)b43legacy_kidx_to_raw(dev,
                            (unsigned char)((int)((unsigned char)keyidx)));
    {
      #line 479 
      int __ret_warn_on = (unsigned int)dev->max_nr_keys <= keyidx;
      #line 479 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 480 
        ldv_inline_asm();
        #line 481 
        ldv_inline_asm();
      }
      #line 479 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 481 
    if ((unsigned int)dev->key[keyidx].algorithm != 0U) {
      {
        #line 483 
        int tmp_1;
        #line 483 
        if (ieee80211_has_protected((unsigned short)((int)fctl))) 
                                                                  #line 483 
                                                                  tmp_1 = 0; else 
                                                                    #line 483 
                                                                    tmp_1 = 1;
        #line 483 
        int __ret_warn_on_0 = tmp_1;
        #line 483 
        if ((long)(__ret_warn_on_0 != 0) != 0L) {
          #line 484 
          ldv_inline_asm();
          #line 485 
          ldv_inline_asm();
        }
        #line 483 
        long tmp_4 = (long)(__ret_warn_on_0 != 0);
      }
      #line 484 
      fctl = (unsigned short)((unsigned int)fctl & 49151U);
      #line 485 
      wlhdr->frame_control = fctl;
      #line 487 
      wlhdr_len = (int)ieee80211_hdrlen((unsigned short)((int)fctl));
      #line 488 
      if ((long)(skb->len < (unsigned int)(wlhdr_len + 3)) != 0L) {
        #line 489 
        b43legacydbg(dev->wl,(char *)"RX: Packet size");
        #line 491 
        goto drop;
      }
      #line 493 
      if (((int)*(skb->data + ((unsigned long)wlhdr_len + (unsigned long)3U)) & 32) != 0) {
        #line 497 
        iv_len = 8;
        #line 498 
        icv_len = 8;
      }
      else {
        #line 500 
        iv_len = 4;
        #line 501 
        icv_len = 4;
      }
      #line 503 
      if ((long)(skb->len < (unsigned int)((wlhdr_len + iv_len) + icv_len)) != 0L) {
        #line 505 
        b43legacydbg(dev->wl,(char *)"RX: Packet size");
        #line 507 
        goto drop;
      }
      #line 510 
      __memmove((void *)(skb->data + (unsigned long)iv_len),(void *)skb->data,(unsigned long)wlhdr_len);
      #line 511 
      skb_pull(skb,(unsigned int)iv_len);
      #line 513 
      skb_trim(skb,skb->len - (unsigned int)icv_len);
      #line 515 
      status.flag |= 2U;
    }
  }
  #line 519 
  status.signal = b43legacy_rssi_postprocess(dev,(unsigned char)((int)jssi),(int)phystat0 & 1,(int)phystat0 & 16384,(int)phystat3 & 1024);
  #line 524 
  if (((int)phystat0 & 1) != 0) 
                                #line 525 
                                status.rate_idx = b43legacy_plcp_get_bitrate_idx_ofdm(plcp,(_Bool)0); else 
                                                                    #line 527 
                                                                    status.rate_idx = b43legacy_plcp_get_bitrate_idx_cck(plcp);
  #line 528 
  status.antenna = (unsigned char)(((int)phystat0 & 32) != 0);
  #line 538 
  if ((int)ieee80211_is_beacon((unsigned short)((int)fctl)) != 0) 
                                                                  #line 538 
                                                                  goto _LOR;
  else 
    #line 538 
    if ((int)(dev->wl)->radiotap_enabled != 0) {
      #line 538 
      _LOR: {
              #line 539 
              u16 low_mactime_now;
              #line 541 
              b43legacy_tsf_read(dev,& status.mactime);
              #line 542 
              low_mactime_now = (unsigned short)status.mactime;
              #line 543 
              status.mactime &= 18446744073709486080ULL;
              #line 544 
              status.mactime += (unsigned long long)mactime;
              #line 545 
              if ((int)low_mactime_now <= (int)mactime) 
                                                        #line 546 
                                                        status.mactime += 18446744073709486080ULL;
              #line 547 
              status.flag |= 128U;
            }
    }
  #line 550 
  chanid = (unsigned short)((unsigned int)((unsigned short)((int)chanstat >> 2)) & 255U);
  #line 552 
  switch ((int)chanstat & 3) {
    #line 553 
    case 1: 
            #line 553 
    ;
    #line 554 
    case 2: 
            #line 554 
    ;
    #line 555 
    status.band = (unsigned char)0U;
    #line 556 
    status.freq = (unsigned short)((unsigned int)chanid + 2400U);
    #line 557 
    break;
    #line 558 
    default: 
             #line 558 
    ;
    #line 559 
    b43legacywarn(dev->wl,(char *)"Unexpected value for chanstat (0x%X)\n",(int)chanstat);
  }
  #line 563 
  memcpy((void *)IEEE80211_SKB_RXCB(skb),(void *)(& status),48UL);
  #line 564 
  ieee80211_rx_irqsafe((dev->wl)->hw,skb);
  #line 566 
  return;
  #line 567 
  drop: 
        #line 567 
  ;
  #line 568 
  b43legacydbg(dev->wl,(char *)"RX: Packet dropped\n");
  #line 569 
  dev_kfree_skb_any(skb);
  #line 570 
  return;
}

#line 572  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_handle_txstatus(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status)
{
  #line 575 
  b43legacy_debugfs_log_txstat(dev,status);
  #line 577 
  if ((unsigned int)status->intermediate != 0U) 
                                                #line 578 
                                                return;
  #line 579 
  if ((unsigned int)status->for_ampdu != 0U) 
                                             #line 580 
                                             return;
  #line 581 
  if ((unsigned int)status->acked == 0U) 
                                         #line 582 
                                         ((dev->wl)->ieee_stats.dot11ACKFailureCount) ++;
  #line 583 
  if ((unsigned int)status->rts_count != 0U) 
    #line 584 
    if ((unsigned int)status->rts_count == 15U) 
                                                #line 585 
                                                ((dev->wl)->ieee_stats.dot11RTSFailureCount) ++; else 
                                                                    #line 587 
                                                                    ((dev->wl)->ieee_stats.dot11RTSSuccessCount) ++;
  #line 590 
  if (b43legacy_using_pio(dev) != 0) 
                                     #line 591 
                                     b43legacy_pio_handle_txstatus(dev,status); else 
                                                                    #line 593 
                                                                    b43legacy_dma_handle_txstatus(dev,status);
  #line 594 
  return;
}

#line 597  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_handle_hwtxstatus(struct b43legacy_wldev *dev, struct b43legacy_hwtxstatus *hw)
{
  #line 600 
  struct b43legacy_txstatus status;
  #line 601 
  u8 tmp;
  #line 603 
  status.cookie = hw->cookie;
  #line 604 
  status.seq = hw->seq;
  #line 605 
  status.phy_stat = hw->phy_stat;
  #line 606 
  tmp = hw->count;
  #line 607 
  status.frame_count = (unsigned char)((int)tmp >> 4);
  #line 608 
  status.rts_count = (unsigned char)((unsigned int)tmp & 15U);
  #line 609 
  tmp = (unsigned char)((int)hw->flags << 1U);
  #line 610 
  status.supp_reason = (unsigned char)((unsigned int)((unsigned char)((int)tmp >> 2)) & 7U);
  #line 611 
  status.pm_indicated = (unsigned char)(((int)tmp & 128) != 0);
  #line 612 
  status.intermediate = (unsigned char)(((int)tmp & 64) != 0);
  #line 613 
  status.for_ampdu = (unsigned char)(((int)tmp & 32) != 0);
  #line 614 
  status.acked = (unsigned char)(((int)tmp & 2) != 0);
  #line 616 
  b43legacy_handle_txstatus(dev,& status);
  #line 617 
  return;
}

#line 620  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_tx_suspend(struct b43legacy_wldev *dev)
{
  #line 622 
  if (b43legacy_using_pio(dev) != 0) 
                                     #line 623 
                                     b43legacy_pio_freeze_txqueues(dev); else 
                                                                    #line 625 
                                                                    b43legacy_dma_tx_suspend(dev);
  #line 626 
  return;
}

#line 629  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_tx_resume(struct b43legacy_wldev *dev)
{
  #line 631 
  if (b43legacy_using_pio(dev) != 0) 
                                     #line 632 
                                     b43legacy_pio_thaw_txqueues(dev); else 
                                                                    #line 634 
                                                                    b43legacy_dma_tx_resume(dev);
  #line 635 
  return;
}

#line 638  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/xmit.c"
void b43legacy_qos_init(struct b43legacy_wldev *dev)
{
  #line 642 
  return;
  #line 644 
  ;
  #line 644 
  b43legacy_hf_write(dev,b43legacy_hf_read(dev) | 256U);
  #line 646 
  ;
  #line 646 
  b43legacy_write16(dev,(unsigned short)1672,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)1672) | 4U)));
}

/* compiler builtin: 
   unsigned long __builtin_object_size(void *, int);   */
#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  #line 368 
  int bitpos = -1;
  #line 369 
  ldv_inline_asm();
  #line 377 
  return bitpos + 1;
}

#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/log2.h"
__inline static int __ilog2_u64(u64 n)
{
  #line 32 
  return fls64(n) + -1;
}

#line 487  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 487 
int sscanf(char *, char * , ...);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size)
{
  #line 31 
  if (0 != 0) {
    #line 38 
    int tmp_8;
    #line 38 
    int tmp_40;
    #line 38 
    int tmp_41;
    #line 38 
    int tmp_9;
    #line 38 
    int tmp_10;
    #line 38 
    int tmp_42;
    #line 38 
    int tmp_43;
    #line 38 
    int tmp_11;
    #line 38 
    int tmp_12;
    #line 38 
    int tmp_44;
    #line 38 
    int tmp_45;
    #line 38 
    int tmp_13;
    #line 38 
    int tmp_14;
    #line 38 
    int tmp_46;
    #line 38 
    int tmp_47;
    #line 38 
    int tmp_15;
    #line 38 
    int tmp_16;
    #line 38 
    int tmp_48;
    #line 38 
    int tmp_49;
    #line 38 
    int tmp_17;
    #line 38 
    int tmp_18;
    #line 38 
    int tmp_50;
    #line 38 
    int tmp_51;
    #line 38 
    int tmp_19;
    #line 38 
    int tmp_20;
    #line 38 
    int tmp_52;
    #line 38 
    int tmp_53;
    #line 38 
    int tmp_21;
    #line 38 
    int tmp_22;
    #line 38 
    int tmp_54;
    #line 38 
    int tmp_55;
    #line 38 
    int tmp_23;
    #line 38 
    int tmp_24;
    #line 38 
    int tmp_56;
    #line 38 
    int tmp_57;
    #line 38 
    int tmp_25;
    #line 38 
    int tmp_26;
    #line 38 
    int tmp_58;
    #line 38 
    int tmp_59;
    #line 38 
    int tmp_27;
    #line 38 
    int tmp_28;
    #line 38 
    int tmp_60;
    #line 38 
    int tmp_61;
    #line 38 
    int tmp_29;
    #line 38 
    int tmp_30;
    #line 38 
    int tmp_31;
    #line 38 
    int tmp;
    #line 38 
    int tmp_0;
    #line 38 
    int tmp_32;
    #line 38 
    int tmp_33;
    #line 38 
    int tmp_1;
    #line 38 
    int tmp_2;
    #line 38 
    int tmp_34;
    #line 38 
    int tmp_35;
    #line 38 
    int tmp_3;
    #line 38 
    int tmp_4;
    #line 38 
    int tmp_36;
    #line 38 
    int tmp_37;
    #line 38 
    int tmp_5;
    #line 38 
    int tmp_6;
    #line 38 
    int tmp_38;
    #line 38 
    int tmp_39;
    #line 38 
    int tmp_7;
    #line 38 
    int tmp_63;
    #line 32 
    if (size == 0UL) 
                     #line 33 
                     return 52;
    #line 35 
    if (size <= 4095UL) 
                        #line 36 
                        return 0;
    #line 38 
    if (0 != 0) {
      #line 38 
      if (size + 18446744073709551615UL > 1UL) {
        #line 38 
        if (((unsigned long long)(size + 18446744073709551615UL) & 9223372036854775808ULL) == 0ULL) {
          #line 38 
          if (((unsigned long long)(size + 18446744073709551615UL) & 4611686018427387904ULL) == 0ULL) {
            #line 38 
            if (((unsigned long long)(size + 18446744073709551615UL) & 2305843009213693952ULL) == 0ULL) {
              #line 38 
              if (((unsigned long long)(size + 18446744073709551615UL) & 1152921504606846976ULL) == 0ULL) {
                #line 38 
                if (((unsigned long long)(size + 18446744073709551615UL) & 576460752303423488ULL) == 0ULL) {
                  #line 38 
                  if (((unsigned long long)(size + 18446744073709551615UL) & 288230376151711744ULL) == 0ULL) {
                    #line 38 
                    if (((unsigned long long)(size + 18446744073709551615UL) & 144115188075855872ULL) == 0ULL) {
                      #line 38 
                      if (((unsigned long long)(size + 18446744073709551615UL) & 72057594037927936ULL) == 0ULL) {
                        #line 38 
                        if (((unsigned long long)(size + 18446744073709551615UL) & 36028797018963968ULL) == 0ULL) {
                          #line 38 
                          if (((unsigned long long)(size + 18446744073709551615UL) & 18014398509481984ULL) == 0ULL) {
                            #line 38 
                            if (((unsigned long long)(size + 18446744073709551615UL) & 9007199254740992ULL) == 0ULL) {
                              #line 38 
                              if (((unsigned long long)(size + 18446744073709551615UL) & 4503599627370496ULL) == 0ULL) {
                                #line 38 
                                if (((unsigned long long)(size + 18446744073709551615UL) & 2251799813685248ULL) == 0ULL) {
                                  #line 38 
                                  if (((unsigned long long)(size + 18446744073709551615UL) & 1125899906842624ULL) == 0ULL) {
                                    #line 38 
                                    if (((unsigned long long)(size + 18446744073709551615UL) & 562949953421312ULL) == 0ULL) {
                                      #line 38 
                                      if (((unsigned long long)(size + 18446744073709551615UL) & 281474976710656ULL) == 0ULL) {
                                        #line 38 
                                        if (((unsigned long long)(size + 18446744073709551615UL) & 140737488355328ULL) == 0ULL) {
                                          #line 38 
                                          if (((unsigned long long)(size + 18446744073709551615UL) & 70368744177664ULL) == 0ULL) {
                                            #line 38 
                                            if (((unsigned long long)(size + 18446744073709551615UL) & 35184372088832ULL) == 0ULL) {
                                              #line 38 
                                              if (((unsigned long long)(size + 18446744073709551615UL) & 17592186044416ULL) == 0ULL) {
                                                #line 38 
                                                if (((unsigned long long)(size + 18446744073709551615UL) & 8796093022208ULL) == 0ULL) {
                                                  #line 38 
                                                  if (((unsigned long long)(size + 18446744073709551615UL) & 4398046511104ULL) == 0ULL) {
                                                    #line 38 
                                                    if (((unsigned long long)(size + 18446744073709551615UL) & 2199023255552ULL) == 0ULL) {
                                                      #line 38 
                                                      if (((unsigned long long)(size + 18446744073709551615UL) & 1099511627776ULL) == 0ULL) {
                                                        #line 38 
                                                        if (((unsigned long long)(size + 18446744073709551615UL) & 549755813888ULL) == 0ULL) {
                                                          #line 38 
                                                          if (((unsigned long long)(size + 18446744073709551615UL) & 274877906944ULL) == 0ULL) {
                                                            #line 38 
                                                            if (((unsigned long long)(size + 18446744073709551615UL) & 137438953472ULL) == 0ULL) {
                                                              #line 38 
                                                              if (((unsigned long long)(size + 18446744073709551615UL) & 68719476736ULL) == 0ULL) {
                                                                #line 38 
                                                                if (((unsigned long long)(size + 18446744073709551615UL) & 34359738368ULL) == 0ULL) {
                                                                  #line 38 
                                                                  if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 17179869184ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8589934592ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4294967296ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2147483648ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1073741824ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 536870912ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 268435456ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 134217728ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 67108864ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 33554432ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16777216ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8388608ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4194304ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2097152ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1048576ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 524288ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 262144ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 131072ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 65536ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32768ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16384ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8192ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4096ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 2048ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 1024ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 512ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 256ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 128ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 64ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 32ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 16ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 8ULL) == 0ULL) {
                                                                    #line 38 
                                                                    if (
                                                                    ((unsigned long long)(size + 18446744073709551615UL) & 4ULL) != 0ULL) 
                                                                    #line 38 
                                                                    tmp = -9; else 
                                                                    #line 38 
                                                                    tmp = -10;
                                                                    #line 38 
                                                                    tmp_0 = tmp;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_0 = -8;
                                                                    #line 38 
                                                                    tmp_1 = tmp_0;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_1 = -7;
                                                                    #line 38 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_2 = -6;
                                                                    #line 38 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_3 = -5;
                                                                    #line 38 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_4 = -4;
                                                                    #line 38 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_5 = -3;
                                                                    #line 38 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_6 = -2;
                                                                    #line 38 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_7 = -1;
                                                                    #line 38 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_8 = 0;
                                                                    #line 38 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_9 = 1;
                                                                    #line 38 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_10 = 2;
                                                                    #line 38 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_11 = 3;
                                                                    #line 38 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_12 = 4;
                                                                    #line 38 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_13 = 5;
                                                                    #line 38 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_14 = 6;
                                                                    #line 38 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_15 = 7;
                                                                    #line 38 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_16 = 8;
                                                                    #line 38 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_17 = 9;
                                                                    #line 38 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_18 = 10;
                                                                    #line 38 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_19 = 11;
                                                                    #line 38 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_20 = 12;
                                                                    #line 38 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_21 = 13;
                                                                    #line 38 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_22 = 14;
                                                                    #line 38 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_23 = 15;
                                                                    #line 38 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_24 = 16;
                                                                    #line 38 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_25 = 17;
                                                                    #line 38 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_26 = 18;
                                                                    #line 38 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_27 = 19;
                                                                    #line 38 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_28 = 20;
                                                                    #line 38 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_29 = 21;
                                                                    #line 38 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    #line 38 
                                                                    tmp_30 = 22;
                                                                    #line 38 
                                                                    tmp_31 = tmp_30;
                                                                  }
                                                                  else 
                                                                    #line 38 
                                                                    tmp_31 = 23;
                                                                  #line 38 
                                                                  tmp_32 = tmp_31;
                                                                }
                                                                else 
                                                                  #line 38 
                                                                  tmp_32 = 24;
                                                                #line 38 
                                                                tmp_33 = tmp_32;
                                                              }
                                                              else 
                                                                   #line 38 
                                                                   tmp_33 = 25;
                                                              #line 38 
                                                              tmp_34 = tmp_33;
                                                            }
                                                            else 
                                                                 #line 38 
                                                                 tmp_34 = 26;
                                                            #line 38 
                                                            tmp_35 = tmp_34;
                                                          }
                                                          else 
                                                               #line 38 
                                                               tmp_35 = 27;
                                                          #line 38 
                                                          tmp_36 = tmp_35;
                                                        }
                                                        else 
                                                             #line 38 
                                                             tmp_36 = 28;
                                                        #line 38 
                                                        tmp_37 = tmp_36;
                                                      }
                                                      else 
                                                           #line 38 
                                                           tmp_37 = 29;
                                                      #line 38 
                                                      tmp_38 = tmp_37;
                                                    }
                                                    else 
                                                         #line 38 
                                                         tmp_38 = 30;
                                                    #line 38 
                                                    tmp_39 = tmp_38;
                                                  }
                                                  else 
                                                       #line 38 
                                                       tmp_39 = 31;
                                                  #line 38 
                                                  tmp_40 = tmp_39;
                                                }
                                                else 
                                                     #line 38 
                                                     tmp_40 = 32;
                                                #line 38 
                                                tmp_41 = tmp_40;
                                              }
                                              else 
                                                   #line 38 
                                                   tmp_41 = 33;
                                              #line 38 
                                              tmp_42 = tmp_41;
                                            }
                                            else 
                                                 #line 38 
                                                 tmp_42 = 34;
                                            #line 38 
                                            tmp_43 = tmp_42;
                                          }
                                          else 
                                               #line 38 
                                               tmp_43 = 35;
                                          #line 38 
                                          tmp_44 = tmp_43;
                                        }
                                        else 
                                             #line 38 
                                             tmp_44 = 36;
                                        #line 38 
                                        tmp_45 = tmp_44;
                                      }
                                      else 
                                           #line 38 
                                           tmp_45 = 37;
                                      #line 38 
                                      tmp_46 = tmp_45;
                                    }
                                    else 
                                         #line 38 
                                         tmp_46 = 38;
                                    #line 38 
                                    tmp_47 = tmp_46;
                                  }
                                  else 
                                       #line 38 
                                       tmp_47 = 39;
                                  #line 38 
                                  tmp_48 = tmp_47;
                                }
                                else 
                                     #line 38 
                                     tmp_48 = 40;
                                #line 38 
                                tmp_49 = tmp_48;
                              }
                              else 
                                   #line 38 
                                   tmp_49 = 41;
                              #line 38 
                              tmp_50 = tmp_49;
                            }
                            else 
                                 #line 38 
                                 tmp_50 = 42;
                            #line 38 
                            tmp_51 = tmp_50;
                          }
                          else 
                               #line 38 
                               tmp_51 = 43;
                          #line 38 
                          tmp_52 = tmp_51;
                        }
                        else 
                             #line 38 
                             tmp_52 = 44;
                        #line 38 
                        tmp_53 = tmp_52;
                      }
                      else 
                           #line 38 
                           tmp_53 = 45;
                      #line 38 
                      tmp_54 = tmp_53;
                    }
                    else 
                         #line 38 
                         tmp_54 = 46;
                    #line 38 
                    tmp_55 = tmp_54;
                  }
                  else 
                       #line 38 
                       tmp_55 = 47;
                  #line 38 
                  tmp_56 = tmp_55;
                }
                else 
                     #line 38 
                     tmp_56 = 48;
                #line 38 
                tmp_57 = tmp_56;
              }
              else 
                   #line 38 
                   tmp_57 = 49;
              #line 38 
              tmp_58 = tmp_57;
            }
            else 
                 #line 38 
                 tmp_58 = 50;
            #line 38 
            tmp_59 = tmp_58;
          }
          else 
               #line 38 
               tmp_59 = 51;
          #line 38 
          tmp_60 = tmp_59;
        }
        else 
             #line 38 
             tmp_60 = 52;
        #line 38 
        tmp_61 = tmp_60;
      }
      else 
           #line 38 
           tmp_61 = -11;
      #line 38 
      tmp_63 = tmp_61;
    }
    else {
      #line 38 
      tmp_63 = __ilog2_u64((unsigned long long)(size + 18446744073709551615UL)) + -11;
    }
    #line 38 
    return tmp_63;
  }
  #line 41 
  size --;
  #line 42 
  size >>= 12;
  #line 46 
  return fls64((unsigned long long)size);
}

#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_2(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_6384 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_2(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_2(v);
}

#line 112  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
#line 112 
void __check_object_size(void *, unsigned long, bool);
#line 115  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void check_object_size(void *ptr, unsigned long n, bool to_user)
{
  #line 118 
  if (0 == 0) 
              #line 119 
              __check_object_size(ptr,n,(_Bool)((bool)((int)to_user) != 0));
  #line 120 
  return;
}

#line 128 
#line 128 
void __bad_copy_from(void);
#line 130 
#line 130 
void __bad_copy_to(void);
#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static void copy_overflow(int size, unsigned long count)
{
  #line 134 
  int __ret_warn_on = 1;
  #line 134 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 134 
    __warn_printk((char *)"Buffer overflow detected (%d < %lu)!\n",size,count);
    #line 135 
    ldv_inline_asm();
    #line 136 
    ldv_inline_asm();
  }
  #line 134 
  long tmp = (long)(__ret_warn_on != 0);
  #line 136 
  return;
}

#line 138  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/thread_info.h"
__inline static bool check_copy_size(void *addr, size_t bytes, bool is_source)
{
  #line 150 
  int __ret_warn_on;
  #line 140 
  int sz = (int)__builtin_object_size(addr,0);
  #line 141 
  if ((long)(sz >= 0) != 0L && (long)((unsigned long)sz < bytes) != 0L) {
    #line 142 
    if (0 == 0) 
                #line 143 
                copy_overflow(sz,bytes);
    else 
      #line 144 
      if ((int)is_source != 0) 
                               #line 145 
                               __bad_copy_from(); else 
                                                       #line 147 
                                                       __bad_copy_to();
    #line 148 
    return (_Bool)0;
  }
  #line 150 
  __ret_warn_on = bytes > 2147483647UL;
  #line 150 
  if ((long)(__ret_warn_on != 0) != 0L) {
    #line 151 
    ldv_inline_asm();
    #line 152 
    ldv_inline_asm();
  }
  #line 150 
  if ((long)((long)(__ret_warn_on != 0)) != 0L) 
                                                #line 151 
                                                return (_Bool)0;
  #line 152 
  check_object_size(addr,bytes,(_Bool)((bool)((int)is_source) != 0));
  #line 153 
  return (_Bool)1;
}

#line 336  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  #line 338 
  _raw_spin_lock(& lock->__anonCompField_spinlock_25.rlock);
  #line 339 
  return;
}

#line 340 
#line 893  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_lock_lock_of_b43legacy_txstatus_log(spinlock_t *lock);
#line 361  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_lock_irq_0(spinlock_t *lock)
{
  #line 363 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 364 
  return;
}

#line 365 
#line 844  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_lock_irq_irq_lock_of_b43legacy_wl_0(spinlock_t *lock);
#line 376  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  #line 378 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_25.rlock);
  #line 379 
  return;
}

#line 380 
#line 902  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_unlock_lock_of_b43legacy_txstatus_log(spinlock_t *lock);
#line 386  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irq_0(spinlock_t *lock)
{
  #line 388 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_25.rlock);
  #line 389 
  return;
}

#line 390 
#line 853  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_unlock_irq_irq_lock_of_b43legacy_wl_0(spinlock_t *lock);
#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_2(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_b43legacy_txstatus_log(spinlock_t *lock, unsigned long flags);
#line 26 
#line 837 
static void cif_mutex_lock_mutex_of_b43legacy_wl_2(struct mutex *lock);
#line 35 
#line 819 
static void cif___ldv_spin_lock_lock_of_b43legacy_txstatus_log(spinlock_t *lock);
#line 185  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/mutex.h"
#line 862  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl_2(struct mutex *lock);
#line 553  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/gfp.h"
#line 553 
unsigned long __get_free_pages(gfp_t, unsigned int);
#line 554 
#line 554 
unsigned long get_zeroed_page(gfp_t);
#line 567 
#line 567 
void free_pages(unsigned long, unsigned int);
#line 3135  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/fs.h"
#line 3135 
loff_t generic_file_llseek(struct file *, loff_t, int);
#line 3300 
#line 3300 
int simple_open(struct inode *, struct file *);
#line 3337 
#line 3337 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void *, size_t);
#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 885  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops);
#line 76  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 877  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent);
#line 86  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 869  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_debugfs_remove(struct dentry *dentry);
#line 87  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/debugfs.h"
#line 87 
struct file_operations *debugfs_real_fops(struct file *);
#line 122 
#line 122 
struct dentry *debugfs_create_bool(char *, umode_t, struct dentry *, bool *);
#line 121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
#line 121 
unsigned long _copy_from_user(void *, void *, unsigned long);
#line 141  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void *from, unsigned long n)
{
  #line 143 
  if ((long)((int)check_copy_size(to,n,(_Bool)0) != 0) != 0L) 
                                                              #line 144 
                                                              n = _copy_from_user(to,from,n);
  #line 145 
  return n;
}

#line 607  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 403  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void *kcalloc_1(size_t n, size_t size, gfp_t flags);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 424  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static struct dentry *rootdir;
#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
__inline static struct b43legacy_dfs_file *fops_to_dfs_file(struct b43legacy_wldev *dev, struct b43legacy_debugfs_fops *dfops)
{
  #line 45 
  void *p;
  #line 47 
  p = (void *)dev->dfsentry;
  #line 48 
  p += dfops->file_struct_offset;
  #line 50 
  return (struct b43legacy_dfs_file *)p;
}

#line 66  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static ssize_t tsf_read_file(struct b43legacy_wldev *dev, char *buf, size_t bufsize)
{
  #line 69 
  u64 tsf;
  #line 68 
  ssize_t count = 0L;
  #line 71 
  b43legacy_tsf_read(dev,& tsf);
  #line 72 
  if (bufsize != (unsigned long)count) {
    #line 72 
    count = (long)snprintf(buf + (unsigned long)count,bufsize - (unsigned long)count,
               (char *)"0x%08x%08x\n",(unsigned int)(tsf >> 32),
               (unsigned int)tsf) + count;
  }
  else 
       #line 72 
       printk((char *)"\001");
  #line 76 
  return count;
}

#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static int tsf_write_file(struct b43legacy_wldev *dev, char *buf, size_t count)
{
  #line 82 
  u64 tsf;
  #line 84 
  if (sscanf(buf,(char *)"%llu",& tsf) != 1) 
                                             #line 85 
                                             return -22;
  #line 86 
  b43legacy_tsf_write(dev,tsf);
  #line 88 
  return 0;
}

#line 92  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static ssize_t ucode_regs_read_file(struct b43legacy_wldev *dev, char *buf, size_t bufsize)
{
  #line 95 
  int i;
  #line 94 
  ssize_t count = 0L;
  #line 97 
  i = 0;
  #line 97 
  while (i <= 63) {
    #line 98 
    if (bufsize != (unsigned long)count) {
      #line 98 
      ;
      #line 98 
      ;
      #line 98 
      ;
      #line 98 
      count = (long)snprintf(buf + (unsigned long)count,bufsize - (unsigned long)count,
                 (char *)"r%d = 0x%04x\n",i,
                 (int)b43legacy_shm_read16(dev,(unsigned short)2,
                           (unsigned short)((int)((unsigned short)i)))) + count;
    }
    else 
         #line 98 
         printk((char *)"\001");
    #line 97 
    i ++;
  }
  #line 102 
  return count;
}

#line 106  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static ssize_t shm_read_file(struct b43legacy_wldev *dev, char *buf, size_t bufsize)
{
  #line 109 
  int i;
  #line 110 
  u16 tmp;
  #line 108 
  ssize_t count = 0L;
  #line 111 
  __le16 *le16buf = (__le16 *)buf;
  #line 113 
  i = 0;
  #line 113 
  while (i <= 4095) {
    #line 114 
    if (bufsize <= 1UL) 
                        #line 115 
                        break;
    #line 116 
    tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)((int)((unsigned int)((unsigned short)i) * 2U)));
    #line 117 
    *(le16buf + (unsigned long)i) = tmp;
    #line 118 
    count = (long)((unsigned long)count + 2UL);
    #line 119 
    bufsize += 18446744073709551614UL;
    #line 113 
    i ++;
  }
  #line 122 
  return count;
}

#line 125  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static ssize_t txstat_read_file(struct b43legacy_wldev *dev, char *buf, size_t bufsize)
{
  #line 129 
  unsigned long flags;
  #line 130 
  int i;
  #line 130 
  int idx;
  #line 131 
  struct b43legacy_txstatus *stat;
  #line 127 
  struct b43legacy_txstatus_log *log = & (dev->dfsentry)->txstatlog;
  #line 128 
  ssize_t count = 0L;
  #line 133 
  cif___ldv_spin_lock_lock_of_b43legacy_txstatus_log(& log->lock);
  #line 134 
  if (log->end < 0) {
    #line 135 
    if (bufsize != (unsigned long)count) {
      #line 135 
      count = (long)snprintf(buf + (unsigned long)count,bufsize - (unsigned long)count,
               (char *)"Nothing transmitted, yet\n") + count;
    }
    else 
         #line 135 
         printk((char *)"\001");
    #line 136 
    goto out_unlock;
  }
  #line 138 
  if (bufsize != (unsigned long)count) {
    #line 138 
    count = (long)snprintf(buf + (unsigned long)count,bufsize - (unsigned long)count,
                 (char *)"b43legacy TX status reports:\n\n") + count;
  }
  else 
       #line 138 
       printk((char *)"\001");
  #line 142 
  i = log->end + 1;
  #line 143 
  idx = 0;
  #line 144 
  while (1) {
    #line 145 
    if (i == 100) 
                  #line 146 
                  i = 0;
    #line 147 
    stat = log->log + (unsigned long)i;
    #line 148 
    if ((unsigned int)stat->cookie != 0U) {
      #line 149 
      if (bufsize != (unsigned long)count) {
        #line 149 
        count = (long)snprintf(buf + (unsigned long)count,bufsize - (unsigned long)count,
                 (char *)"%03d | ",idx,(int)stat->cookie,(int)stat->seq,
                 (int)stat->phy_stat,(int)stat->frame_count,
                 (int)stat->rts_count,(int)stat->supp_reason,
                 (int)stat->pm_indicated,(int)stat->intermediate,
                 (int)stat->for_ampdu,(int)stat->acked) + count;
      }
      else 
           #line 149 
           printk((char *)"\001");
      #line 160 
      idx ++;
    }
    #line 162 
    if (log->end == i) 
                       #line 163 
                       break;
    #line 164 
    i ++;
  }
  #line 166 
  out_unlock: 
              #line 166 
  ;
  #line 167 
  cif_spin_unlock_irqrestore_lock_of_b43legacy_txstatus_log(& log->lock,flags);
  #line 169 
  return count;
}

#line 173  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static int restart_write_file(struct b43legacy_wldev *dev, char *buf, size_t count)
{
  #line 175 
  int err = 0;
  #line 177 
  if (count != 0UL && (int)*buf == 49) 
                                       #line 178 
                                       b43legacy_controller_restart(dev,(char *)"manually restarted"); else 
                                                                    #line 180 
                                                                    err = -22;
  #line 182 
  return err;
}

#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static ssize_t b43legacy_debugfs_read(struct file *file, char *userbuf, size_t count, loff_t *ppos)
{
  #line 211 
  void *__mptr;
  #line 190 
  struct b43legacy_wldev *dev;
  #line 191 
  struct b43legacy_debugfs_fops *dfops;
  #line 192 
  struct b43legacy_dfs_file *dfile;
  #line 194 
  char *buf;
  #line 252 
  long tmp_4;
  #line 193 
  ssize_t ret = ret;
  #line 195 
  size_t bufsize = 16384UL;
  #line 196 
  size_t buforder = (unsigned long)get_order(16384UL);
  #line 197 
  int err = 0;
  #line 199 
  if (count == 0UL) 
                    #line 200 
                    return 0L;
  #line 201 
  dev = (struct b43legacy_wldev *)file->private_data;
  #line 202 
  if (dev == (struct b43legacy_wldev *)0) 
                                          #line 203 
                                          return -19L;
  #line 205 
  cif_mutex_lock_mutex_of_b43legacy_wl_2(& (dev->wl)->mutex);
  #line 206 
  if (atomic_read_2(& dev->__init_status) <= 0) {
    #line 207 
    err = -19;
    #line 208 
    goto out_unlock;
  }
  #line 211 
  __mptr = (void *)debugfs_real_fops(file);
  #line 211 
  dfops = ((struct b43legacy_debugfs_fops *)(__mptr + 18446744073709551600U));
  #line 213 
  if (dfops->read == (ssize_t (*)(struct b43legacy_wldev *, char *, size_t ))0) {
    #line 214 
    err = -38;
    #line 215 
    goto out_unlock;
  }
  #line 217 
  dfile = fops_to_dfs_file(dev,dfops);
  #line 219 
  if (dfile->buffer == (char *)0) {
    #line 220 
    buf = (char *)__get_free_pages(3264U,(unsigned int)buforder);
    #line 221 
    if (buf == (char *)0) {
      #line 222 
      err = -12;
      #line 223 
      goto out_unlock;
    }
    #line 225 
    memset((void *)buf,0,16384UL);
    #line 226 
    if ((int)dfops->take_irqlock != 0) {
      #line 227 
      cif_spin_lock_irq_irq_lock_of_b43legacy_wl_0(& (dev->wl)->irq_lock);
      #line 228 
      ret = (*(dfops->read))(dev,buf,16384UL);
      #line 229 
      cif_spin_unlock_irq_irq_lock_of_b43legacy_wl_0(& (dev->wl)->irq_lock);
    }
    else 
         #line 231 
         ret = (*(dfops->read))(dev,buf,16384UL);
    #line 232 
    if (ret <= 0L) {
      #line 233 
      free_pages((unsigned long)buf,(unsigned int)buforder);
      #line 234 
      err = (int)ret;
      #line 235 
      goto out_unlock;
    }
    #line 237 
    dfile->data_len = (unsigned long)ret;
    #line 238 
    dfile->buffer = buf;
  }
  #line 241 
  ret = simple_read_from_buffer((void *)userbuf,count,ppos,(void *)dfile->buffer,dfile->data_len);
  #line 244 
  if ((unsigned long long)*ppos >= (unsigned long long)dfile->data_len) {
    #line 245 
    free_pages((unsigned long)dfile->buffer,(unsigned int)buforder);
    #line 246 
    dfile->buffer = (char *)0;
    #line 247 
    dfile->data_len = 0UL;
  }
  #line 249 
  out_unlock: 
              #line 249 
  ;
  #line 250 
  cif_mutex_unlock_mutex_of_b43legacy_wl_2(& (dev->wl)->mutex);
  #line 252 
  if (err != 0) 
                #line 252 
                tmp_4 = (long)err; else 
                                        #line 252 
                                        tmp_4 = ret;
  #line 252 
  return tmp_4;
}

#line 255  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static ssize_t b43legacy_debugfs_write(struct file *file, char *userbuf, size_t count, loff_t *ppos)
{
  #line 278 
  void *__mptr;
  #line 259 
  struct b43legacy_wldev *dev;
  #line 260 
  struct b43legacy_debugfs_fops *dfops;
  #line 261 
  char *buf;
  #line 308 
  long tmp_4;
  #line 262 
  int err = 0;
  #line 264 
  if (count == 0UL) 
                    #line 265 
                    return 0L;
  #line 266 
  if (count > 4096UL) 
                      #line 267 
                      return -7L;
  #line 268 
  dev = (struct b43legacy_wldev *)file->private_data;
  #line 269 
  if (dev == (struct b43legacy_wldev *)0) 
                                          #line 270 
                                          return -19L;
  #line 272 
  cif_mutex_lock_mutex_of_b43legacy_wl_2(& (dev->wl)->mutex);
  #line 273 
  if (atomic_read_2(& dev->__init_status) <= 0) {
    #line 274 
    err = -19;
    #line 275 
    goto out_unlock;
  }
  #line 278 
  __mptr = (void *)debugfs_real_fops(file);
  #line 278 
  dfops = ((struct b43legacy_debugfs_fops *)(__mptr + 18446744073709551600U));
  #line 280 
  if (dfops->write == (int (*)(struct b43legacy_wldev *, char *, size_t ))0) {
    #line 281 
    err = -38;
    #line 282 
    goto out_unlock;
  }
  #line 285 
  buf = (char *)get_zeroed_page(3264U);
  #line 286 
  if (buf == (char *)0) {
    #line 287 
    err = -12;
    #line 288 
    goto out_unlock;
  }
  #line 290 
  if (copy_from_user((void *)buf,(void *)userbuf,count) != 0UL) {
    #line 291 
    err = -14;
    #line 292 
    goto out_freepage;
  }
  #line 294 
  if ((int)dfops->take_irqlock != 0) {
    #line 295 
    cif_spin_lock_irq_irq_lock_of_b43legacy_wl_0(& (dev->wl)->irq_lock);
    #line 296 
    err = (*(dfops->write))(dev,buf,count);
    #line 297 
    cif_spin_unlock_irq_irq_lock_of_b43legacy_wl_0(& (dev->wl)->irq_lock);
  }
  else 
       #line 299 
       err = (*(dfops->write))(dev,buf,count);
  #line 300 
  if (err != 0) 
                #line 301 
                goto out_freepage;
  #line 303 
  out_freepage: 
                #line 303 
  ;
  #line 304 
  free_pages((unsigned long)buf,0U);
  #line 305 
  out_unlock: 
              #line 305 
  ;
  #line 306 
  cif_mutex_unlock_mutex_of_b43legacy_wl_2(& (dev->wl)->mutex);
  #line 308 
  if (err != 0) 
                #line 308 
                tmp_4 = (long)err; else 
                                        #line 308 
                                        tmp_4 = (long)count;
  #line 308 
  return tmp_4;
}

#line 327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static struct b43legacy_debugfs_fops fops_tsf = {.read = & tsf_read_file, .write = & tsf_write_file, .fops = {.llseek = & generic_file_llseek, .read = & b43legacy_debugfs_read, .write = & b43legacy_debugfs_write, .open = & simple_open}, .file_struct_offset = 16UL, .take_irqlock = (_Bool)1};
#line 328  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static struct b43legacy_debugfs_fops fops_ucode_regs = {.read = & ucode_regs_read_file, .fops = {.llseek = & generic_file_llseek, .read = & b43legacy_debugfs_read, .write = & b43legacy_debugfs_write, .open = & simple_open}, .file_struct_offset = 40UL, .take_irqlock = (_Bool)1};
#line 329  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static struct b43legacy_debugfs_fops fops_shm = {.read = & shm_read_file, .fops = {.llseek = & generic_file_llseek, .read = & b43legacy_debugfs_read, .write = & b43legacy_debugfs_write, .open = & simple_open}, .file_struct_offset = 64UL, .take_irqlock = (_Bool)1};
#line 330  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static struct b43legacy_debugfs_fops fops_txstat = {.read = & txstat_read_file, .fops = {.llseek = & generic_file_llseek, .read = & b43legacy_debugfs_read, .write = & b43legacy_debugfs_write, .open = & simple_open}, .file_struct_offset = 88UL};
#line 331  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static struct b43legacy_debugfs_fops fops_restart = {.write = & restart_write_file, .fops = {.llseek = & generic_file_llseek, .read = & b43legacy_debugfs_read, .write = & b43legacy_debugfs_write, .open = & simple_open}, .file_struct_offset = 136UL, .take_irqlock = (_Bool)1};
#line 334  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
int b43legacy_debug(struct b43legacy_wldev *dev, enum b43legacy_dyndbg feature)
{
  #line 336 
  return (dev->dfsentry != (struct b43legacy_dfsentry *)0 && (int)(dev->dfsentry)->dyn_debug[(unsigned int)feature] != 0) != 0;
}

#line 339  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static void b43legacy_remove_dynamic_debug(struct b43legacy_wldev *dev)
{
  #line 342 
  int i;
  #line 341 
  struct b43legacy_dfsentry *e = dev->dfsentry;
  #line 344 
  i = 0;
  #line 344 
  while (i <= 4) {
    #line 345 
    cif_debugfs_remove(e->dyn_debug_dentries[i]);
    #line 344 
    i ++;
  }
  #line 346 
  return;
}

#line 348  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
static void b43legacy_add_dynamic_debug(struct b43legacy_wldev *dev)
{
  #line 350 
  struct b43legacy_dfsentry *e = dev->dfsentry;
  #line 359 
  e->dyn_debug[0] = (_Bool)0;
  #line 359 
  e->dyn_debug_dentries[0] = debugfs_create_bool((char *)"debug_xmitpower",(unsigned short)384,e->subdir,& e->dyn_debug[0]);
  #line 360 
  e->dyn_debug[1] = (_Bool)0;
  #line 360 
  e->dyn_debug_dentries[1] = debugfs_create_bool((char *)"debug_dmaoverflow",(unsigned short)384,e->subdir,& e->dyn_debug[1]);
  #line 361 
  e->dyn_debug[2] = (_Bool)0;
  #line 361 
  e->dyn_debug_dentries[2] = debugfs_create_bool((char *)"debug_dmaverbose",(unsigned short)384,e->subdir,& e->dyn_debug[2]);
  #line 362 
  e->dyn_debug[3] = (_Bool)0;
  #line 362 
  e->dyn_debug_dentries[3] = debugfs_create_bool((char *)"debug_pwork_fast",(unsigned short)384,e->subdir,& e->dyn_debug[3]);
  #line 363 
  e->dyn_debug[4] = (_Bool)0;
  #line 363 
  e->dyn_debug_dentries[4] = debugfs_create_bool((char *)"debug_pwork_stop",(unsigned short)384,e->subdir,& e->dyn_debug[4]);
  #line 365 
  return;
}

#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
void b43legacy_debugfs_add_device(struct b43legacy_wldev *dev)
{
  #line 370 
  struct b43legacy_dfsentry *e;
  #line 371 
  struct b43legacy_txstatus_log *log;
  #line 372 
  char devdir[16U];
  {
    #line 374 
    int __ret_warn_on = dev == (struct b43legacy_wldev *)0;
    #line 374 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 375 
      ldv_inline_asm();
      #line 376 
      ldv_inline_asm();
    }
    #line 374 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 375 
  e = (struct b43legacy_dfsentry *)kzalloc_1(320UL,3264U);
  #line 376 
  if (e == (struct b43legacy_dfsentry *)0) {
    #line 377 
    b43legacyerr(dev->wl,(char *)"debugfs: add device OOM\n");
    #line 378 
    return;
  }
  #line 380 
  e->dev = dev;
  #line 381 
  log = & e->txstatlog;
  #line 382 
  log->log = (struct b43legacy_txstatus *)kcalloc_1(100UL,12UL,3264U);
  #line 384 
  if (log->log == (struct b43legacy_txstatus *)0) {
    #line 385 
    b43legacyerr(dev->wl,(char *)"debugfs: add device txstatus OOM\n");
    #line 386 
    kfree((void *)e);
    #line 387 
    return;
  }
  #line 389 
  log->end = -1;
  #line 390 
  spinlock_check(& log->lock);
  {
    #line 390 
    struct lock_class_key __key;
    #line 390 
    __raw_spin_lock_init(& log->lock.__anonCompField_spinlock_25.rlock,(char *)"&(&log->lock)->rlock",& __key);
  }
  #line 392 
  dev->dfsentry = e;
  #line 394 
  snprintf((char *)(& devdir),16UL,(char *)"%s",wiphy_name(((dev->wl)->hw)->wiphy));
  #line 395 
  e->subdir = cif_debugfs_create_dir((char *)(& devdir),rootdir);
  #line 407 
  e->file_tsf.dentry = cif_debugfs_create_file((char *)"tsf",(unsigned short)384,e->subdir,(void *)dev,& fops_tsf.fops);
  #line 407 
  e->file_tsf.dentry = (struct dentry *)0;
  #line 408 
  e->file_ucode_regs.dentry = cif_debugfs_create_file((char *)"ucode_regs",(unsigned short)256,e->subdir,(void *)dev,& fops_ucode_regs.fops);
  #line 408 
  e->file_ucode_regs.dentry = (struct dentry *)0;
  #line 409 
  e->file_shm.dentry = cif_debugfs_create_file((char *)"shm",(unsigned short)256,e->subdir,(void *)dev,& fops_shm.fops);
  #line 409 
  e->file_shm.dentry = (struct dentry *)0;
  #line 410 
  e->file_txstat.dentry = cif_debugfs_create_file((char *)"txstat",(unsigned short)256,e->subdir,(void *)dev,& fops_txstat.fops);
  #line 410 
  e->file_txstat.dentry = (struct dentry *)0;
  #line 411 
  e->file_restart.dentry = cif_debugfs_create_file((char *)"restart",(unsigned short)128,e->subdir,(void *)dev,& fops_restart.fops);
  #line 411 
  e->file_restart.dentry = (struct dentry *)0;
  #line 415 
  b43legacy_add_dynamic_debug(dev);
  #line 416 
  return;
}

#line 418  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
void b43legacy_debugfs_remove_device(struct b43legacy_wldev *dev)
{
  #line 420 
  struct b43legacy_dfsentry *e;
  #line 422 
  if (dev == (struct b43legacy_wldev *)0) 
                                          #line 423 
                                          return;
  #line 424 
  e = dev->dfsentry;
  #line 425 
  if (e == (struct b43legacy_dfsentry *)0) 
                                           #line 426 
                                           return;
  #line 427 
  b43legacy_remove_dynamic_debug(dev);
  #line 429 
  cif_debugfs_remove(e->file_tsf.dentry);
  #line 430 
  cif_debugfs_remove(e->file_ucode_regs.dentry);
  #line 431 
  cif_debugfs_remove(e->file_shm.dentry);
  #line 432 
  cif_debugfs_remove(e->file_txstat.dentry);
  #line 433 
  cif_debugfs_remove(e->file_restart.dentry);
  #line 435 
  cif_debugfs_remove(e->subdir);
  #line 436 
  kfree((void *)e->txstatlog.log);
  #line 437 
  kfree((void *)e);
  #line 438 
  return;
}

#line 440  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
void b43legacy_debugfs_log_txstat(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status)
{
  #line 444 
  struct b43legacy_txstatus_log *log;
  #line 445 
  struct b43legacy_txstatus *cur;
  #line 446 
  int i;
  #line 443 
  struct b43legacy_dfsentry *e = dev->dfsentry;
  #line 448 
  if (e == (struct b43legacy_dfsentry *)0) 
                                           #line 449 
                                           return;
  #line 450 
  log = & e->txstatlog;
  {
    #line 451 
    unsigned long _flags;
    {
      #line 451 
      unsigned long __dummy;
      #line 451 
      unsigned long __dummy2;
      }
    #line 451 
    _flags = arch_local_save_flags();
    {
      #line 451 
      unsigned long __dummy_0;
      #line 451 
      unsigned long __dummy2_0;
      }
    #line 451 
    int __ret_warn_on = arch_irqs_disabled_flags(_flags) == 0;
    #line 451 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 452 
      ldv_inline_asm();
      #line 453 
      ldv_inline_asm();
    }
    #line 451 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 452 
  cif_spin_lock_lock_of_b43legacy_txstatus_log(& log->lock);
  #line 453 
  i = log->end + 1;
  #line 454 
  if (i == 100) 
                #line 455 
                i = 0;
  #line 456 
  log->end = i;
  #line 457 
  cur = log->log + (unsigned long)i;
  #line 458 
  memcpy((void *)cur,(void *)status,12UL);
  #line 459 
  cif_spin_unlock_lock_of_b43legacy_txstatus_log(& log->lock);
  #line 460 
  return;
}

#line 462  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
void b43legacy_debugfs_init(void)
{
  #line 464 
  rootdir = cif_debugfs_create_dir((char *)"b43legacy",(struct dentry *)0);
  #line 465 
  return;
}

#line 467  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/debugfs.c"
void b43legacy_debugfs_exit(void)
{
  #line 469 
  cif_debugfs_remove(rootdir);
  #line 470 
  return;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
#line 93 
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1);
#line 94 
#line 94 
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);
#line 95 
#line 95 
void emg_debugfs_remove(struct dentry *arg0);
#line 108  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
long emg_wrapper_b43legacy_debugfs_read(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 109 
  return b43legacy_debugfs_read(arg0,arg1,arg2,arg3);
}

#line 113  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
long emg_wrapper_b43legacy_debugfs_write(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  #line 114 
  return b43legacy_debugfs_write(arg0,arg1,arg2,arg3);
}

#line 403  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void *kcalloc_1(size_t n, size_t size, gfp_t flags)
{
  #line 406 
  return ldv_kcalloc(n,size,flags);
}

#line 424  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  #line 427 
  return ldv_kzalloc(size,flags);
}

#line 819  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif___ldv_spin_lock_lock_of_b43legacy_txstatus_log(spinlock_t *lock)
{
  #line 822 
  ldv_spin_model_lock((char *)"lock_of_b43legacy_txstatus_log");
  #line 824 
  __ldv_spin_lock(lock);
  #line 825 
  return;
}

#line 828  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_unlock_irqrestore_lock_of_b43legacy_txstatus_log(spinlock_t *lock, unsigned long flags)
{
  #line 831 
  ldv_spin_model_unlock((char *)"lock_of_b43legacy_txstatus_log");
  #line 833 
  spin_unlock_irqrestore_2(lock,flags);
  #line 834 
  return;
}

#line 837  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_mutex_lock_mutex_of_b43legacy_wl_2(struct mutex *lock)
{
  #line 840 
  ldv_mutex_model_lock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 841 
  return;
}

#line 844  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_lock_irq_irq_lock_of_b43legacy_wl_0(spinlock_t *lock)
{
  #line 847 
  ldv_spin_model_lock((char *)"irq_lock_of_b43legacy_wl");
  #line 849 
  spin_lock_irq_0(lock);
  #line 850 
  return;
}

#line 853  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_unlock_irq_irq_lock_of_b43legacy_wl_0(spinlock_t *lock)
{
  #line 856 
  ldv_spin_model_unlock((char *)"irq_lock_of_b43legacy_wl");
  #line 858 
  spin_unlock_irq_0(lock);
  #line 859 
  return;
}

#line 862  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_mutex_unlock_mutex_of_b43legacy_wl_2(struct mutex *lock)
{
  #line 865 
  ldv_mutex_model_unlock(lock,(char *)"mutex_of_b43legacy_wl");
  #line 866 
  return;
}

#line 869  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_debugfs_remove(struct dentry *dentry)
{
  #line 873 
  emg_debugfs_remove(dentry);
  #line 874 
  return;
}

#line 877  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static struct dentry *cif_debugfs_create_dir(char *name, struct dentry *parent)
{
  #line 881 
  return emg_debugfs_create_dir(name,parent);
}

#line 885  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static struct dentry *cif_debugfs_create_file(char *name, umode_t mode, struct dentry *parent, void *data, struct file_operations *fops)
{
  #line 889 
  return emg_debugfs_create_file(name,(unsigned short)((int)mode),parent,data,
                              fops);
}

#line 893  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_lock_lock_of_b43legacy_txstatus_log(spinlock_t *lock)
{
  #line 896 
  ldv_spin_model_lock((char *)"lock_of_b43legacy_txstatus_log");
  #line 898 
  spin_lock_0(lock);
  #line 899 
  return;
}

#line 902  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/debugfs.i.aux"
static void cif_spin_unlock_lock_of_b43legacy_txstatus_log(spinlock_t *lock)
{
  #line 905 
  ldv_spin_model_unlock((char *)"lock_of_b43legacy_txstatus_log");
  #line 907 
  spin_unlock_0(lock);
  #line 908 
  return;
}

#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list);
#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_add_0(struct list_head *new, struct list_head *prev, struct list_head *next)
{
  #line 60 
  if (! __list_add_valid(new,prev,next)) 
                                         #line 61 
                                         return;
  #line 63 
  next->prev = new;
  #line 64 
  new->next = next;
  #line 65 
  new->prev = prev;
  {
    #line 67 
    union __anonunion___u_7377 __u = {.__val = new};
    #line 66 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 66 
    struct list_head *tmp_2 = __u.__val;
  }
  #line 68 
  return;
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_0(struct list_head *new, struct list_head *head)
{
  #line 79 
  __list_add_0(new,head,head->next);
  #line 80 
  return;
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  #line 93 
  __list_add_0(new,head->prev,head);
  #line 94 
  return;
}

#line 95  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_0(struct list_head *prev, struct list_head *next)
{
  #line 97 
  next->prev = prev;
  {
    #line 107 
    union __anonunion___u_7379 __u = {.__val = next};
    #line 106 
    __write_once_size((void *)(& prev->next),(void *)(& __u.__c),8);
    #line 106 
    struct list_head *tmp = __u.__val;
  }
  #line 108 
  return;
}

#line 129  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void __list_del_entry_0(struct list_head *entry)
{
  #line 131 
  if (! __list_del_entry_valid(entry)) 
                                       #line 132 
                                       return;
  #line 134 
  __list_del_0(entry->prev,entry->next);
  #line 135 
  return;
}

#line 199  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_move(struct list_head *list, struct list_head *head)
{
  #line 201 
  __list_del_entry_0(list);
  #line 202 
  list_add_0(list,head);
  #line 203 
  return;
}

#line 210  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static void list_move_tail(struct list_head *list, struct list_head *head)
{
  #line 213 
  __list_del_entry_0(list);
  #line 214 
  list_add_tail(list,head);
  #line 215 
  return;
}

#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/list.h"
__inline static int list_empty_0(struct list_head *head)
{
  #line 269 
  union __anonunion___u_7381 __u;
  #line 268 
  __read_once_size((void *)(& head->next),(void *)(& __u.__c),8);
  #line 268 
  ;
  #line 268 
  return (__u.__val) == head;
}

#line 391  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/spinlock.h"
static void spin_unlock_irqrestore_3(spinlock_t *lock, unsigned long flags)
{
  {
    #line 393 
    unsigned long __dummy;
    #line 393 
    unsigned long __dummy2;
    }
  #line 393 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_25.rlock,flags);
  #line 395 
  return;
}

#line 395 
#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_1(spinlock_t *lock, unsigned long flags);
#line 35 
#line 807 
static void cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_1(spinlock_t *lock);
#line 655  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 833  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif_tasklet_schedule_0(struct tasklet_struct *t);
#line 687  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/interrupt.h"
#line 825  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif_tasklet_init_0(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data);
#line 668  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 358  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags);
#line 2778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  #line 2781 
  return __netdev_alloc_skb(dev,length,2592U);
}

#line 2792  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  #line 2794 
  return netdev_alloc_skb((struct net_device *)0,length);
}

#line 84  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
__inline static u16 b43legacy_pio_read(struct b43legacy_pioqueue *queue, u16 offset)
{
  #line 87 
  return b43legacy_read16(queue->dev,
                       (unsigned short)((int)queue->mmio_base + (int)offset));
}

#line 91  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
__inline static void b43legacy_pio_write(struct b43legacy_pioqueue *queue, u16 offset, u16 value)
{
  #line 94 
  b43legacy_write16(queue->dev,(unsigned short)((int)queue->mmio_base + (int)offset),(unsigned short)((int)value));
  #line 95 
  return;
}

#line 108 
#line 635  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_tx_suspend(struct b43legacy_pioqueue *queue);
#line 109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.h"
#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_tx_resume(struct b43legacy_pioqueue *queue);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void tx_start(struct b43legacy_pioqueue *queue)
{
  #line 24 
  b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)8);
  #line 25 
  return;
}

#line 28  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void tx_octet(struct b43legacy_pioqueue *queue, u8 octet)
{
  #line 31 
  if ((int)queue->need_workarounds != 0) {
    #line 32 
    b43legacy_pio_write(queue,(unsigned short)2,(unsigned short)((int)octet));
    #line 33 
    b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)1);
  }
  else {
    #line 36 
    b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)1);
    #line 38 
    b43legacy_pio_write(queue,(unsigned short)2,(unsigned short)((int)octet));
  }
  #line 40 
  return;
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static u16 tx_get_next_word(u8 *txhdr, u8 *packet, size_t txhdr_size, unsigned int *pos)
{
  #line 47 
  u8 *source;
  #line 49 
  u16 ret;
  #line 48 
  unsigned int i = *pos;
  #line 51 
  if ((unsigned long)i < txhdr_size) 
                                     #line 52 
                                     source = txhdr;
  else {
    #line 54 
    source = packet;
    #line 55 
    i -= (unsigned int)txhdr_size;
  }
  #line 57 
  ret = *((__le16 *)(source + (unsigned long)i));
  #line 58 
  *pos += 2U;
  #line 60 
  return ret;
}

#line 63  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void tx_data(struct b43legacy_pioqueue *queue, u8 *txhdr, u8 *packet, unsigned int octets)
{
  #line 68 
  u16 data;
  #line 69 
  unsigned int i = 0U;
  #line 71 
  if ((int)queue->need_workarounds != 0) {
    #line 72 
    data = tx_get_next_word(txhdr,packet,82UL,& i);
    #line 74 
    b43legacy_pio_write(queue,(unsigned short)2,(unsigned short)((int)data));
  }
  #line 76 
  b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)3);
  #line 79 
  while (octets + 4294967295U > i) {
    #line 80 
    data = tx_get_next_word(txhdr,packet,82UL,& i);
    #line 82 
    b43legacy_pio_write(queue,(unsigned short)2,(unsigned short)((int)data));
  }
  #line 84 
  if ((octets & 1U) != 0U) 
                           #line 85 
                           tx_octet(queue,(unsigned char)((int)*(packet + ((unsigned long)octets + 18446744073709551533U))));
  #line 86 
  return;
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void tx_complete(struct b43legacy_pioqueue *queue, struct sk_buff *skb)
{
  #line 92 
  if ((int)queue->need_workarounds != 0) {
    #line 93 
    b43legacy_pio_write(queue,(unsigned short)2,(unsigned short)((int)*(skb->data + (unsigned long)(skb->len + 4294967295U))));
    #line 95 
    b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)5);
  }
  else 
       #line 99 
       b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)4);
  #line 100 
  return;
}

#line 103  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static u16 generate_cookie_0(struct b43legacy_pioqueue *queue, struct b43legacy_pio_txpacket *packet)
{
  #line 107 
  int packetindex;
  #line 106 
  u16 cookie = (unsigned short)0U;
  #line 113 
  switch ((int)queue->mmio_base) {
    #line 114 
    case 768: 
              #line 114 
    ;
    #line 115 
    break;
    #line 116 
    case 784: 
              #line 116 
    ;
    #line 117 
    cookie = (unsigned short)4096U;
    #line 118 
    break;
    #line 119 
    case 800: 
              #line 119 
    ;
    #line 120 
    cookie = (unsigned short)8192U;
    #line 121 
    break;
    #line 122 
    case 816: 
              #line 122 
    ;
    #line 123 
    cookie = (unsigned short)12288U;
    #line 124 
    break;
    #line 125 
    default: 
             #line 125 
    ;
    {
      #line 126 
      int __ret_warn_on = 1;
      #line 126 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 127 
        ldv_inline_asm();
        #line 128 
        ldv_inline_asm();
      }
      #line 126 
      long tmp = (long)(__ret_warn_on != 0);
    }
  }
  #line 128 
  packetindex = (int)((packet - (struct b43legacy_pio_txpacket *)(& (packet->queue)->tx_packets_cache)) / 32L);
  {
    #line 129 
    int __ret_warn_on_0 = ((int)((unsigned short)packetindex) & 61440) != 0;
    #line 129 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 130 
      ldv_inline_asm();
      #line 131 
      ldv_inline_asm();
    }
    #line 129 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 130 
  cookie = (unsigned short)((int)((unsigned short)packetindex) | (int)cookie);
  #line 132 
  return cookie;
}

#line 136  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static struct b43legacy_pioqueue *parse_cookie_0(struct b43legacy_wldev *dev, u16 cookie, struct b43legacy_pio_txpacket **packet)
{
  #line 142 
  int packetindex;
  #line 140 
  struct b43legacy_pio *pio = & dev->__anonCompField_b43legacy_wldev_210.pio;
  #line 141 
  struct b43legacy_pioqueue *queue = (struct b43legacy_pioqueue *)0;
  #line 144 
  switch ((int)cookie & 61440) {
    #line 145 
    case 0: 
            #line 145 
    ;
    #line 146 
    queue = pio->queue0;
    #line 147 
    break;
    #line 148 
    case 4096: 
               #line 148 
    ;
    #line 149 
    queue = pio->queue1;
    #line 150 
    break;
    #line 151 
    case 8192: 
               #line 151 
    ;
    #line 152 
    queue = pio->queue2;
    #line 153 
    break;
    #line 154 
    case 12288: 
                #line 154 
    ;
    #line 155 
    queue = pio->queue3;
    #line 156 
    break;
    #line 157 
    default: 
             #line 157 
    ;
    {
      #line 158 
      int __ret_warn_on = 1;
      #line 158 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 159 
        ldv_inline_asm();
        #line 160 
        ldv_inline_asm();
      }
      #line 158 
      long tmp = (long)(__ret_warn_on != 0);
    }
  }
  #line 160 
  packetindex = (int)cookie & 4095;
  {
    #line 161 
    int __ret_warn_on_0 = (unsigned int)packetindex > 255U;
    #line 161 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 162 
      ldv_inline_asm();
      #line 163 
      ldv_inline_asm();
    }
    #line 161 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 163 
  *packet = & queue->tx_packets_cache[packetindex];
  #line 165 
  return queue;
}

#line 172  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static int pio_tx_write_fragment(struct b43legacy_pioqueue *queue, struct sk_buff *skb, struct b43legacy_pio_txpacket *packet, size_t txhdr_size)
{
  #line 177 
  union txhdr_union txhdr_data;
  #line 179 
  unsigned int octets;
  #line 180 
  int err;
  #line 178 
  u8 *txhdr = (u8 *)0U;
  #line 182 
  txhdr = (u8 *)(& txhdr_data.txhdr_fw3);
  {
    #line 184 
    int __ret_warn_on = (unsigned int)((struct skb_shared_info *)skb_end_pointer(skb))->nr_frags != 0U;
    #line 184 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 185 
      ldv_inline_asm();
      #line 186 
      ldv_inline_asm();
    }
    #line 184 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 185 
  ;
  #line 185 
  ;
  #line 185 
  ;
  #line 185 
  ;
  #line 185 
  err = b43legacy_generate_txhdr(queue->dev,txhdr,skb->data,skb->len,IEEE80211_SKB_CB(skb),(unsigned short)((int)generate_cookie_0(queue,packet)));
  #line 189 
  if (err != 0) 
                #line 190 
                return err;
  #line 192 
  tx_start(queue);
  #line 193 
  octets = skb->len + (unsigned int)txhdr_size;
  #line 194 
  if ((int)queue->need_workarounds != 0) 
                                         #line 195 
                                         octets --;
  #line 196 
  tx_data(queue,txhdr,skb->data,octets);
  #line 197 
  tx_complete(queue,skb);
  #line 199 
  return 0;
}

#line 202  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void free_txpacket(struct b43legacy_pio_txpacket *packet, int irq_context)
{
  #line 205 
  struct b43legacy_pioqueue *queue = packet->queue;
  #line 207 
  if (packet->skb != (struct sk_buff *)0) 
    #line 208 
    if (irq_context != 0) 
                          #line 209 
                          dev_kfree_skb_irq(packet->skb); else 
                                                               #line 211 
                                                               consume_skb(packet->skb);
  #line 213 
  list_move(& packet->list,& queue->txfree);
  #line 214 
  (queue->nr_txfree) ++;
  #line 215 
  return;
}

#line 217  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static int pio_tx_packet(struct b43legacy_pio_txpacket *packet)
{
  #line 221 
  u16 octets;
  #line 222 
  int err;
  #line 219 
  struct b43legacy_pioqueue *queue = packet->queue;
  #line 220 
  struct sk_buff *skb = packet->skb;
  #line 224 
  octets = (unsigned short)((unsigned int)((unsigned short)skb->len) + 82U);
  #line 225 
  if ((int)queue->tx_devq_size < (int)octets) {
    #line 226 
    b43legacywarn((queue->dev)->wl,(char *)"PIO queue too small. ");
    #line 229 
    free_txpacket(packet,1);
    #line 230 
    return 0;
  }
  {
    #line 232 
    int __ret_warn_on = (unsigned int)queue->tx_devq_packets > 31U;
    #line 232 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 233 
      ldv_inline_asm();
      #line 234 
      ldv_inline_asm();
    }
    #line 232 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 234 
    int __ret_warn_on_0 = (int)queue->tx_devq_used > (int)queue->tx_devq_size;
    #line 234 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 235 
      ldv_inline_asm();
      #line 236 
      ldv_inline_asm();
    }
    #line 234 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 239 
  if ((unsigned int)queue->tx_devq_packets == 31U) 
                                                   #line 240 
                                                   return -16;
  #line 241 
  if ((int)queue->tx_devq_used + (int)octets > (int)queue->tx_devq_size) 
    #line 242 
    return -16;
  #line 244 
  err = pio_tx_write_fragment(queue,skb,packet,82UL);
  #line 246 
  if ((long)(err == -126) != 0L) {
    #line 249 
    free_txpacket(packet,1);
    #line 250 
    return 0;
  }
  #line 256 
  queue->tx_devq_packets = (u8)((int)queue->tx_devq_packets + 1);
  #line 257 
  queue->tx_devq_used = (unsigned short)((int)queue->tx_devq_used + (int)octets);
  #line 262 
  list_move_tail(& packet->list,& queue->txrunning);
  #line 264 
  return 0;
}

#line 267  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void tx_tasklet(unsigned long d)
{
  #line 283 
  void *__mptr_0;
  #line 283 
  void *__mptr;
  #line 271 
  unsigned long flags;
  #line 272 
  struct b43legacy_pio_txpacket *packet;
  #line 272 
  struct b43legacy_pio_txpacket *tmp_packet;
  #line 273 
  int err;
  #line 274 
  u16 txctl;
  #line 269 
  struct b43legacy_pioqueue *queue = (struct b43legacy_pioqueue *)d;
  #line 270 
  struct b43legacy_wldev *dev = queue->dev;
  #line 276 
  cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_1(& (dev->wl)->irq_lock);
  #line 277 
  if ((int)queue->tx_frozen != 0) 
                                  #line 278 
                                  goto out_unlock;
  #line 279 
  txctl = b43legacy_pio_read(queue,(unsigned short)0);
  #line 280 
  if (((int)txctl & 128) != 0) 
                               #line 281 
                               goto out_unlock;
  #line 283 
  __mptr = (void *)queue->txqueue.next;
  #line 283 
  packet = ((struct b43legacy_pio_txpacket *)(__mptr + 18446744073709551600U));
  #line 283 
  __mptr_0 = (void *)packet->list.next;
  #line 284 
  tmp_packet = ((struct b43legacy_pio_txpacket *)(__mptr_0 + 18446744073709551600U));
  #line 283 
  while (& packet->list != & queue->txqueue) {
    #line 283 
    void *__mptr_1;
    #line 291 
    err = pio_tx_packet(packet);
    #line 292 
    if (err != 0) 
                  #line 293 
                  break;
    #line 283 
    packet = tmp_packet;
    #line 283 
    __mptr_1 = (void *)tmp_packet->list.next;
    #line 283 
    tmp_packet = ((struct b43legacy_pio_txpacket *)(__mptr_1 + 18446744073709551600U));
  }
  #line 295 
  out_unlock: 
              #line 295 
  ;
  #line 296 
  cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_1(& (dev->wl)->irq_lock,flags);
  #line 297 
  return;
}

#line 299  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void setup_txqueues(struct b43legacy_pioqueue *queue)
{
  #line 301 
  struct b43legacy_pio_txpacket *packet;
  #line 302 
  int i;
  #line 304 
  queue->nr_txfree = 256U;
  #line 305 
  i = 0;
  #line 305 
  while (i <= 255) {
    #line 306 
    packet = & queue->tx_packets_cache[i];
    #line 308 
    packet->queue = queue;
    #line 309 
    INIT_LIST_HEAD_0(& packet->list);
    #line 311 
    list_add_0(& packet->list,& queue->txfree);
    #line 305 
    i ++;
  }
  #line 313 
  return;
}

#line 316  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static struct b43legacy_pioqueue *b43legacy_setup_pioqueue(struct b43legacy_wldev *dev, u16 pio_mmio_base)
{
  #line 319 
  struct b43legacy_pioqueue *queue;
  #line 320 
  u32 value;
  #line 321 
  u16 qsize;
  #line 323 
  queue = (struct b43legacy_pioqueue *)kzalloc_2(8312UL,3264U);
  #line 324 
  if (queue == (struct b43legacy_pioqueue *)0) 
                                               #line 325 
                                               goto out;
  #line 327 
  queue->dev = dev;
  #line 328 
  queue->mmio_base = pio_mmio_base;
  #line 329 
  queue->need_workarounds = (_Bool)((unsigned int)(dev->dev)->id.revision <= 2U);
  #line 331 
  INIT_LIST_HEAD_0(& queue->txfree);
  #line 332 
  INIT_LIST_HEAD_0(& queue->txqueue);
  #line 333 
  INIT_LIST_HEAD_0(& queue->txrunning);
  #line 334 
  cif_tasklet_init_0(& queue->txtask,& tx_tasklet,(unsigned long)queue);
  #line 337 
  value = b43legacy_read32(dev,(unsigned short)288);
  #line 338 
  value &= 4294901759U;
  #line 339 
  b43legacy_write32(dev,(unsigned short)288,value);
  #line 341 
  qsize = b43legacy_read16(dev,(unsigned short)((int)((unsigned int)queue->mmio_base + 4U)));
  #line 343 
  if ((unsigned int)qsize == 0U) {
    #line 344 
    b43legacyerr(dev->wl,(char *)"This card does not support PIO ");
    #line 347 
    goto err_freequeue;
  }
  #line 349 
  if ((unsigned int)qsize <= 80U) {
    #line 350 
    b43legacyerr(dev->wl,(char *)"PIO tx device-queue too small (%u)\n",(int)qsize);
    #line 352 
    goto err_freequeue;
  }
  #line 354 
  qsize = (unsigned short)((unsigned int)qsize + 65456U);
  #line 355 
  queue->tx_devq_size = qsize;
  #line 357 
  setup_txqueues(queue);
  #line 359 
  out: 
       #line 359 
  ;
  #line 360 
  return queue;
  #line 362 
  err_freequeue: 
                 #line 362 
  ;
  #line 363 
  kfree((void *)queue);
  #line 364 
  queue = (struct b43legacy_pioqueue *)0;
  #line 365 
  goto out;
}

#line 368  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void cancel_transfers(struct b43legacy_pioqueue *queue)
{
  #line 376 
  void *__mptr_3;
  #line 374 
  void *__mptr_0;
  #line 376 
  void *__mptr_2;
  #line 374 
  void *__mptr;
  #line 370 
  struct b43legacy_pio_txpacket *packet;
  #line 370 
  struct b43legacy_pio_txpacket *tmp_packet;
  #line 372 
  tasklet_kill(& queue->txtask);
  #line 374 
  __mptr = (void *)queue->txrunning.next;
  #line 374 
  packet = ((struct b43legacy_pio_txpacket *)(__mptr + 18446744073709551600U));
  #line 374 
  __mptr_0 = (void *)packet->list.next;
  #line 375 
  tmp_packet = ((struct b43legacy_pio_txpacket *)(__mptr_0 + 18446744073709551600U));
  #line 374 
  while (& packet->list != & queue->txrunning) {
    #line 374 
    void *__mptr_1;
    #line 375 
    free_txpacket(packet,0);
    #line 374 
    packet = tmp_packet;
    #line 374 
    __mptr_1 = (void *)tmp_packet->list.next;
    #line 374 
    tmp_packet = ((struct b43legacy_pio_txpacket *)(__mptr_1 + 18446744073709551600U));
  }
  #line 376 
  __mptr_2 = (void *)queue->txqueue.next;
  #line 376 
  packet = ((struct b43legacy_pio_txpacket *)(__mptr_2 + 18446744073709551600U));
  #line 376 
  __mptr_3 = (void *)packet->list.next;
  #line 377 
  tmp_packet = ((struct b43legacy_pio_txpacket *)(__mptr_3 + 18446744073709551600U));
  #line 376 
  while (& packet->list != & queue->txqueue) {
    #line 376 
    void *__mptr_4;
    #line 377 
    free_txpacket(packet,0);
    #line 376 
    packet = tmp_packet;
    #line 376 
    __mptr_4 = (void *)tmp_packet->list.next;
    #line 376 
    tmp_packet = ((struct b43legacy_pio_txpacket *)(__mptr_4 + 18446744073709551600U));
  }
  #line 378 
  return;
}

#line 380  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void b43legacy_destroy_pioqueue(struct b43legacy_pioqueue *queue)
{
  #line 382 
  if (queue == (struct b43legacy_pioqueue *)0) 
                                               #line 383 
                                               return;
  #line 385 
  cancel_transfers(queue);
  #line 386 
  kfree((void *)queue);
  #line 387 
  return;
}

#line 389  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_free(struct b43legacy_wldev *dev)
{
  #line 391 
  struct b43legacy_pio *pio;
  #line 393 
  if (b43legacy_using_pio(dev) == 0) 
                                     #line 394 
                                     return;
  #line 395 
  pio = & dev->__anonCompField_b43legacy_wldev_210.pio;
  #line 397 
  b43legacy_destroy_pioqueue(pio->queue3);
  #line 398 
  pio->queue3 = (struct b43legacy_pioqueue *)0;
  #line 399 
  b43legacy_destroy_pioqueue(pio->queue2);
  #line 400 
  pio->queue2 = (struct b43legacy_pioqueue *)0;
  #line 401 
  b43legacy_destroy_pioqueue(pio->queue1);
  #line 402 
  pio->queue1 = (struct b43legacy_pioqueue *)0;
  #line 403 
  b43legacy_destroy_pioqueue(pio->queue0);
  #line 404 
  pio->queue0 = (struct b43legacy_pioqueue *)0;
  #line 405 
  return;
}

#line 407  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
int b43legacy_pio_init(struct b43legacy_wldev *dev)
{
  #line 410 
  struct b43legacy_pioqueue *queue;
  #line 409 
  struct b43legacy_pio *pio = & dev->__anonCompField_b43legacy_wldev_210.pio;
  #line 411 
  int err = -12;
  #line 413 
  queue = b43legacy_setup_pioqueue(dev,(unsigned short)768);
  #line 414 
  if (queue == (struct b43legacy_pioqueue *)0) 
                                               #line 415 
                                               goto out;
  #line 416 
  pio->queue0 = queue;
  #line 418 
  queue = b43legacy_setup_pioqueue(dev,(unsigned short)784);
  #line 419 
  if (queue == (struct b43legacy_pioqueue *)0) 
                                               #line 420 
                                               goto err_destroy0;
  #line 421 
  pio->queue1 = queue;
  #line 423 
  queue = b43legacy_setup_pioqueue(dev,(unsigned short)800);
  #line 424 
  if (queue == (struct b43legacy_pioqueue *)0) 
                                               #line 425 
                                               goto err_destroy1;
  #line 426 
  pio->queue2 = queue;
  #line 428 
  queue = b43legacy_setup_pioqueue(dev,(unsigned short)816);
  #line 429 
  if (queue == (struct b43legacy_pioqueue *)0) 
                                               #line 430 
                                               goto err_destroy2;
  #line 431 
  pio->queue3 = queue;
  #line 433 
  if ((unsigned int)(dev->dev)->id.revision <= 2U) 
                                                   #line 434 
                                                   dev->irq_mask |= 256U;
  #line 436 
  b43legacydbg(dev->wl,(char *)"PIO initialized\n");
  #line 437 
  err = 0;
  #line 438 
  out: 
       #line 438 
  ;
  #line 439 
  return err;
  #line 441 
  err_destroy2: 
                #line 441 
  ;
  #line 442 
  b43legacy_destroy_pioqueue(pio->queue2);
  #line 443 
  pio->queue2 = (struct b43legacy_pioqueue *)0;
  #line 444 
  err_destroy1: 
                #line 444 
  ;
  #line 445 
  b43legacy_destroy_pioqueue(pio->queue1);
  #line 446 
  pio->queue1 = (struct b43legacy_pioqueue *)0;
  #line 447 
  err_destroy0: 
                #line 447 
  ;
  #line 448 
  b43legacy_destroy_pioqueue(pio->queue0);
  #line 449 
  pio->queue0 = (struct b43legacy_pioqueue *)0;
  #line 450 
  goto out;
}

#line 453  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
int b43legacy_pio_tx(struct b43legacy_wldev *dev, struct sk_buff *skb)
{
  #line 462 
  void *__mptr;
  #line 457 
  struct b43legacy_pio_txpacket *packet;
  #line 456 
  struct b43legacy_pioqueue *queue = dev->__anonCompField_b43legacy_wldev_210.pio.queue1;
  {
    #line 459 
    int __ret_warn_on = (int)queue->tx_suspended != 0;
    #line 459 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 460 
      ldv_inline_asm();
      #line 461 
      ldv_inline_asm();
    }
    #line 459 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 460 
    int __ret_warn_on_0 = list_empty_0(& queue->txfree) != 0;
    #line 460 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 461 
      ldv_inline_asm();
      #line 462 
      ldv_inline_asm();
    }
    #line 460 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 462 
  __mptr = (void *)queue->txfree.next;
  #line 462 
  packet = ((struct b43legacy_pio_txpacket *)(__mptr + 18446744073709551600U));
  #line 464 
  packet->skb = skb;
  #line 466 
  list_move_tail(& packet->list,& queue->txqueue);
  #line 467 
  (queue->nr_txfree) --;
  {
    #line 468 
    int __ret_warn_on_1 = queue->nr_txfree > 255U;
    #line 468 
    if ((long)(__ret_warn_on_1 != 0) != 0L) {
      #line 469 
      ldv_inline_asm();
      #line 470 
      ldv_inline_asm();
    }
    #line 468 
    long tmp_5 = (long)(__ret_warn_on_1 != 0);
  }
  #line 470 
  cif_tasklet_schedule_0(& queue->txtask);
  #line 472 
  return 0;
}

#line 475  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_handle_txstatus(struct b43legacy_wldev *dev, struct b43legacy_txstatus *status)
{
  #line 478 
  struct b43legacy_pioqueue *queue;
  #line 479 
  struct b43legacy_pio_txpacket *packet;
  #line 480 
  struct ieee80211_tx_info *info;
  #line 481 
  int retry_limit;
  #line 483 
  queue = parse_cookie_0(dev,(unsigned short)((int)status->cookie),& packet);
  {
    #line 484 
    int __ret_warn_on = queue == (struct b43legacy_pioqueue *)0;
    #line 484 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 485 
      ldv_inline_asm();
      #line 486 
      ldv_inline_asm();
    }
    #line 484 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 486 
  if (packet->skb == (struct sk_buff *)0) 
                                          #line 487 
                                          return;
  #line 489 
  queue->tx_devq_packets = (u8)((int)queue->tx_devq_packets - 1);
  #line 490 
  queue->tx_devq_used = (unsigned short)((unsigned int)((int)queue->tx_devq_used - (int)((unsigned short)(packet->skb)->len)) + 65454U);
  #line 493 
  info = IEEE80211_SKB_CB(packet->skb);
  #line 498 
  retry_limit = (int)info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count;
  #line 499 
  ieee80211_tx_info_clear_status(info);
  #line 501 
  if ((unsigned int)status->acked != 0U) 
                                         #line 502 
                                         info->flags |= 512U;
  #line 504 
  if ((int)status->rts_count > (int)((dev->wl)->hw)->conf.short_frame_max_tx_count) {
    #line 512 
    info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count = (unsigned short)0U;
    #line 513 
    info->__anonCompField_ieee80211_tx_info_206.status.rates[1].count = (unsigned short)status->frame_count;
  }
  else 
    #line 515 
    if ((int)status->frame_count > retry_limit) {
      #line 516 
      info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count = (unsigned short)retry_limit;
      #line 517 
      info->__anonCompField_ieee80211_tx_info_206.status.rates[1].count = (unsigned short)((int)status->frame_count - (int)((unsigned char)retry_limit));
    }
    else {
      #line 521 
      info->__anonCompField_ieee80211_tx_info_206.status.rates[0].count = (unsigned short)status->frame_count;
      #line 522 
      info->__anonCompField_ieee80211_tx_info_206.status.rates[1].idx = (signed char)(-1);
    }
  #line 525 
  ieee80211_tx_status_irqsafe((dev->wl)->hw,packet->skb);
  #line 526 
  packet->skb = (struct sk_buff *)0;
  #line 528 
  free_txpacket(packet,1);
  #line 532 
  if (list_empty_0(& queue->txqueue) == 0) 
                                           #line 533 
                                           cif_tasklet_schedule_0(& queue->txtask);
  #line 534 
  return;
}

#line 536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
static void pio_rx_error(struct b43legacy_pioqueue *queue, int clear_buffers, char *error)
{
  #line 540 
  int i;
  #line 542 
  b43legacyerr((queue->dev)->wl,(char *)"PIO RX error: %s\n",error);
  #line 543 
  b43legacy_pio_write(queue,(unsigned short)8,(unsigned short)2);
  #line 545 
  if (clear_buffers != 0) {
    {
      #line 546 
      int __ret_warn_on = (unsigned int)queue->mmio_base != 768U;
      #line 546 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 547 
        ldv_inline_asm();
        #line 548 
        ldv_inline_asm();
      }
      #line 546 
      long tmp = (long)(__ret_warn_on != 0);
    }
    #line 547 
    i = 0;
    #line 547 
    while (i <= 14) {
      #line 549 
      b43legacy_pio_read(queue,(unsigned short)10);
      #line 547 
      i ++;
    }
  }
  #line 551 
  return;
}

#line 554  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_rx(struct b43legacy_pioqueue *queue)
{
  #line 557 
  struct b43legacy_rxhdr_fw3 *rxhdr;
  #line 558 
  u16 tmp;
  #line 559 
  u16 len;
  #line 560 
  u16 macstat;
  #line 561 
  int i;
  #line 562 
  int preamble_readwords;
  #line 563 
  struct sk_buff *skb;
  #line 556 
  __le16 preamble[21U] = {(unsigned short)0U};
  #line 565 
  tmp = b43legacy_pio_read(queue,(unsigned short)8);
  #line 566 
  if (((int)tmp & 1) == 0) 
                           #line 567 
                           return;
  #line 568 
  b43legacy_pio_write(queue,(unsigned short)8,(unsigned short)1);
  #line 571 
  i = 0;
  #line 571 
  while (i <= 9) {
    #line 572 
    tmp = b43legacy_pio_read(queue,(unsigned short)8);
    #line 573 
    if (((int)tmp & 2) != 0) 
                             #line 574 
                             goto data_ready;
    #line 575 
    __const_udelay(42950UL);
    #line 571 
    i ++;
  }
  #line 577 
  b43legacydbg((queue->dev)->wl,(char *)"PIO RX timed out\n");
  #line 578 
  return;
  #line 579 
  data_ready: 
              #line 579 
  ;
  #line 581 
  len = b43legacy_pio_read(queue,(unsigned short)10);
  #line 582 
  if ((long)((unsigned int)len > 1792U) != 0L) {
    #line 583 
    pio_rx_error(queue,0,(char *)"len > 0x700");
    #line 584 
    return;
  }
  #line 586 
  if ((long)((unsigned int)len == 0U) != 0L && (long)((unsigned int)queue->mmio_base != 816U) != 0L) {
    #line 588 
    pio_rx_error(queue,0,(char *)"len == 0");
    #line 589 
    return;
  }
  #line 591 
  preamble[0] = len;
  #line 592 
  if ((unsigned int)queue->mmio_base == 816U) 
                                              #line 593 
                                              preamble_readwords = 7; else 
                                                                    #line 595 
                                                                    preamble_readwords = 9;
  #line 596 
  i = 0;
  #line 596 
  while (i < preamble_readwords) {
    #line 597 
    tmp = b43legacy_pio_read(queue,(unsigned short)10);
    #line 598 
    preamble[i + 1] = tmp;
    #line 596 
    i ++;
  }
  #line 600 
  rxhdr = (struct b43legacy_rxhdr_fw3 *)(& preamble);
  #line 601 
  macstat = rxhdr->mac_status;
  #line 602 
  if (((int)macstat & 1) != 0) {
    #line 603 
    pio_rx_error(queue,(unsigned int)queue->mmio_base == 768U,(char *)"Frame FCS error");
    #line 606 
    return;
  }
  #line 608 
  if ((unsigned int)queue->mmio_base == 816U) {
    #line 610 
    struct b43legacy_hwtxstatus *hw;
    #line 612 
    hw = (struct b43legacy_hwtxstatus *)((__le16 *)(& preamble) + 1U);
    #line 613 
    b43legacy_handle_hwtxstatus(queue->dev,hw);
    #line 615 
    return;
  }
  #line 618 
  skb = dev_alloc_skb((unsigned int)len);
  #line 619 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    #line 620 
    pio_rx_error(queue,1,(char *)"OOM");
    #line 621 
    return;
  }
  #line 623 
  skb_put(skb,(unsigned int)len);
  #line 624 
  i = 0;
  #line 624 
  while ((int)len + -1 > i) {
    #line 625 
    tmp = b43legacy_pio_read(queue,(unsigned short)10);
    #line 626 
    *((__le16 *)(skb->data + (unsigned long)i)) = tmp;
    #line 624 
    i += 2;
  }
  #line 628 
  if (((unsigned int)len & 1U) != 0U) {
    #line 629 
    tmp = b43legacy_pio_read(queue,(unsigned short)10);
    #line 630 
    *(skb->data + ((unsigned long)len + 18446744073709551615U)) = (unsigned char)tmp;
  }
  #line 632 
  b43legacy_rx(queue->dev,skb,(void *)rxhdr);
  #line 633 
  return;
}

#line 635  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_tx_suspend(struct b43legacy_pioqueue *queue)
{
  #line 637 
  b43legacy_power_saving_ctl_bits(queue->dev,-1,1);
  #line 638 
  ;
  #line 638 
  b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)((int)((unsigned int)b43legacy_pio_read(queue,(unsigned short)0) | 128U)));
  #line 640 
  return;
}

#line 643  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_tx_resume(struct b43legacy_pioqueue *queue)
{
  #line 645 
  ;
  #line 645 
  b43legacy_pio_write(queue,(unsigned short)0,(unsigned short)((int)b43legacy_pio_read(queue,(unsigned short)0) & 65407));
  #line 648 
  b43legacy_power_saving_ctl_bits(queue->dev,-1,-1);
  #line 649 
  cif_tasklet_schedule_0(& queue->txtask);
  #line 650 
  return;
}

#line 652  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_freeze_txqueues(struct b43legacy_wldev *dev)
{
  #line 654 
  struct b43legacy_pio *pio;
  {
    #line 656 
    int __ret_warn_on = b43legacy_using_pio(dev) == 0;
    #line 656 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 657 
      ldv_inline_asm();
      #line 658 
      ldv_inline_asm();
    }
    #line 656 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 657 
  pio = & dev->__anonCompField_b43legacy_wldev_210.pio;
  #line 658 
  (pio->queue0)->tx_frozen = (_Bool)1;
  #line 659 
  (pio->queue1)->tx_frozen = (_Bool)1;
  #line 660 
  (pio->queue2)->tx_frozen = (_Bool)1;
  #line 661 
  (pio->queue3)->tx_frozen = (_Bool)1;
  #line 662 
  return;
}

#line 664  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/pio.c"
void b43legacy_pio_thaw_txqueues(struct b43legacy_wldev *dev)
{
  #line 666 
  struct b43legacy_pio *pio;
  {
    #line 668 
    int __ret_warn_on = b43legacy_using_pio(dev) == 0;
    #line 668 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 669 
      ldv_inline_asm();
      #line 670 
      ldv_inline_asm();
    }
    #line 668 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  #line 669 
  pio = & dev->__anonCompField_b43legacy_wldev_210.pio;
  #line 670 
  (pio->queue0)->tx_frozen = (_Bool)0;
  #line 671 
  (pio->queue1)->tx_frozen = (_Bool)0;
  #line 672 
  (pio->queue2)->tx_frozen = (_Bool)0;
  #line 673 
  (pio->queue3)->tx_frozen = (_Bool)0;
  #line 674 
  if (list_empty_0(& (pio->queue0)->txqueue) == 0) 
                                                   #line 675 
                                                   cif_tasklet_schedule_0(& (pio->queue0)->txtask);
  #line 676 
  if (list_empty_0(& (pio->queue1)->txqueue) == 0) 
                                                   #line 677 
                                                   cif_tasklet_schedule_0(& (pio->queue1)->txtask);
  #line 678 
  if (list_empty_0(& (pio->queue2)->txqueue) == 0) 
                                                   #line 679 
                                                   cif_tasklet_schedule_0(& (pio->queue2)->txtask);
  #line 680 
  if (list_empty_0(& (pio->queue3)->txqueue) == 0) 
                                                   #line 681 
                                                   cif_tasklet_schedule_0(& (pio->queue3)->txtask);
  #line 682 
  return;
}

#line 135  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void INIT_LIST_HEAD_0(struct list_head *list)
{
  #line 138 
  ldv_init_list_head(list);
  #line 139 
  return;
}

#line 358  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void *kzalloc_2(size_t size, gfp_t flags)
{
  #line 361 
  return ldv_kzalloc(size,flags);
}

#line 807  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif___ldv_spin_lock_irq_lock_of_b43legacy_wl_1(spinlock_t *lock)
{
  #line 810 
  ldv_spin_model_lock((char *)"irq_lock_of_b43legacy_wl");
  #line 812 
  __ldv_spin_lock(lock);
  #line 813 
  return;
}

#line 816  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif_spin_unlock_irqrestore_irq_lock_of_b43legacy_wl_1(spinlock_t *lock, unsigned long flags)
{
  #line 819 
  ldv_spin_model_unlock((char *)"irq_lock_of_b43legacy_wl");
  #line 821 
  spin_unlock_irqrestore_3(lock,flags);
  #line 822 
  return;
}

#line 825  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif_tasklet_init_0(struct tasklet_struct *t, void (*func)(unsigned long ), unsigned long data)
{
  #line 829 
  emg_tasklet_init(t,func,data);
  #line 830 
  return;
}

#line 833  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/pio.i.aux"
static void cif_tasklet_schedule_0(struct tasklet_struct *t)
{
  #line 837 
  emg_tasklet_schedule(t);
  #line 838 
  return;
}

#line 204  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/printk.h"
#line 204 
void dump_stack(void);
#line 203  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/kernel.h"
#line 203 
void ___might_sleep(char *, int, int);
#line 9  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/cmpxchg_64.h"
__inline static int arch_atomic_read_3(atomic_t *v)
{
  #line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/atomic.h"
  union __anonunion___u_8478 __u;
  #line 31 
  __read_once_size((void *)(& v->counter),(void *)(& __u.__c),4);
  #line 31 
  return (__u.__val);
}

#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/asm-generic/atomic-instrumented.h"
__inline static int atomic_read_3(atomic_t *v)
{
  #line 26 
  kasan_check_read((void *)v,4U);
  #line 27 
  return arch_atomic_read_3(v);
}

#line 750  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f)
{
  #line 752 
  unsigned long __edi = __edi;
  #line 752 
  unsigned long __esi = __esi;
  #line 752 
  unsigned long __edx = __edx;
  #line 752 
  unsigned long __ecx = __ecx;
  #line 752 
  unsigned long __eax = __eax;
  #line 752 
  if ((long)(pv_ops.irq.restore_fl.func == (void *)0) != 0L) {
    #line 753 
    ldv_inline_asm();
    #line 754 
    ldv_inline_asm();
    #line 755 
    ldv_inline_asm();
    #line 752 
    ;
  }
  #line 756 
  ldv_inline_asm();
  #line 758 
  return;
}

#line 755  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  #line 757 
  unsigned long __edi = __edi;
  #line 757 
  unsigned long __esi = __esi;
  #line 757 
  unsigned long __edx = __edx;
  #line 757 
  unsigned long __ecx = __ecx;
  #line 757 
  unsigned long __eax = __eax;
  #line 757 
  if ((long)(pv_ops.irq.irq_disable.func == (void *)0) != 0L) {
    #line 758 
    ldv_inline_asm();
    #line 759 
    ldv_inline_asm();
    #line 760 
    ldv_inline_asm();
    #line 757 
    ;
  }
  #line 761 
  ldv_inline_asm();
  #line 763 
  return;
}

#line 765  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void)
{
  #line 767 
  unsigned long f;
  #line 769 
  f = arch_local_save_flags();
  #line 770 
  arch_local_irq_disable();
  #line 771 
  return f;
}

#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/irqflags.h"
#line 32 
void trace_hardirqs_on(void);
#line 33 
#line 33 
void trace_hardirqs_off(void);
#line 1778  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/sched.h"
#line 1778 
int _cond_resched(void);
#line 542  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/slab.h"
#line 443  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/phy.i.aux"
static void *kmalloc_0(size_t size, gfp_t flags);
#line 161  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lock(struct b43legacy_wldev *dev);
#line 162  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_unlock(struct b43legacy_wldev *dev);
#line 168  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
u16 b43legacy_phy_read(struct b43legacy_wldev *dev, u16 offset);
#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_write(struct b43legacy_wldev *dev, u16 offset, u16 val);
#line 180  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 1121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lo_b_measure(struct b43legacy_wldev *dev);
#line 187  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 1315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lo_adjust(struct b43legacy_wldev *dev, int fixed);
#line 190  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.h"
#line 1441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_set_baseband_attenuation(struct b43legacy_wldev *dev, u16 bbatt);
#line 801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static bool is_bcm_board_vendor(struct b43legacy_wldev *dev)
{
  #line 803 
  return (_Bool)((unsigned int)((dev->dev)->bus)->boardinfo.vendor == 5348U);
}

#line 831  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/b43legacy.h"
__inline static struct b43legacy_lopair *b43legacy_get_lopair(struct b43legacy_phy *phy, u16 radio_attenuation, u16 baseband_attenuation)
{
  #line 835 
  return phy->_lo_pairs + (unsigned long)((int)radio_attenuation + (int)((unsigned int)baseband_attenuation / 2U) * 14);
}

#line 42  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 42 
void b43legacy_radio_lock(struct b43legacy_wldev *dev);
#line 43 
#line 43 
void b43legacy_radio_unlock(struct b43legacy_wldev *dev);
#line 45 
#line 45 
u16 b43legacy_radio_read16(struct b43legacy_wldev *dev, u16 offset);
#line 48 
#line 48 
u16 b43legacy_radio_init2050(struct b43legacy_wldev *dev);
#line 57 
#line 57 
void b43legacy_radio_set_txpower_bg(struct b43legacy_wldev *dev, u16 baseband_attenuation, u16 radio_attenuation, u16 txpower);
#line 67 
#line 67 
void b43legacy_radio_clear_tssi(struct b43legacy_wldev *dev);
#line 76 
#line 76 
void b43legacy_calc_nrssi_threshold(struct b43legacy_wldev *dev);
#line 78 
#line 78 
void b43legacy_nrssi_hw_write(struct b43legacy_wldev *dev, u16 offset, s16 val);
#line 79 
#line 79 
void b43legacy_nrssi_hw_update(struct b43legacy_wldev *dev, u16 val);
#line 6  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u32 b43legacy_ilt_rotor[53U];
#line 8  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u32 b43legacy_ilt_retard[53U];
#line 12  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_finefreqg[256U];
#line 18  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noiseg1[8U];
#line 20  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noiseg2[8U];
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 236  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisescaleg1[27U];
#line 23  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisescaleg2[27U];
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisescaleg3[27U];
#line 26  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_sigmasqr1[53U];
#line 27  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_sigmasqr2[53U];
#line 30  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 30 
void b43legacy_ilt_write(struct b43legacy_wldev *dev, u16 offset, u16 val);
#line 31 
#line 31 
void b43legacy_ilt_write32(struct b43legacy_wldev *dev, u16 offset, u32 val);
#line 32  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static s8 b43legacy_tssi2dbm_b_table[64U] = {(signed char)77, (signed char)76, (signed char)75, (signed char)74, (signed char)74, (signed char)73, (signed char)72, (signed char)71, (signed char)71, (signed char)70, (signed char)69, (signed char)69, (signed char)68, (signed char)67, (signed char)66, (signed char)66, (signed char)65, (signed char)64, (signed char)63, (signed char)62, (signed char)61, (signed char)60, (signed char)59, (signed char)58, (signed char)57, (signed char)56, (signed char)55, (signed char)54, (signed char)53, (signed char)52, (signed char)50, (signed char)49, (signed char)48, (signed char)47, (signed char)45, (signed char)44, (signed char)43, (signed char)41, (signed char)40, (signed char)38, (signed char)37, (signed char)35, (signed char)33, (signed char)31, (signed char)29, (signed char)26, (signed char)23, (signed char)20, (signed char)16, (signed char)12, (signed char)6, [52] = (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7), (signed char)(-7)};
#line 51  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static s8 b43legacy_tssi2dbm_g_table[64U] = {(signed char)77, (signed char)77, (signed char)77, (signed char)76, (signed char)76, (signed char)76, (signed char)75, (signed char)75, (signed char)74, (signed char)74, (signed char)73, (signed char)73, (signed char)73, (signed char)72, (signed char)72, (signed char)71, (signed char)71, (signed char)70, (signed char)70, (signed char)69, (signed char)68, (signed char)68, (signed char)67, (signed char)67, (signed char)66, (signed char)65, (signed char)65, (signed char)64, (signed char)63, (signed char)63, (signed char)62, (signed char)61, (signed char)60, (signed char)59, (signed char)58, (signed char)57, (signed char)56, (signed char)55, (signed char)54, (signed char)53, (signed char)52, (signed char)50, (signed char)49, (signed char)47, (signed char)45, (signed char)43, (signed char)40, (signed char)37, (signed char)33, (signed char)28, (signed char)22, (signed char)14, (signed char)5, (signed char)(-7), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20), (signed char)(-20)};
#line 70 
#line 983 
static void b43legacy_phy_initg(struct b43legacy_wldev *dev);
#line 74  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lock(struct b43legacy_wldev *dev)
{
  {
    #line 77 
    int __ret_warn_on = (int)dev->phy.phy_locked != 0;
    #line 77 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 78 
      ldv_inline_asm();
      #line 79 
      ldv_inline_asm();
    }
    #line 77 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 78 
  dev->phy.phy_locked = (_Bool)1;
  #line 81 
  if ((unsigned int)(dev->dev)->id.revision <= 2U) 
                                                   #line 82 
                                                   b43legacy_mac_suspend(dev);
  else {
    #line 84 
    if (b43legacy_is_mode(dev->wl,3) == 0) 
                                           #line 85 
                                           b43legacy_power_saving_ctl_bits(dev,-1,1);
  }
  #line 86 
  return;
}

#line 89  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_unlock(struct b43legacy_wldev *dev)
{
  {
    #line 92 
    int __ret_warn_on = ! dev->phy.phy_locked;
    #line 92 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 93 
      ldv_inline_asm();
      #line 94 
      ldv_inline_asm();
    }
    #line 92 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 93 
  dev->phy.phy_locked = (_Bool)0;
  #line 96 
  if ((unsigned int)(dev->dev)->id.revision <= 2U) 
                                                   #line 97 
                                                   b43legacy_mac_enable(dev);
  else {
    #line 99 
    if (b43legacy_is_mode(dev->wl,3) == 0) 
                                           #line 100 
                                           b43legacy_power_saving_ctl_bits(dev,-1,-1);
  }
  #line 101 
  return;
}

#line 104  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
u16 b43legacy_phy_read(struct b43legacy_wldev *dev, u16 offset)
{
  #line 106 
  b43legacy_write16(dev,(unsigned short)1020,(unsigned short)((int)offset));
  #line 107 
  return b43legacy_read16(dev,(unsigned short)1022);
}

#line 110  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_write(struct b43legacy_wldev *dev, u16 offset, u16 val)
{
  #line 112 
  b43legacy_write16(dev,(unsigned short)1020,(unsigned short)((int)offset));
  #line 113 
  b43legacy_write16(dev,(unsigned short)1022,(unsigned short)((int)val));
  #line 114 
  return;
}

#line 116  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_calibrate(struct b43legacy_wldev *dev)
{
  #line 118 
  struct b43legacy_phy *phy = & dev->phy;
  #line 120 
  b43legacy_read32(dev,(unsigned short)288);
  #line 121 
  if ((unsigned int)phy->calibrated != 0U) 
                                           #line 122 
                                           return;
  #line 123 
  if ((unsigned int)phy->type == 2U && (unsigned int)phy->rev == 1U) {
    #line 124 
    b43legacy_wireless_core_reset(dev,0U);
    #line 125 
    b43legacy_phy_initg(dev);
    #line 126 
    b43legacy_wireless_core_reset(dev,536870912U);
  }
  #line 128 
  phy->calibrated = (unsigned char)1U;
  #line 129 
  return;
}

#line 134  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_init_pctl(struct b43legacy_wldev *dev)
{
  #line 136 
  struct b43legacy_phy *phy = & dev->phy;
  #line 137 
  u16 saved_batt = (unsigned short)0U;
  #line 138 
  u16 saved_ratt = (unsigned short)0U;
  #line 139 
  u16 saved_txctl1 = (unsigned short)0U;
  #line 140 
  int must_reset_txpower = 0;
  #line 142 
  if ((long)((unsigned int)phy->type + 255U > 1U) != 0L) {
    #line 142 
    printk((char *)"\001",(char *)"!(phy->type == B43legacy_PHYTYPE_B || phy->type == B43legacy_PHYTYPE_G)");
    #line 142 
    if ((long)((unsigned int)phy->type + 255U > 1U) != 0L) {
      #line 143 
      ldv_inline_asm();
      #line 144 
      ldv_inline_asm();
      #line 145 
      ldv_inline_asm();
      #line 142 
      ;
    }
  }
  #line 144 
  if ((int)is_bcm_board_vendor(dev) != 0) 
    #line 144 
    if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1046U) 
                                                                  #line 146 
                                                                  return;
  #line 148 
  b43legacy_phy_write(dev,(unsigned short)40,(unsigned short)32792);
  #line 149 
  ;
  #line 149 
  b43legacy_write16(dev,(unsigned short)998,(unsigned short)((int)b43legacy_read16(dev,(unsigned short)998) & 65503));
  #line 151 
  if ((unsigned int)phy->type == 2U) {
    #line 152 
    if (! phy->gmode) 
                      #line 153 
                      return;
    #line 154 
    b43legacy_phy_write(dev,(unsigned short)1146,(unsigned short)49425);
  }
  #line 156 
  if ((unsigned int)phy->savedpctlreg != 65535U) 
                                                 #line 157 
                                                 return;
  #line 159 
  if ((int)phy->manual_txpower_control != 0) 
                                             #line 160 
                                             return;
  #line 163 
  if (((unsigned int)phy->type == 1U && (unsigned int)phy->rev > 1U) && (unsigned int)phy->radio_ver == 8272U) {
    #line 166 
    ;
    #line 166 
    b43legacy_radio_write16(dev,(unsigned short)118,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)118) | 132U)));
  }
  else {
    #line 170 
    saved_batt = phy->__anonCompField_b43legacy_phy_208.bbatt;
    #line 171 
    saved_ratt = phy->__anonCompField_b43legacy_phy_208.rfatt;
    #line 172 
    saved_txctl1 = phy->__anonCompField_b43legacy_phy_208.txctl1;
    #line 177 
    b43legacy_radio_set_txpower_bg(dev,(unsigned short)11,(unsigned short)9,(unsigned short)0);
    #line 178 
    must_reset_txpower = 1;
  }
  #line 180 
  b43legacy_dummy_transmission(dev);
  #line 182 
  phy->savedpctlreg = b43legacy_phy_read(dev,(unsigned short)41);
  #line 184 
  if (must_reset_txpower != 0) 
                               #line 185 
                               b43legacy_radio_set_txpower_bg(dev,(unsigned short)((int)saved_batt),(unsigned short)((int)saved_ratt),(unsigned short)((int)saved_txctl1));
  else {
    #line 188 
    ;
    #line 188 
    b43legacy_radio_write16(dev,(unsigned short)118,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)118) & 65403));
  }
  #line 190 
  b43legacy_radio_clear_tssi(dev);
  #line 191 
  return;
}

#line 193  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_agcsetup(struct b43legacy_wldev *dev)
{
  #line 195 
  struct b43legacy_phy *phy = & dev->phy;
  #line 196 
  u16 offset = (unsigned short)0U;
  #line 198 
  if ((unsigned int)phy->rev == 1U) 
                                    #line 199 
                                    offset = (unsigned short)19456U;
  #line 201 
  b43legacy_ilt_write(dev,(unsigned short)((int)offset),(unsigned short)254);
  #line 202 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 1U)),(unsigned short)13);
  #line 203 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 2U)),(unsigned short)19);
  #line 204 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 3U)),(unsigned short)25);
  #line 206 
  if ((unsigned int)phy->rev == 1U) {
    #line 207 
    b43legacy_ilt_write(dev,(unsigned short)6144,(unsigned short)10000);
    #line 208 
    b43legacy_ilt_write(dev,(unsigned short)6145,(unsigned short)39811);
    #line 209 
    b43legacy_ilt_write(dev,(unsigned short)6146,(unsigned short)39811);
    #line 210 
    b43legacy_ilt_write(dev,(unsigned short)6147,(unsigned short)3981);
    #line 211 
    b43legacy_phy_write(dev,(unsigned short)1109,(unsigned short)4);
  }
  #line 214 
  ;
  #line 214 
  b43legacy_phy_write(dev,(unsigned short)1189,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1189) & 255) | 22272))));
  #line 216 
  ;
  #line 216 
  b43legacy_phy_write(dev,(unsigned short)1050,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1050) & -128) | 15))));
  #line 218 
  ;
  #line 218 
  b43legacy_phy_write(dev,(unsigned short)1050,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1050) & -16257) | 11136))));
  #line 220 
  ;
  #line 220 
  b43legacy_phy_write(dev,(unsigned short)1164,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1164) & -3841) | 768))));
  #line 223 
  ;
  #line 223 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 8U)));
  #line 227 
  ;
  #line 227 
  b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1184) & -16) | 8))));
  #line 229 
  ;
  #line 229 
  b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1185) & -3841) | 1536))));
  #line 231 
  ;
  #line 231 
  b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -3841) | 1792))));
  #line 233 
  ;
  #line 233 
  b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1184) & -3841) | 256))));
  #line 236 
  if ((unsigned int)phy->rev == 1U) {
    #line 237 
    ;
    #line 237 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -16) | 7))));
  }
  #line 241 
  ;
  #line 241 
  b43legacy_phy_write(dev,(unsigned short)1160,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1160) & -256) | 28))));
  #line 243 
  ;
  #line 243 
  b43legacy_phy_write(dev,(unsigned short)1160,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1160) & -16129) | 512))));
  #line 245 
  ;
  #line 245 
  b43legacy_phy_write(dev,(unsigned short)1174,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1174) & -256) | 28))));
  #line 247 
  ;
  #line 247 
  b43legacy_phy_write(dev,(unsigned short)1161,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1161) & -256) | 32))));
  #line 249 
  ;
  #line 249 
  b43legacy_phy_write(dev,(unsigned short)1161,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1161) & -16129) | 512))));
  #line 251 
  ;
  #line 251 
  b43legacy_phy_write(dev,(unsigned short)1154,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1154) & -256) | 46))));
  #line 253 
  ;
  #line 253 
  b43legacy_phy_write(dev,(unsigned short)1174,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1174) & 255) | 6656))));
  #line 255 
  ;
  #line 255 
  b43legacy_phy_write(dev,(unsigned short)1153,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1153) & -256) | 40))));
  #line 257 
  ;
  #line 257 
  b43legacy_phy_write(dev,(unsigned short)1153,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1153) & 255) | 11264))));
  #line 260 
  if ((unsigned int)phy->rev == 1U) {
    #line 261 
    b43legacy_phy_write(dev,(unsigned short)1072,(unsigned short)2347);
    #line 262 
    ;
    #line 262 
    b43legacy_phy_write(dev,(unsigned short)1051,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1051) & -31) | 2))));
  }
  else {
    #line 266 
    ;
    #line 266 
    b43legacy_phy_write(dev,(unsigned short)1051,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1051) & 65505));
    #line 268 
    b43legacy_phy_write(dev,(unsigned short)1055,(unsigned short)10362);
    #line 269 
    ;
    #line 269 
    b43legacy_phy_write(dev,(unsigned short)1056,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1056) & -16) | 4))));
  }
  #line 274 
  if ((unsigned int)phy->rev > 2U) {
    #line 275 
    b43legacy_phy_write(dev,(unsigned short)1058,(unsigned short)10362);
    #line 276 
    ;
    #line 276 
    b43legacy_phy_write(dev,(unsigned short)1056,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1056) & 4095) | 12288))));
  }
  #line 281 
  ;
  #line 281 
  b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1192) & -32640) | 30836))));
  #line 283 
  b43legacy_phy_write(dev,(unsigned short)1166,(unsigned short)7168);
  #line 285 
  if ((unsigned int)phy->rev == 1U) {
    #line 286 
    ;
    #line 286 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1195) & -3841) | 1536))));
    #line 289 
    b43legacy_phy_write(dev,(unsigned short)1163,(unsigned short)94);
    #line 290 
    ;
    #line 290 
    b43legacy_phy_write(dev,(unsigned short)1164,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1164) & -256) | 30))));
    #line 293 
    b43legacy_phy_write(dev,(unsigned short)1165,(unsigned short)2);
  }
  #line 296 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 2048U)),(unsigned short)0);
  #line 297 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 2049U)),(unsigned short)7);
  #line 298 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 2050U)),(unsigned short)16);
  #line 299 
  b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)offset + 2051U)),(unsigned short)28);
  #line 301 
  if ((unsigned int)phy->rev > 5U) {
    #line 302 
    ;
    #line 302 
    b43legacy_phy_write(dev,(unsigned short)1062,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1062) & 65532));
    #line 304 
    ;
    #line 304 
    b43legacy_phy_write(dev,(unsigned short)1062,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1062) & 61439));
  }
  #line 307 
  return;
}

#line 309  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_setupg(struct b43legacy_wldev *dev)
{
  #line 312 
  u16 i;
  #line 311 
  struct b43legacy_phy *phy = & dev->phy;
  #line 314 
  if ((long)((unsigned int)phy->type != 2U) != 0L) {
    #line 314 
    printk((char *)"\001",(char *)"phy->type != B43legacy_PHYTYPE_G");
    #line 314 
    if ((long)((unsigned int)phy->type != 2U) != 0L) {
      #line 315 
      ldv_inline_asm();
      #line 316 
      ldv_inline_asm();
      #line 317 
      ldv_inline_asm();
      #line 314 
      ;
    }
  }
  #line 315 
  if ((unsigned int)phy->rev == 1U) {
    #line 316 
    b43legacy_phy_write(dev,(unsigned short)1030,(unsigned short)20249);
    #line 317 
    ;
    #line 317 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1065) & -961) | 832))));
    #line 320 
    b43legacy_phy_write(dev,(unsigned short)1068,(unsigned short)90);
    #line 321 
    b43legacy_phy_write(dev,(unsigned short)1063,(unsigned short)26);
    #line 323 
    i = (unsigned short)0U;
    #line 323 
    while ((unsigned int)i <= 255U) {
      #line 324 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 22528U)),(unsigned short)((int)b43legacy_ilt_finefreqg[(int)i]));
      #line 323 
      i = (u16)((int)i + 1);
    }
    #line 326 
    i = (unsigned short)0U;
    #line 326 
    while ((unsigned int)i <= 7U) {
      #line 327 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 6144U)),(unsigned short)((int)b43legacy_ilt_noiseg1[(int)i]));
      #line 326 
      i = (u16)((int)i + 1);
    }
    #line 329 
    i = (unsigned short)0U;
    #line 329 
    while ((unsigned int)i <= 52U) {
      #line 330 
      b43legacy_ilt_write32(dev,(unsigned short)((int)((unsigned int)i + 8192U)),b43legacy_ilt_rotor[(int)i]);
      #line 329 
      i = (u16)((int)i + 1);
    }
  }
  else {
    #line 334 
    b43legacy_nrssi_hw_write(dev,(unsigned short)47768,(short)30292);
    #line 336 
    if ((unsigned int)phy->rev == 2U) {
      #line 337 
      b43legacy_phy_write(dev,(unsigned short)1216,(unsigned short)6241);
      #line 338 
      b43legacy_phy_write(dev,(unsigned short)1217,(unsigned short)625);
    }
    else 
      #line 339 
      if ((unsigned int)phy->rev > 2U) {
        #line 340 
        b43legacy_phy_write(dev,(unsigned short)1216,(unsigned short)152);
        #line 341 
        b43legacy_phy_write(dev,(unsigned short)1217,(unsigned short)112);
        #line 342 
        b43legacy_phy_write(dev,(unsigned short)1225,(unsigned short)128);
      }
    #line 344 
    ;
    #line 344 
    b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1067) | 2048U)));
    #line 347 
    i = (unsigned short)0U;
    #line 347 
    while ((unsigned int)i <= 63U) {
      #line 348 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 16384U)),(unsigned short)((int)i));
      #line 347 
      i = (u16)((int)i + 1);
    }
    #line 349 
    i = (unsigned short)0U;
    #line 349 
    while ((unsigned int)i <= 7U) {
      #line 350 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 6144U)),(unsigned short)((int)b43legacy_ilt_noiseg2[(int)i]));
      #line 349 
      i = (u16)((int)i + 1);
    }
  }
  #line 354 
  if ((unsigned int)phy->rev <= 2U) {
    #line 355 
    i = (unsigned short)0U;
    #line 355 
    while ((unsigned int)i <= 26U) {
      #line 356 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 5120U)),(unsigned short)((int)b43legacy_ilt_noisescaleg1[(int)i]));
      #line 355 
      i = (u16)((int)i + 1);
    }
  }
  else 
    #line 358 
    if ((unsigned int)phy->rev > 6U) {
      #line 358 
      if (((int)b43legacy_phy_read(dev,(unsigned short)1097) & 512) != 0) {
        #line 359 
        i = (unsigned short)0U;
        #line 359 
        while ((unsigned int)i <= 26U) {
          #line 360 
          b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 5120U)),(unsigned short)((int)b43legacy_ilt_noisescaleg3[(int)i]));
          #line 359 
          i = (u16)((int)i + 1);
        }
      }
      else 
           #line 358 
           goto _LAND;
    }
    else {
      #line 358 
      _LAND: {
               #line 363 
               i = (unsigned short)0U;
               #line 363 
               while ((unsigned int)i <= 26U) {
                 #line 364 
                 b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 5120U)),(unsigned short)((int)b43legacy_ilt_noisescaleg2[(int)i]));
                 #line 363 
                 i = (u16)((int)i + 1);
               }
             }
    }
  #line 367 
  if ((unsigned int)phy->rev == 2U) {
    #line 368 
    i = (unsigned short)0U;
    #line 368 
    while ((unsigned int)i <= 52U) {
      #line 369 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 20480U)),(unsigned short)((int)b43legacy_ilt_sigmasqr1[(int)i]));
      #line 368 
      i = (u16)((int)i + 1);
    }
  }
  else 
    #line 371 
    if ((unsigned int)phy->rev + 253U <= 5U) {
      #line 372 
      i = (unsigned short)0U;
      #line 372 
      while ((unsigned int)i <= 52U) {
        #line 373 
        b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 20480U)),(unsigned short)((int)b43legacy_ilt_sigmasqr2[(int)i]));
        #line 372 
        i = (u16)((int)i + 1);
      }
    }
  #line 376 
  if ((unsigned int)phy->rev == 1U) {
    #line 377 
    i = (unsigned short)0U;
    #line 377 
    while ((unsigned int)i <= 52U) {
      #line 378 
      b43legacy_ilt_write32(dev,(unsigned short)((int)((unsigned int)i + 9216U)),b43legacy_ilt_retard[(int)i]);
      #line 377 
      i = (u16)((int)i + 1);
    }
    #line 380 
    i = (unsigned short)4U;
    #line 380 
    while ((unsigned int)i <= 19U) {
      #line 381 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 21504U)),(unsigned short)32);
      #line 380 
      i = (u16)((int)i + 1);
    }
    #line 382 
    b43legacy_phy_agcsetup(dev);
    #line 384 
    if ((int)is_bcm_board_vendor(dev) != 0) 
      #line 384 
      if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1046U) 
        #line 385 
        if ((unsigned int)((dev->dev)->bus)->sprom.board_rev == 23U) 
          #line 387 
          return;
    #line 389 
    b43legacy_ilt_write(dev,(unsigned short)20481,(unsigned short)2);
    #line 390 
    b43legacy_ilt_write(dev,(unsigned short)20482,(unsigned short)1);
  }
  else {
    #line 392 
    i = (unsigned short)0U;
    #line 392 
    while ((unsigned int)i <= 32U) {
      #line 393 
      b43legacy_ilt_write(dev,(unsigned short)((int)((unsigned int)i + 4096U)),(unsigned short)2080);
      #line 392 
      i = (u16)((int)i + 1);
    }
    #line 394 
    b43legacy_phy_agcsetup(dev);
    #line 395 
    b43legacy_phy_read(dev,(unsigned short)1024);
    #line 396 
    b43legacy_phy_write(dev,(unsigned short)1027,(unsigned short)4096);
    #line 397 
    b43legacy_ilt_write(dev,(unsigned short)15362,(unsigned short)15);
    #line 398 
    b43legacy_ilt_write(dev,(unsigned short)15363,(unsigned short)20);
    #line 400 
    if ((int)is_bcm_board_vendor(dev) != 0) 
      #line 400 
      if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1046U) 
        #line 401 
        if ((unsigned int)((dev->dev)->bus)->sprom.board_rev == 23U) 
          #line 403 
          return;
    #line 405 
    b43legacy_ilt_write(dev,(unsigned short)1025,(unsigned short)2);
    #line 406 
    b43legacy_ilt_write(dev,(unsigned short)1026,(unsigned short)1);
  }
  #line 408 
  return;
}

#line 411  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_inita(struct b43legacy_wldev *dev)
{
  #line 414 
  __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c",414,0);
  #line 416 
  b43legacy_phy_setupg(dev);
  #line 417 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 2) != 0) 
                                                              #line 418 
                                                              b43legacy_phy_write(dev,(unsigned short)1134,(unsigned short)975);
  #line 419 
  return;
}

#line 421  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_initb2(struct b43legacy_wldev *dev)
{
  #line 424 
  u16 offset;
  #line 425 
  int val;
  #line 423 
  struct b43legacy_phy *phy = & dev->phy;
  #line 427 
  b43legacy_write16(dev,(unsigned short)1004,(unsigned short)16162);
  #line 428 
  b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)12316);
  #line 429 
  b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)0);
  #line 430 
  b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)198);
  #line 431 
  b43legacy_phy_write(dev,(unsigned short)136,(unsigned short)15872);
  #line 432 
  val = 15421;
  #line 433 
  offset = (unsigned short)137U;
  #line 433 
  while ((unsigned int)offset <= 166U) {
    #line 434 
    b43legacy_phy_write(dev,(unsigned short)((int)offset),(unsigned short)((int)((unsigned short)val)));
    #line 435 
    val += -514;
    #line 433 
    offset = (u16)((int)offset + 1);
  }
  #line 437 
  b43legacy_phy_write(dev,(unsigned short)996,(unsigned short)12288);
  #line 438 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)phy->channel),0);
  #line 439 
  if ((unsigned int)phy->radio_ver != 8272U) {
    #line 440 
    b43legacy_radio_write16(dev,(unsigned short)117,(unsigned short)128);
    #line 441 
    b43legacy_radio_write16(dev,(unsigned short)121,(unsigned short)129);
  }
  #line 443 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
  #line 444 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)35);
  #line 445 
  if ((unsigned int)phy->radio_ver == 8272U) {
    #line 446 
    b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
    #line 447 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)112);
    #line 448 
    b43legacy_radio_write16(dev,(unsigned short)91,(unsigned short)123);
    #line 449 
    b43legacy_radio_write16(dev,(unsigned short)92,(unsigned short)176);
    #line 450 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)15);
    #line 451 
    b43legacy_phy_write(dev,(unsigned short)56,(unsigned short)1655);
    #line 452 
    b43legacy_radio_init2050(dev);
  }
  #line 454 
  b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)128);
  #line 455 
  b43legacy_phy_write(dev,(unsigned short)50,(unsigned short)202);
  #line 456 
  b43legacy_phy_write(dev,(unsigned short)50,(unsigned short)204);
  #line 457 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)1986);
  #line 458 
  b43legacy_phy_lo_b_measure(dev);
  #line 459 
  b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)52224);
  #line 460 
  if ((unsigned int)phy->radio_ver != 8272U) 
                                             #line 461 
                                             b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)52736);
  #line 462 
  b43legacy_write16(dev,(unsigned short)1012,(unsigned short)4096);
  #line 463 
  b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)34979);
  #line 464 
  if ((unsigned int)phy->radio_ver != 8272U) 
                                             #line 465 
                                             b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)35010);
  #line 466 
  b43legacy_radio_set_txpower_bg(dev,(unsigned short)65535,(unsigned short)65535,(unsigned short)65535);
  #line 467 
  b43legacy_phy_init_pctl(dev);
  #line 468 
  return;
}

#line 470  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_initb4(struct b43legacy_wldev *dev)
{
  #line 473 
  u16 offset;
  #line 474 
  u16 val;
  #line 472 
  struct b43legacy_phy *phy = & dev->phy;
  #line 476 
  b43legacy_write16(dev,(unsigned short)1004,(unsigned short)16162);
  #line 477 
  b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)12316);
  #line 478 
  b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)0);
  #line 479 
  b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)198);
  #line 480 
  b43legacy_phy_write(dev,(unsigned short)136,(unsigned short)15872);
  #line 481 
  val = (unsigned short)15421U;
  #line 482 
  offset = (unsigned short)137U;
  #line 482 
  while ((unsigned int)offset <= 166U) {
    #line 483 
    b43legacy_phy_write(dev,(unsigned short)((int)offset),(unsigned short)((int)val));
    #line 484 
    val = (unsigned short)((unsigned int)val + 65022U);
    #line 482 
    offset = (u16)((int)offset + 1);
  }
  #line 486 
  b43legacy_phy_write(dev,(unsigned short)996,(unsigned short)12288);
  #line 487 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)phy->channel),0);
  #line 488 
  if ((unsigned int)phy->radio_ver != 8272U) {
    #line 489 
    b43legacy_radio_write16(dev,(unsigned short)117,(unsigned short)128);
    #line 490 
    b43legacy_radio_write16(dev,(unsigned short)121,(unsigned short)129);
  }
  #line 492 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
  #line 493 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)35);
  #line 494 
  if ((unsigned int)phy->radio_ver == 8272U) {
    #line 495 
    b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
    #line 496 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)112);
    #line 497 
    b43legacy_radio_write16(dev,(unsigned short)91,(unsigned short)123);
    #line 498 
    b43legacy_radio_write16(dev,(unsigned short)92,(unsigned short)176);
    #line 499 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)15);
    #line 500 
    b43legacy_phy_write(dev,(unsigned short)56,(unsigned short)1655);
    #line 501 
    b43legacy_radio_init2050(dev);
  }
  #line 503 
  b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)128);
  #line 504 
  b43legacy_phy_write(dev,(unsigned short)50,(unsigned short)202);
  #line 505 
  if ((unsigned int)phy->radio_ver == 8272U) 
                                             #line 506 
                                             b43legacy_phy_write(dev,(unsigned short)50,(unsigned short)224);
  #line 507 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)1986);
  #line 509 
  b43legacy_phy_lo_b_measure(dev);
  #line 511 
  b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)52224);
  #line 512 
  if ((unsigned int)phy->radio_ver == 8272U) 
                                             #line 513 
                                             b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)52736);
  #line 514 
  b43legacy_write16(dev,(unsigned short)1012,(unsigned short)4352);
  #line 515 
  b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)34979);
  #line 516 
  if ((unsigned int)phy->radio_ver == 8272U) 
                                             #line 517 
                                             b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)35010);
  #line 518 
  b43legacy_radio_set_txpower_bg(dev,(unsigned short)65535,(unsigned short)65535,(unsigned short)65535);
  #line 519 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) != 0) {
    #line 520 
    b43legacy_calc_nrssi_slope(dev);
    #line 521 
    b43legacy_calc_nrssi_threshold(dev);
  }
  #line 523 
  b43legacy_phy_init_pctl(dev);
  #line 524 
  return;
}

#line 526  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_initb5(struct b43legacy_wldev *dev)
{
  #line 529 
  u16 offset;
  #line 530 
  u16 value;
  #line 531 
  u8 old_channel;
  #line 528 
  struct b43legacy_phy *phy = & dev->phy;
  #line 533 
  if ((unsigned int)phy->analog == 1U) {
    #line 534 
    ;
    #line 534 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 80U)));
  }
  #line 537 
  if (! is_bcm_board_vendor(dev)) 
    #line 537 
    if ((unsigned int)((dev->dev)->bus)->boardinfo.type != 1046U) {
      #line 539 
      value = (unsigned short)8480U;
      #line 540 
      offset = (unsigned short)168U;
      #line 540 
      while ((unsigned int)offset <= 198U) {
        #line 541 
        b43legacy_phy_write(dev,(unsigned short)((int)offset),(unsigned short)((int)value));
        #line 542 
        value = (unsigned short)((unsigned int)value + 514U);
        #line 540 
        offset = (u16)((int)offset + 1);
      }
    }
  #line 545 
  ;
  #line 545 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)53) & -3841) | 1792))));
  #line 548 
  if ((unsigned int)phy->radio_ver == 8272U) 
                                             #line 549 
                                             b43legacy_phy_write(dev,(unsigned short)56,(unsigned short)1639);
  #line 551 
  if ((int)phy->gmode != 0) {
    #line 552 
    if ((unsigned int)phy->radio_ver == 8272U) {
      #line 553 
      ;
      #line 553 
      b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 32U)));
      #line 556 
      ;
      #line 556 
      b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)81) | 4U)));
    }
    #line 560 
    b43legacy_write16(dev,(unsigned short)994,(unsigned short)0);
    #line 562 
    ;
    #line 562 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2050) | 256U)));
    #line 564 
    ;
    #line 564 
    b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1067) | 8192U)));
    #line 567 
    b43legacy_phy_write(dev,(unsigned short)28,(unsigned short)6250);
    #line 569 
    ;
    #line 569 
    b43legacy_phy_write(dev,(unsigned short)19,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)19) & 255) | 6400))));
    #line 571 
    ;
    #line 571 
    b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)53) & -128) | 100))));
    #line 573 
    ;
    #line 573 
    b43legacy_phy_write(dev,(unsigned short)93,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)93) & -128) | 10))));
    #line 575 
    b43legacy_phy_write(dev,(unsigned short)91,(unsigned short)0);
    #line 576 
    b43legacy_phy_write(dev,(unsigned short)92,(unsigned short)0);
  }
  #line 579 
  if ((int)dev->bad_frames_preempt != 0) {
    #line 580 
    ;
    #line 580 
    b43legacy_phy_write(dev,(unsigned short)1025,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1025) | 4096U)));
  }
  #line 584 
  if ((unsigned int)phy->analog == 1U) {
    #line 585 
    b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)52736);
    #line 586 
    b43legacy_phy_write(dev,(unsigned short)33,(unsigned short)14179);
    #line 587 
    b43legacy_phy_write(dev,(unsigned short)34,(unsigned short)7107);
    #line 588 
    b43legacy_phy_write(dev,(unsigned short)35,(unsigned short)1785);
    #line 589 
    b43legacy_phy_write(dev,(unsigned short)36,(unsigned short)894);
  }
  else 
       #line 591 
       b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)52224);
  #line 592 
  b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)198);
  #line 593 
  b43legacy_write16(dev,(unsigned short)1004,(unsigned short)16162);
  #line 595 
  if ((unsigned int)phy->analog == 1U) 
                                       #line 596 
                                       b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)15900); else 
                                                                    #line 598 
                                                                    b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)12316);
  #line 600 
  if ((unsigned int)phy->analog == 0U) 
                                       #line 601 
                                       b43legacy_write16(dev,(unsigned short)996,(unsigned short)12288);
  #line 603 
  if ((unsigned int)phy->channel != 255U) 
                                          #line 603 
                                          old_channel = phy->channel; else 
                                                                    #line 603 
                                                                    old_channel = (unsigned char)1U;
  #line 605 
  b43legacy_radio_selectchannel(dev,(unsigned char)7,0);
  #line 607 
  if ((unsigned int)phy->radio_ver != 8272U) {
    #line 608 
    b43legacy_radio_write16(dev,(unsigned short)117,(unsigned short)128);
    #line 609 
    b43legacy_radio_write16(dev,(unsigned short)121,(unsigned short)129);
  }
  #line 612 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
  #line 613 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)35);
  #line 615 
  if ((unsigned int)phy->radio_ver == 8272U) {
    #line 616 
    b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
    #line 617 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)112);
  }
  #line 620 
  b43legacy_radio_write16(dev,(unsigned short)91,(unsigned short)123);
  #line 621 
  b43legacy_radio_write16(dev,(unsigned short)92,(unsigned short)176);
  #line 623 
  ;
  #line 623 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 7U)));
  #line 626 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)old_channel),0);
  #line 628 
  b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)128);
  #line 629 
  b43legacy_phy_write(dev,(unsigned short)50,(unsigned short)202);
  #line 630 
  b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)34979);
  #line 632 
  b43legacy_radio_set_txpower_bg(dev,(unsigned short)65535,(unsigned short)65535,(unsigned short)65535);
  #line 634 
  if ((unsigned int)phy->radio_ver == 8272U) 
                                             #line 635 
                                             b43legacy_radio_write16(dev,(unsigned short)93,(unsigned short)13);
  #line 637 
  ;
  #line 637 
  b43legacy_write16(dev,(unsigned short)996,(unsigned short)((int)((unsigned short)(((int)b43legacy_read16(dev,(unsigned short)996) & -64) | 4))));
  #line 639 
  return;
}

#line 641  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_initb6(struct b43legacy_wldev *dev)
{
  #line 644 
  u16 offset;
  #line 645 
  u16 val;
  #line 646 
  u8 old_channel;
  #line 643 
  struct b43legacy_phy *phy = & dev->phy;
  #line 648 
  b43legacy_phy_write(dev,(unsigned short)62,(unsigned short)33146);
  #line 649 
  ;
  #line 649 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 88U)));
  #line 651 
  if ((unsigned int)phy->radio_rev + 252U <= 1U) {
    #line 653 
    b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)55);
    #line 654 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)112);
    #line 655 
    b43legacy_radio_write16(dev,(unsigned short)83,(unsigned short)179);
    #line 656 
    b43legacy_radio_write16(dev,(unsigned short)84,(unsigned short)155);
    #line 657 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)136);
    #line 658 
    b43legacy_radio_write16(dev,(unsigned short)91,(unsigned short)136);
    #line 659 
    b43legacy_radio_write16(dev,(unsigned short)93,(unsigned short)136);
    #line 660 
    b43legacy_radio_write16(dev,(unsigned short)94,(unsigned short)136);
    #line 661 
    b43legacy_radio_write16(dev,(unsigned short)125,(unsigned short)136);
    #line 662 
    ;
    #line 662 
    b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94) | 512U);
  }
  #line 669 
  if ((unsigned int)phy->radio_rev == 8U) {
    #line 670 
    b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)0);
    #line 671 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)64);
    #line 672 
    b43legacy_radio_write16(dev,(unsigned short)83,(unsigned short)183);
    #line 673 
    b43legacy_radio_write16(dev,(unsigned short)84,(unsigned short)152);
    #line 674 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)136);
    #line 675 
    b43legacy_radio_write16(dev,(unsigned short)91,(unsigned short)107);
    #line 676 
    b43legacy_radio_write16(dev,(unsigned short)92,(unsigned short)15);
    #line 677 
    if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 32768) != 0) {
      #line 678 
      b43legacy_radio_write16(dev,(unsigned short)93,(unsigned short)250);
      #line 679 
      b43legacy_radio_write16(dev,(unsigned short)94,(unsigned short)216);
    }
    else {
      #line 681 
      b43legacy_radio_write16(dev,(unsigned short)93,(unsigned short)245);
      #line 682 
      b43legacy_radio_write16(dev,(unsigned short)94,(unsigned short)184);
    }
    #line 684 
    b43legacy_radio_write16(dev,(unsigned short)115,(unsigned short)3);
    #line 685 
    b43legacy_radio_write16(dev,(unsigned short)125,(unsigned short)168);
    #line 686 
    b43legacy_radio_write16(dev,(unsigned short)124,(unsigned short)1);
    #line 687 
    b43legacy_radio_write16(dev,(unsigned short)126,(unsigned short)8);
  }
  #line 689 
  val = (unsigned short)7711U;
  #line 690 
  offset = (unsigned short)136U;
  #line 690 
  while ((unsigned int)offset <= 151U) {
    #line 691 
    b43legacy_phy_write(dev,(unsigned short)((int)offset),(unsigned short)((int)val));
    #line 692 
    val = (unsigned short)((unsigned int)val + 65022U);
    #line 690 
    offset = (u16)((int)offset + 1);
  }
  #line 694 
  val = (unsigned short)15935U;
  #line 695 
  offset = (unsigned short)152U;
  #line 695 
  while ((unsigned int)offset <= 167U) {
    #line 696 
    b43legacy_phy_write(dev,(unsigned short)((int)offset),(unsigned short)((int)val));
    #line 697 
    val = (unsigned short)((unsigned int)val + 65022U);
    #line 695 
    offset = (u16)((int)offset + 1);
  }
  #line 699 
  val = (unsigned short)8480U;
  #line 700 
  offset = (unsigned short)168U;
  #line 700 
  while ((unsigned int)offset <= 199U) {
    #line 701 
    b43legacy_phy_write(dev,(unsigned short)((int)offset),(unsigned short)((int)val & 16191));
    #line 702 
    val = (unsigned short)((unsigned int)val + 514U);
    #line 700 
    offset = (u16)((int)offset + 1);
  }
  #line 704 
  if ((unsigned int)phy->type == 2U) {
    #line 705 
    ;
    #line 705 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 32U)));
    #line 708 
    ;
    #line 708 
    b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)81) | 4U)));
    #line 711 
    ;
    #line 711 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2050) | 256U)));
    #line 713 
    ;
    #line 713 
    b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1067) | 8192U)));
    #line 715 
    b43legacy_phy_write(dev,(unsigned short)91,(unsigned short)0);
    #line 716 
    b43legacy_phy_write(dev,(unsigned short)92,(unsigned short)0);
  }
  #line 719 
  old_channel = phy->channel;
  #line 720 
  if ((unsigned int)old_channel > 7U) 
                                      #line 721 
                                      b43legacy_radio_selectchannel(dev,(unsigned char)1,0); else 
                                                                    #line 723 
                                                                    b43legacy_radio_selectchannel(dev,(unsigned char)13,0);
  #line 725 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
  #line 726 
  b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)35);
  #line 727 
  __const_udelay(171800UL);
  #line 728 
  if ((unsigned int)phy->radio_rev <= 5U || (unsigned int)phy->radio_rev == 8U) {
    #line 729 
    ;
    #line 729 
    b43legacy_radio_write16(dev,(unsigned short)124,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)124) | 2U)));
    #line 732 
    b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
  }
  #line 734 
  if ((unsigned int)phy->radio_rev <= 2U) {
    #line 735 
    b43legacy_radio_write16(dev,(unsigned short)80,(unsigned short)32);
    #line 736 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)112);
    #line 737 
    b43legacy_radio_write16(dev,(unsigned short)91,(unsigned short)123);
    #line 738 
    b43legacy_radio_write16(dev,(unsigned short)92,(unsigned short)176);
  }
  #line 740 
  ;
  #line 740 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)122) & 255) | 7))));
  #line 744 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)old_channel),0);
  #line 746 
  b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)512);
  #line 747 
  if ((unsigned int)phy->radio_rev > 5U) 
                                         #line 748 
                                         b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)35010); else 
                                                                    #line 750 
                                                                    b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)35520);
  #line 751 
  b43legacy_phy_write(dev,(unsigned short)56,(unsigned short)1640);
  #line 752 
  b43legacy_radio_set_txpower_bg(dev,(unsigned short)65535,(unsigned short)65535,(unsigned short)65535);
  #line 753 
  if ((unsigned int)phy->radio_rev + 252U <= 1U) {
    #line 754 
    ;
    #line 754 
    b43legacy_phy_write(dev,(unsigned short)93,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)93) & -128) | 3))));
  }
  #line 756 
  if ((unsigned int)phy->radio_rev <= 2U) 
                                          #line 757 
                                          b43legacy_radio_write16(dev,(unsigned short)93,(unsigned short)13);
  #line 759 
  if ((unsigned int)phy->analog == 4U) {
    #line 760 
    b43legacy_write16(dev,(unsigned short)996,(unsigned short)9);
    #line 761 
    ;
    #line 761 
    b43legacy_phy_write(dev,(unsigned short)97,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)97) & 4095));
  }
  else {
    #line 764 
    ;
    #line 764 
    b43legacy_phy_write(dev,(unsigned short)2,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2) & -64) | 4))));
  }
  #line 766 
  if ((unsigned int)phy->type == 2U) 
                                     #line 767 
                                     b43legacy_write16(dev,(unsigned short)998,(unsigned short)0);
  #line 768 
  if ((unsigned int)phy->type == 1U) {
    #line 769 
    b43legacy_write16(dev,(unsigned short)998,(unsigned short)33088);
    #line 770 
    b43legacy_phy_write(dev,(unsigned short)22,(unsigned short)1040);
    #line 771 
    b43legacy_phy_write(dev,(unsigned short)23,(unsigned short)2080);
    #line 772 
    b43legacy_phy_write(dev,(unsigned short)98,(unsigned short)7);
    #line 773 
    b43legacy_radio_init2050(dev);
    #line 774 
    b43legacy_phy_lo_g_measure(dev);
    #line 775 
    if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) != 0) {
      #line 777 
      b43legacy_calc_nrssi_slope(dev);
      #line 778 
      b43legacy_calc_nrssi_threshold(dev);
    }
    #line 780 
    b43legacy_phy_init_pctl(dev);
  }
  #line 782 
  return;
}

#line 784  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_calc_loopback_gain(struct b43legacy_wldev *dev)
{
  #line 788 
  u16 backup_radio[3U];
  #line 789 
  u16 backup_bband;
  #line 790 
  u16 i;
  #line 791 
  u16 loop1_cnt;
  #line 792 
  u16 loop1_done;
  #line 793 
  u16 loop1_omitted;
  #line 794 
  u16 loop2_done;
  #line 786 
  struct b43legacy_phy *phy = & dev->phy;
  #line 787 
  u16 backup_phy[15U] = {(unsigned short)0U};
  #line 796 
  backup_phy[0] = b43legacy_phy_read(dev,(unsigned short)1065);
  #line 797 
  backup_phy[1] = b43legacy_phy_read(dev,(unsigned short)1);
  #line 798 
  backup_phy[2] = b43legacy_phy_read(dev,(unsigned short)2065);
  #line 799 
  backup_phy[3] = b43legacy_phy_read(dev,(unsigned short)2066);
  #line 800 
  if ((unsigned int)phy->rev != 1U) {
    #line 801 
    backup_phy[4] = b43legacy_phy_read(dev,(unsigned short)2068);
    #line 802 
    backup_phy[5] = b43legacy_phy_read(dev,(unsigned short)2069);
  }
  #line 804 
  backup_phy[6] = b43legacy_phy_read(dev,(unsigned short)90);
  #line 805 
  backup_phy[7] = b43legacy_phy_read(dev,(unsigned short)89);
  #line 806 
  backup_phy[8] = b43legacy_phy_read(dev,(unsigned short)88);
  #line 807 
  backup_phy[9] = b43legacy_phy_read(dev,(unsigned short)10);
  #line 808 
  backup_phy[10] = b43legacy_phy_read(dev,(unsigned short)3);
  #line 809 
  backup_phy[11] = b43legacy_phy_read(dev,(unsigned short)2063);
  #line 810 
  backup_phy[12] = b43legacy_phy_read(dev,(unsigned short)2064);
  #line 811 
  backup_phy[13] = b43legacy_phy_read(dev,(unsigned short)43);
  #line 812 
  backup_phy[14] = b43legacy_phy_read(dev,(unsigned short)21);
  #line 813 
  b43legacy_phy_read(dev,(unsigned short)45);
  #line 814 
  backup_bband = phy->__anonCompField_b43legacy_phy_208.bbatt;
  #line 815 
  backup_radio[0] = b43legacy_radio_read16(dev,(unsigned short)82);
  #line 816 
  backup_radio[1] = b43legacy_radio_read16(dev,(unsigned short)67);
  #line 817 
  backup_radio[2] = b43legacy_radio_read16(dev,(unsigned short)122);
  #line 819 
  ;
  #line 819 
  b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 16383));
  #line 821 
  ;
  #line 821 
  b43legacy_phy_write(dev,(unsigned short)1,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1) & 32768));
  #line 823 
  ;
  #line 823 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 2U)));
  #line 825 
  ;
  #line 825 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2066) & 65533));
  #line 827 
  ;
  #line 827 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 1U)));
  #line 829 
  ;
  #line 829 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2066) & 65534));
  #line 831 
  if ((unsigned int)phy->rev != 1U) {
    #line 832 
    ;
    #line 832 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2068) | 1U)));
    #line 834 
    ;
    #line 834 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2069) & 65534));
    #line 836 
    ;
    #line 836 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2068) | 2U)));
    #line 838 
    ;
    #line 838 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2069) & 65533));
  }
  #line 841 
  ;
  #line 841 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 12U)));
  #line 843 
  ;
  #line 843 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2066) | 12U)));
  #line 846 
  ;
  #line 846 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 48U)));
  #line 848 
  ;
  #line 848 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2066) & -49) | 16))));
  #line 851 
  b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)1920);
  #line 852 
  b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)51216);
  #line 853 
  b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)13);
  #line 854 
  if ((unsigned int)phy->analog == 0U) 
                                       #line 855 
                                       b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)290);
  else {
    #line 857 
    ;
    #line 857 
    b43legacy_phy_write(dev,(unsigned short)10,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)10) | 8192U)));
  }
  #line 860 
  if ((unsigned int)phy->rev != 1U) {
    #line 861 
    ;
    #line 861 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2068) | 4U)));
    #line 863 
    ;
    #line 863 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2069) & 65531));
  }
  #line 866 
  ;
  #line 866 
  b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)3) & -97) | 64))));
  #line 869 
  if ((unsigned int)phy->radio_ver == 8272U && (unsigned int)phy->radio_rev == 2U) {
    #line 870 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)0);
    #line 871 
    ;
    #line 871 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)67) & -16) | 9))));
    #line 874 
    loop1_cnt = (unsigned short)9U;
  }
  else 
    #line 875 
    if ((unsigned int)phy->radio_rev == 8U) {
      #line 876 
      b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)15);
      #line 877 
      loop1_cnt = (unsigned short)15U;
    }
    else 
         #line 879 
         loop1_cnt = (unsigned short)0U;
  #line 881 
  b43legacy_phy_set_baseband_attenuation(dev,(unsigned short)11);
  #line 883 
  if ((unsigned int)phy->rev > 2U) 
                                   #line 884 
                                   b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)49184); else 
                                                                    #line 886 
                                                                    b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)32800);
  #line 887 
  b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)0);
  #line 889 
  ;
  #line 889 
  b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)43) & -64) | 1))));
  #line 892 
  ;
  #line 892 
  b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)43) & -16129) | 2048))));
  #line 895 
  ;
  #line 895 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 256U)));
  #line 897 
  ;
  #line 897 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2066) & 53247));
  #line 899 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 4096) != 0) 
    #line 900 
    if ((unsigned int)phy->rev > 6U) {
      #line 901 
      ;
      #line 901 
      b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 2048U)));
      #line 904 
      ;
      #line 904 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2066) | 32768U)));
    }
  #line 909 
  ;
  #line 909 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)122) & 247));
  #line 913 
  i = (unsigned short)0U;
  #line 913 
  while ((int)i < (int)loop1_cnt) {
    {
      #line 914 
      b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)loop1_cnt));
      #line 915 
      ;
      #line 915 
      ;
      #line 915 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2066) & -3841) | ((int)i << 8)))));
      #line 918 
      ;
      #line 918 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)21) & 4095) | -24576))));
      #line 921 
      ;
      #line 921 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)21) | 61440U)));
      #line 924 
      __const_udelay(85900UL);
      #line 925 
      if ((unsigned int)b43legacy_phy_read(dev,(unsigned short)45) > 3579U) 
        #line 926 
        break;
    }
    #line 913 
    i = (u16)((int)i + 1);
  }
  #line 928 
  loop1_done = i;
  #line 929 
  loop1_omitted = (unsigned short)((int)loop1_cnt - (int)loop1_done);
  #line 931 
  loop2_done = (unsigned short)0U;
  #line 932 
  if ((unsigned int)loop1_done > 7U) {
    #line 933 
    ;
    #line 933 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2066) | 48U)));
    #line 936 
    i = (unsigned short)((unsigned int)loop1_done + 65528U);
    #line 936 
    while ((unsigned int)i <= 15U) {
      {
        #line 937 
        ;
        #line 937 
        ;
        #line 937 
        b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2066) & -3841) | ((int)i << 8)))));
        #line 940 
        ;
        #line 940 
        b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)21) & 4095) | -24576))));
        #line 943 
        ;
        #line 943 
        b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)21) | 61440U)));
        #line 946 
        __const_udelay(85900UL);
        #line 947 
        if ((unsigned int)b43legacy_phy_read(dev,(unsigned short)45) > 3579U) 
          #line 948 
          break;
      }
      #line 936 
      i = (u16)((int)i + 1);
    }
  }
  #line 952 
  if ((unsigned int)phy->rev != 1U) {
    #line 953 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)backup_phy[4]));
    #line 954 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)backup_phy[5]));
  }
  #line 956 
  b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)((int)backup_phy[6]));
  #line 957 
  b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)((int)backup_phy[7]));
  #line 958 
  b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)((int)backup_phy[8]));
  #line 959 
  b43legacy_phy_write(dev,(unsigned short)10,(unsigned short)((int)backup_phy[9]));
  #line 960 
  b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)backup_phy[10]));
  #line 961 
  b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)((int)backup_phy[11]));
  #line 962 
  b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)((int)backup_phy[12]));
  #line 963 
  b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)((int)backup_phy[13]));
  #line 964 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)backup_phy[14]));
  #line 966 
  b43legacy_phy_set_baseband_attenuation(dev,(unsigned short)((int)backup_bband));
  #line 968 
  b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)backup_radio[0]));
  #line 969 
  b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)backup_radio[1]));
  #line 970 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)backup_radio[2]));
  #line 972 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)backup_phy[2] | 3U)));
  #line 973 
  __const_udelay(42950UL);
  #line 974 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)backup_phy[2]));
  #line 975 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)backup_phy[3]));
  #line 976 
  b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)backup_phy[0]));
  #line 977 
  b43legacy_phy_write(dev,(unsigned short)1,(unsigned short)((int)backup_phy[1]));
  #line 979 
  phy->loopback_gain[0] = (unsigned short)(((unsigned int)loop1_done * 6U - (unsigned int)loop1_omitted * 4U) + 65525U);
  #line 980 
  phy->loopback_gain[1] = (unsigned short)((unsigned int)((unsigned short)((int)loop2_done * -3 + 24)) * 2U);
  #line 981 
  return;
}

#line 983  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_initg(struct b43legacy_wldev *dev)
{
  #line 986 
  u16 tmp;
  #line 985 
  struct b43legacy_phy *phy = & dev->phy;
  #line 988 
  if ((unsigned int)phy->rev == 1U) 
                                    #line 989 
                                    b43legacy_phy_initb5(dev); else 
                                                                    #line 991 
                                                                    b43legacy_phy_initb6(dev);
  #line 992 
  if ((unsigned int)phy->rev > 1U && (int)phy->gmode != 0) 
                                                           #line 993 
                                                           b43legacy_phy_inita(dev);
  #line 995 
  if ((unsigned int)phy->rev > 1U) {
    #line 996 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)0);
    #line 997 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)0);
  }
  #line 999 
  if ((unsigned int)phy->rev == 2U) {
    #line 1000 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)0);
    #line 1001 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)192);
  }
  #line 1003 
  if ((unsigned int)phy->rev > 5U) {
    #line 1004 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)1024);
    #line 1005 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)192);
  }
  #line 1007 
  if ((int)phy->gmode != 0) {
    #line 1008 
    tmp = (unsigned short)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1024) & 255U);
    #line 1009 
    if ((unsigned int)tmp == 3U) {
      #line 1010 
      b43legacy_phy_write(dev,(unsigned short)1218,(unsigned short)6166);
      #line 1011 
      b43legacy_phy_write(dev,(unsigned short)1219,(unsigned short)34310);
    }
    #line 1013 
    if ((unsigned int)tmp + 65532U <= 1U) {
      #line 1014 
      b43legacy_phy_write(dev,(unsigned short)1218,(unsigned short)6166);
      #line 1015 
      b43legacy_phy_write(dev,(unsigned short)1219,(unsigned short)32774);
      #line 1016 
      ;
      #line 1016 
      b43legacy_phy_write(dev,(unsigned short)1228,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1228) & 255) | 7936))));
    }
    #line 1021 
    if ((unsigned int)phy->rev > 1U) 
                                     #line 1022 
                                     b43legacy_phy_write(dev,(unsigned short)1150,(unsigned short)120);
  }
  #line 1024 
  if ((unsigned int)phy->radio_rev == 8U) {
    #line 1025 
    ;
    #line 1025 
    b43legacy_phy_write(dev,(unsigned short)2049,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2049) | 128U)));
    #line 1027 
    ;
    #line 1027 
    b43legacy_phy_write(dev,(unsigned short)1086,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1086) | 4U)));
  }
  #line 1030 
  if ((unsigned int)phy->rev > 1U && (int)phy->gmode != 0) 
                                                           #line 1031 
                                                           b43legacy_calc_loopback_gain(dev);
  #line 1032 
  if ((unsigned int)phy->radio_rev != 8U) 
    #line 1033 
    if ((unsigned int)phy->initval == 65535U) 
                                              #line 1034 
                                              phy->initval = b43legacy_radio_init2050(dev); else 
                                                                    #line 1036 
                                                                    b43legacy_radio_write16(dev,(unsigned short)120,(unsigned short)((int)phy->initval));
  #line 1038 
  if ((unsigned int)phy->__anonCompField_b43legacy_phy_208.txctl2 == 65535U) 
    #line 1039 
    b43legacy_phy_lo_g_measure(dev);
  else {
    #line 1041 
    if ((unsigned int)phy->radio_ver == 8272U && (unsigned int)phy->radio_rev == 8U) 
      #line 1042 
      b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned short)(((int)phy->__anonCompField_b43legacy_phy_208.txctl1 << 4) | (int)phy->__anonCompField_b43legacy_phy_208.txctl2))));
    else {
      #line 1046 
      ;
      #line 1046 
      ;
      #line 1046 
      b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)82) & -16) | (int)phy->__anonCompField_b43legacy_phy_208.txctl1))));
    }
    #line 1050 
    if ((unsigned int)phy->rev > 5U) {
      #line 1051 
      ;
      #line 1051 
      ;
      #line 1051 
      b43legacy_phy_write(dev,(unsigned short)54,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)54) & 4095) | ((int)phy->__anonCompField_b43legacy_phy_208.txctl2 << 12)))));
    }
    #line 1054 
    if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 2) != 0) 
                                                                #line 1056 
                                                                b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)32885); else 
                                                                    #line 1058 
                                                                    b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)32895);
    #line 1059 
    if ((unsigned int)phy->rev <= 1U) 
                                      #line 1060 
                                      b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)257); else 
                                                                    #line 1062 
                                                                    b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)514);
  }
  #line 1064 
  if ((int)phy->gmode != 0) {
    #line 1065 
    b43legacy_phy_lo_adjust(dev,0);
    #line 1066 
    b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)32888);
  }
  #line 1069 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) == 0) {
    #line 1076 
    b43legacy_nrssi_hw_update(dev,(unsigned short)65535);
    #line 1077 
    b43legacy_calc_nrssi_threshold(dev);
  }
  else 
    #line 1078 
    if ((int)phy->gmode != 0 || (unsigned int)phy->rev > 1U) 
      #line 1079 
      if ((int)phy->nrssi[0] == -1000) {
        {
          #line 1080 
          int __ret_warn_on = (int)phy->nrssi[1] != -1000;
          #line 1080 
          if ((long)(__ret_warn_on != 0) != 0L) {
            #line 1081 
            ldv_inline_asm();
            #line 1082 
            ldv_inline_asm();
          }
          #line 1080 
          long tmp_6 = (long)(__ret_warn_on != 0);
        }
        #line 1081 
        b43legacy_calc_nrssi_slope(dev);
      }
      else {
        {
          #line 1083 
          int __ret_warn_on_0 = (int)phy->nrssi[1] == -1000;
          #line 1083 
          if ((long)(__ret_warn_on_0 != 0) != 0L) {
            #line 1084 
            ldv_inline_asm();
            #line 1085 
            ldv_inline_asm();
          }
          #line 1083 
          long tmp_8 = (long)(__ret_warn_on_0 != 0);
        }
        #line 1084 
        b43legacy_calc_nrssi_threshold(dev);
      }
  #line 1087 
  if ((unsigned int)phy->radio_rev == 8U) 
                                          #line 1088 
                                          b43legacy_phy_write(dev,(unsigned short)2053,(unsigned short)12848);
  #line 1089 
  b43legacy_phy_init_pctl(dev);
  #line 1090 
  if ((unsigned int)((dev->dev)->bus)->chip_id == 17158U && (unsigned int)((dev->dev)->bus)->chip_package == 2U) {
    #line 1092 
    ;
    #line 1092 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 49151));
    #line 1094 
    ;
    #line 1094 
    b43legacy_phy_write(dev,(unsigned short)1219,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1219) & 32767));
  }
  #line 1097 
  return;
}

#line 1099  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static u16 b43legacy_phy_lo_b_r15_loop(struct b43legacy_wldev *dev)
{
  #line 1101 
  int i;
  #line 1103 
  unsigned long flags;
  #line 1102 
  u16 ret = (unsigned short)0U;
  {
    #line 1105 
    unsigned long __dummy;
    #line 1105 
    unsigned long __dummy2;
    }
  #line 1105 
  flags = arch_local_irq_save();
  #line 1105 
  trace_hardirqs_off();
  #line 1106 
  i = 0;
  #line 1106 
  while (i <= 9) {
    {
      #line 1107 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)44960);
      #line 1108 
      __const_udelay(4295UL);
      #line 1109 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)61344);
      #line 1110 
      __const_udelay(42950UL);
      #line 1111 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)65440);
      #line 1112 
      __const_udelay(171800UL);
      #line 1113 
      ret = (unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)44) + (int)ret);
    }
    #line 1106 
    i ++;
  }
  {
    #line 1115 
    unsigned long __dummy_2;
    #line 1115 
    unsigned long __dummy2_2;
    }
  #line 1115 
  if (arch_irqs_disabled_flags(flags) != 0) {
    {
      #line 1115 
      unsigned long __dummy_0;
      #line 1115 
      unsigned long __dummy2_0;
      }
    #line 1115 
    arch_local_irq_restore(flags);
    #line 1115 
    trace_hardirqs_off();
  }
  else {
    #line 1115 
    trace_hardirqs_on();
    {
      #line 1115 
      unsigned long __dummy_1;
      #line 1115 
      unsigned long __dummy2_1;
      }
    #line 1115 
    arch_local_irq_restore(flags);
  }
  #line 1116 
  ___might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c",1116,0);
  #line 1116 
  _cond_resched();
  #line 1118 
  return ret;
}

#line 1121  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lo_b_measure(struct b43legacy_wldev *dev)
{
  #line 1125 
  u16 mls;
  #line 1126 
  u16 fval;
  #line 1127 
  int i;
  #line 1128 
  int j;
  #line 1123 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1124 
  u16 regstack[12U] = {(unsigned short)0U};
  #line 1130 
  regstack[0] = b43legacy_phy_read(dev,(unsigned short)21);
  #line 1131 
  regstack[1] = (unsigned short)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)82) & 65520U);
  #line 1133 
  if ((unsigned int)phy->radio_ver == 8275U) {
    #line 1134 
    regstack[2] = b43legacy_phy_read(dev,(unsigned short)10);
    #line 1135 
    regstack[3] = b43legacy_phy_read(dev,(unsigned short)42);
    #line 1136 
    regstack[4] = b43legacy_phy_read(dev,(unsigned short)53);
    #line 1137 
    regstack[5] = b43legacy_phy_read(dev,(unsigned short)3);
    #line 1138 
    regstack[6] = b43legacy_phy_read(dev,(unsigned short)1);
    #line 1139 
    regstack[7] = b43legacy_phy_read(dev,(unsigned short)48);
    #line 1141 
    regstack[8] = b43legacy_radio_read16(dev,(unsigned short)67);
    #line 1142 
    regstack[9] = b43legacy_radio_read16(dev,(unsigned short)122);
    #line 1143 
    regstack[10] = b43legacy_read16(dev,(unsigned short)1004);
    #line 1144 
    regstack[11] = (unsigned short)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)82) & 240U);
    #line 1146 
    b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)255);
    #line 1147 
    b43legacy_write16(dev,(unsigned short)1004,(unsigned short)16191);
    #line 1148 
    b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)regstack[4] & 65407));
    #line 1149 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)regstack[9] & 65520));
  }
  #line 1151 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)45056);
  #line 1152 
  b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)4);
  #line 1154 
  if ((unsigned int)phy->radio_ver == 8275U) {
    #line 1155 
    b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)515);
    #line 1156 
    b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)2211);
  }
  #line 1159 
  phy->minlowsig[0] = (unsigned short)65535U;
  #line 1161 
  i = 0;
  #line 1161 
  while (i <= 3) {
    #line 1162 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned short)((int)regstack[1] | i))));
    #line 1163 
    b43legacy_phy_lo_b_r15_loop(dev);
    #line 1161 
    i ++;
  }
  #line 1165 
  i = 0;
  #line 1165 
  while (i <= 9) {
    {
      #line 1166 
      b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned short)((int)regstack[1] | i))));
      #line 1167 
      mls = (unsigned short)((unsigned int)b43legacy_phy_lo_b_r15_loop(dev) / 10U);
      #line 1168 
      if ((int)phy->minlowsig[0] > (int)mls) {
        #line 1169 
        phy->minlowsig[0] = mls;
        #line 1170 
        phy->minlowsigpos[0] = (unsigned short)i;
      }
    }
    #line 1165 
    i ++;
  }
  #line 1173 
  b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)regstack[1] | (int)phy->minlowsigpos[0]));
  #line 1176 
  phy->minlowsig[1] = (unsigned short)65535U;
  #line 1178 
  i = -4;
  #line 1178 
  while (i <= 4) {
    #line 1179 
    j = -4;
    #line 1179 
    while (j <= 4) {
      {
        #line 1180 
        if (j < 0) 
                   #line 1181 
                   fval = (unsigned short)(((unsigned int)((unsigned short)i) * 256U + (unsigned int)((unsigned short)j)) + 256U); else 
                                                                    #line 1183 
                                                                    fval = (unsigned short)((unsigned int)((unsigned short)i) * 256U + (unsigned int)((unsigned short)j));
        #line 1184 
        b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)((int)fval));
        #line 1185 
        mls = (unsigned short)((unsigned int)b43legacy_phy_lo_b_r15_loop(dev) / 10U);
        #line 1186 
        if ((int)phy->minlowsig[1] > (int)mls) {
          #line 1187 
          phy->minlowsig[1] = mls;
          #line 1188 
          phy->minlowsigpos[1] = fval;
        }
      }
      #line 1179 
      j += 2;
    }
    #line 1178 
    i += 2;
  }
  #line 1192 
  phy->minlowsigpos[1] = (unsigned short)((unsigned int)phy->minlowsigpos[1] + 257U);
  #line 1194 
  b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)((int)phy->minlowsigpos[1]));
  #line 1195 
  if ((unsigned int)phy->radio_ver == 8275U) {
    #line 1196 
    b43legacy_phy_write(dev,(unsigned short)10,(unsigned short)((int)regstack[2]));
    #line 1197 
    b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)((int)regstack[3]));
    #line 1198 
    b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)regstack[4]));
    #line 1199 
    b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)regstack[5]));
    #line 1200 
    b43legacy_phy_write(dev,(unsigned short)1,(unsigned short)((int)regstack[6]));
    #line 1201 
    b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)((int)regstack[7]));
    #line 1203 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)regstack[8]));
    #line 1204 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)regstack[9]));
    #line 1206 
    ;
    #line 1206 
    ;
    #line 1206 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)82) & 15) | (int)regstack[11]))));
    #line 1210 
    b43legacy_write16(dev,(unsigned short)1004,(unsigned short)((int)regstack[10]));
  }
  #line 1212 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)regstack[0]));
  #line 1213 
  return;
}

#line 1216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
__inline static u16 b43legacy_phy_lo_g_deviation_subval(struct b43legacy_wldev *dev, u16 control)
{
  #line 1220 
  u16 ret;
  #line 1221 
  unsigned long flags;
  #line 1219 
  struct b43legacy_phy *phy = & dev->phy;
  {
    #line 1223 
    unsigned long __dummy;
    #line 1223 
    unsigned long __dummy2;
    }
  #line 1223 
  flags = arch_local_irq_save();
  #line 1223 
  trace_hardirqs_off();
  #line 1224 
  if ((int)phy->gmode != 0) {
    #line 1225 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)58112);
    #line 1226 
    control = (unsigned short)((int)control << 8U);
    #line 1227 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)control | 176U)));
    #line 1228 
    __const_udelay(21475UL);
    #line 1229 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)control | 178U)));
    #line 1230 
    __const_udelay(8590UL);
    #line 1231 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)control | 179U)));
    #line 1232 
    __const_udelay(17180UL);
    #line 1233 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)62208);
    #line 1234 
    __const_udelay(34360UL);
  }
  else {
    #line 1236 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned int)control | 61344U)));
    #line 1237 
    __const_udelay(8590UL);
    #line 1238 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned int)control | 61408U)));
    #line 1239 
    __const_udelay(17180UL);
    #line 1240 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned int)control | 65504U)));
    #line 1241 
    __const_udelay(34360UL);
  }
  #line 1243 
  ret = b43legacy_phy_read(dev,(unsigned short)45);
  {
    #line 1244 
    unsigned long __dummy_2;
    #line 1244 
    unsigned long __dummy2_2;
    }
  #line 1244 
  if (arch_irqs_disabled_flags(flags) != 0) {
    {
      #line 1244 
      unsigned long __dummy_0;
      #line 1244 
      unsigned long __dummy2_0;
      }
    #line 1244 
    arch_local_irq_restore(flags);
    #line 1244 
    trace_hardirqs_off();
  }
  else {
    #line 1244 
    trace_hardirqs_on();
    {
      #line 1244 
      unsigned long __dummy_1;
      #line 1244 
      unsigned long __dummy2_1;
      }
    #line 1244 
    arch_local_irq_restore(flags);
  }
  #line 1245 
  ___might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c",1245,0);
  #line 1245 
  _cond_resched();
  #line 1247 
  return ret;
}

#line 1250  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static u32 b43legacy_phy_lo_g_singledeviation(struct b43legacy_wldev *dev, u16 control)
{
  #line 1253 
  int i;
  #line 1254 
  u32 ret = 0U;
  #line 1256 
  i = 0;
  #line 1256 
  while (i <= 7) {
    #line 1257 
    ret = (unsigned int)b43legacy_phy_lo_g_deviation_subval(dev,(unsigned short)((int)control)) + ret;
    #line 1256 
    i ++;
  }
  #line 1259 
  return ret;
}

#line 1264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
__inline static void b43legacy_lo_write(struct b43legacy_wldev *dev, struct b43legacy_lopair *pair)
{
  #line 1267 
  u16 value;
  #line 1269 
  value = (unsigned short)((unsigned char)pair->low);
  #line 1270 
  value = (unsigned short)(((int)((unsigned char)pair->high) << 8) | (int)value);
  #line 1274 
  if (((unsigned int)pair->low + 8U > 16U || (int)pair->high < -8) || (int)pair->high > 8) {
    #line 1276 
    b43legacydbg(dev->wl,(char *)"WARNING: Writing invalid LOpair ",(int)pair->low,(int)pair->high);
    #line 1280 
    dump_stack();
  }
  #line 1284 
  b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)((int)value));
  #line 1285 
  return;
}

#line 1288  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
__inline static struct b43legacy_lopair *b43legacy_find_lopair(struct b43legacy_wldev *dev, u16 bbatt, u16 rfatt, u16 tx)
{
  #line 1293 
  u8 dict[10U] = {(unsigned char)11U, (unsigned char)10U, (unsigned char)11U, (unsigned char)12U, (unsigned char)13U, (unsigned char)12U, (unsigned char)13U, (unsigned char)12U, (unsigned char)13U, (unsigned char)12U};
  #line 1294 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1296 
  if ((unsigned int)bbatt > 6U) 
                                #line 1297 
                                bbatt = (unsigned short)6U;
  {
    #line 1298 
    int __ret_warn_on = (unsigned int)rfatt > 9U;
    #line 1298 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1299 
      ldv_inline_asm();
      #line 1300 
      ldv_inline_asm();
    }
    #line 1298 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1300 
  if ((unsigned int)tx == 3U) {
    #line 1301 
    return b43legacy_get_lopair(phy,(unsigned short)((int)rfatt),
                             (unsigned short)((int)bbatt));
  }
  #line 1302 
  return b43legacy_get_lopair(phy,(unsigned short)((int)dict[(int)rfatt]),
                               (unsigned short)((int)bbatt));
}

#line 1306  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
__inline static struct b43legacy_lopair *b43legacy_current_lopair(struct b43legacy_wldev *dev)
{
  #line 1308 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1310 
  return b43legacy_find_lopair(dev,
                            (unsigned short)((int)phy->__anonCompField_b43legacy_phy_208.bbatt),
                            (unsigned short)((int)phy->__anonCompField_b43legacy_phy_208.rfatt),
                            (unsigned short)((int)phy->__anonCompField_b43legacy_phy_208.txctl1));
}

#line 1315  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lo_adjust(struct b43legacy_wldev *dev, int fixed)
{
  #line 1317 
  struct b43legacy_lopair *pair;
  #line 1319 
  if (fixed != 0) 
                  #line 1321 
                  pair = b43legacy_find_lopair(dev,(unsigned short)2,(unsigned short)3,(unsigned short)0); else 
                                                                    #line 1323 
                                                                    pair = b43legacy_current_lopair(dev);
  #line 1324 
  b43legacy_lo_write(dev,pair);
  #line 1325 
  return;
}

#line 1327  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_lo_g_measure_txctl2(struct b43legacy_wldev *dev)
{
  #line 1331 
  u16 i;
  #line 1332 
  u32 smallest;
  #line 1333 
  u32 tmp;
  #line 1329 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1330 
  u16 txctl2 = (unsigned short)0U;
  #line 1335 
  b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)0);
  #line 1336 
  __const_udelay(42950UL);
  #line 1337 
  smallest = b43legacy_phy_lo_g_singledeviation(dev,(unsigned short)0);
  #line 1338 
  i = (unsigned short)0U;
  #line 1338 
  while ((unsigned int)i <= 15U) {
    #line 1339 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)i));
    #line 1340 
    __const_udelay(42950UL);
    #line 1341 
    tmp = b43legacy_phy_lo_g_singledeviation(dev,(unsigned short)0);
    #line 1342 
    if (tmp < smallest) {
      #line 1343 
      smallest = tmp;
      #line 1344 
      txctl2 = i;
    }
    #line 1338 
    i = (u16)((int)i + 1);
  }
  #line 1347 
  phy->__anonCompField_b43legacy_phy_208.txctl2 = txctl2;
  #line 1348 
  return;
}

#line 1351  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_lo_g_state(struct b43legacy_wldev *dev, struct b43legacy_lopair *in_pair, struct b43legacy_lopair *out_pair, u16 r27)
{
  #line 1370 
  struct b43legacy_lopair tmp_pair;
  #line 1371 
  struct b43legacy_lopair transition;
  #line 1374 
  int found_lower;
  #line 1375 
  int j;
  #line 1376 
  int begin;
  #line 1377 
  int end;
  #line 1378 
  u32 lowest_deviation;
  #line 1379 
  u32 tmp;
  #line 1356 
  struct b43legacy_lopair transitions[8U] = {{.low = (signed char)1, .high = (signed char)1, .used = (unsigned char)0}, {.low = (signed char)0, .high = (signed char)1, .used = (unsigned char)0}, {.low = (signed char)(-1), .high = (signed char)1, .used = (unsigned char)0}, {.low = (signed char)(-1), .high = (signed char)0, .used = (unsigned char)0}, {.low = (signed char)(-1), .high = (signed char)(-1), .used = (unsigned char)0}, {.low = (signed char)0, .high = (signed char)(-1), .used = (unsigned char)0}, {.low = (signed char)1, .high = (signed char)(-1), .used = (unsigned char)0}, {.low = (signed char)1, .high = (signed char)0, .used = (unsigned char)0}};
  #line 1366 
  struct b43legacy_lopair lowest_transition = {.low = in_pair->low, .high = in_pair->high, .used = (unsigned char)0};
  #line 1372 
  int i = 12;
  #line 1373 
  int state = 0;
  #line 1384 
  b43legacy_lo_write(dev,& lowest_transition);
  #line 1385 
  lowest_deviation = b43legacy_phy_lo_g_singledeviation(dev,(unsigned short)((int)r27));
  #line 1386 
  while (1) {
    #line 1434 
    int tmp_4_2;
    #line 1387 
    found_lower = 0;
    {
      #line 1388 
      int __ret_warn_on = (unsigned int)state > 8U;
      #line 1388 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 1389 
        ldv_inline_asm();
        #line 1390 
        ldv_inline_asm();
      }
      #line 1388 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 1389 
    if (state == 0) {
      #line 1390 
      begin = 1;
      #line 1391 
      end = 8;
    }
    else 
      #line 1392 
      if (((unsigned int)state & 1U) == 0U) {
        #line 1393 
        begin = state + -1;
        #line 1394 
        end = state + 1;
      }
      else {
        #line 1396 
        begin = state + -2;
        #line 1397 
        end = state + 2;
      }
    #line 1399 
    if (begin <= 0) 
                    #line 1400 
                    begin += 8;
    #line 1401 
    if (end > 8) 
                 #line 1402 
                 end += -8;
    #line 1404 
    j = begin;
    #line 1405 
    tmp_pair.high = lowest_transition.high;
    #line 1406 
    tmp_pair.low = lowest_transition.low;
    #line 1407 
    while (1) {
      {
        #line 1412 
        signed char __x;
        #line 1412 
        int tmp_0;
        {
          #line 1408 
          int __ret_warn_on_0 = (unsigned int)j + 4294967295U > 7U;
          #line 1408 
          if ((long)(__ret_warn_on_0 != 0) != 0L) {
            #line 1409 
            ldv_inline_asm();
            #line 1410 
            ldv_inline_asm();
          }
          #line 1408 
          long tmp_4 = (long)(__ret_warn_on_0 != 0);
        }
        #line 1409 
        transition.high = (signed char)((int)tmp_pair.high + (int)transitions[j + -1].high);
        #line 1411 
        transition.low = (signed char)((int)tmp_pair.low + (int)transitions[j + -1].low);
        #line 1412 
        __x = transition.low;
        #line 1412 
        if ((int)__x < 0) 
                          #line 1412 
                          tmp_0 = - ((int)__x); else 
                                                     #line 1412 
                                                     tmp_0 = (int)__x;
        #line 1412 
        if (tmp_0 <= 8) {
          #line 1413 
          signed char __x_0;
          #line 1413 
          int tmp_2_10;
          #line 1413 
          __x_0 = transition.high;
          #line 1413 
          if ((int)__x_0 < 0) 
                              #line 1413 
                              tmp_2_10 = - ((int)__x_0); else 
                                                              #line 1413 
                                                              tmp_2_10 = (int)__x_0;
          #line 1413 
          if (tmp_2_10 <= 8) {
            #line 1414 
            b43legacy_lo_write(dev,& transition);
            #line 1415 
            tmp = b43legacy_phy_lo_g_singledeviation(dev,(unsigned short)((int)r27));
            #line 1417 
            if (tmp < lowest_deviation) {
              #line 1418 
              lowest_deviation = tmp;
              #line 1419 
              state = j;
              #line 1420 
              found_lower = 1;
              #line 1422 
              lowest_transition.high = transition.high;
              #line 1424 
              lowest_transition.low = transition.low;
            }
          }
        }
        #line 1427 
        if (j == end) 
                      #line 1428 
                      break;
        #line 1429 
        if (j == 8) 
                    #line 1430 
                    j = 1; else 
                                #line 1432 
                                j ++;
      }
    }
    #line 1434 
    tmp_4_2 = i;
    #line 1434 
    i --;
    #line 1434 
    ;
    #line 1434 
    if (tmp_4_2 != 0) {
      #line 1434 
      if (! (found_lower != 0)) 
                                #line 1386 
                                break;
    }
    else 
         #line 1386 
         break;
  }
  #line 1436 
  out_pair->high = lowest_transition.high;
  #line 1437 
  out_pair->low = lowest_transition.low;
  #line 1438 
  return;
}

#line 1441  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_set_baseband_attenuation(struct b43legacy_wldev *dev, u16 bbatt)
{
  #line 1445 
  u16 value;
  #line 1444 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1447 
  if ((unsigned int)phy->analog == 0U) {
    #line 1448 
    value = (unsigned short)((unsigned int)b43legacy_read16(dev,(unsigned short)998) & 65520U);
    #line 1449 
    value = (unsigned short)(((int)bbatt & 15) | (int)value);
    #line 1450 
    b43legacy_write16(dev,(unsigned short)998,(unsigned short)((int)value));
    #line 1451 
    return;
  }
  #line 1454 
  if ((unsigned int)phy->analog > 1U) {
    #line 1455 
    value = (unsigned short)((unsigned int)b43legacy_phy_read(dev,(unsigned short)96) & 65475U);
    #line 1456 
    value = (unsigned short)((((int)bbatt << 2) & 60) | (int)value);
  }
  else {
    #line 1458 
    value = (unsigned short)((unsigned int)b43legacy_phy_read(dev,(unsigned short)96) & 65415U);
    #line 1459 
    value = (unsigned short)((((int)bbatt << 3) & 120) | (int)value);
  }
  #line 1461 
  b43legacy_phy_write(dev,(unsigned short)96,(unsigned short)((int)value));
  #line 1462 
  return;
}

#line 1465  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lo_g_measure(struct b43legacy_wldev *dev)
{
  #line 1471 
  u16 h;
  #line 1472 
  u16 i;
  #line 1474 
  u16 j;
  #line 1475 
  struct b43legacy_lopair control;
  #line 1476 
  struct b43legacy_lopair *tmp_control;
  #line 1477 
  u16 tmp_0;
  #line 1479 
  u8 oldchannel;
  #line 1483 
  u16 r31;
  #line 1467 
  u8 pairorder[10U] = {(unsigned char)3U, (unsigned char)1U, (unsigned char)5U, (unsigned char)7U, (unsigned char)9U, (unsigned char)2U, (unsigned char)0U, (unsigned char)4U, (unsigned char)6U, (unsigned char)8U};
  #line 1468 
  int is_initializing = atomic_read_3(& dev->__init_status) <= 1;
  #line 1470 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1473 
  u16 oldi = (unsigned short)0U;
  #line 1478 
  u16 regstack[16U] = {(unsigned short)0U};
  #line 1482 
  u8 r27 = (unsigned char)0U;
  #line 1485 
  oldchannel = phy->channel;
  #line 1487 
  if ((int)phy->gmode != 0) {
    #line 1488 
    regstack[0] = b43legacy_phy_read(dev,(unsigned short)1065);
    #line 1489 
    regstack[1] = b43legacy_phy_read(dev,(unsigned short)2050);
    #line 1490 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)regstack[0] & 32767));
    #line 1492 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)regstack[1] & 65532));
  }
  #line 1494 
  regstack[3] = b43legacy_read16(dev,(unsigned short)994);
  #line 1495 
  b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)((unsigned int)regstack[3] | 32768U)));
  #line 1496 
  regstack[4] = b43legacy_read16(dev,(unsigned short)1012);
  #line 1497 
  regstack[5] = b43legacy_phy_read(dev,(unsigned short)21);
  #line 1498 
  regstack[6] = b43legacy_phy_read(dev,(unsigned short)42);
  #line 1499 
  regstack[7] = b43legacy_phy_read(dev,(unsigned short)53);
  #line 1500 
  regstack[8] = b43legacy_phy_read(dev,(unsigned short)96);
  #line 1501 
  regstack[9] = b43legacy_radio_read16(dev,(unsigned short)67);
  #line 1502 
  regstack[10] = b43legacy_radio_read16(dev,(unsigned short)122);
  #line 1503 
  regstack[11] = b43legacy_radio_read16(dev,(unsigned short)82);
  #line 1504 
  if ((int)phy->gmode != 0) {
    #line 1505 
    regstack[12] = b43legacy_phy_read(dev,(unsigned short)2065);
    #line 1506 
    regstack[13] = b43legacy_phy_read(dev,(unsigned short)2066);
    #line 1507 
    regstack[14] = b43legacy_phy_read(dev,(unsigned short)2068);
    #line 1508 
    regstack[15] = b43legacy_phy_read(dev,(unsigned short)2069);
  }
  #line 1510 
  b43legacy_radio_selectchannel(dev,(unsigned char)6,0);
  #line 1511 
  if ((int)phy->gmode != 0) {
    #line 1512 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)regstack[0] & 32767));
    #line 1514 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)regstack[1] & 65532));
    #line 1515 
    b43legacy_dummy_transmission(dev);
  }
  #line 1517 
  b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)6);
  #line 1519 
  b43legacy_phy_set_baseband_attenuation(dev,(unsigned short)2);
  #line 1521 
  b43legacy_write16(dev,(unsigned short)1012,(unsigned short)0);
  #line 1522 
  b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)127);
  #line 1523 
  b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)120);
  #line 1524 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)regstack[7] & 65407));
  #line 1525 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)regstack[10] & 65520));
  #line 1526 
  b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)515);
  #line 1527 
  b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)2211);
  #line 1528 
  if ((int)phy->gmode != 0) {
    #line 1529 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)regstack[14] | 3U)));
    #line 1530 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)regstack[15] & 65532));
    #line 1531 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)435);
    #line 1532 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)178);
  }
  #line 1534 
  if (is_initializing != 0) 
                            #line 1535 
                            b43legacy_phy_lo_g_measure_txctl2(dev);
  #line 1536 
  b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)32888);
  #line 1539 
  control.low = (signed char)0;
  #line 1540 
  control.high = (signed char)0;
  #line 1541 
  h = (unsigned short)0U;
  #line 1541 
  while ((unsigned int)h <= 9U) {
    #line 1543 
    i = (unsigned short)pairorder[(int)h];
    #line 1544 
    if (is_initializing != 0) 
      #line 1545 
      if ((unsigned int)i == 3U) {
        #line 1546 
        control.low = (signed char)0;
        #line 1547 
        control.high = (signed char)0;
      }
      else 
        #line 1548 
        if (((unsigned int)i & 1U) != 0U && ((unsigned int)oldi & 1U) != 0U || ((unsigned int)i & 1U) == 0U && ((unsigned int)oldi & 1U) == 0U) {
          #line 1550 
          tmp_control = b43legacy_get_lopair(phy,(unsigned short)((int)oldi),(unsigned short)0);
          #line 1552 
          memcpy((void *)(& control),(void *)tmp_control,3UL);
        }
        else {
          #line 1554 
          tmp_control = b43legacy_get_lopair(phy,(unsigned short)3,(unsigned short)0);
          #line 1555 
          memcpy((void *)(& control),(void *)tmp_control,3UL);
        }
    #line 1559 
    j = (unsigned short)0U;
    #line 1559 
    while ((unsigned int)j <= 3U) {
      #line 1560 
      if (is_initializing != 0) {
        #line 1561 
        tmp_0 = (unsigned short)((unsigned int)i * 2U + (unsigned int)j);
        #line 1562 
        r27 = (unsigned char)0U;
        #line 1563 
        r31 = (unsigned short)0U;
        #line 1564 
        if ((unsigned int)tmp_0 > 14U) {
          #line 1565 
          r31 = (unsigned short)1U;
          #line 1566 
          if ((unsigned int)tmp_0 > 17U) 
                                         #line 1567 
                                         r27 = (unsigned char)1U;
          #line 1568 
          if ((unsigned int)tmp_0 > 19U) 
                                         #line 1569 
                                         r27 = (unsigned char)2U;
        }
      }
      else {
        #line 1572 
        tmp_control = b43legacy_get_lopair(phy,(unsigned short)((int)i),(unsigned short)((int)((unsigned int)j * 2U)));
        #line 1574 
        if ((unsigned int)tmp_control->used == 0U) 
                                                   #line 1575 
                                                   goto __Cont;
        #line 1576 
        memcpy((void *)(& control),(void *)tmp_control,3UL);
        #line 1577 
        r27 = (unsigned char)3U;
        #line 1578 
        r31 = (unsigned short)0U;
      }
      #line 1580 
      b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)i));
      #line 1581 
      b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)phy->__anonCompField_b43legacy_phy_208.txctl2));
      #line 1582 
      __const_udelay(42950UL);
      #line 1583 
      ___might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c",1583,0);
      #line 1583 
      _cond_resched();
      #line 1585 
      b43legacy_phy_set_baseband_attenuation(dev,(unsigned short)((int)((unsigned int)j * 2U)));
      #line 1587 
      tmp_0 = (unsigned short)((unsigned int)regstack[10] & 65520U);
      #line 1588 
      if ((unsigned int)r31 != 0U) 
                                   #line 1589 
                                   tmp_0 = (unsigned short)((unsigned int)tmp_0 | 8U);
      #line 1590 
      b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)tmp_0));
      #line 1592 
      tmp_control = b43legacy_get_lopair(phy,(unsigned short)((int)i),(unsigned short)((int)((unsigned int)j * 2U)));
      #line 1593 
      b43legacy_phy_lo_g_state(dev,& control,tmp_control,(unsigned short)((int)r27));
      #line 1559 
      __Cont: 
              #line 1559 
      j = (u16)((int)j + 1);
    }
    #line 1596 
    oldi = i;
    #line 1541 
    h = (u16)((int)h + 1);
  }
  #line 1599 
  i = (unsigned short)10U;
  #line 1599 
  while ((unsigned int)i <= 13U) {
    #line 1601 
    j = (unsigned short)0U;
    #line 1601 
    while ((unsigned int)j <= 3U) {
      #line 1602 
      if (is_initializing != 0) {
        #line 1603 
        tmp_control = b43legacy_get_lopair(phy,(unsigned short)((int)((unsigned int)i + 65527U)),(unsigned short)((int)((unsigned int)j * 2U)));
        #line 1605 
        memcpy((void *)(& control),(void *)tmp_control,3UL);
        #line 1608 
        tmp_0 = (unsigned short)((((unsigned int)i + 65527U) * 2U + (unsigned int)j) + 65531U);
        #line 1609 
        r27 = (unsigned char)0U;
        #line 1610 
        r31 = (unsigned short)0U;
        #line 1611 
        if ((unsigned int)tmp_0 > 14U) {
          #line 1612 
          r31 = (unsigned short)1U;
          #line 1613 
          if ((unsigned int)tmp_0 > 17U) 
                                         #line 1614 
                                         r27 = (unsigned char)1U;
          #line 1615 
          if ((unsigned int)tmp_0 > 19U) 
                                         #line 1616 
                                         r27 = (unsigned char)2U;
        }
      }
      else {
        #line 1619 
        tmp_control = b43legacy_get_lopair(phy,(unsigned short)((int)((unsigned int)i + 65527U)),(unsigned short)((int)((unsigned int)j * 2U)));
        #line 1621 
        if ((unsigned int)tmp_control->used == 0U) 
                                                   #line 1622 
                                                   goto __Cont_0;
        #line 1623 
        memcpy((void *)(& control),(void *)tmp_control,3UL);
        #line 1624 
        r27 = (unsigned char)3U;
        #line 1625 
        r31 = (unsigned short)0U;
      }
      #line 1627 
      b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)((unsigned int)i + 65527U)));
      #line 1630 
      b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned int)phy->__anonCompField_b43legacy_phy_208.txctl2 | 48U)));
      #line 1633 
      __const_udelay(42950UL);
      #line 1634 
      ___might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c",1634,0);
      #line 1634 
      _cond_resched();
      #line 1636 
      b43legacy_phy_set_baseband_attenuation(dev,(unsigned short)((int)((unsigned int)j * 2U)));
      #line 1638 
      tmp_0 = (unsigned short)((unsigned int)regstack[10] & 65520U);
      #line 1639 
      if ((unsigned int)r31 != 0U) 
                                   #line 1640 
                                   tmp_0 = (unsigned short)((unsigned int)tmp_0 | 8U);
      #line 1641 
      b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)tmp_0));
      #line 1643 
      tmp_control = b43legacy_get_lopair(phy,(unsigned short)((int)i),(unsigned short)((int)((unsigned int)j * 2U)));
      #line 1644 
      b43legacy_phy_lo_g_state(dev,& control,tmp_control,(unsigned short)((int)r27));
      #line 1601 
      __Cont_0: 
                #line 1601 
      j = (u16)((int)j + 1);
    }
    #line 1599 
    i = (u16)((int)i + 1);
  }
  #line 1650 
  if ((int)phy->gmode != 0) {
    #line 1651 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)58112);
    #line 1652 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)r27 << 8) | 160))));
    #line 1653 
    __const_udelay(21475UL);
    #line 1654 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)r27 << 8) | 162))));
    #line 1655 
    __const_udelay(8590UL);
    #line 1656 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)r27 << 8) | 163))));
    #line 1657 
    ___might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c",1657,0);
    #line 1657 
    _cond_resched();
  }
  else 
       #line 1659 
       b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned short)((int)r27 | -4192))));
  #line 1660 
  b43legacy_phy_lo_adjust(dev,is_initializing);
  #line 1661 
  b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)32895);
  #line 1662 
  if ((int)phy->gmode != 0) 
                            #line 1663 
                            b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)514); else 
                                                                    #line 1665 
                                                                    b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)257);
  #line 1666 
  b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)regstack[4]));
  #line 1667 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)regstack[5]));
  #line 1668 
  b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)((int)regstack[6]));
  #line 1669 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)regstack[7]));
  #line 1670 
  b43legacy_phy_write(dev,(unsigned short)96,(unsigned short)((int)regstack[8]));
  #line 1671 
  b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)regstack[9]));
  #line 1672 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)regstack[10]));
  #line 1673 
  regstack[11] = (unsigned short)((unsigned int)regstack[11] & 240U);
  #line 1674 
  regstack[11] = (unsigned short)((int)regstack[11] | ((int)b43legacy_radio_read16(dev,(unsigned short)82) & 15));
  #line 1675 
  b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)regstack[11]));
  #line 1676 
  b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)regstack[3]));
  #line 1677 
  if ((int)phy->gmode != 0) {
    #line 1678 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)regstack[12]));
    #line 1679 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)regstack[13]));
    #line 1680 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)regstack[14]));
    #line 1681 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)regstack[15]));
    #line 1682 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)regstack[0]));
    #line 1683 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)regstack[1]));
  }
  #line 1685 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)oldchannel),1);
  #line 1690 
  i = (unsigned short)0U;
  #line 1690 
  while ((unsigned int)i <= 55U) {
    #line 1691 
    tmp_control = phy->_lo_pairs + (unsigned long)i;
    #line 1692 
    if (((unsigned int)tmp_control->low + 8U > 16U || (int)tmp_control->high < -8) || (int)tmp_control->high > 8) 
      #line 1694 
      b43legacywarn(dev->wl,(char *)"WARNING: Invalid LOpair (low: %d, high:",(int)tmp_control->low,(int)tmp_control->high,(int)i);
    #line 1690 
    i = (u16)((int)i + 1);
  }
  #line 1699 
  return;
}

#line 1704  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static void b43legacy_phy_lo_mark_current_used(struct b43legacy_wldev *dev)
{
  #line 1706 
  struct b43legacy_lopair *pair;
  #line 1708 
  pair = b43legacy_current_lopair(dev);
  #line 1709 
  pair->used = (unsigned char)1U;
  #line 1710 
  return;
}

#line 1712  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_lo_mark_all_unused(struct b43legacy_wldev *dev)
{
  #line 1715 
  struct b43legacy_lopair *pair;
  #line 1716 
  int i;
  #line 1714 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1718 
  i = 0;
  #line 1718 
  while (i <= 55) {
    #line 1719 
    pair = phy->_lo_pairs + (unsigned long)i;
    #line 1720 
    pair->used = (unsigned char)0U;
    #line 1718 
    i ++;
  }
  #line 1722 
  return;
}

#line 1727  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
static s8 b43legacy_phy_estimate_power_out(struct b43legacy_wldev *dev, s8 tssi)
{
  #line 1731 
  s32 tmp;
  #line 1729 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1730 
  s8 dbm = (signed char)0;
  #line 1733 
  tmp = (int)phy->idle_tssi;
  #line 1734 
  tmp = (int)tssi + tmp;
  #line 1735 
  tmp -= (int)phy->savedpctlreg;
  #line 1737 
  switch ((int)phy->type) {
    #line 1740 
    int __UNIQUE_ID___x565;
    #line 1740 
    int tmp_2;
    #line 1738 
    case 1: 
            #line 1738 
    ;
    #line 1739 
    case 2: 
            #line 1739 
    ;
    {
      #line 1740 
      int __UNIQUE_ID___x563;
      #line 1740 
      int tmp_0;
      {
        #line 1740 
        __UNIQUE_ID___x563 = tmp;
        #line 1740 
        int __UNIQUE_ID___y564 = 0;
        #line 1740 
        if (__UNIQUE_ID___x563 > __UNIQUE_ID___y564) 
                                                     #line 1740 
                                                     tmp_0 = __UNIQUE_ID___x563; else 
                                                                    #line 1740 
                                                                    tmp_0 = __UNIQUE_ID___y564;
        }
      #line 1740 
      __UNIQUE_ID___x565 = tmp_0;
      #line 1740 
      int __UNIQUE_ID___y566 = 63;
      #line 1740 
      if (__UNIQUE_ID___x565 < __UNIQUE_ID___y566) 
                                                   #line 1740 
                                                   tmp_2 = __UNIQUE_ID___x565; else 
                                                                    #line 1740 
                                                                    tmp_2 = __UNIQUE_ID___y566;
      }
    #line 1740 
    tmp = tmp_2;
    #line 1741 
    dbm = *(phy->tssi2dbm + (unsigned long)tmp);
    #line 1742 
    break;
    #line 1743 
    default: 
             #line 1743 
    ;
    #line 1744 
    printk((char *)"\001",(char *)"1");
    #line 1745 
    ldv_inline_asm();
    #line 1746 
    ldv_inline_asm();
    #line 1747 
    ldv_inline_asm();
    #line 1744 
    ;
  }
  #line 1747 
  return dbm;
}

#line 1751  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_xmitpower(struct b43legacy_wldev *dev)
{
  #line 1918 
  short __UNIQUE_ID___x585;
  #line 1889 
  short __UNIQUE_ID___x577;
  #line 1837 
  int __UNIQUE_ID___x569;
  #line 1837 
  int tmp_3;
  #line 1918 
  int tmp_20;
  #line 1889 
  int tmp_12;
  #line 1843 
  int __UNIQUE_ID___x573;
  #line 1917 
  short __UNIQUE_ID___x581;
  #line 1843 
  int tmp_7;
  #line 1917 
  int tmp_16;
  #line 1754 
  u16 tmp;
  #line 1755 
  u16 txpower;
  #line 1756 
  s8 v0;
  #line 1757 
  s8 v1;
  #line 1758 
  s8 v2;
  #line 1759 
  s8 v3;
  #line 1760 
  s8 average;
  #line 1761 
  int max_pwr;
  #line 1762 
  s16 desired_pwr;
  #line 1763 
  s16 estimated_pwr;
  #line 1764 
  s16 pwr_adjust;
  #line 1765 
  s16 radio_att_delta;
  #line 1766 
  s16 baseband_att_delta;
  #line 1767 
  s16 radio_attenuation;
  #line 1768 
  s16 baseband_attenuation;
  #line 1753 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1770 
  if ((unsigned int)phy->savedpctlreg == 65535U) 
                                                 #line 1771 
                                                 return;
  #line 1772 
  if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1046U) {
    #line 1772 
    if ((int)is_bcm_board_vendor(dev) != 0) 
                                            #line 1774 
                                            return;
  }
  #line 1776 
  if ((int)phy->manual_txpower_control != 0) 
                                             #line 1777 
                                             return;
  #line 1780 
  if ((long)((unsigned int)phy->type + 255U > 1U) != 0L) {
    #line 1780 
    printk((char *)"\001",(char *)"!(phy->type == B43legacy_PHYTYPE_B || phy->type == B43legacy_PHYTYPE_G)");
    #line 1780 
    if ((long)((unsigned int)phy->type + 255U > 1U) != 0L) {
      #line 1781 
      ldv_inline_asm();
      #line 1782 
      ldv_inline_asm();
      #line 1783 
      ldv_inline_asm();
      #line 1780 
      ;
    }
  }
  #line 1782 
  tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)88);
  #line 1783 
  v0 = (signed char)tmp;
  #line 1784 
  v1 = (signed char)((int)tmp >> 8);
  #line 1785 
  tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)90);
  #line 1786 
  v2 = (signed char)tmp;
  #line 1787 
  v3 = (signed char)((int)tmp >> 8);
  #line 1788 
  tmp = (unsigned short)0U;
  #line 1790 
  if (((int)v0 == 127 || (int)v1 == 127) || ((int)v2 == 127 || (int)v3 == 127)) {
    #line 1791 
    tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)112);
    #line 1793 
    v0 = (signed char)tmp;
    #line 1794 
    v1 = (signed char)((int)tmp >> 8);
    #line 1795 
    tmp = b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)114);
    #line 1797 
    v2 = (signed char)tmp;
    #line 1798 
    v3 = (signed char)((int)tmp >> 8);
    #line 1799 
    if (((int)v0 == 127 || (int)v1 == 127) || ((int)v2 == 127 || (int)v3 == 127)) 
      #line 1800 
      return;
    #line 1801 
    v0 = (signed char)((int)((signed char)((unsigned int)v0 + 32U)) & 63);
    #line 1802 
    v1 = (signed char)((int)((signed char)((unsigned int)v1 + 32U)) & 63);
    #line 1803 
    v2 = (signed char)((int)((signed char)((unsigned int)v2 + 32U)) & 63);
    #line 1804 
    v3 = (signed char)((int)((signed char)((unsigned int)v3 + 32U)) & 63);
    #line 1805 
    tmp = (unsigned short)1U;
  }
  #line 1807 
  b43legacy_radio_clear_tssi(dev);
  #line 1809 
  average = (signed char)((((((int)v0 + (int)v1) + (int)v2) + (int)v3) + 2) / 4);
  #line 1811 
  if ((unsigned int)tmp != 0U) {
    #line 1811 
    if (((int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)94) & 8) != 0) 
      #line 1813 
      average = (signed char)((unsigned int)average + 243U);
  }
  #line 1815 
  estimated_pwr = (short)b43legacy_phy_estimate_power_out(dev,(signed char)((int)average));
  #line 1817 
  max_pwr = (int)((dev->dev)->bus)->sprom.maxpwr_bg;
  #line 1819 
  if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 2) != 0 && (unsigned int)phy->type == 2U) 
    #line 1822 
    max_pwr += -3;
  #line 1823 
  if ((long)(max_pwr <= 0) != 0L) {
    #line 1824 
    b43legacywarn(dev->wl,(char *)"Invalid max-TX-power value in SPROM.");
    #line 1826 
    max_pwr = 74;
    #line 1827 
    ((dev->dev)->bus)->sprom.maxpwr_bg = (unsigned char)max_pwr;
  }
  {
    #line 1837 
    __UNIQUE_ID___x569 = 74 - (int)((dev->dev)->bus)->sprom.antenna_gain.a0;
    #line 1837 
    int __UNIQUE_ID___y570 = max_pwr;
    #line 1837 
    if (__UNIQUE_ID___x569 < __UNIQUE_ID___y570) 
                                                 #line 1837 
                                                 tmp_3 = __UNIQUE_ID___x569; else 
                                                                    #line 1837 
                                                                    tmp_3 = __UNIQUE_ID___y570;
    }
  #line 1837 
  max_pwr = tmp_3;
  {
    #line 1843 
    int __UNIQUE_ID___x571;
    #line 1843 
    int tmp_5;
    {
      #line 1843 
      __UNIQUE_ID___x571 = (int)phy->power_level << 2;
      #line 1843 
      int __UNIQUE_ID___y572 = 0;
      #line 1843 
      if (__UNIQUE_ID___x571 > __UNIQUE_ID___y572) 
                                                   #line 1843 
                                                   tmp_5 = __UNIQUE_ID___x571; else 
                                                                    #line 1843 
                                                                    tmp_5 = __UNIQUE_ID___y572;
      }
    #line 1843 
    __UNIQUE_ID___x573 = tmp_5;
    #line 1843 
    int __UNIQUE_ID___y574 = max_pwr;
    #line 1843 
    if (__UNIQUE_ID___x573 < __UNIQUE_ID___y574) 
                                                 #line 1843 
                                                 tmp_7 = __UNIQUE_ID___x573; else 
                                                                    #line 1843 
                                                                    tmp_7 = __UNIQUE_ID___y574;
    }
  #line 1843 
  desired_pwr = (short)tmp_7;
  #line 1844 
  if (b43legacy_debug(dev,(enum b43legacy_dyndbg)B43legacy_DBG_XMITPOWER) != 0) 
    #line 1845 
    b43legacydbg(dev->wl,(char *)"Current TX power output: ",(int)estimated_pwr / 4,((int)estimated_pwr & 3) * 25,(int)desired_pwr / 4,((int)desired_pwr & 3) * 25);
  #line 1851 
  pwr_adjust = (short)(((int)desired_pwr - (int)estimated_pwr) / 2);
  #line 1854 
  radio_att_delta = (short)((-7 - (int)pwr_adjust) >> 3);
  #line 1856 
  baseband_att_delta = (short)((unsigned int)(- ((int)pwr_adjust >> 1)) - (unsigned int)radio_att_delta * 4U);
  #line 1858 
  if ((int)radio_att_delta == 0 && (int)baseband_att_delta == 0) {
    #line 1859 
    b43legacy_phy_lo_mark_current_used(dev);
    #line 1860 
    return;
  }
  #line 1864 
  baseband_attenuation = (short)phy->__anonCompField_b43legacy_phy_208.bbatt;
  #line 1865 
  baseband_attenuation = (short)((int)baseband_attenuation + (int)baseband_att_delta);
  #line 1866 
  radio_attenuation = (short)phy->__anonCompField_b43legacy_phy_208.rfatt;
  #line 1867 
  radio_attenuation = (short)((int)radio_attenuation + (int)radio_att_delta);
  #line 1873 
  if ((int)radio_attenuation < 0) {
    #line 1874 
    baseband_attenuation = (short)((unsigned int)baseband_attenuation - (unsigned int)radio_attenuation * 65532U);
    #line 1875 
    radio_attenuation = (short)0;
  }
  else 
    #line 1876 
    if ((int)radio_attenuation > 9) {
      #line 1877 
      baseband_attenuation = (short)((unsigned int)((int)radio_attenuation + -9) * 4U + (unsigned int)baseband_attenuation);
      #line 1878 
      radio_attenuation = (short)9;
    }
    else {
      #line 1880 
      while ((int)baseband_attenuation < 0 && (int)radio_attenuation > 0) {
        #line 1881 
        baseband_attenuation = (short)((unsigned int)baseband_attenuation + 4U);
        #line 1882 
        radio_attenuation = (s16)((int)radio_attenuation - 1);
      }
      #line 1884 
      while ((int)baseband_attenuation > 11 && (int)radio_attenuation <= 8) {
        #line 1885 
        baseband_attenuation = (short)((unsigned int)baseband_attenuation + 65532U);
        #line 1886 
        radio_attenuation = (s16)((int)radio_attenuation + 1);
      }
    }
  {
    #line 1889 
    short __UNIQUE_ID___x575;
    #line 1889 
    int tmp_10;
    {
      #line 1889 
      __UNIQUE_ID___x575 = baseband_attenuation;
      #line 1889 
      short __UNIQUE_ID___y576 = (short)0;
      #line 1889 
      if ((int)__UNIQUE_ID___x575 > (int)__UNIQUE_ID___y576) 
                                                             #line 1889 
                                                             tmp_10 = (int)__UNIQUE_ID___x575; else 
                                                                    #line 1889 
                                                                    tmp_10 = (int)__UNIQUE_ID___y576;
      }
    #line 1889 
    __UNIQUE_ID___x577 = (short)tmp_10;
    #line 1889 
    short __UNIQUE_ID___y578 = (short)11;
    #line 1889 
    if ((int)__UNIQUE_ID___x577 < (int)__UNIQUE_ID___y578) 
                                                           #line 1889 
                                                           tmp_12 = (int)__UNIQUE_ID___x577; else 
                                                                    #line 1889 
                                                                    tmp_12 = (int)__UNIQUE_ID___y578;
    }
  #line 1889 
  baseband_attenuation = (short)tmp_12;
  #line 1891 
  txpower = phy->__anonCompField_b43legacy_phy_208.txctl1;
  #line 1892 
  if ((unsigned int)phy->radio_ver == 8272U && (unsigned int)phy->radio_rev == 2U) 
    #line 1893 
    if ((int)radio_attenuation <= 1) {
      #line 1894 
      if ((unsigned int)txpower == 0U) {
        #line 1895 
        txpower = (unsigned short)3U;
        #line 1896 
        radio_attenuation = (short)((unsigned int)radio_attenuation + 2U);
        #line 1897 
        baseband_attenuation = (short)((unsigned int)baseband_attenuation + 2U);
      }
      else 
        #line 1898 
        if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 2) != 0) {
          #line 1900 
          baseband_attenuation = (short)((unsigned int)((int)radio_attenuation + -2) * 4U + (unsigned int)baseband_attenuation);
          #line 1902 
          radio_attenuation = (short)2;
        }
    }
    else 
      #line 1904 
      if ((int)radio_attenuation > 4 && (unsigned int)txpower != 0U) {
        #line 1905 
        txpower = (unsigned short)0U;
        #line 1906 
        if ((int)baseband_attenuation <= 2) {
          #line 1907 
          radio_attenuation = (short)((unsigned int)radio_attenuation + 65533U);
          #line 1908 
          baseband_attenuation = (short)((unsigned int)baseband_attenuation + 2U);
        }
        else {
          #line 1910 
          radio_attenuation = (short)((unsigned int)radio_attenuation + 65534U);
          #line 1911 
          baseband_attenuation = (short)((unsigned int)baseband_attenuation + 65534U);
        }
      }
  #line 1916 
  phy->__anonCompField_b43legacy_phy_208.txctl1 = txpower;
  {
    #line 1917 
    short __UNIQUE_ID___x579;
    #line 1917 
    int tmp_14;
    {
      #line 1917 
      __UNIQUE_ID___x579 = baseband_attenuation;
      #line 1917 
      short __UNIQUE_ID___y580 = (short)0;
      #line 1917 
      if ((int)__UNIQUE_ID___x579 > (int)__UNIQUE_ID___y580) 
                                                             #line 1917 
                                                             tmp_14 = (int)__UNIQUE_ID___x579; else 
                                                                    #line 1917 
                                                                    tmp_14 = (int)__UNIQUE_ID___y580;
      }
    #line 1917 
    __UNIQUE_ID___x581 = (short)tmp_14;
    #line 1917 
    short __UNIQUE_ID___y582 = (short)11;
    #line 1917 
    if ((int)__UNIQUE_ID___x581 < (int)__UNIQUE_ID___y582) 
                                                           #line 1917 
                                                           tmp_16 = (int)__UNIQUE_ID___x581; else 
                                                                    #line 1917 
                                                                    tmp_16 = (int)__UNIQUE_ID___y582;
    }
  #line 1917 
  baseband_attenuation = (short)tmp_16;
  {
    #line 1918 
    short __UNIQUE_ID___x583;
    #line 1918 
    int tmp_18;
    {
      #line 1918 
      __UNIQUE_ID___x583 = radio_attenuation;
      #line 1918 
      short __UNIQUE_ID___y584 = (short)0;
      #line 1918 
      if ((int)__UNIQUE_ID___x583 > (int)__UNIQUE_ID___y584) 
                                                             #line 1918 
                                                             tmp_18 = (int)__UNIQUE_ID___x583; else 
                                                                    #line 1918 
                                                                    tmp_18 = (int)__UNIQUE_ID___y584;
      }
    #line 1918 
    __UNIQUE_ID___x585 = (short)tmp_18;
    #line 1918 
    short __UNIQUE_ID___y586 = (short)9;
    #line 1918 
    if ((int)__UNIQUE_ID___x585 < (int)__UNIQUE_ID___y586) 
                                                           #line 1918 
                                                           tmp_20 = (int)__UNIQUE_ID___x585; else 
                                                                    #line 1918 
                                                                    tmp_20 = (int)__UNIQUE_ID___y586;
    }
  #line 1918 
  radio_attenuation = (short)tmp_20;
  #line 1919 
  phy->__anonCompField_b43legacy_phy_208.rfatt = (unsigned short)radio_attenuation;
  #line 1920 
  phy->__anonCompField_b43legacy_phy_208.bbatt = (unsigned short)baseband_attenuation;
  #line 1923 
  b43legacy_phy_lock(dev);
  #line 1924 
  b43legacy_radio_lock(dev);
  #line 1925 
  b43legacy_radio_set_txpower_bg(dev,(unsigned short)((int)((unsigned short)baseband_attenuation)),(unsigned short)((int)((unsigned short)radio_attenuation)),(unsigned short)((int)txpower));
  #line 1927 
  b43legacy_phy_lo_mark_current_used(dev);
  #line 1928 
  b43legacy_radio_unlock(dev);
  #line 1929 
  b43legacy_phy_unlock(dev);
  #line 1930 
  return;
}

#line 1933  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
__inline static s32 b43legacy_tssi2dbm_ad(s32 num, s32 den)
{
  #line 1935 
  if (num < 0) 
               #line 1936 
               return num / den; else 
                                      #line 1938 
                                      return (den / 2 + num) / den;
}

#line 1942  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
__inline static s8 b43legacy_tssi2dbm_entry(s8 *entry, u8 index, s16 pab0, s16 pab1, s16 pab2)
{
  #line 1952 
  int tmp_0;
  #line 1963 
  int __UNIQUE_ID___x591;
  #line 1963 
  int tmp_8;
  #line 1952 
  s32 __UNIQUE_ID___x587;
  #line 1944 
  s32 m1;
  #line 1945 
  s32 m2;
  #line 1947 
  s32 q;
  #line 1948 
  s32 delta;
  #line 1946 
  s32 f = 256;
  #line 1949 
  s8 i = (signed char)0;
  #line 1951 
  m1 = b43legacy_tssi2dbm_ad((int)pab0 * 16 + (int)index * (int)pab1,32);
  {
    #line 1952 
    __UNIQUE_ID___x587 = b43legacy_tssi2dbm_ad((int)index * (int)pab2 + 32768,256);
    #line 1952 
    int __UNIQUE_ID___y588 = 1;
    #line 1952 
    if (__UNIQUE_ID___x587 > __UNIQUE_ID___y588) 
                                                 #line 1952 
                                                 tmp_0 = __UNIQUE_ID___x587; else 
                                                                    #line 1952 
                                                                    tmp_0 = __UNIQUE_ID___y588;
    }
  #line 1952 
  m2 = tmp_0;
  #line 1953 
  while (1) {
    {
      #line 1959 
      int __x;
      #line 1959 
      int tmp_3;
      #line 1954 
      if ((int)i > 15) 
                       #line 1955 
                       return (signed char)(-22);
      #line 1956 
      ;
      #line 1956 
      q = b43legacy_tssi2dbm_ad(f * 4096 - b43legacy_tssi2dbm_ad(m2 * f,16) * f,2048);
      #line 1959 
      __x = q - f;
      #line 1959 
      if (__x < 0) 
                   #line 1959 
                   tmp_3 = - __x; else 
                                       #line 1959 
                                       tmp_3 = __x;
      #line 1959 
      delta = tmp_3;
      #line 1960 
      f = q;
      #line 1961 
      i = (s8)((int)i + 1);
    }
    #line 1962 
    if (! (delta > 1)) 
                       #line 1953 
                       break;
  }
  {
    #line 1963 
    int __UNIQUE_ID___x589;
    #line 1963 
    int tmp_6;
    {
      #line 1963 
      __UNIQUE_ID___x589 = b43legacy_tssi2dbm_ad(m1 * f,8192);
      #line 1963 
      int __UNIQUE_ID___y590 = -127;
      #line 1963 
      if (__UNIQUE_ID___x589 > __UNIQUE_ID___y590) 
                                                   #line 1963 
                                                   tmp_6 = __UNIQUE_ID___x589; else 
                                                                    #line 1963 
                                                                    tmp_6 = __UNIQUE_ID___y590;
      }
    #line 1963 
    __UNIQUE_ID___x591 = tmp_6;
    #line 1963 
    int __UNIQUE_ID___y592 = 128;
    #line 1963 
    if (__UNIQUE_ID___x591 < __UNIQUE_ID___y592) 
                                                 #line 1963 
                                                 tmp_8 = __UNIQUE_ID___x591; else 
                                                                    #line 1963 
                                                                    tmp_8 = __UNIQUE_ID___y592;
    }
  #line 1963 
  *(entry + (unsigned long)index) = (signed char)tmp_8;
  #line 1965 
  return (signed char)0;
}

#line 1969  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
int b43legacy_phy_init_tssi2dbm_table(struct b43legacy_wldev *dev)
{
  #line 1972 
  s16 pab0;
  #line 1973 
  s16 pab1;
  #line 1974 
  s16 pab2;
  #line 1975 
  u8 idx;
  #line 1976 
  s8 *dyn_tssi2dbm;
  #line 1971 
  struct b43legacy_phy *phy = & dev->phy;
  {
    #line 1978 
    int __ret_warn_on = (unsigned int)phy->type + 255U > 1U;
    #line 1978 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1979 
      ldv_inline_asm();
      #line 1980 
      ldv_inline_asm();
    }
    #line 1978 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1980 
  pab0 = (short)((dev->dev)->bus)->sprom.pa0b0;
  #line 1981 
  pab1 = (short)((dev->dev)->bus)->sprom.pa0b1;
  #line 1982 
  pab2 = (short)((dev->dev)->bus)->sprom.pa0b2;
  #line 1984 
  if ((unsigned int)((dev->dev)->bus)->chip_id == 17153U && (unsigned int)phy->radio_ver != 8272U) {
    #line 1985 
    phy->idle_tssi = (signed char)52;
    #line 1986 
    phy->tssi2dbm = (s8 *)(& b43legacy_tssi2dbm_b_table);
    #line 1987 
    return 0;
  }
  #line 1990 
  if ((((int)pab0 != 0 && (int)pab1 != 0) && ((int)pab2 != 0 && (int)pab0 != -1)) && ((int)pab1 != -1 && (int)pab2 != -1)) {
    #line 1993 
    if ((unsigned int)((dev->dev)->bus)->sprom.itssi_bg + 255U <= 253U) 
      #line 1995 
      phy->idle_tssi = (signed char)((dev->dev)->bus)->sprom.itssi_bg; else 
                                                                    #line 1998 
                                                                    phy->idle_tssi = (signed char)62;
    #line 1999 
    dyn_tssi2dbm = (s8 *)kmalloc_0(64UL,3264U);
    #line 2000 
    if (dyn_tssi2dbm == (s8 *)0) {
      #line 2001 
      b43legacyerr(dev->wl,(char *)"Could not allocate memory ");
      #line 2003 
      return -12;
    }
    #line 2005 
    idx = (unsigned char)0U;
    #line 2005 
    while ((unsigned int)idx <= 63U) {
      #line 2006 
      if ((int)b43legacy_tssi2dbm_entry(dyn_tssi2dbm,(unsigned char)((int)idx),
                                 (short)((int)pab0),(short)((int)pab1),
                                 (short)((int)pab2)) != 0) {
        #line 2008 
        phy->tssi2dbm = (s8 *)0;
        #line 2009 
        b43legacyerr(dev->wl,(char *)"Could not generate ");
        #line 2011 
        kfree((void *)dyn_tssi2dbm);
        #line 2012 
        return -19;
      }
      #line 2005 
      idx = (u8)((int)idx + 1);
    }
    #line 2014 
    phy->tssi2dbm = dyn_tssi2dbm;
    #line 2015 
    phy->dyn_tssi_tbl = (_Bool)1;
  }
  else 
    #line 2018 
    switch ((int)phy->type) {
      #line 2019 
      case 1: 
              #line 2019 
      ;
      #line 2020 
      phy->idle_tssi = (signed char)52;
      #line 2021 
      phy->tssi2dbm = (s8 *)(& b43legacy_tssi2dbm_b_table);
      #line 2022 
      break;
      #line 2023 
      case 2: 
              #line 2023 
      ;
      #line 2024 
      phy->idle_tssi = (signed char)52;
      #line 2025 
      phy->tssi2dbm = (s8 *)(& b43legacy_tssi2dbm_g_table);
      #line 2026 
      break;
    }
  #line 2030 
  return 0;
}

#line 2033  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
int b43legacy_phy_init(struct b43legacy_wldev *dev)
{
  #line 2035 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2036 
  int err = -19;
  #line 2038 
  switch ((int)phy->type) {
    #line 2039 
    case 1: 
            #line 2039 
    ;
    #line 2040 
    switch ((int)phy->rev) {
      #line 2041 
      case 2: 
              #line 2041 
      ;
      #line 2042 
      b43legacy_phy_initb2(dev);
      #line 2043 
      err = 0;
      #line 2044 
      break;
      #line 2045 
      case 4: 
              #line 2045 
      ;
      #line 2046 
      b43legacy_phy_initb4(dev);
      #line 2047 
      err = 0;
      #line 2048 
      break;
      #line 2049 
      case 5: 
              #line 2049 
      ;
      #line 2050 
      b43legacy_phy_initb5(dev);
      #line 2051 
      err = 0;
      #line 2052 
      break;
      #line 2053 
      case 6: 
              #line 2053 
      ;
      #line 2054 
      b43legacy_phy_initb6(dev);
      #line 2055 
      err = 0;
      #line 2056 
      break;
    }
    #line 2058 
    break;
    #line 2059 
    case 2: 
            #line 2059 
    ;
    #line 2060 
    b43legacy_phy_initg(dev);
    #line 2061 
    err = 0;
    #line 2062 
    break;
  }
  #line 2064 
  if (err != 0) 
                #line 2065 
                b43legacyerr(dev->wl,(char *)"Unknown PHYTYPE found\n");
  #line 2067 
  return err;
}

#line 2070  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_phy_set_antenna_diversity(struct b43legacy_wldev *dev)
{
  #line 2073 
  u16 antennadiv;
  #line 2074 
  u16 offset;
  #line 2075 
  u16 value;
  #line 2076 
  u32 ucodeflags;
  #line 2072 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2078 
  antennadiv = phy->antenna_diversity;
  #line 2080 
  if ((unsigned int)antennadiv == 65535U) 
                                          #line 2081 
                                          antennadiv = (unsigned short)3U;
  {
    #line 2082 
    int __ret_warn_on = (unsigned int)antennadiv > 3U;
    #line 2082 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 2083 
      ldv_inline_asm();
      #line 2084 
      ldv_inline_asm();
    }
    #line 2082 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 2084 
  ucodeflags = b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94);
  #line 2086 
  b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,ucodeflags & 4294967294U);
  #line 2090 
  switch ((int)phy->type) {
    #line 2091 
    case 2: 
            #line 2091 
    ;
    #line 2092 
    offset = (unsigned short)1024U;
    #line 2094 
    if ((unsigned int)antennadiv == 2U) 
                                        #line 2095 
                                        value = (unsigned short)384U; else 
                                                                    #line 2097 
                                                                    value = (unsigned short)((int)antennadiv << 7U);
    #line 2098 
    ;
    #line 2098 
    ;
    #line 2098 
    ;
    #line 2098 
    b43legacy_phy_write(dev,(unsigned short)((int)((unsigned int)offset + 1U)),(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,
                           (unsigned short)((int)((unsigned int)offset + 1U))) & 32383) | (int)value))));
    #line 2102 
    if ((unsigned int)antennadiv > 1U) {
      #line 2103 
      if ((unsigned int)antennadiv == 2U) 
                                          #line 2104 
                                          value = (unsigned short)((int)antennadiv << 7U); else 
                                                                    #line 2106 
                                                                    value = (unsigned short)0U;
      #line 2107 
      ;
      #line 2107 
      ;
      #line 2107 
      ;
      #line 2107 
      b43legacy_phy_write(dev,(unsigned short)((int)((unsigned int)offset + 43U)),(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,
                             (unsigned short)((int)((unsigned int)offset + 43U))) & -257) | (int)value))));
    }
    #line 2113 
    if ((unsigned int)phy->type == 2U) {
      #line 2114 
      if ((unsigned int)antennadiv > 1U) {
        #line 2115 
        ;
        #line 2115 
        b43legacy_phy_write(dev,(unsigned short)1164,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1164) | 8192U)));
      }
      else {
        #line 2119 
        ;
        #line 2119 
        b43legacy_phy_write(dev,(unsigned short)1164,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1164) & 57343));
      }
      #line 2122 
      if ((unsigned int)phy->rev > 1U) {
        #line 2123 
        ;
        #line 2123 
        b43legacy_phy_write(dev,(unsigned short)1121,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1121) | 16U)));
        #line 2126 
        ;
        #line 2126 
        b43legacy_phy_write(dev,(unsigned short)1197,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1197) & 255) | 21))));
        #line 2130 
        if ((unsigned int)phy->rev == 2U) 
                                          #line 2131 
                                          b43legacy_phy_write(dev,(unsigned short)1063,(unsigned short)8);
        else {
          #line 2134 
          ;
          #line 2134 
          b43legacy_phy_write(dev,(unsigned short)1063,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1063) & 255) | 8))));
        }
      }
      else 
        #line 2137 
        if ((unsigned int)phy->rev > 5U) 
                                         #line 2138 
                                         b43legacy_phy_write(dev,(unsigned short)1179,(unsigned short)220);
    }
    else 
      #line 2140 
      if ((unsigned int)phy->rev <= 2U) {
        #line 2141 
        ;
        #line 2141 
        b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)43) & 255) | 36))));
      }
      else {
        #line 2146 
        ;
        #line 2146 
        b43legacy_phy_write(dev,(unsigned short)97,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)97) | 16U)));
        #line 2149 
        if ((unsigned int)phy->rev == 3U) {
          #line 2150 
          b43legacy_phy_write(dev,(unsigned short)147,(unsigned short)29);
          #line 2152 
          b43legacy_phy_write(dev,(unsigned short)39,(unsigned short)8);
        }
        else {
          #line 2155 
          b43legacy_phy_write(dev,(unsigned short)147,(unsigned short)58);
          #line 2157 
          ;
          #line 2157 
          b43legacy_phy_write(dev,(unsigned short)39,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)39) & 255) | 8))));
        }
      }
    #line 2163 
    break;
    #line 2164 
    case 1: 
            #line 2164 
    ;
    #line 2165 
    if ((unsigned int)(dev->dev)->id.revision == 2U) 
                                                     #line 2166 
                                                     value = (unsigned short)384U; else 
                                                                    #line 2168 
                                                                    value = (unsigned short)((int)antennadiv << 7U);
    #line 2169 
    ;
    #line 2169 
    ;
    #line 2169 
    b43legacy_phy_write(dev,(unsigned short)994,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)994) & -385) | (int)value))));
    #line 2172 
    break;
    #line 2173 
    default: 
             #line 2173 
    ;
    {
      #line 2174 
      int __ret_warn_on_0 = 1;
      #line 2174 
      if ((long)(__ret_warn_on_0 != 0) != 0L) {
        #line 2175 
        ldv_inline_asm();
        #line 2176 
        ldv_inline_asm();
      }
      #line 2174 
      long tmp_10 = (long)(__ret_warn_on_0 != 0);
    }
  }
  #line 2177 
  if ((unsigned int)antennadiv > 1U) {
    #line 2178 
    ucodeflags = b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94);
    #line 2180 
    b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,ucodeflags | 1U);
  }
  #line 2185 
  phy->antenna_diversity = antennadiv;
  #line 2186 
  return;
}

#line 2194  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/phy.c"
void b43legacy_power_saving_ctl_bits(struct b43legacy_wldev *dev, int bit25, int bit26)
{
  #line 2197 
  int i;
  #line 2198 
  u32 status;
  #line 2201 
  bit25 = 0;
  #line 2202 
  bit26 = 1;
  #line 2204 
  if (bit25 == -1) ;
  #line 2209 
  if (bit26 == -1) ;
  #line 2215 
  status = b43legacy_read32(dev,(unsigned short)288);
  #line 2216 
  if (bit25 != 0) 
                  #line 2217 
                  status |= 33554432U; else 
                                            #line 2219 
                                            status &= 4261412863U;
  #line 2220 
  if (bit26 != 0) 
                  #line 2221 
                  status |= 67108864U; else 
                                            #line 2223 
                                            status &= 4227858431U;
  #line 2224 
  b43legacy_write32(dev,(unsigned short)288,status);
  #line 2225 
  if (bit26 != 0 && (unsigned int)(dev->dev)->id.revision > 4U) {
    #line 2226 
    i = 0;
    #line 2226 
    while (i <= 99) {
      {
        #line 2227 
        if (b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)64) != 4U) 
          #line 2229 
          break;
        #line 2230 
        __const_udelay(42950UL);
      }
      #line 2226 
      i ++;
    }
  }
  #line 2234 
  return;
}

#line 443  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/0/concurrency safety/weaver/phy.i.aux"
static void *kmalloc_0(size_t size, gfp_t flags)
{
  #line 446 
  return ldv_kmalloc(size,flags);
}

#line 10  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_finefreqa[256U];
#line 14  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisea2[8U];
#line 16  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisea3[8U];
#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.h"
#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_read(struct b43legacy_wldev *dev, u16 offset);
#line 22  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u32 b43legacy_ilt_rotor[53U] = {4273553405U, 4274405373U, 4275191805U, 4276043773U, 4276895742U, 4277682174U, 4278534142U, 4279320574U, 4280172542U, 4280958975U, 4281810943U, 4282662911U, 4283449343U, 4284301311U, 4285087743U, 4285939711U, 4286726144U, 4287578112U, 4288364544U, 4289216512U, 4290068480U, 4290854912U, 4291706880U, 4292493312U, 4293345280U, 4294131712U, 16384U, 868352U, 1654784U, 2506752U, 3293184U, 4145152U, 4931584U, 5783552U, 6635520U, 7421952U, 8273920U, 9060351U, 9912319U, 10698751U, 11550719U, 12337151U, 13189119U, 14041087U, 14827518U, 15679486U, 16465918U, 17317886U, 18104318U, 18956285U, 19808253U, 20594685U, 21446653U};
#line 52  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u32 b43legacy_ilt_retard[53U] = {3683896199U, 3597061988U, 3523072856U, 3450263590U, 3392724383U, 3341410996U, 3295275150U, 3261787691U, 3235837036U, 3228826210U, 3223126229U, 3228960579U, 3243642142U, 3269792617U, 3303872767U, 3349946071U, 3408405426U, 3472500953U, 3539348799U, 3619369367U, 3706008936U, 3791534197U, 3889249077U, 3982900533U, 4087037636U, 4186849191U, 16384U, 108150695U, 207961796U, 312098101U, 405748533U, 503462005U, 588985704U, 675623319U, 755641663U, 822487257U, 886580146U, 945037015U, 991107327U, 1025184617U, 1051331870U, 1066010435U, 1071841493U, 1066269282U, 1059255404U, 1033301547U, 999811214U, 953672372U, 902356383U, 844814374U, 772002648U, 698011492U, 611175303U};
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_finefreqa[256U] = {(unsigned short)130U, (unsigned short)130U, (unsigned short)258U, (unsigned short)386U, (unsigned short)514U, (unsigned short)642U, (unsigned short)770U, (unsigned short)898U, (unsigned short)1026U, (unsigned short)1154U, (unsigned short)1282U, (unsigned short)1410U, (unsigned short)1506U, (unsigned short)1634U, (unsigned short)1762U, (unsigned short)1890U, (unsigned short)2018U, (unsigned short)2114U, (unsigned short)2242U, (unsigned short)2370U, (unsigned short)2498U, (unsigned short)2594U, (unsigned short)2722U, (unsigned short)2818U, (unsigned short)2946U, (unsigned short)3042U, (unsigned short)3170U, (unsigned short)3266U, (unsigned short)3394U, (unsigned short)3490U, (unsigned short)3586U, (unsigned short)3682U, (unsigned short)3810U, (unsigned short)3906U, (unsigned short)4002U, (unsigned short)4098U, (unsigned short)4194U, (unsigned short)4290U, (unsigned short)4386U, (unsigned short)4482U, (unsigned short)4578U, (unsigned short)4674U, (unsigned short)4770U, (unsigned short)4834U, (unsigned short)4930U, (unsigned short)5026U, (unsigned short)5122U, (unsigned short)5186U, (unsigned short)5282U, (unsigned short)5346U, (unsigned short)5442U, (unsigned short)5506U, (unsigned short)5602U, (unsigned short)5666U, (unsigned short)5730U, (unsigned short)5825U, (unsigned short)5889U, (unsigned short)5953U, (unsigned short)6017U, (unsigned short)6113U, (unsigned short)6177U, (unsigned short)6241U, (unsigned short)6305U, (unsigned short)6369U, (unsigned short)6433U, (unsigned short)6497U, (unsigned short)6561U, (unsigned short)6625U, (unsigned short)6689U, (unsigned short)6753U, (unsigned short)6817U, (unsigned short)6849U, (unsigned short)6913U, (unsigned short)6977U, (unsigned short)7041U, (unsigned short)7073U, (unsigned short)7137U, (unsigned short)7201U, (unsigned short)7233U, (unsigned short)7297U, (unsigned short)7329U, (unsigned short)7393U, (unsigned short)7425U, (unsigned short)7489U, (unsigned short)7521U, (unsigned short)7585U, (unsigned short)7617U, (unsigned short)7681U, (unsigned short)7713U, (unsigned short)7777U, (unsigned short)7809U, (unsigned short)7841U, (unsigned short)7905U, (unsigned short)7937U, (unsigned short)7969U, (unsigned short)8001U, (unsigned short)8065U, (unsigned short)8097U, (unsigned short)8129U, (unsigned short)8161U, (unsigned short)8193U, (unsigned short)8257U, (unsigned short)8289U, (unsigned short)8321U, (unsigned short)8353U, (unsigned short)8385U, (unsigned short)8417U, (unsigned short)8449U, (unsigned short)8481U, (unsigned short)8513U, (unsigned short)8545U, (unsigned short)8577U, (unsigned short)8609U, (unsigned short)8641U, (unsigned short)8673U, (unsigned short)8705U, (unsigned short)8737U, (unsigned short)8769U, (unsigned short)8801U, (unsigned short)8833U, (unsigned short)8865U, (unsigned short)8897U, (unsigned short)8897U, (unsigned short)8929U, (unsigned short)8961U, (unsigned short)8993U, (unsigned short)9025U, (unsigned short)9057U, (unsigned short)9057U, (unsigned short)9089U, (unsigned short)9121U, (unsigned short)9153U, (unsigned short)9185U, (unsigned short)9185U, (unsigned short)9217U, (unsigned short)9249U, (unsigned short)9281U, (unsigned short)9281U, (unsigned short)9313U, (unsigned short)9345U, (unsigned short)9345U, (unsigned short)9377U, (unsigned short)9409U, (unsigned short)9409U, (unsigned short)9441U, (unsigned short)9473U, (unsigned short)9473U, (unsigned short)9505U, (unsigned short)9537U, (unsigned short)9537U, (unsigned short)9569U, (unsigned short)9569U, (unsigned short)9601U, (unsigned short)9633U, (unsigned short)9633U, (unsigned short)9665U, (unsigned short)9665U, (unsigned short)9697U, (unsigned short)9729U, (unsigned short)9729U, (unsigned short)9761U, (unsigned short)9761U, (unsigned short)9793U, (unsigned short)9793U, (unsigned short)9825U, (unsigned short)9825U, (unsigned short)9857U, (unsigned short)9857U, (unsigned short)9889U, (unsigned short)9889U, (unsigned short)9921U, (unsigned short)9921U, (unsigned short)9953U, (unsigned short)9953U, (unsigned short)9985U, (unsigned short)9985U, (unsigned short)10017U, (unsigned short)10017U, (unsigned short)10048U, (unsigned short)10048U, (unsigned short)10080U, (unsigned short)10080U, (unsigned short)10112U, (unsigned short)10112U, (unsigned short)10112U, (unsigned short)10144U, (unsigned short)10144U, (unsigned short)10176U, (unsigned short)10176U, (unsigned short)10208U, (unsigned short)10208U, (unsigned short)10208U, (unsigned short)10240U, (unsigned short)10240U, (unsigned short)10272U, (unsigned short)10272U, (unsigned short)10272U, (unsigned short)10304U, (unsigned short)10304U, (unsigned short)10304U, (unsigned short)10336U, (unsigned short)10336U, (unsigned short)10368U, (unsigned short)10368U, (unsigned short)10368U, (unsigned short)10400U, (unsigned short)10400U, (unsigned short)10400U, (unsigned short)10432U, (unsigned short)10432U, (unsigned short)10432U, (unsigned short)10464U, (unsigned short)10464U, (unsigned short)10464U, (unsigned short)10496U, (unsigned short)10496U, (unsigned short)10496U, (unsigned short)10528U, (unsigned short)10528U, (unsigned short)10528U, (unsigned short)10560U, (unsigned short)10560U, (unsigned short)10560U, (unsigned short)10592U, (unsigned short)10592U, (unsigned short)10592U, (unsigned short)10592U, (unsigned short)10624U, (unsigned short)10624U, (unsigned short)10624U, (unsigned short)10656U, (unsigned short)10656U, (unsigned short)10656U, (unsigned short)10656U, (unsigned short)10688U, (unsigned short)10688U, (unsigned short)10688U, (unsigned short)10720U, (unsigned short)10720U, (unsigned short)10720U, (unsigned short)10720U, (unsigned short)10752U, (unsigned short)10752U, (unsigned short)10752U, (unsigned short)10752U, (unsigned short)10784U, (unsigned short)10784U, (unsigned short)10784U, (unsigned short)10784U, (unsigned short)10816U, (unsigned short)10816U, (unsigned short)10816U, (unsigned short)10816U, (unsigned short)10848U, (unsigned short)10848U, (unsigned short)10848U};
#line 149  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_finefreqg[256U] = {(unsigned short)137U, (unsigned short)745U, (unsigned short)1033U, (unsigned short)1257U, (unsigned short)1449U, (unsigned short)1641U, (unsigned short)1801U, (unsigned short)1929U, (unsigned short)2089U, (unsigned short)2217U, (unsigned short)2345U, (unsigned short)2441U, (unsigned short)2569U, (unsigned short)2665U, (unsigned short)2761U, (unsigned short)2857U, (unsigned short)2985U, (unsigned short)3049U, (unsigned short)3145U, (unsigned short)3241U, (unsigned short)3337U, (unsigned short)3433U, (unsigned short)3497U, (unsigned short)3593U, (unsigned short)3689U, (unsigned short)3753U, (unsigned short)3849U, (unsigned short)3913U, (unsigned short)4009U, (unsigned short)4073U, (unsigned short)4137U, (unsigned short)4233U, (unsigned short)4297U, (unsigned short)4361U, (unsigned short)4457U, (unsigned short)4521U, (unsigned short)4585U, (unsigned short)4649U, (unsigned short)4745U, (unsigned short)4809U, (unsigned short)4873U, (unsigned short)4937U, (unsigned short)5001U, (unsigned short)5065U, (unsigned short)5129U, (unsigned short)5193U, (unsigned short)5289U, (unsigned short)5353U, (unsigned short)5417U, (unsigned short)5481U, (unsigned short)5545U, (unsigned short)5609U, (unsigned short)5673U, (unsigned short)5737U, (unsigned short)5801U, (unsigned short)5864U, (unsigned short)5928U, (unsigned short)5992U, (unsigned short)6056U, (unsigned short)6120U, (unsigned short)6184U, (unsigned short)6248U, (unsigned short)6312U, (unsigned short)6376U, (unsigned short)6440U, (unsigned short)6504U, (unsigned short)6568U, (unsigned short)6632U, (unsigned short)6696U, (unsigned short)6760U, (unsigned short)6824U, (unsigned short)6888U, (unsigned short)6952U, (unsigned short)7016U, (unsigned short)7080U, (unsigned short)7144U, (unsigned short)7208U, (unsigned short)7272U, (unsigned short)7336U, (unsigned short)7400U, (unsigned short)7464U, (unsigned short)7528U, (unsigned short)7624U, (unsigned short)7688U, (unsigned short)7752U, (unsigned short)7816U, (unsigned short)7880U, (unsigned short)7944U, (unsigned short)8008U, (unsigned short)8072U, (unsigned short)8168U, (unsigned short)8232U, (unsigned short)8296U, (unsigned short)8360U, (unsigned short)8456U, (unsigned short)8520U, (unsigned short)8584U, (unsigned short)8648U, (unsigned short)8744U, (unsigned short)8808U, (unsigned short)8904U, (unsigned short)8968U, (unsigned short)9032U, (unsigned short)9128U, (unsigned short)9192U, (unsigned short)9288U, (unsigned short)9384U, (unsigned short)9448U, (unsigned short)9544U, (unsigned short)9640U, (unsigned short)9736U, (unsigned short)9832U, (unsigned short)9928U, (unsigned short)10024U, (unsigned short)10119U, (unsigned short)10215U, (unsigned short)10311U, (unsigned short)10439U, (unsigned short)10567U, (unsigned short)10663U, (unsigned short)10791U, (unsigned short)10951U, (unsigned short)11079U, (unsigned short)11239U, (unsigned short)11431U, (unsigned short)11623U, (unsigned short)11847U, (unsigned short)12135U, (unsigned short)12871U, (unsigned short)13606U, (unsigned short)13894U, (unsigned short)14118U, (unsigned short)14342U, (unsigned short)14502U, (unsigned short)14662U, (unsigned short)14822U, (unsigned short)14950U, (unsigned short)15078U, (unsigned short)15206U, (unsigned short)15302U, (unsigned short)15429U, (unsigned short)15525U, (unsigned short)15621U, (unsigned short)15749U, (unsigned short)15845U, (unsigned short)15941U, (unsigned short)16037U, (unsigned short)16101U, (unsigned short)16197U, (unsigned short)16293U, (unsigned short)16389U, (unsigned short)16453U, (unsigned short)16549U, (unsigned short)16613U, (unsigned short)16709U, (unsigned short)16773U, (unsigned short)16869U, (unsigned short)16933U, (unsigned short)16997U, (unsigned short)17093U, (unsigned short)17157U, (unsigned short)17221U, (unsigned short)17317U, (unsigned short)17381U, (unsigned short)17444U, (unsigned short)17508U, (unsigned short)17604U, (unsigned short)17668U, (unsigned short)17732U, (unsigned short)17796U, (unsigned short)17860U, (unsigned short)17924U, (unsigned short)17988U, (unsigned short)18084U, (unsigned short)18148U, (unsigned short)18212U, (unsigned short)18276U, (unsigned short)18340U, (unsigned short)18404U, (unsigned short)18468U, (unsigned short)18532U, (unsigned short)18596U, (unsigned short)18660U, (unsigned short)18724U, (unsigned short)18788U, (unsigned short)18852U, (unsigned short)18916U, (unsigned short)18980U, (unsigned short)19044U, (unsigned short)19108U, (unsigned short)19172U, (unsigned short)19235U, (unsigned short)19299U, (unsigned short)19363U, (unsigned short)19427U, (unsigned short)19491U, (unsigned short)19555U, (unsigned short)19619U, (unsigned short)19683U, (unsigned short)19747U, (unsigned short)19811U, (unsigned short)19875U, (unsigned short)19939U, (unsigned short)20003U, (unsigned short)20067U, (unsigned short)20131U, (unsigned short)20195U, (unsigned short)20259U, (unsigned short)20323U, (unsigned short)20419U, (unsigned short)20483U, (unsigned short)20547U, (unsigned short)20611U, (unsigned short)20675U, (unsigned short)20739U, (unsigned short)20803U, (unsigned short)20867U, (unsigned short)20962U, (unsigned short)21026U, (unsigned short)21090U, (unsigned short)21154U, (unsigned short)21218U, (unsigned short)21314U, (unsigned short)21378U, (unsigned short)21442U, (unsigned short)21506U, (unsigned short)21602U, (unsigned short)21666U, (unsigned short)21762U, (unsigned short)21826U, (unsigned short)21922U, (unsigned short)21986U, (unsigned short)22082U, (unsigned short)22146U, (unsigned short)22242U, (unsigned short)22306U, (unsigned short)22402U, (unsigned short)22497U, (unsigned short)22593U, (unsigned short)22689U, (unsigned short)22785U, (unsigned short)22881U, (unsigned short)22977U, (unsigned short)23073U, (unsigned short)23201U, (unsigned short)23297U, (unsigned short)23425U, (unsigned short)23521U, (unsigned short)23649U, (unsigned short)23809U, (unsigned short)23936U, (unsigned short)24096U, (unsigned short)24288U, (unsigned short)24480U, (unsigned short)24704U, (unsigned short)25024U};
#line 216  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisea2[8U] = {(unsigned short)1U, (unsigned short)1U, (unsigned short)1U, (unsigned short)65534U, (unsigned short)65534U, (unsigned short)16383U, (unsigned short)4096U, (unsigned short)915U};
#line 221  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisea3[8U] = {(unsigned short)19532U, (unsigned short)19532U, (unsigned short)19532U, (unsigned short)11574U, (unsigned short)19532U, (unsigned short)19532U, (unsigned short)19532U, (unsigned short)11574U};
#line 226  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noiseg1[8U] = {(unsigned short)316U, (unsigned short)501U, (unsigned short)794U, (unsigned short)1585U, (unsigned short)1U, (unsigned short)1U, (unsigned short)1U, (unsigned short)1U};
#line 231  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noiseg2[8U] = {(unsigned short)21636U, (unsigned short)15424U};
#line 236  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisescaleg1[27U] = {(unsigned short)27767U, (unsigned short)20834U, (unsigned short)15168U, (unsigned short)13109U, (unsigned short)12077U, (unsigned short)10794U, (unsigned short)9511U, (unsigned short)7969U, (unsigned short)6685U, (unsigned short)5913U, (unsigned short)5654U, (unsigned short)5140U, (unsigned short)5140U, (unsigned short)5120U, (unsigned short)5140U, (unsigned short)5652U, (unsigned short)5910U, (unsigned short)6681U, (unsigned short)7965U, (unsigned short)9505U, (unsigned short)10791U, (unsigned short)12074U, (unsigned short)13101U, (unsigned short)15157U, (unsigned short)20800U, (unsigned short)27746U, (unsigned short)119U};
#line 246  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisescaleg2[27U] = {(unsigned short)55517U, (unsigned short)52180U, (unsigned short)48320U, (unsigned short)46775U, (unsigned short)45744U, (unsigned short)44461U, (unsigned short)42921U, (unsigned short)40865U, (unsigned short)38555U, (unsigned short)37269U, (unsigned short)36751U, (unsigned short)35466U, (unsigned short)35466U, (unsigned short)35328U, (unsigned short)35466U, (unsigned short)36746U, (unsigned short)37263U, (unsigned short)38549U, (unsigned short)40859U, (unsigned short)42913U, (unsigned short)44457U, (unsigned short)45741U, (unsigned short)46768U, (unsigned short)48311U, (unsigned short)52160U, (unsigned short)55508U, (unsigned short)221U};
#line 256  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_noisescaleg3[27U] = {(unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)41984U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)42148U, (unsigned short)164U};
#line 266  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_sigmasqr1[53U] = {(unsigned short)122U, (unsigned short)117U, (unsigned short)113U, (unsigned short)108U, (unsigned short)103U, (unsigned short)99U, (unsigned short)94U, (unsigned short)89U, (unsigned short)84U, (unsigned short)80U, (unsigned short)75U, (unsigned short)70U, (unsigned short)66U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, [27] = (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)61U, (unsigned short)66U, (unsigned short)70U, (unsigned short)75U, (unsigned short)80U, (unsigned short)84U, (unsigned short)89U, (unsigned short)94U, (unsigned short)99U, (unsigned short)103U, (unsigned short)108U, (unsigned short)113U, (unsigned short)117U, (unsigned short)122U};
#line 283  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_sigmasqr2[53U] = {(unsigned short)222U, (unsigned short)220U, (unsigned short)218U, (unsigned short)216U, (unsigned short)214U, (unsigned short)212U, (unsigned short)210U, (unsigned short)207U, (unsigned short)205U, (unsigned short)202U, (unsigned short)199U, (unsigned short)196U, (unsigned short)193U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, [27] = (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)190U, (unsigned short)193U, (unsigned short)196U, (unsigned short)199U, (unsigned short)202U, (unsigned short)205U, (unsigned short)207U, (unsigned short)210U, (unsigned short)212U, (unsigned short)214U, (unsigned short)216U, (unsigned short)218U, (unsigned short)220U, (unsigned short)222U};
#line 302  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
void b43legacy_ilt_write(struct b43legacy_wldev *dev, u16 offset, u16 val)
{
  #line 304 
  b43legacy_phy_write(dev,(unsigned short)1138,(unsigned short)((int)offset));
  #line 305 
  b43legacy_phy_write(dev,(unsigned short)1139,(unsigned short)((int)val));
  #line 306 
  return;
}

#line 308  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
void b43legacy_ilt_write32(struct b43legacy_wldev *dev, u16 offset, u32 val)
{
  #line 310 
  b43legacy_phy_write(dev,(unsigned short)1138,(unsigned short)((int)offset));
  #line 311 
  b43legacy_phy_write(dev,(unsigned short)1140,(unsigned short)((int)((unsigned short)(val >> 16))));
  #line 313 
  b43legacy_phy_write(dev,(unsigned short)1139,(unsigned short)((int)((unsigned short)val)));
  #line 314 
  return;
}

#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/ilt.c"
u16 b43legacy_ilt_read(struct b43legacy_wldev *dev, u16 offset)
{
  #line 319 
  b43legacy_phy_write(dev,(unsigned short)1138,(unsigned short)((int)offset));
  #line 320 
  return b43legacy_phy_read(dev,(unsigned short)1139);
}

#line 56  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 1864  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_set_txpower_a(struct b43legacy_wldev *dev, u16 txpower);
#line 65  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 1784  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_set_txantenna(struct b43legacy_wldev *dev, u32 val);
#line 69  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u8 b43legacy_radio_aci_detect(struct b43legacy_wldev *dev, u8 channel);
#line 70  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u8 b43legacy_radio_aci_scan(struct b43legacy_wldev *dev);
#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
s16 b43legacy_nrssi_hw_read(struct b43legacy_wldev *dev, u16 offset);
#line 80  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_nrssi_mem_update(struct b43legacy_wldev *dev);
#line 82  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.h"
#line 1366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_radio_calibrationvalue(struct b43legacy_wldev *dev);
#line 29  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 rcc_table[16U] = {(unsigned short)2U, (unsigned short)3U, (unsigned short)1U, (unsigned short)15U, (unsigned short)6U, (unsigned short)7U, (unsigned short)5U, (unsigned short)15U, (unsigned short)10U, (unsigned short)11U, (unsigned short)9U, (unsigned short)15U, (unsigned short)14U, (unsigned short)15U, (unsigned short)13U, (unsigned short)15U};
#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 flip_4bit(u16 value)
{
  #line 41 
  u16 flipped = (unsigned short)0U;
  #line 43 
  if ((long)(((int)value & -16) != 0) != 0L) {
    #line 43 
    printk((char *)"\001",(char *)"!((value & ~0x000F) == 0x0000)");
    #line 43 
    if ((long)(((int)value & -16) != 0) != 0L) {
      #line 44 
      ldv_inline_asm();
      #line 45 
      ldv_inline_asm();
      #line 46 
      ldv_inline_asm();
      #line 43 
      ;
    }
  }
  #line 45 
  flipped = (unsigned short)((((int)value << 3) & 8) | (int)flipped);
  #line 46 
  flipped = (unsigned short)((((int)value << 1) & 4) | (int)flipped);
  #line 47 
  flipped = (unsigned short)((((int)value >> 1) & 2) | (int)flipped);
  #line 48 
  flipped = (unsigned short)((((int)value >> 3) & 1) | (int)flipped);
  #line 50 
  return flipped;
}

#line 55  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
__inline static u16 channel2freq_bg(u8 channel)
{
  #line 60 
  u16 frequencies_bg[14U] = {(unsigned short)12U, (unsigned short)17U, (unsigned short)22U, (unsigned short)27U, (unsigned short)32U, (unsigned short)37U, (unsigned short)42U, (unsigned short)47U, (unsigned short)52U, (unsigned short)57U, (unsigned short)62U, (unsigned short)67U, (unsigned short)72U, (unsigned short)84U};
  #line 67 
  if ((long)((unsigned int)channel + 255U > 13U) != 0L) {
    #line 68 
    printk((char *)"\001",(int)channel);
    #line 70 
    dump_stack();
    #line 71 
    return (unsigned short)2412U;
  }
  #line 74 
  return frequencies_bg[(int)channel + -1];
}

#line 77  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_lock(struct b43legacy_wldev *dev)
{
  #line 79 
  u32 status;
  #line 81 
  status = b43legacy_read32(dev,(unsigned short)288);
  {
    #line 82 
    int __ret_warn_on = (status & 524288U) != 0U;
    #line 82 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 83 
      ldv_inline_asm();
      #line 84 
      ldv_inline_asm();
    }
    #line 82 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 83 
  status |= 524288U;
  #line 84 
  b43legacy_write32(dev,(unsigned short)288,status);
  #line 85 
  __const_udelay(42950UL);
  #line 87 
  return;
}

#line 88  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_unlock(struct b43legacy_wldev *dev)
{
  #line 90 
  u32 status;
  #line 92 
  b43legacy_read16(dev,(unsigned short)992);
  #line 93 
  status = b43legacy_read32(dev,(unsigned short)288);
  {
    #line 94 
    int __ret_warn_on = (status & 524288U) == 0U;
    #line 94 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 95 
      ldv_inline_asm();
      #line 96 
      ldv_inline_asm();
    }
    #line 94 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 95 
  status &= 4294443007U;
  #line 96 
  b43legacy_write32(dev,(unsigned short)288,status);
  #line 97 
  return;
}

#line 99  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_radio_read16(struct b43legacy_wldev *dev, u16 offset)
{
  #line 101 
  struct b43legacy_phy *phy = & dev->phy;
  #line 103 
  switch ((int)phy->type) {
    #line 104 
    case 1: 
            #line 104 
    ;
    #line 105 
    if ((unsigned int)phy->radio_ver == 8275U) {
      #line 106 
      if ((unsigned int)offset <= 111U) 
                                        #line 107 
                                        offset = (unsigned short)((unsigned int)offset + 128U);
      else 
        #line 108 
        if ((unsigned int)offset <= 127U) 
                                          #line 109 
                                          offset = (unsigned short)((unsigned int)offset + 112U);
    }
    else 
      #line 110 
      if ((unsigned int)phy->radio_ver == 8272U) 
                                                 #line 111 
                                                 offset = (unsigned short)((unsigned int)offset | 128U);
      else {
        #line 113 
        int __ret_warn_on = 1;
        #line 113 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 114 
          ldv_inline_asm();
          #line 115 
          ldv_inline_asm();
        }
        #line 113 
        long tmp = (long)(__ret_warn_on != 0);
      }
    #line 114 
    break;
    #line 115 
    case 2: 
            #line 115 
    ;
    #line 116 
    offset = (unsigned short)((unsigned int)offset | 128U);
    #line 117 
    break;
    #line 118 
    default: 
             #line 118 
    ;
    #line 119 
    printk((char *)"\001",(char *)"1");
    #line 120 
    ldv_inline_asm();
    #line 121 
    ldv_inline_asm();
    #line 122 
    ldv_inline_asm();
    #line 119 
    ;
  }
  #line 122 
  b43legacy_write16(dev,(unsigned short)1014,(unsigned short)((int)offset));
  #line 123 
  return b43legacy_read16(dev,(unsigned short)1018);
}

#line 126  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_write16(struct b43legacy_wldev *dev, u16 offset, u16 val)
{
  #line 128 
  b43legacy_write16(dev,(unsigned short)1014,(unsigned short)((int)offset));
  #line 129 
  b43legacy_write16(dev,(unsigned short)1018,(unsigned short)((int)val));
  #line 130 
  return;
}

#line 132  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void b43legacy_set_all_gains(struct b43legacy_wldev *dev, s16 first, s16 second, s16 third)
{
  #line 136 
  u16 i;
  #line 140 
  u16 tmp;
  #line 135 
  struct b43legacy_phy *phy = & dev->phy;
  #line 137 
  u16 start = (unsigned short)8U;
  #line 138 
  u16 end = (unsigned short)24U;
  #line 139 
  u16 offset = (unsigned short)1024U;
  #line 142 
  if ((unsigned int)phy->rev <= 1U) {
    #line 143 
    offset = (unsigned short)20480U;
    #line 144 
    start = (unsigned short)16U;
    #line 145 
    end = (unsigned short)32U;
  }
  #line 148 
  i = (unsigned short)0U;
  #line 148 
  while ((unsigned int)i <= 3U) {
    #line 149 
    b43legacy_ilt_write(dev,(unsigned short)((int)offset + (int)i),(unsigned short)((int)((unsigned short)first)));
    #line 148 
    i = (u16)((int)i + 1);
  }
  #line 151 
  i = start;
  #line 151 
  while ((int)i < (int)end) {
    #line 152 
    b43legacy_ilt_write(dev,(unsigned short)((int)offset + (int)i),(unsigned short)((int)((unsigned short)second)));
    #line 151 
    i = (u16)((int)i + 1);
  }
  #line 154 
  if ((int)third != -1) {
    #line 155 
    tmp = (unsigned short)(((int)((unsigned short)third) << 14) | ((int)((unsigned short)third) << 6));
    #line 156 
    ;
    #line 156 
    ;
    #line 156 
    b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1184) & -16449) | (int)tmp))));
    #line 159 
    ;
    #line 159 
    ;
    #line 159 
    b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1185) & -16449) | (int)tmp))));
    #line 162 
    ;
    #line 162 
    ;
    #line 162 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -16449) | (int)tmp))));
  }
  #line 166 
  b43legacy_dummy_transmission(dev);
  #line 167 
  return;
}

#line 169  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void b43legacy_set_original_gains(struct b43legacy_wldev *dev)
{
  #line 172 
  u16 i;
  #line 173 
  u16 tmp;
  #line 171 
  struct b43legacy_phy *phy = & dev->phy;
  #line 174 
  u16 offset = (unsigned short)1024U;
  #line 175 
  u16 start = (unsigned short)8U;
  #line 176 
  u16 end = (unsigned short)24U;
  #line 178 
  if ((unsigned int)phy->rev <= 1U) {
    #line 179 
    offset = (unsigned short)20480U;
    #line 180 
    start = (unsigned short)16U;
    #line 181 
    end = (unsigned short)32U;
  }
  #line 184 
  i = (unsigned short)0U;
  #line 184 
  while ((unsigned int)i <= 3U) {
    #line 185 
    tmp = (unsigned short)((unsigned int)i & 65532U);
    #line 186 
    tmp = (unsigned short)((((int)i << 1) & 2) | (int)tmp);
    #line 187 
    tmp = (unsigned short)((((int)i >> 1) & 1) | (int)tmp);
    #line 189 
    b43legacy_ilt_write(dev,(unsigned short)((int)offset + (int)i),(unsigned short)((int)tmp));
    #line 184 
    i = (u16)((int)i + 1);
  }
  #line 192 
  i = start;
  #line 192 
  while ((int)i < (int)end) {
    #line 193 
    b43legacy_ilt_write(dev,(unsigned short)((int)offset + (int)i),(unsigned short)((int)i - (int)start));
    #line 192 
    i = (u16)((int)i + 1);
  }
  #line 195 
  ;
  #line 195 
  b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1184) | 16448U)));
  #line 198 
  ;
  #line 198 
  b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1185) | 16448U)));
  #line 201 
  ;
  #line 201 
  b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -16449) | 16384))));
  #line 204 
  b43legacy_dummy_transmission(dev);
  #line 205 
  return;
}

#line 208  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void b43legacy_synth_pu_workaround(struct b43legacy_wldev *dev, u8 channel)
{
  #line 211 
  struct b43legacy_phy *phy = & dev->phy;
  #line 213 
  __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c",213,0);
  #line 215 
  if ((unsigned int)phy->radio_ver != 8272U || (unsigned int)phy->radio_rev > 5U) 
    #line 217 
    return;
  #line 219 
  if ((unsigned int)channel <= 10U) {
    #line 220 
    ;
    #line 220 
    b43legacy_write16(dev,(unsigned short)1008,(unsigned short)((int)channel2freq_bg((unsigned char)((int)((unsigned int)channel + 4U)))));
  }
  else {
    #line 223 
    ;
    #line 223 
    b43legacy_write16(dev,(unsigned short)1008,(unsigned short)((int)channel2freq_bg((unsigned char)((int)channel))));
  }
  #line 225 
  msleep(1U);
  #line 226 
  ;
  #line 226 
  b43legacy_write16(dev,(unsigned short)1008,(unsigned short)((int)channel2freq_bg((unsigned char)((int)channel))));
  #line 228 
  return;
}

#line 230  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u8 b43legacy_radio_aci_detect(struct b43legacy_wldev *dev, u8 channel)
{
  #line 234 
  u16 saved;
  #line 235 
  u16 rssi;
  #line 236 
  u16 temp;
  #line 237 
  int i;
  #line 232 
  struct b43legacy_phy *phy = & dev->phy;
  #line 233 
  u8 ret = (unsigned char)0U;
  #line 238 
  int j = 0;
  #line 240 
  saved = b43legacy_phy_read(dev,(unsigned short)1027);
  #line 241 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)channel),0);
  #line 242 
  b43legacy_phy_write(dev,(unsigned short)1027,(unsigned short)((int)((unsigned short)(((int)saved & -8) | 5))));
  #line 243 
  if ((int)phy->aci_hw_rssi != 0) {
    #line 244 
    rssi = (unsigned short)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1162) & 63U);
  }
  else 
       #line 246 
       rssi = (unsigned short)((unsigned int)saved & 63U);
  #line 248 
  if ((unsigned int)rssi > 32U) 
                                #line 249 
                                rssi = (unsigned short)((unsigned int)rssi + 65472U);
  #line 250 
  i = 0;
  #line 250 
  while (i <= 99) {
    {
      #line 251 
      temp = (unsigned short)((unsigned int)((unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63U);
      #line 252 
      if ((unsigned int)temp > 32U) 
                                    #line 253 
                                    temp = (unsigned short)((unsigned int)temp + 65472U);
      #line 254 
      if ((int)temp < (int)rssi) 
                                 #line 255 
                                 j ++;
      #line 256 
      if (j > 19) 
                  #line 257 
                  ret = (unsigned char)1U;
    }
    #line 250 
    i ++;
  }
  #line 259 
  b43legacy_phy_write(dev,(unsigned short)1027,(unsigned short)((int)saved));
  #line 261 
  return ret;
}

#line 264  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u8 b43legacy_radio_aci_scan(struct b43legacy_wldev *dev)
{
  #line 269 
  unsigned int i;
  #line 270 
  unsigned int j;
  #line 271 
  unsigned int start;
  #line 272 
  unsigned int end;
  #line 266 
  struct b43legacy_phy *phy = & dev->phy;
  #line 267 
  u8 ret[13U] = {(unsigned char)0U};
  #line 268 
  unsigned int channel = (unsigned int)phy->channel;
  #line 274 
  if ((unsigned int)phy->type != 2U || (unsigned int)phy->rev == 0U) 
    #line 275 
    return (unsigned char)0U;
  #line 277 
  b43legacy_phy_lock(dev);
  #line 278 
  b43legacy_radio_lock(dev);
  #line 279 
  ;
  #line 279 
  b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2050) & 65532));
  #line 281 
  ;
  #line 281 
  b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 32767));
  #line 284 
  b43legacy_set_all_gains(dev,(short)3,(short)8,(short)1);
  #line 286 
  if (channel != 5U) 
                     #line 286 
                     start = channel + 4294967291U; else 
                                                         #line 286 
                                                         start = 1U;
  #line 287 
  if (13U < channel + 5U) 
                          #line 287 
                          end = 13U; else 
                                          #line 287 
                                          end = channel + 5U;
  #line 289 
  i = start;
  #line 289 
  while (i <= end) {
    #line 290 
    int __x;
    #line 290 
    int tmp_1;
    #line 290 
    __x = (int)(channel - i);
    #line 290 
    if (__x < 0) 
                 #line 290 
                 tmp_1 = - __x; else 
                                     #line 290 
                                     tmp_1 = __x;
    #line 290 
    if (tmp_1 > 2) 
                   #line 291 
                   ret[i + 4294967295U] = b43legacy_radio_aci_detect(dev,(unsigned char)((int)((unsigned char)i)));
    #line 289 
    i ++;
  }
  #line 293 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)((unsigned char)channel)),0);
  #line 294 
  ;
  #line 294 
  b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2050) | 3U)));
  #line 297 
  ;
  #line 297 
  b43legacy_phy_write(dev,(unsigned short)1027,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1027) & 65528));
  #line 299 
  ;
  #line 299 
  b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1065) | 32768U)));
  #line 302 
  b43legacy_set_original_gains(dev);
  #line 303 
  i = 0U;
  #line 303 
  while (i <= 12U) {
    #line 304 
    if ((unsigned int)ret[i] == 0U) 
                                    #line 305 
                                    goto __Cont;
    #line 306 
    if (13U < i + 5U) 
                      #line 306 
                      end = 13U; else 
                                      #line 306 
                                      end = i + 5U;
    #line 307 
    j = i;
    #line 307 
    while (j < end) {
      #line 308 
      ret[j] = (unsigned char)1U;
      #line 307 
      j ++;
    }
    #line 303 
    __Cont: 
            #line 303 
    i ++;
  }
  #line 310 
  b43legacy_radio_unlock(dev);
  #line 311 
  b43legacy_phy_unlock(dev);
  #line 313 
  return ret[channel + 4294967295U];
}

#line 317  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_nrssi_hw_write(struct b43legacy_wldev *dev, u16 offset, s16 val)
{
  #line 319 
  b43legacy_phy_write(dev,(unsigned short)2051,(unsigned short)((int)offset));
  #line 320 
  b43legacy_phy_write(dev,(unsigned short)2052,(unsigned short)((int)((unsigned short)val)));
  #line 321 
  return;
}

#line 324  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
s16 b43legacy_nrssi_hw_read(struct b43legacy_wldev *dev, u16 offset)
{
  #line 326 
  u16 val;
  #line 328 
  b43legacy_phy_write(dev,(unsigned short)2051,(unsigned short)((int)offset));
  #line 329 
  val = b43legacy_phy_read(dev,(unsigned short)2052);
  #line 331 
  return (short)val;
}

#line 335  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_nrssi_hw_update(struct b43legacy_wldev *dev, u16 val)
{
  #line 337 
  u16 i;
  #line 338 
  s16 tmp;
  #line 340 
  i = (unsigned short)0U;
  #line 340 
  while ((unsigned int)i <= 63U) {
    {
      #line 343 
      short __UNIQUE_ID___x561;
      #line 343 
      int tmp_2;
      #line 341 
      tmp = b43legacy_nrssi_hw_read(dev,(unsigned short)((int)i));
      #line 342 
      tmp = (short)((int)tmp - (int)val);
      {
        #line 343 
        short __UNIQUE_ID___x559;
        #line 343 
        int tmp_0;
        {
          #line 343 
          __UNIQUE_ID___x559 = tmp;
          #line 343 
          short __UNIQUE_ID___y560 = (short)(-32);
          #line 343 
          if ((int)__UNIQUE_ID___x559 > (int)__UNIQUE_ID___y560) 
                                                                 #line 343 
                                                                 tmp_0 = (int)__UNIQUE_ID___x559; else 
                                                                    #line 343 
                                                                    tmp_0 = (int)__UNIQUE_ID___y560;
          }
        #line 343 
        __UNIQUE_ID___x561 = (short)tmp_0;
        #line 343 
        short __UNIQUE_ID___y562 = (short)31;
        #line 343 
        if ((int)__UNIQUE_ID___x561 < (int)__UNIQUE_ID___y562) 
                                                               #line 343 
                                                               tmp_2 = (int)__UNIQUE_ID___x561; else 
                                                                    #line 343 
                                                                    tmp_2 = (int)__UNIQUE_ID___y562;
        }
      #line 343 
      tmp = (short)tmp_2;
      #line 344 
      b43legacy_nrssi_hw_write(dev,(unsigned short)((int)i),(short)((int)tmp));
    }
    #line 340 
    i = (u16)((int)i + 1);
  }
  #line 346 
  return;
}

#line 349  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_nrssi_mem_update(struct b43legacy_wldev *dev)
{
  #line 352 
  s16 i;
  #line 353 
  s16 delta;
  #line 354 
  s32 tmp;
  #line 351 
  struct b43legacy_phy *phy = & dev->phy;
  #line 356 
  delta = (short)(31U - (unsigned int)phy->nrssi[0]);
  #line 357 
  i = (short)0;
  #line 357 
  while ((int)i <= 63) {
    {
      #line 361 
      int __UNIQUE_ID___x565;
      #line 361 
      int tmp_2;
      #line 358 
      tmp = ((int)i - (int)delta) * phy->nrssislope;
      #line 359 
      tmp /= 65536;
      #line 360 
      tmp += 58;
      {
        #line 361 
        int __UNIQUE_ID___x563;
        #line 361 
        int tmp_0;
        {
          #line 361 
          __UNIQUE_ID___x563 = tmp;
          #line 361 
          int __UNIQUE_ID___y564 = 0;
          #line 361 
          if (__UNIQUE_ID___x563 > __UNIQUE_ID___y564) 
                                                       #line 361 
                                                       tmp_0 = __UNIQUE_ID___x563; else 
                                                                    #line 361 
                                                                    tmp_0 = __UNIQUE_ID___y564;
          }
        #line 361 
        __UNIQUE_ID___x565 = tmp_0;
        #line 361 
        int __UNIQUE_ID___y566 = 63;
        #line 361 
        if (__UNIQUE_ID___x565 < __UNIQUE_ID___y566) 
                                                     #line 361 
                                                     tmp_2 = __UNIQUE_ID___x565; else 
                                                                    #line 361 
                                                                    tmp_2 = __UNIQUE_ID___y566;
        }
      #line 361 
      tmp = tmp_2;
      #line 362 
      phy->nrssi_lt[(int)i] = (signed char)tmp;
    }
    #line 357 
    i = (s16)((int)i + 1);
  }
  #line 364 
  return;
}

#line 366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void b43legacy_calc_nrssi_offset(struct b43legacy_wldev *dev)
{
  #line 370 
  s16 v47F;
  #line 371 
  u16 i;
  #line 368 
  struct b43legacy_phy *phy = & dev->phy;
  #line 369 
  u16 backup[20U] = {(unsigned short)0U};
  #line 372 
  u16 saved = (unsigned short)65535U;
  #line 374 
  backup[0] = b43legacy_phy_read(dev,(unsigned short)1);
  #line 375 
  backup[1] = b43legacy_phy_read(dev,(unsigned short)2065);
  #line 376 
  backup[2] = b43legacy_phy_read(dev,(unsigned short)2066);
  #line 377 
  backup[3] = b43legacy_phy_read(dev,(unsigned short)2068);
  #line 378 
  backup[4] = b43legacy_phy_read(dev,(unsigned short)2069);
  #line 379 
  backup[5] = b43legacy_phy_read(dev,(unsigned short)90);
  #line 380 
  backup[6] = b43legacy_phy_read(dev,(unsigned short)89);
  #line 381 
  backup[7] = b43legacy_phy_read(dev,(unsigned short)88);
  #line 382 
  backup[8] = b43legacy_phy_read(dev,(unsigned short)10);
  #line 383 
  backup[9] = b43legacy_phy_read(dev,(unsigned short)3);
  #line 384 
  backup[10] = b43legacy_radio_read16(dev,(unsigned short)122);
  #line 385 
  backup[11] = b43legacy_radio_read16(dev,(unsigned short)67);
  #line 387 
  ;
  #line 387 
  b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 32767));
  #line 389 
  ;
  #line 389 
  b43legacy_phy_write(dev,(unsigned short)1,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1) & 16383) | 16384))));
  #line 392 
  ;
  #line 392 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 12U)));
  #line 394 
  ;
  #line 394 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2066) & -13) | 4))));
  #line 397 
  ;
  #line 397 
  b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2050) & 65532));
  #line 399 
  if ((unsigned int)phy->rev > 5U) {
    #line 400 
    backup[12] = b43legacy_phy_read(dev,(unsigned short)46);
    #line 401 
    backup[13] = b43legacy_phy_read(dev,(unsigned short)47);
    #line 402 
    backup[14] = b43legacy_phy_read(dev,(unsigned short)2063);
    #line 403 
    backup[15] = b43legacy_phy_read(dev,(unsigned short)2064);
    #line 404 
    backup[16] = b43legacy_phy_read(dev,(unsigned short)2049);
    #line 405 
    backup[17] = b43legacy_phy_read(dev,(unsigned short)96);
    #line 406 
    backup[18] = b43legacy_phy_read(dev,(unsigned short)20);
    #line 407 
    backup[19] = b43legacy_phy_read(dev,(unsigned short)1144);
    #line 409 
    b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)0);
    #line 410 
    b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)0);
    #line 411 
    b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)0);
    #line 412 
    b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)0);
    #line 413 
    ;
    #line 413 
    b43legacy_phy_write(dev,(unsigned short)1144,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1144) | 256U)));
    #line 415 
    ;
    #line 415 
    b43legacy_phy_write(dev,(unsigned short)2049,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2049) | 64U)));
    #line 417 
    ;
    #line 417 
    b43legacy_phy_write(dev,(unsigned short)96,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)96) | 64U)));
    #line 419 
    ;
    #line 419 
    b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)20) | 512U)));
  }
  #line 422 
  ;
  #line 422 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 112U)));
  #line 424 
  ;
  #line 424 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 128U)));
  #line 426 
  __const_udelay(128850UL);
  #line 428 
  v47F = (short)((int)((short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63);
  #line 429 
  if ((int)v47F > 31) 
                      #line 430 
                      v47F = (short)((unsigned int)v47F + 65472U);
  #line 431 
  if ((int)v47F == 31) {
    #line 432 
    i = (unsigned short)7U;
    #line 432 
    while ((unsigned int)i > 3U) {
      {
        #line 433 
        b43legacy_radio_write16(dev,(unsigned short)123,(unsigned short)((int)i));
        #line 434 
        __const_udelay(85900UL);
        #line 435 
        v47F = (short)((int)((short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63);
        #line 437 
        if ((int)v47F > 31) 
                            #line 438 
                            v47F = (short)((unsigned int)v47F + 65472U);
        #line 439 
        if ((int)v47F <= 30 && (unsigned int)saved == 65535U) 
                                                              #line 440 
                                                              saved = i;
      }
      #line 432 
      i = (u16)((int)i - 1);
    }
    #line 442 
    if ((unsigned int)saved == 65535U) 
                                       #line 443 
                                       saved = (unsigned short)4U;
  }
  else {
    #line 445 
    ;
    #line 445 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)122) & 127));
    #line 448 
    ;
    #line 448 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2068) | 1U)));
    #line 450 
    ;
    #line 450 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2069) & 65534));
    #line 452 
    ;
    #line 452 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 12U)));
    #line 454 
    ;
    #line 454 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2066) | 12U)));
    #line 456 
    ;
    #line 456 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 48U)));
    #line 458 
    ;
    #line 458 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2066) | 48U)));
    #line 460 
    b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)1152);
    #line 461 
    b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)2064);
    #line 462 
    b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)13);
    #line 463 
    if ((unsigned int)phy->analog == 0U) 
                                         #line 464 
                                         b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)290);
    else {
      #line 466 
      ;
      #line 466 
      b43legacy_phy_write(dev,(unsigned short)10,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)10) | 8192U)));
    }
    #line 469 
    ;
    #line 469 
    b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2068) | 4U)));
    #line 471 
    ;
    #line 471 
    b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2069) & 65531));
    #line 473 
    ;
    #line 473 
    b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)3) & -97) | 64))));
    #line 476 
    ;
    #line 476 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 15U)));
    #line 479 
    b43legacy_set_all_gains(dev,(short)3,(short)0,(short)1);
    #line 480 
    ;
    #line 480 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)67) & 255) | 15))));
    #line 483 
    __const_udelay(128850UL);
    #line 484 
    v47F = (short)((int)((short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63);
    #line 485 
    if ((int)v47F > 31) 
                        #line 486 
                        v47F = (short)((unsigned int)v47F + 65472U);
    #line 487 
    if ((int)v47F == -32) {
      #line 488 
      i = (unsigned short)0U;
      #line 488 
      while ((unsigned int)i <= 3U) {
        {
          #line 489 
          b43legacy_radio_write16(dev,(unsigned short)123,(unsigned short)((int)i));
          #line 490 
          __const_udelay(85900UL);
          #line 491 
          v47F = (short)((int)((short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63);
          #line 493 
          if ((int)v47F > 31) 
                              #line 494 
                              v47F = (short)((unsigned int)v47F + 65472U);
          #line 495 
          if ((int)v47F >= -30 && (unsigned int)saved == 65535U) 
                                                                 #line 496 
                                                                 saved = i;
        }
        #line 488 
        i = (u16)((int)i + 1);
      }
      #line 498 
      if ((unsigned int)saved == 65535U) 
                                         #line 499 
                                         saved = (unsigned short)3U;
    }
    else 
         #line 501 
         saved = (unsigned short)0U;
  }
  #line 503 
  b43legacy_radio_write16(dev,(unsigned short)123,(unsigned short)((int)saved));
  #line 505 
  if ((unsigned int)phy->rev > 5U) {
    #line 506 
    b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)((int)backup[12]));
    #line 507 
    b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)((int)backup[13]));
    #line 508 
    b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)((int)backup[14]));
    #line 509 
    b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)((int)backup[15]));
  }
  #line 511 
  b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)backup[3]));
  #line 512 
  b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)backup[4]));
  #line 513 
  b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)((int)backup[5]));
  #line 514 
  b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)((int)backup[6]));
  #line 515 
  b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)((int)backup[7]));
  #line 516 
  b43legacy_phy_write(dev,(unsigned short)10,(unsigned short)((int)backup[8]));
  #line 517 
  b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)backup[9]));
  #line 518 
  b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)backup[11]));
  #line 519 
  b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)backup[10]));
  #line 520 
  ;
  #line 520 
  b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2050) | 3U)));
  #line 522 
  ;
  #line 522 
  b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1065) | 32768U)));
  #line 524 
  b43legacy_set_original_gains(dev);
  #line 525 
  if ((unsigned int)phy->rev > 5U) {
    #line 526 
    b43legacy_phy_write(dev,(unsigned short)2049,(unsigned short)((int)backup[16]));
    #line 527 
    b43legacy_phy_write(dev,(unsigned short)96,(unsigned short)((int)backup[17]));
    #line 528 
    b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)((int)backup[18]));
    #line 529 
    b43legacy_phy_write(dev,(unsigned short)1144,(unsigned short)((int)backup[19]));
  }
  #line 531 
  b43legacy_phy_write(dev,(unsigned short)1,(unsigned short)((int)backup[0]));
  #line 532 
  b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)backup[2]));
  #line 533 
  b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)backup[1]));
  #line 534 
  return;
}

#line 536  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_calc_nrssi_slope(struct b43legacy_wldev *dev)
{
  #line 540 
  u16 tmp;
  #line 541 
  s16 nrssi0;
  #line 542 
  s16 nrssi1;
  #line 538 
  struct b43legacy_phy *phy = & dev->phy;
  #line 539 
  u16 backup[18U] = {(unsigned short)0U};
  #line 544 
  switch ((int)phy->type) {
    #line 562 
    int tmp_0;
    #line 545 
    case 1: 
            #line 545 
    ;
    #line 546 
    backup[0] = b43legacy_radio_read16(dev,(unsigned short)122);
    #line 547 
    backup[1] = b43legacy_radio_read16(dev,(unsigned short)82);
    #line 548 
    backup[2] = b43legacy_radio_read16(dev,(unsigned short)67);
    #line 549 
    backup[3] = b43legacy_phy_read(dev,(unsigned short)48);
    #line 550 
    backup[4] = b43legacy_phy_read(dev,(unsigned short)38);
    #line 551 
    backup[5] = b43legacy_phy_read(dev,(unsigned short)21);
    #line 552 
    backup[6] = b43legacy_phy_read(dev,(unsigned short)42);
    #line 553 
    backup[7] = b43legacy_phy_read(dev,(unsigned short)32);
    #line 554 
    backup[8] = b43legacy_phy_read(dev,(unsigned short)90);
    #line 555 
    backup[9] = b43legacy_phy_read(dev,(unsigned short)89);
    #line 556 
    backup[10] = b43legacy_phy_read(dev,(unsigned short)88);
    #line 557 
    backup[11] = b43legacy_read16(dev,(unsigned short)994);
    #line 558 
    backup[12] = b43legacy_read16(dev,(unsigned short)998);
    #line 559 
    backup[13] = b43legacy_read16(dev,(unsigned short)1012);
    #line 561 
    tmp = b43legacy_radio_read16(dev,(unsigned short)122);
    #line 562 
    if ((unsigned int)phy->rev > 4U) 
                                     #line 562 
                                     tmp_0 = 127; else 
                                                       #line 562 
                                                       tmp_0 = 15;
    #line 562 
    tmp = (unsigned short)(tmp_0 & (int)tmp);
    #line 563 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)tmp));
    #line 564 
    b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)255);
    #line 565 
    b43legacy_write16(dev,(unsigned short)1004,(unsigned short)32639);
    #line 566 
    b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)0);
    #line 567 
    ;
    #line 567 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)21) | 32U)));
    #line 569 
    b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)2211);
    #line 570 
    ;
    #line 570 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 128U)));
    #line 574 
    nrssi0 = (short)b43legacy_phy_read(dev,(unsigned short)39);
    #line 575 
    ;
    #line 575 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)122) & 127));
    #line 578 
    if ((unsigned int)phy->analog > 1U) 
                                        #line 579 
                                        b43legacy_write16(dev,(unsigned short)998,(unsigned short)64);
    else 
      #line 580 
      if ((unsigned int)phy->analog == 0U) 
                                           #line 581 
                                           b43legacy_write16(dev,(unsigned short)998,(unsigned short)290);
      else {
        #line 583 
        ;
        #line 583 
        b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)b43legacy_read16(dev,(unsigned short)1012) & 8192));
      }
    #line 586 
    b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)16191);
    #line 587 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)62256);
    #line 588 
    b43legacy_radio_write16(dev,(unsigned short)90,(unsigned short)96);
    #line 589 
    ;
    #line 589 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)67) & 240));
    #line 592 
    b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)1152);
    #line 593 
    b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)2064);
    #line 594 
    b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)13);
    #line 595 
    __const_udelay(85900UL);
    #line 597 
    nrssi1 = (short)b43legacy_phy_read(dev,(unsigned short)39);
    #line 598 
    b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)((int)backup[3]));
    #line 599 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)backup[0]));
    #line 600 
    b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)backup[11]));
    #line 601 
    b43legacy_phy_write(dev,(unsigned short)38,(unsigned short)((int)backup[4]));
    #line 602 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)backup[5]));
    #line 603 
    b43legacy_phy_write(dev,(unsigned short)42,(unsigned short)((int)backup[6]));
    #line 604 
    b43legacy_synth_pu_workaround(dev,(unsigned char)((int)phy->channel));
    #line 605 
    if ((unsigned int)phy->analog != 0U) 
                                         #line 606 
                                         b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)backup[13]));
    #line 608 
    b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)((int)backup[7]));
    #line 609 
    b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)((int)backup[8]));
    #line 610 
    b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)((int)backup[9]));
    #line 611 
    b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)((int)backup[10]));
    #line 612 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)backup[1]));
    #line 613 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)backup[2]));
    #line 615 
    if ((int)nrssi0 == (int)nrssi1) 
                                    #line 616 
                                    phy->nrssislope = 65536; else 
                                                                  #line 618 
                                                                  phy->nrssislope = 4194304 / ((int)nrssi0 - (int)nrssi1);
    #line 620 
    if ((int)nrssi0 < -3) {
      #line 621 
      phy->nrssi[0] = nrssi0;
      #line 622 
      phy->nrssi[1] = nrssi1;
    }
    #line 624 
    break;
    #line 625 
    case 2: 
            #line 625 
    ;
    #line 626 
    if ((unsigned int)phy->radio_rev > 8U) 
                                           #line 627 
                                           return;
    #line 628 
    if ((unsigned int)phy->radio_rev == 8U) 
                                            #line 629 
                                            b43legacy_calc_nrssi_offset(dev);
    #line 631 
    ;
    #line 631 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 32767));
    #line 634 
    ;
    #line 634 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2050) & 65532));
    #line 636 
    backup[7] = b43legacy_read16(dev,(unsigned short)994);
    #line 637 
    ;
    #line 637 
    b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)994) | 32768U)));
    #line 639 
    backup[0] = b43legacy_radio_read16(dev,(unsigned short)122);
    #line 640 
    backup[1] = b43legacy_radio_read16(dev,(unsigned short)82);
    #line 641 
    backup[2] = b43legacy_radio_read16(dev,(unsigned short)67);
    #line 642 
    backup[3] = b43legacy_phy_read(dev,(unsigned short)21);
    #line 643 
    backup[4] = b43legacy_phy_read(dev,(unsigned short)90);
    #line 644 
    backup[5] = b43legacy_phy_read(dev,(unsigned short)89);
    #line 645 
    backup[6] = b43legacy_phy_read(dev,(unsigned short)88);
    #line 646 
    backup[8] = b43legacy_read16(dev,(unsigned short)998);
    #line 647 
    backup[9] = b43legacy_read16(dev,(unsigned short)1012);
    #line 648 
    if ((unsigned int)phy->rev > 2U) {
      #line 649 
      backup[10] = b43legacy_phy_read(dev,(unsigned short)46);
      #line 650 
      backup[11] = b43legacy_phy_read(dev,(unsigned short)47);
      #line 651 
      backup[12] = b43legacy_phy_read(dev,(unsigned short)2063);
      #line 652 
      backup[13] = b43legacy_phy_read(dev,(unsigned short)2064);
      #line 654 
      backup[14] = b43legacy_phy_read(dev,(unsigned short)2049);
      #line 655 
      backup[15] = b43legacy_phy_read(dev,(unsigned short)96);
      #line 656 
      backup[16] = b43legacy_phy_read(dev,(unsigned short)20);
      #line 657 
      backup[17] = b43legacy_phy_read(dev,(unsigned short)1144);
      #line 658 
      b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)0);
      #line 659 
      b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)0);
      #line 660 
      switch ((int)phy->rev) {
        #line 661 
        case 4: 
                #line 661 
        ;
        #line 661 
        case 6: 
                #line 661 
        ;
        #line 661 
        case 7: 
                #line 661 
        ;
        #line 662 
        ;
        #line 662 
        b43legacy_phy_write(dev,(unsigned short)1144,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1144) | 256U)));
        #line 665 
        ;
        #line 665 
        b43legacy_phy_write(dev,(unsigned short)2049,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2049) | 64U)));
        #line 668 
        break;
        #line 669 
        case 3: 
                #line 669 
        ;
        #line 669 
        case 5: 
                #line 669 
        ;
        #line 670 
        ;
        #line 670 
        b43legacy_phy_write(dev,(unsigned short)2049,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2049) & 65471));
        #line 673 
        break;
      }
      #line 675 
      ;
      #line 675 
      b43legacy_phy_write(dev,(unsigned short)96,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)96) | 64U)));
      #line 678 
      ;
      #line 678 
      b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)20) | 512U)));
    }
    #line 682 
    ;
    #line 682 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 112U)));
    #line 685 
    b43legacy_set_all_gains(dev,(short)0,(short)8,(short)0);
    #line 686 
    ;
    #line 686 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)122) & 247));
    #line 689 
    if ((unsigned int)phy->rev > 1U) {
      #line 690 
      ;
      #line 690 
      b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2065) | 48U)));
      #line 693 
      ;
      #line 693 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2066) & -49) | 16))));
    }
    #line 697 
    ;
    #line 697 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 128U)));
    #line 700 
    __const_udelay(85900UL);
    #line 702 
    nrssi0 = (short)((int)((short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63);
    #line 703 
    if ((int)nrssi0 > 31) 
                          #line 704 
                          nrssi0 = (short)((unsigned int)nrssi0 + 65472U);
    #line 706 
    ;
    #line 706 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)122) & 127));
    #line 709 
    if ((unsigned int)phy->analog > 1U) {
      #line 710 
      ;
      #line 710 
      b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)3) & -97) | 64))));
    }
    #line 714 
    ;
    #line 714 
    b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)1012) | 8192U)));
    #line 717 
    ;
    #line 717 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)122) | 15U)));
    #line 720 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)62256);
    #line 721 
    if ((unsigned int)phy->rev > 1U) {
      #line 722 
      ;
      #line 722 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2066) & -49) | 32))));
      #line 725 
      ;
      #line 725 
      b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)2065) & -49) | 32))));
    }
    #line 730 
    b43legacy_set_all_gains(dev,(short)3,(short)0,(short)1);
    #line 731 
    if ((unsigned int)phy->radio_rev == 8U) 
                                            #line 732 
                                            b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)31);
    else {
      #line 734 
      tmp = (unsigned short)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)82) & 65295U);
      #line 735 
      b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned int)tmp | 96U)));
      #line 736 
      tmp = (unsigned short)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)67) & 65520U);
      #line 737 
      b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)((unsigned int)tmp | 9U)));
    }
    #line 739 
    b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)1152);
    #line 740 
    b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)2064);
    #line 741 
    b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)13);
    #line 742 
    __const_udelay(85900UL);
    #line 743 
    nrssi1 = (short)((int)((short)((int)b43legacy_phy_read(dev,(unsigned short)1151) >> 8)) & 63);
    #line 744 
    if ((int)nrssi1 > 31) 
                          #line 745 
                          nrssi1 = (short)((unsigned int)nrssi1 + 65472U);
    #line 746 
    if ((int)nrssi0 == (int)nrssi1) 
                                    #line 747 
                                    phy->nrssislope = 65536; else 
                                                                  #line 749 
                                                                  phy->nrssislope = 4194304 / ((int)nrssi0 - (int)nrssi1);
    #line 750 
    if ((int)nrssi0 >= -4) {
      #line 751 
      phy->nrssi[0] = nrssi1;
      #line 752 
      phy->nrssi[1] = nrssi0;
    }
    #line 754 
    if ((unsigned int)phy->rev > 2U) {
      #line 755 
      b43legacy_phy_write(dev,(unsigned short)46,(unsigned short)((int)backup[10]));
      #line 756 
      b43legacy_phy_write(dev,(unsigned short)47,(unsigned short)((int)backup[11]));
      #line 757 
      b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)((int)backup[12]));
      #line 758 
      b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)((int)backup[13]));
    }
    #line 761 
    if ((unsigned int)phy->rev > 1U) {
      #line 762 
      ;
      #line 762 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2066) & 65487));
      #line 765 
      ;
      #line 765 
      b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2065) & 65487));
    }
    #line 770 
    b43legacy_radio_write16(dev,(unsigned short)122,(unsigned short)((int)backup[0]));
    #line 771 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)backup[1]));
    #line 772 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)backup[2]));
    #line 773 
    b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)backup[7]));
    #line 774 
    b43legacy_write16(dev,(unsigned short)998,(unsigned short)((int)backup[8]));
    #line 775 
    b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)backup[9]));
    #line 776 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)backup[3]));
    #line 777 
    b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)((int)backup[4]));
    #line 778 
    b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)((int)backup[5]));
    #line 779 
    b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)((int)backup[6]));
    #line 780 
    b43legacy_synth_pu_workaround(dev,(unsigned char)((int)phy->channel));
    #line 781 
    ;
    #line 781 
    b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2050) | 3U)));
    #line 783 
    b43legacy_set_original_gains(dev);
    #line 784 
    ;
    #line 784 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1065) | 32768U)));
    #line 787 
    if ((unsigned int)phy->rev > 2U) {
      #line 788 
      b43legacy_phy_write(dev,(unsigned short)2049,(unsigned short)((int)backup[14]));
      #line 789 
      b43legacy_phy_write(dev,(unsigned short)96,(unsigned short)((int)backup[15]));
      #line 790 
      b43legacy_phy_write(dev,(unsigned short)20,(unsigned short)((int)backup[16]));
      #line 791 
      b43legacy_phy_write(dev,(unsigned short)1144,(unsigned short)((int)backup[17]));
    }
    #line 793 
    b43legacy_nrssi_mem_update(dev);
    #line 794 
    b43legacy_calc_nrssi_threshold(dev);
    #line 795 
    break;
    #line 796 
    default: 
             #line 796 
    ;
    #line 797 
    printk((char *)"\001",(char *)"1");
    #line 798 
    ldv_inline_asm();
    #line 799 
    ldv_inline_asm();
    #line 800 
    ldv_inline_asm();
    #line 797 
    ;
  }
  #line 802 
  return;
}

#line 801  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_calc_nrssi_threshold(struct b43legacy_wldev *dev)
{
  #line 804 
  s32 threshold;
  #line 805 
  s32 a;
  #line 806 
  s32 b;
  #line 807 
  s16 tmp16;
  #line 808 
  u16 tmp_u16;
  #line 803 
  struct b43legacy_phy *phy = & dev->phy;
  #line 810 
  switch ((int)phy->type) {
    #line 825 
    int __UNIQUE_ID___x570;
    #line 825 
    int tmp_1;
    #line 811 
    case 1: 
            #line 811 
    ;
    #line 812 
    if ((unsigned int)phy->radio_ver != 8272U) 
                                               #line 813 
                                               return;
    #line 814 
    if (((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) == 0) 
                                                                #line 816 
                                                                return;
    #line 818 
    if ((unsigned int)phy->radio_rev > 5U) {
      #line 819 
      threshold = ((int)phy->nrssi[1] - (int)phy->nrssi[0]) * 32;
      #line 820 
      threshold = ((int)phy->nrssi[0] + 1) * 20 + threshold;
      #line 821 
      threshold /= 40;
    }
    else 
         #line 823 
         threshold = (int)phy->nrssi[1] + -5;
    {
      #line 825 
      int __UNIQUE_ID___x568;
      #line 825 
      int tmp;
      {
        #line 825 
        __UNIQUE_ID___x568 = threshold;
        #line 825 
        int __UNIQUE_ID___y569 = 0;
        #line 825 
        if (__UNIQUE_ID___x568 > __UNIQUE_ID___y569) 
                                                     #line 825 
                                                     tmp = __UNIQUE_ID___x568; else 
                                                                    #line 825 
                                                                    tmp = __UNIQUE_ID___y569;
        }
      #line 825 
      __UNIQUE_ID___x570 = tmp;
      #line 825 
      int __UNIQUE_ID___y571 = 62;
      #line 825 
      if (__UNIQUE_ID___x570 < __UNIQUE_ID___y571) 
                                                   #line 825 
                                                   tmp_1 = __UNIQUE_ID___x570; else 
                                                                    #line 825 
                                                                    tmp_1 = __UNIQUE_ID___y571;
      }
    #line 825 
    threshold = tmp_1;
    #line 826 
    b43legacy_phy_read(dev,(unsigned short)32);
    #line 827 
    b43legacy_phy_write(dev,(unsigned short)32,(unsigned short)((int)((unsigned short)(((int)((unsigned short)threshold) << 8) | 28))));
    #line 830 
    if ((unsigned int)phy->radio_rev > 5U) {
      #line 831 
      b43legacy_phy_write(dev,(unsigned short)135,(unsigned short)3597);
      #line 832 
      b43legacy_phy_write(dev,(unsigned short)134,(unsigned short)3083);
      #line 833 
      b43legacy_phy_write(dev,(unsigned short)133,(unsigned short)2569);
      #line 834 
      b43legacy_phy_write(dev,(unsigned short)132,(unsigned short)2056);
      #line 835 
      b43legacy_phy_write(dev,(unsigned short)131,(unsigned short)2056);
      #line 836 
      b43legacy_phy_write(dev,(unsigned short)130,(unsigned short)1540);
      #line 837 
      b43legacy_phy_write(dev,(unsigned short)129,(unsigned short)770);
      #line 838 
      b43legacy_phy_write(dev,(unsigned short)128,(unsigned short)256);
    }
    #line 840 
    break;
    #line 842 
    case 2: 
            #line 842 
    ;
    #line 843 
    if (! phy->gmode || ((int)((dev->dev)->bus)->sprom.boardflags_lo & 8) == 0) {
      #line 846 
      tmp16 = b43legacy_nrssi_hw_read(dev,(unsigned short)32);
      #line 847 
      if ((int)tmp16 > 31) 
                           #line 848 
                           tmp16 = (short)((unsigned int)tmp16 + 65472U);
      #line 849 
      if ((int)tmp16 <= 2) {
        #line 850 
        ;
        #line 850 
        b43legacy_phy_write(dev,(unsigned short)1162,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1162) & -4096) | 2539))));
      }
      else {
        #line 854 
        ;
        #line 854 
        b43legacy_phy_write(dev,(unsigned short)1162,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1162) & -4096) | 2797))));
      }
    }
    else {
      #line 878 
      int tmp_7;
      #line 887 
      int __UNIQUE_ID___x578;
      #line 887 
      int tmp_11;
      #line 878 
      int __UNIQUE_ID___x574;
      #line 858 
      if (phy->interfmode == 1) {
        #line 860 
        a = 14;
        #line 861 
        b = 10;
      }
      else 
        #line 862 
        if (! phy->aci_wlan_automatic && (int)phy->aci_enable != 0) {
          #line 864 
          a = 19;
          #line 865 
          b = 18;
        }
        else {
          #line 867 
          a = 14;
          #line 868 
          b = 17;
        }
      #line 871 
      a = ((int)phy->nrssi[1] - (int)phy->nrssi[0]) * a;
      #line 872 
      a = ((int)phy->nrssi[0] << 6) + a;
      #line 873 
      if (a <= 31) 
                   #line 874 
                   a += 31; else 
                                 #line 876 
                                 a += 32;
      #line 877 
      a >>= 6;
      {
        #line 878 
        int tmp_5;
        #line 878 
        int __UNIQUE_ID___x572;
        {
          #line 878 
          __UNIQUE_ID___x572 = a;
          #line 878 
          int __UNIQUE_ID___y573 = -31;
          #line 878 
          if (__UNIQUE_ID___x572 > __UNIQUE_ID___y573) 
                                                       #line 878 
                                                       tmp_5 = __UNIQUE_ID___x572; else 
                                                                    #line 878 
                                                                    tmp_5 = __UNIQUE_ID___y573;
          }
        #line 878 
        __UNIQUE_ID___x574 = tmp_5;
        #line 878 
        int __UNIQUE_ID___y575 = 31;
        #line 878 
        if (__UNIQUE_ID___x574 < __UNIQUE_ID___y575) 
                                                     #line 878 
                                                     tmp_7 = __UNIQUE_ID___x574; else 
                                                                    #line 878 
                                                                    tmp_7 = __UNIQUE_ID___y575;
        }
      #line 878 
      a = tmp_7;
      #line 880 
      b = ((int)phy->nrssi[1] - (int)phy->nrssi[0]) * b;
      #line 881 
      b = ((int)phy->nrssi[0] << 6) + b;
      #line 882 
      if (b <= 31) 
                   #line 883 
                   b += 31; else 
                                 #line 885 
                                 b += 32;
      #line 886 
      b >>= 6;
      {
        #line 887 
        int __UNIQUE_ID___x576;
        #line 887 
        int tmp_9;
        {
          #line 887 
          __UNIQUE_ID___x576 = b;
          #line 887 
          int __UNIQUE_ID___y577 = -31;
          #line 887 
          if (__UNIQUE_ID___x576 > __UNIQUE_ID___y577) 
                                                       #line 887 
                                                       tmp_9 = __UNIQUE_ID___x576; else 
                                                                    #line 887 
                                                                    tmp_9 = __UNIQUE_ID___y577;
          }
        #line 887 
        __UNIQUE_ID___x578 = tmp_9;
        #line 887 
        int __UNIQUE_ID___y579 = 31;
        #line 887 
        if (__UNIQUE_ID___x578 < __UNIQUE_ID___y579) 
                                                     #line 887 
                                                     tmp_11 = __UNIQUE_ID___x578; else 
                                                                    #line 887 
                                                                    tmp_11 = __UNIQUE_ID___y579;
        }
      #line 887 
      b = tmp_11;
      #line 889 
      tmp_u16 = (unsigned short)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1162) & 61440U);
      #line 890 
      tmp_u16 = (unsigned short)(((unsigned int)((unsigned short)b) & 63U) | (unsigned int)tmp_u16);
      #line 891 
      tmp_u16 = (unsigned short)(((unsigned int)((int)((unsigned short)a) << 6U) & 4032U) | (unsigned int)tmp_u16);
      #line 892 
      b43legacy_phy_write(dev,(unsigned short)1162,(unsigned short)((int)tmp_u16));
    }
    #line 894 
    break;
    #line 895 
    default: 
             #line 895 
    ;
    #line 896 
    printk((char *)"\001",(char *)"1");
    #line 897 
    ldv_inline_asm();
    #line 898 
    ldv_inline_asm();
    #line 899 
    ldv_inline_asm();
    #line 896 
    ;
  }
  #line 901 
  return;
}

#line 904  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void _stack_save(u32 *_stackptr, size_t *stackidx, u8 id, u16 offset, u16 value)
{
  #line 907 
  u32 *stackptr = _stackptr + *stackidx;
  {
    #line 909 
    int __ret_warn_on = ((int)offset & 57344) != 0;
    #line 909 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 910 
      ldv_inline_asm();
      #line 911 
      ldv_inline_asm();
    }
    #line 909 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 910 
    int __ret_warn_on_0 = ((int)id & 248) != 0;
    #line 910 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 911 
      ldv_inline_asm();
      #line 912 
      ldv_inline_asm();
    }
    #line 910 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 911 
  *stackptr = (unsigned int)offset;
  #line 912 
  *stackptr |= (unsigned int)id << 13;
  #line 913 
  *stackptr |= (unsigned int)value << 16;
  #line 914 
  (*stackidx) ++;
  {
    #line 915 
    int __ret_warn_on_1 = *stackidx > 25UL;
    #line 915 
    if ((long)(__ret_warn_on_1 != 0) != 0L) {
      #line 916 
      ldv_inline_asm();
      #line 917 
      ldv_inline_asm();
    }
    #line 915 
    long tmp_5 = (long)(__ret_warn_on_1 != 0);
  }
  #line 917 
  return;
}

#line 918  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 _stack_restore(u32 *stackptr, u8 id, u16 offset)
{
  #line 921 
  size_t i;
  {
    #line 923 
    int __ret_warn_on = ((int)offset & 57344) != 0;
    #line 923 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 924 
      ldv_inline_asm();
      #line 925 
      ldv_inline_asm();
    }
    #line 923 
    long tmp = (long)(__ret_warn_on != 0);
  }
  {
    #line 924 
    int __ret_warn_on_0 = ((int)id & 248) != 0;
    #line 924 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 925 
      ldv_inline_asm();
      #line 926 
      ldv_inline_asm();
    }
    #line 924 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  #line 925 
  i = 0UL;
  #line 925 
  while (i <= 25UL) {
    #line 926 
    if ((*stackptr & 8191U) != (unsigned int)offset) 
                                                     #line 927 
                                                     goto __Cont;
    #line 928 
    if (((*stackptr >> 13) & 3U) != (unsigned int)id) 
                                                      #line 929 
                                                      goto __Cont;
    #line 930 
    return (unsigned short)(*stackptr >> 16);
    #line 925 
    __Cont: 
            #line 925 
    i ++;
    #line 925 
    stackptr ++;
  }
  #line 932 
  printk((char *)"\001",(char *)"1");
  #line 933 
  ldv_inline_asm();
  #line 934 
  ldv_inline_asm();
  #line 935 
  ldv_inline_asm();
  #line 932 
  ;
  #line 934 
  return (unsigned short)0U;
}

#line 972  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void b43legacy_radio_interference_mitigation_enable(struct b43legacy_wldev *dev, int mode)
{
  #line 976 
  u16 tmp;
  #line 977 
  u16 flipped;
  #line 978 
  u32 tmp32;
  #line 975 
  struct b43legacy_phy *phy = & dev->phy;
  #line 979 
  size_t stackidx = 0UL;
  #line 980 
  u32 *stack = (u32 *)(& phy->interfstack);
  #line 982 
  switch (mode) {
    #line 983 
    case 1: 
            #line 983 
    ;
    #line 984 
    if ((unsigned int)phy->rev != 1U) {
      #line 985 
      ;
      #line 985 
      b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1067) | 2048U)));
      #line 988 
      ;
      #line 988 
      b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 49151));
      #line 991 
      break;
    }
    #line 993 
    ;
    #line 993 
    _stack_save(stack,& stackidx,(unsigned char)2,(unsigned short)120,(unsigned short)((int)b43legacy_radio_read16(dev,(unsigned short)120)));
    #line 994 
    tmp = (unsigned short)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)120) & 30U);
    #line 995 
    flipped = flip_4bit((unsigned short)((int)tmp));
    #line 996 
    if ((unsigned int)flipped + 65528U <= 1U) 
                                              #line 997 
                                              flipped = (unsigned short)7U;
    else 
      #line 998 
      if ((unsigned int)flipped > 9U) 
                                      #line 999 
                                      flipped = (unsigned short)((unsigned int)flipped + 65533U);
    #line 1000 
    flipped = flip_4bit((unsigned short)((int)flipped));
    #line 1001 
    flipped = (unsigned short)(((int)flipped << 1) | 32);
    #line 1002 
    b43legacy_radio_write16(dev,(unsigned short)120,(unsigned short)((int)flipped));
    #line 1004 
    b43legacy_calc_nrssi_threshold(dev);
    #line 1006 
    ;
    #line 1006 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1030,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1030)));
    #line 1007 
    b43legacy_phy_write(dev,(unsigned short)1030,(unsigned short)32296);
    #line 1009 
    ;
    #line 1009 
    b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1067) | 2048U)));
    #line 1011 
    ;
    #line 1011 
    b43legacy_phy_write(dev,(unsigned short)1025,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1025) | 4096U)));
    #line 1015 
    ;
    #line 1015 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1184,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1184)));
    #line 1016 
    ;
    #line 1016 
    b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1184) & -16192) | 8))));
    #line 1019 
    ;
    #line 1019 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1185,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1185)));
    #line 1020 
    ;
    #line 1020 
    b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1185) & -16192) | 1541))));
    #line 1023 
    ;
    #line 1023 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1186,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1186)));
    #line 1024 
    ;
    #line 1024 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -16192) | 516))));
    #line 1027 
    ;
    #line 1027 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1192,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1192)));
    #line 1028 
    ;
    #line 1028 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1192) & -16192) | 2051))));
    #line 1031 
    ;
    #line 1031 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1195,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1195)));
    #line 1032 
    ;
    #line 1032 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1195) & -16192) | 1541))));
    #line 1036 
    ;
    #line 1036 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1191,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1191)));
    #line 1037 
    b43legacy_phy_write(dev,(unsigned short)1191,(unsigned short)2);
    #line 1038 
    ;
    #line 1038 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1187,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1187)));
    #line 1039 
    b43legacy_phy_write(dev,(unsigned short)1187,(unsigned short)10362);
    #line 1040 
    ;
    #line 1040 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1193,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1193)));
    #line 1041 
    b43legacy_phy_write(dev,(unsigned short)1193,(unsigned short)8231);
    #line 1042 
    ;
    #line 1042 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1171,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1171)));
    #line 1043 
    b43legacy_phy_write(dev,(unsigned short)1171,(unsigned short)13045);
    #line 1044 
    ;
    #line 1044 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1194,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1194)));
    #line 1045 
    b43legacy_phy_write(dev,(unsigned short)1194,(unsigned short)8231);
    #line 1046 
    ;
    #line 1046 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1196,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1196)));
    #line 1047 
    b43legacy_phy_write(dev,(unsigned short)1196,(unsigned short)13045);
    #line 1048 
    break;
    #line 1049 
    case 2: 
            #line 1049 
    ;
    #line 1050 
    if (((int)b43legacy_phy_read(dev,(unsigned short)51) & 2048) != 0) 
      #line 1051 
      break;
    #line 1053 
    phy->aci_enable = (_Bool)1;
    #line 1055 
    ;
    #line 1055 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1025,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1025)));
    #line 1056 
    ;
    #line 1056 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065)));
    #line 1057 
    if ((unsigned int)phy->rev <= 1U) {
      #line 1058 
      ;
      #line 1058 
      _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1030,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1030)));
    }
    else {
      #line 1060 
      ;
      #line 1060 
      _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1216,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1216)));
      #line 1061 
      ;
      #line 1061 
      _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1217,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1217)));
    }
    #line 1063 
    ;
    #line 1063 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)51,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)51)));
    #line 1064 
    ;
    #line 1064 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1191,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1191)));
    #line 1065 
    ;
    #line 1065 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1187,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1187)));
    #line 1066 
    ;
    #line 1066 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1193,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1193)));
    #line 1067 
    ;
    #line 1067 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1194,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1194)));
    #line 1068 
    ;
    #line 1068 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1196,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1196)));
    #line 1069 
    ;
    #line 1069 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1171,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1171)));
    #line 1070 
    ;
    #line 1070 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1185,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1185)));
    #line 1071 
    ;
    #line 1071 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1184,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1184)));
    #line 1072 
    ;
    #line 1072 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1186,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1186)));
    #line 1073 
    ;
    #line 1073 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1162,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1162)));
    #line 1074 
    ;
    #line 1074 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1192,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1192)));
    #line 1075 
    ;
    #line 1075 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1195,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1195)));
    #line 1076 
    if ((unsigned int)phy->rev == 2U) {
      #line 1077 
      ;
      #line 1077 
      _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1197,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1197)));
      #line 1078 
      ;
      #line 1078 
      _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1198,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1198)));
    }
    else 
      #line 1079 
      if ((unsigned int)phy->rev > 2U) {
        #line 1080 
        ;
        #line 1080 
        _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1197,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1197)));
        #line 1081 
        ;
        #line 1081 
        _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1045,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1045)));
        #line 1082 
        ;
        #line 1082 
        _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1046,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1046)));
        #line 1083 
        ;
        #line 1083 
        _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1047,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1047)));
        #line 1084 
        ;
        #line 1084 
        _stack_save(stack,& stackidx,(unsigned char)3,(unsigned short)6658,(unsigned short)((int)b43legacy_ilt_read(dev,(unsigned short)6658)));
        #line 1085 
        ;
        #line 1085 
        _stack_save(stack,& stackidx,(unsigned char)3,(unsigned short)6659,(unsigned short)((int)b43legacy_ilt_read(dev,(unsigned short)6659)));
      }
    #line 1087 
    ;
    #line 1087 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1067,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1067)));
    #line 1088 
    ;
    #line 1088 
    _stack_save(stack,& stackidx,(unsigned char)1,(unsigned short)1164,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1164)));
    #line 1090 
    ;
    #line 1090 
    b43legacy_phy_write(dev,(unsigned short)1025,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1025) & 61439));
    #line 1093 
    ;
    #line 1093 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1065) & -4) | 2))));
    #line 1098 
    b43legacy_phy_write(dev,(unsigned short)51,(unsigned short)2048);
    #line 1099 
    b43legacy_phy_write(dev,(unsigned short)1187,(unsigned short)8231);
    #line 1100 
    b43legacy_phy_write(dev,(unsigned short)1193,(unsigned short)7336);
    #line 1101 
    b43legacy_phy_write(dev,(unsigned short)1171,(unsigned short)10362);
    #line 1102 
    b43legacy_phy_write(dev,(unsigned short)1194,(unsigned short)7336);
    #line 1103 
    b43legacy_phy_write(dev,(unsigned short)1196,(unsigned short)10362);
    #line 1105 
    ;
    #line 1105 
    b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1184) & -64) | 26))));
    #line 1108 
    b43legacy_phy_write(dev,(unsigned short)1191,(unsigned short)13);
    #line 1110 
    if ((unsigned int)phy->rev <= 1U) 
                                      #line 1111 
                                      b43legacy_phy_write(dev,(unsigned short)1030,(unsigned short)65293);
    else 
      #line 1112 
      if ((unsigned int)phy->rev == 2U) {
        #line 1113 
        b43legacy_phy_write(dev,(unsigned short)1216,(unsigned short)65535);
        #line 1114 
        b43legacy_phy_write(dev,(unsigned short)1217,(unsigned short)169);
      }
      else {
        #line 1116 
        b43legacy_phy_write(dev,(unsigned short)1216,(unsigned short)193);
        #line 1117 
        b43legacy_phy_write(dev,(unsigned short)1217,(unsigned short)89);
      }
    #line 1120 
    ;
    #line 1120 
    b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1185) & -16129) | 6144))));
    #line 1123 
    ;
    #line 1123 
    b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1185) & -64) | 21))));
    #line 1126 
    ;
    #line 1126 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1192) & -12289) | 4096))));
    #line 1129 
    ;
    #line 1129 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1192) & -3841) | 2560))));
    #line 1132 
    ;
    #line 1132 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1195) & -12289) | 4096))));
    #line 1135 
    ;
    #line 1135 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1195) & -3841) | 2048))));
    #line 1138 
    ;
    #line 1138 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1195) & -49) | 16))));
    #line 1141 
    ;
    #line 1141 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1195) & -16) | 5))));
    #line 1144 
    ;
    #line 1144 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1192) & -49) | 16))));
    #line 1147 
    ;
    #line 1147 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1192) & -16) | 6))));
    #line 1150 
    ;
    #line 1150 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -3841) | 2048))));
    #line 1153 
    ;
    #line 1153 
    b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1184) & -3841) | 1280))));
    #line 1156 
    ;
    #line 1156 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1186) & -16) | 11))));
    #line 1160 
    if ((unsigned int)phy->rev > 2U) {
      #line 1161 
      ;
      #line 1161 
      b43legacy_phy_write(dev,(unsigned short)1162,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1162) & 32767));
      #line 1164 
      ;
      #line 1164 
      b43legacy_phy_write(dev,(unsigned short)1045,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1045) & -32768) | 14040))));
      #line 1167 
      ;
      #line 1167 
      b43legacy_phy_write(dev,(unsigned short)1046,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1046) & -32768) | 14040))));
      #line 1170 
      ;
      #line 1170 
      b43legacy_phy_write(dev,(unsigned short)1047,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1047) & -512) | 365))));
    }
    else {
      #line 1174 
      ;
      #line 1174 
      b43legacy_phy_write(dev,(unsigned short)1162,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1162) | 4096U)));
      #line 1177 
      ;
      #line 1177 
      b43legacy_phy_write(dev,(unsigned short)1162,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1162) & -24577) | 8192))));
      #line 1180 
      tmp32 = b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94);
      #line 1182 
      if ((tmp32 & 2048U) == 0U) {
        #line 1183 
        tmp32 |= 2048U;
        #line 1184 
        b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,tmp32);
      }
    }
    #line 1189 
    if ((unsigned int)phy->rev > 1U) {
      #line 1190 
      ;
      #line 1190 
      b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1067) | 2048U)));
    }
    #line 1193 
    ;
    #line 1193 
    b43legacy_phy_write(dev,(unsigned short)1164,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1164) & -3841) | 512))));
    #line 1196 
    if ((unsigned int)phy->rev == 2U) {
      #line 1197 
      ;
      #line 1197 
      b43legacy_phy_write(dev,(unsigned short)1198,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1198) & -256) | 127))));
      #line 1200 
      ;
      #line 1200 
      b43legacy_phy_write(dev,(unsigned short)1197,(unsigned short)((int)((unsigned short)(((int)b43legacy_phy_read(dev,(unsigned short)1197) & 255) | 4864))));
    }
    else 
      #line 1203 
      if ((unsigned int)phy->rev > 5U) {
        #line 1204 
        b43legacy_ilt_write(dev,(unsigned short)6659,(unsigned short)127);
        #line 1205 
        b43legacy_ilt_write(dev,(unsigned short)6658,(unsigned short)127);
        #line 1206 
        ;
        #line 1206 
        b43legacy_phy_write(dev,(unsigned short)1197,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1197) & 255));
      }
    #line 1210 
    b43legacy_calc_nrssi_slope(dev);
    #line 1211 
    break;
    #line 1212 
    default: 
             #line 1212 
    ;
    #line 1213 
    printk((char *)"\001",(char *)"1");
    #line 1214 
    ldv_inline_asm();
    #line 1215 
    ldv_inline_asm();
    #line 1216 
    ldv_inline_asm();
    #line 1213 
    ;
  }
  #line 1218 
  return;
}

#line 1218  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static void b43legacy_radio_interference_mitigation_disable(struct b43legacy_wldev *dev, int mode)
{
  #line 1222 
  u32 tmp32;
  #line 1221 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1223 
  u32 *stack = (u32 *)(& phy->interfstack);
  #line 1225 
  switch (mode) {
    #line 1226 
    case 1: 
            #line 1226 
    ;
    #line 1227 
    if ((unsigned int)phy->rev != 1U) {
      #line 1228 
      ;
      #line 1228 
      b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1067) & 63487));
      #line 1231 
      ;
      #line 1231 
      b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1065) | 16384U)));
      #line 1234 
      break;
    }
    #line 1236 
    ;
    #line 1236 
    b43legacy_phy_write(dev,(unsigned short)120,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)120)));
    #line 1237 
    b43legacy_calc_nrssi_threshold(dev);
    #line 1238 
    ;
    #line 1238 
    b43legacy_phy_write(dev,(unsigned short)1030,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1030)));
    #line 1239 
    ;
    #line 1239 
    b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1067) & 63487));
    #line 1241 
    if (! dev->bad_frames_preempt) {
      #line 1242 
      ;
      #line 1242 
      b43legacy_phy_write(dev,(unsigned short)1025,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1025) & 63487));
    }
    #line 1246 
    ;
    #line 1246 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)1065) | 16384U)));
    #line 1249 
    ;
    #line 1249 
    b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1184)));
    #line 1250 
    ;
    #line 1250 
    b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1185)));
    #line 1251 
    ;
    #line 1251 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1186)));
    #line 1252 
    ;
    #line 1252 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1192)));
    #line 1253 
    ;
    #line 1253 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1195)));
    #line 1254 
    ;
    #line 1254 
    b43legacy_phy_write(dev,(unsigned short)1191,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1191)));
    #line 1255 
    ;
    #line 1255 
    b43legacy_phy_write(dev,(unsigned short)1187,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1187)));
    #line 1256 
    ;
    #line 1256 
    b43legacy_phy_write(dev,(unsigned short)1193,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1193)));
    #line 1257 
    ;
    #line 1257 
    b43legacy_phy_write(dev,(unsigned short)1171,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1171)));
    #line 1258 
    ;
    #line 1258 
    b43legacy_phy_write(dev,(unsigned short)1194,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1194)));
    #line 1259 
    ;
    #line 1259 
    b43legacy_phy_write(dev,(unsigned short)1196,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1196)));
    #line 1260 
    break;
    #line 1261 
    case 2: 
            #line 1261 
    ;
    #line 1262 
    if (((int)b43legacy_phy_read(dev,(unsigned short)51) & 2048) == 0) 
      #line 1263 
      break;
    #line 1265 
    phy->aci_enable = (_Bool)0;
    #line 1267 
    ;
    #line 1267 
    b43legacy_phy_write(dev,(unsigned short)1025,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1025)));
    #line 1268 
    ;
    #line 1268 
    b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1065)));
    #line 1269 
    ;
    #line 1269 
    b43legacy_phy_write(dev,(unsigned short)51,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)51)));
    #line 1270 
    ;
    #line 1270 
    b43legacy_phy_write(dev,(unsigned short)1187,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1187)));
    #line 1271 
    ;
    #line 1271 
    b43legacy_phy_write(dev,(unsigned short)1193,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1193)));
    #line 1272 
    ;
    #line 1272 
    b43legacy_phy_write(dev,(unsigned short)1171,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1171)));
    #line 1273 
    ;
    #line 1273 
    b43legacy_phy_write(dev,(unsigned short)1194,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1194)));
    #line 1274 
    ;
    #line 1274 
    b43legacy_phy_write(dev,(unsigned short)1196,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1196)));
    #line 1275 
    ;
    #line 1275 
    b43legacy_phy_write(dev,(unsigned short)1184,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1184)));
    #line 1276 
    ;
    #line 1276 
    b43legacy_phy_write(dev,(unsigned short)1191,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1191)));
    #line 1277 
    if ((unsigned int)phy->rev > 1U) {
      #line 1278 
      ;
      #line 1278 
      b43legacy_phy_write(dev,(unsigned short)1216,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1216)));
      #line 1279 
      ;
      #line 1279 
      b43legacy_phy_write(dev,(unsigned short)1217,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1217)));
    }
    else {
      #line 1281 
      ;
      #line 1281 
      b43legacy_phy_write(dev,(unsigned short)1030,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1030)));
    }
    #line 1282 
    ;
    #line 1282 
    b43legacy_phy_write(dev,(unsigned short)1185,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1185)));
    #line 1283 
    ;
    #line 1283 
    b43legacy_phy_write(dev,(unsigned short)1195,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1195)));
    #line 1284 
    ;
    #line 1284 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1192)));
    #line 1285 
    if ((unsigned int)phy->rev == 2U) {
      #line 1286 
      ;
      #line 1286 
      b43legacy_phy_write(dev,(unsigned short)1197,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1197)));
      #line 1287 
      ;
      #line 1287 
      b43legacy_phy_write(dev,(unsigned short)1198,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1198)));
    }
    else 
      #line 1288 
      if ((unsigned int)phy->rev > 2U) {
        #line 1289 
        ;
        #line 1289 
        b43legacy_phy_write(dev,(unsigned short)1197,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1197)));
        #line 1290 
        ;
        #line 1290 
        b43legacy_phy_write(dev,(unsigned short)1045,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1045)));
        #line 1291 
        ;
        #line 1291 
        b43legacy_phy_write(dev,(unsigned short)1046,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1046)));
        #line 1292 
        ;
        #line 1292 
        b43legacy_phy_write(dev,(unsigned short)1047,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1047)));
        #line 1293 
        ;
        #line 1293 
        b43legacy_ilt_write(dev,(unsigned short)6658,(unsigned short)((int)_stack_restore(stack,(unsigned char)3,(unsigned short)6658)));
        #line 1294 
        ;
        #line 1294 
        b43legacy_ilt_write(dev,(unsigned short)6659,(unsigned short)((int)_stack_restore(stack,(unsigned char)3,(unsigned short)6659)));
      }
    #line 1296 
    ;
    #line 1296 
    b43legacy_phy_write(dev,(unsigned short)1186,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1186)));
    #line 1297 
    ;
    #line 1297 
    b43legacy_phy_write(dev,(unsigned short)1192,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1192)));
    #line 1298 
    ;
    #line 1298 
    b43legacy_phy_write(dev,(unsigned short)1067,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1067)));
    #line 1299 
    ;
    #line 1299 
    b43legacy_phy_write(dev,(unsigned short)1164,(unsigned short)((int)_stack_restore(stack,(unsigned char)1,(unsigned short)1164)));
    #line 1300 
    tmp32 = b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94);
    #line 1302 
    if ((tmp32 & 2048U) != 0U) {
      #line 1303 
      tmp32 &= 4294965247U;
      #line 1304 
      b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,tmp32);
    }
    #line 1308 
    b43legacy_calc_nrssi_slope(dev);
    #line 1309 
    break;
    #line 1310 
    default: 
             #line 1310 
    ;
    #line 1311 
    printk((char *)"\001",(char *)"1");
    #line 1312 
    ldv_inline_asm();
    #line 1313 
    ldv_inline_asm();
    #line 1314 
    ldv_inline_asm();
    #line 1311 
    ;
  }
  #line 1316 
  return;
}

#line 1322  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
int b43legacy_radio_set_interference_mitigation(struct b43legacy_wldev *dev, int mode)
{
  #line 1326 
  int currentmode;
  #line 1325 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1328 
  if (((unsigned int)phy->type != 2U || (unsigned int)phy->rev == 0U) || ! phy->gmode) 
    #line 1330 
    return -19;
  #line 1332 
  phy->aci_wlan_automatic = (_Bool)0;
  #line 1333 
  switch (mode) {
    #line 1334 
    case 3: 
            #line 1334 
    ;
    #line 1335 
    phy->aci_wlan_automatic = (_Bool)1;
    #line 1336 
    if ((int)phy->aci_enable != 0) 
                                   #line 1337 
                                   mode = 2; else 
                                                  #line 1339 
                                                  mode = 0;
    #line 1340 
    break;
    #line 1341 
    case 0: 
            #line 1341 
    ;
    #line 1342 
    case 1: 
            #line 1342 
    ;
    #line 1343 
    case 2: 
            #line 1343 
    ;
    #line 1344 
    break;
    #line 1345 
    default: 
             #line 1345 
    ;
    #line 1346 
    return -22;
  }
  #line 1349 
  currentmode = phy->interfmode;
  #line 1350 
  if (currentmode == mode) 
                           #line 1351 
                           return 0;
  #line 1352 
  if (currentmode != 0) 
                        #line 1353 
                        b43legacy_radio_interference_mitigation_disable(dev,currentmode);
  #line 1356 
  if (mode == 0) {
    #line 1357 
    phy->aci_enable = (_Bool)0;
    #line 1358 
    phy->aci_hw_rssi = (_Bool)0;
  }
  else 
       #line 1360 
       b43legacy_radio_interference_mitigation_enable(dev,mode);
  #line 1361 
  phy->interfmode = mode;
  #line 1363 
  return 0;
}

#line 1366  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_radio_calibrationvalue(struct b43legacy_wldev *dev)
{
  #line 1368 
  u16 reg;
  #line 1369 
  u16 index;
  #line 1370 
  u16 ret;
  #line 1372 
  reg = b43legacy_radio_read16(dev,(unsigned short)96);
  #line 1373 
  index = (unsigned short)((unsigned int)((unsigned short)((int)reg >> 1)) & 15U);
  #line 1374 
  ret = (unsigned short)((int)rcc_table[(int)index] << 1U);
  #line 1375 
  ret = (unsigned short)(((int)reg & 1) | (int)ret);
  #line 1376 
  ret = (unsigned short)((unsigned int)ret | 32U);
  #line 1378 
  return ret;
}

#line 1382  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 b43legacy_get_812_value(struct b43legacy_wldev *dev, u8 lpd)
{
  #line 1387 
  u8 loop;
  #line 1388 
  u16 extern_lna_control;
  #line 1384 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1385 
  u16 loop_or = (unsigned short)0U;
  #line 1386 
  u16 adj_loopback_gain = phy->loopback_gain[0];
  #line 1390 
  if (! phy->gmode) 
                    #line 1391 
                    return (unsigned short)0U;
  #line 1392 
  if ((unsigned int)phy->rev <= 1U && ! phy->gmode) 
    #line 1393 
    if ((unsigned int)phy->rev <= 6U || ((int)((dev->dev)->bus)->sprom.boardflags_lo & 4096) == 0) 
      #line 1395 
      switch ((int)lpd) {
        #line 1396 
        case 3: 
                #line 1396 
        ;
        #line 1397 
        return (unsigned short)4018U;
        #line 1398 
        case 1: 
                #line 1398 
        ;
        #line 1399 
        return (unsigned short)178U;
        #line 1400 
        case 5: 
                #line 1400 
        ;
        #line 1401 
        return (unsigned short)12466U;
        #line 1402 
        case 4: 
                #line 1402 
        ;
        #line 1403 
        return (unsigned short)12467U;
        #line 1404 
        default: 
                 #line 1404 
        ;
        #line 1405 
        printk((char *)"\001",(char *)"1");
        #line 1406 
        ldv_inline_asm();
        #line 1407 
        ldv_inline_asm();
        #line 1408 
        ldv_inline_asm();
        #line 1405 
        ;
      }
    else 
      #line 1408 
      switch ((int)lpd) {
        #line 1409 
        case 3: 
                #line 1409 
        ;
        #line 1410 
        return (unsigned short)36786U;
        #line 1411 
        case 1: 
                #line 1411 
        ;
        #line 1412 
        return (unsigned short)32946U;
        #line 1413 
        case 5: 
                #line 1413 
        ;
        #line 1414 
        return (unsigned short)8370U;
        #line 1415 
        case 4: 
                #line 1415 
        ;
        #line 1416 
        return (unsigned short)8371U;
        #line 1417 
        default: 
                 #line 1417 
        ;
        #line 1418 
        printk((char *)"\001",(char *)"1");
        #line 1419 
        ldv_inline_asm();
        #line 1420 
        ldv_inline_asm();
        #line 1421 
        ldv_inline_asm();
        #line 1418 
        ;
      }
  else {
    #line 1422 
    if ((unsigned int)phy->radio_rev == 8U) 
                                            #line 1423 
                                            adj_loopback_gain = (unsigned short)((unsigned int)adj_loopback_gain + 62U); else 
                                                                    #line 1425 
                                                                    adj_loopback_gain = (unsigned short)((unsigned int)adj_loopback_gain + 38U);
    #line 1426 
    if ((unsigned int)adj_loopback_gain > 69U) {
      #line 1427 
      adj_loopback_gain = (unsigned short)((unsigned int)adj_loopback_gain + 65466U);
      #line 1428 
      extern_lna_control = (unsigned short)12288U;
    }
    else 
      #line 1429 
      if ((unsigned int)adj_loopback_gain > 57U) {
        #line 1430 
        adj_loopback_gain = (unsigned short)((unsigned int)adj_loopback_gain + 65478U);
        #line 1431 
        extern_lna_control = (unsigned short)8192U;
      }
      else 
        #line 1432 
        if ((unsigned int)adj_loopback_gain > 45U) {
          #line 1433 
          adj_loopback_gain = (unsigned short)((unsigned int)adj_loopback_gain + 65490U);
          #line 1434 
          extern_lna_control = (unsigned short)4096U;
        }
        else {
          #line 1436 
          adj_loopback_gain = (unsigned short)((unsigned int)adj_loopback_gain + 65520U);
          #line 1437 
          extern_lna_control = (unsigned short)0U;
        }
    #line 1439 
    loop = (unsigned char)0U;
    #line 1439 
    while ((unsigned int)loop <= 15U) {
      {
        #line 1440 
        u16 tmp = (unsigned short)((unsigned int)((unsigned short)loop) * 65530U + (unsigned int)adj_loopback_gain);
        #line 1441 
        if ((unsigned int)tmp <= 5U) 
                                     #line 1442 
                                     break;
      }
      #line 1439 
      loop = (u8)((int)loop + 1);
    }
    #line 1445 
    loop_or = (unsigned short)(((int)loop << 8) | (int)extern_lna_control);
    #line 1446 
    if ((unsigned int)phy->rev > 6U && ((int)((dev->dev)->bus)->sprom.boardflags_lo & 4096) != 0) {
      #line 1448 
      if ((unsigned int)extern_lna_control != 0U) 
                                                  #line 1449 
                                                  loop_or = (unsigned short)((unsigned int)loop_or | 32768U);
      #line 1450 
      switch ((int)lpd) {
        #line 1451 
        case 3: 
                #line 1451 
        ;
        #line 1452 
        return (unsigned short)36754U;
        #line 1453 
        case 1: 
                #line 1453 
        ;
        #line 1454 
        return (unsigned short)((unsigned int)loop_or | 32914U);
        #line 1455 
        case 5: 
                #line 1455 
        ;
        #line 1456 
        return (unsigned short)((unsigned int)loop_or | 8338U);
        #line 1457 
        case 4: 
                #line 1457 
        ;
        #line 1458 
        return (unsigned short)((unsigned int)loop_or | 8339U);
        #line 1459 
        default: 
                 #line 1459 
        ;
        #line 1460 
        printk((char *)"\001",(char *)"1");
        #line 1461 
        ldv_inline_asm();
        #line 1462 
        ldv_inline_asm();
        #line 1463 
        ldv_inline_asm();
        #line 1460 
        ;
      }
    }
    else 
      #line 1463 
      switch ((int)lpd) {
        #line 1464 
        case 3: 
                #line 1464 
        ;
        #line 1465 
        return (unsigned short)3986U;
        #line 1466 
        case 1: 
                #line 1466 
        ;
        #line 1467 
        case 5: 
                #line 1467 
        ;
        #line 1468 
        return (unsigned short)((unsigned int)loop_or | 146U);
        #line 1469 
        case 4: 
                #line 1469 
        ;
        #line 1470 
        return (unsigned short)((unsigned int)loop_or | 147U);
        #line 1471 
        default: 
                 #line 1471 
        ;
        #line 1472 
        printk((char *)"\001",(char *)"1");
        #line 1473 
        ldv_inline_asm();
        #line 1474 
        ldv_inline_asm();
        #line 1475 
        ldv_inline_asm();
        #line 1472 
        ;
      }
  }
  #line 1476 
  return (unsigned short)0U;
}

#line 1479  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_radio_init2050(struct b43legacy_wldev *dev)
{
  #line 1483 
  u16 ret;
  #line 1484 
  u16 i;
  #line 1485 
  u16 j;
  #line 1481 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1482 
  u16 backup[21U] = {(unsigned short)0U};
  #line 1486 
  u32 tmp1 = 0U;
  #line 1487 
  u32 tmp2 = 0U;
  #line 1489 
  backup[0] = b43legacy_radio_read16(dev,(unsigned short)67);
  #line 1490 
  backup[14] = b43legacy_radio_read16(dev,(unsigned short)81);
  #line 1491 
  backup[15] = b43legacy_radio_read16(dev,(unsigned short)82);
  #line 1492 
  backup[1] = b43legacy_phy_read(dev,(unsigned short)21);
  #line 1493 
  backup[16] = b43legacy_phy_read(dev,(unsigned short)90);
  #line 1494 
  backup[17] = b43legacy_phy_read(dev,(unsigned short)89);
  #line 1495 
  backup[18] = b43legacy_phy_read(dev,(unsigned short)88);
  #line 1496 
  if ((unsigned int)phy->type == 1U) {
    #line 1497 
    backup[2] = b43legacy_phy_read(dev,(unsigned short)48);
    #line 1498 
    backup[3] = b43legacy_read16(dev,(unsigned short)1004);
    #line 1499 
    b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)255);
    #line 1500 
    b43legacy_write16(dev,(unsigned short)1004,(unsigned short)16191);
  }
  else 
    #line 1502 
    if ((int)phy->gmode != 0) {
      #line 1503 
      backup[4] = b43legacy_phy_read(dev,(unsigned short)2065);
      #line 1504 
      backup[5] = b43legacy_phy_read(dev,(unsigned short)2066);
      #line 1505 
      backup[6] = b43legacy_phy_read(dev,(unsigned short)2068);
      #line 1506 
      backup[7] = b43legacy_phy_read(dev,(unsigned short)2069);
      #line 1507 
      backup[8] = b43legacy_phy_read(dev,(unsigned short)1065);
      #line 1509 
      backup[9] = b43legacy_phy_read(dev,(unsigned short)2050);
      #line 1510 
      ;
      #line 1510 
      b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)2068) | 3U)));
      #line 1513 
      ;
      #line 1513 
      b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2069) & 65532));
      #line 1516 
      ;
      #line 1516 
      b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)1065) & 32767));
      #line 1519 
      ;
      #line 1519 
      b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)2050) & 65532));
      #line 1522 
      if ((unsigned int)phy->rev > 1U) {
        #line 1523 
        backup[19] = b43legacy_phy_read(dev,(unsigned short)2063);
        #line 1524 
        backup[20] = b43legacy_phy_read(dev,(unsigned short)2064);
        #line 1525 
        if ((unsigned int)phy->rev > 2U) 
                                         #line 1526 
                                         b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)49184); else 
                                                                    #line 1529 
                                                                    b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)32800);
        #line 1531 
        b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)0);
      }
      #line 1533 
      ;
      #line 1533 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)3)));
      #line 1536 
      if ((unsigned int)phy->rev <= 6U || ((int)((dev->dev)->bus)->sprom.boardflags_lo & 4096) == 0) 
        #line 1539 
        b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)435); else 
                                                                    #line 1541 
                                                                    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)2483);
    }
  #line 1544 
  ;
  #line 1544 
  b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)994) | 32768U)));
  #line 1547 
  backup[10] = b43legacy_phy_read(dev,(unsigned short)53);
  #line 1548 
  ;
  #line 1548 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)b43legacy_phy_read(dev,(unsigned short)53) & 65407));
  #line 1550 
  backup[11] = b43legacy_read16(dev,(unsigned short)998);
  #line 1551 
  backup[12] = b43legacy_read16(dev,(unsigned short)1012);
  #line 1554 
  if ((unsigned int)phy->analog == 0U) 
                                       #line 1555 
                                       b43legacy_write16(dev,(unsigned short)998,(unsigned short)290);
  else {
    #line 1557 
    if ((unsigned int)phy->analog > 1U) {
      #line 1558 
      ;
      #line 1558 
      b43legacy_phy_write(dev,(unsigned short)3,(unsigned short)((int)((unsigned int)b43legacy_phy_read(dev,(unsigned short)3) | 64U)));
    }
    #line 1561 
    ;
    #line 1561 
    b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)1012) | 8192U)));
  }
  #line 1566 
  ret = b43legacy_radio_calibrationvalue(dev);
  #line 1568 
  if ((unsigned int)phy->type == 1U) 
                                     #line 1569 
                                     b43legacy_radio_write16(dev,(unsigned short)120,(unsigned short)38);
  #line 1571 
  if ((int)phy->gmode != 0) {
    #line 1572 
    ;
    #line 1572 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)3)));
  }
  #line 1575 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)49071);
  #line 1576 
  b43legacy_phy_write(dev,(unsigned short)43,(unsigned short)5123);
  #line 1577 
  if ((int)phy->gmode != 0) {
    #line 1578 
    ;
    #line 1578 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)1)));
  }
  #line 1581 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)49056);
  #line 1582 
  ;
  #line 1582 
  b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)((int)((unsigned int)b43legacy_radio_read16(dev,(unsigned short)81) | 4U)));
  #line 1585 
  if ((unsigned int)phy->radio_rev == 8U) 
                                          #line 1586 
                                          b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)31);
  else {
    #line 1588 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)0);
    #line 1589 
    ;
    #line 1589 
    b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)67) & -16) | 9))));
  }
  #line 1593 
  b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)0);
  #line 1595 
  i = (unsigned short)0U;
  #line 1595 
  while ((unsigned int)i <= 15U) {
    {
      #line 1596 
      b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)1152);
      #line 1597 
      b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)51216);
      #line 1598 
      b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)13);
      #line 1599 
      if ((int)phy->gmode != 0) {
        #line 1600 
        ;
        #line 1600 
        b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)5)));
      }
      #line 1603 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)44976);
      #line 1604 
      __const_udelay(42950UL);
      #line 1605 
      if ((int)phy->gmode != 0) {
        #line 1606 
        ;
        #line 1606 
        b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)5)));
      }
      #line 1609 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)61360);
      #line 1610 
      __const_udelay(42950UL);
      #line 1611 
      if ((int)phy->gmode != 0) {
        #line 1612 
        ;
        #line 1612 
        b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)4)));
      }
      #line 1615 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)65520);
      #line 1616 
      __const_udelay(85900UL);
      #line 1617 
      tmp1 = (unsigned int)b43legacy_phy_read(dev,(unsigned short)45) + tmp1;
      #line 1618 
      b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)0);
      #line 1619 
      if ((int)phy->gmode != 0) {
        #line 1620 
        ;
        #line 1620 
        b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)5)));
      }
      #line 1623 
      b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)44976);
    }
    #line 1595 
    i = (u16)((int)i + 1);
  }
  #line 1626 
  tmp1 ++;
  #line 1627 
  tmp1 >>= 9;
  #line 1628 
  __const_udelay(42950UL);
  #line 1629 
  b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)0);
  #line 1631 
  i = (unsigned short)0U;
  #line 1631 
  while ((unsigned int)i <= 15U) {
    {
      #line 1632 
      ;
      #line 1632 
      b43legacy_radio_write16(dev,(unsigned short)120,(unsigned short)((int)((unsigned short)(((int)flip_4bit((unsigned short)((int)i)) << 1) | 32))));
      #line 1634 
      backup[13] = b43legacy_radio_read16(dev,(unsigned short)120);
      #line 1635 
      __const_udelay(42950UL);
      #line 1636 
      j = (unsigned short)0U;
      #line 1636 
      while ((unsigned int)j <= 15U) {
        {
          #line 1637 
          b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)3456);
          #line 1638 
          b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)51216);
          #line 1639 
          b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)13);
          #line 1640 
          if ((int)phy->gmode != 0) {
            #line 1641 
            ;
            #line 1641 
            b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)5)));
          }
          #line 1644 
          b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)44976);
          #line 1645 
          __const_udelay(42950UL);
          #line 1646 
          if ((int)phy->gmode != 0) {
            #line 1647 
            ;
            #line 1647 
            b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)5)));
          }
          #line 1650 
          b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)61360);
          #line 1651 
          __const_udelay(42950UL);
          #line 1652 
          if ((int)phy->gmode != 0) {
            #line 1653 
            ;
            #line 1653 
            b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)4)));
          }
          #line 1656 
          b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)65520);
          #line 1657 
          __const_udelay(42950UL);
          #line 1658 
          tmp2 = (unsigned int)b43legacy_phy_read(dev,(unsigned short)45) + tmp2;
          #line 1659 
          b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)0);
          #line 1660 
          if ((int)phy->gmode != 0) {
            #line 1661 
            ;
            #line 1661 
            b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)b43legacy_get_812_value(dev,(unsigned char)5)));
          }
          #line 1664 
          b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)44976);
        }
        #line 1636 
        j = (u16)((int)j + 1);
      }
      #line 1666 
      tmp2 ++;
      #line 1667 
      tmp2 >>= 8;
      #line 1668 
      if (tmp1 < tmp2) 
                       #line 1669 
                       break;
    }
    #line 1631 
    i = (u16)((int)i + 1);
  }
  #line 1673 
  b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)((int)backup[1]));
  #line 1674 
  b43legacy_radio_write16(dev,(unsigned short)81,(unsigned short)((int)backup[14]));
  #line 1675 
  b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)backup[15]));
  #line 1676 
  b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)backup[0]));
  #line 1677 
  b43legacy_phy_write(dev,(unsigned short)90,(unsigned short)((int)backup[16]));
  #line 1678 
  b43legacy_phy_write(dev,(unsigned short)89,(unsigned short)((int)backup[17]));
  #line 1679 
  b43legacy_phy_write(dev,(unsigned short)88,(unsigned short)((int)backup[18]));
  #line 1680 
  b43legacy_write16(dev,(unsigned short)998,(unsigned short)((int)backup[11]));
  #line 1681 
  if ((unsigned int)phy->analog != 0U) 
                                       #line 1682 
                                       b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)backup[12]));
  #line 1683 
  b43legacy_phy_write(dev,(unsigned short)53,(unsigned short)((int)backup[10]));
  #line 1684 
  b43legacy_radio_selectchannel(dev,(unsigned char)((int)phy->channel),1);
  #line 1685 
  if ((unsigned int)phy->type == 1U) {
    #line 1686 
    b43legacy_phy_write(dev,(unsigned short)48,(unsigned short)((int)backup[2]));
    #line 1687 
    b43legacy_write16(dev,(unsigned short)1004,(unsigned short)((int)backup[3]));
  }
  else 
    #line 1689 
    if ((int)phy->gmode != 0) {
      #line 1690 
      ;
      #line 1690 
      b43legacy_write16(dev,(unsigned short)994,(unsigned short)((int)b43legacy_read16(dev,(unsigned short)994) & 32767));
      #line 1693 
      b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)backup[4]));
      #line 1694 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)backup[5]));
      #line 1695 
      b43legacy_phy_write(dev,(unsigned short)2068,(unsigned short)((int)backup[6]));
      #line 1696 
      b43legacy_phy_write(dev,(unsigned short)2069,(unsigned short)((int)backup[7]));
      #line 1697 
      b43legacy_phy_write(dev,(unsigned short)1065,(unsigned short)((int)backup[8]));
      #line 1699 
      b43legacy_phy_write(dev,(unsigned short)2050,(unsigned short)((int)backup[9]));
      #line 1700 
      if ((unsigned int)phy->rev > 1U) {
        #line 1701 
        b43legacy_phy_write(dev,(unsigned short)2063,(unsigned short)((int)backup[19]));
        #line 1702 
        b43legacy_phy_write(dev,(unsigned short)2064,(unsigned short)((int)backup[20]));
      }
    }
  #line 1706 
  if ((unsigned int)i > 14U) 
                             #line 1707 
                             ret = backup[13];
  #line 1709 
  return ret;
}

#line 1729  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
int b43legacy_radio_selectchannel(struct b43legacy_wldev *dev, u8 channel, int synthetic_pu_workaround)
{
  #line 1733 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1735 
  if ((unsigned int)channel == 255U) 
    #line 1736 
    switch ((int)phy->type) {
      #line 1737 
      case 1: 
              #line 1737 
      ;
      #line 1738 
      case 2: 
              #line 1738 
      ;
      #line 1739 
      channel = (unsigned char)6U;
      #line 1740 
      break;
      #line 1741 
      default: 
               #line 1741 
      ;
      {
        #line 1742 
        int __ret_warn_on = 1;
        #line 1742 
        if ((long)(__ret_warn_on != 0) != 0L) {
          #line 1743 
          ldv_inline_asm();
          #line 1744 
          ldv_inline_asm();
        }
        #line 1742 
        long tmp = (long)(__ret_warn_on != 0);
      }
    }
  #line 1747 
  if (synthetic_pu_workaround != 0) 
                                    #line 1748 
                                    b43legacy_synth_pu_workaround(dev,(unsigned char)((int)channel));
  #line 1750 
  ;
  #line 1750 
  b43legacy_write16(dev,(unsigned short)1008,(unsigned short)((int)channel2freq_bg((unsigned char)((int)channel))));
  #line 1753 
  if ((unsigned int)channel == 14U) {
    #line 1754 
    if ((unsigned int)((dev->dev)->bus)->sprom.country_code == 5U) {
      #line 1755 
      ;
      #line 1755 
      b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94) & 4294967167U);
    }
    else {
      #line 1762 
      ;
      #line 1762 
      b43legacy_shm_write32(dev,(unsigned short)1,(unsigned short)94,b43legacy_shm_read32(dev,(unsigned short)1,(unsigned short)94) | 128U);
    }
    #line 1768 
    ;
    #line 1768 
    b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)((unsigned int)b43legacy_read16(dev,(unsigned short)1012) | 2048U)));
  }
  else {
    #line 1772 
    ;
    #line 1772 
    b43legacy_write16(dev,(unsigned short)1012,(unsigned short)((int)b43legacy_read16(dev,(unsigned short)1012) & 63423));
  }
  #line 1776 
  phy->channel = channel;
  #line 1779 
  msleep(8U);
  #line 1781 
  return 0;
}

#line 1784  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_set_txantenna(struct b43legacy_wldev *dev, u32 val)
{
  #line 1786 
  u16 tmp;
  #line 1788 
  val <<= 8;
  #line 1789 
  tmp = (unsigned short)((unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)34) & 64767U);
  #line 1790 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)34,(unsigned short)((int)((unsigned short)val) | (int)tmp));
  #line 1791 
  tmp = (unsigned short)((unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)936) & 64767U);
  #line 1792 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)936,(unsigned short)((int)((unsigned short)val) | (int)tmp));
  #line 1793 
  tmp = (unsigned short)((unsigned int)b43legacy_shm_read16(dev,(unsigned short)1,(unsigned short)84) & 64767U);
  #line 1794 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)84,(unsigned short)((int)((unsigned short)val) | (int)tmp));
  #line 1795 
  return;
}

#line 1798  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 b43legacy_get_txgain_base_band(u16 txpower)
{
  #line 1800 
  u16 ret;
  {
    #line 1802 
    int __ret_warn_on = (unsigned int)txpower > 63U;
    #line 1802 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1803 
      ldv_inline_asm();
      #line 1804 
      ldv_inline_asm();
    }
    #line 1802 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1804 
  if ((unsigned int)txpower > 53U) 
                                   #line 1805 
                                   ret = (unsigned short)2U;
  else 
    #line 1806 
    if ((unsigned int)txpower > 48U) 
                                     #line 1807 
                                     ret = (unsigned short)4U;
    else 
      #line 1808 
      if ((unsigned int)txpower > 43U) 
                                       #line 1809 
                                       ret = (unsigned short)5U; else 
                                                                   #line 1811 
                                                                   ret = (unsigned short)6U;
  #line 1813 
  return ret;
}

#line 1817  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 b43legacy_get_txgain_freq_power_amp(u16 txpower)
{
  #line 1819 
  u16 ret;
  {
    #line 1821 
    int __ret_warn_on = (unsigned int)txpower > 63U;
    #line 1821 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1822 
      ldv_inline_asm();
      #line 1823 
      ldv_inline_asm();
    }
    #line 1821 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1823 
  if ((unsigned int)txpower > 31U) 
                                   #line 1824 
                                   ret = (unsigned short)0U;
  else 
    #line 1825 
    if ((unsigned int)txpower > 24U) 
                                     #line 1826 
                                     ret = (unsigned short)1U;
    else 
      #line 1827 
      if ((unsigned int)txpower > 19U) 
                                       #line 1828 
                                       ret = (unsigned short)2U;
      else 
        #line 1829 
        if ((unsigned int)txpower > 11U) 
                                         #line 1830 
                                         ret = (unsigned short)3U; else 
                                                                    #line 1832 
                                                                    ret = (unsigned short)4U;
  #line 1834 
  return ret;
}

#line 1838  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
static u16 b43legacy_get_txgain_dac(u16 txpower)
{
  #line 1840 
  u16 ret;
  {
    #line 1842 
    int __ret_warn_on = (unsigned int)txpower > 63U;
    #line 1842 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1843 
      ldv_inline_asm();
      #line 1844 
      ldv_inline_asm();
    }
    #line 1842 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1844 
  if ((unsigned int)txpower > 53U) 
                                   #line 1845 
                                   ret = (unsigned short)((unsigned int)txpower + 65483U);
  else 
    #line 1846 
    if ((unsigned int)txpower > 48U) 
                                     #line 1847 
                                     ret = (unsigned short)((unsigned int)txpower + 65494U);
    else 
      #line 1848 
      if ((unsigned int)txpower > 43U) 
                                       #line 1849 
                                       ret = (unsigned short)((unsigned int)txpower + 65499U);
      else 
        #line 1850 
        if ((unsigned int)txpower > 31U) 
                                         #line 1851 
                                         ret = (unsigned short)((unsigned int)txpower + 65504U);
        else 
          #line 1852 
          if ((unsigned int)txpower > 24U) 
                                           #line 1853 
                                           ret = (unsigned short)((unsigned int)txpower + 65516U);
          else 
            #line 1854 
            if ((unsigned int)txpower > 19U) 
                                             #line 1855 
                                             ret = (unsigned short)((unsigned int)txpower + 65523U);
            else 
              #line 1856 
              if ((unsigned int)txpower > 11U) 
                                               #line 1857 
                                               ret = (unsigned short)((unsigned int)txpower + 65528U); else 
                                                                    #line 1859 
                                                                    ret = txpower;
  #line 1861 
  return ret;
}

#line 1864  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_set_txpower_a(struct b43legacy_wldev *dev, u16 txpower)
{
  #line 1872 
  unsigned short __UNIQUE_ID___x599;
  #line 1872 
  int tmp_1;
  #line 1867 
  u16 pamp;
  #line 1868 
  u16 base;
  #line 1869 
  u16 dac;
  #line 1870 
  u16 ilt;
  #line 1866 
  struct b43legacy_phy *phy = & dev->phy;
  {
    #line 1872 
    unsigned short __UNIQUE_ID___x597;
    #line 1872 
    int tmp;
    {
      #line 1872 
      __UNIQUE_ID___x597 = txpower;
      #line 1872 
      unsigned short __UNIQUE_ID___y598 = (unsigned short)0U;
      #line 1872 
      if ((int)__UNIQUE_ID___x597 > (int)__UNIQUE_ID___y598) 
                                                             #line 1872 
                                                             tmp = (int)__UNIQUE_ID___x597; else 
                                                                    #line 1872 
                                                                    tmp = (int)__UNIQUE_ID___y598;
      }
    #line 1872 
    __UNIQUE_ID___x599 = (unsigned short)tmp;
    #line 1872 
    unsigned short __UNIQUE_ID___y600 = (unsigned short)63U;
    #line 1872 
    if ((int)__UNIQUE_ID___x599 < (int)__UNIQUE_ID___y600) 
                                                           #line 1872 
                                                           tmp_1 = (int)__UNIQUE_ID___x599; else 
                                                                    #line 1872 
                                                                    tmp_1 = (int)__UNIQUE_ID___y600;
    }
  #line 1872 
  txpower = (unsigned short)tmp_1;
  #line 1874 
  pamp = b43legacy_get_txgain_freq_power_amp((unsigned short)((int)txpower));
  #line 1875 
  pamp = (unsigned short)((int)pamp << 5U);
  #line 1876 
  pamp = (unsigned short)((unsigned int)pamp & 224U);
  #line 1877 
  b43legacy_phy_write(dev,(unsigned short)25,(unsigned short)((int)pamp));
  #line 1879 
  base = b43legacy_get_txgain_base_band((unsigned short)((int)txpower));
  #line 1880 
  base = (unsigned short)((unsigned int)base & 15U);
  #line 1881 
  b43legacy_phy_write(dev,(unsigned short)23,(unsigned short)((int)((unsigned int)base | 32U)));
  #line 1883 
  ilt = b43legacy_ilt_read(dev,(unsigned short)12289);
  #line 1884 
  ilt = (unsigned short)((unsigned int)ilt & 7U);
  #line 1886 
  dac = b43legacy_get_txgain_dac((unsigned short)((int)txpower));
  #line 1887 
  dac = (unsigned short)((int)dac << 3U);
  #line 1888 
  dac = (unsigned short)((int)dac | (int)ilt);
  #line 1890 
  b43legacy_ilt_write(dev,(unsigned short)12289,(unsigned short)((int)dac));
  #line 1892 
  phy->__anonCompField_b43legacy_phy_209.txpwr_offset = txpower;
  #line 1893 
  return;
}

#line 1897  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_set_txpower_bg(struct b43legacy_wldev *dev, u16 baseband_attenuation, u16 radio_attenuation, u16 txpower)
{
  #line 1902 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1904 
  if ((unsigned int)baseband_attenuation == 65535U) 
                                                    #line 1905 
                                                    baseband_attenuation = phy->__anonCompField_b43legacy_phy_208.bbatt;
  #line 1906 
  if ((unsigned int)radio_attenuation == 65535U) 
                                                 #line 1907 
                                                 radio_attenuation = phy->__anonCompField_b43legacy_phy_208.rfatt;
  #line 1908 
  if ((unsigned int)txpower == 65535U) 
                                       #line 1909 
                                       txpower = phy->__anonCompField_b43legacy_phy_208.txctl1;
  #line 1910 
  phy->__anonCompField_b43legacy_phy_208.bbatt = baseband_attenuation;
  #line 1911 
  phy->__anonCompField_b43legacy_phy_208.rfatt = radio_attenuation;
  #line 1912 
  phy->__anonCompField_b43legacy_phy_208.txctl1 = txpower;
  {
    #line 1914 
    int __ret_warn_on = (unsigned int)baseband_attenuation > 11U;
    #line 1914 
    if ((long)(__ret_warn_on != 0) != 0L) {
      #line 1915 
      ldv_inline_asm();
      #line 1916 
      ldv_inline_asm();
    }
    #line 1914 
    long tmp = (long)(__ret_warn_on != 0);
  }
  #line 1915 
  if ((unsigned int)phy->radio_rev <= 5U) {
    #line 1916 
    int __ret_warn_on_0 = (unsigned int)radio_attenuation > 9U;
    #line 1916 
    if ((long)(__ret_warn_on_0 != 0) != 0L) {
      #line 1917 
      ldv_inline_asm();
      #line 1918 
      ldv_inline_asm();
    }
    #line 1916 
    long tmp_3 = (long)(__ret_warn_on_0 != 0);
  }
  else {
    #line 1918 
    int __ret_warn_on_1 = (unsigned int)radio_attenuation > 31U;
    #line 1918 
    if ((long)(__ret_warn_on_1 != 0) != 0L) {
      #line 1919 
      ldv_inline_asm();
      #line 1920 
      ldv_inline_asm();
    }
    #line 1918 
    long tmp_5 = (long)(__ret_warn_on_1 != 0);
  }
  {
    #line 1919 
    int __ret_warn_on_2 = (unsigned int)txpower > 7U;
    #line 1919 
    if ((long)(__ret_warn_on_2 != 0) != 0L) {
      #line 1920 
      ldv_inline_asm();
      #line 1921 
      ldv_inline_asm();
    }
    #line 1919 
    long tmp_7 = (long)(__ret_warn_on_2 != 0);
  }
  #line 1921 
  b43legacy_phy_set_baseband_attenuation(dev,(unsigned short)((int)baseband_attenuation));
  #line 1922 
  b43legacy_radio_write16(dev,(unsigned short)67,(unsigned short)((int)radio_attenuation));
  #line 1923 
  b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)100,(unsigned short)((int)radio_attenuation));
  #line 1925 
  if ((unsigned int)phy->radio_ver == 8272U) {
    #line 1926 
    ;
    #line 1926 
    ;
    #line 1926 
    b43legacy_radio_write16(dev,(unsigned short)82,(unsigned short)((int)((unsigned short)(((int)b43legacy_radio_read16(dev,(unsigned short)82) & -113) | (((int)txpower << 4) & 112)))));
  }
  #line 1930 
  if ((unsigned int)phy->type == 2U) 
                                     #line 1931 
                                     b43legacy_phy_lo_adjust(dev,0);
  #line 1932 
  return;
}

#line 1934  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_default_baseband_attenuation(struct b43legacy_wldev *dev)
{
  #line 1936 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1938 
  if ((unsigned int)phy->radio_ver == 8272U && (unsigned int)phy->radio_rev <= 5U) 
    #line 1939 
    return (unsigned short)0U;
  #line 1940 
  return (unsigned short)2U;
}

#line 1943  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_default_radio_attenuation(struct b43legacy_wldev *dev)
{
  #line 1945 
  struct b43legacy_phy *phy = & dev->phy;
  #line 1946 
  u16 att = (unsigned short)65535U;
  #line 1948 
  switch ((int)phy->radio_ver) {
    #line 1949 
    case 8275: 
               #line 1949 
    ;
    #line 1950 
    switch ((int)phy->radio_rev) {
      #line 1951 
      case 1: 
              #line 1951 
      ;
      #line 1952 
      att = (unsigned short)6U;
      #line 1953 
      break;
    }
    #line 1955 
    break;
    #line 1956 
    case 8272: 
               #line 1956 
    ;
    #line 1957 
    switch ((int)phy->radio_rev) {
      #line 1958 
      case 0: 
              #line 1958 
      ;
      #line 1959 
      att = (unsigned short)5U;
      #line 1960 
      break;
      #line 1961 
      case 1: 
              #line 1961 
      ;
      #line 1962 
      if ((unsigned int)phy->type == 2U) {
        #line 1963 
        if ((int)is_bcm_board_vendor(dev) != 0) {
          #line 1963 
          if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1057U) {
            #line 1964 
            if ((unsigned int)((dev->dev)->bus)->sprom.board_rev > 29U) 
              #line 1966 
              att = (unsigned short)3U; else 
                                             #line 1963 
                                             goto _LAND_0;
          }
          else 
               #line 1963 
               goto _LAND_0;
        }
        else {
          #line 1963 
          _LAND_0: 
          #line 1967 
          if ((int)is_bcm_board_vendor(dev) != 0) 
            #line 1967 
            if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1046U) 
              #line 1969 
              att = (unsigned short)3U; else 
                                             #line 1971 
                                             att = (unsigned short)1U;
          else 
               #line 1971 
               att = (unsigned short)1U;
        }
      }
      else {
        #line 1973 
        if ((int)is_bcm_board_vendor(dev) != 0) 
          #line 1973 
          if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1057U) 
            #line 1974 
            if ((unsigned int)((dev->dev)->bus)->sprom.board_rev > 29U) 
              #line 1976 
              att = (unsigned short)7U; else 
                                             #line 1978 
                                             att = (unsigned short)6U;
          else 
               #line 1978 
               att = (unsigned short)6U;
        else 
             #line 1978 
             att = (unsigned short)6U;
      }
      #line 1980 
      break;
      #line 1981 
      case 2: 
              #line 1981 
      ;
      #line 1982 
      if ((unsigned int)phy->type == 2U) {
        #line 1983 
        if ((int)is_bcm_board_vendor(dev) != 0) {
          #line 1983 
          if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1057U) {
            #line 1984 
            if ((unsigned int)((dev->dev)->bus)->sprom.board_rev > 29U) 
              #line 1986 
              att = (unsigned short)3U; else 
                                             #line 1983 
                                             goto _LAND_3;
          }
          else 
               #line 1983 
               goto _LAND_3;
        }
        else {
          #line 1983 
          _LAND_3: 
          #line 1987 
          if ((int)is_bcm_board_vendor(dev) != 0) {
            #line 1987 
            if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1046U) 
              #line 1990 
              att = (unsigned short)5U; else 
                                             #line 1987 
                                             goto _LAND_1;
          }
          else {
            #line 1987 
            _LAND_1: 
                     #line 1991 
            ;
            #line 1991 
            if ((unsigned int)((dev->dev)->bus)->chip_id == 17184U) 
                                                                    #line 1992 
                                                                    att = (unsigned short)4U; else 
                                                                    #line 1994 
                                                                    att = (unsigned short)3U;
          }
        }
      }
      else 
           #line 1996 
           att = (unsigned short)6U;
      #line 1997 
      break;
      #line 1998 
      case 3: 
              #line 1998 
      ;
      #line 1999 
      att = (unsigned short)5U;
      #line 2000 
      break;
      #line 2001 
      case 4: 
              #line 2001 
      ;
      #line 2002 
      case 5: 
              #line 2002 
      ;
      #line 2003 
      att = (unsigned short)1U;
      #line 2004 
      break;
      #line 2005 
      case 6: 
              #line 2005 
      ;
      #line 2006 
      case 7: 
              #line 2006 
      ;
      #line 2007 
      att = (unsigned short)5U;
      #line 2008 
      break;
      #line 2009 
      case 8: 
              #line 2009 
      ;
      #line 2010 
      att = (unsigned short)26U;
      #line 2011 
      break;
      #line 2012 
      case 9: 
              #line 2012 
      ;
      #line 2013 
      default: 
               #line 2013 
      ;
      #line 2014 
      att = (unsigned short)5U;
    }
  }
  #line 2017 
  if ((int)is_bcm_board_vendor(dev) != 0) 
    #line 2017 
    if ((unsigned int)((dev->dev)->bus)->boardinfo.type == 1057U) 
      #line 2019 
      if ((unsigned int)((dev->dev)->bus)->sprom.board_rev <= 66U) 
                                                                   #line 2020 
                                                                   att = (unsigned short)2U;
      else 
        #line 2021 
        if ((unsigned int)((dev->dev)->bus)->sprom.board_rev <= 80U) 
          #line 2022 
          att = (unsigned short)3U;
  #line 2024 
  if ((unsigned int)att == 65535U) 
                                   #line 2025 
                                   att = (unsigned short)5U;
  #line 2027 
  return att;
}

#line 2030  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
u16 b43legacy_default_txctl1(struct b43legacy_wldev *dev)
{
  #line 2032 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2034 
  if ((unsigned int)phy->radio_ver != 8272U) 
                                             #line 2035 
                                             return (unsigned short)0U;
  #line 2036 
  if ((unsigned int)phy->radio_rev == 1U) 
                                          #line 2037 
                                          return (unsigned short)3U;
  #line 2038 
  if ((unsigned int)phy->radio_rev <= 5U) 
                                          #line 2039 
                                          return (unsigned short)2U;
  #line 2040 
  if ((unsigned int)phy->radio_rev == 8U) 
                                          #line 2041 
                                          return (unsigned short)1U;
  #line 2042 
  return (unsigned short)0U;
}

#line 2045  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_turn_on(struct b43legacy_wldev *dev)
{
  #line 2048 
  int err;
  #line 2049 
  u8 channel;
  #line 2047 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2051 
  __might_sleep((char *)"/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c",2051,0);
  #line 2053 
  if ((int)phy->radio_on != 0) 
                               #line 2054 
                               return;
  #line 2056 
  switch ((int)phy->type) {
    #line 2061 
    int tmp;
    #line 2057 
    case 1: 
            #line 2057 
    ;
    #line 2058 
    case 2: 
            #line 2058 
    ;
    #line 2059 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)32768);
    #line 2060 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)52224);
    #line 2061 
    if ((int)phy->gmode != 0) 
                              #line 2061 
                              tmp = 192; else 
                                              #line 2061 
                                              tmp = 0;
    #line 2061 
    ;
    #line 2061 
    b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)tmp);
    #line 2063 
    if ((int)phy->radio_off_context.valid != 0) {
      #line 2065 
      b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)phy->radio_off_context.rfover));
      #line 2067 
      b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)phy->radio_off_context.rfoverval));
      #line 2069 
      phy->radio_off_context.valid = (_Bool)0;
    }
    #line 2071 
    channel = phy->channel;
    #line 2072 
    err = b43legacy_radio_selectchannel(dev,(unsigned char)6,1);
    #line 2074 
    err = b43legacy_radio_selectchannel(dev,(unsigned char)((int)channel),0) | err;
    {
      #line 2075 
      int __ret_warn_on = err != 0;
      #line 2075 
      if ((long)(__ret_warn_on != 0) != 0L) {
        #line 2076 
        ldv_inline_asm();
        #line 2077 
        ldv_inline_asm();
      }
      #line 2075 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    #line 2076 
    break;
    #line 2077 
    default: 
             #line 2077 
    ;
    #line 2078 
    printk((char *)"\001",(char *)"1");
    #line 2079 
    ldv_inline_asm();
    #line 2080 
    ldv_inline_asm();
    #line 2081 
    ldv_inline_asm();
    #line 2078 
    ;
  }
  #line 2080 
  phy->radio_on = (_Bool)1;
  #line 2081 
  return;
}

#line 2083  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_turn_off(struct b43legacy_wldev *dev, bool force)
{
  #line 2085 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2087 
  if (! phy->radio_on && ! force) 
                                  #line 2088 
                                  return;
  #line 2090 
  if ((unsigned int)phy->type == 2U && (unsigned int)(dev->dev)->id.revision > 4U) {
    #line 2091 
    u16 rfover;
    #line 2091 
    u16 rfoverval;
    #line 2093 
    rfover = b43legacy_phy_read(dev,(unsigned short)2065);
    #line 2094 
    rfoverval = b43legacy_phy_read(dev,(unsigned short)2066);
    #line 2095 
    if (! force) {
      #line 2096 
      phy->radio_off_context.rfover = rfover;
      #line 2097 
      phy->radio_off_context.rfoverval = rfoverval;
      #line 2098 
      phy->radio_off_context.valid = (_Bool)1;
    }
    #line 2100 
    b43legacy_phy_write(dev,(unsigned short)2065,(unsigned short)((int)((unsigned int)rfover | 140U)));
    #line 2101 
    b43legacy_phy_write(dev,(unsigned short)2066,(unsigned short)((int)rfoverval & 65395));
  }
  else 
       #line 2104 
       b43legacy_phy_write(dev,(unsigned short)21,(unsigned short)43520);
  #line 2105 
  phy->radio_on = (_Bool)0;
  #line 2106 
  b43legacydbg(dev->wl,(char *)"Radio initialized\n");
  #line 2107 
  return;
}

#line 2109  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/drivers/net/wireless/broadcom/b43legacy/radio.c"
void b43legacy_radio_clear_tssi(struct b43legacy_wldev *dev)
{
  #line 2111 
  struct b43legacy_phy *phy = & dev->phy;
  #line 2113 
  switch ((int)phy->type) {
    #line 2114 
    case 1: 
            #line 2114 
    ;
    #line 2115 
    case 2: 
            #line 2115 
    ;
    #line 2116 
    b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)88,(unsigned short)32639);
    #line 2118 
    b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)90,(unsigned short)32639);
    #line 2120 
    b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)112,(unsigned short)32639);
    #line 2122 
    b43legacy_shm_write16(dev,(unsigned short)1,(unsigned short)114,(unsigned short)32639);
    #line 2124 
    break;
  }
  #line 2126 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/common/inline_asm.c"
void ldv_inline_asm(void)
{
  #line 24 
  return;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  #line 22 
  v->counter += i;
  #line 23 
  return;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  #line 27 
  v->counter -= i;
  #line 28 
  return;
}

#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  #line 32 
  v->counter -= i;
  #line 33 
  if (v->counter != 0) 
                       #line 34 
                       return 0;
  #line 36 
  return 1;
}

#line 39  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  #line 41 
  (v->counter) ++;
  #line 42 
  return;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  #line 46 
  (v->counter) --;
  #line 47 
  return;
}

#line 49  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  #line 51 
  (v->counter) --;
  #line 52 
  if (v->counter != 0) 
                       #line 53 
                       return 0;
  #line 55 
  return 1;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  #line 60 
  (v->counter) ++;
  #line 61 
  if (v->counter != 0) 
                       #line 62 
                       return 0;
  #line 64 
  return 1;
}

#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  #line 69 
  v->counter += i;
  #line 70 
  return v->counter;
}

#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  #line 75 
  v->counter += i;
  #line 76 
  return v->counter < 0;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  #line 81 
  *v = (short)((unsigned int)*v + 1U);
  #line 82 
  return (int)*v;
}

#line 20  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
static struct task_struct ldv_current;
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/arch/asm/current.c"
struct task_struct *ldv_get_current(void)
{
  #line 28 
  ldv_current.pid = 1;
  #line 29 
  return & ldv_current;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void);
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void);
#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void);
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val);
#line 132  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val);
#line 133  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 133 
void ldv_check_return_value_probe(int);
#line 141 
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 23 
void __VERIFIER_assume(int);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_interrupt_context(void)
{
  #line 31 
  __ldv_in_interrupt_context = (_Bool)1;
  #line 32 
  return;
}

#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
void ldv_switch_to_process_context(void)
{
  #line 37 
  __ldv_in_interrupt_context = (_Bool)0;
  #line 38 
  return;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
bool ldv_in_interrupt_context(void)
{
  #line 42 
  return __ldv_in_interrupt_context;
}

#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
static int ldv_filter_positive_int(int val)
{
  #line 47 
  __VERIFIER_assume(val <= 0);
  #line 48 
  return val;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_init(int init_ret_val)
{
  #line 57 
  return ldv_filter_positive_int(init_ret_val);
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_post_probe(int probe_ret_val)
{
  #line 63 
  ldv_check_return_value_probe(probe_ret_val);
  #line 64 
  return ldv_filter_positive_int(probe_ret_val);
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/common.c"
int ldv_filter_err_code(int ret_val)
{
  #line 70 
  return ldv_filter_positive_int(ret_val);
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/common/list.h"
#line 28 
void ldv_save_allocated_memory_to_list(void *);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/device.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data);
#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 57 
void *ldv_xzalloc(size_t size);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device *dev)
{
  #line 31 
  if (dev != (struct device *)0 && dev->p != (struct device_private *)0) 
    #line 32 
    return (dev->p)->driver_data;
  #line 34 
  return (void *)0;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  #line 45 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  #line 46 
  ldv_save_allocated_memory_to_list((void *)dev->p);
  #line 47 
  (dev->p)->driver_data = data;
  #line 49 
  return 0;
}

#line 156  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 156 
void ldv_check_alloc_flags(gfp_t);
#line 48  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 48 
void *ldv_malloc(size_t size);
#line 49 
#line 49 
void *ldv_calloc(size_t nmemb, size_t size);
#line 50 
#line 50 
void *ldv_zalloc(size_t size);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc(size_t size, gfp_t flags)
{
  #line 26 
  void *res;
  #line 28 
  ldv_check_alloc_flags(flags);
  #line 29 
  res = ldv_malloc(size);
  #line 30 
  ldv_save_allocated_memory_to_list(res);
  #line 32 
  return res;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kzalloc(size_t size, gfp_t flags)
{
  #line 37 
  void *res;
  #line 39 
  ldv_check_alloc_flags(flags);
  #line 40 
  res = ldv_zalloc(size);
  #line 41 
  ldv_save_allocated_memory_to_list(res);
  #line 43 
  return res;
}

#line 46  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 48 
  void *res;
  #line 50 
  ldv_check_alloc_flags(flags);
  #line 51 
  res = ldv_malloc(n * size);
  #line 52 
  ldv_save_allocated_memory_to_list(res);
  #line 54 
  return res;
}

#line 57  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/devres.c"
void *ldv_devm_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 59 
  void *res;
  #line 61 
  ldv_check_alloc_flags(flags);
  #line 62 
  res = ldv_calloc(n,size);
  #line 63 
  ldv_save_allocated_memory_to_list(res);
  #line 65 
  return res;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 51 
void ldv_free(void *s);
#line 59 
#line 59 
void *ldv_malloc_unknown_size(void);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 31 
int ldv_undef_int_positive(void);
#line 40 
#line 40 
int ldv_undef_int_nonpositive(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
int ldv_request_firmware(struct firmware **fw)
{
  #line 27 
  int retval;
  #line 26 
  struct firmware *_fw = (struct firmware *)0;
  #line 29 
  retval = ldv_undef_int_nonpositive();
  #line 31 
  if (retval == 0) {
    #line 33 
    _fw = (struct firmware *)ldv_xzalloc(32UL);
    #line 34 
    _fw->data = (u8 *)ldv_malloc_unknown_size();
    #line 35 
    __VERIFIER_assume(_fw->data != (u8 *)0U);
    #line 36 
    _fw->size = (unsigned long)ldv_undef_int_positive();
  }
  #line 39 
  *fw = _fw;
  #line 41 
  return retval;
}

#line 44  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/base/firmware_loader.c"
void ldv_release_firmware(struct firmware *fw)
{
  #line 46 
  if (fw != (struct firmware *)0) {
    #line 48 
    ldv_free((void *)fw->data);
    #line 49 
    ldv_free((void *)fw);
  }
  #line 51 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/i2c.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values);
#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 55 
void *ldv_xmalloc(size_t size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 23 
int ldv_undef_int(void);
#line 34 
#line 34 
int ldv_undef_int_negative(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/i2c/i2c-core-smbus.c"
s32 ldv_i2c_smbus_read_block_data(u8 *values)
{
  #line 27 
  __u8 size;
  #line 28 
  char *bytes;
  #line 30 
  if (ldv_undef_int() != 0) {
    #line 33 
    size = (unsigned char)ldv_undef_int_positive();
    #line 35 
    __VERIFIER_assume((unsigned int)size <= 32U);
    #line 37 
    bytes = (char *)ldv_xmalloc((unsigned long)size);
    #line 39 
    memcpy((void *)values,(void *)bytes,(unsigned long)size);
    #line 40 
    ldv_free((void *)bytes);
    #line 42 
    return (int)size;
  }
  else {
    #line 46 
    return ldv_undef_int_negative();
  }
}

#line 988  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/media/v4l2-subdev.h"
__inline static void v4l2_set_subdevdata(struct v4l2_subdev *sd, void *p)
{
  #line 990 
  sd->dev_priv = p;
  #line 991 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/media/v4l2-common.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/media/v4l2-core/v4l2-i2c.c"
void ldv_v4l2_i2c_subdev_init(struct v4l2_subdev *sd, struct i2c_client *client, struct v4l2_subdev_ops *ops)
{
  #line 26 
  sd->ops = ops;
  #line 27 
  v4l2_set_subdevdata(sd,(void *)client);
  #line 28 
  ldv_dev_set_drvdata(& client->dev,(void *)sd);
  #line 29 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_controller *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  #line 25 
  struct spi_controller *master;
  #line 27 
  master = (struct spi_controller *)ldv_zalloc((unsigned long)size + 2936UL);
  #line 29 
  if (master == (struct spi_controller *)0) 
                                            #line 30 
                                            return (struct spi_controller *)0;
  #line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  #line 34 
  return master;
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/fb.h"
#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
struct fb_info *ldv_framebuffer_alloc(size_t size)
{
  #line 25 
  struct fb_info *info;
  #line 27 
  info = (struct fb_info *)ldv_zalloc(size + 1568UL);
  #line 29 
  if (info == (struct fb_info *)0) 
                                   #line 30 
                                   return (struct fb_info *)0;
  #line 32 
  if (size != 0UL) 
                   #line 33 
                   info->par = (void *)((char *)info + 1568UL);
  #line 35 
  return info;
}

#line 38  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/drivers/video/fbdev/core/fbsysfs.c"
void ldv_framebuffer_release(struct fb_info *info)
{
  #line 40 
  if (info == (struct fb_info *)0) 
                                   #line 41 
                                   return;
  #line 44 
  ldv_free((void *)info->apertures);
  #line 46 
  ldv_free((void *)info);
  #line 47 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/err.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err(void *ptr)
{
  #line 29 
  if ((unsigned long)ptr > 18446744073709547520UL) 
                                                   #line 30 
                                                   return (_Bool)1; else 
                                                                    #line 32 
                                                                    return (_Bool)0;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  #line 37 
  unsigned long result;
  #line 39 
  __VERIFIER_assume(error < 0L);
  #line 40 
  __VERIFIER_assume(error >= -4095L);
  #line 41 
  result = 18446744073709547520UL - (unsigned long)error;
  #line 42 
  __VERIFIER_assume(result > 18446744073709547520UL);
  #line 44 
  return (void *)result;
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void *ptr)
{
  #line 49 
  long result;
  #line 51 
  __VERIFIER_assume((unsigned long)ptr > 18446744073709547520UL);
  #line 52 
  result = (long)(18446744073709547520UL - (unsigned long)ptr);
  #line 53 
  __VERIFIER_assume(result < 0L);
  #line 54 
  __VERIFIER_assume(result >= -4095L);
  #line 56 
  return result;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/err.c"
bool ldv_is_err_or_null(void *ptr)
{
  #line 61 
  int tmp_0;
  #line 61 
  if (ptr == (void *)0) 
                        #line 61 
                        tmp_0 = 1;
  else {
    #line 61 
    if ((int)ldv_is_err(ptr) != 0) 
                                   #line 61 
                                   tmp_0 = 1; else 
                                                   #line 61 
                                                   tmp_0 = 0;
  }
  #line 61 
  return (_Bool)(tmp_0 != 0);
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/panic.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  #line 23 
  __VERIFIER_assume(0);
  #line 24 
  return;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits);
#line 29  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/bitmap.h"
#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 22 
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 23 
#line 23 
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_set_bit(long nr, unsigned long *addr)
{
  #line 24 
  *(addr + (unsigned long)nr / 64UL) |= 1UL << ((unsigned long)nr & 63UL);
  #line 25 
  return;
}

#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_clear_bit(long nr, unsigned long *addr)
{
  #line 29 
  *(addr + (unsigned long)nr / 64UL) &= ~ (1UL << ((unsigned long)nr & 63UL));
  #line 30 
  return;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_set(unsigned long *map, unsigned int start, int nbits)
{
  #line 34 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 35 
  unsigned int size = start + (unsigned int)nbits;
  #line 36 
  int bits_to_set = (int)(64U - (start & 63U));
  #line 37 
  unsigned long mask_to_set = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 39 
  while (nbits - bits_to_set >= 0) {
    #line 40 
    *p |= mask_to_set;
    #line 41 
    nbits -= bits_to_set;
    #line 42 
    bits_to_set = 64;
    #line 43 
    mask_to_set = 18446744073709551615UL;
    #line 44 
    p ++;
  }
  #line 46 
  if (nbits != 0) {
    #line 47 
    mask_to_set = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_set;
    #line 48 
    *p |= mask_to_set;
  }
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_clear(unsigned long *map, unsigned int start, int nbits)
{
  #line 54 
  unsigned long *p = map + (unsigned long)(start / 64U);
  #line 55 
  unsigned int size = start + (unsigned int)nbits;
  #line 56 
  int bits_to_clear = (int)(64U - (start & 63U));
  #line 57 
  unsigned long mask_to_clear = 18446744073709551615UL << ((unsigned long)start & 63UL);
  #line 59 
  while (nbits - bits_to_clear >= 0) {
    #line 60 
    *p &= ~ mask_to_clear;
    #line 61 
    nbits -= bits_to_clear;
    #line 62 
    bits_to_clear = 64;
    #line 63 
    mask_to_clear = 18446744073709551615UL;
    #line 64 
    p ++;
  }
  #line 66 
  if (nbits != 0) {
    #line 67 
    mask_to_clear = (18446744073709551615UL >> ((unsigned long)(- size) & 63UL)) & mask_to_clear;
    #line 68 
    *p &= ~ mask_to_clear;
  }
  #line 70 
  return;
}

#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
void ldv_bitmap_zero(unsigned long *dst, unsigned int nbits)
{
  #line 74 
  unsigned int len = (unsigned int)(((unsigned long)nbits + 63UL) / 64UL) * 8U;
  #line 75 
  memset((void *)dst,0,(unsigned long)len);
  #line 76 
  return;
}

#line 78  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/bitmap.c"
unsigned long ldv_bitmap_find_next_zero_area(unsigned long *map, unsigned long size, unsigned long start, unsigned int nr, unsigned long align_mask)
{
  #line 80 
  unsigned long index;
  #line 80 
  unsigned long end;
  #line 80 
  unsigned long i;
  #line 82 
  again: 
         #line 82 
  ;
  #line 83 
  index = ldv_find_next_zero_bit(map,size,start);
  #line 84 
  index = (index + align_mask) & ~ align_mask;
  #line 85 
  end = (unsigned long)nr + index;
  #line 87 
  if (end > size) 
                  #line 88 
                  return end;
  #line 90 
  i = ldv_find_next_bit(map,end,index);
  #line 92 
  if (i < end) {
    #line 93 
    start = i + 1UL;
    #line 94 
    goto again;
  }
  #line 97 
  return index;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/find_bit.h"
#line 25 
void ldv_check_find_bit_offset(unsigned long, unsigned long);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_ffs(unsigned long word)
{
  #line 23 
  int num = 0;
  #line 25 
  if ((word & 4294967295UL) == 0UL) {
    #line 26 
    num += 32;
    #line 27 
    word >>= 32;
  }
  #line 29 
  if ((word & 65535UL) == 0UL) {
    #line 30 
    num += 16;
    #line 31 
    word >>= 16;
  }
  #line 33 
  if ((word & 255UL) == 0UL) {
    #line 34 
    num += 8;
    #line 35 
    word >>= 8;
  }
  #line 37 
  if ((word & 15UL) == 0UL) {
    #line 38 
    num += 4;
    #line 39 
    word >>= 4;
  }
  #line 41 
  if ((word & 3UL) == 0UL) {
    #line 42 
    num += 2;
    #line 43 
    word >>= 2;
  }
  #line 45 
  if ((word & 1UL) == 0UL) 
                           #line 46 
                           num ++;
  #line 48 
  return (unsigned long)num;
}

#line 51  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_min(unsigned long a, unsigned long b)
{
  #line 53 
  if (a < b) 
             #line 54 
             return a;
  #line 56 
  return b;
}

#line 59  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
static unsigned long ldv_restrict_find_bit_res(unsigned long res, unsigned long size)
{
  #line 62 
  __VERIFIER_assume(1);
  #line 63 
  __VERIFIER_assume(res <= size);
  #line 65 
  return res;
}

#line 68  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_first_bit(unsigned long *addr, unsigned long size)
{
  #line 70 
  unsigned long i;
  #line 72 
  i = 0UL;
  #line 72 
  while (i * 64UL < size) {
    #line 73 
    if (*(addr + i) != 0UL) {
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      ;
      #line 74 
      return ldv_restrict_find_bit_res(ldv_min(i * 64UL + ldv_ffs(*(addr + i)),size),
                                  size);
    }
    #line 72 
    i ++;
  }
  #line 76 
  return size;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 81 
  unsigned long tmp;
  #line 83 
  ldv_check_find_bit_offset(size,offset);
  #line 85 
  tmp = *(addr + offset / 64UL);
  #line 86 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 87 
  offset &= 18446744073709551552UL;
  #line 89 
  while (tmp == 0UL) {
    #line 90 
    offset += 64UL;
    #line 91 
    if (offset >= size) 
                        #line 92 
                        return size;
    #line 94 
    tmp = *(addr + offset / 64UL);
  }
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  ;
  #line 97 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/find_bit.common.c"
unsigned long ldv_find_next_zero_bit(unsigned long *addr, unsigned long size, unsigned long offset)
{
  #line 102 
  unsigned long tmp;
  #line 104 
  ldv_check_find_bit_offset(size,offset);
  #line 106 
  tmp = *(addr + offset / 64UL);
  #line 107 
  tmp = ~ tmp;
  #line 108 
  tmp = (unsigned long)((18446744073709551615ULL << (offset & 63UL)) & (unsigned long long)tmp);
  #line 109 
  offset &= 18446744073709551552UL;
  #line 111 
  while (tmp == 0UL) {
    #line 112 
    offset += 64UL;
    #line 113 
    if (offset >= size) 
                        #line 114 
                        return size;
    #line 116 
    tmp = *(addr + offset / 64UL);
    #line 117 
    tmp = ~ tmp;
  }
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  ;
  #line 120 
  return ldv_restrict_find_bit_res(ldv_min(ldv_ffs(tmp) + offset,size),size);
}

#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
size_t ldv_strlen(char *s)
{
  #line 23 
  unsigned int len = 0U;
  #line 25 
  while ((int)*s != 0) {
    #line 26 
    len ++;
    #line 25 
    s ++;
  }
  #line 28 
  return (unsigned long)len;
}

#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strcmp(char *cs, char *ct)
{
  #line 33 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 34 
    if ((int)*cs != (int)*ct) 
                              #line 35 
                              break;
    #line 33 
    cs ++;
    #line 33 
    ct ++;
  }
  #line 37 
  return (int)*cs - (int)*ct;
}

#line 40  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_strncmp(char *cs, char *ct, __kernel_size_t count)
{
  #line 42 
  if (count == 0UL) 
                    #line 43 
                    return 0;
  #line 45 
  while ((int)*cs != 0 && (int)*ct != 0) {
    #line 46 
    if ((int)*cs != (int)*ct) 
                              #line 47 
                              break;
    #line 49 
    count --;
    #line 51 
    if (count == 0UL) 
                      #line 52 
                      break;
    #line 45 
    cs ++;
    #line 45 
    ct ++;
  }
  #line 55 
  return (int)*cs - (int)*ct;
}

#line 58  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
int ldv_memcmp(void *cs, void *ct, size_t count)
{
  #line 60 
  unsigned char *su1;
  #line 60 
  unsigned char *su2;
  #line 61 
  int res = 0;
  #line 63 
  su1 = (unsigned char *)cs;
  #line 63 
  su2 = (unsigned char *)ct;
  #line 63 
  while (count != 0UL) {
    #line 64 
    res = (int)*su1 - (int)*su2;
    #line 64 
    if (res != 0) 
                  #line 65 
                  break;
    #line 63 
    su1 ++;
    #line 63 
    su2 ++;
    #line 63 
    count --;
  }
  #line 67 
  return res;
}

#line 70  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/lib/string.c"
char *ldv_strstr(char *cs, char *ct)
{
  #line 72 
  size_t cs_len;
  #line 72 
  size_t ct_len;
  #line 74 
  cs_len = ldv_strlen(cs);
  #line 75 
  ct_len = ldv_strlen(ct);
  #line 77 
  while (cs_len >= ct_len) {
    #line 78 
    if (ldv_memcmp((void *)cs,(void *)ct,ct_len) == 0) 
                                                       #line 79 
                                                       return cs;
    #line 81 
    cs_len --;
    #line 82 
    cs ++;
  }
  #line 85 
  return (char *)0;
}

#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/list.c"
void ldv_init_list_head(struct list_head *list)
{
  #line 23 
  list->next = list;
  #line 24 
  list->prev = list;
  #line 25 
  return;
}

#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);
#line 30  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size);
#line 31  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);
#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags);
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp);
#line 34  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/slab.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(flags);
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_flags(flags);
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  #line 45 
  void *res;
  #line 47 
  ldv_check_alloc_flags(flags);
  #line 48 
  res = ldv_malloc(n * size);
  #line 50 
  return res;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  #line 55 
  void *res;
  #line 57 
  ldv_check_alloc_flags(flags);
  #line 58 
  res = ldv_calloc(n,size);
  #line 60 
  return res;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
struct kmem_cache *ldv_kmem_cache_create(char *name, unsigned int size)
{
  #line 71 
  struct kmem_cache *res;
  #line 72 
  struct ldv_kmem_cache *ldv_res;
  #line 74 
  res = (struct kmem_cache *)ldv_zalloc(16UL);
  #line 76 
  if (res != (struct kmem_cache *)0) {
    #line 77 
    ldv_res = (struct ldv_kmem_cache *)res;
    #line 78 
    ldv_res->name = name;
    #line 79 
    ldv_res->size = size;
  }
  #line 82 
  return res;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 87 
  return ldv_kmalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmem_cache_zalloc(struct kmem_cache *cachep, gfp_t flags)
{
  #line 92 
  return ldv_kzalloc((unsigned long)((struct ldv_kmem_cache *)cachep)->size,
                  flags);
}

#line 95  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_free(struct kmem_cache *cachep, void *objp)
{
  #line 97 
  ldv_free(objp);
  #line 98 
  return;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void ldv_kmem_cache_destroy(struct kmem_cache *cachep)
{
  #line 102 
  ldv_free((void *)cachep);
  #line 103 
  return;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/string.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/util.c"
void *ldv_kmemdup(void *src, size_t len, gfp_t gfp)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_flags(gfp);
  #line 28 
  res = ldv_malloc(len);
  #line 30 
  if (res != (void *)0) 
                        #line 31 
                        memcpy(res,src,len);
  #line 33 
  return res;
}

#line 162  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 162 
void ldv_check_alloc_nonatomic(void);
#line 21  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/vmalloc.h"
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr);
#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vmalloc(unsigned long size)
{
  #line 25 
  void *res;
  #line 27 
  ldv_check_alloc_nonatomic();
  #line 28 
  res = ldv_malloc(size);
  #line 30 
  return res;
}

#line 33  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void *ldv_vzalloc(unsigned long size)
{
  #line 35 
  void *res;
  #line 37 
  ldv_check_alloc_nonatomic();
  #line 38 
  res = ldv_zalloc(size);
  #line 40 
  return res;
}

#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/mm/vmalloc.c"
void ldv_vfree(void *addr)
{
  #line 45 
  ldv_free(addr);
  #line 46 
  return;
}

#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 28 
void *malloc(size_t);
#line 29 
#line 29 
void *calloc(size_t, size_t);
#line 30 
#line 30 
void free(void *);
#line 45 
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures;
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size);
#line 60  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void);
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void);
#line 64  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size);
#line 65  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size);
#line 66  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size);
#line 67  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s);
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size);
#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size);
#line 72  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size);
#line 73  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size);
#line 75  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void);
#line 76  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void);
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void);
#line 83  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size);
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);
#line 87  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/memory.h"
#line 87 
void *external_allocated_data(void);
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
unsigned int ldv_is_memory_alloc_failures = 1U;
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  #line 26 
  void *res;
  #line 28 
  if (ldv_is_memory_alloc_failures != 0U) {
    #line 28 
    if (ldv_undef_int() != 0) 
                              #line 29 
                              return (void *)0;
  }
  #line 32 
  res = malloc(size);
  #line 33 
  __VERIFIER_assume(res != (void *)0);
  #line 34 
  return res;
}

#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  #line 39 
  return calloc(nmemb,size);
}

#line 42  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  #line 44 
  return calloc(1UL,size);
}

#line 47  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  #line 49 
  free(s);
  #line 50 
  return;
}

#line 52  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  #line 54 
  void *res;
  #line 56 
  if (ptr != (void *)0 && size == 0UL) {
    #line 57 
    free(ptr);
    #line 58 
    return (void *)0;
  }
  #line 61 
  if (ptr == (void *)0) {
    #line 62 
    res = malloc(size);
    #line 63 
    return res;
  }
  #line 66 
  if (ldv_undef_int() != 0) {
    #line 68 
    res = malloc(size);
    #line 69 
    __VERIFIER_assume(res != (void *)0);
    #line 71 
    memcpy(res,ptr,size);
    #line 72 
    free(ptr);
    #line 74 
    return res;
  }
  else 
       #line 77 
       return (void *)0;
}

#line 80  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  #line 82 
  void *res;
  #line 84 
  res = malloc(size);
  #line 85 
  __VERIFIER_assume(res != (void *)0);
  #line 87 
  return res;
}

#line 90  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xcalloc(size_t nmemb, size_t size)
{
  #line 92 
  void *res;
  #line 94 
  res = calloc(nmemb,size);
  #line 95 
  __VERIFIER_assume(res != (void *)0);
  #line 97 
  return res;
}

#line 100  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  #line 102 
  void *res;
  #line 104 
  res = calloc(1UL,size);
  #line 105 
  __VERIFIER_assume(res != (void *)0);
  #line 107 
  return res;
}

#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  #line 112 
  void *res;
  #line 114 
  if (ldv_undef_int() != 0) {
    #line 116 
    res = external_allocated_data();
    #line 117 
    __VERIFIER_assume(res != (void *)0);
    #line 118 
    return res;
  }
  else 
       #line 121 
       return (void *)0;
}

#line 124  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  #line 126 
  void *res;
  #line 128 
  if (ldv_undef_int() != 0) {
    #line 130 
    res = external_allocated_data();
    #line 131 
    memset(res,0,8UL);
    #line 132 
    __VERIFIER_assume(res != (void *)0);
    #line 133 
    return res;
  }
  else 
       #line 136 
       return (void *)0;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  #line 141 
  return ldv_reference_calloc_unknown_size();
}

#line 144  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  #line 146 
  void *res;
  #line 149 
  res = external_allocated_data();
  #line 150 
  __VERIFIER_assume(res != (void *)0);
  #line 152 
  return res;
}

#line 23  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  #line 25 
  void *res;
  #line 26 
  res = ldv_reference_malloc(size);
  #line 27 
  if (res != (void *)0) {
    #line 28 
    int tmp_0;
    #line 28 
    if (ldv_is_err(res)) 
                         #line 28 
                         tmp_0 = 0; else 
                                         #line 28 
                                         tmp_0 = 1;
    #line 28 
    __VERIFIER_assume(tmp_0);
  }
  #line 29 
  return res;
}

#line 32  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  #line 34 
  void *res;
  #line 35 
  res = ldv_reference_calloc(nmemb,size);
  #line 36 
  if (res != (void *)0) {
    #line 37 
    int tmp_0;
    #line 37 
    if (ldv_is_err(res)) 
                         #line 37 
                         tmp_0 = 0; else 
                                         #line 37 
                                         tmp_0 = 1;
    #line 37 
    __VERIFIER_assume(tmp_0);
  }
  #line 38 
  return res;
}

#line 41  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  #line 43 
  void *res;
  #line 44 
  res = ldv_reference_zalloc(size);
  #line 45 
  if (res != (void *)0) {
    #line 46 
    int tmp_0;
    #line 46 
    if (ldv_is_err(res)) 
                         #line 46 
                         tmp_0 = 0; else 
                                         #line 46 
                                         tmp_0 = 1;
    #line 46 
    __VERIFIER_assume(tmp_0);
  }
  #line 47 
  return res;
}

#line 50  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  #line 52 
  ldv_reference_free(s);
  #line 53 
  return;
}

#line 55  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  #line 57 
  void *res;
  #line 59 
  int tmp_0;
  #line 58 
  res = ldv_reference_xmalloc(size);
  #line 59 
  if (ldv_is_err(res)) 
                       #line 59 
                       tmp_0 = 0; else 
                                       #line 59 
                                       tmp_0 = 1;
  #line 59 
  __VERIFIER_assume(tmp_0);
  #line 60 
  return res;
}

#line 63  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xcalloc(size_t nmemb, size_t size)
{
  #line 65 
  void *res;
  #line 67 
  int tmp_0;
  #line 66 
  res = ldv_reference_xcalloc(nmemb,size);
  #line 67 
  if (ldv_is_err(res)) 
                       #line 67 
                       tmp_0 = 0; else 
                                       #line 67 
                                       tmp_0 = 1;
  #line 67 
  __VERIFIER_assume(tmp_0);
  #line 68 
  return res;
}

#line 71  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  #line 73 
  void *res;
  #line 75 
  int tmp_0;
  #line 74 
  res = ldv_reference_xzalloc(size);
  #line 75 
  if (ldv_is_err(res)) 
                       #line 75 
                       tmp_0 = 0; else 
                                       #line 75 
                                       tmp_0 = 1;
  #line 75 
  __VERIFIER_assume(tmp_0);
  #line 76 
  return res;
}

#line 79  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  #line 81 
  void *res;
  #line 82 
  res = ldv_reference_malloc_unknown_size();
  #line 83 
  if (res != (void *)0) {
    #line 84 
    int tmp_0;
    #line 84 
    if (ldv_is_err(res)) 
                         #line 84 
                         tmp_0 = 0; else 
                                         #line 84 
                                         tmp_0 = 1;
    #line 84 
    __VERIFIER_assume(tmp_0);
  }
  #line 85 
  return res;
}

#line 88  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  #line 90 
  void *res;
  #line 91 
  res = ldv_reference_calloc_unknown_size();
  #line 92 
  if (res != (void *)0) {
    #line 93 
    int tmp_0;
    #line 93 
    if (ldv_is_err(res)) 
                         #line 93 
                         tmp_0 = 0; else 
                                         #line 93 
                                         tmp_0 = 1;
    #line 93 
    __VERIFIER_assume(tmp_0);
  }
  #line 94 
  return res;
}

#line 97  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  #line 99 
  void *res;
  #line 100 
  res = ldv_reference_zalloc_unknown_size();
  #line 101 
  if (res != (void *)0) {
    #line 102 
    int tmp_0;
    #line 102 
    if (ldv_is_err(res)) 
                         #line 102 
                         tmp_0 = 0; else 
                                         #line 102 
                                         tmp_0 = 1;
    #line 102 
    __VERIFIER_assume(tmp_0);
  }
  #line 103 
  return res;
}

#line 106  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  #line 108 
  void *res;
  #line 110 
  int tmp_0;
  #line 109 
  res = ldv_reference_xmalloc_unknown_size(size);
  #line 110 
  if (ldv_is_err(res)) 
                       #line 110 
                       tmp_0 = 0; else 
                                       #line 110 
                                       tmp_0 = 1;
  #line 110 
  __VERIFIER_assume(tmp_0);
  #line 111 
  return res;
}

/* compiler builtin: 
   long __builtin_expect(long exp, long c);   */
#line 22  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
#line 22 
void __VERIFIER_error(void);
#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/common.h"
long __builtin_expect(long exp, long c)
{
  #line 26 
  return exp;
}

#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  #line 37 
  __VERIFIER_error();
  #line 38 
  return;
}

#line 24  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void);
#line 25  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void);
#line 26  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void);
#line 27  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void);
#line 28  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void);
#line 37  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void);
#line 43  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void);
#line 54  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end);
#line 56  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/nondet.h"
#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end);
#line 29 
#line 29 
int __VERIFIER_nondet_int(void);
#line 31 
#line 31 
long __VERIFIER_nondet_long(void);
#line 38 
#line 38 
unsigned int __VERIFIER_nondet_uint(void);
#line 41 
#line 41 
unsigned long __VERIFIER_nondet_ulong(void);
#line 42 
#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);
#line 43 
#line 43 
void *__VERIFIER_nondet_pointer(void);
#line 45  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  #line 48 
  int undef_int = __VERIFIER_nondet_int();
  #line 50 
  return undef_int;
}

#line 53  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
long ldv_undef_long(void)
{
  #line 56 
  long undef_long = __VERIFIER_nondet_long();
  #line 58 
  return undef_long;
}

#line 61  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  #line 64 
  unsigned int undef_uint = __VERIFIER_nondet_uint();
  #line 66 
  return undef_uint;
}

#line 69  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  #line 72 
  void *undef_ptr = __VERIFIER_nondet_pointer();
  #line 74 
  return undef_ptr;
}

#line 77  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  #line 80 
  unsigned long undef_ulong = __VERIFIER_nondet_ulong();
  #line 82 
  return undef_ulong;
}

#line 85  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  #line 88 
  unsigned long long undef_ulonglong = __VERIFIER_nondet_ulonglong();
  #line 90 
  return undef_ulonglong;
}

#line 93  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  #line 95 
  int ret = ldv_undef_int();
  #line 97 
  __VERIFIER_assume(ret > 0);
  #line 99 
  return ret;
}

#line 102  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  #line 104 
  int ret = ldv_undef_int();
  #line 106 
  __VERIFIER_assume(ret < 0);
  #line 108 
  return ret;
}

#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonnegative(void)
{
  #line 113 
  int ret = ldv_undef_int();
  #line 115 
  __VERIFIER_assume(ret >= 0);
  #line 117 
  return ret;
}

#line 120  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  #line 122 
  int ret = ldv_undef_int();
  #line 124 
  __VERIFIER_assume(ret <= 0);
  #line 126 
  return ret;
}

#line 129  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  #line 131 
  void *ret = ldv_undef_ptr();
  #line 133 
  __VERIFIER_assume(ret != (void *)0);
  #line 135 
  return ret;
}

#line 139  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range(int begin, int end)
{
  #line 141 
  int ret;
  #line 143 
  ret = ldv_undef_int();
  #line 144 
  __VERIFIER_assume(ret >= begin);
  #line 145 
  __VERIFIER_assume(ret <= end);
  #line 147 
  return ret;
}

#line 151  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __ldv_undef_int_range2(int begin, int end)
{
  #line 153 
  int ret;
  #line 155 
  ret = begin;
  #line 155 
  while (ret < end) {
    #line 156 
    if (ldv_undef_int() != 0) 
                              #line 157 
                              break;
    #line 155 
    ret ++;
  }
  #line 159 
  return ret;
}

#line 62  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/linux/common.h"
#line 62 
void ldv_initialize(void);
#line 35  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/root/specifications/include/ldv/verifier/thread.h"
#line 35 
int pthread_create(pthread_t *, pthread_attr_t *, void *(*)(void *), void *);
#line 39 
#line 39 
int pthread_join(pthread_t, void **);
#line 24  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  #line 26 
  return (void *)error;
}

#line 39  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/err.h"
__inline static bool IS_ERR_OR_NULL(void *ptr)
{
  #line 41 
  return (_Bool)(((long)(ptr == (void *)0) != 0L || (long)((unsigned long)ptr > 18446744073709547520UL) != 0L) != 0);
}

#line 33  "/mnt/klever/build_bases/build-base-linux-5.5-x86_64-allmodconfig/Storage/var/lib/klever/workspace/Branches-and-Tags-Processing/linux-5.5/include/linux/rtnetlink.h"
#line 33 
void rtnl_lock(void);
#line 34 
#line 34 
void rtnl_unlock(void);
#line 82  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
#line 217 
void *emg_devattr_devattr_instance_dev_attr_interference(void *arg0);
#line 83 
#line 297 
void *emg_devattr_devattr_instance_dev_attr_shortpreamble(void *arg0);
#line 86 
#line 127 
void emg_dispatch_deregister_4(struct file_operations *arg0);
#line 87 
#line 158 
void emg_dispatch_deregister_6(struct device *arg0, struct device_attribute *arg1);
#line 88 
#line 194 
void emg_dispatch_deregister_9(struct ieee80211_hw *arg0);
#line 89 
#line 174 
void emg_dispatch_irq_deregister_7(int arg0);
#line 90 
#line 203 
void emg_dispatch_irq_register_10(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);
#line 91 
#line 116 
void emg_dispatch_register_3(struct file_operations *arg0);
#line 92 
#line 136 
void emg_dispatch_register_5(struct device *arg0, struct device_attribute *arg1);
#line 93 
#line 183 
void emg_dispatch_register_8(struct ieee80211_hw *arg0);
#line 94 
#line 1250 
void *emg_entry_point_insmod(void *arg0);
#line 95 
#line 377 
void *emg_file_operations_character_driver_scenario_generic_file_llseek(void *arg0);
#line 99 
#line 552 
void *emg_ieee80211_ieee80211_scenario_b43legacy_hw_ops(void *arg0);
#line 100 
#line 878 
void *emg_interrupt_interrupt_scenario_b43legacy_interrupt_handler(void *arg0);
#line 105 
#line 1279 
int main(void);
#line 108  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_14;
#line 109  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_15;
#line 110  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_16;
#line 111  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_17;
#line 112  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
pthread_t emg_thread_18;
#line 116  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_3(struct file_operations *arg0)
{
  #line 117 
  int ret;
  #line 118 
  struct emg_struct_character_driver_scenario_generic_file_llseek_16 *cf_arg_16;
  #line 119 
  cf_arg_16 = (struct emg_struct_character_driver_scenario_generic_file_llseek_16 *)ldv_xmalloc(16UL);
  #line 120 
  cf_arg_16->arg0 = arg0;
  #line 121 
  ret = pthread_create(& emg_thread_16,(pthread_attr_t *)0,& emg_file_operations_character_driver_scenario_generic_file_llseek,(void *)cf_arg_16);
  #line 122 
  __VERIFIER_assume(ret == 0);
  #line 123 
  return;
}

#line 127  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_4(struct file_operations *arg0)
{
  #line 128 
  int ret;
  #line 129 
  struct emg_struct_character_driver_scenario_generic_file_llseek_16 *cf_arg_16;
  #line 130 
  ret = pthread_join(emg_thread_16,(void **)0);
  #line 131 
  __VERIFIER_assume(ret == 0);
  #line 132 
  return;
}

#line 136  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_5(struct device *arg0, struct device_attribute *arg1)
{
  #line 137 
  int ret;
  #line 138 
  struct emg_struct_devattr_instance_dev_attr_interference_14 *cf_arg_14;
  #line 139 
  struct emg_struct_devattr_instance_dev_attr_interference_14 *cf_arg_15;
  #line 140 
  if (ldv_undef_int() != 0) {
    #line 141 
    cf_arg_14 = (struct emg_struct_devattr_instance_dev_attr_interference_14 *)ldv_xmalloc(24UL);
    #line 142 
    cf_arg_14->arg0 = arg0;
    #line 143 
    cf_arg_14->arg1 = arg1;
    #line 144 
    ret = pthread_create(& emg_thread_14,(pthread_attr_t *)0,& emg_devattr_devattr_instance_dev_attr_interference,(void *)cf_arg_14);
    #line 145 
    __VERIFIER_assume(ret == 0);
  }
  else {
    #line 148 
    cf_arg_15 = (struct emg_struct_devattr_instance_dev_attr_interference_14 *)ldv_xmalloc(24UL);
    #line 149 
    cf_arg_15->arg0 = arg0;
    #line 150 
    cf_arg_15->arg1 = arg1;
    #line 151 
    ret = pthread_create(& emg_thread_15,(pthread_attr_t *)0,& emg_devattr_devattr_instance_dev_attr_shortpreamble,(void *)cf_arg_15);
    #line 152 
    __VERIFIER_assume(ret == 0);
  }
  #line 154 
  return;
}

#line 158  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_6(struct device *arg0, struct device_attribute *arg1)
{
  #line 159 
  int ret;
  #line 160 
  struct emg_struct_devattr_instance_dev_attr_interference_14 *cf_arg_14;
  #line 161 
  struct emg_struct_devattr_instance_dev_attr_interference_14 *cf_arg_15;
  #line 162 
  if (ldv_undef_int() != 0) {
    #line 163 
    ret = pthread_join(emg_thread_14,(void **)0);
    #line 164 
    __VERIFIER_assume(ret == 0);
  }
  else {
    #line 167 
    ret = pthread_join(emg_thread_15,(void **)0);
    #line 168 
    __VERIFIER_assume(ret == 0);
  }
  #line 170 
  return;
}

#line 174  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_deregister_7(int arg0)
{
  #line 175 
  int ret;
  #line 176 
  struct emg_struct_free_irq_7 *cf_arg_18;
  #line 177 
  ret = pthread_join(emg_thread_18,(void **)0);
  #line 178 
  __VERIFIER_assume(ret == 0);
  #line 179 
  return;
}

#line 183  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_register_8(struct ieee80211_hw *arg0)
{
  #line 184 
  int ret;
  #line 185 
  struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 *cf_arg_17;
  #line 186 
  cf_arg_17 = (struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 *)ldv_xmalloc(16UL);
  #line 187 
  cf_arg_17->arg0 = arg0;
  #line 188 
  ret = pthread_create(& emg_thread_17,(pthread_attr_t *)0,& emg_ieee80211_ieee80211_scenario_b43legacy_hw_ops,(void *)cf_arg_17);
  #line 189 
  __VERIFIER_assume(ret == 0);
  #line 190 
  return;
}

#line 194  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_deregister_9(struct ieee80211_hw *arg0)
{
  #line 195 
  int ret;
  #line 196 
  struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 *cf_arg_17;
  #line 197 
  ret = pthread_join(emg_thread_17,(void **)0);
  #line 198 
  __VERIFIER_assume(ret == 0);
  #line 199 
  return;
}

#line 203  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_dispatch_irq_register_10(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  #line 204 
  int ret;
  #line 205 
  struct emg_struct_interrupt_scenario_b43legacy_interrupt_handler_18 *cf_arg_18;
  #line 206 
  cf_arg_18 = (struct emg_struct_interrupt_scenario_b43legacy_interrupt_handler_18 *)ldv_xmalloc(40UL);
  #line 207 
  cf_arg_18->arg0 = arg0;
  #line 208 
  cf_arg_18->arg1 = arg1;
  #line 209 
  cf_arg_18->arg2 = arg2;
  #line 210 
  cf_arg_18->arg3 = arg3;
  #line 211 
  ret = pthread_create(& emg_thread_18,(pthread_attr_t *)0,& emg_interrupt_interrupt_scenario_b43legacy_interrupt_handler,(void *)cf_arg_18);
  #line 212 
  __VERIFIER_assume(ret == 0);
  #line 213 
  return;
}

#line 217  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_devattr_devattr_instance_dev_attr_interference(void *arg0)
{
  #line 220 
  struct device_attribute *emg_14_devattr;
  #line 221 
  struct device *emg_14_device;
  #line 222 
  char *emg_14_emg_param_2_0;
  #line 223 
  char *emg_14_emg_param_2_1;
  #line 224 
  unsigned long emg_14_emg_param_3_2;
  #line 225 
  int emg_repeat_cnt_main_14 = 1;
  #line 227 
  struct emg_struct_devattr_instance_dev_attr_interference_14 *data = (struct emg_struct_devattr_instance_dev_attr_interference_14 *)arg0;
  #line 230 
  emg_14_devattr = emg_alias_dev_attr_interference;
  #line 232 
  __VERIFIER_assume(data->arg1 == emg_alias_dev_attr_interference);
  #line 234 
  if (data != (struct emg_struct_devattr_instance_dev_attr_interference_14 *)0) {
    #line 235 
    emg_14_device = data->arg0;
    #line 236 
    emg_14_devattr = data->arg1;
    #line 237 
    ldv_free((void *)data);
  }
  #line 242 
  goto emg_main_14;
  #line 246 
  return (void *)0;
  #line 249 
  emg_main_14: 
               #line 249 
  ;
  #line 250 
  if (ldv_undef_int() != 0) {
    #line 251 
    if (ldv_undef_int() != 0) {
      #line 253 
      emg_14_emg_param_2_0 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 253 
      emg_14_emg_param_2_0 = emg_14_emg_param_2_0;
      #line 257 
      emg_wrapper_b43legacy_attr_interfmode_show(emg_14_device,emg_14_devattr,emg_14_emg_param_2_0);
      #line 261 
      ldv_free((void *)emg_14_emg_param_2_0);
    }
    else {
      #line 265 
      emg_14_emg_param_2_1 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 265 
      emg_14_emg_param_2_1 = emg_14_emg_param_2_1;
      #line 269 
      emg_wrapper_b43legacy_attr_interfmode_store(emg_14_device,emg_14_devattr,emg_14_emg_param_2_1,emg_14_emg_param_3_2);
      #line 273 
      ldv_free((void *)emg_14_emg_param_2_1);
    }
    #line 277 
    if (emg_repeat_cnt_main_14 > 0) {
      #line 278 
      emg_repeat_cnt_main_14 --;
      #line 280 
      goto emg_main_14;
    }
    else 
         #line 282 
         __VERIFIER_assume(0);
  }
  #line 292 
  return (void *)0;
}

#line 297  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_devattr_devattr_instance_dev_attr_shortpreamble(void *arg0)
{
  #line 300 
  struct device_attribute *emg_15_devattr;
  #line 301 
  struct device *emg_15_device;
  #line 302 
  char *emg_15_emg_param_2_0;
  #line 303 
  char *emg_15_emg_param_2_1;
  #line 304 
  unsigned long emg_15_emg_param_3_2;
  #line 305 
  int emg_repeat_cnt_main_15 = 1;
  #line 307 
  struct emg_struct_devattr_instance_dev_attr_interference_14 *data = (struct emg_struct_devattr_instance_dev_attr_interference_14 *)arg0;
  #line 310 
  emg_15_devattr = emg_alias_dev_attr_shortpreamble;
  #line 312 
  __VERIFIER_assume(data->arg1 == emg_alias_dev_attr_shortpreamble);
  #line 314 
  if (data != (struct emg_struct_devattr_instance_dev_attr_interference_14 *)0) {
    #line 315 
    emg_15_device = data->arg0;
    #line 316 
    emg_15_devattr = data->arg1;
    #line 317 
    ldv_free((void *)data);
  }
  #line 322 
  goto emg_main_15;
  #line 326 
  return (void *)0;
  #line 329 
  emg_main_15: 
               #line 329 
  ;
  #line 330 
  if (ldv_undef_int() != 0) {
    #line 331 
    if (ldv_undef_int() != 0) {
      #line 333 
      emg_15_emg_param_2_0 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 333 
      emg_15_emg_param_2_0 = emg_15_emg_param_2_0;
      #line 337 
      emg_wrapper_b43legacy_attr_preamble_show(emg_15_device,emg_15_devattr,emg_15_emg_param_2_0);
      #line 341 
      ldv_free((void *)emg_15_emg_param_2_0);
    }
    else {
      #line 345 
      emg_15_emg_param_2_1 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 345 
      emg_15_emg_param_2_1 = emg_15_emg_param_2_1;
      #line 349 
      emg_wrapper_b43legacy_attr_preamble_store(emg_15_device,emg_15_devattr,emg_15_emg_param_2_1,emg_15_emg_param_3_2);
      #line 353 
      ldv_free((void *)emg_15_emg_param_2_1);
    }
    #line 357 
    if (emg_repeat_cnt_main_15 > 0) {
      #line 358 
      emg_repeat_cnt_main_15 --;
      #line 360 
      goto emg_main_15;
    }
    else 
         #line 362 
         __VERIFIER_assume(0);
  }
  #line 372 
  return (void *)0;
}

#line 377  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_file_operations_character_driver_scenario_generic_file_llseek(void *arg0)
{
  #line 380 
  struct file_operations *emg_16_container;
  #line 381 
  long long emg_16_emg_param_1_0;
  #line 382 
  char *emg_16_emg_param_1_2;
  #line 383 
  char *emg_16_emg_param_1_4;
  #line 384 
  int emg_16_emg_param_2_1;
  #line 385 
  long long *emg_16_emg_param_3_3;
  #line 386 
  long long *emg_16_emg_param_3_5;
  #line 387 
  struct file *emg_16_resource_0;
  #line 388 
  struct inode *emg_16_resource_1;
  #line 389 
  int emg_16_ret;
  #line 390 
  unsigned long emg_16_size_cnt;
  #line 391 
  int emg_repeat_cnt_main_16_1 = 1;
  #line 392 
  int emg_repeat_cnt_main_16_0 = 1;
  #line 393 
  int emg_repeat_cnt_call_16 = 1;
  #line 395 
  struct emg_struct_character_driver_scenario_generic_file_llseek_16 *data = (struct emg_struct_character_driver_scenario_generic_file_llseek_16 *)arg0;
  #line 399 
  emg_16_ret = ldv_undef_int();
  #line 400 
  emg_16_ret = ldv_undef_int();
  #line 403 
  if (data != (struct emg_struct_character_driver_scenario_generic_file_llseek_16 *)0) {
    #line 404 
    emg_16_container = data->arg0;
    #line 405 
    ldv_free((void *)data);
  }
  #line 410 
  emg_16_resource_0 = (struct file *)ldv_xmalloc(520UL);
  #line 411 
  emg_16_size_cnt = (unsigned long)ldv_undef_int();
  #line 415 
  goto emg_main_16;
  #line 419 
  return (void *)0;
  #line 422 
  emg_call_16: 
               #line 422 
  ;
  #line 423 
  if (ldv_undef_int() != 0) {
    #line 424 
    switch (ldv_undef_int()) {
      #line 425 
      case 0: 
              #line 425 
      ;
      #line 427 
      emg_16_emg_param_1_2 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 427 
      emg_16_emg_param_1_2 = emg_16_emg_param_1_2;
      #line 428 
      emg_16_emg_param_3_3 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 428 
      emg_16_emg_param_3_3 = emg_16_emg_param_3_3;
      #line 432 
      emg_wrapper_b43legacy_debugfs_read(emg_16_resource_0,emg_16_emg_param_1_2,emg_16_size_cnt,emg_16_emg_param_3_3);
      #line 436 
      ldv_free((void *)emg_16_emg_param_1_2);
      #line 437 
      ldv_free((void *)emg_16_emg_param_3_3);
      #line 439 
      break;
      #line 441 
      case 1: 
              #line 441 
      ;
      #line 443 
      generic_file_llseek(emg_16_resource_0,emg_16_emg_param_1_0,emg_16_emg_param_2_1);
      #line 445 
      break;
      #line 447 
      case 2: 
              #line 447 
      ;
      #line 454 
      __VERIFIER_assume(emg_16_size_cnt <= 2147479552UL);
      #line 455 
      emg_16_emg_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      #line 455 
      emg_16_emg_param_1_4 = emg_16_emg_param_1_4;
      #line 456 
      emg_16_emg_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      #line 456 
      emg_16_emg_param_3_5 = emg_16_emg_param_3_5;
      #line 460 
      emg_wrapper_b43legacy_debugfs_write(emg_16_resource_0,emg_16_emg_param_1_4,emg_16_size_cnt,emg_16_emg_param_3_5);
      #line 464 
      ldv_free((void *)emg_16_emg_param_1_4);
      #line 465 
      ldv_free((void *)emg_16_emg_param_3_5);
      #line 467 
      break;
      #line 469 
      default: 
               #line 469 
      ;
      #line 469 
      __VERIFIER_assume(0);
    }
    #line 472 
    if (emg_repeat_cnt_call_16 > 0) {
      #line 473 
      emg_repeat_cnt_call_16 --;
      #line 475 
      goto emg_call_16;
    }
    else 
         #line 477 
         __VERIFIER_assume(0);
  }
  else {
    #line 483 
    if (emg_16_container->release != (int (*)(struct inode *, struct file *))0) 
      #line 484 
      (*(emg_16_container->release))(emg_16_resource_1,emg_16_resource_0);
    #line 488 
    if (emg_repeat_cnt_main_16_1 > 0) {
      #line 489 
      emg_repeat_cnt_main_16_1 --;
      #line 491 
      goto emg_main_16;
    }
    else 
         #line 493 
         __VERIFIER_assume(0);
  }
  #line 499 
  return (void *)0;
  #line 502 
  emg_main_16: 
               #line 502 
  ;
  #line 503 
  if (ldv_undef_int() != 0) {
    #line 505 
    emg_16_ret = simple_open(emg_16_resource_1,emg_16_resource_0);
    #line 510 
    emg_16_ret = ldv_filter_err_code(emg_16_ret);
    #line 513 
    if (ldv_undef_int() != 0) {
      #line 515 
      __VERIFIER_assume(emg_16_ret == 0);
      #line 519 
      goto emg_call_16;
    }
    else {
      #line 524 
      __VERIFIER_assume(emg_16_ret != 0);
      #line 527 
      if (emg_repeat_cnt_main_16_0 > 0) {
        #line 528 
        emg_repeat_cnt_main_16_0 --;
        #line 530 
        goto emg_main_16;
      }
      else 
           #line 532 
           __VERIFIER_assume(0);
    }
  }
  else 
       #line 539 
       ldv_free((void *)emg_16_resource_0);
  #line 547 
  return (void *)0;
}

#line 552  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_ieee80211_ieee80211_scenario_b43legacy_hw_ops(void *arg0)
{
  #line 555 
  struct ieee80211_ops *emg_17_container;
  #line 556 
  struct ieee80211_vif *emg_17_emg_param_1_0;
  #line 557 
  struct ieee80211_vif *emg_17_emg_param_1_1;
  #line 558 
  struct ieee80211_low_level_stats *emg_17_emg_param_1_11;
  #line 559 
  int emg_17_emg_param_1_12;
  #line 560 
  struct ieee80211_vif *emg_17_emg_param_1_14;
  #line 561 
  struct ieee80211_sta *emg_17_emg_param_1_15;
  #line 562 
  struct ieee80211_tx_control *emg_17_emg_param_1_17;
  #line 563 
  struct cfg80211_wowlan *emg_17_emg_param_1_19;
  #line 564 
  struct ieee80211_vif *emg_17_emg_param_1_4;
  #line 565 
  unsigned int emg_17_emg_param_1_7;
  #line 566 
  unsigned int emg_17_emg_param_1_8;
  #line 567 
  struct survey_info *emg_17_emg_param_2_13;
  #line 568 
  _Bool emg_17_emg_param_2_16;
  #line 569 
  struct sk_buff *emg_17_emg_param_2_18;
  #line 570 
  struct ieee80211_bss_conf *emg_17_emg_param_2_2;
  #line 571 
  unsigned short emg_17_emg_param_2_5;
  #line 572 
  unsigned int *emg_17_emg_param_2_9;
  #line 573 
  unsigned long long emg_17_emg_param_3_10;
  #line 574 
  unsigned int emg_17_emg_param_3_3;
  #line 575 
  struct ieee80211_tx_queue_params *emg_17_emg_param_3_6;
  #line 576 
  struct ieee80211_hw *emg_17_resource;
  #line 577 
  int emg_17_ret;
  #line 578 
  int emg_repeat_cnt_started_17_0 = 1;
  #line 579 
  int emg_repeat_cnt_started_17_1 = 1;
  #line 580 
  int emg_repeat_cnt_main_17_0 = 1;
  #line 581 
  int emg_repeat_cnt_main_17_1 = 1;
  #line 583 
  struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 *data = (struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 *)arg0;
  #line 587 
  emg_17_ret = ldv_undef_int();
  #line 588 
  emg_17_container = emg_alias_b43legacy_hw_ops;
  #line 589 
  emg_17_ret = ldv_undef_int();
  #line 592 
  if (data != (struct emg_struct_ieee80211_scenario_b43legacy_hw_ops_17 *)0) {
    #line 593 
    emg_17_resource = data->arg0;
    #line 594 
    ldv_free((void *)data);
  }
  #line 599 
  goto emg_main_17;
  #line 603 
  return (void *)0;
  #line 606 
  emg_main_17: 
               #line 606 
  ;
  #line 607 
  if (ldv_undef_int() != 0) {
    #line 610 
    rtnl_lock();
    #line 614 
    emg_17_ret = emg_wrapper_b43legacy_op_start(emg_17_resource);
    #line 619 
    emg_17_ret = ldv_filter_err_code(emg_17_ret);
    #line 620 
    rtnl_unlock();
    #line 623 
    if (ldv_undef_int() != 0) {
      #line 625 
      __VERIFIER_assume(emg_17_ret == 0);
      #line 629 
      goto emg_started_17;
    }
    else 
         #line 634 
         __VERIFIER_assume(emg_17_ret != 0);
    #line 638 
    if (emg_repeat_cnt_main_17_1 > 0) {
      #line 639 
      emg_repeat_cnt_main_17_1 --;
      #line 641 
      goto emg_main_17;
    }
    else 
         #line 643 
         __VERIFIER_assume(0);
  }
  #line 653 
  return (void *)0;
  #line 656 
  emg_started_17: 
                  #line 656 
  ;
  #line 657 
  switch (ldv_undef_int()) {
    #line 658 
    case 0: 
            #line 658 
    ;
    #line 660 
    emg_17_emg_param_1_17 = (struct ieee80211_tx_control *)ldv_xmalloc_unknown_size(0UL);
    #line 660 
    emg_17_emg_param_1_17 = emg_17_emg_param_1_17;
    #line 661 
    emg_17_emg_param_2_18 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    #line 661 
    emg_17_emg_param_2_18 = emg_17_emg_param_2_18;
    #line 665 
    emg_wrapper_b43legacy_op_tx(emg_17_resource,emg_17_emg_param_1_17,emg_17_emg_param_2_18);
    #line 669 
    ldv_free((void *)emg_17_emg_param_1_17);
    #line 670 
    ldv_free((void *)emg_17_emg_param_2_18);
    #line 672 
    break;
    #line 674 
    case 1: 
            #line 674 
    ;
    #line 676 
    emg_17_emg_param_1_15 = (struct ieee80211_sta *)ldv_xmalloc_unknown_size(0UL);
    #line 676 
    emg_17_emg_param_1_15 = emg_17_emg_param_1_15;
    #line 680 
    emg_wrapper_b43legacy_op_beacon_set_tim(emg_17_resource,emg_17_emg_param_1_15,(_Bool)((_Bool)((int)emg_17_emg_param_2_16) != 0));
    #line 684 
    ldv_free((void *)emg_17_emg_param_1_15);
    #line 686 
    break;
    #line 688 
    case 2: 
            #line 688 
    ;
    #line 690 
    b43legacy_rfkill_poll(emg_17_resource);
    #line 692 
    break;
    #line 694 
    case 3: 
            #line 694 
    ;
    #line 696 
    emg_17_emg_param_1_14 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 696 
    emg_17_emg_param_1_14 = emg_17_emg_param_1_14;
    #line 700 
    emg_wrapper_b43legacy_op_remove_interface(emg_17_resource,emg_17_emg_param_1_14);
    #line 704 
    ldv_free((void *)emg_17_emg_param_1_14);
    #line 706 
    break;
    #line 708 
    case 4: 
            #line 708 
    ;
    #line 710 
    emg_17_emg_param_2_13 = (struct survey_info *)ldv_xmalloc_unknown_size(0UL);
    #line 710 
    emg_17_emg_param_2_13 = emg_17_emg_param_2_13;
    #line 714 
    emg_wrapper_b43legacy_op_get_survey(emg_17_resource,emg_17_emg_param_1_12,emg_17_emg_param_2_13);
    #line 718 
    ldv_free((void *)emg_17_emg_param_2_13);
    #line 720 
    break;
    #line 722 
    case 5: 
            #line 722 
    ;
    #line 724 
    emg_17_emg_param_1_11 = (struct ieee80211_low_level_stats *)ldv_xmalloc_unknown_size(0UL);
    #line 724 
    emg_17_emg_param_1_11 = emg_17_emg_param_1_11;
    #line 728 
    emg_wrapper_b43legacy_op_get_stats(emg_17_resource,emg_17_emg_param_1_11);
    #line 732 
    ldv_free((void *)emg_17_emg_param_1_11);
    #line 734 
    break;
    #line 736 
    case 6: 
            #line 736 
    ;
    #line 738 
    emg_17_emg_param_2_9 = (unsigned int *)ldv_xmalloc_unknown_size(0UL);
    #line 738 
    emg_17_emg_param_2_9 = emg_17_emg_param_2_9;
    #line 742 
    emg_wrapper_b43legacy_op_configure_filter(emg_17_resource,emg_17_emg_param_1_8,emg_17_emg_param_2_9,emg_17_emg_param_3_10);
    #line 746 
    ldv_free((void *)emg_17_emg_param_2_9);
    #line 748 
    break;
    #line 750 
    case 7: 
            #line 750 
    ;
    #line 752 
    emg_wrapper_b43legacy_op_dev_config(emg_17_resource,emg_17_emg_param_1_7);
    #line 754 
    break;
    #line 756 
    case 8: 
            #line 756 
    ;
    #line 758 
    emg_17_emg_param_1_4 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 758 
    emg_17_emg_param_1_4 = emg_17_emg_param_1_4;
    #line 759 
    emg_17_emg_param_3_6 = (struct ieee80211_tx_queue_params *)ldv_xmalloc_unknown_size(0UL);
    #line 759 
    emg_17_emg_param_3_6 = emg_17_emg_param_3_6;
    #line 763 
    emg_wrapper_b43legacy_op_conf_tx(emg_17_resource,emg_17_emg_param_1_4,(unsigned short)((int)emg_17_emg_param_2_5),emg_17_emg_param_3_6);
    #line 767 
    ldv_free((void *)emg_17_emg_param_1_4);
    #line 768 
    ldv_free((void *)emg_17_emg_param_3_6);
    #line 770 
    break;
    #line 772 
    case 9: 
            #line 772 
    ;
    #line 774 
    emg_17_emg_param_1_1 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 774 
    emg_17_emg_param_1_1 = emg_17_emg_param_1_1;
    #line 775 
    emg_17_emg_param_2_2 = (struct ieee80211_bss_conf *)ldv_xmalloc_unknown_size(0UL);
    #line 775 
    emg_17_emg_param_2_2 = emg_17_emg_param_2_2;
    #line 779 
    emg_wrapper_b43legacy_op_bss_info_changed(emg_17_resource,emg_17_emg_param_1_1,emg_17_emg_param_2_2,emg_17_emg_param_3_3);
    #line 783 
    ldv_free((void *)emg_17_emg_param_1_1);
    #line 784 
    ldv_free((void *)emg_17_emg_param_2_2);
    #line 786 
    break;
    #line 788 
    case 10: 
             #line 788 
    ;
    #line 790 
    emg_17_emg_param_1_19 = (struct cfg80211_wowlan *)ldv_xmalloc_unknown_size(0UL);
    #line 790 
    emg_17_emg_param_1_19 = emg_17_emg_param_1_19;
    #line 794 
    if (emg_17_container->suspend != (int (*)(struct ieee80211_hw *, struct cfg80211_wowlan *))0) 
      #line 795 
      (*(emg_17_container->suspend))(emg_17_resource,emg_17_emg_param_1_19);
    #line 800 
    ldv_free((void *)emg_17_emg_param_1_19);
    #line 804 
    if (emg_17_container->resume != (int (*)(struct ieee80211_hw *))0) 
      #line 805 
      (*(emg_17_container->resume))(emg_17_resource);
    #line 809 
    if (emg_repeat_cnt_started_17_1 > 0) {
      #line 810 
      emg_repeat_cnt_started_17_1 --;
      #line 812 
      goto emg_started_17;
    }
    else 
         #line 814 
         __VERIFIER_assume(0);
    #line 818 
    break;
    #line 820 
    case 11: 
             #line 820 
    ;
    #line 822 
    emg_17_emg_param_1_0 = (struct ieee80211_vif *)ldv_xmalloc_unknown_size(0UL);
    #line 822 
    emg_17_emg_param_1_0 = emg_17_emg_param_1_0;
    #line 826 
    emg_wrapper_b43legacy_op_add_interface(emg_17_resource,emg_17_emg_param_1_0);
    #line 830 
    ldv_free((void *)emg_17_emg_param_1_0);
    #line 833 
    if (emg_repeat_cnt_started_17_0 > 0) {
      #line 834 
      emg_repeat_cnt_started_17_0 --;
      #line 836 
      goto emg_started_17;
    }
    else 
         #line 838 
         __VERIFIER_assume(0);
    #line 842 
    break;
    #line 844 
    case 12: 
             #line 844 
    ;
    #line 847 
    rtnl_lock();
    #line 851 
    emg_wrapper_b43legacy_op_stop(emg_17_resource);
    #line 856 
    rtnl_unlock();
    #line 859 
    if (emg_repeat_cnt_main_17_0 > 0) {
      #line 860 
      emg_repeat_cnt_main_17_0 --;
      #line 862 
      goto emg_main_17;
    }
    else 
         #line 864 
         __VERIFIER_assume(0);
    #line 868 
    break;
    #line 870 
    default: 
             #line 870 
    ;
    #line 870 
    __VERIFIER_assume(0);
  }
  #line 873 
  return (void *)0;
}

#line 878  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_interrupt_interrupt_scenario_b43legacy_interrupt_handler(void *arg0)
{
  #line 881 
  enum irqreturn (*emg_18_callback)(int , void *);
  #line 882 
  void *emg_18_data;
  #line 883 
  int emg_18_line;
  #line 884 
  enum irqreturn emg_18_ret_val;
  #line 885 
  enum irqreturn (*emg_18_thread)(int , void *);
  #line 887 
  struct emg_struct_interrupt_scenario_b43legacy_interrupt_handler_18 *data = (struct emg_struct_interrupt_scenario_b43legacy_interrupt_handler_18 *)arg0;
  #line 890 
  emg_18_callback = & emg_wrapper_b43legacy_interrupt_handler;
  #line 893 
  if (data != (struct emg_struct_interrupt_scenario_b43legacy_interrupt_handler_18 *)0) {
    #line 894 
    emg_18_line = data->arg0;
    #line 895 
    emg_18_callback = data->arg1;
    #line 896 
    emg_18_thread = data->arg2;
    #line 897 
    emg_18_data = data->arg3;
    #line 898 
    ldv_free((void *)data);
  }
  #line 904 
  ldv_switch_to_interrupt_context();
  #line 908 
  emg_18_ret_val = emg_wrapper_b43legacy_interrupt_handler(emg_18_line,emg_18_data);
  #line 913 
  ldv_switch_to_process_context();
  #line 916 
  if (ldv_undef_int() != 0) {
    #line 918 
    __VERIFIER_assume(emg_18_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    #line 922 
    if (emg_18_thread != (enum irqreturn (*)(int , void *))0) 
                                                              #line 923 
                                                              (*emg_18_thread)(emg_18_line,emg_18_data);
  }
  else 
       #line 928 
       __VERIFIER_assume(emg_18_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  #line 936 
  return (void *)0;
}

#line 941  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_dir(char *arg0, struct dentry *arg1)
{
  #line 944 
  struct dentry *emg_2_dentry;
  #line 945 
  struct inode *emg_2_inode;
  #line 947 
  if (ldv_undef_int() != 0) {
    #line 949 
    emg_2_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 950 
    emg_2_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 951 
    emg_2_inode->i_mode = (unsigned short)16877U;
    #line 952 
    emg_2_dentry->d_parent = arg1;
    #line 953 
    emg_2_dentry->d_inode = emg_2_inode;
    #line 954 
    return emg_2_dentry;
  }
  else {
    #line 958 
    return (struct dentry *)ERR_PTR(-19L);
  }
}

#line 966  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct dentry *emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  #line 969 
  struct dentry *emg_3_dentry;
  #line 970 
  struct file_operations *emg_3_file_operations;
  #line 971 
  struct inode *emg_3_inode;
  #line 973 
  if (ldv_undef_int() != 0) {
    #line 975 
    emg_3_dentry = (struct dentry *)ldv_xmalloc(320UL);
    #line 976 
    emg_3_inode = (struct inode *)ldv_xmalloc(1072UL);
    #line 977 
    emg_3_inode->i_mode = arg1;
    #line 978 
    emg_3_dentry->d_parent = arg2;
    #line 979 
    emg_3_inode->i_private = arg3;
    #line 980 
    emg_3_file_operations = arg4;
    #line 981 
    emg_3_dentry->d_inode = emg_3_inode;
    #line 982 
    ldv_save_allocated_memory_to_list((void *)emg_3_dentry);
    #line 986 
    emg_dispatch_register_3(emg_3_file_operations);
    #line 990 
    return emg_3_dentry;
  }
  else {
    #line 994 
    return (struct dentry *)ERR_PTR(-19L);
  }
}

#line 1002  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_debugfs_remove(struct dentry *arg0)
{
  #line 1005 
  struct dentry *emg_4_dentry;
  #line 1006 
  struct file_operations *emg_4_file_operations;
  #line 1007 
  struct inode *emg_4_inode;
  #line 1010 
  emg_4_dentry = arg0;
  #line 1013 
  if (ldv_undef_int() != 0) {
    #line 1015 
    int tmp_0;
    #line 1015 
    if (IS_ERR_OR_NULL((void *)emg_4_dentry)) 
                                              #line 1015 
                                              tmp_0 = 0; else 
                                                              #line 1015 
                                                              tmp_0 = 1;
    #line 1015 
    __VERIFIER_assume(tmp_0);
    #line 1016 
    emg_4_inode = emg_4_dentry->d_inode;
    #line 1017 
    ldv_free((void *)emg_4_inode);
    #line 1018 
    ldv_free((void *)emg_4_dentry);
    #line 1022 
    emg_dispatch_deregister_4(emg_4_file_operations);
  }
  else {
    #line 1026 
    __VERIFIER_assume((int)IS_ERR_OR_NULL((void *)emg_4_dentry));
  }
  #line 1030 
  return;
}

#line 1035  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
int emg_device_create_file(struct device *arg0, struct device_attribute *arg1)
{
  #line 1038 
  struct device_attribute *emg_5_devattr;
  #line 1039 
  struct device *emg_5_device;
  #line 1041 
  if (ldv_undef_int() != 0) {
    #line 1043 
    emg_5_device = arg0;
    #line 1044 
    emg_5_devattr = arg1;
    #line 1048 
    emg_dispatch_register_5(emg_5_device,emg_5_devattr);
    #line 1052 
    return 0;
  }
  else {
    #line 1056 
    return ldv_undef_int_negative();
  }
}

#line 1064  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_device_remove_file(struct device *arg0, struct device_attribute *arg1)
{
  #line 1067 
  struct device_attribute *emg_6_devattr;
  #line 1068 
  struct device *emg_6_device;
  #line 1071 
  emg_6_device = arg0;
  #line 1072 
  emg_6_devattr = arg1;
  #line 1076 
  emg_dispatch_deregister_6(emg_6_device,emg_6_devattr);
  #line 1079 
  return;
}

#line 1084  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_free_irq(unsigned int arg0, void *arg1)
{
  #line 1087 
  int emg_7_line;
  #line 1090 
  emg_7_line = (int)arg0;
  #line 1094 
  emg_dispatch_irq_deregister_7(emg_7_line);
  #line 1095 
  ;
  #line 1095 
  return (void *)0;
}

#line 1101  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
struct ieee80211_hw *emg_ieee80211_alloc_hw(unsigned long arg0, struct ieee80211_ops *arg1)
{
  #line 1104 
  struct ieee80211_hw *emg_8_ieee80211_hw;
  #line 1105 
  struct ieee80211_ops *emg_8_ieee80211_ops;
  #line 1107 
  emg_8_ieee80211_ops = emg_alias_b43legacy_hw_ops;
  #line 1108 
  if (ldv_undef_int() != 0) {
    #line 1110 
    emg_8_ieee80211_ops = arg1;
    #line 1111 
    emg_8_ieee80211_hw = (struct ieee80211_hw *)ldv_xmalloc(184UL);
    #line 1115 
    emg_dispatch_register_8(emg_8_ieee80211_hw);
    #line 1119 
    return emg_8_ieee80211_hw;
  }
  else 
       #line 1123 
       return (struct ieee80211_hw *)0;
}

#line 1131  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_ieee80211_free_hw(struct ieee80211_hw *arg0)
{
  #line 1134 
  struct ieee80211_hw *emg_9_ieee80211_hw;
  #line 1137 
  emg_dispatch_deregister_9(emg_9_ieee80211_hw);
  #line 1141 
  ldv_free((void *)emg_9_ieee80211_hw);
  #line 1144 
  return;
}

#line 1149  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
int emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  #line 1152 
  enum irqreturn (*emg_10_callback)(int , void *);
  #line 1153 
  void *emg_10_data;
  #line 1154 
  int emg_10_line;
  #line 1155 
  enum irqreturn (*emg_10_thread)(int , void *);
  #line 1157 
  emg_10_callback = & emg_wrapper_b43legacy_interrupt_handler;
  #line 1158 
  if (ldv_undef_int() != 0) {
    #line 1160 
    emg_10_line = (int)arg0;
    #line 1161 
    emg_10_callback = arg1;
    #line 1162 
    emg_10_thread = (enum irqreturn (*)(int , void *))0;
    #line 1163 
    emg_10_data = arg4;
    #line 1167 
    emg_dispatch_irq_register_10(emg_10_line,emg_10_callback,emg_10_thread,emg_10_data);
    #line 1171 
    return 0;
  }
  else {
    #line 1175 
    return ldv_undef_int_negative();
  }
}

#line 1183  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
_Bool emg_schedule_work(struct work_struct *arg0)
{
  #line 1186 
  struct work_struct *emg_11_work_struct;
  #line 1188 
  if (ldv_undef_int() != 0) {
    #line 1190 
    emg_11_work_struct = arg0;
    #line 1194 
    if (emg_11_work_struct->func != (void (*)(struct work_struct *))0) 
      #line 1195 
      (*(emg_11_work_struct->func))(emg_11_work_struct);
    #line 1200 
    return (_Bool)1;
  }
  else 
       #line 1204 
       return (_Bool)0;
}

#line 1212  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  #line 1217 
  arg0->func = arg1;
  #line 1218 
  arg0->data = arg2;
  #line 1219 
  arg0->count.counter = 0;
  #line 1222 
  return;
}

#line 1227  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  #line 1230 
  unsigned long emg_13_emg_param_0_0;
  #line 1231 
  struct tasklet_struct *emg_13_tasklet_struct;
  #line 1234 
  emg_13_tasklet_struct = arg0;
  #line 1238 
  if (emg_13_tasklet_struct->count.counter == 0) 
    #line 1239 
    if (emg_13_tasklet_struct->func != (void (*)(unsigned long ))0) 
                                                                    #line 1240 
                                                                    (*(emg_13_tasklet_struct->func))(emg_13_emg_param_0_0);
  #line 1245 
  return;
}

#line 1250  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
void *emg_entry_point_insmod(void *arg0)
{
  #line 1253 
  int emg_1_ret;
  #line 1256 
  emg_1_ret = emg_b43legacy_init();
  #line 1257 
  emg_1_ret = ldv_post_init(emg_1_ret);
  #line 1260 
  if (ldv_undef_int() != 0) {
    #line 1262 
    __VERIFIER_assume(emg_1_ret == 0);
    #line 1266 
    emg_b43legacy_exit();
  }
  else 
       #line 1270 
       __VERIFIER_assume(emg_1_ret != 0);
  #line 1274 
  return (void *)0;
}

#line 1279  "/mnt/klever/klever_deploy/klever-work/native-scheduler/scheduler/jobs/6c8e294c-3e5c-4a94-b0f9-6aa4d6dc1c3b/klever-core-work-dir/job/vtg/drivers/net/wireless/broadcom/b43legacy/b43legacy.ko/concurrency safety/emg/0/environment_model.c"
int main(void)
{
  #line 1281 
  ldv_initialize();
  #line 1283 
  emg_entry_point_insmod((void *)0);
  #line 1285 
  return 0;
}

