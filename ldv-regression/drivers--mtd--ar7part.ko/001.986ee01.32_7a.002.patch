6,9c6,23
< #line 40 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __builtin_va_list __gnuc_va_list[1U];
< #line 102 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __gnuc_va_list va_list[1U];
---
> #line 20 "include/asm-generic/int-ll64.h"
> typedef unsigned char __u8;
> #line 23 "include/asm-generic/int-ll64.h"
> typedef unsigned short __u16;
> #line 26 "include/asm-generic/int-ll64.h"
> typedef unsigned int __u32;
> #line 30 "include/asm-generic/int-ll64.h"
> typedef unsigned long long __u64;
> #line 43 "include/asm-generic/int-ll64.h"
> typedef unsigned char u8;
> #line 46 "include/asm-generic/int-ll64.h"
> typedef unsigned short u16;
> #line 49 "include/asm-generic/int-ll64.h"
> typedef unsigned int u32;
> #line 51 "include/asm-generic/int-ll64.h"
> typedef long long s64;
> #line 52 "include/asm-generic/int-ll64.h"
> typedef unsigned long long u64;
18,27d31
< #line 18 "include/asm-generic/int-ll64.h"
< typedef unsigned char __u8;
< #line 21 "include/asm-generic/int-ll64.h"
< typedef unsigned short __u16;
< #line 24 "include/asm-generic/int-ll64.h"
< typedef unsigned int __u32;
< #line 28 "include/asm-generic/int-ll64.h"
< typedef unsigned long long __u64;
< #line 50 "include/asm-generic/int-ll64.h"
< typedef unsigned long long u64;
28a33,36
> typedef __u32 __kernel_dev_t;
> #line 24 "include/linux/types.h"
> typedef __kernel_dev_t dev_t;
> #line 26 "include/linux/types.h"
30c38,40
< #line 57 "include/linux/types.h"
---
> #line 37 "include/linux/types.h"
> typedef _Bool bool;
> #line 53 "include/linux/types.h"
32c42
< #line 66 "include/linux/types.h"
---
> #line 62 "include/linux/types.h"
34c44
< #line 71 "include/linux/types.h"
---
> #line 67 "include/linux/types.h"
36c46
< #line 95 "include/linux/types.h"
---
> #line 91 "include/linux/types.h"
38c48
< #line 98 "include/linux/types.h"
---
> #line 94 "include/linux/types.h"
40c50
< #line 118 "include/linux/types.h"
---
> #line 114 "include/linux/types.h"
42c52
< #line 120 "include/linux/types.h"
---
> #line 116 "include/linux/types.h"
44c54
< #line 123 "include/linux/types.h"
---
> #line 119 "include/linux/types.h"
46c56
< #line 186 "include/linux/types.h"
---
> #line 201 "include/linux/types.h"
48c58
< #line 190 "include/linux/types.h"
---
> #line 205 "include/linux/types.h"
50c60
< #line 195 "include/linux/types.h"
---
> #line 210 "include/linux/types.h"
52c62
< #line 199 "include/linux/types.h"
---
> #line 214 "include/linux/types.h"
54c64
<    int volatile   counter ;
---
>    int counter ;
56c66
< #line 199 "include/linux/types.h"
---
> #line 214 "include/linux/types.h"
58c68
< #line 204 "include/linux/types.h"
---
> #line 219 "include/linux/types.h"
60c70
<    long volatile   counter ;
---
>    long counter ;
62c72
< #line 204 "include/linux/types.h"
---
> #line 219 "include/linux/types.h"
64c74,79
< #line 58 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
---
> #line 220 "include/linux/types.h"
> struct list_head {
>    struct list_head *next ;
>    struct list_head *prev ;
> };
> #line 55 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
66c81,85
< #line 37 "include/linux/dynamic_printk.h"
---
> #line 145 "include/linux/init.h"
> typedef void (*ctor_fn_t)(void);
> #line 41 "include/linux/dynamic_debug.h"
> struct device;
> #line 53 "include/linux/dynamic_debug.h"
73c92,114
< #line 519 "include/linux/kernel.h"
---
> #line 70 "include/asm-generic/bug.h"
> struct completion;
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef u16 __ticket_t;
> #line 15 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef u32 __ticketpair_t;
> #line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> struct __raw_tickets {
>    __ticket_t head ;
>    __ticket_t tail ;
> };
> #line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> union __anonunion_ldv_2013_8 {
>    __ticketpair_t head_tail ;
>    struct __raw_tickets tickets ;
> };
> #line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> struct arch_spinlock {
>    union __anonunion_ldv_2013_8 ldv_2013 ;
> };
> #line 28 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef struct arch_spinlock arch_spinlock_t;
> #line 34 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
75c116,118
< #line 83 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_64.h"
---
> #line 35
> struct lockdep_map;
> #line 282 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
77,79c120,124
< #line 324 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
< struct raw_spinlock;
< #line 386 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 290
> struct file;
> #line 233 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
> struct jump_label_key;
> #line 423 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
81,94c126,128
< #line 56 "include/linux/prefetch.h"
< struct list_head {
<    struct list_head *next ;
<    struct list_head *prev ;
< };
< #line 634 "include/linux/list.h"
< struct raw_spinlock {
<    unsigned int slock ;
< };
< #line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
< typedef struct raw_spinlock raw_spinlock_t;
< #line 17
< struct lockdep_map;
< #line 48 "include/linux/debug_locks.h"
---
> #line 23 "include/asm-generic/atomic-long.h"
> typedef atomic64_t atomic_long_t;
> #line 55 "include/linux/debug_locks.h"
101c135
< #line 34 "include/linux/stacktrace.h"
---
> #line 26 "include/linux/stacktrace.h"
104,105c138,139
< };
< #line 71 "include/linux/lockdep.h"
---
> } __attribute__((__packed__)) ;
> #line 53 "include/linux/lockdep.h"
109c143
< #line 75 "include/linux/lockdep.h"
---
> #line 59 "include/linux/lockdep.h"
117c151
<    struct stack_trace usage_traces[9U] ;
---
>    struct stack_trace usage_traces[13U] ;
127c161
< #line 160 "include/linux/lockdep.h"
---
> #line 144 "include/linux/lockdep.h"
130c164
<    struct lock_class *class_cache ;
---
>    struct lock_class *class_cache[2U] ;
135,137c169,171
< #line 32 "include/linux/spinlock_types.h"
< struct __anonstruct_spinlock_t_27 {
<    raw_spinlock_t raw_lock ;
---
> #line 552 "include/linux/lockdep.h"
> struct raw_spinlock {
>    arch_spinlock_t raw_lock ;
143,147c177,210
< #line 32 "include/linux/spinlock_types.h"
< typedef struct __anonstruct_spinlock_t_27 spinlock_t;
< #line 23 "include/asm-generic/atomic.h"
< typedef atomic64_t atomic_long_t;
< #line 52 "include/linux/srcu.h"
---
> #line 33 "include/linux/spinlock_types.h"
> struct __anonstruct_ldv_6005_29 {
>    u8 __padding[24U] ;
>    struct lockdep_map dep_map ;
> };
> #line 33 "include/linux/spinlock_types.h"
> union __anonunion_ldv_6006_28 {
>    struct raw_spinlock rlock ;
>    struct __anonstruct_ldv_6005_29 ldv_6005 ;
> };
> #line 33 "include/linux/spinlock_types.h"
> struct spinlock {
>    union __anonunion_ldv_6006_28 ldv_6006 ;
> };
> #line 76 "include/linux/spinlock_types.h"
> typedef struct spinlock spinlock_t;
> #line 23 "include/linux/rwlock_types.h"
> struct mutex {
>    atomic_t count ;
>    spinlock_t wait_lock ;
>    struct list_head wait_list ;
>    struct task_struct *owner ;
>    char const   *name ;
>    void *magic ;
>    struct lockdep_map dep_map ;
> };
> #line 49 "include/linux/wait.h"
> struct __wait_queue_head {
>    spinlock_t lock ;
>    struct list_head task_list ;
> };
> #line 54 "include/linux/wait.h"
> typedef struct __wait_queue_head wait_queue_head_t;
> #line 170 "include/linux/srcu.h"
153c216,349
< #line 262 "include/linux/workqueue.h"
---
> #line 312 "include/linux/jiffies.h"
> union ktime {
>    s64 tv64 ;
> };
> #line 59 "include/linux/ktime.h"
> typedef union ktime ktime_t;
> #line 99 "include/linux/debugobjects.h"
> struct tvec_base;
> #line 100 "include/linux/debugobjects.h"
> struct timer_list {
>    struct list_head entry ;
>    unsigned long expires ;
>    struct tvec_base *base ;
>    void (*function)(unsigned long  ) ;
>    unsigned long data ;
>    int slack ;
>    int start_pid ;
>    void *start_site ;
>    char start_comm[16U] ;
>    struct lockdep_map lockdep_map ;
> };
> #line 302 "include/linux/timer.h"
> struct work_struct;
> #line 45 "include/linux/workqueue.h"
> struct work_struct {
>    atomic_long_t data ;
>    struct list_head entry ;
>    void (*func)(struct work_struct * ) ;
>    struct lockdep_map lockdep_map ;
> };
> #line 429 "include/linux/workqueue.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
> };
> #line 46 "include/linux/pm.h"
> struct pm_message {
>    int event ;
> };
> #line 52 "include/linux/pm.h"
> typedef struct pm_message pm_message_t;
> #line 53 "include/linux/pm.h"
> struct dev_pm_ops {
>    int (*prepare)(struct device * ) ;
>    void (*complete)(struct device * ) ;
>    int (*suspend)(struct device * ) ;
>    int (*resume)(struct device * ) ;
>    int (*freeze)(struct device * ) ;
>    int (*thaw)(struct device * ) ;
>    int (*poweroff)(struct device * ) ;
>    int (*restore)(struct device * ) ;
>    int (*suspend_noirq)(struct device * ) ;
>    int (*resume_noirq)(struct device * ) ;
>    int (*freeze_noirq)(struct device * ) ;
>    int (*thaw_noirq)(struct device * ) ;
>    int (*poweroff_noirq)(struct device * ) ;
>    int (*restore_noirq)(struct device * ) ;
>    int (*runtime_suspend)(struct device * ) ;
>    int (*runtime_resume)(struct device * ) ;
>    int (*runtime_idle)(struct device * ) ;
> };
> #line 272
> enum rpm_status {
>     RPM_ACTIVE = 0,
>     RPM_RESUMING = 1,
>     RPM_SUSPENDED = 2,
>     RPM_SUSPENDING = 3
> } ;
> #line 279
> enum rpm_request {
>     RPM_REQ_NONE = 0,
>     RPM_REQ_IDLE = 1,
>     RPM_REQ_SUSPEND = 2,
>     RPM_REQ_AUTOSUSPEND = 3,
>     RPM_REQ_RESUME = 4
> } ;
> #line 287
> struct wakeup_source;
> #line 432 "include/linux/pm.h"
> struct pm_subsys_data {
>    spinlock_t lock ;
>    unsigned int refcount ;
> };
> #line 437
> struct pm_qos_constraints;
> #line 437 "include/linux/pm.h"
> struct dev_pm_info {
>    pm_message_t power_state ;
>    unsigned char can_wakeup : 1 ;
>    unsigned char async_suspend : 1 ;
>    bool is_prepared ;
>    bool is_suspended ;
>    spinlock_t lock ;
>    struct list_head entry ;
>    struct completion completion ;
>    struct wakeup_source *wakeup ;
>    bool wakeup_path ;
>    struct timer_list suspend_timer ;
>    unsigned long timer_expires ;
>    struct work_struct work ;
>    wait_queue_head_t wait_queue ;
>    atomic_t usage_count ;
>    atomic_t child_count ;
>    unsigned char disable_depth : 3 ;
>    unsigned char ignore_children : 1 ;
>    unsigned char idle_notification : 1 ;
>    unsigned char request_pending : 1 ;
>    unsigned char deferred_resume : 1 ;
>    unsigned char run_wake : 1 ;
>    unsigned char runtime_auto : 1 ;
>    unsigned char no_callbacks : 1 ;
>    unsigned char irq_safe : 1 ;
>    unsigned char use_autosuspend : 1 ;
>    unsigned char timer_autosuspends : 1 ;
>    enum rpm_request request ;
>    enum rpm_status runtime_status ;
>    int runtime_error ;
>    int autosuspend_delay ;
>    unsigned long last_busy ;
>    unsigned long active_jiffies ;
>    unsigned long suspended_jiffies ;
>    unsigned long accounting_timestamp ;
>    struct pm_subsys_data *subsys_data ;
>    struct pm_qos_constraints *constraints ;
> };
> #line 493 "include/linux/pm.h"
> struct dev_pm_domain {
>    struct dev_pm_ops ops ;
> };
> #line 74 "include/asm-generic/iomap.h"
> struct vm_area_struct;
> #line 164 "include/linux/slab.h"
> struct sock;
> #line 165
155c351,365
< #line 263 "include/linux/workqueue.h"
---
> #line 166
> enum kobj_ns_type {
>     KOBJ_NS_TYPE_NONE = 0,
>     KOBJ_NS_TYPE_NET = 1,
>     KOBJ_NS_TYPES = 2
> } ;
> #line 172 "include/linux/slab.h"
> struct kobj_ns_type_operations {
>    enum kobj_ns_type type ;
>    void *(*grab_current_ns)(void) ;
>    void const   *(*netlink_ns)(struct sock * ) ;
>    void const   *(*initial_ns)(void) ;
>    void (*drop_ns)(void * ) ;
> };
> #line 57 "include/linux/kobject_ns.h"
158d367
<    struct module *owner ;
159a369,387
>    struct lock_class_key *key ;
>    struct lock_class_key skey ;
> };
> #line 33 "include/linux/sysfs.h"
> struct attribute_group {
>    char const   *name ;
>    mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
>    struct attribute **attrs ;
> };
> #line 62 "include/linux/sysfs.h"
> struct bin_attribute {
>    struct attribute attr ;
>    size_t size ;
>    void *private ;
>    ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                    loff_t  , size_t  ) ;
>    ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                     loff_t  , size_t  ) ;
>    int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
161c389
< #line 75 "include/linux/sysfs.h"
---
> #line 98 "include/linux/sysfs.h"
164a393
>    void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
166c395
< #line 81
---
> #line 117
168c397
< #line 131 "include/linux/sysfs.h"
---
> #line 182 "include/linux/sysfs.h"
172c401
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
174c403
< #line 48
---
> #line 49
176c405
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
188a418
>    unsigned char uevent_suppress : 1 ;
190c420
< #line 103 "include/linux/kobject.h"
---
> #line 109 "include/linux/kobject.h"
193c423
<    struct sysfs_ops *sysfs_ops ;
---
>    struct sysfs_ops  const  *sysfs_ops ;
194a425,426
>    struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
>    void const   *(*namespace)(struct kobject * ) ;
196c428
< #line 109 "include/linux/kobject.h"
---
> #line 117 "include/linux/kobject.h"
203c435
< #line 116 "include/linux/kobject.h"
---
> #line 124 "include/linux/kobject.h"
205,207c437,439
<    int (*filter)(struct kset * , struct kobject * ) ;
<    char const   *(*name)(struct kset * , struct kobject * ) ;
<    int (*uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
---
>    int (* const  filter)(struct kset * , struct kobject * ) ;
>    char const   *(* const  name)(struct kset * , struct kobject * ) ;
>    int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
209c441
< #line 133 "include/linux/kobject.h"
---
> #line 141 "include/linux/kobject.h"
214c446
<    struct kset_uevent_ops *uevent_ops ;
---
>    struct kset_uevent_ops  const  *uevent_ops ;
216c448
< #line 229 "include/linux/kobject.h"
---
> #line 123 "include/linux/kmemleak.h"
218a451
>    unsigned long tid ;
219a453
>    struct page *partial ;
221,223c455
<    unsigned int offset ;
<    unsigned int objsize ;
<    unsigned int stat[18U] ;
---
>    unsigned int stat[24U] ;
225c457
< #line 44 "include/linux/slub_def.h"
---
> #line 52 "include/linux/slub_def.h"
229d460
<    unsigned long min_partial ;
235c466
< #line 56 "include/linux/slub_def.h"
---
> #line 63 "include/linux/slub_def.h"
239c470
< #line 66 "include/linux/slub_def.h"
---
> #line 73 "include/linux/slub_def.h"
240a472
>    struct kmem_cache_cpu *cpu_slab ;
241a474
>    unsigned long min_partial ;
244a478
>    int cpu_partial ;
246d479
<    struct kmem_cache_node local_node ;
253a487
>    int reserved ;
258,259c492
<    struct kmem_cache_node *node[512U] ;
<    struct kmem_cache_cpu *cpu_slab[4096U] ;
---
>    struct kmem_cache_node *node[1024U] ;
269c502
< #line 180 "include/linux/elf.h"
---
> #line 202 "include/linux/elf.h"
278c511
< #line 188 "include/linux/elf.h"
---
> #line 210 "include/linux/elf.h"
280,299c513,529
< #line 215 "include/linux/moduleparam.h"
< struct marker;
< #line 33 "include/linux/marker.h"
< typedef void marker_probe_func(void * , void * , char const   * , va_list * );
< #line 34 "include/linux/marker.h"
< struct marker_probe_closure {
<    marker_probe_func *func ;
<    void *probe_private ;
< };
< #line 40 "include/linux/marker.h"
< struct marker {
<    char const   *name ;
<    char const   *format ;
<    char state ;
<    char ptype ;
<    void (*call)(struct marker  const  * , void *  , ...) ;
<    struct marker_probe_closure single ;
<    struct marker_probe_closure *multi ;
<    char const   *tp_name ;
<    void *tp_cb ;
---
> #line 444
> struct kernel_param;
> #line 445 "include/linux/elf.h"
> struct kernel_param_ops {
>    int (*set)(char const   * , struct kernel_param  const  * ) ;
>    int (*get)(char * , struct kernel_param  const  * ) ;
>    void (*free)(void * ) ;
> };
> #line 49 "include/linux/moduleparam.h"
> struct kparam_string;
> #line 49
> struct kparam_array;
> #line 49 "include/linux/moduleparam.h"
> union __anonunion_ldv_13374_134 {
>    void *arg ;
>    struct kparam_string  const  *str ;
>    struct kparam_array  const  *arr ;
301c531,556
< #line 273 "include/linux/rcupdate.h"
---
> #line 49 "include/linux/moduleparam.h"
> struct kernel_param {
>    char const   *name ;
>    struct kernel_param_ops  const  *ops ;
>    u16 perm ;
>    u16 flags ;
>    union __anonunion_ldv_13374_134 ldv_13374 ;
> };
> #line 64 "include/linux/moduleparam.h"
> struct kparam_string {
>    unsigned int maxlen ;
>    char *string ;
> };
> #line 70 "include/linux/moduleparam.h"
> struct kparam_array {
>    unsigned int max ;
>    unsigned int elemsize ;
>    unsigned int *num ;
>    struct kernel_param_ops  const  *ops ;
>    void *elem ;
> };
> #line 429 "include/linux/moduleparam.h"
> struct jump_label_key {
>    atomic_t enabled ;
> };
> #line 99 "include/linux/jump_label.h"
303c558,563
< #line 274 "include/linux/rcupdate.h"
---
> #line 100 "include/linux/jump_label.h"
> struct tracepoint_func {
>    void *func ;
>    void *data ;
> };
> #line 29 "include/linux/tracepoint.h"
306,311c566,569
<    int state ;
<    void **funcs ;
< };
< #line 155 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/local.h"
< struct mod_arch_specific {
< 
---
>    struct jump_label_key key ;
>    void (*regfunc)(void) ;
>    void (*unregfunc)(void) ;
>    struct tracepoint_func *funcs ;
313c571
< #line 158 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/local.h"
---
> #line 86 "include/linux/tracepoint.h"
318,326c576,578
< #line 45 "include/linux/module.h"
< struct module_attribute {
<    struct attribute attr ;
<    ssize_t (*show)(struct module_attribute * , struct module * , char * ) ;
<    ssize_t (*store)(struct module_attribute * , struct module * , char const   * ,
<                     size_t  ) ;
<    void (*setup)(struct module * , char const   * ) ;
<    int (*test)(struct module * ) ;
<    void (*free)(struct module * ) ;
---
> #line 27 "include/linux/export.h"
> struct mod_arch_specific {
> 
328c580
< #line 57
---
> #line 36 "include/linux/module.h"
330c582
< #line 57 "include/linux/module.h"
---
> #line 36 "include/linux/module.h"
337c589,599
< #line 69
---
> #line 45 "include/linux/module.h"
> struct module_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
>    ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
>                     size_t  ) ;
>    void (*setup)(struct module * , char const   * ) ;
>    int (*test)(struct module * ) ;
>    void (*free)(struct module * ) ;
> };
> #line 71
339c601
< #line 174
---
> #line 200
345c607,612
< #line 180
---
> #line 206 "include/linux/module.h"
> struct module_ref {
>    unsigned int incs ;
>    unsigned int decs ;
> };
> #line 354
347c614
< #line 180
---
> #line 354
349c616,618
< #line 180 "include/linux/module.h"
---
> #line 354
> struct ftrace_event_call;
> #line 354 "include/linux/module.h"
361a631,632
>    struct kernel_param *kp ;
>    unsigned int num_kp ;
382a654,655
>    unsigned int init_ro_size ;
>    unsigned int core_ro_size ;
388a662
>    Elf64_Sym *core_symtab ;
389a664
>    unsigned int core_num_syms ;
390a666
>    char *core_strtab ;
393d668
<    void *percpu ;
395,397c670,671
<    struct marker *markers ;
<    unsigned int num_markers ;
<    struct tracepoint *tracepoints ;
---
>    void *percpu ;
>    unsigned int percpu_size ;
399c673,679
<    struct list_head modules_which_use_me ;
---
>    struct tracepoint * const  *tracepoints_ptrs ;
>    unsigned int num_trace_bprintk_fmt ;
>    char const   **trace_bprintk_fmt_start ;
>    struct ftrace_event_call **trace_events ;
>    unsigned int num_trace_events ;
>    struct list_head source_list ;
>    struct list_head target_list ;
402c682,684
<    char *refptr ;
---
>    struct module_ref *refptr ;
>    ctor_fn_t (**ctors)(void) ;
>    unsigned int num_ctors ;
409c691,873
< #line 70 "include/mtd/mtd-abi.h"
---
> #line 54
> struct klist_node;
> #line 37 "include/linux/klist.h"
> struct klist_node {
>    void *n_klist ;
>    struct list_head n_node ;
>    struct kref n_ref ;
> };
> #line 67
> struct dma_map_ops;
> #line 67 "include/linux/klist.h"
> struct dev_archdata {
>    void *acpi_handle ;
>    struct dma_map_ops *dma_ops ;
>    void *iommu ;
> };
> #line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
> struct device_private;
> #line 18
> struct device_driver;
> #line 19
> struct driver_private;
> #line 20
> struct class;
> #line 21
> struct subsys_private;
> #line 22
> struct bus_type;
> #line 23
> struct device_node;
> #line 24
> struct iommu_ops;
> #line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
> struct bus_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct bus_type * , char * ) ;
>    ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
> };
> #line 50 "include/linux/device.h"
> struct device_attribute;
> #line 50
> struct driver_attribute;
> #line 50 "include/linux/device.h"
> struct bus_type {
>    char const   *name ;
>    struct bus_attribute *bus_attrs ;
>    struct device_attribute *dev_attrs ;
>    struct driver_attribute *drv_attrs ;
>    int (*match)(struct device * , struct device_driver * ) ;
>    int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
>    int (*probe)(struct device * ) ;
>    int (*remove)(struct device * ) ;
>    void (*shutdown)(struct device * ) ;
>    int (*suspend)(struct device * , pm_message_t  ) ;
>    int (*resume)(struct device * ) ;
>    struct dev_pm_ops  const  *pm ;
>    struct iommu_ops *iommu_ops ;
>    struct subsys_private *p ;
> };
> #line 159
> struct of_device_id;
> #line 159 "include/linux/device.h"
> struct device_driver {
>    char const   *name ;
>    struct bus_type *bus ;
>    struct module *owner ;
>    char const   *mod_name ;
>    bool suppress_bind_attrs ;
>    struct of_device_id  const  *of_match_table ;
>    int (*probe)(struct device * ) ;
>    int (*remove)(struct device * ) ;
>    void (*shutdown)(struct device * ) ;
>    int (*suspend)(struct device * , pm_message_t  ) ;
>    int (*resume)(struct device * ) ;
>    struct attribute_group  const  **groups ;
>    struct dev_pm_ops  const  *pm ;
>    struct driver_private *p ;
> };
> #line 224 "include/linux/device.h"
> struct driver_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct device_driver * , char * ) ;
>    ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
> };
> #line 254
> struct class_attribute;
> #line 254 "include/linux/device.h"
> struct class {
>    char const   *name ;
>    struct module *owner ;
>    struct class_attribute *class_attrs ;
>    struct device_attribute *dev_attrs ;
>    struct bin_attribute *dev_bin_attrs ;
>    struct kobject *dev_kobj ;
>    int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
>    char *(*devnode)(struct device * , mode_t * ) ;
>    void (*class_release)(struct class * ) ;
>    void (*dev_release)(struct device * ) ;
>    int (*suspend)(struct device * , pm_message_t  ) ;
>    int (*resume)(struct device * ) ;
>    struct kobj_ns_type_operations  const  *ns_type ;
>    void const   *(*namespace)(struct device * ) ;
>    struct dev_pm_ops  const  *pm ;
>    struct subsys_private *p ;
> };
> #line 311
> struct device_type;
> #line 350 "include/linux/device.h"
> struct class_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
>    ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
>    void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
> };
> #line 403 "include/linux/device.h"
> struct device_type {
>    char const   *name ;
>    struct attribute_group  const  **groups ;
>    int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
>    char *(*devnode)(struct device * , mode_t * ) ;
>    void (*release)(struct device * ) ;
>    struct dev_pm_ops  const  *pm ;
> };
> #line 430 "include/linux/device.h"
> struct device_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
>    ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
>                     size_t  ) ;
> };
> #line 491 "include/linux/device.h"
> struct device_dma_parameters {
>    unsigned int max_segment_size ;
>    unsigned long segment_boundary_mask ;
> };
> #line 500
> struct dma_coherent_mem;
> #line 500 "include/linux/device.h"
> struct device {
>    struct device *parent ;
>    struct device_private *p ;
>    struct kobject kobj ;
>    char const   *init_name ;
>    struct device_type  const  *type ;
>    struct mutex mutex ;
>    struct bus_type *bus ;
>    struct device_driver *driver ;
>    void *platform_data ;
>    struct dev_pm_info power ;
>    struct dev_pm_domain *pm_domain ;
>    int numa_node ;
>    u64 *dma_mask ;
>    u64 coherent_dma_mask ;
>    struct device_dma_parameters *dma_parms ;
>    struct list_head dma_pools ;
>    struct dma_coherent_mem *dma_mem ;
>    struct dev_archdata archdata ;
>    struct device_node *of_node ;
>    dev_t devt ;
>    spinlock_t devres_lock ;
>    struct list_head devres_head ;
>    struct klist_node knode_class ;
>    struct class *class ;
>    struct attribute_group  const  **groups ;
>    void (*release)(struct device * ) ;
> };
> #line 612 "include/linux/device.h"
> struct wakeup_source {
>    char *name ;
>    struct list_head entry ;
>    spinlock_t lock ;
>    struct timer_list timer ;
>    unsigned long timer_expires ;
>    ktime_t total_time ;
>    ktime_t max_time ;
>    ktime_t last_time ;
>    unsigned long event_count ;
>    unsigned long active_count ;
>    unsigned long relax_count ;
>    unsigned long hit_count ;
>    unsigned char active : 1 ;
> };
> #line 100 "include/mtd/mtd-abi.h"
411,413c875,877
<    uint32_t start ;
<    uint32_t length ;
<    uint32_t locked ;
---
>    __u32 start ;
>    __u32 length ;
>    __u32 locked ;
415c879
< #line 107 "include/mtd/mtd-abi.h"
---
> #line 141 "include/mtd/mtd-abi.h"
417,425c881,882
<    uint32_t offset ;
<    uint32_t length ;
< };
< #line 112 "include/mtd/mtd-abi.h"
< struct nand_ecclayout {
<    uint32_t eccbytes ;
<    uint32_t eccpos[64U] ;
<    uint32_t oobavail ;
<    struct nand_oobfree oobfree[8U] ;
---
>    __u32 offset ;
>    __u32 length ;
427c884
< #line 124 "include/mtd/mtd-abi.h"
---
> #line 163 "include/mtd/mtd-abi.h"
429,432c886,889
<    uint32_t corrected ;
<    uint32_t failed ;
<    uint32_t badblocks ;
<    uint32_t bbtblocks ;
---
>    __u32 corrected ;
>    __u32 failed ;
>    __u32 badblocks ;
>    __u32 bbtblocks ;
434c891
< #line 146
---
> #line 185
436c893
< #line 146 "include/mtd/mtd-abi.h"
---
> #line 185 "include/mtd/mtd-abi.h"
451c908
< #line 49 "include/linux/mtd/mtd.h"
---
> #line 61 "include/linux/mtd/mtd.h"
458,459c915,916
< #line 56
< enum ldv_11800 {
---
> #line 68
> enum ldv_14589 {
464,466c921,923
< #line 71 "include/linux/mtd/mtd.h"
< typedef enum ldv_11800 mtd_oob_mode_t;
< #line 72 "include/linux/mtd/mtd.h"
---
> #line 81 "include/linux/mtd/mtd.h"
> typedef enum ldv_14589 mtd_oob_mode_t;
> #line 82 "include/linux/mtd/mtd.h"
477c934,943
< #line 102 "include/linux/mtd/mtd.h"
---
> #line 112 "include/linux/mtd/mtd.h"
> struct nand_ecclayout {
>    __u32 eccbytes ;
>    __u32 eccpos[448U] ;
>    __u32 oobavail ;
>    struct nand_oobfree oobfree[32U] ;
> };
> #line 127
> struct backing_dev_info;
> #line 127 "include/linux/mtd/mtd.h"
483a950
>    uint32_t writebufsize ;
497a965,967
>    unsigned long (*get_unmapped_area)(struct mtd_info * , unsigned long  , unsigned long  ,
>                                       unsigned long  ) ;
>    struct backing_dev_info *backing_dev_info ;
513a984
>    int (*is_locked)(struct mtd_info * , loff_t  , uint64_t  ) ;
522a994
>    struct device dev ;
527c999,1001
< #line 295 "include/linux/mtd/mtd.h"
---
> #line 323
> struct mtd_partition;
> #line 357 "include/linux/mtd/mtd.h"
534d1007
<    struct mtd_info **mtdp ;
536c1009
< #line 53 "include/linux/mtd/partitions.h"
---
> #line 44 "include/linux/mtd/partitions.h"
543c1016
< #line 156 "include/linux/bootmem.h"
---
> #line 172 "include/linux/bootmem.h"
549c1022,1024
< #line 238 "include/linux/kernel.h"
---
> #line 326 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
> typedef int ldv_func_ret_type___0;
> #line 101 "include/linux/printk.h"
551c1026
< #line 43 "include/linux/string.h"
---
> #line 45 "include/linux/string.h"
553c1028,1046
< #line 205 "include/linux/slub_def.h"
---
> #line 168 "include/linux/mutex.h"
> extern int mutex_trylock(struct mutex * ) ;
> #line 171
> int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) ;
> #line 173
> extern void mutex_unlock(struct mutex * ) ;
> #line 176
> void ldv_mutex_unlock_3(struct mutex *ldv_func_arg1 ) ;
> #line 7 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
> extern void mutex_lock(struct mutex * ) ;
> #line 10
> void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
> #line 15
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) ;
> #line 16
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) ;
> #line 19
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) ;
> #line 218 "include/linux/slub_def.h"
555c1048
< #line 212 "include/linux/slub_def.h"
---
> #line 265 "include/linux/slub_def.h"
561c1054
< #line 227
---
> #line 280
563c1056
< #line 227
---
> #line 280
567c1060
< #line 304 "include/linux/slab.h"
---
> #line 338 "include/linux/slab.h"
573c1066
< #line 306
---
> #line 340
575c1068
< #line 306
---
> #line 340
579c1072
< #line 86 "include/linux/module.h"
---
> #line 26 "include/linux/export.h"
581c1074
< #line 65 "include/linux/mtd/partitions.h"
---
> #line 63 "include/linux/mtd/partitions.h"
583c1076
< #line 55 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
---
> #line 64 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
600c1093
< #line 62
---
> #line 71
602c1095
< #line 62
---
> #line 71
604c1097
< #line 63
---
> #line 72
606c1099
< #line 65
---
> #line 74
608,610c1101,1103
< #line 68
<   tmp = kzalloc(192UL, 208U);
< #line 68
---
> #line 77
>   tmp = kzalloc(160UL, 208U);
> #line 77
612c1105
< #line 69
---
> #line 78
614c1107
< #line 70
---
> #line 79
619c1112
< #line 71
---
> #line 80
621c1114
< #line 72
---
> #line 81
623c1116
< #line 73
---
> #line 82
625c1118
< #line 74
---
> #line 83
627c1120
< #line 76
---
> #line 85
629c1122
< #line 77
---
> #line 86
631c1124
< #line 78
---
> #line 87
633c1126
< #line 79
---
> #line 88
635,636c1128,1129
<   ldv_10710: 
< #line 82
---
>   ldv_15320: 
> #line 91
638c1131
< #line 83
---
> #line 92
640c1133
< #line 85
---
> #line 94
642c1135
< #line 85
---
> #line 94
644c1137
< #line 86
---
> #line 95
649c1142
< #line 87
---
> #line 96
651,652c1144,1145
< #line 88
<     goto ldv_10709;
---
> #line 97
>     goto ldv_15319;
656c1149
< #line 89
---
> #line 98
658,659c1151,1152
< #line 90
<     goto ldv_10709;
---
> #line 99
>     goto ldv_15319;
663c1156
< #line 91
---
> #line 100
665c1158
< #line 92
---
> #line 101
667c1160
< #line 92
---
> #line 101
669c1162
< #line 92
---
> #line 101
671,672c1164,1165
< #line 93
<     goto ldv_10710;
---
> #line 102
>     goto ldv_15320;
676,677c1169,1170
<   ldv_10709: 
< #line 94
---
>   ldv_15319: 
> #line 103
679c1172
< #line 96
---
> #line 105
681c1174
< #line 97
---
> #line 106
683c1176
< #line 98
---
> #line 107
688c1181
< #line 101
---
> #line 110
691,694c1184,1187
< #line 103
<   goto ldv_10713;
<   ldv_10712: 
< #line 104
---
> #line 112
>   goto ldv_15323;
>   ldv_15322: 
> #line 113
696c1189
< #line 105
---
> #line 114
698,699c1191,1192
<   ldv_10713: ;
< #line 103
---
>   ldv_15323: ;
> #line 112
701,702c1194,1195
< #line 104
<     goto ldv_10712;
---
> #line 113
>     goto ldv_15322;
706c1199
< #line 108
---
> #line 117
708,709c1201,1202
< #line 109
<   goto ldv_10715;
---
> #line 118
>   goto ldv_15325;
711,714c1204,1207
< #line 111
<   goto ldv_10718;
<   ldv_10717: 
< #line 112
---
> #line 120
>   goto ldv_15328;
>   ldv_15327: 
> #line 121
716c1209
< #line 113
---
> #line 122
718,719c1211,1212
<   ldv_10718: ;
< #line 111
---
>   ldv_15328: ;
> #line 120
721,722c1214,1215
< #line 112
<     goto ldv_10717;
---
> #line 121
>     goto ldv_15327;
726c1219
< #line 116
---
> #line 125
728c1221
< #line 117
---
> #line 126
730,731c1223,1224
< #line 118
<   goto ldv_10715;
---
> #line 127
>   goto ldv_15325;
733c1226
< #line 120
---
> #line 129
735,736c1228,1229
< #line 121
<   goto ldv_10715;
---
> #line 130
>   goto ldv_15325;
738,739c1231,1232
<   ldv_10715: 
< #line 124
---
>   ldv_15325: 
> #line 133
741c1234
< #line 126
---
> #line 135
743c1236
< #line 127
---
> #line 136
745c1238
< #line 128
---
> #line 137
750c1243
< #line 131
---
> #line 140
752c1245
< #line 132
---
> #line 141
754c1247
< #line 133
---
> #line 142
756c1249
< #line 134
---
> #line 143
758c1251
< #line 136
---
> #line 145
760c1253
< #line 137
---
> #line 146
762c1255
< #line 138
---
> #line 147
764c1257
< #line 139
---
> #line 148
766c1259
< #line 141
---
> #line 150
768c1261
< #line 142
---
> #line 151
772c1265
< #line 145 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
---
> #line 154 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
774c1267
< #line 151 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
---
> #line 160 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
780c1273
< #line 153
---
> #line 162
782c1275
< #line 153
---
> #line 162
786,787d1278
< #line 179
< void ldv_check_final_state(void) ;
788a1280,1281
> void ldv_check_final_state(void) ;
> #line 197
790c1283
< #line 191
---
> #line 200
792c1285
< #line 194
---
> #line 203
794c1287
< #line 197 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
---
> #line 206 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
796c1289
< #line 200 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
---
> #line 209 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
807,808d1299
< #line 230
<   LDV_IN_INTERRUPT = 1;
809a1301,1302
>   LDV_IN_INTERRUPT = 1;
> #line 248
811c1304
< #line 253
---
> #line 262
813c1306
< #line 254
---
> #line 263
815c1308
< #line 254
---
> #line 263
817c1310
< #line 255
---
> #line 264
822,825c1315,1318
< #line 259
<   goto ldv_10757;
<   ldv_10756: 
< #line 262
---
> #line 268
>   goto ldv_15367;
>   ldv_15366: 
> #line 271
827c1320
< #line 262
---
> #line 271
830c1323
< #line 280
---
> #line 289
832c1325
< #line 281
---
> #line 290
834,835c1327,1328
< #line 288
<   goto ldv_10754;
---
> #line 297
>   goto ldv_15364;
837,838c1330,1331
< #line 289
<   goto ldv_10754;
---
> #line 298
>   goto ldv_15364;
840,842c1333,1335
<   ldv_10754: ;
<   ldv_10757: 
< #line 259
---
>   ldv_15364: ;
>   ldv_15367: 
> #line 268
844c1337
< #line 259
---
> #line 268
846,847c1339,1340
< #line 260
<     goto ldv_10756;
---
> #line 269
>     goto ldv_15366;
854c1347
< #line 298
---
> #line 307
856c1349,1397
< #line 301
---
> #line 310
>   return;
> }
> }
> #line 314 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
> void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 319
>   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
> #line 321
>   mutex_lock(ldv_func_arg1);
> #line 322
>   return;
> }
> }
> #line 324 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
> int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) 
> { 
>   ldv_func_ret_type___0 ldv_func_res ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 329
>   tmp = mutex_trylock(ldv_func_arg1);
> #line 329
>   ldv_func_res = tmp;
> #line 331
>   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
> #line 331
>   return (tmp___0);
> #line 333
>   return (ldv_func_res);
> }
> }
> #line 336 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/mtd/ar7part.c.prepared"
> void ldv_mutex_unlock_3(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 341
>   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
> #line 343
>   mutex_unlock(ldv_func_arg1);
> #line 344
861a1403,1415
> #line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
> __inline static void ldv_error(void) 
> { 
> 
> 
>   {
>   LDV_ERROR: reach_error();
> #line 12
>   goto LDV_ERROR;
> }
> }
> #line 25
> extern int ldv_undef_int(void) ;
872c1426,1599
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 8 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_mutex_of_device  ;
> #line 11 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 16
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 16
>     ldv_error();
>   }
> #line 19
>   nondetermined = ldv_undef_int();
> #line 22
>   if (nondetermined) {
> #line 25
>     ldv_mutex_mutex_of_device = 2;
> #line 27
>     return (0);
>   } else {
> #line 32
>     return (-4);
>   }
> }
> }
> #line 37 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 42
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 42
>     ldv_error();
>   }
> #line 45
>   nondetermined = ldv_undef_int();
> #line 48
>   if (nondetermined) {
> #line 51
>     ldv_mutex_mutex_of_device = 2;
> #line 53
>     return (0);
>   } else {
> #line 58
>     return (-4);
>   }
> }
> }
> #line 63 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 66
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 66
>     ldv_error();
>   }
> #line 68
>   ldv_mutex_mutex_of_device = 2;
> #line 69
>   return;
> }
> }
> #line 72 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
> { 
>   int is_mutex_held_by_another_thread ;
> 
>   {
> #line 77
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 77
>     ldv_error();
>   }
> #line 80
>   is_mutex_held_by_another_thread = ldv_undef_int();
> #line 83
>   if (is_mutex_held_by_another_thread) {
> #line 86
>     return (0);
>   } else {
> #line 91
>     ldv_mutex_mutex_of_device = 2;
> #line 93
>     return (1);
>   }
> }
> }
> #line 98 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
> { 
>   int atomic_value_after_dec ;
> 
>   {
> #line 103
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 103
>     ldv_error();
>   }
> #line 106
>   atomic_value_after_dec = ldv_undef_int();
> #line 109
>   if (atomic_value_after_dec == 0) {
> #line 112
>     ldv_mutex_mutex_of_device = 2;
> #line 114
>     return (1);
>   } else {
> 
>   }
> #line 118
>   return (0);
> }
> }
> #line 123 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 127
>   if (ldv_mutex_mutex_of_device == 1) {
> #line 130
>     nondetermined = ldv_undef_int();
> #line 133
>     if (nondetermined) {
> #line 136
>       return (0);
>     } else {
> #line 141
>       return (1);
>     }
>   } else {
> #line 147
>     return (1);
>   }
> }
> }
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 155
>   if (ldv_mutex_mutex_of_device == 2) {
> 
>   } else {
> #line 155
>     ldv_error();
>   }
> #line 157
>   ldv_mutex_mutex_of_device = 1;
> #line 158
>   return;
> }
> }
> #line 162 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
878c1605,1607
< #line 12
---
> #line 165
>   ldv_mutex_mutex_of_device = 1;
> #line 166
882c1611
< #line 15 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 169 "/work/ldvuser/novikov/work/current--X--drivers/mtd/ar7part.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
888c1617,1624
< #line 17
---
> #line 172
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 172
>     ldv_error();
>   }
> #line 173
