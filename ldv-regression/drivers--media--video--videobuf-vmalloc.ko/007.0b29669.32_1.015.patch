6c6,8
< #line 17 "include/asm-generic/int-ll64.h"
---
> #line 138 "include/linux/init.h"
> typedef void (*ctor_fn_t)(void);
> #line 19 "include/asm-generic/int-ll64.h"
8c10
< #line 20 "include/asm-generic/int-ll64.h"
---
> #line 22 "include/asm-generic/int-ll64.h"
10,11d11
< #line 21 "include/asm-generic/int-ll64.h"
< typedef unsigned short __u16;
12a13,14
> typedef unsigned short __u16;
> #line 25 "include/asm-generic/int-ll64.h"
14c16
< #line 24 "include/asm-generic/int-ll64.h"
---
> #line 26 "include/asm-generic/int-ll64.h"
16c18
< #line 27 "include/asm-generic/int-ll64.h"
---
> #line 29 "include/asm-generic/int-ll64.h"
18c20
< #line 28 "include/asm-generic/int-ll64.h"
---
> #line 30 "include/asm-generic/int-ll64.h"
20,22c22
< #line 40 "include/asm-generic/int-ll64.h"
< typedef signed char s8;
< #line 41 "include/asm-generic/int-ll64.h"
---
> #line 43 "include/asm-generic/int-ll64.h"
24c24
< #line 44 "include/asm-generic/int-ll64.h"
---
> #line 46 "include/asm-generic/int-ll64.h"
26,27d25
< #line 47 "include/asm-generic/int-ll64.h"
< typedef unsigned int u32;
28a27,28
> typedef unsigned int u32;
> #line 51 "include/asm-generic/int-ll64.h"
30c30
< #line 50 "include/asm-generic/int-ll64.h"
---
> #line 52 "include/asm-generic/int-ll64.h"
32c32
< #line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
---
> #line 11 "include/asm-generic/types.h"
34c34
< #line 28 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
---
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
98,99d97
< #line 183 "include/linux/types.h"
< typedef u64 phys_addr_t;
162c160
< #line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
---
> #line 60 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
164,167d161
< #line 40 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __builtin_va_list __gnuc_va_list;
< #line 102 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __gnuc_va_list va_list;
175c169
< #line 114 "include/linux/kernel.h"
---
> #line 116 "include/linux/kernel.h"
177c171
< #line 208
---
> #line 211
179,180d172
< #line 43 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
< struct pgprot;
185c177
< #line 182 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
189c181
< #line 182 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
191c183
< #line 184 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
195c187
< #line 184 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
197c189
< #line 272
---
> #line 277
199c191
< #line 284
---
> #line 290
201c193
< #line 301
---
> #line 307
233c225,231
< #line 144 "include/linux/cpumask.h"
---
> #line 46 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
> struct thread_struct;
> #line 52
> struct cpumask;
> #line 321
> struct raw_spinlock;
> #line 13 "include/linux/cpumask.h"
237c235
< #line 144 "include/linux/cpumask.h"
---
> #line 13 "include/linux/cpumask.h"
239,246d236
< #line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
< struct thread_struct;
< #line 355
< struct raw_spinlock;
< #line 34 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ds.h"
< struct ds_context;
< #line 36
< struct bts_tracer;
249c239
< #line 88
---
> #line 91
251c241
< #line 88 "include/linux/personality.h"
---
> #line 91 "include/linux/personality.h"
266c256
< #line 284 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 286 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
278,279c268,269
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct____missing_field_name_28 {
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct____missing_field_name_27 {
283,284c273,274
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct____missing_field_name_29 {
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct____missing_field_name_28 {
290,293c280,283
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union __anonunion____missing_field_name_27 {
<    struct __anonstruct____missing_field_name_28 __annonCompField9 ;
<    struct __anonstruct____missing_field_name_29 __annonCompField10 ;
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> union __anonunion____missing_field_name_26 {
>    struct __anonstruct____missing_field_name_27 __annonCompField11 ;
>    struct __anonstruct____missing_field_name_28 __annonCompField12 ;
295,296c285,286
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union __anonunion____missing_field_name_30 {
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> union __anonunion____missing_field_name_29 {
300c290
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
306c296
<    union __anonunion____missing_field_name_27 __annonCompField11 ;
---
>    union __anonunion____missing_field_name_26 __annonCompField13 ;
312c302
<    union __anonunion____missing_field_name_30 __annonCompField12 ;
---
>    union __anonunion____missing_field_name_29 __annonCompField14 ;
314c304
< #line 335 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 337 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
333c323,327
< #line 355 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 357 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct ymmh_struct {
>    u32 ymmh_space[64] ;
> };
> #line 362 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
339c333
< #line 361 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 368 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
342a337
>    struct ymmh_struct ymmh ;
344c339
< #line 367 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 375 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
351c346
< #line 402
---
> #line 423
353c348,350
< #line 407 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 425
> struct ds_context;
> #line 425 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
363d359
<    unsigned long ip ;
381d376
<    unsigned int bts_ovfl_signal ;
383,384c378,379
< #line 609 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct_mm_segment_t_32 {
---
> #line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct_mm_segment_t_31 {
387,388c382,383
< #line 609 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< typedef struct __anonstruct_mm_segment_t_32 mm_segment_t;
---
> #line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> typedef struct __anonstruct_mm_segment_t_31 mm_segment_t;
410c405
< struct __anonstruct____missing_field_name_34 {
---
> struct __anonstruct____missing_field_name_33 {
417c412
< struct __anonstruct_futex_35 {
---
> struct __anonstruct_futex_34 {
422a418
>    u32 *uaddr2 ;
425c421
< struct __anonstruct_nanosleep_36 {
---
> struct __anonstruct_nanosleep_35 {
434c430
< struct __anonstruct_poll_37 {
---
> struct __anonstruct_poll_36 {
442,446c438,442
< union __anonunion____missing_field_name_33 {
<    struct __anonstruct____missing_field_name_34 __annonCompField14 ;
<    struct __anonstruct_futex_35 futex ;
<    struct __anonstruct_nanosleep_36 nanosleep ;
<    struct __anonstruct_poll_37 poll ;
---
> union __anonunion____missing_field_name_32 {
>    struct __anonstruct____missing_field_name_33 __annonCompField16 ;
>    struct __anonstruct_futex_34 futex ;
>    struct __anonstruct_nanosleep_35 nanosleep ;
>    struct __anonstruct_poll_36 poll ;
451c447
<    union __anonunion____missing_field_name_33 __annonCompField15 ;
---
>    union __anonunion____missing_field_name_32 __annonCompField17 ;
453c449
< #line 23 "include/asm-generic/atomic.h"
---
> #line 23 "include/asm-generic/atomic-long.h"
475c471
< struct __anonstruct_raw_rwlock_t_38 {
---
> struct __anonstruct_raw_rwlock_t_37 {
479,480c475,476
< typedef struct __anonstruct_raw_rwlock_t_38 raw_rwlock_t;
< #line 363 "include/linux/lockdep.h"
---
> typedef struct __anonstruct_raw_rwlock_t_37 raw_rwlock_t;
> #line 366 "include/linux/lockdep.h"
485c481
< struct __anonstruct_spinlock_t_39 {
---
> struct __anonstruct_spinlock_t_38 {
492c488
< typedef struct __anonstruct_spinlock_t_39 spinlock_t;
---
> typedef struct __anonstruct_spinlock_t_38 spinlock_t;
494c490
< struct __anonstruct_rwlock_t_40 {
---
> struct __anonstruct_rwlock_t_39 {
501c497
< typedef struct __anonstruct_rwlock_t_40 rwlock_t;
---
> typedef struct __anonstruct_rwlock_t_39 rwlock_t;
536c532
<    int (*func)(wait_queue_t *wait , unsigned int mode , int sync , void *key ) ;
---
>    int (*func)(wait_queue_t *wait , unsigned int mode , int flags , void *key ) ;
546,547c542,543
< #line 92 "include/linux/nodemask.h"
< struct __anonstruct_nodemask_t_42 {
---
> #line 98 "include/linux/nodemask.h"
> struct __anonstruct_nodemask_t_41 {
550,551c546,547
< #line 92 "include/linux/nodemask.h"
< typedef struct __anonstruct_nodemask_t_42 nodemask_t;
---
> #line 98 "include/linux/nodemask.h"
> typedef struct __anonstruct_nodemask_t_41 nodemask_t;
561c557
< #line 67 "include/linux/mutex.h"
---
> #line 69 "include/linux/mutex.h"
565d560
<    struct mutex *lock ;
576c571
< #line 37 "include/linux/pm.h"
---
> #line 167 "include/linux/ioport.h"
578c573,609
< #line 39 "include/linux/pm.h"
---
> #line 46 "include/linux/ktime.h"
> union ktime {
>    s64 tv64 ;
> };
> #line 59 "include/linux/ktime.h"
> typedef union ktime ktime_t;
> #line 10 "include/linux/timer.h"
> struct tvec_base;
> #line 12 "include/linux/timer.h"
> struct timer_list {
>    struct list_head entry ;
>    unsigned long expires ;
>    void (*function)(unsigned long  ) ;
>    unsigned long data ;
>    struct tvec_base *base ;
>    void *start_site ;
>    char start_comm[16] ;
>    int start_pid ;
> };
> #line 240
> struct hrtimer;
> #line 241
> enum hrtimer_restart;
> #line 16 "include/linux/workqueue.h"
> struct work_struct;
> #line 25 "include/linux/workqueue.h"
> struct work_struct {
>    atomic_long_t data ;
>    struct list_head entry ;
>    void (*func)(struct work_struct *work ) ;
> };
> #line 39 "include/linux/workqueue.h"
> struct delayed_work {
>    struct work_struct work ;
>    struct timer_list timer ;
> };
> #line 43 "include/linux/pm.h"
582c613
< #line 39 "include/linux/pm.h"
---
> #line 43 "include/linux/pm.h"
584c615
< #line 170 "include/linux/pm.h"
---
> #line 196 "include/linux/pm.h"
599a631,633
>    int (*runtime_suspend)(struct device *dev ) ;
>    int (*runtime_resume)(struct device *dev ) ;
>    int (*runtime_idle)(struct device *dev ) ;
601c635
< #line 308
---
> #line 351
611c645,659
< #line 318 "include/linux/pm.h"
---
> #line 384
> enum rpm_status {
>     RPM_ACTIVE = 0,
>     RPM_RESUMING = 1,
>     RPM_SUSPENDED = 2,
>     RPM_SUSPENDING = 3
> } ;
> #line 403
> enum rpm_request {
>     RPM_REQ_NONE = 0,
>     RPM_REQ_IDLE = 1,
>     RPM_REQ_SUSPEND = 2,
>     RPM_REQ_RESUME = 3
> } ;
> #line 410 "include/linux/pm.h"
617a666,680
>    struct timer_list suspend_timer ;
>    unsigned long timer_expires ;
>    struct work_struct work ;
>    wait_queue_head_t wait_queue ;
>    spinlock_t lock ;
>    atomic_t usage_count ;
>    atomic_t child_count ;
>    unsigned int disable_depth : 3 ;
>    unsigned int ignore_children : 1 ;
>    unsigned int idle_notification : 1 ;
>    unsigned int request_pending : 1 ;
>    unsigned int deferred_resume : 1 ;
>    enum rpm_request request ;
>    enum rpm_status runtime_status ;
>    int runtime_error ;
620c683
< struct __anonstruct_mm_context_t_91 {
---
> struct __anonstruct_mm_context_t_108 {
627,628c690,691
< typedef struct __anonstruct_mm_context_t_91 mm_context_t;
< #line 8 "include/linux/gfp.h"
---
> typedef struct __anonstruct_mm_context_t_108 mm_context_t;
> #line 10 "include/linux/gfp.h"
630c693
< #line 40 "include/linux/kmod.h"
---
> #line 45 "include/linux/kmod.h"
672c735
< #line 21 "include/linux/kref.h"
---
> #line 20 "include/linux/kref.h"
723c786
< #line 39
---
> #line 43
725c788
< #line 39
---
> #line 43
727,728c790,791
< #line 39 "include/linux/moduleparam.h"
< union __anonunion____missing_field_name_101 {
---
> #line 43 "include/linux/moduleparam.h"
> union __anonunion____missing_field_name_118 {
733c796
< #line 39 "include/linux/moduleparam.h"
---
> #line 43 "include/linux/moduleparam.h"
736c799,800
<    unsigned int perm ;
---
>    u16 perm ;
>    u16 flags ;
739c803
<    union __anonunion____missing_field_name_101 __annonCompField16 ;
---
>    union __anonunion____missing_field_name_118 __annonCompField18 ;
741c805
< #line 52 "include/linux/moduleparam.h"
---
> #line 57 "include/linux/moduleparam.h"
746c810
< #line 58 "include/linux/moduleparam.h"
---
> #line 63 "include/linux/moduleparam.h"
755,806c819,822
< #line 19 "include/linux/marker.h"
< struct marker;
< #line 33 "include/linux/marker.h"
< typedef void marker_probe_func(void *probe_private , void *call_private , char const   *fmt ,
<                                va_list *args );
< #line 36 "include/linux/marker.h"
< struct marker_probe_closure {
<    marker_probe_func *func ;
<    void *probe_private ;
< };
< #line 41 "include/linux/marker.h"
< struct marker {
<    char const   *name ;
<    char const   *format ;
<    char state ;
<    char ptype ;
<    void (*call)(struct marker  const  *mdata , void *call_private  , ...) ;
<    struct marker_probe_closure single ;
<    struct marker_probe_closure *multi ;
<    char const   *tp_name ;
<    void *tp_cb ;
< } __attribute__((__aligned__(8))) ;
< #line 46 "include/linux/ktime.h"
< union ktime {
<    s64 tv64 ;
< };
< #line 59 "include/linux/ktime.h"
< typedef union ktime ktime_t;
< #line 9 "include/linux/timer.h"
< struct tvec_base;
< #line 11 "include/linux/timer.h"
< struct timer_list {
<    struct list_head entry ;
<    unsigned long expires ;
<    void (*function)(unsigned long  ) ;
<    unsigned long data ;
<    struct tvec_base *base ;
<    void *start_site ;
<    char start_comm[16] ;
<    int start_pid ;
< };
< #line 163
< struct hrtimer;
< #line 164
< enum hrtimer_restart;
< #line 16 "include/linux/workqueue.h"
< struct work_struct;
< #line 25 "include/linux/workqueue.h"
< struct work_struct {
<    atomic_long_t data ;
<    struct list_head entry ;
<    void (*func)(struct work_struct *work ) ;
---
> #line 25 "include/linux/completion.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
808,811c824,827
< #line 39 "include/linux/workqueue.h"
< struct delayed_work {
<    struct work_struct work ;
<    struct timer_list timer ;
---
> #line 49 "include/linux/rcupdate.h"
> struct rcu_head {
>    struct rcu_head *next ;
>    void (*func)(struct rcu_head *head ) ;
813c829,839
< #line 14 "include/linux/slub_def.h"
---
> #line 21 "include/linux/tracepoint.h"
> struct tracepoint;
> #line 23 "include/linux/tracepoint.h"
> struct tracepoint {
>    char const   *name ;
>    int state ;
>    void (*regfunc)(void) ;
>    void (*unregfunc)(void) ;
>    void **funcs ;
> } __attribute__((__aligned__(32))) ;
> #line 16 "include/linux/slub_def.h"
835c861
< #line 35 "include/linux/slub_def.h"
---
> #line 37 "include/linux/slub_def.h"
844c870
< #line 46 "include/linux/slub_def.h"
---
> #line 48 "include/linux/slub_def.h"
853c879
< #line 62 "include/linux/slub_def.h"
---
> #line 64 "include/linux/slub_def.h"
857c883
< #line 69 "include/linux/slub_def.h"
---
> #line 71 "include/linux/slub_def.h"
880,898c906
< #line 25 "include/linux/completion.h"
< struct completion {
<    unsigned int done ;
<    wait_queue_head_t wait ;
< };
< #line 50 "include/linux/rcupdate.h"
< struct rcu_head {
<    struct rcu_head *next ;
<    void (*func)(struct rcu_head *head ) ;
< };
< #line 21 "include/linux/tracepoint.h"
< struct tracepoint;
< #line 23 "include/linux/tracepoint.h"
< struct tracepoint {
<    char const   *name ;
<    int state ;
<    void **funcs ;
< } __attribute__((__aligned__(32))) ;
< #line 5 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/module.h"
---
> #line 8 "include/asm-generic/module.h"
902c910
< #line 34 "include/linux/module.h"
---
> #line 35 "include/linux/module.h"
907c915
< #line 48 "include/linux/module.h"
---
> #line 49 "include/linux/module.h"
917c925
< #line 58
---
> #line 59
919c927
< #line 58 "include/linux/module.h"
---
> #line 59 "include/linux/module.h"
926c934
< #line 71
---
> #line 72
928c936
< #line 222
---
> #line 227
934c942
< #line 229
---
> #line 234
936c944
< #line 229
---
> #line 234
938c946,948
< #line 229 "include/linux/module.h"
---
> #line 234
> struct ftrace_event_call;
> #line 234 "include/linux/module.h"
950a961,962
>    struct kernel_param *kp ;
>    unsigned int num_kp ;
977a990
>    Elf64_Sym *core_symtab ;
978a992
>    unsigned int core_num_syms ;
979a994
>    char *core_strtab ;
984,985d998
<    struct marker *markers ;
<    unsigned int num_markers ;
987a1001,1004
>    char const   **trace_bprintk_fmt_start ;
>    unsigned int num_trace_bprintk_fmt ;
>    struct ftrace_event_call *trace_events ;
>    unsigned int num_trace_events ;
991a1009,1010
>    ctor_fn_t *ctors ;
>    unsigned int num_ctors ;
993c1012
< #line 594
---
> #line 665
994a1014,1025
> #line 10 "include/linux/irqreturn.h"
> enum irqreturn {
>     IRQ_NONE = 0,
>     IRQ_HANDLED = 1,
>     IRQ_WAKE_THREAD = 2
> } ;
> #line 16 "include/linux/irqreturn.h"
> typedef enum irqreturn irqreturn_t;
> #line 83 "include/linux/irq.h"
> struct proc_dir_entry;
> #line 175
> struct irqaction;
1001c1032
< #line 553
---
> #line 568
1035c1066
< #line 22 "include/linux/mm_types.h"
---
> #line 23 "include/linux/mm_types.h"
1037c1068
< #line 27 "include/linux/mm_types.h"
---
> #line 28 "include/linux/mm_types.h"
1039,1040c1070,1071
< #line 39 "include/linux/mm_types.h"
< struct __anonstruct____missing_field_name_105 {
---
> #line 40 "include/linux/mm_types.h"
> struct __anonstruct____missing_field_name_124 {
1044,1045c1075,1076
< #line 39 "include/linux/mm_types.h"
< union __anonunion____missing_field_name_104 {
---
> #line 40 "include/linux/mm_types.h"
> union __anonunion____missing_field_name_123 {
1047c1078
<    struct __anonstruct____missing_field_name_105 __annonCompField17 ;
---
>    struct __anonstruct____missing_field_name_124 __annonCompField19 ;
1049,1050c1080,1081
< #line 39 "include/linux/mm_types.h"
< struct __anonstruct____missing_field_name_107 {
---
> #line 40 "include/linux/mm_types.h"
> struct __anonstruct____missing_field_name_126 {
1054,1056c1085,1087
< #line 39 "include/linux/mm_types.h"
< union __anonunion____missing_field_name_106 {
<    struct __anonstruct____missing_field_name_107 __annonCompField19 ;
---
> #line 40 "include/linux/mm_types.h"
> union __anonunion____missing_field_name_125 {
>    struct __anonstruct____missing_field_name_126 __annonCompField21 ;
1061,1062c1092,1093
< #line 39 "include/linux/mm_types.h"
< union __anonunion____missing_field_name_108 {
---
> #line 40 "include/linux/mm_types.h"
> union __anonunion____missing_field_name_127 {
1066c1097
< #line 39 "include/linux/mm_types.h"
---
> #line 40 "include/linux/mm_types.h"
1070,1072c1101,1103
<    union __anonunion____missing_field_name_104 __annonCompField18 ;
<    union __anonunion____missing_field_name_106 __annonCompField20 ;
<    union __anonunion____missing_field_name_108 __annonCompField21 ;
---
>    union __anonunion____missing_field_name_123 __annonCompField20 ;
>    union __anonunion____missing_field_name_125 __annonCompField22 ;
>    union __anonunion____missing_field_name_127 __annonCompField23 ;
1075,1076c1106,1107
< #line 122 "include/linux/mm_types.h"
< struct __anonstruct_vm_set_110 {
---
> #line 134 "include/linux/mm_types.h"
> struct __anonstruct_vm_set_129 {
1081,1083c1112,1114
< #line 122 "include/linux/mm_types.h"
< union __anonunion_shared_109 {
<    struct __anonstruct_vm_set_110 vm_set ;
---
> #line 134 "include/linux/mm_types.h"
> union __anonunion_shared_128 {
>    struct __anonstruct_vm_set_129 vm_set ;
1086c1117
< #line 122
---
> #line 134
1088c1119
< #line 122
---
> #line 134
1090c1121
< #line 122
---
> #line 134
1092c1123
< #line 122 "include/linux/mm_types.h"
---
> #line 134 "include/linux/mm_types.h"
1101c1132
<    union __anonunion_shared_109 shared ;
---
>    union __anonunion_shared_128 shared ;
1104c1135
<    struct vm_operations_struct *vm_ops ;
---
>    struct vm_operations_struct  const  *vm_ops ;
1111c1142
< #line 179 "include/linux/mm_types.h"
---
> #line 191 "include/linux/mm_types.h"
1116c1147
< #line 184 "include/linux/mm_types.h"
---
> #line 196 "include/linux/mm_types.h"
1122c1153,1155
< #line 190
---
> #line 202
> struct linux_binfmt;
> #line 202
1124c1157
< #line 190 "include/linux/mm_types.h"
---
> #line 202 "include/linux/mm_types.h"
1166a1200
>    struct linux_binfmt *binfmt ;
1198c1232
< struct __anonstruct_sigset_t_111 {
---
> struct __anonstruct_sigset_t_130 {
1202,1203c1236,1237
< typedef struct __anonstruct_sigset_t_111 sigset_t;
< #line 17 "include/asm-generic/signal.h"
---
> typedef struct __anonstruct_sigset_t_130 sigset_t;
> #line 17 "include/asm-generic/signal-defs.h"
1205c1239
< #line 18 "include/asm-generic/signal.h"
---
> #line 18 "include/asm-generic/signal-defs.h"
1207c1241
< #line 20 "include/asm-generic/signal.h"
---
> #line 20 "include/asm-generic/signal-defs.h"
1209c1243
< #line 21 "include/asm-generic/signal.h"
---
> #line 21 "include/asm-generic/signal-defs.h"
1230c1264
< struct __anonstruct__kill_113 {
---
> struct __anonstruct__kill_132 {
1235c1269
< struct __anonstruct__timer_114 {
---
> struct __anonstruct__timer_133 {
1243c1277
< struct __anonstruct__rt_115 {
---
> struct __anonstruct__rt_134 {
1249c1283
< struct __anonstruct__sigchld_116 {
---
> struct __anonstruct__sigchld_135 {
1257c1291
< struct __anonstruct__sigfault_117 {
---
> struct __anonstruct__sigfault_136 {
1258a1293
>    short _addr_lsb ;
1261c1296
< struct __anonstruct__sigpoll_118 {
---
> struct __anonstruct__sigpoll_137 {
1266c1301
< union __anonunion__sifields_112 {
---
> union __anonunion__sifields_131 {
1268,1273c1303,1308
<    struct __anonstruct__kill_113 _kill ;
<    struct __anonstruct__timer_114 _timer ;
<    struct __anonstruct__rt_115 _rt ;
<    struct __anonstruct__sigchld_116 _sigchld ;
<    struct __anonstruct__sigfault_117 _sigfault ;
<    struct __anonstruct__sigpoll_118 _sigpoll ;
---
>    struct __anonstruct__kill_132 _kill ;
>    struct __anonstruct__timer_133 _timer ;
>    struct __anonstruct__rt_134 _rt ;
>    struct __anonstruct__sigchld_135 _sigchld ;
>    struct __anonstruct__sigfault_136 _sigfault ;
>    struct __anonstruct__sigpoll_137 _sigpoll ;
1280c1315
<    union __anonunion__sifields_112 _sifields ;
---
>    union __anonunion__sifields_131 _sifields ;
1298,1305d1332
< #line 6 "include/linux/fs_struct.h"
< struct fs_struct {
<    atomic_t count ;
<    rwlock_t lock ;
<    int umask ;
<    struct path root ;
<    struct path pwd ;
< };
1342c1369
< struct __anonstruct_seccomp_t_121 {
---
> struct __anonstruct_seccomp_t_140 {
1346c1373
< typedef struct __anonstruct_seccomp_t_121 seccomp_t;
---
> typedef struct __anonstruct_seccomp_t_140 seccomp_t;
1365c1392
< #line 26 "include/linux/hrtimer.h"
---
> #line 27 "include/linux/hrtimer.h"
1367c1394
< #line 27
---
> #line 28
1369c1396
< #line 40
---
> #line 44
1374c1401
< #line 100 "include/linux/hrtimer.h"
---
> #line 103 "include/linux/hrtimer.h"
1382d1408
<    struct list_head cb_entry ;
1387c1413
< #line 139 "include/linux/hrtimer.h"
---
> #line 141 "include/linux/hrtimer.h"
1398c1424
< #line 168 "include/linux/hrtimer.h"
---
> #line 170 "include/linux/hrtimer.h"
1423c1449
< #line 948 "include/linux/sysctl.h"
---
> #line 947 "include/linux/sysctl.h"
1425c1451
< #line 28 "include/linux/key.h"
---
> #line 29 "include/linux/key.h"
1427c1453
< #line 31 "include/linux/key.h"
---
> #line 32 "include/linux/key.h"
1429,1430d1454
< #line 75
< struct signal_struct;
1431a1456,1457
> struct signal_struct;
> #line 77
1433c1459
< #line 78
---
> #line 79
1435c1461
< #line 80
---
> #line 81
1437c1463
< #line 123
---
> #line 124
1439,1440c1465,1471
< #line 123 "include/linux/key.h"
< union __anonunion_type_data_176 {
---
> #line 124 "include/linux/key.h"
> union __anonunion____missing_field_name_195 {
>    time_t expiry ;
>    time_t revoked_at ;
> };
> #line 124 "include/linux/key.h"
> union __anonunion_type_data_196 {
1445,1446c1476,1477
< #line 123 "include/linux/key.h"
< union __anonunion_payload_177 {
---
> #line 124 "include/linux/key.h"
> union __anonunion_payload_197 {
1451c1482
< #line 123 "include/linux/key.h"
---
> #line 124 "include/linux/key.h"
1460c1491
<    time_t expiry ;
---
>    union __anonunion____missing_field_name_195 __annonCompField24 ;
1468,1469c1499,1500
<    union __anonunion_type_data_176 type_data ;
<    union __anonunion_payload_177 payload ;
---
>    union __anonunion_type_data_196 type_data ;
>    union __anonunion_payload_197 payload ;
1471c1502,1504
< #line 21 "include/linux/cred.h"
---
> #line 18 "include/linux/selinux.h"
> struct audit_context;
> #line 23 "include/linux/cred.h"
1473c1506
< #line 29 "include/linux/cred.h"
---
> #line 31 "include/linux/cred.h"
1481c1514
< #line 81 "include/linux/cred.h"
---
> #line 83 "include/linux/cred.h"
1490c1523
< #line 114 "include/linux/cred.h"
---
> #line 116 "include/linux/cred.h"
1492a1526,1528
>    atomic_t subscribers ;
>    void *put_addr ;
>    unsigned int magic ;
1515c1551
< #line 96 "include/linux/sched.h"
---
> #line 98 "include/linux/sched.h"
1517c1553
< #line 97
---
> #line 99
1519c1555
< #line 98
---
> #line 100
1521c1557,1563
< #line 141
---
> #line 101
> struct fs_struct;
> #line 102
> struct bts_context;
> #line 103
> struct perf_event_context;
> #line 153
1523c1565
< #line 142
---
> #line 154
1525c1567
< #line 337
---
> #line 357
1542c1584
< union __anonunion_ki_obj_179 {
---
> union __anonunion_ki_obj_199 {
1545a1588,1589
> #line 87
> struct eventfd_ctx;
1557c1601
<    union __anonunion_ki_obj_179 ki_obj ;
---
>    union __anonunion_ki_obj_199 ki_obj ;
1571c1615
<    struct file *ki_eventfd ;
---
>    struct eventfd_ctx *ki_eventfd ;
1601c1645
< #line 426 "include/linux/sched.h"
---
> #line 481 "include/linux/sched.h"
1608c1652
< #line 433 "include/linux/sched.h"
---
> #line 488 "include/linux/sched.h"
1618c1662,1669
< #line 452 "include/linux/sched.h"
---
> #line 496 "include/linux/sched.h"
> struct cpu_itimer {
>    cputime_t expires ;
>    cputime_t incr ;
>    u32 error ;
>    u32 incr_error ;
> };
> #line 514 "include/linux/sched.h"
1624c1675
< #line 479 "include/linux/sched.h"
---
> #line 550 "include/linux/sched.h"
1630,1640c1681
< #line 492 "include/linux/sched.h"
< union __anonunion____missing_field_name_180 {
<    pid_t pgrp  __attribute__((__deprecated__)) ;
<    pid_t __pgrp ;
< };
< #line 492 "include/linux/sched.h"
< union __anonunion____missing_field_name_181 {
<    pid_t session  __attribute__((__deprecated__)) ;
<    pid_t __session ;
< };
< #line 492
---
> #line 563
1642c1683
< #line 492
---
> #line 563
1644c1685
< #line 492
---
> #line 563
1646c1687
< #line 492 "include/linux/sched.h"
---
> #line 563 "include/linux/sched.h"
1662,1665c1703
<    cputime_t it_prof_expires ;
<    cputime_t it_virt_expires ;
<    cputime_t it_prof_incr ;
<    cputime_t it_virt_incr ;
---
>    struct cpu_itimer it[2] ;
1669d1706
<    union __anonunion____missing_field_name_180 __annonCompField22 ;
1671d1707
<    union __anonunion____missing_field_name_181 __annonCompField23 ;
1691a1728,1729
>    unsigned long maxrss ;
>    unsigned long cmaxrss ;
1698a1737
>    int oom_adj ;
1700c1739
< #line 641 "include/linux/sched.h"
---
> #line 701 "include/linux/sched.h"
1718c1757,1758
<    struct work_struct work ;
---
>    struct delayed_work work ;
>    atomic_long_t locked_vm ;
1720c1760
< #line 686
---
> #line 750
1722c1762
< #line 687
---
> #line 751
1724c1764
< #line 690 "include/linux/sched.h"
---
> #line 754 "include/linux/sched.h"
1732c1772
< #line 706 "include/linux/sched.h"
---
> #line 770 "include/linux/sched.h"
1747c1787
< #line 751
---
> #line 815
1754c1794
< #line 827 "include/linux/sched.h"
---
> #line 892 "include/linux/sched.h"
1757,1759c1797,1798
<    unsigned int __cpu_power ;
<    u32 reciprocal_cpu_power ;
<    unsigned long cpumask[] ;
---
>    unsigned int cpu_power ;
>    unsigned long cpumask[0] ;
1761c1800
< #line 850
---
> #line 919
1771c1810
< #line 868 "include/linux/sched.h"
---
> #line 937 "include/linux/sched.h"
1785a1825
>    unsigned int smt_gain ;
1813c1853
<    unsigned long span[] ;
---
>    unsigned long span[0] ;
1815c1855
< #line 960
---
> #line 1043
1817,1819c1857
< #line 969
< struct audit_context;
< #line 971
---
> #line 1054
1821c1859
< #line 974
---
> #line 1057
1823c1861
< #line 977 "include/linux/sched.h"
---
> #line 1066 "include/linux/sched.h"
1829c1867
<    void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int sync ) ;
---
>    void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int flags ) ;
1832c1870
<    int (*select_task_rq)(struct task_struct *p , int sync ) ;
---
>    int (*select_task_rq)(struct task_struct *p , int sd_flag , int flags ) ;
1839d1876
<    int (*needs_post_schedule)(struct rq *this_rq ) ;
1851a1889
>    unsigned int (*get_rr_interval)(struct task_struct *task ) ;
1854c1892
< #line 1028 "include/linux/sched.h"
---
> #line 1118 "include/linux/sched.h"
1859c1897
< #line 1042 "include/linux/sched.h"
---
> #line 1132 "include/linux/sched.h"
1870a1909
>    u64 nr_migrations ;
1873c1912
<    u64 nr_migrations ;
---
>    u64 avg_running ;
1877a1917,1918
>    u64 iowait_count ;
>    u64 iowait_sum ;
1904c1945
< #line 1102
---
> #line 1197
1906c1947
< #line 1102 "include/linux/sched.h"
---
> #line 1197 "include/linux/sched.h"
1917,1919c1958
< #line 1118
< struct linux_binfmt;
< #line 1118
---
> #line 1215
1921c1960
< #line 1118
---
> #line 1215
1923c1962
< #line 1118
---
> #line 1215
1925c1964
< #line 1118 "include/linux/sched.h"
---
> #line 1215 "include/linux/sched.h"
1942d1980
<    s8 oomkilladj ;
1950d1987
<    struct linux_binfmt *binfmt ;
1957a1995,1996
>    unsigned int in_iowait : 1 ;
>    unsigned int sched_reset_on_fork : 1 ;
1968,1970c2007
<    struct bts_tracer *bts ;
<    void *bts_buffer ;
<    size_t bts_size ;
---
>    struct bts_context *bts ;
1993c2030,2031
<    struct mutex cred_exec_mutex ;
---
>    struct mutex cred_guard_mutex ;
>    struct cred *replacement_session_keyring ;
1998d2035
<    unsigned long last_switch_timestamp ;
2021a2059
>    struct irqaction *irqaction ;
2052d2089
<    int cpuset_mems_generation ;
2059a2097,2099
>    struct perf_event_context *perf_event_ctxp ;
>    struct mutex perf_event_mutex ;
>    struct list_head perf_event_list ;
2073a2114,2128
>    unsigned long trace_recursion ;
>    unsigned long stack_start ;
> };
> #line 96 "include/linux/interrupt.h"
> struct irqaction {
>    irqreturn_t (*handler)(int  , void * ) ;
>    unsigned long flags ;
>    char const   *name ;
>    void *dev_id ;
>    struct irqaction *next ;
>    int irq ;
>    struct proc_dir_entry *dir ;
>    irqreturn_t (*thread_fn)(int  , void * ) ;
>    struct task_struct *thread ;
>    unsigned long thread_flags ;
2090c2145
< struct dma_mapping_ops;
---
> struct dma_map_ops;
2094c2149
<    struct dma_mapping_ops *dma_ops ;
---
>    struct dma_map_ops *dma_ops ;
2097c2152
< #line 31 "include/linux/device.h"
---
> #line 30 "include/linux/device.h"
2099c2154
< #line 33
---
> #line 32
2101c2156
< #line 34
---
> #line 33
2103c2158
< #line 35
---
> #line 34
2105c2160
< #line 36
---
> #line 35
2107c2162
< #line 37
---
> #line 36
2109c2164
< #line 39 "include/linux/device.h"
---
> #line 38 "include/linux/device.h"
2115c2170
< #line 52
---
> #line 51
2117c2172
< #line 52
---
> #line 51
2119c2174
< #line 52 "include/linux/device.h"
---
> #line 51 "include/linux/device.h"
2131,2132d2185
<    int (*suspend_late)(struct device *dev , pm_message_t state ) ;
<    int (*resume_early)(struct device *dev ) ;
2134c2187
<    struct dev_pm_ops *pm ;
---
>    struct dev_pm_ops  const  *pm ;
2137c2190
< #line 123 "include/linux/device.h"
---
> #line 122 "include/linux/device.h"
2148,2149c2201,2202
<    struct attribute_group **groups ;
<    struct dev_pm_ops *pm ;
---
>    struct attribute_group  const  **groups ;
>    struct dev_pm_ops  const  *pm ;
2152c2205
< #line 156 "include/linux/device.h"
---
> #line 155 "include/linux/device.h"
2158c2211
< #line 188
---
> #line 187
2160c2213
< #line 188 "include/linux/device.h"
---
> #line 187 "include/linux/device.h"
2167a2221
>    char *(*devnode)(struct device *dev , mode_t *mode ) ;
2172c2226
<    struct dev_pm_ops *pm ;
---
>    struct dev_pm_ops  const  *pm ;
2175c2229
< #line 208
---
> #line 209
2177c2231
< #line 241 "include/linux/device.h"
---
> #line 250 "include/linux/device.h"
2183c2237
< #line 288 "include/linux/device.h"
---
> #line 297 "include/linux/device.h"
2186c2240
<    struct attribute_group **groups ;
---
>    struct attribute_group  const  **groups ;
2187a2242
>    char *(*devnode)(struct device *dev , mode_t *mode ) ;
2189,2191c2244
<    int (*suspend)(struct device *dev , pm_message_t state ) ;
<    int (*resume)(struct device *dev ) ;
<    struct dev_pm_ops *pm ;
---
>    struct dev_pm_ops  const  *pm ;
2193c2246
< #line 301 "include/linux/device.h"
---
> #line 308 "include/linux/device.h"
2200c2253
< #line 361 "include/linux/device.h"
---
> #line 368 "include/linux/device.h"
2205c2258
< #line 370
---
> #line 377
2207c2260
< #line 370 "include/linux/device.h"
---
> #line 377 "include/linux/device.h"
2217d2269
<    void *driver_data ;
2232c2284
<    struct attribute_group **groups ;
---
>    struct attribute_group  const  **groups ;
2235c2287
< #line 6 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/scatterlist.h"
---
> #line 6 "include/asm-generic/scatterlist.h"
2244c2296
< #line 19 "include/linux/mm.h"
---
> #line 18 "include/linux/mm.h"
2246c2298
< #line 21
---
> #line 20
2248c2300
< #line 165 "include/linux/mm.h"
---
> #line 167 "include/linux/mm.h"
2255c2307
< #line 182 "include/linux/mm.h"
---
> #line 184 "include/linux/mm.h"
2260c2312
<    int (*page_mkwrite)(struct vm_area_struct *vma , struct page *page ) ;
---
>    int (*page_mkwrite)(struct vm_area_struct *vma , struct vm_fault *vmf ) ;
2268,2270c2320,2338
< #line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/dma-mapping.h"
< struct dma_mapping_ops {
<    int (*mapping_error)(struct device *dev , dma_addr_t dma_addr ) ;
---
> #line 13 "include/linux/dma-attrs.h"
> enum dma_attr {
>     DMA_ATTR_WRITE_BARRIER = 0,
>     DMA_ATTR_WEAK_ORDERING = 1,
>     DMA_ATTR_MAX = 2
> } ;
> #line 25 "include/linux/dma-attrs.h"
> struct dma_attrs {
>    unsigned long flags[(((unsigned long )DMA_ATTR_MAX + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
> };
> #line 11 "include/linux/dma-mapping.h"
> enum dma_data_direction {
>     DMA_BIDIRECTIONAL = 0,
>     DMA_TO_DEVICE = 1,
>     DMA_FROM_DEVICE = 2,
>     DMA_NONE = 3
> } ;
> #line 18 "include/linux/dma-mapping.h"
> struct dma_map_ops {
2274,2291c2342,2364
<    dma_addr_t (*map_single)(struct device *hwdev , phys_addr_t ptr , size_t size ,
<                             int direction ) ;
<    void (*unmap_single)(struct device *dev , dma_addr_t addr , size_t size , int direction ) ;
<    void (*sync_single_for_cpu)(struct device *hwdev , dma_addr_t dma_handle , size_t size ,
<                                int direction ) ;
<    void (*sync_single_for_device)(struct device *hwdev , dma_addr_t dma_handle , size_t size ,
<                                   int direction ) ;
<    void (*sync_single_range_for_cpu)(struct device *hwdev , dma_addr_t dma_handle ,
<                                      unsigned long offset , size_t size , int direction ) ;
<    void (*sync_single_range_for_device)(struct device *hwdev , dma_addr_t dma_handle ,
<                                         unsigned long offset , size_t size , int direction ) ;
<    void (*sync_sg_for_cpu)(struct device *hwdev , struct scatterlist *sg , int nelems ,
<                            int direction ) ;
<    void (*sync_sg_for_device)(struct device *hwdev , struct scatterlist *sg , int nelems ,
<                               int direction ) ;
<    int (*map_sg)(struct device *hwdev , struct scatterlist *sg , int nents , int direction ) ;
<    void (*unmap_sg)(struct device *hwdev , struct scatterlist *sg , int nents , int direction ) ;
<    int (*dma_supported)(struct device *hwdev , u64 mask ) ;
---
>    dma_addr_t (*map_page)(struct device *dev , struct page *page , unsigned long offset ,
>                           size_t size , enum dma_data_direction dir , struct dma_attrs *attrs ) ;
>    void (*unmap_page)(struct device *dev , dma_addr_t dma_handle , size_t size , enum dma_data_direction dir ,
>                       struct dma_attrs *attrs ) ;
>    int (*map_sg)(struct device *dev , struct scatterlist *sg , int nents , enum dma_data_direction dir ,
>                  struct dma_attrs *attrs ) ;
>    void (*unmap_sg)(struct device *dev , struct scatterlist *sg , int nents , enum dma_data_direction dir ,
>                     struct dma_attrs *attrs ) ;
>    void (*sync_single_for_cpu)(struct device *dev , dma_addr_t dma_handle , size_t size ,
>                                enum dma_data_direction dir ) ;
>    void (*sync_single_for_device)(struct device *dev , dma_addr_t dma_handle , size_t size ,
>                                   enum dma_data_direction dir ) ;
>    void (*sync_single_range_for_cpu)(struct device *dev , dma_addr_t dma_handle ,
>                                      unsigned long offset , size_t size , enum dma_data_direction dir ) ;
>    void (*sync_single_range_for_device)(struct device *dev , dma_addr_t dma_handle ,
>                                         unsigned long offset , size_t size , enum dma_data_direction dir ) ;
>    void (*sync_sg_for_cpu)(struct device *dev , struct scatterlist *sg , int nents ,
>                            enum dma_data_direction dir ) ;
>    void (*sync_sg_for_device)(struct device *dev , struct scatterlist *sg , int nents ,
>                               enum dma_data_direction dir ) ;
>    int (*mapping_error)(struct device *dev , dma_addr_t dma_addr ) ;
>    int (*dma_supported)(struct device *dev , u64 mask ) ;
>    int (*set_dma_mask)(struct device *dev , u64 mask ) ;
2303c2376
< union __anonunion_d_u_187 {
---
> union __anonunion_d_u_206 {
2322c2395
<    union __anonunion_d_u_187 d_u ;
---
>    union __anonunion_d_u_206 d_u ;
2349c2422
< #line 14 "include/linux/fiemap.h"
---
> #line 16 "include/linux/fiemap.h"
2358c2431
< #line 317 "include/linux/fs.h"
---
> #line 380 "include/linux/fs.h"
2360c2433
< #line 323
---
> #line 386
2362c2435
< #line 324
---
> #line 387
2364c2437
< #line 379 "include/linux/fs.h"
---
> #line 442 "include/linux/fs.h"
2552,2553c2625,2626
< #line 487 "include/linux/fs.h"
< union __anonunion_arg_193 {
---
> #line 550 "include/linux/fs.h"
> union __anonunion_arg_212 {
2557,2558c2630,2631
< #line 487 "include/linux/fs.h"
< struct __anonstruct_read_descriptor_t_192 {
---
> #line 550 "include/linux/fs.h"
> struct __anonstruct_read_descriptor_t_211 {
2561c2634
<    union __anonunion_arg_193 arg ;
---
>    union __anonunion_arg_212 arg ;
2564,2566c2637,2639
< #line 487 "include/linux/fs.h"
< typedef struct __anonstruct_read_descriptor_t_192 read_descriptor_t;
< #line 500 "include/linux/fs.h"
---
> #line 550 "include/linux/fs.h"
> typedef struct __anonstruct_read_descriptor_t_211 read_descriptor_t;
> #line 563 "include/linux/fs.h"
2588a2662
>    int (*error_remove_page)(struct address_space * , struct page * ) ;
2590c2664
< #line 550 "include/linux/fs.h"
---
> #line 614 "include/linux/fs.h"
2609c2683
< #line 574
---
> #line 638
2611c2685
< #line 574
---
> #line 638
2613c2687
< #line 574 "include/linux/fs.h"
---
> #line 638 "include/linux/fs.h"
2620d2693
<    struct semaphore bd_mount_sem ;
2632d2704
<    struct backing_dev_info *bd_inode_backing_dev_info ;
2637c2709,2711
< #line 650
---
> #line 712
> struct posix_acl;
> #line 715
2639c2713
< #line 650
---
> #line 715
2641c2715
< #line 650
---
> #line 715
2643c2717
< #line 650
---
> #line 715
2645,2646c2719,2720
< #line 650 "include/linux/fs.h"
< union __anonunion____missing_field_name_194 {
---
> #line 715 "include/linux/fs.h"
> union __anonunion____missing_field_name_213 {
2651,2653c2725
< #line 650
< struct dnotify_struct;
< #line 650 "include/linux/fs.h"
---
> #line 715 "include/linux/fs.h"
2670d2741
<    unsigned int i_blkbits ;
2671a2743
>    unsigned int i_blkbits ;
2685,2686c2757
<    union __anonunion____missing_field_name_194 __annonCompField24 ;
<    int i_cindex ;
---
>    union __anonunion____missing_field_name_213 __annonCompField26 ;
2688,2689c2759,2760
<    unsigned long i_dnotify_mask ;
<    struct dnotify_struct *i_dnotify ;
---
>    __u32 i_fsnotify_mask ;
>    struct hlist_head i_fsnotify_mark_entries ;
2696a2768,2769
>    struct posix_acl *i_acl ;
>    struct posix_acl *i_default_acl ;
2699c2772
< #line 805 "include/linux/fs.h"
---
> #line 870 "include/linux/fs.h"
2708c2781
< #line 816 "include/linux/fs.h"
---
> #line 881 "include/linux/fs.h"
2714c2787
<    int mmap_miss ;
---
>    unsigned int mmap_miss ;
2717,2718c2790,2791
< #line 839 "include/linux/fs.h"
< union __anonunion_f_u_195 {
---
> #line 904 "include/linux/fs.h"
> union __anonunion_f_u_214 {
2722c2795
< #line 839 "include/linux/fs.h"
---
> #line 904 "include/linux/fs.h"
2724c2797
<    union __anonunion_f_u_195 f_u ;
---
>    union __anonunion_f_u_214 f_u ;
2742c2815
< #line 958 "include/linux/fs.h"
---
> #line 1023 "include/linux/fs.h"
2744c2817
< #line 960 "include/linux/fs.h"
---
> #line 1025 "include/linux/fs.h"
2749c2822
< #line 965 "include/linux/fs.h"
---
> #line 1030 "include/linux/fs.h"
2774c2847
< #line 987 "include/linux/fs.h"
---
> #line 1052 "include/linux/fs.h"
2776,2777c2849,2850
< #line 987 "include/linux/fs.h"
< struct __anonstruct_afs_197 {
---
> #line 1052 "include/linux/fs.h"
> struct __anonstruct_afs_216 {
2781,2782c2854,2855
< #line 987 "include/linux/fs.h"
< union __anonunion_fl_u_196 {
---
> #line 1052 "include/linux/fs.h"
> union __anonunion_fl_u_215 {
2785c2858
<    struct __anonstruct_afs_197 afs ;
---
>    struct __anonstruct_afs_216 afs ;
2787c2860
< #line 987 "include/linux/fs.h"
---
> #line 1052 "include/linux/fs.h"
2803,2805c2876,2878
<    struct file_lock_operations *fl_ops ;
<    struct lock_manager_operations *fl_lmops ;
<    union __anonunion_fl_u_196 fl_u ;
---
>    struct file_lock_operations  const  *fl_ops ;
>    struct lock_manager_operations  const  *fl_lmops ;
>    union __anonunion_fl_u_215 fl_u ;
2807c2880
< #line 1211 "include/linux/fs.h"
---
> #line 1277 "include/linux/fs.h"
2814c2887
< #line 1246
---
> #line 1312
2816c2889
< #line 1246
---
> #line 1312
2818c2891
< #line 1246
---
> #line 1312
2820c2893
< #line 1246
---
> #line 1312
2822c2895
< #line 1246 "include/linux/fs.h"
---
> #line 1312 "include/linux/fs.h"
2829c2902
<    unsigned long long s_maxbytes ;
---
>    loff_t s_maxbytes ;
2832,2833c2905,2906
<    struct dquot_operations *dq_op ;
<    struct quotactl_ops *s_qcop ;
---
>    struct dquot_operations  const  *dq_op ;
>    struct quotactl_ops  const  *s_qcop ;
2841c2914
<    int s_need_sync_fs ;
---
>    int s_need_sync ;
2846,2848d2918
<    struct list_head s_dirty ;
<    struct list_head s_io ;
<    struct list_head s_more_io ;
2853a2924
>    struct backing_dev_info *s_bdi ;
2866d2936
<    struct list_head s_async_list ;
2868c2938
< #line 1372 "include/linux/fs.h"
---
> #line 1431 "include/linux/fs.h"
2875c2945
< #line 1424 "include/linux/fs.h"
---
> #line 1478 "include/linux/fs.h"
2911c2981
< #line 1453 "include/linux/fs.h"
---
> #line 1507 "include/linux/fs.h"
2926a2997
>    int (*check_acl)(struct inode * , int  ) ;
2937c3008
< #line 1496 "include/linux/fs.h"
---
> #line 1551 "include/linux/fs.h"
2961c3032
< #line 1679 "include/linux/fs.h"
---
> #line 1734 "include/linux/fs.h"
2990a3062
>    unsigned long key ;
3017c3089
< #line 178
---
> #line 179
3023c3095
< #line 185
---
> #line 186
3034c3106
< #line 267 "include/linux/videodev2.h"
---
> #line 270 "include/linux/videodev2.h"
3045c3117
< #line 534 "include/linux/videodev2.h"
---
> #line 550 "include/linux/videodev2.h"
3052c3124
< #line 28 "include/media/videobuf-core.h"
---
> #line 29 "include/media/videobuf-core.h"
3054c3126
< #line 29
---
> #line 30
3056c3128
< #line 54 "include/media/videobuf-core.h"
---
> #line 55 "include/media/videobuf-core.h"
3063c3135
< #line 61
---
> #line 62
3073c3145
< #line 71 "include/media/videobuf-core.h"
---
> #line 72 "include/media/videobuf-core.h"
3097c3169
< #line 111 "include/media/videobuf-core.h"
---
> #line 112 "include/media/videobuf-core.h"
3104c3176
< #line 126 "include/media/videobuf-core.h"
---
> #line 127 "include/media/videobuf-core.h"
3120c3192
< #line 155 "include/media/videobuf-core.h"
---
> #line 156 "include/media/videobuf-core.h"
3150c3222,3224
< #line 238 "include/linux/kernel.h"
---
> #line 21 "include/linux/log2.h"
> extern  __attribute__((__noreturn__)) int ____ilog2_NaN(void)  __attribute__((__const__)) ;
> #line 241 "include/linux/kernel.h"
3152c3226,3256
< #line 135 "include/linux/mutex.h"
---
> #line 9 "include/asm-generic/getorder.h"
> __inline static int get_order(unsigned long size )  __attribute__((__const__)) ;
> #line 9 "include/asm-generic/getorder.h"
> __inline static int get_order(unsigned long size ) 
> { 
>   int order ;
> 
>   {
> #line 13
>   size = (size - 1UL) >> (12 - 1);
> #line 14
>   order = -1;
> #line 15
>   while (1) {
> #line 16
>     size = size >> 1;
> #line 17
>     order = order + 1;
> #line 15
>     if (size) {
> 
>     } else {
> #line 15
>       break;
>     }
>   }
> #line 19
>   return (order);
> }
> }
> #line 136 "include/linux/mutex.h"
3154c3258
< #line 151
---
> #line 152
3156c3260,3262
< #line 159 "include/linux/moduleparam.h"
---
> #line 314 "include/linux/gfp.h"
> extern unsigned long __get_free_pages(gfp_t gfp_mask , unsigned int order ) ;
> #line 178 "include/linux/moduleparam.h"
3158c3264
< #line 160
---
> #line 179
3160c3266,3283
< #line 129 "include/linux/slab.h"
---
> #line 199 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock_sched_notrace(void)  __attribute__((__no_instrument_function__)) ;
> #line 199 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock_sched_notrace(void) 
> { 
> 
> 
>   {
> #line 201
>   while (1) {
> #line 201
>     break;
>   }
> #line 203
>   return;
> }
> }
> #line 138 "include/linux/slab.h"
3162c3285,4138
< #line 218 "include/linux/slub_def.h"
---
> #line 47 "include/trace/events/kmem.h"
> extern struct tracepoint __tracepoint_kmalloc ;
> #line 47 "include/trace/events/kmem.h"
> __inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
>                                    size_t bytes_alloc , gfp_t gfp_flags ) 
> { 
>   void **it_func ;
>   void **_________p1 ;
>   long tmp ;
> 
>   {
> #line 47
>   tmp = __builtin_expect(! (! __tracepoint_kmalloc.state), 0);
> #line 47
>   if (tmp) {
> #line 47
>     while (1) {
> #line 47
>       rcu_read_lock_sched_notrace();
> #line 47
>       _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
> #line 47
>       while (1) {
> #line 47
>         break;
>       }
> #line 47
>       it_func = _________p1;
> #line 47
>       if (it_func) {
> #line 47
>         while (1) {
> #line 47
>           (*((void (*)(unsigned long call_site , void const   *ptr , size_t bytes_req ,
>                        size_t bytes_alloc , gfp_t gfp_flags ))*it_func))(call_site,
>                                                                          ptr, bytes_req,
>                                                                          bytes_alloc,
>                                                                          gfp_flags);
> #line 47
>           it_func = it_func + 1;
> #line 47
>           if (*it_func) {
> 
>           } else {
> #line 47
>             break;
>           }
>         }
>       } else {
> 
>       }
> #line 47
>       rcu_read_lock_sched_notrace();
> #line 47
>       break;
>     }
>   } else {
> 
>   }
> #line 47
>   return;
> }
> }
> #line 27 "include/linux/kmemleak.h"
> extern void ( __attribute__((__noinline__)) kmemleak_alloc)(void const   *ptr , size_t size ,
>                                                             int min_count , gfp_t gfp )  __attribute__((__section__(".ref.text"))) ;
> #line 142 "include/linux/slub_def.h"
> extern struct kmem_cache kmalloc_caches[12 + 2] ;
> #line 148 "include/linux/slub_def.h"
> __inline static int ( __attribute__((__always_inline__)) kmalloc_index)(size_t size ) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int tmp___26 ;
>   int tmp___27 ;
>   int tmp___28 ;
>   int tmp___29 ;
>   int tmp___30 ;
>   int tmp___31 ;
>   int tmp___32 ;
>   int tmp___33 ;
>   int tmp___34 ;
>   int tmp___35 ;
>   int tmp___36 ;
>   int tmp___37 ;
>   int tmp___38 ;
>   int tmp___39 ;
>   int tmp___40 ;
>   int tmp___41 ;
>   int tmp___42 ;
>   int tmp___43 ;
>   int tmp___44 ;
>   int tmp___45 ;
>   int tmp___46 ;
>   int tmp___47 ;
>   int tmp___48 ;
>   int tmp___49 ;
>   int tmp___50 ;
>   int tmp___51 ;
>   int tmp___52 ;
>   int tmp___53 ;
>   int tmp___54 ;
>   int tmp___55 ;
>   int tmp___56 ;
>   int tmp___57 ;
>   int tmp___58 ;
>   int tmp___59 ;
>   int tmp___60 ;
>   int tmp___61 ;
>   int tmp___62 ;
>   int tmp___63 ;
>   int tmp___64 ;
>   int tmp___65 ;
> 
>   {
> #line 150
>   if (! size) {
> #line 151
>     return (0);
>   } else {
> 
>   }
> #line 153
>   if (size <= (size_t )8) {
> #line 154
>     if (8 < 1) {
> #line 154
>       tmp = ____ilog2_NaN();
> #line 154
>       tmp___65 = tmp;
>     } else {
> #line 154
>       if (8ULL & (1ULL << 63)) {
> #line 154
>         tmp___64 = 63;
>       } else {
> #line 154
>         if (8ULL & (1ULL << 62)) {
> #line 154
>           tmp___63 = 62;
>         } else {
> #line 154
>           if (8ULL & (1ULL << 61)) {
> #line 154
>             tmp___62 = 61;
>           } else {
> #line 154
>             if (8ULL & (1ULL << 60)) {
> #line 154
>               tmp___61 = 60;
>             } else {
> #line 154
>               if (8ULL & (1ULL << 59)) {
> #line 154
>                 tmp___60 = 59;
>               } else {
> #line 154
>                 if (8ULL & (1ULL << 58)) {
> #line 154
>                   tmp___59 = 58;
>                 } else {
> #line 154
>                   if (8ULL & (1ULL << 57)) {
> #line 154
>                     tmp___58 = 57;
>                   } else {
> #line 154
>                     if (8ULL & (1ULL << 56)) {
> #line 154
>                       tmp___57 = 56;
>                     } else {
> #line 154
>                       if (8ULL & (1ULL << 55)) {
> #line 154
>                         tmp___56 = 55;
>                       } else {
> #line 154
>                         if (8ULL & (1ULL << 54)) {
> #line 154
>                           tmp___55 = 54;
>                         } else {
> #line 154
>                           if (8ULL & (1ULL << 53)) {
> #line 154
>                             tmp___54 = 53;
>                           } else {
> #line 154
>                             if (8ULL & (1ULL << 52)) {
> #line 154
>                               tmp___53 = 52;
>                             } else {
> #line 154
>                               if (8ULL & (1ULL << 51)) {
> #line 154
>                                 tmp___52 = 51;
>                               } else {
> #line 154
>                                 if (8ULL & (1ULL << 50)) {
> #line 154
>                                   tmp___51 = 50;
>                                 } else {
> #line 154
>                                   if (8ULL & (1ULL << 49)) {
> #line 154
>                                     tmp___50 = 49;
>                                   } else {
> #line 154
>                                     if (8ULL & (1ULL << 48)) {
> #line 154
>                                       tmp___49 = 48;
>                                     } else {
> #line 154
>                                       if (8ULL & (1ULL << 47)) {
> #line 154
>                                         tmp___48 = 47;
>                                       } else {
> #line 154
>                                         if (8ULL & (1ULL << 46)) {
> #line 154
>                                           tmp___47 = 46;
>                                         } else {
> #line 154
>                                           if (8ULL & (1ULL << 45)) {
> #line 154
>                                             tmp___46 = 45;
>                                           } else {
> #line 154
>                                             if (8ULL & (1ULL << 44)) {
> #line 154
>                                               tmp___45 = 44;
>                                             } else {
> #line 154
>                                               if (8ULL & (1ULL << 43)) {
> #line 154
>                                                 tmp___44 = 43;
>                                               } else {
> #line 154
>                                                 if (8ULL & (1ULL << 42)) {
> #line 154
>                                                   tmp___43 = 42;
>                                                 } else {
> #line 154
>                                                   if (8ULL & (1ULL << 41)) {
> #line 154
>                                                     tmp___42 = 41;
>                                                   } else {
> #line 154
>                                                     if (8ULL & (1ULL << 40)) {
> #line 154
>                                                       tmp___41 = 40;
>                                                     } else {
> #line 154
>                                                       if (8ULL & (1ULL << 39)) {
> #line 154
>                                                         tmp___40 = 39;
>                                                       } else {
> #line 154
>                                                         if (8ULL & (1ULL << 38)) {
> #line 154
>                                                           tmp___39 = 38;
>                                                         } else {
> #line 154
>                                                           if (8ULL & (1ULL << 37)) {
> #line 154
>                                                             tmp___38 = 37;
>                                                           } else {
> #line 154
>                                                             if (8ULL & (1ULL << 36)) {
> #line 154
>                                                               tmp___37 = 36;
>                                                             } else {
> #line 154
>                                                               if (8ULL & (1ULL << 35)) {
> #line 154
>                                                                 tmp___36 = 35;
>                                                               } else {
> #line 154
>                                                                 if (8ULL & (1ULL << 34)) {
> #line 154
>                                                                   tmp___35 = 34;
>                                                                 } else {
> #line 154
>                                                                   if (8ULL & (1ULL << 33)) {
> #line 154
>                                                                     tmp___34 = 33;
>                                                                   } else {
> #line 154
>                                                                     if (8ULL & (1ULL << 32)) {
> #line 154
>                                                                       tmp___33 = 32;
>                                                                     } else {
> #line 154
>                                                                       if (8ULL & (1ULL << 31)) {
> #line 154
>                                                                         tmp___32 = 31;
>                                                                       } else {
> #line 154
>                                                                         if (8ULL & (1ULL << 30)) {
> #line 154
>                                                                           tmp___31 = 30;
>                                                                         } else {
> #line 154
>                                                                           if (8ULL & (1ULL << 29)) {
> #line 154
>                                                                             tmp___30 = 29;
>                                                                           } else {
> #line 154
>                                                                             if (8ULL & (1ULL << 28)) {
> #line 154
>                                                                               tmp___29 = 28;
>                                                                             } else {
> #line 154
>                                                                               if (8ULL & (1ULL << 27)) {
> #line 154
>                                                                                 tmp___28 = 27;
>                                                                               } else {
> #line 154
>                                                                                 if (8ULL & (1ULL << 26)) {
> #line 154
>                                                                                   tmp___27 = 26;
>                                                                                 } else {
> #line 154
>                                                                                   if (8ULL & (1ULL << 25)) {
> #line 154
>                                                                                     tmp___26 = 25;
>                                                                                   } else {
> #line 154
>                                                                                     if (8ULL & (1ULL << 24)) {
> #line 154
>                                                                                       tmp___25 = 24;
>                                                                                     } else {
> #line 154
>                                                                                       if (8ULL & (1ULL << 23)) {
> #line 154
>                                                                                         tmp___24 = 23;
>                                                                                       } else {
> #line 154
>                                                                                         if (8ULL & (1ULL << 22)) {
> #line 154
>                                                                                           tmp___23 = 22;
>                                                                                         } else {
> #line 154
>                                                                                           if (8ULL & (1ULL << 21)) {
> #line 154
>                                                                                             tmp___22 = 21;
>                                                                                           } else {
> #line 154
>                                                                                             if (8ULL & (1ULL << 20)) {
> #line 154
>                                                                                               tmp___21 = 20;
>                                                                                             } else {
> #line 154
>                                                                                               if (8ULL & (1ULL << 19)) {
> #line 154
>                                                                                                 tmp___20 = 19;
>                                                                                               } else {
> #line 154
>                                                                                                 if (8ULL & (1ULL << 18)) {
> #line 154
>                                                                                                   tmp___19 = 18;
>                                                                                                 } else {
> #line 154
>                                                                                                   if (8ULL & (1ULL << 17)) {
> #line 154
>                                                                                                     tmp___18 = 17;
>                                                                                                   } else {
> #line 154
>                                                                                                     if (8ULL & (1ULL << 16)) {
> #line 154
>                                                                                                       tmp___17 = 16;
>                                                                                                     } else {
> #line 154
>                                                                                                       if (8ULL & (1ULL << 15)) {
> #line 154
>                                                                                                         tmp___16 = 15;
>                                                                                                       } else {
> #line 154
>                                                                                                         if (8ULL & (1ULL << 14)) {
> #line 154
>                                                                                                           tmp___15 = 14;
>                                                                                                         } else {
> #line 154
>                                                                                                           if (8ULL & (1ULL << 13)) {
> #line 154
>                                                                                                             tmp___14 = 13;
>                                                                                                           } else {
> #line 154
>                                                                                                             if (8ULL & (1ULL << 12)) {
> #line 154
>                                                                                                               tmp___13 = 12;
>                                                                                                             } else {
> #line 154
>                                                                                                               if (8ULL & (1ULL << 11)) {
> #line 154
>                                                                                                                 tmp___12 = 11;
>                                                                                                               } else {
> #line 154
>                                                                                                                 if (8ULL & (1ULL << 10)) {
> #line 154
>                                                                                                                   tmp___11 = 10;
>                                                                                                                 } else {
> #line 154
>                                                                                                                   if (8ULL & (1ULL << 9)) {
> #line 154
>                                                                                                                     tmp___10 = 9;
>                                                                                                                   } else {
> #line 154
>                                                                                                                     if (8ULL & (1ULL << 8)) {
> #line 154
>                                                                                                                       tmp___9 = 8;
>                                                                                                                     } else {
> #line 154
>                                                                                                                       if (8ULL & (1ULL << 7)) {
> #line 154
>                                                                                                                         tmp___8 = 7;
>                                                                                                                       } else {
> #line 154
>                                                                                                                         if (8ULL & (1ULL << 6)) {
> #line 154
>                                                                                                                           tmp___7 = 6;
>                                                                                                                         } else {
> #line 154
>                                                                                                                           if (8ULL & (1ULL << 5)) {
> #line 154
>                                                                                                                             tmp___6 = 5;
>                                                                                                                           } else {
> #line 154
>                                                                                                                             if (8ULL & (1ULL << 4)) {
> #line 154
>                                                                                                                               tmp___5 = 4;
>                                                                                                                             } else {
> #line 154
>                                                                                                                               if (8ULL & (1ULL << 3)) {
> #line 154
>                                                                                                                                 tmp___4 = 3;
>                                                                                                                               } else {
> #line 154
>                                                                                                                                 if (8ULL & (1ULL << 2)) {
> #line 154
>                                                                                                                                   tmp___3 = 2;
>                                                                                                                                 } else {
> #line 154
>                                                                                                                                   if (8ULL & (1ULL << 1)) {
> #line 154
>                                                                                                                                     tmp___2 = 1;
>                                                                                                                                   } else {
> #line 154
>                                                                                                                                     if (8ULL & (1ULL << 0)) {
> #line 154
>                                                                                                                                       tmp___1 = 0;
>                                                                                                                                     } else {
> #line 154
>                                                                                                                                       tmp___0 = ____ilog2_NaN();
> #line 154
>                                                                                                                                       tmp___1 = tmp___0;
>                                                                                                                                     }
> #line 154
>                                                                                                                                     tmp___2 = tmp___1;
>                                                                                                                                   }
> #line 154
>                                                                                                                                   tmp___3 = tmp___2;
>                                                                                                                                 }
> #line 154
>                                                                                                                                 tmp___4 = tmp___3;
>                                                                                                                               }
> #line 154
>                                                                                                                               tmp___5 = tmp___4;
>                                                                                                                             }
> #line 154
>                                                                                                                             tmp___6 = tmp___5;
>                                                                                                                           }
> #line 154
>                                                                                                                           tmp___7 = tmp___6;
>                                                                                                                         }
> #line 154
>                                                                                                                         tmp___8 = tmp___7;
>                                                                                                                       }
> #line 154
>                                                                                                                       tmp___9 = tmp___8;
>                                                                                                                     }
> #line 154
>                                                                                                                     tmp___10 = tmp___9;
>                                                                                                                   }
> #line 154
>                                                                                                                   tmp___11 = tmp___10;
>                                                                                                                 }
> #line 154
>                                                                                                                 tmp___12 = tmp___11;
>                                                                                                               }
> #line 154
>                                                                                                               tmp___13 = tmp___12;
>                                                                                                             }
> #line 154
>                                                                                                             tmp___14 = tmp___13;
>                                                                                                           }
> #line 154
>                                                                                                           tmp___15 = tmp___14;
>                                                                                                         }
> #line 154
>                                                                                                         tmp___16 = tmp___15;
>                                                                                                       }
> #line 154
>                                                                                                       tmp___17 = tmp___16;
>                                                                                                     }
> #line 154
>                                                                                                     tmp___18 = tmp___17;
>                                                                                                   }
> #line 154
>                                                                                                   tmp___19 = tmp___18;
>                                                                                                 }
> #line 154
>                                                                                                 tmp___20 = tmp___19;
>                                                                                               }
> #line 154
>                                                                                               tmp___21 = tmp___20;
>                                                                                             }
> #line 154
>                                                                                             tmp___22 = tmp___21;
>                                                                                           }
> #line 154
>                                                                                           tmp___23 = tmp___22;
>                                                                                         }
> #line 154
>                                                                                         tmp___24 = tmp___23;
>                                                                                       }
> #line 154
>                                                                                       tmp___25 = tmp___24;
>                                                                                     }
> #line 154
>                                                                                     tmp___26 = tmp___25;
>                                                                                   }
> #line 154
>                                                                                   tmp___27 = tmp___26;
>                                                                                 }
> #line 154
>                                                                                 tmp___28 = tmp___27;
>                                                                               }
> #line 154
>                                                                               tmp___29 = tmp___28;
>                                                                             }
> #line 154
>                                                                             tmp___30 = tmp___29;
>                                                                           }
> #line 154
>                                                                           tmp___31 = tmp___30;
>                                                                         }
> #line 154
>                                                                         tmp___32 = tmp___31;
>                                                                       }
> #line 154
>                                                                       tmp___33 = tmp___32;
>                                                                     }
> #line 154
>                                                                     tmp___34 = tmp___33;
>                                                                   }
> #line 154
>                                                                   tmp___35 = tmp___34;
>                                                                 }
> #line 154
>                                                                 tmp___36 = tmp___35;
>                                                               }
> #line 154
>                                                               tmp___37 = tmp___36;
>                                                             }
> #line 154
>                                                             tmp___38 = tmp___37;
>                                                           }
> #line 154
>                                                           tmp___39 = tmp___38;
>                                                         }
> #line 154
>                                                         tmp___40 = tmp___39;
>                                                       }
> #line 154
>                                                       tmp___41 = tmp___40;
>                                                     }
> #line 154
>                                                     tmp___42 = tmp___41;
>                                                   }
> #line 154
>                                                   tmp___43 = tmp___42;
>                                                 }
> #line 154
>                                                 tmp___44 = tmp___43;
>                                               }
> #line 154
>                                               tmp___45 = tmp___44;
>                                             }
> #line 154
>                                             tmp___46 = tmp___45;
>                                           }
> #line 154
>                                           tmp___47 = tmp___46;
>                                         }
> #line 154
>                                         tmp___48 = tmp___47;
>                                       }
> #line 154
>                                       tmp___49 = tmp___48;
>                                     }
> #line 154
>                                     tmp___50 = tmp___49;
>                                   }
> #line 154
>                                   tmp___51 = tmp___50;
>                                 }
> #line 154
>                                 tmp___52 = tmp___51;
>                               }
> #line 154
>                               tmp___53 = tmp___52;
>                             }
> #line 154
>                             tmp___54 = tmp___53;
>                           }
> #line 154
>                           tmp___55 = tmp___54;
>                         }
> #line 154
>                         tmp___56 = tmp___55;
>                       }
> #line 154
>                       tmp___57 = tmp___56;
>                     }
> #line 154
>                     tmp___58 = tmp___57;
>                   }
> #line 154
>                   tmp___59 = tmp___58;
>                 }
> #line 154
>                 tmp___60 = tmp___59;
>               }
> #line 154
>               tmp___61 = tmp___60;
>             }
> #line 154
>             tmp___62 = tmp___61;
>           }
> #line 154
>           tmp___63 = tmp___62;
>         }
> #line 154
>         tmp___64 = tmp___63;
>       }
> #line 154
>       tmp___65 = tmp___64;
>     }
> #line 154
>     return (tmp___65);
>   } else {
> 
>   }
> #line 156
>   if ((8 <= 32 && size > (size_t )64) && size <= (size_t )96) {
> #line 157
>     return (1);
>   } else {
> 
>   }
> #line 158
>   if ((8 <= 64 && size > (size_t )128) && size <= (size_t )192) {
> #line 159
>     return (2);
>   } else {
> 
>   }
> #line 160
>   if (size <= (size_t )8) {
> #line 160
>     return (3);
>   } else {
> 
>   }
> #line 161
>   if (size <= (size_t )16) {
> #line 161
>     return (4);
>   } else {
> 
>   }
> #line 162
>   if (size <= (size_t )32) {
> #line 162
>     return (5);
>   } else {
> 
>   }
> #line 163
>   if (size <= (size_t )64) {
> #line 163
>     return (6);
>   } else {
> 
>   }
> #line 164
>   if (size <= (size_t )128) {
> #line 164
>     return (7);
>   } else {
> 
>   }
> #line 165
>   if (size <= (size_t )256) {
> #line 165
>     return (8);
>   } else {
> 
>   }
> #line 166
>   if (size <= (size_t )512) {
> #line 166
>     return (9);
>   } else {
> 
>   }
> #line 167
>   if (size <= (size_t )1024) {
> #line 167
>     return (10);
>   } else {
> 
>   }
> #line 168
>   if (size <= (size_t )(2 * 1024)) {
> #line 168
>     return (11);
>   } else {
> 
>   }
> #line 169
>   if (size <= (size_t )(4 * 1024)) {
> #line 169
>     return (12);
>   } else {
> 
>   }
> #line 174
>   if (size <= (size_t )(8 * 1024)) {
> #line 174
>     return (13);
>   } else {
> 
>   }
> #line 175
>   if (size <= (size_t )(16 * 1024)) {
> #line 175
>     return (14);
>   } else {
> 
>   }
> #line 176
>   if (size <= (size_t )(32 * 1024)) {
> #line 176
>     return (15);
>   } else {
> 
>   }
> #line 177
>   if (size <= (size_t )(64 * 1024)) {
> #line 177
>     return (16);
>   } else {
> 
>   }
> #line 178
>   if (size <= (size_t )(128 * 1024)) {
> #line 178
>     return (17);
>   } else {
> 
>   }
> #line 179
>   if (size <= (size_t )(256 * 1024)) {
> #line 179
>     return (18);
>   } else {
> 
>   }
> #line 180
>   if (size <= (size_t )(512 * 1024)) {
> #line 180
>     return (19);
>   } else {
> 
>   }
> #line 181
>   if (size <= (size_t )(1024 * 1024)) {
> #line 181
>     return (20);
>   } else {
> 
>   }
> #line 182
>   if (size <= (size_t )((2 * 1024) * 1024)) {
> #line 182
>     return (21);
>   } else {
> 
>   }
> #line 183
>   return (-1);
> }
> }
> #line 200 "include/linux/slub_def.h"
> __inline static struct kmem_cache *( __attribute__((__always_inline__)) kmalloc_slab)(size_t size ) 
> { 
>   int index ;
>   int tmp ;
> 
>   {
> #line 202
>   tmp = kmalloc_index(size);
> #line 202
>   index = tmp;
> #line 204
>   if (index == 0) {
> #line 205
>     return ((void *)0);
>   } else {
> 
>   }
> #line 207
>   return (& kmalloc_caches[index]);
> }
> }
> #line 217
> extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
> #line 218
3164c4140,4179
< #line 225 "include/linux/slub_def.h"
---
> #line 223 "include/linux/slub_def.h"
> __inline static void *( __attribute__((__always_inline__)) kmem_cache_alloc_notrace)(struct kmem_cache *s ,
>                                                                                      gfp_t gfpflags ) 
> { 
>   void *tmp ;
> 
>   {
> #line 226
>   tmp = kmem_cache_alloc(s, gfpflags);
> #line 226
>   return (tmp);
> }
> }
> #line 230 "include/linux/slub_def.h"
> __inline static void *( __attribute__((__always_inline__)) kmalloc_large)(size_t size ,
>                                                                           gfp_t flags ) 
> { 
>   unsigned int order ;
>   int tmp ;
>   void *ret ;
>   unsigned long tmp___0 ;
> 
>   {
> #line 232
>   tmp = get_order(size);
> #line 232
>   order = tmp;
> #line 233
>   tmp___0 = __get_free_pages(flags | 16384U, order);
> #line 233
>   ret = (void *)tmp___0;
> #line 235
>   kmemleak_alloc(ret, size, 1, flags);
> #line 236
>   trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
> #line 238
>   return (ret);
> }
> }
> #line 241 "include/linux/slub_def.h"
3168c4183,4187
<   void *tmp___2 ;
---
>   void *ret ;
>   void *tmp ;
>   struct kmem_cache *s ;
>   struct kmem_cache *tmp___0 ;
>   void *tmp___1 ;
3171,3174c4190,4229
< #line 240
<   tmp___2 = __kmalloc(size, flags);
< #line 240
<   return (tmp___2);
---
> #line 245
>   if (0) {
> #line 246
>     if (size > 2UL * (1UL << 12)) {
> #line 247
>       tmp = kmalloc_large(size, flags);
> #line 247
>       return (tmp);
>     } else {
> 
>     }
> #line 249
>     if (! (flags & 1U)) {
> #line 250
>       tmp___0 = kmalloc_slab(size);
> #line 250
>       s = tmp___0;
> #line 252
>       if (! s) {
> #line 253
>         return ((void *)16);
>       } else {
> 
>       }
> #line 255
>       ret = kmem_cache_alloc_notrace(s, flags);
> #line 257
>       trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
> #line 259
>       return (ret);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 262
>   tmp___1 = __kmalloc(size, flags);
> #line 262
>   return (tmp___1);
3177c4232
< #line 304 "include/linux/slab.h"
---
> #line 313 "include/linux/slab.h"
3183c4238
< #line 306
---
> #line 315
3185c4240
< #line 306
---
> #line 315
3199c4254
< #line 196 "include/media/videobuf-core.h"
---
> #line 197 "include/media/videobuf-core.h"
3204c4259
< #line 206
---
> #line 207
3221c4276
< __section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_debug, 420, & param_set_int, & param_get_int, {& debug}};
---
> __section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_debug, 420, 0, & param_set_int, & param_get_int, {& debug}};
3427c4482
< static struct vm_operations_struct videobuf_vm_ops  = 
---
> static struct vm_operations_struct  const  videobuf_vm_ops  = 
4449c5504
< #line 136 "include/linux/mutex.h"
---
> #line 137 "include/linux/mutex.h"
4451c5506
< #line 137
---
> #line 138
4453c5508
< #line 150
---
> #line 151
4454a5510,5511
> #line 153
> int atomic_dec_and_mutex_lock(atomic_t *cnt , struct mutex *lock ) ;
