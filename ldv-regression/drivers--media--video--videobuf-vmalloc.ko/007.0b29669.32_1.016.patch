18,19d17
< #line 29 "include/asm-generic/int-ll64.h"
< typedef long long __s64;
22,23d19
< #line 43 "include/asm-generic/int-ll64.h"
< typedef unsigned char u8;
28,29d23
< #line 51 "include/asm-generic/int-ll64.h"
< typedef long long s64;
38,39d31
< #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
< typedef int __kernel_pid_t;
52,55d43
< #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
< typedef long __kernel_clock_t;
< #line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
< typedef int __kernel_timer_t;
70,71d57
< #line 26 "include/linux/types.h"
< typedef __kernel_pid_t pid_t;
73a60,61
> #line 34 "include/linux/types.h"
> typedef _Bool bool;
86,89d73
< #line 107 "include/linux/types.h"
< typedef __s32 int32_t;
< #line 113 "include/linux/types.h"
< typedef __u32 uint32_t;
138,159d121
< #line 141 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
< struct kernel_vm86_regs {
<    struct pt_regs pt ;
<    unsigned short es ;
<    unsigned short __esh ;
<    unsigned short ds ;
<    unsigned short __dsh ;
<    unsigned short fs ;
<    unsigned short __fsh ;
<    unsigned short gs ;
<    unsigned short __gsh ;
< };
< #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
< union __anonunion____missing_field_name_9 {
<    struct pt_regs *regs ;
<    struct kernel_vm86_regs *vm86 ;
< };
< #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
< struct math_emu_info {
<    long ___orig_eip ;
<    union __anonunion____missing_field_name_9 __annonCompField4 ;
< };
169c131
< #line 116 "include/linux/kernel.h"
---
> #line 115 "include/linux/kernel.h"
171c133
< #line 211
---
> #line 210
195,227c157
< #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
< struct __anonstruct____missing_field_name_18 {
<    unsigned int a ;
<    unsigned int b ;
< };
< #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
< struct __anonstruct____missing_field_name_19 {
<    u16 limit0 ;
<    u16 base0 ;
<    unsigned int base1 : 8 ;
<    unsigned int type : 4 ;
<    unsigned int s : 1 ;
<    unsigned int dpl : 2 ;
<    unsigned int p : 1 ;
<    unsigned int limit : 4 ;
<    unsigned int avl : 1 ;
<    unsigned int l : 1 ;
<    unsigned int d : 1 ;
<    unsigned int g : 1 ;
<    unsigned int base2 : 8 ;
< };
< #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
< union __anonunion____missing_field_name_17 {
<    struct __anonstruct____missing_field_name_18 __annonCompField6 ;
<    struct __anonstruct____missing_field_name_19 __annonCompField7 ;
< };
< #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
< struct desc_struct {
<    union __anonunion____missing_field_name_17 __annonCompField8 ;
< } __attribute__((__packed__)) ;
< #line 46 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
< struct thread_struct;
< #line 52
---
> #line 52 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
256,346c186
< #line 286 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct i387_fsave_struct {
<    u32 cwd ;
<    u32 swd ;
<    u32 twd ;
<    u32 fip ;
<    u32 fcs ;
<    u32 foo ;
<    u32 fos ;
<    u32 st_space[20] ;
<    u32 status ;
< };
< #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct____missing_field_name_27 {
<    u64 rip ;
<    u64 rdp ;
< };
< #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct____missing_field_name_28 {
<    u32 fip ;
<    u32 fcs ;
<    u32 foo ;
<    u32 fos ;
< };
< #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union __anonunion____missing_field_name_26 {
<    struct __anonstruct____missing_field_name_27 __annonCompField11 ;
<    struct __anonstruct____missing_field_name_28 __annonCompField12 ;
< };
< #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union __anonunion____missing_field_name_29 {
<    u32 padding1[12] ;
<    u32 sw_reserved[12] ;
< };
< #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct i387_fxsave_struct {
<    u16 cwd ;
<    u16 swd ;
<    u16 twd ;
<    u16 fop ;
<    union __anonunion____missing_field_name_26 __annonCompField13 ;
<    u32 mxcsr ;
<    u32 mxcsr_mask ;
<    u32 st_space[32] ;
<    u32 xmm_space[64] ;
<    u32 padding[12] ;
<    union __anonunion____missing_field_name_29 __annonCompField14 ;
< } __attribute__((__aligned__(16))) ;
< #line 337 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct i387_soft_struct {
<    u32 cwd ;
<    u32 swd ;
<    u32 twd ;
<    u32 fip ;
<    u32 fcs ;
<    u32 foo ;
<    u32 fos ;
<    u32 st_space[20] ;
<    u8 ftop ;
<    u8 changed ;
<    u8 lookahead ;
<    u8 no_update ;
<    u8 rm ;
<    u8 alimit ;
<    struct math_emu_info *info ;
<    u32 entry_eip ;
< };
< #line 357 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct ymmh_struct {
<    u32 ymmh_space[64] ;
< };
< #line 362 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct xsave_hdr_struct {
<    u64 xstate_bv ;
<    u64 reserved1[2] ;
<    u64 reserved2[5] ;
< } __attribute__((__packed__)) ;
< #line 368 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct xsave_struct {
<    struct i387_fxsave_struct i387 ;
<    struct xsave_hdr_struct xsave_hdr ;
<    struct ymmh_struct ymmh ;
< } __attribute__((__packed__, __aligned__(64))) ;
< #line 375 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union thread_xstate {
<    struct i387_fsave_struct fsave ;
<    struct i387_fxsave_struct fxsave ;
<    struct i387_soft_struct soft ;
<    struct xsave_struct xsave ;
< };
< #line 423
---
> #line 423 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
348,377d187
< #line 425
< struct ds_context;
< #line 425 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct thread_struct {
<    struct desc_struct tls_array[3] ;
<    unsigned long sp0 ;
<    unsigned long sp ;
<    unsigned long usersp ;
<    unsigned short es ;
<    unsigned short ds ;
<    unsigned short fsindex ;
<    unsigned short gsindex ;
<    unsigned long fs ;
<    unsigned long gs ;
<    unsigned long debugreg0 ;
<    unsigned long debugreg1 ;
<    unsigned long debugreg2 ;
<    unsigned long debugreg3 ;
<    unsigned long debugreg6 ;
<    unsigned long debugreg7 ;
<    unsigned long cr2 ;
<    unsigned long trap_no ;
<    unsigned long error_code ;
<    union thread_xstate *xstate ;
<    unsigned long *io_bitmap_ptr ;
<    unsigned long iopl ;
<    unsigned int io_bitmap_max ;
<    unsigned long debugctlmsr ;
<    struct ds_context *ds_ctx ;
< };
524,534d333
< #line 28 "include/linux/wait.h"
< struct __wait_queue;
< #line 28 "include/linux/wait.h"
< typedef struct __wait_queue wait_queue_t;
< #line 32 "include/linux/wait.h"
< struct __wait_queue {
<    unsigned int flags ;
<    void *private ;
<    int (*func)(wait_queue_t *wait , unsigned int mode , int flags , void *key ) ;
<    struct list_head task_list ;
< };
557,562d355
< #line 69 "include/linux/mutex.h"
< struct mutex_waiter {
<    struct list_head list ;
<    struct task_struct *task ;
<    void *magic ;
< };
573,578d365
< #line 46 "include/linux/ktime.h"
< union ktime {
<    s64 tv64 ;
< };
< #line 59 "include/linux/ktime.h"
< typedef union ktime ktime_t;
592,595d378
< #line 240
< struct hrtimer;
< #line 241
< enum hrtimer_restart;
604,608d386
< #line 39 "include/linux/workqueue.h"
< struct delayed_work {
<    struct work_struct work ;
<    struct timer_list timer ;
< };
693,694d470
< #line 45 "include/linux/kmod.h"
< struct key;
786c562
< #line 43
---
> #line 42
788c564
< #line 43
---
> #line 42
790c566
< #line 43 "include/linux/moduleparam.h"
---
> #line 42 "include/linux/moduleparam.h"
796c572
< #line 43 "include/linux/moduleparam.h"
---
> #line 42 "include/linux/moduleparam.h"
805c581
< #line 57 "include/linux/moduleparam.h"
---
> #line 56 "include/linux/moduleparam.h"
810c586
< #line 63 "include/linux/moduleparam.h"
---
> #line 62 "include/linux/moduleparam.h"
1014,1033d789
< #line 10 "include/linux/irqreturn.h"
< enum irqreturn {
<     IRQ_NONE = 0,
<     IRQ_HANDLED = 1,
<     IRQ_WAKE_THREAD = 2
< } ;
< #line 16 "include/linux/irqreturn.h"
< typedef enum irqreturn irqreturn_t;
< #line 83 "include/linux/irq.h"
< struct proc_dir_entry;
< #line 175
< struct irqaction;
< #line 99 "include/linux/capability.h"
< struct kernel_cap_struct {
<    __u32 cap[2] ;
< };
< #line 99 "include/linux/capability.h"
< typedef struct kernel_cap_struct kernel_cap_t;
< #line 568
< struct dentry;
1043a800,966
> #line 19 "include/linux/klist.h"
> struct klist_node;
> #line 39 "include/linux/klist.h"
> struct klist_node {
>    void *n_klist ;
>    struct list_head n_node ;
>    struct kref n_ref ;
> };
> #line 16 "include/linux/semaphore.h"
> struct semaphore {
>    spinlock_t lock ;
>    unsigned int count ;
>    struct list_head wait_list ;
> };
> #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
> struct dma_map_ops;
> #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
> struct dev_archdata {
>    void *acpi_handle ;
>    struct dma_map_ops *dma_ops ;
>    void *iommu ;
> };
> #line 30 "include/linux/device.h"
> struct device_private;
> #line 32
> struct driver_private;
> #line 33
> struct class;
> #line 34
> struct class_private;
> #line 35
> struct bus_type;
> #line 36
> struct bus_type_private;
> #line 38 "include/linux/device.h"
> struct bus_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct bus_type *bus , char *buf ) ;
>    ssize_t (*store)(struct bus_type *bus , char const   *buf , size_t count ) ;
> };
> #line 51
> struct device_attribute;
> #line 51
> struct driver_attribute;
> #line 51 "include/linux/device.h"
> struct bus_type {
>    char const   *name ;
>    struct bus_attribute *bus_attrs ;
>    struct device_attribute *dev_attrs ;
>    struct driver_attribute *drv_attrs ;
>    int (*match)(struct device *dev , struct device_driver *drv ) ;
>    int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
>    int (*probe)(struct device *dev ) ;
>    int (*remove)(struct device *dev ) ;
>    void (*shutdown)(struct device *dev ) ;
>    int (*suspend)(struct device *dev , pm_message_t state ) ;
>    int (*resume)(struct device *dev ) ;
>    struct dev_pm_ops  const  *pm ;
>    struct bus_type_private *p ;
> };
> #line 122 "include/linux/device.h"
> struct device_driver {
>    char const   *name ;
>    struct bus_type *bus ;
>    struct module *owner ;
>    char const   *mod_name ;
>    bool suppress_bind_attrs ;
>    int (*probe)(struct device *dev ) ;
>    int (*remove)(struct device *dev ) ;
>    void (*shutdown)(struct device *dev ) ;
>    int (*suspend)(struct device *dev , pm_message_t state ) ;
>    int (*resume)(struct device *dev ) ;
>    struct attribute_group  const  **groups ;
>    struct dev_pm_ops  const  *pm ;
>    struct driver_private *p ;
> };
> #line 157 "include/linux/device.h"
> struct driver_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct device_driver *driver , char *buf ) ;
>    ssize_t (*store)(struct device_driver *driver , char const   *buf , size_t count ) ;
> };
> #line 189
> struct class_attribute;
> #line 189 "include/linux/device.h"
> struct class {
>    char const   *name ;
>    struct module *owner ;
>    struct class_attribute *class_attrs ;
>    struct device_attribute *dev_attrs ;
>    struct kobject *dev_kobj ;
>    int (*dev_uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
>    char *(*devnode)(struct device *dev , mode_t *mode ) ;
>    void (*class_release)(struct class *class ) ;
>    void (*dev_release)(struct device *dev ) ;
>    int (*suspend)(struct device *dev , pm_message_t state ) ;
>    int (*resume)(struct device *dev ) ;
>    struct dev_pm_ops  const  *pm ;
>    struct class_private *p ;
> };
> #line 211
> struct device_type;
> #line 252 "include/linux/device.h"
> struct class_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct class *class , char *buf ) ;
>    ssize_t (*store)(struct class *class , char const   *buf , size_t count ) ;
> };
> #line 299 "include/linux/device.h"
> struct device_type {
>    char const   *name ;
>    struct attribute_group  const  **groups ;
>    int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
>    char *(*devnode)(struct device *dev , mode_t *mode ) ;
>    void (*release)(struct device *dev ) ;
>    struct dev_pm_ops  const  *pm ;
> };
> #line 310 "include/linux/device.h"
> struct device_attribute {
>    struct attribute attr ;
>    ssize_t (*show)(struct device *dev , struct device_attribute *attr , char *buf ) ;
>    ssize_t (*store)(struct device *dev , struct device_attribute *attr , char const   *buf ,
>                     size_t count ) ;
> };
> #line 370 "include/linux/device.h"
> struct device_dma_parameters {
>    unsigned int max_segment_size ;
>    unsigned long segment_boundary_mask ;
> };
> #line 379
> struct dma_coherent_mem;
> #line 379 "include/linux/device.h"
> struct device {
>    struct device *parent ;
>    struct device_private *p ;
>    struct kobject kobj ;
>    char const   *init_name ;
>    struct device_type *type ;
>    struct semaphore sem ;
>    struct bus_type *bus ;
>    struct device_driver *driver ;
>    void *platform_data ;
>    struct dev_pm_info power ;
>    int numa_node ;
>    u64 *dma_mask ;
>    u64 coherent_dma_mask ;
>    struct device_dma_parameters *dma_parms ;
>    struct list_head dma_pools ;
>    struct dma_coherent_mem *dma_mem ;
>    struct dev_archdata archdata ;
>    dev_t devt ;
>    spinlock_t devres_lock ;
>    struct list_head devres_head ;
>    struct klist_node knode_class ;
>    struct class *class ;
>    struct attribute_group  const  **groups ;
>    void (*release)(struct device *dev ) ;
> };
> #line 6 "include/asm-generic/scatterlist.h"
> struct scatterlist {
>    unsigned long sg_magic ;
>    unsigned long page_link ;
>    unsigned int offset ;
>    unsigned int length ;
>    dma_addr_t dma_address ;
>    unsigned int dma_length ;
> };
1071c994
< struct __anonstruct____missing_field_name_124 {
---
> struct __anonstruct____missing_field_name_129 {
1076c999
< union __anonunion____missing_field_name_123 {
---
> union __anonunion____missing_field_name_128 {
1078c1001
<    struct __anonstruct____missing_field_name_124 __annonCompField19 ;
---
>    struct __anonstruct____missing_field_name_129 __annonCompField20 ;
1081c1004
< struct __anonstruct____missing_field_name_126 {
---
> struct __anonstruct____missing_field_name_131 {
1086,1087c1009,1010
< union __anonunion____missing_field_name_125 {
<    struct __anonstruct____missing_field_name_126 __annonCompField21 ;
---
> union __anonunion____missing_field_name_130 {
>    struct __anonstruct____missing_field_name_131 __annonCompField22 ;
1093c1016
< union __anonunion____missing_field_name_127 {
---
> union __anonunion____missing_field_name_132 {
1101,1103c1024,1026
<    union __anonunion____missing_field_name_123 __annonCompField20 ;
<    union __anonunion____missing_field_name_125 __annonCompField22 ;
<    union __anonunion____missing_field_name_127 __annonCompField23 ;
---
>    union __anonunion____missing_field_name_128 __annonCompField21 ;
>    union __anonunion____missing_field_name_130 __annonCompField23 ;
>    union __anonunion____missing_field_name_132 __annonCompField24 ;
1107c1030
< struct __anonstruct_vm_set_129 {
---
> struct __anonstruct_vm_set_134 {
1113,1114c1036,1037
< union __anonunion_shared_128 {
<    struct __anonstruct_vm_set_129 vm_set ;
---
> union __anonunion_shared_133 {
>    struct __anonstruct_vm_set_134 vm_set ;
1132c1055
<    union __anonunion_shared_128 shared ;
---
>    union __anonunion_shared_133 shared ;
1215,2295d1137
< #line 7 "include/asm-generic/cputime.h"
< typedef unsigned long cputime_t;
< #line 117 "include/linux/sem.h"
< struct sem_undo_list;
< #line 130 "include/linux/sem.h"
< struct sem_undo_list {
<    atomic_t refcnt ;
<    spinlock_t lock ;
<    struct list_head list_proc ;
< };
< #line 136 "include/linux/sem.h"
< struct sysv_sem {
<    struct sem_undo_list *undo_list ;
< };
< #line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
< struct siginfo;
< #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
< struct __anonstruct_sigset_t_130 {
<    unsigned long sig[64 / 64] ;
< };
< #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
< typedef struct __anonstruct_sigset_t_130 sigset_t;
< #line 17 "include/asm-generic/signal-defs.h"
< typedef void __signalfn_t(int  );
< #line 18 "include/asm-generic/signal-defs.h"
< typedef __signalfn_t *__sighandler_t;
< #line 20 "include/asm-generic/signal-defs.h"
< typedef void __restorefn_t(void);
< #line 21 "include/asm-generic/signal-defs.h"
< typedef __restorefn_t *__sigrestore_t;
< #line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
< struct sigaction {
<    __sighandler_t sa_handler ;
<    unsigned long sa_flags ;
<    __sigrestore_t sa_restorer ;
<    sigset_t sa_mask ;
< };
< #line 174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
< struct k_sigaction {
<    struct sigaction sa ;
< };
< #line 7 "include/asm-generic/siginfo.h"
< union sigval {
<    int sival_int ;
<    void *sival_ptr ;
< };
< #line 7 "include/asm-generic/siginfo.h"
< typedef union sigval sigval_t;
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__kill_132 {
<    __kernel_pid_t _pid ;
<    __kernel_uid32_t _uid ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__timer_133 {
<    __kernel_timer_t _tid ;
<    int _overrun ;
<    char _pad[sizeof(__kernel_uid32_t ) - sizeof(int )] ;
<    sigval_t _sigval ;
<    int _sys_private ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__rt_134 {
<    __kernel_pid_t _pid ;
<    __kernel_uid32_t _uid ;
<    sigval_t _sigval ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__sigchld_135 {
<    __kernel_pid_t _pid ;
<    __kernel_uid32_t _uid ;
<    int _status ;
<    __kernel_clock_t _utime ;
<    __kernel_clock_t _stime ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__sigfault_136 {
<    void *_addr ;
<    short _addr_lsb ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__sigpoll_137 {
<    long _band ;
<    int _fd ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< union __anonunion__sifields_131 {
<    int _pad[(128UL - 4UL * sizeof(int )) / sizeof(int )] ;
<    struct __anonstruct__kill_132 _kill ;
<    struct __anonstruct__timer_133 _timer ;
<    struct __anonstruct__rt_134 _rt ;
<    struct __anonstruct__sigchld_135 _sigchld ;
<    struct __anonstruct__sigfault_136 _sigfault ;
<    struct __anonstruct__sigpoll_137 _sigpoll ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct siginfo {
<    int si_signo ;
<    int si_errno ;
<    int si_code ;
<    union __anonunion__sifields_131 _sifields ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< typedef struct siginfo siginfo_t;
< #line 14 "include/linux/signal.h"
< struct user_struct;
< #line 24 "include/linux/signal.h"
< struct sigpending {
<    struct list_head list ;
<    sigset_t signal ;
< };
< #line 5 "include/linux/path.h"
< struct vfsmount;
< #line 7 "include/linux/path.h"
< struct path {
<    struct vfsmount *mnt ;
<    struct dentry *dentry ;
< };
< #line 6 "include/linux/pid.h"
< enum pid_type {
<     PIDTYPE_PID = 0,
<     PIDTYPE_PGID = 1,
<     PIDTYPE_SID = 2,
<     PIDTYPE_MAX = 3
< } ;
< #line 50
< struct pid_namespace;
< #line 50 "include/linux/pid.h"
< struct upid {
<    int nr ;
<    struct pid_namespace *ns ;
<    struct hlist_node pid_chain ;
< };
< #line 57 "include/linux/pid.h"
< struct pid {
<    atomic_t count ;
<    unsigned int level ;
<    struct hlist_head tasks[PIDTYPE_MAX] ;
<    struct rcu_head rcu ;
<    struct upid numbers[1] ;
< };
< #line 69 "include/linux/pid.h"
< struct pid_link {
<    struct hlist_node node ;
<    struct pid *pid ;
< };
< #line 97 "include/linux/proportions.h"
< struct prop_local_single {
<    unsigned long events ;
<    unsigned long period ;
<    int shift ;
<    spinlock_t lock ;
< };
< #line 10 "include/linux/seccomp.h"
< struct __anonstruct_seccomp_t_140 {
<    int mode ;
< };
< #line 10 "include/linux/seccomp.h"
< typedef struct __anonstruct_seccomp_t_140 seccomp_t;
< #line 80 "include/linux/plist.h"
< struct plist_head {
<    struct list_head prio_list ;
<    struct list_head node_list ;
<    spinlock_t *lock ;
< };
< #line 88 "include/linux/plist.h"
< struct plist_node {
<    int prio ;
<    struct plist_head plist ;
< };
< #line 38 "include/linux/rtmutex.h"
< struct rt_mutex_waiter;
< #line 43 "include/linux/resource.h"
< struct rlimit {
<    unsigned long rlim_cur ;
<    unsigned long rlim_max ;
< };
< #line 27 "include/linux/hrtimer.h"
< struct hrtimer_clock_base;
< #line 28
< struct hrtimer_cpu_base;
< #line 44
< enum hrtimer_restart {
<     HRTIMER_NORESTART = 0,
<     HRTIMER_RESTART = 1
< } ;
< #line 103 "include/linux/hrtimer.h"
< struct hrtimer {
<    struct rb_node node ;
<    ktime_t _expires ;
<    ktime_t _softexpires ;
<    enum hrtimer_restart (*function)(struct hrtimer * ) ;
<    struct hrtimer_clock_base *base ;
<    unsigned long state ;
<    int start_pid ;
<    void *start_site ;
<    char start_comm[16] ;
< };
< #line 141 "include/linux/hrtimer.h"
< struct hrtimer_clock_base {
<    struct hrtimer_cpu_base *cpu_base ;
<    clockid_t index ;
<    struct rb_root active ;
<    struct rb_node *first ;
<    ktime_t resolution ;
<    ktime_t (*get_time)(void) ;
<    ktime_t softirq_time ;
<    ktime_t offset ;
< };
< #line 170 "include/linux/hrtimer.h"
< struct hrtimer_cpu_base {
<    spinlock_t lock ;
<    struct hrtimer_clock_base clock_base[2] ;
<    ktime_t expires_next ;
<    int hres_active ;
<    unsigned long nr_events ;
< };
< #line 11 "include/linux/task_io_accounting.h"
< struct task_io_accounting {
<    u64 rchar ;
<    u64 wchar ;
<    u64 syscr ;
<    u64 syscw ;
<    u64 read_bytes ;
<    u64 write_bytes ;
<    u64 cancelled_write_bytes ;
< };
< #line 18 "include/linux/latencytop.h"
< struct latency_record {
<    unsigned long backtrace[12] ;
<    unsigned int count ;
<    unsigned long time ;
<    unsigned long max ;
< };
< #line 947 "include/linux/sysctl.h"
< struct nsproxy;
< #line 29 "include/linux/key.h"
< typedef int32_t key_serial_t;
< #line 32 "include/linux/key.h"
< typedef uint32_t key_perm_t;
< #line 76
< struct signal_struct;
< #line 77
< struct cred;
< #line 79
< struct key_type;
< #line 81
< struct keyring_list;
< #line 124
< struct key_user;
< #line 124 "include/linux/key.h"
< union __anonunion____missing_field_name_195 {
<    time_t expiry ;
<    time_t revoked_at ;
< };
< #line 124 "include/linux/key.h"
< union __anonunion_type_data_196 {
<    struct list_head link ;
<    unsigned long x[2] ;
<    void *p[2] ;
< };
< #line 124 "include/linux/key.h"
< union __anonunion_payload_197 {
<    unsigned long value ;
<    void *data ;
<    struct keyring_list *subscriptions ;
< };
< #line 124 "include/linux/key.h"
< struct key {
<    atomic_t usage ;
<    key_serial_t serial ;
<    struct rb_node serial_node ;
<    struct key_type *type ;
<    struct rw_semaphore sem ;
<    struct key_user *user ;
<    void *security ;
<    union __anonunion____missing_field_name_195 __annonCompField24 ;
<    uid_t uid ;
<    gid_t gid ;
<    key_perm_t perm ;
<    unsigned short quotalen ;
<    unsigned short datalen ;
<    unsigned long flags ;
<    char *description ;
<    union __anonunion_type_data_196 type_data ;
<    union __anonunion_payload_197 payload ;
< };
< #line 18 "include/linux/selinux.h"
< struct audit_context;
< #line 23 "include/linux/cred.h"
< struct inode;
< #line 31 "include/linux/cred.h"
< struct group_info {
<    atomic_t usage ;
<    int ngroups ;
<    int nblocks ;
<    gid_t small_block[32] ;
<    gid_t *blocks[0] ;
< };
< #line 83 "include/linux/cred.h"
< struct thread_group_cred {
<    atomic_t usage ;
<    pid_t tgid ;
<    spinlock_t lock ;
<    struct key *session_keyring ;
<    struct key *process_keyring ;
<    struct rcu_head rcu ;
< };
< #line 116 "include/linux/cred.h"
< struct cred {
<    atomic_t usage ;
<    atomic_t subscribers ;
<    void *put_addr ;
<    unsigned int magic ;
<    uid_t uid ;
<    gid_t gid ;
<    uid_t suid ;
<    gid_t sgid ;
<    uid_t euid ;
<    gid_t egid ;
<    uid_t fsuid ;
<    gid_t fsgid ;
<    unsigned int securebits ;
<    kernel_cap_t cap_inheritable ;
<    kernel_cap_t cap_permitted ;
<    kernel_cap_t cap_effective ;
<    kernel_cap_t cap_bset ;
<    unsigned char jit_keyring ;
<    struct key *thread_keyring ;
<    struct key *request_key_auth ;
<    struct thread_group_cred *tgcred ;
<    void *security ;
<    struct user_struct *user ;
<    struct group_info *group_info ;
<    struct rcu_head rcu ;
< };
< #line 98 "include/linux/sched.h"
< struct futex_pi_state;
< #line 99
< struct robust_list_head;
< #line 100
< struct bio;
< #line 101
< struct fs_struct;
< #line 102
< struct bts_context;
< #line 103
< struct perf_event_context;
< #line 153
< struct cfs_rq;
< #line 154
< struct task_group;
< #line 357
< struct user_namespace;
< #line 58 "include/linux/aio_abi.h"
< struct io_event {
<    __u64 data ;
<    __u64 obj ;
<    __s64 res ;
<    __s64 res2 ;
< };
< #line 16 "include/linux/uio.h"
< struct iovec {
<    void *iov_base ;
<    __kernel_size_t iov_len ;
< };
< #line 15 "include/linux/aio.h"
< struct kioctx;
< #line 87 "include/linux/aio.h"
< union __anonunion_ki_obj_199 {
<    void *user ;
<    struct task_struct *tsk ;
< };
< #line 87
< struct eventfd_ctx;
< #line 87 "include/linux/aio.h"
< struct kiocb {
<    struct list_head ki_run_list ;
<    unsigned long ki_flags ;
<    int ki_users ;
<    unsigned int ki_key ;
<    struct file *ki_filp ;
<    struct kioctx *ki_ctx ;
<    int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
<    ssize_t (*ki_retry)(struct kiocb * ) ;
<    void (*ki_dtor)(struct kiocb * ) ;
<    union __anonunion_ki_obj_199 ki_obj ;
<    __u64 ki_user_data ;
<    wait_queue_t ki_wait ;
<    loff_t ki_pos ;
<    void *private ;
<    unsigned short ki_opcode ;
<    size_t ki_nbytes ;
<    char *ki_buf ;
<    size_t ki_left ;
<    struct iovec ki_inline_vec ;
<    struct iovec *ki_iovec ;
<    unsigned long ki_nr_segs ;
<    unsigned long ki_cur_seg ;
<    struct list_head ki_list ;
<    struct eventfd_ctx *ki_eventfd ;
< };
< #line 167 "include/linux/aio.h"
< struct aio_ring_info {
<    unsigned long mmap_base ;
<    unsigned long mmap_size ;
<    struct page **ring_pages ;
<    spinlock_t ring_lock ;
<    long nr_pages ;
<    unsigned int nr ;
<    unsigned int tail ;
<    struct page *internal_pages[8] ;
< };
< #line 180 "include/linux/aio.h"
< struct kioctx {
<    atomic_t users ;
<    int dead ;
<    struct mm_struct *mm ;
<    unsigned long user_id ;
<    struct hlist_node list ;
<    wait_queue_head_t wait ;
<    spinlock_t ctx_lock ;
<    int reqs_active ;
<    struct list_head active_reqs ;
<    struct list_head run_list ;
<    unsigned int max_reqs ;
<    struct aio_ring_info ring_info ;
<    struct delayed_work wq ;
<    struct rcu_head rcu_head ;
< };
< #line 481 "include/linux/sched.h"
< struct sighand_struct {
<    atomic_t count ;
<    struct k_sigaction action[64] ;
<    spinlock_t siglock ;
<    wait_queue_head_t signalfd_wqh ;
< };
< #line 488 "include/linux/sched.h"
< struct pacct_struct {
<    int ac_flag ;
<    long ac_exitcode ;
<    unsigned long ac_mem ;
<    cputime_t ac_utime ;
<    cputime_t ac_stime ;
<    unsigned long ac_minflt ;
<    unsigned long ac_majflt ;
< };
< #line 496 "include/linux/sched.h"
< struct cpu_itimer {
<    cputime_t expires ;
<    cputime_t incr ;
<    u32 error ;
<    u32 incr_error ;
< };
< #line 514 "include/linux/sched.h"
< struct task_cputime {
<    cputime_t utime ;
<    cputime_t stime ;
<    unsigned long long sum_exec_runtime ;
< };
< #line 550 "include/linux/sched.h"
< struct thread_group_cputimer {
<    struct task_cputime cputime ;
<    int running ;
<    spinlock_t lock ;
< };
< #line 563
< struct tty_struct;
< #line 563
< struct taskstats;
< #line 563
< struct tty_audit_buf;
< #line 563 "include/linux/sched.h"
< struct signal_struct {
<    atomic_t count ;
<    atomic_t live ;
<    wait_queue_head_t wait_chldexit ;
<    struct task_struct *curr_target ;
<    struct sigpending shared_pending ;
<    int group_exit_code ;
<    int notify_count ;
<    struct task_struct *group_exit_task ;
<    int group_stop_count ;
<    unsigned int flags ;
<    struct list_head posix_timers ;
<    struct hrtimer real_timer ;
<    struct pid *leader_pid ;
<    ktime_t it_real_incr ;
<    struct cpu_itimer it[2] ;
<    struct thread_group_cputimer cputimer ;
<    struct task_cputime cputime_expires ;
<    struct list_head cpu_timers[3] ;
<    struct pid *tty_old_pgrp ;
<    int leader ;
<    struct tty_struct *tty ;
<    cputime_t utime ;
<    cputime_t stime ;
<    cputime_t cutime ;
<    cputime_t cstime ;
<    cputime_t gtime ;
<    cputime_t cgtime ;
<    unsigned long nvcsw ;
<    unsigned long nivcsw ;
<    unsigned long cnvcsw ;
<    unsigned long cnivcsw ;
<    unsigned long min_flt ;
<    unsigned long maj_flt ;
<    unsigned long cmin_flt ;
<    unsigned long cmaj_flt ;
<    unsigned long inblock ;
<    unsigned long oublock ;
<    unsigned long cinblock ;
<    unsigned long coublock ;
<    unsigned long maxrss ;
<    unsigned long cmaxrss ;
<    struct task_io_accounting ioac ;
<    unsigned long long sum_sched_runtime ;
<    struct rlimit rlim[16] ;
<    struct pacct_struct pacct ;
<    struct taskstats *stats ;
<    unsigned int audit_tty ;
<    struct tty_audit_buf *tty_audit_buf ;
<    int oom_adj ;
< };
< #line 701 "include/linux/sched.h"
< struct user_struct {
<    atomic_t __count ;
<    atomic_t processes ;
<    atomic_t files ;
<    atomic_t sigpending ;
<    atomic_t inotify_watches ;
<    atomic_t inotify_devs ;
<    atomic_t epoll_watches ;
<    unsigned long mq_bytes ;
<    unsigned long locked_shm ;
<    struct key *uid_keyring ;
<    struct key *session_keyring ;
<    struct hlist_node uidhash_node ;
<    uid_t uid ;
<    struct user_namespace *user_ns ;
<    struct task_group *tg ;
<    struct kobject kobj ;
<    struct delayed_work work ;
<    atomic_long_t locked_vm ;
< };
< #line 750
< struct backing_dev_info;
< #line 751
< struct reclaim_state;
< #line 754 "include/linux/sched.h"
< struct sched_info {
<    unsigned long pcount ;
<    unsigned long long run_delay ;
<    unsigned long long last_arrival ;
<    unsigned long long last_queued ;
<    unsigned int bkl_count ;
< };
< #line 770 "include/linux/sched.h"
< struct task_delay_info {
<    spinlock_t lock ;
<    unsigned int flags ;
<    struct timespec blkio_start ;
<    struct timespec blkio_end ;
<    u64 blkio_delay ;
<    u64 swapin_delay ;
<    u32 blkio_count ;
<    u32 swapin_count ;
<    struct timespec freepages_start ;
<    struct timespec freepages_end ;
<    u64 freepages_delay ;
<    u32 freepages_count ;
< };
< #line 815
< enum cpu_idle_type {
<     CPU_IDLE = 0,
<     CPU_NOT_IDLE = 1,
<     CPU_NEWLY_IDLE = 2,
<     CPU_MAX_IDLE_TYPES = 3
< } ;
< #line 892 "include/linux/sched.h"
< struct sched_group {
<    struct sched_group *next ;
<    unsigned int cpu_power ;
<    unsigned long cpumask[0] ;
< };
< #line 919
< enum sched_domain_level {
<     SD_LV_NONE = 0,
<     SD_LV_SIBLING = 1,
<     SD_LV_MC = 2,
<     SD_LV_CPU = 3,
<     SD_LV_NODE = 4,
<     SD_LV_ALLNODES = 5,
<     SD_LV_MAX = 6
< } ;
< #line 937 "include/linux/sched.h"
< struct sched_domain {
<    struct sched_domain *parent ;
<    struct sched_domain *child ;
<    struct sched_group *groups ;
<    unsigned long min_interval ;
<    unsigned long max_interval ;
<    unsigned int busy_factor ;
<    unsigned int imbalance_pct ;
<    unsigned int cache_nice_tries ;
<    unsigned int busy_idx ;
<    unsigned int idle_idx ;
<    unsigned int newidle_idx ;
<    unsigned int wake_idx ;
<    unsigned int forkexec_idx ;
<    unsigned int smt_gain ;
<    int flags ;
<    enum sched_domain_level level ;
<    unsigned long last_balance ;
<    unsigned int balance_interval ;
<    unsigned int nr_balance_failed ;
<    u64 last_update ;
<    unsigned int lb_count[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_failed[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_balanced[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_imbalance[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_gained[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_hot_gained[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_nobusyg[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_nobusyq[CPU_MAX_IDLE_TYPES] ;
<    unsigned int alb_count ;
<    unsigned int alb_failed ;
<    unsigned int alb_pushed ;
<    unsigned int sbe_count ;
<    unsigned int sbe_balanced ;
<    unsigned int sbe_pushed ;
<    unsigned int sbf_count ;
<    unsigned int sbf_balanced ;
<    unsigned int sbf_pushed ;
<    unsigned int ttwu_wake_remote ;
<    unsigned int ttwu_move_affine ;
<    unsigned int ttwu_move_balance ;
<    char *name ;
<    unsigned long span[0] ;
< };
< #line 1043
< struct io_context;
< #line 1054
< struct pipe_inode_info;
< #line 1057
< struct rq;
< #line 1066 "include/linux/sched.h"
< struct sched_class {
<    struct sched_class  const  *next ;
<    void (*enqueue_task)(struct rq *rq , struct task_struct *p , int wakeup ) ;
<    void (*dequeue_task)(struct rq *rq , struct task_struct *p , int sleep ) ;
<    void (*yield_task)(struct rq *rq ) ;
<    void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int flags ) ;
<    struct task_struct *(*pick_next_task)(struct rq *rq ) ;
<    void (*put_prev_task)(struct rq *rq , struct task_struct *p ) ;
<    int (*select_task_rq)(struct task_struct *p , int sd_flag , int flags ) ;
<    unsigned long (*load_balance)(struct rq *this_rq , int this_cpu , struct rq *busiest ,
<                                  unsigned long max_load_move , struct sched_domain *sd ,
<                                  enum cpu_idle_type idle , int *all_pinned , int *this_best_prio ) ;
<    int (*move_one_task)(struct rq *this_rq , int this_cpu , struct rq *busiest , struct sched_domain *sd ,
<                         enum cpu_idle_type idle ) ;
<    void (*pre_schedule)(struct rq *this_rq , struct task_struct *task ) ;
<    void (*post_schedule)(struct rq *this_rq ) ;
<    void (*task_wake_up)(struct rq *this_rq , struct task_struct *task ) ;
<    void (*set_cpus_allowed)(struct task_struct *p , struct cpumask  const  *newmask ) ;
<    void (*rq_online)(struct rq *rq ) ;
<    void (*rq_offline)(struct rq *rq ) ;
<    void (*set_curr_task)(struct rq *rq ) ;
<    void (*task_tick)(struct rq *rq , struct task_struct *p , int queued ) ;
<    void (*task_new)(struct rq *rq , struct task_struct *p ) ;
<    void (*switched_from)(struct rq *this_rq , struct task_struct *task , int running ) ;
<    void (*switched_to)(struct rq *this_rq , struct task_struct *task , int running ) ;
<    void (*prio_changed)(struct rq *this_rq , struct task_struct *task , int oldprio ,
<                         int running ) ;
<    unsigned int (*get_rr_interval)(struct task_struct *task ) ;
<    void (*moved_group)(struct task_struct *p ) ;
< };
< #line 1118 "include/linux/sched.h"
< struct load_weight {
<    unsigned long weight ;
<    unsigned long inv_weight ;
< };
< #line 1132 "include/linux/sched.h"
< struct sched_entity {
<    struct load_weight load ;
<    struct rb_node run_node ;
<    struct list_head group_node ;
<    unsigned int on_rq ;
<    u64 exec_start ;
<    u64 sum_exec_runtime ;
<    u64 vruntime ;
<    u64 prev_sum_exec_runtime ;
<    u64 last_wakeup ;
<    u64 avg_overlap ;
<    u64 nr_migrations ;
<    u64 start_runtime ;
<    u64 avg_wakeup ;
<    u64 avg_running ;
<    u64 wait_start ;
<    u64 wait_max ;
<    u64 wait_count ;
<    u64 wait_sum ;
<    u64 iowait_count ;
<    u64 iowait_sum ;
<    u64 sleep_start ;
<    u64 sleep_max ;
<    s64 sum_sleep_runtime ;
<    u64 block_start ;
<    u64 block_max ;
<    u64 exec_max ;
<    u64 slice_max ;
<    u64 nr_migrations_cold ;
<    u64 nr_failed_migrations_affine ;
<    u64 nr_failed_migrations_running ;
<    u64 nr_failed_migrations_hot ;
<    u64 nr_forced_migrations ;
<    u64 nr_forced2_migrations ;
<    u64 nr_wakeups ;
<    u64 nr_wakeups_sync ;
<    u64 nr_wakeups_migrate ;
<    u64 nr_wakeups_local ;
<    u64 nr_wakeups_remote ;
<    u64 nr_wakeups_affine ;
<    u64 nr_wakeups_affine_attempts ;
<    u64 nr_wakeups_passive ;
<    u64 nr_wakeups_idle ;
<    struct sched_entity *parent ;
<    struct cfs_rq *cfs_rq ;
<    struct cfs_rq *my_q ;
< };
< #line 1197
< struct rt_rq;
< #line 1197 "include/linux/sched.h"
< struct sched_rt_entity {
<    struct list_head run_list ;
<    unsigned long timeout ;
<    unsigned int time_slice ;
<    int nr_cpus_allowed ;
<    struct sched_rt_entity *back ;
<    struct sched_rt_entity *parent ;
<    struct rt_rq *rt_rq ;
<    struct rt_rq *my_q ;
< };
< #line 1215
< struct files_struct;
< #line 1215
< struct css_set;
< #line 1215
< struct compat_robust_list_head;
< #line 1215 "include/linux/sched.h"
< struct task_struct {
<    long volatile   state ;
<    void *stack ;
<    atomic_t usage ;
<    unsigned int flags ;
<    unsigned int ptrace ;
<    int lock_depth ;
<    int prio ;
<    int static_prio ;
<    int normal_prio ;
<    unsigned int rt_priority ;
<    struct sched_class  const  *sched_class ;
<    struct sched_entity se ;
<    struct sched_rt_entity rt ;
<    struct hlist_head preempt_notifiers ;
<    unsigned char fpu_counter ;
<    unsigned int policy ;
<    cpumask_t cpus_allowed ;
<    struct sched_info sched_info ;
<    struct list_head tasks ;
<    struct plist_node pushable_tasks ;
<    struct mm_struct *mm ;
<    struct mm_struct *active_mm ;
<    int exit_state ;
<    int exit_code ;
<    int exit_signal ;
<    int pdeath_signal ;
<    unsigned int personality ;
<    unsigned int did_exec : 1 ;
<    unsigned int in_execve : 1 ;
<    unsigned int in_iowait : 1 ;
<    unsigned int sched_reset_on_fork : 1 ;
<    pid_t pid ;
<    pid_t tgid ;
<    unsigned long stack_canary ;
<    struct task_struct *real_parent ;
<    struct task_struct *parent ;
<    struct list_head children ;
<    struct list_head sibling ;
<    struct task_struct *group_leader ;
<    struct list_head ptraced ;
<    struct list_head ptrace_entry ;
<    struct bts_context *bts ;
<    struct pid_link pids[PIDTYPE_MAX] ;
<    struct list_head thread_group ;
<    struct completion *vfork_done ;
<    int *set_child_tid ;
<    int *clear_child_tid ;
<    cputime_t utime ;
<    cputime_t stime ;
<    cputime_t utimescaled ;
<    cputime_t stimescaled ;
<    cputime_t gtime ;
<    cputime_t prev_utime ;
<    cputime_t prev_stime ;
<    unsigned long nvcsw ;
<    unsigned long nivcsw ;
<    struct timespec start_time ;
<    struct timespec real_start_time ;
<    unsigned long min_flt ;
<    unsigned long maj_flt ;
<    struct task_cputime cputime_expires ;
<    struct list_head cpu_timers[3] ;
<    struct cred  const  *real_cred ;
<    struct cred  const  *cred ;
<    struct mutex cred_guard_mutex ;
<    struct cred *replacement_session_keyring ;
<    char comm[16] ;
<    int link_count ;
<    int total_link_count ;
<    struct sysv_sem sysvsem ;
<    unsigned long last_switch_count ;
<    struct thread_struct thread ;
<    struct fs_struct *fs ;
<    struct files_struct *files ;
<    struct nsproxy *nsproxy ;
<    struct signal_struct *signal ;
<    struct sighand_struct *sighand ;
<    sigset_t blocked ;
<    sigset_t real_blocked ;
<    sigset_t saved_sigmask ;
<    struct sigpending pending ;
<    unsigned long sas_ss_sp ;
<    size_t sas_ss_size ;
<    int (*notifier)(void *priv ) ;
<    void *notifier_data ;
<    sigset_t *notifier_mask ;
<    struct audit_context *audit_context ;
<    uid_t loginuid ;
<    unsigned int sessionid ;
<    seccomp_t seccomp ;
<    u32 parent_exec_id ;
<    u32 self_exec_id ;
<    spinlock_t alloc_lock ;
<    struct irqaction *irqaction ;
<    spinlock_t pi_lock ;
<    struct plist_head pi_waiters ;
<    struct rt_mutex_waiter *pi_blocked_on ;
<    struct mutex_waiter *blocked_on ;
<    unsigned int irq_events ;
<    int hardirqs_enabled ;
<    unsigned long hardirq_enable_ip ;
<    unsigned int hardirq_enable_event ;
<    unsigned long hardirq_disable_ip ;
<    unsigned int hardirq_disable_event ;
<    int softirqs_enabled ;
<    unsigned long softirq_disable_ip ;
<    unsigned int softirq_disable_event ;
<    unsigned long softirq_enable_ip ;
<    unsigned int softirq_enable_event ;
<    int hardirq_context ;
<    int softirq_context ;
<    void *journal_info ;
<    struct bio *bio_list ;
<    struct bio **bio_tail ;
<    struct reclaim_state *reclaim_state ;
<    struct backing_dev_info *backing_dev_info ;
<    struct io_context *io_context ;
<    unsigned long ptrace_message ;
<    siginfo_t *last_siginfo ;
<    struct task_io_accounting ioac ;
<    u64 acct_rss_mem1 ;
<    u64 acct_vm_mem1 ;
<    cputime_t acct_timexpd ;
<    nodemask_t mems_allowed ;
<    int cpuset_mem_spread_rotor ;
<    struct css_set *cgroups ;
<    struct list_head cg_list ;
<    struct robust_list_head *robust_list ;
<    struct compat_robust_list_head *compat_robust_list ;
<    struct list_head pi_state_list ;
<    struct futex_pi_state *pi_state_cache ;
<    struct perf_event_context *perf_event_ctxp ;
<    struct mutex perf_event_mutex ;
<    struct list_head perf_event_list ;
<    struct mempolicy *mempolicy ;
<    short il_next ;
<    atomic_t fs_excl ;
<    struct rcu_head rcu ;
<    struct pipe_inode_info *splice_pipe ;
<    struct task_delay_info *delays ;
<    int make_it_fail ;
<    struct prop_local_single dirties ;
<    int latency_record_count ;
<    struct latency_record latency_record[32] ;
<    unsigned long timer_slack_ns ;
<    unsigned long default_timer_slack_ns ;
<    struct list_head *scm_work_list ;
<    unsigned long trace ;
<    unsigned long trace_recursion ;
<    unsigned long stack_start ;
< };
< #line 96 "include/linux/interrupt.h"
< struct irqaction {
<    irqreturn_t (*handler)(int  , void * ) ;
<    unsigned long flags ;
<    char const   *name ;
<    void *dev_id ;
<    struct irqaction *next ;
<    int irq ;
<    struct proc_dir_entry *dir ;
<    irqreturn_t (*thread_fn)(int  , void * ) ;
<    struct task_struct *thread ;
<    unsigned long thread_flags ;
< };
< #line 19 "include/linux/klist.h"
< struct klist_node;
< #line 39 "include/linux/klist.h"
< struct klist_node {
<    void *n_klist ;
<    struct list_head n_node ;
<    struct kref n_ref ;
< };
< #line 16 "include/linux/semaphore.h"
< struct semaphore {
<    spinlock_t lock ;
<    unsigned int count ;
<    struct list_head wait_list ;
< };
< #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
< struct dma_map_ops;
< #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
< struct dev_archdata {
<    void *acpi_handle ;
<    struct dma_map_ops *dma_ops ;
<    void *iommu ;
< };
< #line 30 "include/linux/device.h"
< struct device_private;
< #line 32
< struct driver_private;
< #line 33
< struct class;
< #line 34
< struct class_private;
< #line 35
< struct bus_type;
< #line 36
< struct bus_type_private;
< #line 38 "include/linux/device.h"
< struct bus_attribute {
<    struct attribute attr ;
<    ssize_t (*show)(struct bus_type *bus , char *buf ) ;
<    ssize_t (*store)(struct bus_type *bus , char const   *buf , size_t count ) ;
< };
< #line 51
< struct device_attribute;
< #line 51
< struct driver_attribute;
< #line 51 "include/linux/device.h"
< struct bus_type {
<    char const   *name ;
<    struct bus_attribute *bus_attrs ;
<    struct device_attribute *dev_attrs ;
<    struct driver_attribute *drv_attrs ;
<    int (*match)(struct device *dev , struct device_driver *drv ) ;
<    int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
<    int (*probe)(struct device *dev ) ;
<    int (*remove)(struct device *dev ) ;
<    void (*shutdown)(struct device *dev ) ;
<    int (*suspend)(struct device *dev , pm_message_t state ) ;
<    int (*resume)(struct device *dev ) ;
<    struct dev_pm_ops  const  *pm ;
<    struct bus_type_private *p ;
< };
< #line 122 "include/linux/device.h"
< struct device_driver {
<    char const   *name ;
<    struct bus_type *bus ;
<    struct module *owner ;
<    char const   *mod_name ;
<    int (*probe)(struct device *dev ) ;
<    int (*remove)(struct device *dev ) ;
<    void (*shutdown)(struct device *dev ) ;
<    int (*suspend)(struct device *dev , pm_message_t state ) ;
<    int (*resume)(struct device *dev ) ;
<    struct attribute_group  const  **groups ;
<    struct dev_pm_ops  const  *pm ;
<    struct driver_private *p ;
< };
< #line 155 "include/linux/device.h"
< struct driver_attribute {
<    struct attribute attr ;
<    ssize_t (*show)(struct device_driver *driver , char *buf ) ;
<    ssize_t (*store)(struct device_driver *driver , char const   *buf , size_t count ) ;
< };
< #line 187
< struct class_attribute;
< #line 187 "include/linux/device.h"
< struct class {
<    char const   *name ;
<    struct module *owner ;
<    struct class_attribute *class_attrs ;
<    struct device_attribute *dev_attrs ;
<    struct kobject *dev_kobj ;
<    int (*dev_uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
<    char *(*devnode)(struct device *dev , mode_t *mode ) ;
<    void (*class_release)(struct class *class ) ;
<    void (*dev_release)(struct device *dev ) ;
<    int (*suspend)(struct device *dev , pm_message_t state ) ;
<    int (*resume)(struct device *dev ) ;
<    struct dev_pm_ops  const  *pm ;
<    struct class_private *p ;
< };
< #line 209
< struct device_type;
< #line 250 "include/linux/device.h"
< struct class_attribute {
<    struct attribute attr ;
<    ssize_t (*show)(struct class *class , char *buf ) ;
<    ssize_t (*store)(struct class *class , char const   *buf , size_t count ) ;
< };
< #line 297 "include/linux/device.h"
< struct device_type {
<    char const   *name ;
<    struct attribute_group  const  **groups ;
<    int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
<    char *(*devnode)(struct device *dev , mode_t *mode ) ;
<    void (*release)(struct device *dev ) ;
<    struct dev_pm_ops  const  *pm ;
< };
< #line 308 "include/linux/device.h"
< struct device_attribute {
<    struct attribute attr ;
<    ssize_t (*show)(struct device *dev , struct device_attribute *attr , char *buf ) ;
<    ssize_t (*store)(struct device *dev , struct device_attribute *attr , char const   *buf ,
<                     size_t count ) ;
< };
< #line 368 "include/linux/device.h"
< struct device_dma_parameters {
<    unsigned int max_segment_size ;
<    unsigned long segment_boundary_mask ;
< };
< #line 377
< struct dma_coherent_mem;
< #line 377 "include/linux/device.h"
< struct device {
<    struct device *parent ;
<    struct device_private *p ;
<    struct kobject kobj ;
<    char const   *init_name ;
<    struct device_type *type ;
<    struct semaphore sem ;
<    struct bus_type *bus ;
<    struct device_driver *driver ;
<    void *platform_data ;
<    struct dev_pm_info power ;
<    int numa_node ;
<    u64 *dma_mask ;
<    u64 coherent_dma_mask ;
<    struct device_dma_parameters *dma_parms ;
<    struct list_head dma_pools ;
<    struct dma_coherent_mem *dma_mem ;
<    struct dev_archdata archdata ;
<    dev_t devt ;
<    spinlock_t devres_lock ;
<    struct list_head devres_head ;
<    struct klist_node knode_class ;
<    struct class *class ;
<    struct attribute_group  const  **groups ;
<    void (*release)(struct device *dev ) ;
< };
< #line 6 "include/asm-generic/scatterlist.h"
< struct scatterlist {
<    unsigned long sg_magic ;
<    unsigned long page_link ;
<    unsigned int offset ;
<    unsigned int length ;
<    dma_addr_t dma_address ;
<    unsigned int dma_length ;
< };
2319a1162,1163
> #line 226
> struct inode;
2368a1213,1216
> #line 12
> struct path;
> #line 13
> struct vfsmount;
2376c1224
< union __anonunion_d_u_206 {
---
> union __anonunion_d_u_135 {
2395c1243
<    union __anonunion_d_u_206 d_u ;
---
>    union __anonunion_d_u_135 d_u ;
2413a1262,1266
> #line 7 "include/linux/path.h"
> struct path {
>    struct vfsmount *mnt ;
>    struct dentry *dentry ;
> };
2421a1275,1297
> #line 6 "include/linux/pid.h"
> enum pid_type {
>     PIDTYPE_PID = 0,
>     PIDTYPE_PGID = 1,
>     PIDTYPE_SID = 2,
>     PIDTYPE_MAX = 3
> } ;
> #line 50
> struct pid_namespace;
> #line 50 "include/linux/pid.h"
> struct upid {
>    int nr ;
>    struct pid_namespace *ns ;
>    struct hlist_node pid_chain ;
> };
> #line 57 "include/linux/pid.h"
> struct pid {
>    atomic_t count ;
>    unsigned int level ;
>    struct hlist_head tasks[PIDTYPE_MAX] ;
>    struct rcu_head rcu ;
>    struct upid numbers[1] ;
> };
2431c1307
< #line 380 "include/linux/fs.h"
---
> #line 384 "include/linux/fs.h"
2433a1310,1315
> struct iovec;
> #line 388
> struct kiocb;
> #line 389
> struct pipe_inode_info;
> #line 390
2435c1317
< #line 387
---
> #line 391
2437c1319,1321
< #line 442 "include/linux/fs.h"
---
> #line 394
> struct cred;
> #line 446 "include/linux/fs.h"
2615c1499
< #line 379 "include/linux/quota.h"
---
> #line 390 "include/linux/quota.h"
2625,2626c1509,1510
< #line 550 "include/linux/fs.h"
< union __anonunion_arg_212 {
---
> #line 554 "include/linux/fs.h"
> union __anonunion_arg_142 {
2630,2631c1514,1515
< #line 550 "include/linux/fs.h"
< struct __anonstruct_read_descriptor_t_211 {
---
> #line 554 "include/linux/fs.h"
> struct __anonstruct_read_descriptor_t_141 {
2634c1518
<    union __anonunion_arg_212 arg ;
---
>    union __anonunion_arg_142 arg ;
2637,2639c1521,1523
< #line 550 "include/linux/fs.h"
< typedef struct __anonstruct_read_descriptor_t_211 read_descriptor_t;
< #line 563 "include/linux/fs.h"
---
> #line 554 "include/linux/fs.h"
> typedef struct __anonstruct_read_descriptor_t_141 read_descriptor_t;
> #line 567 "include/linux/fs.h"
2664c1548,1550
< #line 614 "include/linux/fs.h"
---
> #line 617
> struct backing_dev_info;
> #line 618 "include/linux/fs.h"
2683c1569
< #line 638
---
> #line 642
2685c1571
< #line 638
---
> #line 642
2687c1573
< #line 638 "include/linux/fs.h"
---
> #line 642 "include/linux/fs.h"
2709c1595
< #line 712
---
> #line 716
2711c1597
< #line 715
---
> #line 719
2713c1599
< #line 715
---
> #line 719
2715c1601
< #line 715
---
> #line 719
2717c1603
< #line 715
---
> #line 719
2719,2720c1605,1606
< #line 715 "include/linux/fs.h"
< union __anonunion____missing_field_name_213 {
---
> #line 719 "include/linux/fs.h"
> union __anonunion____missing_field_name_143 {
2725c1611
< #line 715 "include/linux/fs.h"
---
> #line 719 "include/linux/fs.h"
2757c1643
<    union __anonunion____missing_field_name_213 __annonCompField26 ;
---
>    union __anonunion____missing_field_name_143 __annonCompField25 ;
2772c1658
< #line 870 "include/linux/fs.h"
---
> #line 874 "include/linux/fs.h"
2781c1667
< #line 881 "include/linux/fs.h"
---
> #line 885 "include/linux/fs.h"
2790,2791c1676,1677
< #line 904 "include/linux/fs.h"
< union __anonunion_f_u_214 {
---
> #line 908 "include/linux/fs.h"
> union __anonunion_f_u_144 {
2795c1681
< #line 904 "include/linux/fs.h"
---
> #line 908 "include/linux/fs.h"
2797c1683
<    union __anonunion_f_u_214 f_u ;
---
>    union __anonunion_f_u_144 f_u ;
2815c1701,1703
< #line 1023 "include/linux/fs.h"
---
> #line 1027
> struct files_struct;
> #line 1027 "include/linux/fs.h"
2817c1705
< #line 1025 "include/linux/fs.h"
---
> #line 1029 "include/linux/fs.h"
2822c1710
< #line 1030 "include/linux/fs.h"
---
> #line 1034 "include/linux/fs.h"
2847c1735
< #line 1052 "include/linux/fs.h"
---
> #line 1056 "include/linux/fs.h"
2849,2850c1737,1738
< #line 1052 "include/linux/fs.h"
< struct __anonstruct_afs_216 {
---
> #line 1056 "include/linux/fs.h"
> struct __anonstruct_afs_146 {
2854,2855c1742,1743
< #line 1052 "include/linux/fs.h"
< union __anonunion_fl_u_215 {
---
> #line 1056 "include/linux/fs.h"
> union __anonunion_fl_u_145 {
2858c1746
<    struct __anonstruct_afs_216 afs ;
---
>    struct __anonstruct_afs_146 afs ;
2860c1748
< #line 1052 "include/linux/fs.h"
---
> #line 1056 "include/linux/fs.h"
2878c1766
<    union __anonunion_fl_u_215 fl_u ;
---
>    union __anonunion_fl_u_145 fl_u ;
2880c1768
< #line 1277 "include/linux/fs.h"
---
> #line 1281 "include/linux/fs.h"
2887c1775
< #line 1312
---
> #line 1316
2889c1777
< #line 1312
---
> #line 1316
2891c1779
< #line 1312
---
> #line 1316
2893c1781
< #line 1312
---
> #line 1316
2895c1783
< #line 1312 "include/linux/fs.h"
---
> #line 1316 "include/linux/fs.h"
2938c1826
< #line 1431 "include/linux/fs.h"
---
> #line 1435 "include/linux/fs.h"
2945c1833
< #line 1478 "include/linux/fs.h"
---
> #line 1482 "include/linux/fs.h"
2981c1869
< #line 1507 "include/linux/fs.h"
---
> #line 1511 "include/linux/fs.h"
3008c1896
< #line 1551 "include/linux/fs.h"
---
> #line 1555 "include/linux/fs.h"
3032c1920
< #line 1734 "include/linux/fs.h"
---
> #line 1738 "include/linux/fs.h"
3117c2005
< #line 550 "include/linux/videodev2.h"
---
> #line 551 "include/linux/videodev2.h"
3204c2092
<    struct videobuf_queue_ops *ops ;
---
>    struct videobuf_queue_ops  const  *ops ;
3224c2112
< #line 241 "include/linux/kernel.h"
---
> #line 240 "include/linux/kernel.h"
3262c2150
< #line 178 "include/linux/moduleparam.h"
---
> #line 177 "include/linux/moduleparam.h"
3264c2152
< #line 179
---
> #line 178
3266c2154
< #line 199 "include/linux/rcupdate.h"
---
> #line 195 "include/linux/rcupdate.h"
3268c2156
< #line 199 "include/linux/rcupdate.h"
---
> #line 195 "include/linux/rcupdate.h"
3274c2162
< #line 201
---
> #line 197
3276c2164
< #line 201
---
> #line 197
3279c2167
< #line 203
---
> #line 199
3348,3350c2236,2246
< #line 27 "include/linux/kmemleak.h"
< extern void ( __attribute__((__noinline__)) kmemleak_alloc)(void const   *ptr , size_t size ,
<                                                             int min_count , gfp_t gfp )  __attribute__((__section__(".ref.text"))) ;
---
> #line 63 "include/linux/kmemleak.h"
> __inline static void kmemleak_alloc(void const   *ptr , size_t size , int min_count ,
>                                     gfp_t gfp ) 
> { 
> 
> 
>   {
> #line 66
>   return;
> }
> }
4255c3151
< extern void videobuf_queue_core_init(struct videobuf_queue *q , struct videobuf_queue_ops *ops ,
---
> extern void videobuf_queue_core_init(struct videobuf_queue *q , struct videobuf_queue_ops  const  *ops ,
4262c3158
< void videobuf_queue_vmalloc_init(struct videobuf_queue *q , struct videobuf_queue_ops *ops ,
---
> void videobuf_queue_vmalloc_init(struct videobuf_queue *q , struct videobuf_queue_ops  const  *ops ,
5160c4056
< void videobuf_queue_vmalloc_init(struct videobuf_queue *q , struct videobuf_queue_ops *ops ,
---
> void videobuf_queue_vmalloc_init(struct videobuf_queue *q , struct videobuf_queue_ops  const  *ops ,
