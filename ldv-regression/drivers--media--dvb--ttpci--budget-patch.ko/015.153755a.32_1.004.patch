6,38c6,11
< #line 40 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __builtin_va_list __gnuc_va_list;
< #line 102 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __gnuc_va_list va_list;
< #line 11 "include/asm/posix_types_64.h"
< typedef unsigned int __kernel_mode_t;
< #line 14 "include/asm/posix_types_64.h"
< typedef int __kernel_pid_t;
< #line 16 "include/asm/posix_types_64.h"
< typedef unsigned int __kernel_uid_t;
< #line 17 "include/asm/posix_types_64.h"
< typedef unsigned int __kernel_gid_t;
< #line 18 "include/asm/posix_types_64.h"
< typedef unsigned long __kernel_size_t;
< #line 19 "include/asm/posix_types_64.h"
< typedef long __kernel_ssize_t;
< #line 21 "include/asm/posix_types_64.h"
< typedef long __kernel_time_t;
< #line 22 "include/asm/posix_types_64.h"
< typedef long __kernel_suseconds_t;
< #line 23 "include/asm/posix_types_64.h"
< typedef long __kernel_clock_t;
< #line 24 "include/asm/posix_types_64.h"
< typedef int __kernel_timer_t;
< #line 25 "include/asm/posix_types_64.h"
< typedef int __kernel_clockid_t;
< #line 32 "include/asm/posix_types_64.h"
< typedef long long __kernel_loff_t;
< #line 41 "include/asm/posix_types_64.h"
< typedef __kernel_uid_t __kernel_uid32_t;
< #line 42 "include/asm/posix_types_64.h"
< typedef __kernel_gid_t __kernel_gid32_t;
< #line 17 "include/asm-generic/int-ll64.h"
---
> #line 15 "include/linux/stddef.h"
> enum __anonenum_4 {
>     false = 0,
>     true = 1
> } ;
> #line 19 "include/asm-generic/int-ll64.h"
40,41d12
< #line 18 "include/asm-generic/int-ll64.h"
< typedef unsigned char __u8;
42a14,15
> typedef unsigned char __u8;
> #line 22 "include/asm-generic/int-ll64.h"
44,45d16
< #line 21 "include/asm-generic/int-ll64.h"
< typedef unsigned short __u16;
46a18,19
> typedef unsigned short __u16;
> #line 25 "include/asm-generic/int-ll64.h"
48c21
< #line 24 "include/asm-generic/int-ll64.h"
---
> #line 26 "include/asm-generic/int-ll64.h"
50c23
< #line 27 "include/asm-generic/int-ll64.h"
---
> #line 29 "include/asm-generic/int-ll64.h"
52c25
< #line 28 "include/asm-generic/int-ll64.h"
---
> #line 30 "include/asm-generic/int-ll64.h"
54,56c27
< #line 40 "include/asm-generic/int-ll64.h"
< typedef signed char s8;
< #line 41 "include/asm-generic/int-ll64.h"
---
> #line 43 "include/asm-generic/int-ll64.h"
58,59d28
< #line 44 "include/asm-generic/int-ll64.h"
< typedef unsigned short u16;
60a30,31
> typedef unsigned short u16;
> #line 48 "include/asm-generic/int-ll64.h"
62,63d32
< #line 47 "include/asm-generic/int-ll64.h"
< typedef unsigned int u32;
64a34,35
> typedef unsigned int u32;
> #line 51 "include/asm-generic/int-ll64.h"
66c37
< #line 50 "include/asm-generic/int-ll64.h"
---
> #line 52 "include/asm-generic/int-ll64.h"
68c39
< #line 8 "include/asm/types.h"
---
> #line 11 "include/asm-generic/types.h"
70c41
< #line 28 "include/asm/types.h"
---
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
72c43,75
< #line 16 "include/linux/types.h"
---
> #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef unsigned int __kernel_mode_t;
> #line 12 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef unsigned long __kernel_nlink_t;
> #line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long __kernel_off_t;
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef int __kernel_pid_t;
> #line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef unsigned int __kernel_uid_t;
> #line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef unsigned int __kernel_gid_t;
> #line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef unsigned long __kernel_size_t;
> #line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long __kernel_ssize_t;
> #line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long __kernel_time_t;
> #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long __kernel_suseconds_t;
> #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long __kernel_clock_t;
> #line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef int __kernel_timer_t;
> #line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef int __kernel_clockid_t;
> #line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long long __kernel_loff_t;
> #line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef __kernel_uid_t __kernel_uid32_t;
> #line 42 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef __kernel_gid_t __kernel_gid32_t;
> #line 18 "include/linux/types.h"
74,75d76
< #line 19 "include/linux/types.h"
< typedef __kernel_dev_t dev_t;
76a78,79
> typedef __kernel_dev_t dev_t;
> #line 23 "include/linux/types.h"
78a82,85
> typedef __kernel_nlink_t nlink_t;
> #line 25 "include/linux/types.h"
> typedef __kernel_off_t off_t;
> #line 26 "include/linux/types.h"
80,84c87
< #line 27 "include/linux/types.h"
< typedef __kernel_suseconds_t suseconds_t;
< #line 28 "include/linux/types.h"
< typedef __kernel_timer_t timer_t;
< #line 29 "include/linux/types.h"
---
> #line 31 "include/linux/types.h"
86,87c89,90
< #line 35 "include/linux/types.h"
< typedef __kernel_uid32_t uid_t;
---
> #line 34 "include/linux/types.h"
> typedef _Bool bool;
88a92,93
> typedef __kernel_uid32_t uid_t;
> #line 37 "include/linux/types.h"
90c95
< #line 57 "include/linux/types.h"
---
> #line 50 "include/linux/types.h"
92c97
< #line 66 "include/linux/types.h"
---
> #line 59 "include/linux/types.h"
94c99
< #line 71 "include/linux/types.h"
---
> #line 64 "include/linux/types.h"
96c101
< #line 81 "include/linux/types.h"
---
> #line 74 "include/linux/types.h"
98,100c103,109
< #line 86 "include/linux/types.h"
< typedef __kernel_clock_t clock_t;
< #line 142 "include/linux/types.h"
---
> #line 107 "include/linux/types.h"
> typedef __s32 int32_t;
> #line 111 "include/linux/types.h"
> typedef __u8 uint8_t;
> #line 113 "include/linux/types.h"
> typedef __u32 uint32_t;
> #line 138 "include/linux/types.h"
102c111
< #line 151 "include/linux/types.h"
---
> #line 139 "include/linux/types.h"
104c113
< #line 181 "include/linux/types.h"
---
> #line 169 "include/linux/types.h"
106c115
< #line 182 "include/linux/types.h"
---
> #line 170 "include/linux/types.h"
108c117,119
< #line 189 "include/linux/types.h"
---
> #line 171 "include/linux/types.h"
> typedef __u32 __be32;
> #line 176 "include/linux/types.h"
110c121
< #line 192 "include/linux/types.h"
---
> #line 179 "include/linux/types.h"
111a123,138
> #line 180 "include/linux/types.h"
> typedef unsigned int fmode_t;
> #line 183 "include/linux/types.h"
> typedef u64 phys_addr_t;
> #line 188 "include/linux/types.h"
> typedef phys_addr_t resource_size_t;
> #line 190 "include/linux/types.h"
> struct __anonstruct_atomic_t_7 {
>    int volatile   counter ;
> };
> #line 190 "include/linux/types.h"
> typedef struct __anonstruct_atomic_t_7 atomic_t;
> #line 195 "include/linux/types.h"
> struct __anonstruct_atomic64_t_8 {
>    long volatile   counter ;
> };
113,114c140,141
< typedef u64 resource_size_t;
< #line 59 "include/asm/alternative.h"
---
> typedef struct __anonstruct_atomic64_t_8 atomic64_t;
> #line 60 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
118,119c145,146
<    unsigned long bug_addr ;
<    char const   *file ;
---
>    int bug_addr_disp ;
>    int file_disp ;
123c150
< #line 107 "include/linux/kernel.h"
---
> #line 116 "include/linux/kernel.h"
125c152
< #line 108
---
> #line 117
127c154
< #line 190
---
> #line 211
134c161
< struct __anonstruct____missing_field_name_6 {
---
> struct __anonstruct____missing_field_name_11 {
141c168
< struct __anonstruct_futex_7 {
---
> struct __anonstruct_futex_12 {
146a174
>    u32 *uaddr2 ;
149c177
< struct __anonstruct_nanosleep_8 {
---
> struct __anonstruct_nanosleep_13 {
154a183,184
> #line 18
> struct pollfd;
156,159c186,198
< union __anonunion____missing_field_name_5 {
<    struct __anonstruct____missing_field_name_6 __annonCompField1 ;
<    struct __anonstruct_futex_7 futex ;
<    struct __anonstruct_nanosleep_8 nanosleep ;
---
> struct __anonstruct_poll_14 {
>    struct pollfd *ufds ;
>    int nfds ;
>    int has_timeout ;
>    unsigned long tv_sec ;
>    unsigned long tv_nsec ;
> };
> #line 18 "include/linux/thread_info.h"
> union __anonunion____missing_field_name_10 {
>    struct __anonstruct____missing_field_name_11 __annonCompField4 ;
>    struct __anonstruct_futex_12 futex ;
>    struct __anonstruct_nanosleep_13 nanosleep ;
>    struct __anonstruct_poll_14 poll ;
164c203
<    union __anonunion____missing_field_name_5 __annonCompField2 ;
---
>    union __anonunion____missing_field_name_10 __annonCompField5 ;
166,172c205
< #line 80 "include/asm/page_64.h"
< typedef unsigned long pgdval_t;
< #line 81 "include/asm/page_64.h"
< typedef unsigned long pgprotval_t;
< #line 82 "include/asm/page_64.h"
< typedef unsigned long phys_addr_t;
< #line 84
---
> #line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page.h"
174,228c207
< #line 56 "include/asm/page.h"
< struct __anonstruct_pgd_t_10 {
<    pgdval_t pgd ;
< };
< #line 56 "include/asm/page.h"
< typedef struct __anonstruct_pgd_t_10 pgd_t;
< #line 57 "include/asm/page.h"
< struct __anonstruct_pgprot_t_11 {
<    pgprotval_t pgprot ;
< };
< #line 57 "include/asm/page.h"
< typedef struct __anonstruct_pgprot_t_11 pgprot_t;
< #line 22 "include/asm/desc_defs.h"
< struct __anonstruct____missing_field_name_15 {
<    unsigned int a ;
<    unsigned int b ;
< };
< #line 22 "include/asm/desc_defs.h"
< struct __anonstruct____missing_field_name_16 {
<    u16 limit0 ;
<    u16 base0 ;
<    unsigned int base1 : 8 ;
<    unsigned int type : 4 ;
<    unsigned int s : 1 ;
<    unsigned int dpl : 2 ;
<    unsigned int p : 1 ;
<    unsigned int limit : 4 ;
<    unsigned int avl : 1 ;
<    unsigned int l : 1 ;
<    unsigned int d : 1 ;
<    unsigned int g : 1 ;
<    unsigned int base2 : 8 ;
< };
< #line 22 "include/asm/desc_defs.h"
< union __anonunion____missing_field_name_14 {
<    struct __anonstruct____missing_field_name_15 __annonCompField3 ;
<    struct __anonstruct____missing_field_name_16 __annonCompField4 ;
< };
< #line 22 "include/asm/desc_defs.h"
< struct desc_struct {
<    union __anonunion____missing_field_name_14 __annonCompField5 ;
< } __attribute__((__packed__)) ;
< #line 141 "include/linux/cpumask.h"
< struct __anonstruct_cpumask_t_19 {
<    unsigned long bits[((8UL + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
< };
< #line 141 "include/linux/cpumask.h"
< typedef struct __anonstruct_cpumask_t_19 cpumask_t;
< #line 37 "include/asm/paravirt.h"
< struct thread_struct;
< #line 40
< struct mm_struct;
< #line 323
< struct raw_spinlock;
< #line 20 "include/asm/thread_info.h"
---
> #line 20 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
232,245c211,213
< #line 50 "include/asm/ds.h"
< typedef void (*ds_ovfl_callback_t)(struct task_struct * );
< #line 209 "include/asm/ds.h"
< struct ds_context {
<    unsigned char *ds ;
<    struct task_struct *owner[2] ;
<    ds_ovfl_callback_t callback[2] ;
<    void *buffer[2] ;
<    unsigned int pages[2] ;
<    unsigned long count ;
<    struct ds_context **this ;
<    struct task_struct *task ;
< };
< #line 99 "include/asm/ptrace.h"
---
> #line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct mm_struct;
> #line 98 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
269,270c237,257
< #line 8 "include/asm/math_emu.h"
< struct info {
---
> #line 138 "include/linux/init.h"
> typedef void (*ctor_fn_t)(void);
> #line 141 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
> struct kernel_vm86_regs {
>    struct pt_regs pt ;
>    unsigned short es ;
>    unsigned short __esh ;
>    unsigned short ds ;
>    unsigned short __dsh ;
>    unsigned short fs ;
>    unsigned short __fsh ;
>    unsigned short gs ;
>    unsigned short __gsh ;
> };
> #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
> union __anonunion____missing_field_name_15 {
>    struct pt_regs *regs ;
>    struct kernel_vm86_regs *vm86 ;
> };
> #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
> struct math_emu_info {
272,291c259,305
<    long ___ebx ;
<    long ___ecx ;
<    long ___edx ;
<    long ___esi ;
<    long ___edi ;
<    long ___ebp ;
<    long ___eax ;
<    long ___ds ;
<    long ___es ;
<    long ___fs ;
<    long ___orig_eax ;
<    long ___eip ;
<    long ___cs ;
<    long ___eflags ;
<    long ___esp ;
<    long ___ss ;
<    long ___vm86_es ;
<    long ___vm86_ds ;
<    long ___vm86_fs ;
<    long ___vm86_gs ;
---
>    union __anonunion____missing_field_name_15 __annonCompField6 ;
> };
> #line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
> typedef unsigned long pgdval_t;
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
> typedef unsigned long pgprotval_t;
> #line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> struct pgprot {
>    pgprotval_t pgprot ;
> };
> #line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> typedef struct pgprot pgprot_t;
> #line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> struct __anonstruct_pgd_t_18 {
>    pgdval_t pgd ;
> };
> #line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> typedef struct __anonstruct_pgd_t_18 pgd_t;
> #line 290
> struct file;
> #line 307
> struct seq_file;
> #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
> struct __anonstruct____missing_field_name_23 {
>    unsigned int a ;
>    unsigned int b ;
> };
> #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
> struct __anonstruct____missing_field_name_24 {
>    u16 limit0 ;
>    u16 base0 ;
>    unsigned int base1 : 8 ;
>    unsigned int type : 4 ;
>    unsigned int s : 1 ;
>    unsigned int dpl : 2 ;
>    unsigned int p : 1 ;
>    unsigned int limit : 4 ;
>    unsigned int avl : 1 ;
>    unsigned int l : 1 ;
>    unsigned int d : 1 ;
>    unsigned int g : 1 ;
>    unsigned int base2 : 8 ;
> };
> #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
> union __anonunion____missing_field_name_22 {
>    struct __anonstruct____missing_field_name_23 __annonCompField8 ;
>    struct __anonstruct____missing_field_name_24 __annonCompField9 ;
293c307,323
< #line 88 "include/linux/personality.h"
---
> #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
> struct desc_struct {
>    union __anonunion____missing_field_name_22 __annonCompField10 ;
> } __attribute__((__packed__)) ;
> #line 46 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
> struct thread_struct;
> #line 52
> struct cpumask;
> #line 321
> struct raw_spinlock;
> #line 13 "include/linux/cpumask.h"
> struct cpumask {
>    unsigned long bits[((4096UL + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
> };
> #line 13 "include/linux/cpumask.h"
> typedef struct cpumask cpumask_t;
> #line 91 "include/linux/personality.h"
295c325
< #line 88 "include/linux/personality.h"
---
> #line 91 "include/linux/personality.h"
310c340
< #line 144 "include/asm/processor.h"
---
> #line 151 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
312c342
< #line 285 "include/asm/processor.h"
---
> #line 286 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
324,325c354,355
< #line 301 "include/asm/processor.h"
< struct __anonstruct____missing_field_name_26 {
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct____missing_field_name_32 {
329,330c359,360
< #line 301 "include/asm/processor.h"
< struct __anonstruct____missing_field_name_27 {
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct____missing_field_name_33 {
336,339c366,369
< #line 301 "include/asm/processor.h"
< union __anonunion____missing_field_name_25 {
<    struct __anonstruct____missing_field_name_26 __annonCompField7 ;
<    struct __anonstruct____missing_field_name_27 __annonCompField8 ;
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> union __anonunion____missing_field_name_31 {
>    struct __anonstruct____missing_field_name_32 __annonCompField13 ;
>    struct __anonstruct____missing_field_name_33 __annonCompField14 ;
341,342c371,372
< #line 301 "include/asm/processor.h"
< union __anonunion____missing_field_name_28 {
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> union __anonunion____missing_field_name_34 {
346c376
< #line 301 "include/asm/processor.h"
---
> #line 302 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
352c382
<    union __anonunion____missing_field_name_25 __annonCompField9 ;
---
>    union __anonunion____missing_field_name_31 __annonCompField15 ;
358c388
<    union __anonunion____missing_field_name_28 __annonCompField10 ;
---
>    union __anonunion____missing_field_name_34 __annonCompField16 ;
360c390
< #line 336 "include/asm/processor.h"
---
> #line 337 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
376c406
<    struct info *info ;
---
>    struct math_emu_info *info ;
379c409,413
< #line 356 "include/asm/processor.h"
---
> #line 357 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct ymmh_struct {
>    u32 ymmh_space[64] ;
> };
> #line 362 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
385c419
< #line 362 "include/asm/processor.h"
---
> #line 368 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
388a423
>    struct ymmh_struct ymmh ;
390c425
< #line 368 "include/asm/processor.h"
---
> #line 375 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
397c432
< #line 382
---
> #line 423
399c434,436
< #line 387 "include/asm/processor.h"
---
> #line 425
> struct ds_context;
> #line 425 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
409d445
<    unsigned long ip ;
427d462
<    unsigned int bts_ovfl_signal ;
429,430c464,465
< #line 624 "include/asm/processor.h"
< struct __anonstruct_mm_segment_t_29 {
---
> #line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct_mm_segment_t_36 {
433,435c468,472
< #line 624 "include/asm/processor.h"
< typedef struct __anonstruct_mm_segment_t_29 mm_segment_t;
< #line 24 "include/asm/thread_info.h"
---
> #line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> typedef struct __anonstruct_mm_segment_t_36 mm_segment_t;
> #line 23 "include/asm-generic/atomic-long.h"
> typedef atomic64_t atomic_long_t;
> #line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
439c476
<    unsigned long flags ;
---
>    __u32 flags ;
445a483
>    int uaccess_err ;
463,465c501,511
< #line 95 "include/linux/capability.h"
< struct kernel_cap_struct {
<    __u32 cap[2] ;
---
> #line 10 "include/linux/irqreturn.h"
> enum irqreturn {
>     IRQ_NONE = 0,
>     IRQ_HANDLED = 1,
>     IRQ_WAKE_THREAD = 2
> } ;
> #line 16 "include/linux/irqreturn.h"
> typedef enum irqreturn irqreturn_t;
> #line 366 "include/linux/lockdep.h"
> struct lock_class_key {
> 
467,469c513,527
< #line 95 "include/linux/capability.h"
< typedef struct kernel_cap_struct kernel_cap_t;
< #line 8 "include/asm/spinlock_types.h"
---
> #line 18 "include/linux/ioport.h"
> struct resource {
>    resource_size_t start ;
>    resource_size_t end ;
>    char const   *name ;
>    unsigned long flags ;
>    struct resource *parent ;
>    struct resource *sibling ;
>    struct resource *child ;
> };
> #line 26
> struct pci_dev;
> #line 167
> struct device;
> #line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
473c531
< #line 8 "include/asm/spinlock_types.h"
---
> #line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
475,476c533,534
< #line 14 "include/asm/spinlock_types.h"
< struct __anonstruct_raw_rwlock_t_31 {
---
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> struct __anonstruct_raw_rwlock_t_56 {
479,484c537,538
< #line 14 "include/asm/spinlock_types.h"
< typedef struct __anonstruct_raw_rwlock_t_31 raw_rwlock_t;
< #line 349 "include/linux/lockdep.h"
< struct lock_class_key {
< 
< };
---
> #line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
> typedef struct __anonstruct_raw_rwlock_t_56 raw_rwlock_t;
486c540
< struct __anonstruct_spinlock_t_32 {
---
> struct __anonstruct_spinlock_t_57 {
493c547
< typedef struct __anonstruct_spinlock_t_32 spinlock_t;
---
> typedef struct __anonstruct_spinlock_t_57 spinlock_t;
495c549
< struct __anonstruct_rwlock_t_33 {
---
> struct __anonstruct_rwlock_t_58 {
502,516c556
< typedef struct __anonstruct_rwlock_t_33 rwlock_t;
< #line 19 "include/asm/atomic_64.h"
< struct __anonstruct_atomic_t_34 {
<    int counter ;
< };
< #line 19 "include/asm/atomic_64.h"
< typedef struct __anonstruct_atomic_t_34 atomic_t;
< #line 196 "include/asm/atomic_64.h"
< struct __anonstruct_atomic64_t_35 {
<    long counter ;
< };
< #line 196 "include/asm/atomic_64.h"
< typedef struct __anonstruct_atomic64_t_35 atomic64_t;
< #line 23 "include/asm-generic/atomic.h"
< typedef atomic64_t atomic_long_t;
---
> typedef struct __anonstruct_rwlock_t_58 rwlock_t;
518c558
< struct __anonstruct_seqlock_t_36 {
---
> struct __anonstruct_seqlock_t_59 {
523c563
< typedef struct __anonstruct_seqlock_t_36 seqlock_t;
---
> typedef struct __anonstruct_seqlock_t_59 seqlock_t;
526c566
<    time_t tv_sec ;
---
>    __kernel_time_t tv_sec ;
531,546c571,572
<    time_t tv_sec ;
<    suseconds_t tv_usec ;
< };
< #line 100 "include/linux/rbtree.h"
< struct rb_node {
<    unsigned long rb_parent_color ;
<    struct rb_node *rb_right ;
<    struct rb_node *rb_left ;
< } __attribute__((__aligned__(sizeof(long )))) ;
< #line 110 "include/linux/rbtree.h"
< struct rb_root {
<    struct rb_node *rb_node ;
< };
< #line 92 "include/linux/nodemask.h"
< struct __anonstruct_nodemask_t_37 {
<    unsigned long bits[(((unsigned long )(1 << 6) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
---
>    __kernel_time_t tv_sec ;
>    __kernel_suseconds_t tv_usec ;
548,556c574,576
< #line 92 "include/linux/nodemask.h"
< typedef struct __anonstruct_nodemask_t_37 nodemask_t;
< #line 14 "include/linux/prio_tree.h"
< struct prio_tree_node;
< #line 14 "include/linux/prio_tree.h"
< struct raw_prio_tree_node {
<    struct prio_tree_node *left ;
<    struct prio_tree_node *right ;
<    struct prio_tree_node *parent ;
---
> #line 46 "include/linux/ktime.h"
> union ktime {
>    s64 tv64 ;
558,564c578,591
< #line 20 "include/linux/prio_tree.h"
< struct prio_tree_node {
<    struct prio_tree_node *left ;
<    struct prio_tree_node *right ;
<    struct prio_tree_node *parent ;
<    unsigned long start ;
<    unsigned long last ;
---
> #line 59 "include/linux/ktime.h"
> typedef union ktime ktime_t;
> #line 10 "include/linux/timer.h"
> struct tvec_base;
> #line 12 "include/linux/timer.h"
> struct timer_list {
>    struct list_head entry ;
>    unsigned long expires ;
>    void (*function)(unsigned long  ) ;
>    unsigned long data ;
>    struct tvec_base *base ;
>    void *start_site ;
>    char start_comm[16] ;
>    int start_pid ;
566,570c593,603
< #line 28 "include/linux/prio_tree.h"
< struct prio_tree_root {
<    struct prio_tree_node *prio_tree_node ;
<    unsigned short index_bits ;
<    unsigned short raw ;
---
> #line 240
> struct hrtimer;
> #line 241
> enum hrtimer_restart;
> #line 16 "include/linux/workqueue.h"
> struct work_struct;
> #line 25 "include/linux/workqueue.h"
> struct work_struct {
>    atomic_long_t data ;
>    struct list_head entry ;
>    void (*func)(struct work_struct *work ) ;
572,578c605,608
< #line 17 "include/linux/rwsem.h"
< struct rw_semaphore;
< #line 31 "include/linux/rwsem-spinlock.h"
< struct rw_semaphore {
<    __s32 activity ;
<    spinlock_t wait_lock ;
<    struct list_head wait_list ;
---
> #line 39 "include/linux/workqueue.h"
> struct delayed_work {
>    struct work_struct work ;
>    struct timer_list timer ;
588c618
<    int (*func)(wait_queue_t *wait , unsigned int mode , int sync , void *key ) ;
---
>    int (*func)(wait_queue_t *wait , unsigned int mode , int flags , void *key ) ;
598,783c628
< #line 25 "include/linux/completion.h"
< struct completion {
<    unsigned int done ;
<    wait_queue_head_t wait ;
< };
< #line 48 "include/linux/mutex.h"
< struct mutex {
<    atomic_t count ;
<    spinlock_t wait_lock ;
<    struct list_head wait_list ;
<    struct thread_info *owner ;
<    char const   *name ;
<    void *magic ;
< };
< #line 67 "include/linux/mutex.h"
< struct mutex_waiter {
<    struct list_head list ;
<    struct task_struct *task ;
<    struct mutex *lock ;
<    void *magic ;
< };
< #line 11 "include/asm/mmu.h"
< struct __anonstruct_mm_context_t_38 {
<    void *ldt ;
<    int size ;
<    struct mutex lock ;
<    void *vdso ;
< };
< #line 11 "include/asm/mmu.h"
< typedef struct __anonstruct_mm_context_t_38 mm_context_t;
< #line 22 "include/linux/mm_types.h"
< struct address_space;
< #line 25 "include/linux/mm_types.h"
< typedef atomic_long_t mm_counter_t;
< #line 37 "include/linux/mm_types.h"
< struct __anonstruct____missing_field_name_40 {
<    u16 inuse ;
<    u16 objects ;
< };
< #line 37 "include/linux/mm_types.h"
< union __anonunion____missing_field_name_39 {
<    atomic_t _mapcount ;
<    struct __anonstruct____missing_field_name_40 __annonCompField11 ;
< };
< #line 37 "include/linux/mm_types.h"
< struct __anonstruct____missing_field_name_42 {
<    unsigned long private ;
<    struct address_space *mapping ;
< };
< #line 37 "include/linux/mm_types.h"
< union __anonunion____missing_field_name_41 {
<    struct __anonstruct____missing_field_name_42 __annonCompField13 ;
<    spinlock_t ptl ;
<    struct kmem_cache *slab ;
<    struct page *first_page ;
< };
< #line 37 "include/linux/mm_types.h"
< union __anonunion____missing_field_name_43 {
<    unsigned long index ;
<    void *freelist ;
< };
< #line 37 "include/linux/mm_types.h"
< struct page {
<    unsigned long flags ;
<    atomic_t _count ;
<    union __anonunion____missing_field_name_39 __annonCompField12 ;
<    union __anonunion____missing_field_name_41 __annonCompField14 ;
<    union __anonunion____missing_field_name_43 __annonCompField15 ;
<    struct list_head lru ;
<    unsigned long page_cgroup ;
< };
< #line 106 "include/linux/mm_types.h"
< struct __anonstruct_vm_set_45 {
<    struct list_head list ;
<    void *parent ;
<    struct vm_area_struct *head ;
< };
< #line 106 "include/linux/mm_types.h"
< union __anonunion_shared_44 {
<    struct __anonstruct_vm_set_45 vm_set ;
<    struct raw_prio_tree_node prio_tree_node ;
< };
< #line 106
< struct anon_vma;
< #line 106
< struct vm_operations_struct;
< #line 106
< struct file;
< #line 106
< struct mempolicy;
< #line 106 "include/linux/mm_types.h"
< struct vm_area_struct {
<    struct mm_struct *vm_mm ;
<    unsigned long vm_start ;
<    unsigned long vm_end ;
<    struct vm_area_struct *vm_next ;
<    pgprot_t vm_page_prot ;
<    unsigned long vm_flags ;
<    struct rb_node vm_rb ;
<    union __anonunion_shared_44 shared ;
<    struct list_head anon_vma_node ;
<    struct anon_vma *anon_vma ;
<    struct vm_operations_struct *vm_ops ;
<    unsigned long vm_pgoff ;
<    struct file *vm_file ;
<    void *vm_private_data ;
<    unsigned long vm_truncate_count ;
<    struct mempolicy *vm_policy ;
< };
< #line 163 "include/linux/mm_types.h"
< struct core_thread {
<    struct task_struct *task ;
<    struct core_thread *next ;
< };
< #line 168 "include/linux/mm_types.h"
< struct core_state {
<    atomic_t nr_threads ;
<    struct core_thread dumper ;
<    struct completion startup ;
< };
< #line 174
< struct kioctx;
< #line 174
< struct mmu_notifier_mm;
< #line 174 "include/linux/mm_types.h"
< struct mm_struct {
<    struct vm_area_struct *mmap ;
<    struct rb_root mm_rb ;
<    struct vm_area_struct *mmap_cache ;
<    unsigned long (*get_unmapped_area)(struct file *filp , unsigned long addr , unsigned long len ,
<                                       unsigned long pgoff , unsigned long flags ) ;
<    void (*unmap_area)(struct mm_struct *mm , unsigned long addr ) ;
<    unsigned long mmap_base ;
<    unsigned long task_size ;
<    unsigned long cached_hole_size ;
<    unsigned long free_area_cache ;
<    pgd_t *pgd ;
<    atomic_t mm_users ;
<    atomic_t mm_count ;
<    int map_count ;
<    struct rw_semaphore mmap_sem ;
<    spinlock_t page_table_lock ;
<    struct list_head mmlist ;
<    mm_counter_t _file_rss ;
<    mm_counter_t _anon_rss ;
<    unsigned long hiwater_rss ;
<    unsigned long hiwater_vm ;
<    unsigned long total_vm ;
<    unsigned long locked_vm ;
<    unsigned long shared_vm ;
<    unsigned long exec_vm ;
<    unsigned long stack_vm ;
<    unsigned long reserved_vm ;
<    unsigned long def_flags ;
<    unsigned long nr_ptes ;
<    unsigned long start_code ;
<    unsigned long end_code ;
<    unsigned long start_data ;
<    unsigned long end_data ;
<    unsigned long start_brk ;
<    unsigned long brk ;
<    unsigned long start_stack ;
<    unsigned long arg_start ;
<    unsigned long arg_end ;
<    unsigned long env_start ;
<    unsigned long env_end ;
<    unsigned long saved_auxv[2 * ((2 + 18) + 1)] ;
<    cpumask_t cpu_vm_mask ;
<    mm_context_t context ;
<    unsigned int faultstamp ;
<    unsigned int token_priority ;
<    unsigned int last_interval ;
<    unsigned long flags ;
<    struct core_state *core_state ;
<    rwlock_t ioctx_list_lock ;
<    struct kioctx *ioctx_list ;
<    struct task_struct *owner ;
<    struct file *exe_file ;
<    unsigned long num_exe_file_vmas ;
<    struct mmu_notifier_mm *mmu_notifier_mm ;
< };
< #line 7 "include/asm-generic/cputime.h"
< typedef unsigned long cputime_t;
< #line 37 "include/linux/pm.h"
< struct device;
< #line 39 "include/linux/pm.h"
---
> #line 43 "include/linux/pm.h"
787c632
< #line 39 "include/linux/pm.h"
---
> #line 43 "include/linux/pm.h"
789,790c634,635
< #line 145 "include/linux/pm.h"
< struct pm_ops {
---
> #line 196 "include/linux/pm.h"
> struct dev_pm_ops {
799,802d643
< };
< #line 203 "include/linux/pm.h"
< struct pm_ext_ops {
<    struct pm_ops base ;
808a650,652
>    int (*runtime_suspend)(struct device *dev ) ;
>    int (*runtime_resume)(struct device *dev ) ;
>    int (*runtime_idle)(struct device *dev ) ;
810c654
< #line 334
---
> #line 351
820c664,678
< #line 344 "include/linux/pm.h"
---
> #line 384
> enum rpm_status {
>     RPM_ACTIVE = 0,
>     RPM_RESUMING = 1,
>     RPM_SUSPENDED = 2,
>     RPM_SUSPENDING = 3
> } ;
> #line 403
> enum rpm_request {
>     RPM_REQ_NONE = 0,
>     RPM_REQ_IDLE = 1,
>     RPM_REQ_SUSPEND = 2,
>     RPM_REQ_RESUME = 3
> } ;
> #line 410 "include/linux/pm.h"
826a685,703
>    struct timer_list suspend_timer ;
>    unsigned long timer_expires ;
>    struct work_struct work ;
>    wait_queue_head_t wait_queue ;
>    spinlock_t lock ;
>    atomic_t usage_count ;
>    atomic_t child_count ;
>    unsigned int disable_depth : 3 ;
>    unsigned int ignore_children : 1 ;
>    unsigned int idle_notification : 1 ;
>    unsigned int request_pending : 1 ;
>    unsigned int deferred_resume : 1 ;
>    enum rpm_request request ;
>    enum rpm_status runtime_status ;
>    int runtime_error ;
> };
> #line 98 "include/linux/nodemask.h"
> struct __anonstruct_nodemask_t_106 {
>    unsigned long bits[(((unsigned long )(1 << 9) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
828,836c705,714
< #line 21 "include/linux/kref.h"
< struct kref {
<    atomic_t refcount ;
< };
< #line 237 "include/asm/topology.h"
< struct pci_bus;
< #line 46 "include/linux/ktime.h"
< union ktime {
<    s64 tv64 ;
---
> #line 98 "include/linux/nodemask.h"
> typedef struct __anonstruct_nodemask_t_106 nodemask_t;
> #line 48 "include/linux/mutex.h"
> struct mutex {
>    atomic_t count ;
>    spinlock_t wait_lock ;
>    struct list_head wait_list ;
>    struct thread_info *owner ;
>    char const   *name ;
>    void *magic ;
838,851c716,720
< #line 59 "include/linux/ktime.h"
< typedef union ktime ktime_t;
< #line 9 "include/linux/timer.h"
< struct tvec_base;
< #line 11 "include/linux/timer.h"
< struct timer_list {
<    struct list_head entry ;
<    unsigned long expires ;
<    void (*function)(unsigned long  ) ;
<    unsigned long data ;
<    struct tvec_base *base ;
<    void *start_site ;
<    char start_comm[16] ;
<    int start_pid ;
---
> #line 69 "include/linux/mutex.h"
> struct mutex_waiter {
>    struct list_head list ;
>    struct task_struct *task ;
>    void *magic ;
853,863c722,727
< #line 181
< struct hrtimer;
< #line 182
< enum hrtimer_restart;
< #line 16 "include/linux/workqueue.h"
< struct work_struct;
< #line 25 "include/linux/workqueue.h"
< struct work_struct {
<    atomic_long_t data ;
<    struct list_head entry ;
<    void (*func)(struct work_struct *work ) ;
---
> #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
> struct __anonstruct_mm_context_t_107 {
>    void *ldt ;
>    int size ;
>    struct mutex lock ;
>    void *vdso ;
865,868c729,737
< #line 39 "include/linux/workqueue.h"
< struct delayed_work {
<    struct work_struct work ;
<    struct timer_list timer ;
---
> #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
> typedef struct __anonstruct_mm_context_t_107 mm_context_t;
> #line 17 "include/linux/rwsem.h"
> struct rw_semaphore;
> #line 31 "include/linux/rwsem-spinlock.h"
> struct rw_semaphore {
>    __s32 activity ;
>    spinlock_t wait_lock ;
>    struct list_head wait_list ;
869a739,748
> #line 757 "include/linux/mmzone.h"
> struct ctl_table;
> #line 196 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/topology.h"
> struct pci_bus;
> #line 10 "include/linux/gfp.h"
> struct vm_area_struct;
> #line 83 "include/linux/irq.h"
> struct proc_dir_entry;
> #line 175
> struct irqaction;
872c751
< #line 27 "include/linux/sysfs.h"
---
> #line 28 "include/linux/sysfs.h"
878c757
< #line 33 "include/linux/sysfs.h"
---
> #line 34 "include/linux/sysfs.h"
884c763
< #line 64 "include/linux/sysfs.h"
---
> #line 65 "include/linux/sysfs.h"
895c774
< #line 76 "include/linux/sysfs.h"
---
> #line 77 "include/linux/sysfs.h"
899a779,784
> #line 82
> struct sysfs_dirent;
> #line 20 "include/linux/kref.h"
> struct kref {
>    atomic_t refcount ;
> };
904,905d788
< #line 59
< struct sysfs_dirent;
918a802
>    unsigned int uevent_suppress : 1 ;
920c804
< #line 104 "include/linux/kobject.h"
---
> #line 107 "include/linux/kobject.h"
926c810
< #line 110 "include/linux/kobject.h"
---
> #line 113 "include/linux/kobject.h"
933c817
< #line 117 "include/linux/kobject.h"
---
> #line 120 "include/linux/kobject.h"
939c823
< #line 151 "include/linux/kobject.h"
---
> #line 154 "include/linux/kobject.h"
946c830,850
< #line 14 "include/linux/slub_def.h"
---
> #line 25 "include/linux/completion.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
> };
> #line 49 "include/linux/rcupdate.h"
> struct rcu_head {
>    struct rcu_head *next ;
>    void (*func)(struct rcu_head *head ) ;
> };
> #line 21 "include/linux/tracepoint.h"
> struct tracepoint;
> #line 23 "include/linux/tracepoint.h"
> struct tracepoint {
>    char const   *name ;
>    int state ;
>    void (*regfunc)(void) ;
>    void (*unregfunc)(void) ;
>    void **funcs ;
> } __attribute__((__aligned__(32))) ;
> #line 16 "include/linux/slub_def.h"
968c872
< #line 35 "include/linux/slub_def.h"
---
> #line 37 "include/linux/slub_def.h"
977c881
< #line 46 "include/linux/slub_def.h"
---
> #line 48 "include/linux/slub_def.h"
981d884
<    unsigned long min_partial ;
987c890
< #line 63 "include/linux/slub_def.h"
---
> #line 64 "include/linux/slub_def.h"
991c894
< #line 70 "include/linux/slub_def.h"
---
> #line 71 "include/linux/slub_def.h"
1005a909
>    unsigned long min_partial ;
1010,1164c914,915
<    struct kmem_cache_node *node[1 << 6] ;
<    struct kmem_cache_cpu *cpu_slab[8] ;
< };
< #line 50 "include/linux/rcupdate.h"
< struct rcu_head {
<    struct rcu_head *next ;
<    void (*func)(struct rcu_head *head ) ;
< };
< #line 117 "include/linux/sem.h"
< struct sem_undo_list;
< #line 130 "include/linux/sem.h"
< struct sem_undo_list {
<    atomic_t refcnt ;
<    spinlock_t lock ;
<    struct list_head list_proc ;
< };
< #line 136 "include/linux/sem.h"
< struct sysv_sem {
<    struct sem_undo_list *undo_list ;
< };
< #line 10 "include/asm/signal.h"
< struct siginfo;
< #line 30 "include/asm/signal.h"
< struct __anonstruct_sigset_t_98 {
<    unsigned long sig[64 / 64] ;
< };
< #line 30 "include/asm/signal.h"
< typedef struct __anonstruct_sigset_t_98 sigset_t;
< #line 17 "include/asm-generic/signal.h"
< typedef void __signalfn_t(int  );
< #line 18 "include/asm-generic/signal.h"
< typedef __signalfn_t *__sighandler_t;
< #line 20 "include/asm-generic/signal.h"
< typedef void __restorefn_t(void);
< #line 21 "include/asm-generic/signal.h"
< typedef __restorefn_t *__sigrestore_t;
< #line 165 "include/asm/signal.h"
< struct sigaction {
<    __sighandler_t sa_handler ;
<    unsigned long sa_flags ;
<    __sigrestore_t sa_restorer ;
<    sigset_t sa_mask ;
< };
< #line 172 "include/asm/signal.h"
< struct k_sigaction {
<    struct sigaction sa ;
< };
< #line 7 "include/asm-generic/siginfo.h"
< union sigval {
<    int sival_int ;
<    void *sival_ptr ;
< };
< #line 7 "include/asm-generic/siginfo.h"
< typedef union sigval sigval_t;
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__kill_100 {
<    pid_t _pid ;
<    uid_t _uid ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__timer_101 {
<    timer_t _tid ;
<    int _overrun ;
<    char _pad[sizeof(uid_t ) - sizeof(int )] ;
<    sigval_t _sigval ;
<    int _sys_private ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__rt_102 {
<    pid_t _pid ;
<    uid_t _uid ;
<    sigval_t _sigval ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__sigchld_103 {
<    pid_t _pid ;
<    uid_t _uid ;
<    int _status ;
<    clock_t _utime ;
<    clock_t _stime ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__sigfault_104 {
<    void *_addr ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct __anonstruct__sigpoll_105 {
<    long _band ;
<    int _fd ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< union __anonunion__sifields_99 {
<    int _pad[(128UL - 4UL * sizeof(int )) / sizeof(int )] ;
<    struct __anonstruct__kill_100 _kill ;
<    struct __anonstruct__timer_101 _timer ;
<    struct __anonstruct__rt_102 _rt ;
<    struct __anonstruct__sigchld_103 _sigchld ;
<    struct __anonstruct__sigfault_104 _sigfault ;
<    struct __anonstruct__sigpoll_105 _sigpoll ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< struct siginfo {
<    int si_signo ;
<    int si_errno ;
<    int si_code ;
<    union __anonunion__sifields_99 _sifields ;
< };
< #line 40 "include/asm-generic/siginfo.h"
< typedef struct siginfo siginfo_t;
< #line 14 "include/linux/signal.h"
< struct user_struct;
< #line 24 "include/linux/signal.h"
< struct sigpending {
<    struct list_head list ;
<    sigset_t signal ;
< };
< #line 4 "include/linux/path.h"
< struct dentry;
< #line 5
< struct vfsmount;
< #line 7 "include/linux/path.h"
< struct path {
<    struct vfsmount *mnt ;
<    struct dentry *dentry ;
< };
< #line 6 "include/linux/fs_struct.h"
< struct fs_struct {
<    atomic_t count ;
<    rwlock_t lock ;
<    int umask ;
<    struct path root ;
<    struct path pwd ;
< };
< #line 6 "include/linux/pid.h"
< enum pid_type {
<     PIDTYPE_PID = 0,
<     PIDTYPE_PGID = 1,
<     PIDTYPE_SID = 2,
<     PIDTYPE_MAX = 3
< } ;
< #line 50
< struct pid_namespace;
< #line 50 "include/linux/pid.h"
< struct upid {
<    int nr ;
<    struct pid_namespace *ns ;
<    struct hlist_node pid_chain ;
< };
< #line 57 "include/linux/pid.h"
< struct pid {
<    atomic_t count ;
<    unsigned int level ;
<    struct hlist_head tasks[PIDTYPE_MAX] ;
<    struct rcu_head rcu ;
<    struct upid numbers[1] ;
---
>    struct kmem_cache_node *node[1 << 9] ;
>    struct kmem_cache_cpu *cpu_slab[4096] ;
1166,1195c917,925
< #line 69 "include/linux/pid.h"
< struct pid_link {
<    struct hlist_node node ;
<    struct pid *pid ;
< };
< #line 97 "include/linux/proportions.h"
< struct prop_local_single {
<    unsigned long events ;
<    unsigned long period ;
<    int shift ;
<    spinlock_t lock ;
< };
< #line 10 "include/linux/seccomp.h"
< struct __anonstruct_seccomp_t_108 {
<    int mode ;
< };
< #line 10 "include/linux/seccomp.h"
< typedef struct __anonstruct_seccomp_t_108 seccomp_t;
< #line 80 "include/linux/plist.h"
< struct plist_head {
<    struct list_head prio_list ;
<    struct list_head node_list ;
<    spinlock_t *lock ;
< };
< #line 38 "include/linux/rtmutex.h"
< struct rt_mutex_waiter;
< #line 43 "include/linux/resource.h"
< struct rlimit {
<    unsigned long rlim_cur ;
<    unsigned long rlim_max ;
---
> #line 100 "include/linux/rbtree.h"
> struct rb_node {
>    unsigned long rb_parent_color ;
>    struct rb_node *rb_right ;
>    struct rb_node *rb_left ;
> } __attribute__((__aligned__(sizeof(long )))) ;
> #line 110 "include/linux/rbtree.h"
> struct rb_root {
>    struct rb_node *rb_node ;
1197c927
< #line 24 "include/linux/hrtimer.h"
---
> #line 27 "include/linux/hrtimer.h"
1199c929
< #line 25
---
> #line 28
1201c931
< #line 38
---
> #line 44
1206,1214c936
< #line 60
< enum hrtimer_cb_mode {
<     HRTIMER_CB_SOFTIRQ = 0,
<     HRTIMER_CB_IRQSAFE = 1,
<     HRTIMER_CB_IRQSAFE_NO_RESTART = 2,
<     HRTIMER_CB_IRQSAFE_PERCPU = 3,
<     HRTIMER_CB_IRQSAFE_UNLOCKED = 4
< } ;
< #line 122 "include/linux/hrtimer.h"
---
> #line 103 "include/linux/hrtimer.h"
1217c939,940
<    ktime_t expires ;
---
>    ktime_t _expires ;
>    ktime_t _softexpires ;
1221,1222c944
<    enum hrtimer_cb_mode cb_mode ;
<    struct list_head cb_entry ;
---
>    int start_pid ;
1225d946
<    int start_pid ;
1227c948
< #line 163 "include/linux/hrtimer.h"
---
> #line 141 "include/linux/hrtimer.h"
1235d955
<    ktime_t (*get_softirq_time)(void) ;
1238d957
<    int (*reprogram)(struct hrtimer *t , struct hrtimer_clock_base *b , ktime_t n ) ;
1240c959
< #line 199 "include/linux/hrtimer.h"
---
> #line 170 "include/linux/hrtimer.h"
1244d962
<    struct list_head cb_pending ;
1249,1827c967,978
< #line 11 "include/linux/task_io_accounting.h"
< struct task_io_accounting {
<    u64 rchar ;
<    u64 wchar ;
<    u64 syscr ;
<    u64 syscw ;
<    u64 read_bytes ;
<    u64 write_bytes ;
<    u64 cancelled_write_bytes ;
< };
< #line 17 "include/linux/latencytop.h"
< struct latency_record {
<    unsigned long backtrace[12] ;
<    unsigned int count ;
<    unsigned long time ;
<    unsigned long max ;
< };
< #line 96 "include/linux/sched.h"
< struct futex_pi_state;
< #line 97
< struct robust_list_head;
< #line 98
< struct bio;
< #line 139
< struct seq_file;
< #line 140
< struct cfs_rq;
< #line 141
< struct task_group;
< #line 335
< struct nsproxy;
< #line 57 "include/linux/aio_abi.h"
< struct io_event {
<    __u64 data ;
<    __u64 obj ;
<    __s64 res ;
<    __s64 res2 ;
< };
< #line 16 "include/linux/uio.h"
< struct iovec {
<    void *iov_base ;
<    __kernel_size_t iov_len ;
< };
< #line 86 "include/linux/aio.h"
< union __anonunion_ki_obj_110 {
<    void *user ;
<    struct task_struct *tsk ;
< };
< #line 86 "include/linux/aio.h"
< struct kiocb {
<    struct list_head ki_run_list ;
<    unsigned long ki_flags ;
<    int ki_users ;
<    unsigned int ki_key ;
<    struct file *ki_filp ;
<    struct kioctx *ki_ctx ;
<    int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
<    ssize_t (*ki_retry)(struct kiocb * ) ;
<    void (*ki_dtor)(struct kiocb * ) ;
<    union __anonunion_ki_obj_110 ki_obj ;
<    __u64 ki_user_data ;
<    wait_queue_t ki_wait ;
<    loff_t ki_pos ;
<    void *private ;
<    unsigned short ki_opcode ;
<    size_t ki_nbytes ;
<    char *ki_buf ;
<    size_t ki_left ;
<    struct iovec ki_inline_vec ;
<    struct iovec *ki_iovec ;
<    unsigned long ki_nr_segs ;
<    unsigned long ki_cur_seg ;
<    struct list_head ki_list ;
<    struct file *ki_eventfd ;
< };
< #line 166 "include/linux/aio.h"
< struct aio_ring_info {
<    unsigned long mmap_base ;
<    unsigned long mmap_size ;
<    struct page **ring_pages ;
<    spinlock_t ring_lock ;
<    long nr_pages ;
<    unsigned int nr ;
<    unsigned int tail ;
<    struct page *internal_pages[8] ;
< };
< #line 179 "include/linux/aio.h"
< struct kioctx {
<    atomic_t users ;
<    int dead ;
<    struct mm_struct *mm ;
<    unsigned long user_id ;
<    struct kioctx *next ;
<    wait_queue_head_t wait ;
<    spinlock_t ctx_lock ;
<    int reqs_active ;
<    struct list_head active_reqs ;
<    struct list_head run_list ;
<    unsigned int max_reqs ;
<    struct aio_ring_info ring_info ;
<    struct delayed_work wq ;
< };
< #line 413 "include/linux/sched.h"
< struct sighand_struct {
<    atomic_t count ;
<    struct k_sigaction action[64] ;
<    spinlock_t siglock ;
<    wait_queue_head_t signalfd_wqh ;
< };
< #line 420 "include/linux/sched.h"
< struct pacct_struct {
<    int ac_flag ;
<    long ac_exitcode ;
<    unsigned long ac_mem ;
<    cputime_t ac_utime ;
<    cputime_t ac_stime ;
<    unsigned long ac_minflt ;
<    unsigned long ac_majflt ;
< };
< #line 435 "include/linux/sched.h"
< union __anonunion____missing_field_name_111 {
<    pid_t pgrp  __attribute__((__deprecated__)) ;
<    pid_t __pgrp ;
< };
< #line 435 "include/linux/sched.h"
< union __anonunion____missing_field_name_112 {
<    pid_t session  __attribute__((__deprecated__)) ;
<    pid_t __session ;
< };
< #line 435
< struct tty_struct;
< #line 435
< struct key;
< #line 435
< struct taskstats;
< #line 435
< struct tty_audit_buf;
< #line 435 "include/linux/sched.h"
< struct signal_struct {
<    atomic_t count ;
<    atomic_t live ;
<    wait_queue_head_t wait_chldexit ;
<    struct task_struct *curr_target ;
<    struct sigpending shared_pending ;
<    int group_exit_code ;
<    int notify_count ;
<    struct task_struct *group_exit_task ;
<    int group_stop_count ;
<    unsigned int flags ;
<    struct list_head posix_timers ;
<    struct hrtimer real_timer ;
<    struct pid *leader_pid ;
<    ktime_t it_real_incr ;
<    cputime_t it_prof_expires ;
<    cputime_t it_virt_expires ;
<    cputime_t it_prof_incr ;
<    cputime_t it_virt_incr ;
<    union __anonunion____missing_field_name_111 __annonCompField16 ;
<    struct pid *tty_old_pgrp ;
<    union __anonunion____missing_field_name_112 __annonCompField17 ;
<    int leader ;
<    struct tty_struct *tty ;
<    cputime_t utime ;
<    cputime_t stime ;
<    cputime_t cutime ;
<    cputime_t cstime ;
<    cputime_t gtime ;
<    cputime_t cgtime ;
<    unsigned long nvcsw ;
<    unsigned long nivcsw ;
<    unsigned long cnvcsw ;
<    unsigned long cnivcsw ;
<    unsigned long min_flt ;
<    unsigned long maj_flt ;
<    unsigned long cmin_flt ;
<    unsigned long cmaj_flt ;
<    unsigned long inblock ;
<    unsigned long oublock ;
<    unsigned long cinblock ;
<    unsigned long coublock ;
<    struct task_io_accounting ioac ;
<    unsigned long long sum_sched_runtime ;
<    struct rlimit rlim[16] ;
<    struct list_head cpu_timers[3] ;
<    struct key *session_keyring ;
<    struct key *process_keyring ;
<    struct pacct_struct pacct ;
<    struct taskstats *stats ;
<    unsigned int audit_tty ;
<    struct tty_audit_buf *tty_audit_buf ;
< };
< #line 581 "include/linux/sched.h"
< struct user_struct {
<    atomic_t __count ;
<    atomic_t processes ;
<    atomic_t files ;
<    atomic_t sigpending ;
<    atomic_t inotify_watches ;
<    atomic_t inotify_devs ;
<    unsigned long mq_bytes ;
<    unsigned long locked_shm ;
<    struct key *uid_keyring ;
<    struct key *session_keyring ;
<    struct hlist_node uidhash_node ;
<    uid_t uid ;
<    struct task_group *tg ;
<    struct kobject kobj ;
<    struct work_struct work ;
< };
< #line 621
< struct backing_dev_info;
< #line 622
< struct reclaim_state;
< #line 625 "include/linux/sched.h"
< struct sched_info {
<    unsigned long pcount ;
<    unsigned long long cpu_time ;
<    unsigned long long run_delay ;
<    unsigned long long last_arrival ;
<    unsigned long long last_queued ;
<    unsigned int bkl_count ;
< };
< #line 642
< struct file_operations;
< #line 646 "include/linux/sched.h"
< struct task_delay_info {
<    spinlock_t lock ;
<    unsigned int flags ;
<    struct timespec blkio_start ;
<    struct timespec blkio_end ;
<    u64 blkio_delay ;
<    u64 swapin_delay ;
<    u32 blkio_count ;
<    u32 swapin_count ;
<    struct timespec freepages_start ;
<    struct timespec freepages_end ;
<    u64 freepages_delay ;
<    u32 freepages_count ;
< };
< #line 691
< enum cpu_idle_type {
<     CPU_IDLE = 0,
<     CPU_NOT_IDLE = 1,
<     CPU_NEWLY_IDLE = 2,
<     CPU_MAX_IDLE_TYPES = 3
< } ;
< #line 735 "include/linux/sched.h"
< struct sched_group {
<    struct sched_group *next ;
<    cpumask_t cpumask ;
<    unsigned int __cpu_power ;
<    u32 reciprocal_cpu_power ;
< };
< #line 752
< enum sched_domain_level {
<     SD_LV_NONE = 0,
<     SD_LV_SIBLING = 1,
<     SD_LV_MC = 2,
<     SD_LV_CPU = 3,
<     SD_LV_NODE = 4,
<     SD_LV_ALLNODES = 5,
<     SD_LV_MAX = 6
< } ;
< #line 770 "include/linux/sched.h"
< struct sched_domain {
<    struct sched_domain *parent ;
<    struct sched_domain *child ;
<    struct sched_group *groups ;
<    cpumask_t span ;
<    unsigned long min_interval ;
<    unsigned long max_interval ;
<    unsigned int busy_factor ;
<    unsigned int imbalance_pct ;
<    unsigned int cache_nice_tries ;
<    unsigned int busy_idx ;
<    unsigned int idle_idx ;
<    unsigned int newidle_idx ;
<    unsigned int wake_idx ;
<    unsigned int forkexec_idx ;
<    int flags ;
<    enum sched_domain_level level ;
<    unsigned long last_balance ;
<    unsigned int balance_interval ;
<    unsigned int nr_balance_failed ;
<    u64 last_update ;
<    unsigned int lb_count[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_failed[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_balanced[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_imbalance[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_gained[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_hot_gained[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_nobusyg[CPU_MAX_IDLE_TYPES] ;
<    unsigned int lb_nobusyq[CPU_MAX_IDLE_TYPES] ;
<    unsigned int alb_count ;
<    unsigned int alb_failed ;
<    unsigned int alb_pushed ;
<    unsigned int sbe_count ;
<    unsigned int sbe_balanced ;
<    unsigned int sbe_pushed ;
<    unsigned int sbf_count ;
<    unsigned int sbf_balanced ;
<    unsigned int sbf_pushed ;
<    unsigned int ttwu_wake_remote ;
<    unsigned int ttwu_move_affine ;
<    unsigned int ttwu_move_balance ;
<    char *name ;
< };
< #line 847
< struct io_context;
< #line 850 "include/linux/sched.h"
< struct group_info {
<    int ngroups ;
<    atomic_t usage ;
<    gid_t small_block[32] ;
<    int nblocks ;
<    gid_t *blocks[0] ;
< };
< #line 887
< struct audit_context;
< #line 889
< struct pipe_inode_info;
< #line 892
< struct rq;
< #line 895 "include/linux/sched.h"
< struct sched_class {
<    struct sched_class  const  *next ;
<    void (*enqueue_task)(struct rq *rq , struct task_struct *p , int wakeup ) ;
<    void (*dequeue_task)(struct rq *rq , struct task_struct *p , int sleep ) ;
<    void (*yield_task)(struct rq *rq ) ;
<    int (*select_task_rq)(struct task_struct *p , int sync ) ;
<    void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int sync ) ;
<    struct task_struct *(*pick_next_task)(struct rq *rq ) ;
<    void (*put_prev_task)(struct rq *rq , struct task_struct *p ) ;
<    unsigned long (*load_balance)(struct rq *this_rq , int this_cpu , struct rq *busiest ,
<                                  unsigned long max_load_move , struct sched_domain *sd ,
<                                  enum cpu_idle_type idle , int *all_pinned , int *this_best_prio ) ;
<    int (*move_one_task)(struct rq *this_rq , int this_cpu , struct rq *busiest , struct sched_domain *sd ,
<                         enum cpu_idle_type idle ) ;
<    void (*pre_schedule)(struct rq *this_rq , struct task_struct *task ) ;
<    void (*post_schedule)(struct rq *this_rq ) ;
<    void (*task_wake_up)(struct rq *this_rq , struct task_struct *task ) ;
<    void (*set_curr_task)(struct rq *rq ) ;
<    void (*task_tick)(struct rq *rq , struct task_struct *p , int queued ) ;
<    void (*task_new)(struct rq *rq , struct task_struct *p ) ;
<    void (*set_cpus_allowed)(struct task_struct *p , cpumask_t const   *newmask ) ;
<    void (*rq_online)(struct rq *rq ) ;
<    void (*rq_offline)(struct rq *rq ) ;
<    void (*switched_from)(struct rq *this_rq , struct task_struct *task , int running ) ;
<    void (*switched_to)(struct rq *this_rq , struct task_struct *task , int running ) ;
<    void (*prio_changed)(struct rq *this_rq , struct task_struct *task , int oldprio ,
<                         int running ) ;
<    void (*moved_group)(struct task_struct *p ) ;
< };
< #line 943 "include/linux/sched.h"
< struct load_weight {
<    unsigned long weight ;
<    unsigned long inv_weight ;
< };
< #line 957 "include/linux/sched.h"
< struct sched_entity {
<    struct load_weight load ;
<    struct rb_node run_node ;
<    struct list_head group_node ;
<    unsigned int on_rq ;
<    u64 exec_start ;
<    u64 sum_exec_runtime ;
<    u64 vruntime ;
<    u64 prev_sum_exec_runtime ;
<    u64 last_wakeup ;
<    u64 avg_overlap ;
<    u64 wait_start ;
<    u64 wait_max ;
<    u64 wait_count ;
<    u64 wait_sum ;
<    u64 sleep_start ;
<    u64 sleep_max ;
<    s64 sum_sleep_runtime ;
<    u64 block_start ;
<    u64 block_max ;
<    u64 exec_max ;
<    u64 slice_max ;
<    u64 nr_migrations ;
<    u64 nr_migrations_cold ;
<    u64 nr_failed_migrations_affine ;
<    u64 nr_failed_migrations_running ;
<    u64 nr_failed_migrations_hot ;
<    u64 nr_forced_migrations ;
<    u64 nr_forced2_migrations ;
<    u64 nr_wakeups ;
<    u64 nr_wakeups_sync ;
<    u64 nr_wakeups_migrate ;
<    u64 nr_wakeups_local ;
<    u64 nr_wakeups_remote ;
<    u64 nr_wakeups_affine ;
<    u64 nr_wakeups_affine_attempts ;
<    u64 nr_wakeups_passive ;
<    u64 nr_wakeups_idle ;
<    struct sched_entity *parent ;
<    struct cfs_rq *cfs_rq ;
<    struct cfs_rq *my_q ;
< };
< #line 1014
< struct rt_rq;
< #line 1014 "include/linux/sched.h"
< struct sched_rt_entity {
<    struct list_head run_list ;
<    unsigned long timeout ;
<    unsigned int time_slice ;
<    int nr_cpus_allowed ;
<    struct sched_rt_entity *back ;
<    struct sched_rt_entity *parent ;
<    struct rt_rq *rt_rq ;
<    struct rt_rq *my_q ;
< };
< #line 1030
< struct linux_binfmt;
< #line 1030
< struct files_struct;
< #line 1030
< struct css_set;
< #line 1030
< struct compat_robust_list_head;
< #line 1030 "include/linux/sched.h"
< struct task_struct {
<    long volatile   state ;
<    void *stack ;
<    atomic_t usage ;
<    unsigned int flags ;
<    unsigned int ptrace ;
<    int lock_depth ;
<    int prio ;
<    int static_prio ;
<    int normal_prio ;
<    unsigned int rt_priority ;
<    struct sched_class  const  *sched_class ;
<    struct sched_entity se ;
<    struct sched_rt_entity rt ;
<    struct hlist_head preempt_notifiers ;
<    unsigned char fpu_counter ;
<    s8 oomkilladj ;
<    unsigned int policy ;
<    cpumask_t cpus_allowed ;
<    struct sched_info sched_info ;
<    struct list_head tasks ;
<    struct mm_struct *mm ;
<    struct mm_struct *active_mm ;
<    struct linux_binfmt *binfmt ;
<    int exit_state ;
<    int exit_code ;
<    int exit_signal ;
<    int pdeath_signal ;
<    unsigned int personality ;
<    unsigned int did_exec : 1 ;
<    pid_t pid ;
<    pid_t tgid ;
<    struct task_struct *real_parent ;
<    struct task_struct *parent ;
<    struct list_head children ;
<    struct list_head sibling ;
<    struct task_struct *group_leader ;
<    struct list_head ptraced ;
<    struct list_head ptrace_entry ;
<    struct pid_link pids[PIDTYPE_MAX] ;
<    struct list_head thread_group ;
<    struct completion *vfork_done ;
<    int *set_child_tid ;
<    int *clear_child_tid ;
<    cputime_t utime ;
<    cputime_t stime ;
<    cputime_t utimescaled ;
<    cputime_t stimescaled ;
<    cputime_t gtime ;
<    cputime_t prev_utime ;
<    cputime_t prev_stime ;
<    unsigned long nvcsw ;
<    unsigned long nivcsw ;
<    struct timespec start_time ;
<    struct timespec real_start_time ;
<    unsigned long min_flt ;
<    unsigned long maj_flt ;
<    cputime_t it_prof_expires ;
<    cputime_t it_virt_expires ;
<    unsigned long long it_sched_expires ;
<    struct list_head cpu_timers[3] ;
<    uid_t uid ;
<    uid_t euid ;
<    uid_t suid ;
<    uid_t fsuid ;
<    gid_t gid ;
<    gid_t egid ;
<    gid_t sgid ;
<    gid_t fsgid ;
<    struct group_info *group_info ;
<    kernel_cap_t cap_effective ;
<    kernel_cap_t cap_inheritable ;
<    kernel_cap_t cap_permitted ;
<    kernel_cap_t cap_bset ;
<    struct user_struct *user ;
<    unsigned int securebits ;
<    unsigned char jit_keyring ;
<    struct key *request_key_auth ;
<    struct key *thread_keyring ;
<    char comm[16] ;
<    int link_count ;
<    int total_link_count ;
<    struct sysv_sem sysvsem ;
<    unsigned long last_switch_timestamp ;
<    unsigned long last_switch_count ;
<    struct thread_struct thread ;
<    struct fs_struct *fs ;
<    struct files_struct *files ;
<    struct nsproxy *nsproxy ;
<    struct signal_struct *signal ;
<    struct sighand_struct *sighand ;
<    sigset_t blocked ;
<    sigset_t real_blocked ;
<    sigset_t saved_sigmask ;
<    struct sigpending pending ;
<    unsigned long sas_ss_sp ;
<    size_t sas_ss_size ;
<    int (*notifier)(void *priv ) ;
<    void *notifier_data ;
<    sigset_t *notifier_mask ;
<    void *security ;
<    struct audit_context *audit_context ;
<    uid_t loginuid ;
<    unsigned int sessionid ;
<    seccomp_t seccomp ;
<    u32 parent_exec_id ;
<    u32 self_exec_id ;
<    spinlock_t alloc_lock ;
<    spinlock_t pi_lock ;
<    struct plist_head pi_waiters ;
<    struct rt_mutex_waiter *pi_blocked_on ;
<    struct mutex_waiter *blocked_on ;
<    unsigned int irq_events ;
<    int hardirqs_enabled ;
<    unsigned long hardirq_enable_ip ;
<    unsigned int hardirq_enable_event ;
<    unsigned long hardirq_disable_ip ;
<    unsigned int hardirq_disable_event ;
<    int softirqs_enabled ;
<    unsigned long softirq_disable_ip ;
<    unsigned int softirq_disable_event ;
<    unsigned long softirq_enable_ip ;
<    unsigned int softirq_enable_event ;
<    int hardirq_context ;
<    int softirq_context ;
<    void *journal_info ;
<    struct bio *bio_list ;
<    struct bio **bio_tail ;
<    struct reclaim_state *reclaim_state ;
<    struct backing_dev_info *backing_dev_info ;
<    struct io_context *io_context ;
<    unsigned long ptrace_message ;
<    siginfo_t *last_siginfo ;
<    struct task_io_accounting ioac ;
<    u64 acct_rss_mem1 ;
<    u64 acct_vm_mem1 ;
<    cputime_t acct_timexpd ;
<    nodemask_t mems_allowed ;
<    int cpuset_mems_generation ;
<    int cpuset_mem_spread_rotor ;
<    struct css_set *cgroups ;
<    struct list_head cg_list ;
<    struct robust_list_head *robust_list ;
<    struct compat_robust_list_head *compat_robust_list ;
<    struct list_head pi_state_list ;
<    struct futex_pi_state *pi_state_cache ;
<    struct mempolicy *mempolicy ;
<    short il_next ;
<    atomic_t fs_excl ;
<    struct rcu_head rcu ;
<    struct pipe_inode_info *splice_pipe ;
<    struct task_delay_info *delays ;
<    int make_it_fail ;
<    struct prop_local_single dirties ;
<    int latency_record_count ;
<    struct latency_record latency_record[32] ;
---
> #line 95 "include/linux/interrupt.h"
> struct irqaction {
>    irqreturn_t (*handler)(int  , void * ) ;
>    unsigned long flags ;
>    char const   *name ;
>    void *dev_id ;
>    struct irqaction *next ;
>    int irq ;
>    struct proc_dir_entry *dir ;
>    irqreturn_t (*thread_fn)(int  , void * ) ;
>    struct task_struct *thread ;
>    unsigned long thread_flags ;
1829,1831c980
< #line 75 "include/linux/irq.h"
< struct proc_dir_entry;
< #line 295 "include/linux/interrupt.h"
---
> #line 420 "include/linux/interrupt.h"
1841c990,995
< #line 32 "include/linux/socket.h"
---
> #line 16 "include/linux/uio.h"
> struct iovec {
>    void *iov_base ;
>    __kernel_size_t iov_len ;
> };
> #line 34 "include/linux/socket.h"
1843c997
< #line 38 "include/linux/socket.h"
---
> #line 40 "include/linux/socket.h"
1849c1003
< struct __anonstruct_sync_serial_settings_115 {
---
> struct __anonstruct_sync_serial_settings_118 {
1855c1009
< typedef struct __anonstruct_sync_serial_settings_115 sync_serial_settings;
---
> typedef struct __anonstruct_sync_serial_settings_118 sync_serial_settings;
1857c1011
< struct __anonstruct_te1_settings_116 {
---
> struct __anonstruct_te1_settings_119 {
1864c1018
< typedef struct __anonstruct_te1_settings_116 te1_settings;
---
> typedef struct __anonstruct_te1_settings_119 te1_settings;
1866c1020
< struct __anonstruct_raw_hdlc_proto_117 {
---
> struct __anonstruct_raw_hdlc_proto_120 {
1871c1025
< typedef struct __anonstruct_raw_hdlc_proto_117 raw_hdlc_proto;
---
> typedef struct __anonstruct_raw_hdlc_proto_120 raw_hdlc_proto;
1873c1027
< struct __anonstruct_fr_proto_118 {
---
> struct __anonstruct_fr_proto_121 {
1883c1037
< typedef struct __anonstruct_fr_proto_118 fr_proto;
---
> typedef struct __anonstruct_fr_proto_121 fr_proto;
1885c1039
< struct __anonstruct_fr_proto_pvc_119 {
---
> struct __anonstruct_fr_proto_pvc_122 {
1889c1043
< typedef struct __anonstruct_fr_proto_pvc_119 fr_proto_pvc;
---
> typedef struct __anonstruct_fr_proto_pvc_122 fr_proto_pvc;
1891c1045
< struct __anonstruct_fr_proto_pvc_info_120 {
---
> struct __anonstruct_fr_proto_pvc_info_123 {
1896c1050
< typedef struct __anonstruct_fr_proto_pvc_info_120 fr_proto_pvc_info;
---
> typedef struct __anonstruct_fr_proto_pvc_info_123 fr_proto_pvc_info;
1898c1052
< struct __anonstruct_cisco_proto_121 {
---
> struct __anonstruct_cisco_proto_124 {
1903,1904c1057,1058
< typedef struct __anonstruct_cisco_proto_121 cisco_proto;
< #line 123 "include/linux/if.h"
---
> typedef struct __anonstruct_cisco_proto_124 cisco_proto;
> #line 128 "include/linux/if.h"
1913,1914c1067,1068
< #line 134 "include/linux/if.h"
< union __anonunion_ifs_ifsu_124 {
---
> #line 139 "include/linux/if.h"
> union __anonunion_ifs_ifsu_127 {
1923c1077
< #line 134 "include/linux/if.h"
---
> #line 139 "include/linux/if.h"
1927c1081
<    union __anonunion_ifs_ifsu_124 ifs_ifsu ;
---
>    union __anonunion_ifs_ifsu_127 ifs_ifsu ;
1929,1930c1083,1084
< #line 159 "include/linux/if.h"
< union __anonunion_ifr_ifrn_125 {
---
> #line 164 "include/linux/if.h"
> union __anonunion_ifr_ifrn_128 {
1933,1934c1087,1088
< #line 159 "include/linux/if.h"
< union __anonunion_ifr_ifru_126 {
---
> #line 164 "include/linux/if.h"
> union __anonunion_ifr_ifru_129 {
1949c1103
< #line 159 "include/linux/if.h"
---
> #line 164 "include/linux/if.h"
1951,1952c1105,1159
<    union __anonunion_ifr_ifrn_125 ifr_ifrn ;
<    union __anonunion_ifr_ifru_126 ifr_ifru ;
---
>    union __anonunion_ifr_ifrn_128 ifr_ifrn ;
>    union __anonunion_ifr_ifru_129 ifr_ifru ;
> };
> #line 14 "include/linux/prio_tree.h"
> struct prio_tree_node;
> #line 14 "include/linux/prio_tree.h"
> struct raw_prio_tree_node {
>    struct prio_tree_node *left ;
>    struct prio_tree_node *right ;
>    struct prio_tree_node *parent ;
> };
> #line 20 "include/linux/prio_tree.h"
> struct prio_tree_node {
>    struct prio_tree_node *left ;
>    struct prio_tree_node *right ;
>    struct prio_tree_node *parent ;
>    unsigned long start ;
>    unsigned long last ;
> };
> #line 28 "include/linux/prio_tree.h"
> struct prio_tree_root {
>    struct prio_tree_node *prio_tree_node ;
>    unsigned short index_bits ;
>    unsigned short raw ;
> };
> #line 23 "include/linux/mm_types.h"
> struct address_space;
> #line 28 "include/linux/mm_types.h"
> typedef atomic_long_t mm_counter_t;
> #line 40 "include/linux/mm_types.h"
> struct __anonstruct____missing_field_name_132 {
>    u16 inuse ;
>    u16 objects ;
> };
> #line 40 "include/linux/mm_types.h"
> union __anonunion____missing_field_name_131 {
>    atomic_t _mapcount ;
>    struct __anonstruct____missing_field_name_132 __annonCompField18 ;
> };
> #line 40 "include/linux/mm_types.h"
> struct __anonstruct____missing_field_name_134 {
>    unsigned long private ;
>    struct address_space *mapping ;
> };
> #line 40 "include/linux/mm_types.h"
> union __anonunion____missing_field_name_133 {
>    struct __anonstruct____missing_field_name_134 __annonCompField20 ;
>    spinlock_t ptl ;
>    struct kmem_cache *slab ;
>    struct page *first_page ;
> };
> #line 40 "include/linux/mm_types.h"
> union __anonunion____missing_field_name_135 {
>    unsigned long index ;
>    void *freelist ;
1954c1161,1279
< #line 61 "include/linux/net.h"
---
> #line 40 "include/linux/mm_types.h"
> struct page {
>    unsigned long flags ;
>    atomic_t _count ;
>    union __anonunion____missing_field_name_131 __annonCompField19 ;
>    union __anonunion____missing_field_name_133 __annonCompField21 ;
>    union __anonunion____missing_field_name_135 __annonCompField22 ;
>    struct list_head lru ;
> };
> #line 134 "include/linux/mm_types.h"
> struct __anonstruct_vm_set_137 {
>    struct list_head list ;
>    void *parent ;
>    struct vm_area_struct *head ;
> };
> #line 134 "include/linux/mm_types.h"
> union __anonunion_shared_136 {
>    struct __anonstruct_vm_set_137 vm_set ;
>    struct raw_prio_tree_node prio_tree_node ;
> };
> #line 134
> struct anon_vma;
> #line 134
> struct vm_operations_struct;
> #line 134
> struct mempolicy;
> #line 134 "include/linux/mm_types.h"
> struct vm_area_struct {
>    struct mm_struct *vm_mm ;
>    unsigned long vm_start ;
>    unsigned long vm_end ;
>    struct vm_area_struct *vm_next ;
>    pgprot_t vm_page_prot ;
>    unsigned long vm_flags ;
>    struct rb_node vm_rb ;
>    union __anonunion_shared_136 shared ;
>    struct list_head anon_vma_node ;
>    struct anon_vma *anon_vma ;
>    struct vm_operations_struct  const  *vm_ops ;
>    unsigned long vm_pgoff ;
>    struct file *vm_file ;
>    void *vm_private_data ;
>    unsigned long vm_truncate_count ;
>    struct mempolicy *vm_policy ;
> };
> #line 191 "include/linux/mm_types.h"
> struct core_thread {
>    struct task_struct *task ;
>    struct core_thread *next ;
> };
> #line 196 "include/linux/mm_types.h"
> struct core_state {
>    atomic_t nr_threads ;
>    struct core_thread dumper ;
>    struct completion startup ;
> };
> #line 202
> struct linux_binfmt;
> #line 202
> struct mmu_notifier_mm;
> #line 202 "include/linux/mm_types.h"
> struct mm_struct {
>    struct vm_area_struct *mmap ;
>    struct rb_root mm_rb ;
>    struct vm_area_struct *mmap_cache ;
>    unsigned long (*get_unmapped_area)(struct file *filp , unsigned long addr , unsigned long len ,
>                                       unsigned long pgoff , unsigned long flags ) ;
>    void (*unmap_area)(struct mm_struct *mm , unsigned long addr ) ;
>    unsigned long mmap_base ;
>    unsigned long task_size ;
>    unsigned long cached_hole_size ;
>    unsigned long free_area_cache ;
>    pgd_t *pgd ;
>    atomic_t mm_users ;
>    atomic_t mm_count ;
>    int map_count ;
>    struct rw_semaphore mmap_sem ;
>    spinlock_t page_table_lock ;
>    struct list_head mmlist ;
>    mm_counter_t _file_rss ;
>    mm_counter_t _anon_rss ;
>    unsigned long hiwater_rss ;
>    unsigned long hiwater_vm ;
>    unsigned long total_vm ;
>    unsigned long locked_vm ;
>    unsigned long shared_vm ;
>    unsigned long exec_vm ;
>    unsigned long stack_vm ;
>    unsigned long reserved_vm ;
>    unsigned long def_flags ;
>    unsigned long nr_ptes ;
>    unsigned long start_code ;
>    unsigned long end_code ;
>    unsigned long start_data ;
>    unsigned long end_data ;
>    unsigned long start_brk ;
>    unsigned long brk ;
>    unsigned long start_stack ;
>    unsigned long arg_start ;
>    unsigned long arg_end ;
>    unsigned long env_start ;
>    unsigned long env_end ;
>    unsigned long saved_auxv[2 * ((2 + 19) + 1)] ;
>    struct linux_binfmt *binfmt ;
>    cpumask_t cpu_vm_mask ;
>    mm_context_t context ;
>    unsigned int faultstamp ;
>    unsigned int token_priority ;
>    unsigned int last_interval ;
>    unsigned long flags ;
>    struct core_state *core_state ;
>    spinlock_t ioctx_lock ;
>    struct hlist_head ioctx_list ;
>    struct task_struct *owner ;
>    struct file *exe_file ;
>    unsigned long num_exe_file_vmas ;
>    struct mmu_notifier_mm *mmu_notifier_mm ;
> };
> #line 62 "include/linux/net.h"
1956a1282,1283
> struct pipe_inode_info;
> #line 64
1958c1285,1287
< #line 128
---
> #line 65
> struct net;
> #line 129
1960c1289
< #line 128
---
> #line 129
1961a1291,1371
> #line 150
> struct kiocb;
> #line 469 "include/linux/sysctl.h"
> enum __anonenum_155 {
>     NET_IPV4_CONF_FORWARDING = 1,
>     NET_IPV4_CONF_MC_FORWARDING = 2,
>     NET_IPV4_CONF_PROXY_ARP = 3,
>     NET_IPV4_CONF_ACCEPT_REDIRECTS = 4,
>     NET_IPV4_CONF_SECURE_REDIRECTS = 5,
>     NET_IPV4_CONF_SEND_REDIRECTS = 6,
>     NET_IPV4_CONF_SHARED_MEDIA = 7,
>     NET_IPV4_CONF_RP_FILTER = 8,
>     NET_IPV4_CONF_ACCEPT_SOURCE_ROUTE = 9,
>     NET_IPV4_CONF_BOOTP_RELAY = 10,
>     NET_IPV4_CONF_LOG_MARTIANS = 11,
>     NET_IPV4_CONF_TAG = 12,
>     NET_IPV4_CONF_ARPFILTER = 13,
>     NET_IPV4_CONF_MEDIUM_ID = 14,
>     NET_IPV4_CONF_NOXFRM = 15,
>     NET_IPV4_CONF_NOPOLICY = 16,
>     NET_IPV4_CONF_FORCE_IGMP_VERSION = 17,
>     NET_IPV4_CONF_ARP_ANNOUNCE = 18,
>     NET_IPV4_CONF_ARP_IGNORE = 19,
>     NET_IPV4_CONF_PROMOTE_SECONDARIES = 20,
>     NET_IPV4_CONF_ARP_ACCEPT = 21,
>     NET_IPV4_CONF_ARP_NOTIFY = 22,
>     __NET_IPV4_CONF_MAX = 23
> } ;
> #line 947
> struct nsproxy;
> #line 948
> struct ctl_table_root;
> #line 950 "include/linux/sysctl.h"
> struct ctl_table_set {
>    struct list_head list ;
>    struct ctl_table_set *parent ;
>    int (*is_seen)(struct ctl_table_set * ) ;
> };
> #line 960
> struct ctl_table_header;
> #line 975 "include/linux/sysctl.h"
> typedef int ctl_handler(struct ctl_table *table , void *oldval , size_t *oldlenp ,
>                         void *newval , size_t newlen );
> #line 979 "include/linux/sysctl.h"
> typedef int proc_handler(struct ctl_table *ctl , int write , void *buffer , size_t *lenp ,
>                          loff_t *ppos );
> #line 1051 "include/linux/sysctl.h"
> struct ctl_table {
>    int ctl_name ;
>    char const   *procname ;
>    void *data ;
>    int maxlen ;
>    mode_t mode ;
>    struct ctl_table *child ;
>    struct ctl_table *parent ;
>    proc_handler *proc_handler ;
>    ctl_handler *strategy ;
>    void *extra1 ;
>    void *extra2 ;
> };
> #line 1066 "include/linux/sysctl.h"
> struct ctl_table_root {
>    struct list_head root_list ;
>    struct ctl_table_set default_set ;
>    struct ctl_table_set *(*lookup)(struct ctl_table_root *root , struct nsproxy *namespaces ) ;
>    int (*permissions)(struct ctl_table_root *root , struct nsproxy *namespaces , struct ctl_table *table ) ;
> };
> #line 1077 "include/linux/sysctl.h"
> struct ctl_table_header {
>    struct ctl_table *ctl_table ;
>    struct list_head ctl_entry ;
>    int used ;
>    int count ;
>    struct completion *unregistering ;
>    struct ctl_table *ctl_table_arg ;
>    struct ctl_table_root *root ;
>    struct ctl_table_set *set ;
>    struct ctl_table *attached_by ;
>    struct ctl_table *attached_to ;
>    struct ctl_table_header *parent ;
> };
1977a1388,1389
> #line 45 "include/linux/kmod.h"
> struct key;
1997c1409
< #line 29 "include/linux/moduleparam.h"
---
> #line 32 "include/linux/moduleparam.h"
1999c1411
< #line 36
---
> #line 42
2001c1413
< #line 36
---
> #line 42
2003,2004c1415,1416
< #line 36 "include/linux/moduleparam.h"
< union __anonunion____missing_field_name_188 {
---
> #line 42 "include/linux/moduleparam.h"
> union __anonunion____missing_field_name_198 {
2009c1421
< #line 36 "include/linux/moduleparam.h"
---
> #line 42 "include/linux/moduleparam.h"
2012c1424,1425
<    unsigned int perm ;
---
>    u16 perm ;
>    u16 flags ;
2015c1428
<    union __anonunion____missing_field_name_188 __annonCompField18 ;
---
>    union __anonunion____missing_field_name_198 __annonCompField23 ;
2017c1430
< #line 49 "include/linux/moduleparam.h"
---
> #line 56 "include/linux/moduleparam.h"
2022c1435
< #line 55 "include/linux/moduleparam.h"
---
> #line 62 "include/linux/moduleparam.h"
2031,2057c1444
< #line 18 "include/linux/marker.h"
< struct marker;
< #line 32 "include/linux/marker.h"
< typedef void marker_probe_func(void *probe_private , void *call_private , char const   *fmt ,
<                                va_list *args );
< #line 35 "include/linux/marker.h"
< struct marker_probe_closure {
<    marker_probe_func *func ;
<    void *probe_private ;
< };
< #line 40 "include/linux/marker.h"
< struct marker {
<    char const   *name ;
<    char const   *format ;
<    char state ;
<    char ptype ;
<    void (*call)(struct marker  const  *mdata , void *call_private  , ...) ;
<    struct marker_probe_closure single ;
<    struct marker_probe_closure *multi ;
< } __attribute__((__aligned__(8))) ;
< #line 10 "include/asm/local.h"
< struct __anonstruct_local_t_189 {
<    atomic_long_t a ;
< };
< #line 10 "include/asm/local.h"
< typedef struct __anonstruct_local_t_189 local_t;
< #line 5 "include/asm/module.h"
---
> #line 8 "include/asm-generic/module.h"
2061c1448
< #line 33 "include/linux/module.h"
---
> #line 35 "include/linux/module.h"
2066c1453
< #line 47 "include/linux/module.h"
---
> #line 49 "include/linux/module.h"
2076c1463,1465
< #line 57 "include/linux/module.h"
---
> #line 59
> struct module_param_attrs;
> #line 59 "include/linux/module.h"
2080a1470
>    struct module_param_attrs *mp ;
2082c1472
< #line 69
---
> #line 72
2084,2088c1474
< #line 220 "include/linux/module.h"
< struct module_ref {
<    local_t count ;
< } __attribute__((__aligned__((1) <<  (7) ))) ;
< #line 225
---
> #line 227
2094,2096c1480
< #line 232
< struct module_param_attrs;
< #line 232
---
> #line 234
2098c1482
< #line 232
---
> #line 234
2100c1484,1486
< #line 232 "include/linux/module.h"
---
> #line 234
> struct ftrace_event_call;
> #line 234 "include/linux/module.h"
2106d1491
<    struct module_param_attrs *param_attrs ;
2113a1499,1500
>    struct kernel_param *kp ;
>    unsigned int num_kp ;
2127c1514
<    struct exception_table_entry  const  *extable ;
---
>    struct exception_table_entry *extable ;
2135d1521
<    void *unwind_info ;
2141a1528
>    Elf64_Sym *core_symtab ;
2142a1530
>    unsigned int core_num_syms ;
2143a1532
>    char *core_strtab ;
2148,2149c1537,1542
<    struct marker *markers ;
<    unsigned int num_markers ;
---
>    struct tracepoint *tracepoints ;
>    unsigned int num_tracepoints ;
>    char const   **trace_bprintk_fmt_start ;
>    unsigned int num_trace_bprintk_fmt ;
>    struct ftrace_event_call *trace_events ;
>    unsigned int num_trace_events ;
2153c1546,1548
<    struct module_ref ref[8] ;
---
>    char *refptr ;
>    ctor_fn_t *ctors ;
>    unsigned int num_ctors ;
2155c1550
< #line 563
---
> #line 665
2157c1552
< #line 95 "include/asm/uaccess.h"
---
> #line 95 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/uaccess.h"
2164,2176c1559
< #line 18 "include/linux/ioport.h"
< struct resource {
<    resource_size_t start ;
<    resource_size_t end ;
<    char const   *name ;
<    unsigned long flags ;
<    struct resource *parent ;
<    struct resource *sibling ;
<    struct resource *child ;
< };
< #line 26
< struct pci_dev;
< #line 20 "include/linux/klist.h"
---
> #line 19 "include/linux/klist.h"
2178,2185c1561
< #line 21 "include/linux/klist.h"
< struct klist {
<    spinlock_t k_lock ;
<    struct list_head k_list ;
<    void (*get)(struct klist_node * ) ;
<    void (*put)(struct klist_node * ) ;
< };
< #line 40 "include/linux/klist.h"
---
> #line 39 "include/linux/klist.h"
2190d1565
<    struct completion n_removed ;
2198,2200c1573,1575
< #line 4 "include/asm/device.h"
< struct dma_mapping_ops;
< #line 4 "include/asm/device.h"
---
> #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
> struct dma_map_ops;
> #line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
2203c1578
<    struct dma_mapping_ops *dma_ops ;
---
>    struct dma_map_ops *dma_ops ;
2206c1581,1583
< #line 32 "include/linux/device.h"
---
> #line 30 "include/linux/device.h"
> struct device_private;
> #line 32
2238,2239d1614
<    int (*suspend_late)(struct device *dev , pm_message_t state ) ;
<    int (*resume_early)(struct device *dev ) ;
2241c1616
<    struct pm_ext_ops *pm ;
---
>    struct dev_pm_ops  const  *pm ;
2244c1619
< #line 119 "include/linux/device.h"
---
> #line 122 "include/linux/device.h"
2249a1625
>    bool suppress_bind_attrs ;
2255,2256c1631,1632
<    struct attribute_group **groups ;
<    struct pm_ops *pm ;
---
>    struct attribute_group  const  **groups ;
>    struct dev_pm_ops  const  *pm ;
2259c1635
< #line 150 "include/linux/device.h"
---
> #line 157 "include/linux/device.h"
2265c1641
< #line 182
---
> #line 189
2267c1643
< #line 182 "include/linux/device.h"
---
> #line 189 "include/linux/device.h"
2274a1651
>    char *(*devnode)(struct device *dev , mode_t *mode ) ;
2279c1656
<    struct pm_ops *pm ;
---
>    struct dev_pm_ops  const  *pm ;
2282c1659
< #line 202
---
> #line 211
2284c1661
< #line 235 "include/linux/device.h"
---
> #line 252 "include/linux/device.h"
2290c1667
< #line 282 "include/linux/device.h"
---
> #line 299 "include/linux/device.h"
2293c1670
<    struct attribute_group **groups ;
---
>    struct attribute_group  const  **groups ;
2294a1672
>    char *(*devnode)(struct device *dev , mode_t *mode ) ;
2296,2298c1674
<    int (*suspend)(struct device *dev , pm_message_t state ) ;
<    int (*resume)(struct device *dev ) ;
<    struct pm_ops *pm ;
---
>    struct dev_pm_ops  const  *pm ;
2300c1676
< #line 295 "include/linux/device.h"
---
> #line 310 "include/linux/device.h"
2307c1683
< #line 355 "include/linux/device.h"
---
> #line 370 "include/linux/device.h"
2312c1688
< #line 364
---
> #line 379
2314c1690
< #line 364 "include/linux/device.h"
---
> #line 379 "include/linux/device.h"
2316,2319d1691
<    struct klist klist_children ;
<    struct klist_node knode_parent ;
<    struct klist_node knode_driver ;
<    struct klist_node knode_bus ;
2320a1693
>    struct device_private *p ;
2322d1694
<    char bus_id[20] ;
2325d1696
<    unsigned int uevent_suppress : 1 ;
2329d1699
<    void *driver_data ;
2338a1709
>    dev_t devt ;
2343,2344c1714
<    dev_t devt ;
<    struct attribute_group **groups ;
---
>    struct attribute_group  const  **groups ;
2347c1717,1727
< #line 6 "include/asm/scatterlist.h"
---
> #line 13 "include/linux/dma-attrs.h"
> enum dma_attr {
>     DMA_ATTR_WRITE_BARRIER = 0,
>     DMA_ATTR_WEAK_ORDERING = 1,
>     DMA_ATTR_MAX = 2
> } ;
> #line 25 "include/linux/dma-attrs.h"
> struct dma_attrs {
>    unsigned long flags[(((unsigned long )DMA_ATTR_MAX + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
> };
> #line 6 "include/asm-generic/scatterlist.h"
2357a1738,1739
> #line 19
> struct user_struct;
2360c1742,1744
< #line 152 "include/linux/mm.h"
---
> #line 21
> struct rlimit;
> #line 167 "include/linux/mm.h"
2367c1751
< #line 169 "include/linux/mm.h"
---
> #line 184 "include/linux/mm.h"
2372c1756
<    int (*page_mkwrite)(struct vm_area_struct *vma , struct page *page ) ;
---
>    int (*page_mkwrite)(struct vm_area_struct *vma , struct vm_fault *vmf ) ;
2380,2382c1764,1772
< #line 19 "include/asm/dma-mapping.h"
< struct dma_mapping_ops {
<    int (*mapping_error)(struct device *dev , dma_addr_t dma_addr ) ;
---
> #line 11 "include/linux/dma-mapping.h"
> enum dma_data_direction {
>     DMA_BIDIRECTIONAL = 0,
>     DMA_TO_DEVICE = 1,
>     DMA_FROM_DEVICE = 2,
>     DMA_NONE = 3
> } ;
> #line 18 "include/linux/dma-mapping.h"
> struct dma_map_ops {
2386,2403c1776,1798
<    dma_addr_t (*map_single)(struct device *hwdev , phys_addr_t ptr , size_t size ,
<                             int direction ) ;
<    void (*unmap_single)(struct device *dev , dma_addr_t addr , size_t size , int direction ) ;
<    void (*sync_single_for_cpu)(struct device *hwdev , dma_addr_t dma_handle , size_t size ,
<                                int direction ) ;
<    void (*sync_single_for_device)(struct device *hwdev , dma_addr_t dma_handle , size_t size ,
<                                   int direction ) ;
<    void (*sync_single_range_for_cpu)(struct device *hwdev , dma_addr_t dma_handle ,
<                                      unsigned long offset , size_t size , int direction ) ;
<    void (*sync_single_range_for_device)(struct device *hwdev , dma_addr_t dma_handle ,
<                                         unsigned long offset , size_t size , int direction ) ;
<    void (*sync_sg_for_cpu)(struct device *hwdev , struct scatterlist *sg , int nelems ,
<                            int direction ) ;
<    void (*sync_sg_for_device)(struct device *hwdev , struct scatterlist *sg , int nelems ,
<                               int direction ) ;
<    int (*map_sg)(struct device *hwdev , struct scatterlist *sg , int nents , int direction ) ;
<    void (*unmap_sg)(struct device *hwdev , struct scatterlist *sg , int nents , int direction ) ;
<    int (*dma_supported)(struct device *hwdev , u64 mask ) ;
---
>    dma_addr_t (*map_page)(struct device *dev , struct page *page , unsigned long offset ,
>                           size_t size , enum dma_data_direction dir , struct dma_attrs *attrs ) ;
>    void (*unmap_page)(struct device *dev , dma_addr_t dma_handle , size_t size , enum dma_data_direction dir ,
>                       struct dma_attrs *attrs ) ;
>    int (*map_sg)(struct device *dev , struct scatterlist *sg , int nents , enum dma_data_direction dir ,
>                  struct dma_attrs *attrs ) ;
>    void (*unmap_sg)(struct device *dev , struct scatterlist *sg , int nents , enum dma_data_direction dir ,
>                     struct dma_attrs *attrs ) ;
>    void (*sync_single_for_cpu)(struct device *dev , dma_addr_t dma_handle , size_t size ,
>                                enum dma_data_direction dir ) ;
>    void (*sync_single_for_device)(struct device *dev , dma_addr_t dma_handle , size_t size ,
>                                   enum dma_data_direction dir ) ;
>    void (*sync_single_range_for_cpu)(struct device *dev , dma_addr_t dma_handle ,
>                                      unsigned long offset , size_t size , enum dma_data_direction dir ) ;
>    void (*sync_single_range_for_device)(struct device *dev , dma_addr_t dma_handle ,
>                                         unsigned long offset , size_t size , enum dma_data_direction dir ) ;
>    void (*sync_sg_for_cpu)(struct device *dev , struct scatterlist *sg , int nents ,
>                            enum dma_data_direction dir ) ;
>    void (*sync_sg_for_device)(struct device *dev , struct scatterlist *sg , int nents ,
>                               enum dma_data_direction dir ) ;
>    int (*mapping_error)(struct device *dev , dma_addr_t dma_addr ) ;
>    int (*dma_supported)(struct device *dev , u64 mask ) ;
>    int (*set_dma_mask)(struct device *dev , u64 mask ) ;
2406c1801
< #line 62 "include/linux/dmaengine.h"
---
> #line 33 "include/linux/dmaengine.h"
2408c1803
< #line 96 "include/linux/skbuff.h"
---
> #line 94 "include/linux/skbuff.h"
2410c1805
< #line 101 "include/linux/skbuff.h"
---
> #line 99 "include/linux/skbuff.h"
2414c1809
< #line 107 "include/linux/skbuff.h"
---
> #line 105 "include/linux/skbuff.h"
2422,2431c1817,1822
< #line 198 "include/linux/skbuff.h"
< typedef unsigned int sk_buff_data_t;
< #line 259
< struct dst_entry;
< #line 259
< struct rtable;
< #line 259 "include/linux/skbuff.h"
< union __anonunion____missing_field_name_194 {
<    struct dst_entry *dst ;
<    struct rtable *rtable ;
---
> #line 114 "include/linux/skbuff.h"
> struct sk_buff_head {
>    struct sk_buff *next ;
>    struct sk_buff *prev ;
>    __u32 qlen ;
>    spinlock_t lock ;
2433c1824,1826
< #line 259
---
> #line 253 "include/linux/skbuff.h"
> typedef unsigned int sk_buff_data_t;
> #line 313
2435,2436c1828,1829
< #line 259 "include/linux/skbuff.h"
< struct __anonstruct____missing_field_name_196 {
---
> #line 313 "include/linux/skbuff.h"
> struct __anonstruct____missing_field_name_206 {
2440,2441c1833,1834
< #line 259 "include/linux/skbuff.h"
< union __anonunion____missing_field_name_195 {
---
> #line 313 "include/linux/skbuff.h"
> union __anonunion____missing_field_name_205 {
2443c1836
<    struct __anonstruct____missing_field_name_196 __annonCompField20 ;
---
>    struct __anonstruct____missing_field_name_206 __annonCompField25 ;
2445c1838
< #line 259 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
2452c1845
<    union __anonunion____missing_field_name_194 __annonCompField19 ;
---
>    unsigned long _skb_dst ;
2459c1852
<    union __anonunion____missing_field_name_195 __annonCompField21 ;
---
>    union __anonunion____missing_field_name_205 __annonCompField26 ;
2460a1854
>    int flags1_begin[0] ;
2471c1865,1866
<    __be16 protocol ;
---
>    __be16 protocol : 16 ;
>    int flags1_end[0] ;
2477d1871
<    __u16 queue_mapping ;
2479a1874,1875
>    int flags2_begin[0] ;
>    __u16 queue_mapping : 16 ;
2481c1877
<    __u8 do_not_encrypt : 1 ;
---
>    int flags2_end[0] ;
2496,2570c1892,1912
< #line 16 "include/linux/seq_file.h"
< struct seq_file {
<    char *buf ;
<    size_t size ;
<    size_t from ;
<    size_t count ;
<    loff_t index ;
<    u64 version ;
<    struct mutex lock ;
<    struct seq_operations  const  *op ;
<    void *private ;
< };
< #line 28 "include/linux/seq_file.h"
< struct seq_operations {
<    void *(*start)(struct seq_file *m , loff_t *pos ) ;
<    void (*stop)(struct seq_file *m , void *v ) ;
<    void *(*next)(struct seq_file *m , void *v , loff_t *pos ) ;
<    int (*show)(struct seq_file *m , void *v ) ;
< };
< #line 47 "include/linux/netdevice.h"
< struct vlan_group;
< #line 48
< struct ethtool_ops;
< #line 49
< struct netpoll_info;
< #line 51
< struct wireless_dev;
< #line 125 "include/linux/netdevice.h"
< struct net_device_stats {
<    unsigned long rx_packets ;
<    unsigned long tx_packets ;
<    unsigned long rx_bytes ;
<    unsigned long tx_bytes ;
<    unsigned long rx_errors ;
<    unsigned long tx_errors ;
<    unsigned long rx_dropped ;
<    unsigned long tx_dropped ;
<    unsigned long multicast ;
<    unsigned long collisions ;
<    unsigned long rx_length_errors ;
<    unsigned long rx_over_errors ;
<    unsigned long rx_crc_errors ;
<    unsigned long rx_frame_errors ;
<    unsigned long rx_fifo_errors ;
<    unsigned long rx_missed_errors ;
<    unsigned long tx_aborted_errors ;
<    unsigned long tx_carrier_errors ;
<    unsigned long tx_fifo_errors ;
<    unsigned long tx_heartbeat_errors ;
<    unsigned long tx_window_errors ;
<    unsigned long rx_compressed ;
<    unsigned long tx_compressed ;
< };
< #line 175
< struct neighbour;
< #line 176
< struct neigh_parms;
< #line 189 "include/linux/netdevice.h"
< struct dev_addr_list {
<    struct dev_addr_list *next ;
<    u8 da_addr[32] ;
<    u8 da_addrlen ;
<    u8 da_synced ;
<    int da_users ;
<    int da_gusers ;
< };
< #line 209 "include/linux/netdevice.h"
< struct hh_cache {
<    struct hh_cache *hh_next ;
<    atomic_t hh_refcnt ;
<    __be16 hh_type  __attribute__((__aligned__((1) <<  (7) ))) ;
<    u16 hh_len ;
<    int (*hh_output)(struct sk_buff *skb ) ;
<    seqlock_t hh_lock ;
<    unsigned long hh_data[(unsigned long )((128 + (16 - 1)) & ~ (16 - 1)) / sizeof(long )] ;
---
> #line 425
> struct dst_entry;
> #line 19 "include/linux/ethtool.h"
> struct ethtool_cmd {
>    __u32 cmd ;
>    __u32 supported ;
>    __u32 advertising ;
>    __u16 speed ;
>    __u8 duplex ;
>    __u8 port ;
>    __u8 phy_address ;
>    __u8 transceiver ;
>    __u8 autoneg ;
>    __u8 mdio_support ;
>    __u32 maxtxpkt ;
>    __u32 maxrxpkt ;
>    __u16 speed_hi ;
>    __u8 eth_tp_mdix ;
>    __u8 reserved2 ;
>    __u32 lp_advertising ;
>    __u32 reserved[2] ;
2572,2579c1914,1949
< #line 255 "include/linux/netdevice.h"
< struct header_ops {
<    int (*create)(struct sk_buff *skb , struct net_device *dev , unsigned short type ,
<                  void const   *daddr , void const   *saddr , unsigned int len ) ;
<    int (*parse)(struct sk_buff  const  *skb , unsigned char *haddr ) ;
<    int (*rebuild)(struct sk_buff *skb ) ;
<    int (*cache)(struct neighbour  const  *neigh , struct hh_cache *hh ) ;
<    void (*cache_update)(struct hh_cache *hh , struct net_device  const  *dev , unsigned char const   *haddr ) ;
---
> #line 54 "include/linux/ethtool.h"
> struct ethtool_drvinfo {
>    __u32 cmd ;
>    char driver[32] ;
>    char version[32] ;
>    char fw_version[32] ;
>    char bus_info[32] ;
>    char reserved1[32] ;
>    char reserved2[12] ;
>    __u32 n_priv_flags ;
>    __u32 n_stats ;
>    __u32 testinfo_len ;
>    __u32 eedump_len ;
>    __u32 regdump_len ;
> };
> #line 72 "include/linux/ethtool.h"
> struct ethtool_wolinfo {
>    __u32 cmd ;
>    __u32 supported ;
>    __u32 wolopts ;
>    __u8 sopass[6] ;
> };
> #line 86 "include/linux/ethtool.h"
> struct ethtool_regs {
>    __u32 cmd ;
>    __u32 version ;
>    __u32 len ;
>    __u8 data[0] ;
> };
> #line 94 "include/linux/ethtool.h"
> struct ethtool_eeprom {
>    __u32 cmd ;
>    __u32 magic ;
>    __u32 offset ;
>    __u32 len ;
>    __u8 data[0] ;
2581,2602c1951,2171
< #line 445
< struct Qdisc;
< #line 445 "include/linux/netdevice.h"
< struct netdev_queue {
<    struct net_device *dev ;
<    struct Qdisc *qdisc ;
<    unsigned long state ;
<    spinlock_t _xmit_lock ;
<    int xmit_lock_owner ;
<    struct Qdisc *qdisc_sleeping ;
< } __attribute__((__aligned__((1) <<  (7) ))) ;
< #line 464
< struct iw_handler_def;
< #line 464
< struct iw_public_data;
< #line 464
< enum __anonenum_reg_state_206 {
<     NETREG_UNINITIALIZED = 0,
<     NETREG_REGISTERED = 1,
<     NETREG_UNREGISTERING = 2,
<     NETREG_UNREGISTERED = 3,
<     NETREG_RELEASED = 4
---
> #line 103 "include/linux/ethtool.h"
> struct ethtool_coalesce {
>    __u32 cmd ;
>    __u32 rx_coalesce_usecs ;
>    __u32 rx_max_coalesced_frames ;
>    __u32 rx_coalesce_usecs_irq ;
>    __u32 rx_max_coalesced_frames_irq ;
>    __u32 tx_coalesce_usecs ;
>    __u32 tx_max_coalesced_frames ;
>    __u32 tx_coalesce_usecs_irq ;
>    __u32 tx_max_coalesced_frames_irq ;
>    __u32 stats_block_coalesce_usecs ;
>    __u32 use_adaptive_rx_coalesce ;
>    __u32 use_adaptive_tx_coalesce ;
>    __u32 pkt_rate_low ;
>    __u32 rx_coalesce_usecs_low ;
>    __u32 rx_max_coalesced_frames_low ;
>    __u32 tx_coalesce_usecs_low ;
>    __u32 tx_max_coalesced_frames_low ;
>    __u32 pkt_rate_high ;
>    __u32 rx_coalesce_usecs_high ;
>    __u32 rx_max_coalesced_frames_high ;
>    __u32 tx_coalesce_usecs_high ;
>    __u32 tx_max_coalesced_frames_high ;
>    __u32 rate_sample_interval ;
> };
> #line 199 "include/linux/ethtool.h"
> struct ethtool_ringparam {
>    __u32 cmd ;
>    __u32 rx_max_pending ;
>    __u32 rx_mini_max_pending ;
>    __u32 rx_jumbo_max_pending ;
>    __u32 tx_max_pending ;
>    __u32 rx_pending ;
>    __u32 rx_mini_pending ;
>    __u32 rx_jumbo_pending ;
>    __u32 tx_pending ;
> };
> #line 221 "include/linux/ethtool.h"
> struct ethtool_pauseparam {
>    __u32 cmd ;
>    __u32 autoneg ;
>    __u32 rx_pause ;
>    __u32 tx_pause ;
> };
> #line 260 "include/linux/ethtool.h"
> struct ethtool_test {
>    __u32 cmd ;
>    __u32 flags ;
>    __u32 reserved ;
>    __u32 len ;
>    __u64 data[0] ;
> };
> #line 269 "include/linux/ethtool.h"
> struct ethtool_stats {
>    __u32 cmd ;
>    __u32 n_stats ;
>    __u64 data[0] ;
> };
> #line 299 "include/linux/ethtool.h"
> struct ethtool_tcpip4_spec {
>    __be32 ip4src ;
>    __be32 ip4dst ;
>    __be16 psrc ;
>    __be16 pdst ;
>    __u8 tos ;
> };
> #line 307 "include/linux/ethtool.h"
> struct ethtool_ah_espip4_spec {
>    __be32 ip4src ;
>    __be32 ip4dst ;
>    __be32 spi ;
>    __u8 tos ;
> };
> #line 314 "include/linux/ethtool.h"
> struct ethtool_rawip4_spec {
>    __be32 ip4src ;
>    __be32 ip4dst ;
>    __u8 hdata[64] ;
> };
> #line 320 "include/linux/ethtool.h"
> struct ethtool_ether_spec {
>    __be16 ether_type ;
>    __u8 frame_size ;
>    __u8 eframe[16] ;
> };
> #line 329 "include/linux/ethtool.h"
> struct ethtool_usrip4_spec {
>    __be32 ip4src ;
>    __be32 ip4dst ;
>    __be32 l4_4_bytes ;
>    __u8 tos ;
>    __u8 ip_ver ;
>    __u8 proto ;
> };
> #line 338 "include/linux/ethtool.h"
> union __anonunion_h_u_207 {
>    struct ethtool_tcpip4_spec tcp_ip4_spec ;
>    struct ethtool_tcpip4_spec udp_ip4_spec ;
>    struct ethtool_tcpip4_spec sctp_ip4_spec ;
>    struct ethtool_ah_espip4_spec ah_ip4_spec ;
>    struct ethtool_ah_espip4_spec esp_ip4_spec ;
>    struct ethtool_rawip4_spec raw_ip4_spec ;
>    struct ethtool_ether_spec ether_spec ;
>    struct ethtool_usrip4_spec usr_ip4_spec ;
>    __u8 hdata[64] ;
> };
> #line 338 "include/linux/ethtool.h"
> struct ethtool_rx_flow_spec {
>    __u32 flow_type ;
>    union __anonunion_h_u_207 h_u ;
>    union __anonunion_h_u_207 m_u ;
>    __u64 ring_cookie ;
>    __u32 location ;
> };
> #line 355 "include/linux/ethtool.h"
> struct ethtool_rxnfc {
>    __u32 cmd ;
>    __u32 flow_type ;
>    __u64 data ;
>    struct ethtool_rx_flow_spec fs ;
>    __u32 rule_cnt ;
>    __u32 rule_locs[0] ;
> };
> #line 371 "include/linux/ethtool.h"
> struct ethtool_flash {
>    __u32 cmd ;
>    __u32 region ;
>    char data[128] ;
> };
> #line 456 "include/linux/ethtool.h"
> struct ethtool_ops {
>    int (*get_settings)(struct net_device * , struct ethtool_cmd * ) ;
>    int (*set_settings)(struct net_device * , struct ethtool_cmd * ) ;
>    void (*get_drvinfo)(struct net_device * , struct ethtool_drvinfo * ) ;
>    int (*get_regs_len)(struct net_device * ) ;
>    void (*get_regs)(struct net_device * , struct ethtool_regs * , void * ) ;
>    void (*get_wol)(struct net_device * , struct ethtool_wolinfo * ) ;
>    int (*set_wol)(struct net_device * , struct ethtool_wolinfo * ) ;
>    u32 (*get_msglevel)(struct net_device * ) ;
>    void (*set_msglevel)(struct net_device * , u32  ) ;
>    int (*nway_reset)(struct net_device * ) ;
>    u32 (*get_link)(struct net_device * ) ;
>    int (*get_eeprom_len)(struct net_device * ) ;
>    int (*get_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
>    int (*set_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
>    int (*get_coalesce)(struct net_device * , struct ethtool_coalesce * ) ;
>    int (*set_coalesce)(struct net_device * , struct ethtool_coalesce * ) ;
>    void (*get_ringparam)(struct net_device * , struct ethtool_ringparam * ) ;
>    int (*set_ringparam)(struct net_device * , struct ethtool_ringparam * ) ;
>    void (*get_pauseparam)(struct net_device * , struct ethtool_pauseparam * ) ;
>    int (*set_pauseparam)(struct net_device * , struct ethtool_pauseparam * ) ;
>    u32 (*get_rx_csum)(struct net_device * ) ;
>    int (*set_rx_csum)(struct net_device * , u32  ) ;
>    u32 (*get_tx_csum)(struct net_device * ) ;
>    int (*set_tx_csum)(struct net_device * , u32  ) ;
>    u32 (*get_sg)(struct net_device * ) ;
>    int (*set_sg)(struct net_device * , u32  ) ;
>    u32 (*get_tso)(struct net_device * ) ;
>    int (*set_tso)(struct net_device * , u32  ) ;
>    void (*self_test)(struct net_device * , struct ethtool_test * , u64 * ) ;
>    void (*get_strings)(struct net_device * , u32 stringset , u8 * ) ;
>    int (*phys_id)(struct net_device * , u32  ) ;
>    void (*get_ethtool_stats)(struct net_device * , struct ethtool_stats * , u64 * ) ;
>    int (*begin)(struct net_device * ) ;
>    void (*complete)(struct net_device * ) ;
>    u32 (*get_ufo)(struct net_device * ) ;
>    int (*set_ufo)(struct net_device * , u32  ) ;
>    u32 (*get_flags)(struct net_device * ) ;
>    int (*set_flags)(struct net_device * , u32  ) ;
>    u32 (*get_priv_flags)(struct net_device * ) ;
>    int (*set_priv_flags)(struct net_device * , u32  ) ;
>    int (*get_sset_count)(struct net_device * , int  ) ;
>    int (*self_test_count)(struct net_device * ) ;
>    int (*get_stats_count)(struct net_device * ) ;
>    int (*get_rxnfc)(struct net_device * , struct ethtool_rxnfc * , void * ) ;
>    int (*set_rxnfc)(struct net_device * , struct ethtool_rxnfc * ) ;
>    int (*flash_device)(struct net_device * , struct ethtool_flash * ) ;
> };
> #line 5 "include/net/netns/core.h"
> struct prot_inuse;
> #line 7 "include/net/netns/core.h"
> struct netns_core {
>    struct ctl_table_header *sysctl_hdr ;
>    int sysctl_somaxconn ;
>    struct prot_inuse *inuse ;
> };
> #line 18 "include/linux/snmp.h"
> enum __anonenum_208 {
>     IPSTATS_MIB_NUM = 0,
>     IPSTATS_MIB_INPKTS = 1,
>     IPSTATS_MIB_INHDRERRORS = 2,
>     IPSTATS_MIB_INTOOBIGERRORS = 3,
>     IPSTATS_MIB_INNOROUTES = 4,
>     IPSTATS_MIB_INADDRERRORS = 5,
>     IPSTATS_MIB_INUNKNOWNPROTOS = 6,
>     IPSTATS_MIB_INTRUNCATEDPKTS = 7,
>     IPSTATS_MIB_INDISCARDS = 8,
>     IPSTATS_MIB_INDELIVERS = 9,
>     IPSTATS_MIB_OUTFORWDATAGRAMS = 10,
>     IPSTATS_MIB_OUTPKTS = 11,
>     IPSTATS_MIB_OUTDISCARDS = 12,
>     IPSTATS_MIB_OUTNOROUTES = 13,
>     IPSTATS_MIB_REASMTIMEOUT = 14,
>     IPSTATS_MIB_REASMREQDS = 15,
>     IPSTATS_MIB_REASMOKS = 16,
>     IPSTATS_MIB_REASMFAILS = 17,
>     IPSTATS_MIB_FRAGOKS = 18,
>     IPSTATS_MIB_FRAGFAILS = 19,
>     IPSTATS_MIB_FRAGCREATES = 20,
>     IPSTATS_MIB_INMCASTPKTS = 21,
>     IPSTATS_MIB_OUTMCASTPKTS = 22,
>     IPSTATS_MIB_INBCASTPKTS = 23,
>     IPSTATS_MIB_OUTBCASTPKTS = 24,
>     IPSTATS_MIB_INOCTETS = 25,
>     IPSTATS_MIB_OUTOCTETS = 26,
>     IPSTATS_MIB_INMCASTOCTETS = 27,
>     IPSTATS_MIB_OUTMCASTOCTETS = 28,
>     IPSTATS_MIB_INBCASTOCTETS = 29,
>     IPSTATS_MIB_OUTBCASTOCTETS = 30,
>     __IPSTATS_MIB_MAX = 31
2604,2807c2173,2418
< #line 464
< struct net_bridge_port;
< #line 464
< struct macvlan_port;
< #line 464
< struct garp_port;
< #line 464
< struct rtnl_link_ops;
< #line 464 "include/linux/netdevice.h"
< struct net_device {
<    char name[16] ;
<    struct hlist_node name_hlist ;
<    char *ifalias ;
<    unsigned long mem_end ;
<    unsigned long mem_start ;
<    unsigned long base_addr ;
<    unsigned int irq ;
<    unsigned char if_port ;
<    unsigned char dma ;
<    unsigned long state ;
<    struct list_head dev_list ;
<    struct list_head napi_list ;
<    int (*init)(struct net_device *dev ) ;
<    unsigned long features ;
<    int ifindex ;
<    int iflink ;
<    struct net_device_stats *(*get_stats)(struct net_device *dev ) ;
<    struct net_device_stats stats ;
<    struct iw_handler_def  const  *wireless_handlers ;
<    struct iw_public_data *wireless_data ;
<    struct ethtool_ops  const  *ethtool_ops ;
<    struct header_ops  const  *header_ops ;
<    unsigned int flags ;
<    unsigned short gflags ;
<    unsigned short priv_flags ;
<    unsigned short padded ;
<    unsigned char operstate ;
<    unsigned char link_mode ;
<    unsigned int mtu ;
<    unsigned short type ;
<    unsigned short hard_header_len ;
<    unsigned short needed_headroom ;
<    unsigned short needed_tailroom ;
<    struct net_device *master ;
<    unsigned char perm_addr[32] ;
<    unsigned char addr_len ;
<    unsigned short dev_id ;
<    spinlock_t addr_list_lock ;
<    struct dev_addr_list *uc_list ;
<    int uc_count ;
<    int uc_promisc ;
<    struct dev_addr_list *mc_list ;
<    int mc_count ;
<    unsigned int promiscuity ;
<    unsigned int allmulti ;
<    void *dsa_ptr ;
<    void *atalk_ptr ;
<    void *ip_ptr ;
<    void *dn_ptr ;
<    void *ip6_ptr ;
<    void *ec_ptr ;
<    void *ax25_ptr ;
<    struct wireless_dev *ieee80211_ptr ;
<    unsigned long last_rx ;
<    unsigned char dev_addr[32] ;
<    unsigned char broadcast[32] ;
<    struct netdev_queue rx_queue ;
<    struct netdev_queue *_tx  __attribute__((__aligned__((1) <<  (7) ))) ;
<    unsigned int num_tx_queues ;
<    unsigned int real_num_tx_queues ;
<    unsigned long tx_queue_len ;
<    spinlock_t tx_global_lock ;
<    void *priv ;
<    int (*hard_start_xmit)(struct sk_buff *skb , struct net_device *dev ) ;
<    unsigned long trans_start ;
<    int watchdog_timeo ;
<    struct timer_list watchdog_timer ;
<    atomic_t refcnt  __attribute__((__aligned__((1) <<  (7) ))) ;
<    struct list_head todo_list ;
<    struct hlist_node index_hlist ;
<    struct net_device *link_watch_next ;
<    enum __anonenum_reg_state_206 reg_state ;
<    void (*uninit)(struct net_device *dev ) ;
<    void (*destructor)(struct net_device *dev ) ;
<    int (*open)(struct net_device *dev ) ;
<    int (*stop)(struct net_device *dev ) ;
<    void (*change_rx_flags)(struct net_device *dev , int flags ) ;
<    void (*set_rx_mode)(struct net_device *dev ) ;
<    void (*set_multicast_list)(struct net_device *dev ) ;
<    int (*set_mac_address)(struct net_device *dev , void *addr ) ;
<    int (*validate_addr)(struct net_device *dev ) ;
<    int (*do_ioctl)(struct net_device *dev , struct ifreq *ifr , int cmd ) ;
<    int (*set_config)(struct net_device *dev , struct ifmap *map ) ;
<    int (*change_mtu)(struct net_device *dev , int new_mtu ) ;
<    void (*tx_timeout)(struct net_device *dev ) ;
<    void (*vlan_rx_register)(struct net_device *dev , struct vlan_group *grp ) ;
<    void (*vlan_rx_add_vid)(struct net_device *dev , unsigned short vid ) ;
<    void (*vlan_rx_kill_vid)(struct net_device *dev , unsigned short vid ) ;
<    int (*neigh_setup)(struct net_device *dev , struct neigh_parms * ) ;
<    struct netpoll_info *npinfo ;
<    void (*poll_controller)(struct net_device *dev ) ;
<    u16 (*select_queue)(struct net_device *dev , struct sk_buff *skb ) ;
<    void *ml_priv ;
<    struct net_bridge_port *br_port ;
<    struct macvlan_port *macvlan_port ;
<    struct garp_port *garp_port ;
<    struct device dev ;
<    struct attribute_group *sysfs_groups[3] ;
<    struct rtnl_link_ops  const  *rtnl_link_ops ;
<    unsigned long vlan_features ;
<    unsigned int gso_max_size ;
< };
< #line 12 "include/linux/mod_devicetable.h"
< typedef unsigned long kernel_ulong_t;
< #line 17 "include/linux/mod_devicetable.h"
< struct pci_device_id {
<    __u32 vendor ;
<    __u32 device ;
<    __u32 subvendor ;
<    __u32 subdevice ;
<    __u32 class ;
<    __u32 class_mask ;
<    kernel_ulong_t driver_data ;
< };
< #line 385 "include/linux/mod_devicetable.h"
< struct i2c_device_id {
<    char name[20] ;
<    kernel_ulong_t driver_data  __attribute__((__aligned__(sizeof(kernel_ulong_t )))) ;
< };
< #line 42 "include/linux/i2c.h"
< struct i2c_msg;
< #line 43
< struct i2c_algorithm;
< #line 44
< struct i2c_adapter;
< #line 45
< struct i2c_client;
< #line 46
< struct i2c_driver;
< #line 47
< union i2c_smbus_data;
< #line 48
< struct i2c_board_info;
< #line 137
< struct i2c_client_address_data;
< #line 137 "include/linux/i2c.h"
< struct i2c_driver {
<    int id ;
<    unsigned int class ;
<    int (*attach_adapter)(struct i2c_adapter * ) ;
<    int (*detach_adapter)(struct i2c_adapter * ) ;
<    int (*detach_client)(struct i2c_client * ) ;
<    int (*probe)(struct i2c_client * , struct i2c_device_id  const  * ) ;
<    int (*remove)(struct i2c_client * ) ;
<    void (*shutdown)(struct i2c_client * ) ;
<    int (*suspend)(struct i2c_client * , pm_message_t mesg ) ;
<    int (*resume)(struct i2c_client * ) ;
<    int (*command)(struct i2c_client *client , unsigned int cmd , void *arg ) ;
<    struct device_driver driver ;
<    struct i2c_device_id  const  *id_table ;
<    int (*detect)(struct i2c_client * , int kind , struct i2c_board_info * ) ;
<    struct i2c_client_address_data  const  *address_data ;
<    struct list_head clients ;
< };
< #line 203 "include/linux/i2c.h"
< struct i2c_client {
<    unsigned short flags ;
<    unsigned short addr ;
<    char name[20] ;
<    struct i2c_adapter *adapter ;
<    struct i2c_driver *driver ;
<    struct device dev ;
<    int irq ;
<    struct list_head list ;
<    struct list_head detected ;
<    struct completion released ;
< };
< #line 257 "include/linux/i2c.h"
< struct i2c_board_info {
<    char type[20] ;
<    unsigned short flags ;
<    unsigned short addr ;
<    void *platform_data ;
<    int irq ;
< };
< #line 324 "include/linux/i2c.h"
< struct i2c_algorithm {
<    int (*master_xfer)(struct i2c_adapter *adap , struct i2c_msg *msgs , int num ) ;
<    int (*smbus_xfer)(struct i2c_adapter *adap , u16 addr , unsigned short flags ,
<                      char read_write , u8 command , int size , union i2c_smbus_data *data ) ;
<    u32 (*functionality)(struct i2c_adapter * ) ;
< };
< #line 345 "include/linux/i2c.h"
< struct i2c_adapter {
<    struct module *owner ;
<    unsigned int id ;
<    unsigned int class ;
<    struct i2c_algorithm  const  *algo ;
<    void *algo_data ;
<    int (*client_register)(struct i2c_client * ) ;
<    int (*client_unregister)(struct i2c_client * ) ;
<    u8 level ;
<    struct mutex bus_lock ;
<    struct mutex clist_lock ;
---
> #line 59
> enum __anonenum_209 {
>     ICMP_MIB_NUM = 0,
>     ICMP_MIB_INMSGS = 1,
>     ICMP_MIB_INERRORS = 2,
>     ICMP_MIB_INDESTUNREACHS = 3,
>     ICMP_MIB_INTIMEEXCDS = 4,
>     ICMP_MIB_INPARMPROBS = 5,
>     ICMP_MIB_INSRCQUENCHS = 6,
>     ICMP_MIB_INREDIRECTS = 7,
>     ICMP_MIB_INECHOS = 8,
>     ICMP_MIB_INECHOREPS = 9,
>     ICMP_MIB_INTIMESTAMPS = 10,
>     ICMP_MIB_INTIMESTAMPREPS = 11,
>     ICMP_MIB_INADDRMASKS = 12,
>     ICMP_MIB_INADDRMASKREPS = 13,
>     ICMP_MIB_OUTMSGS = 14,
>     ICMP_MIB_OUTERRORS = 15,
>     ICMP_MIB_OUTDESTUNREACHS = 16,
>     ICMP_MIB_OUTTIMEEXCDS = 17,
>     ICMP_MIB_OUTPARMPROBS = 18,
>     ICMP_MIB_OUTSRCQUENCHS = 19,
>     ICMP_MIB_OUTREDIRECTS = 20,
>     ICMP_MIB_OUTECHOS = 21,
>     ICMP_MIB_OUTECHOREPS = 22,
>     ICMP_MIB_OUTTIMESTAMPS = 23,
>     ICMP_MIB_OUTTIMESTAMPREPS = 24,
>     ICMP_MIB_OUTADDRMASKS = 25,
>     ICMP_MIB_OUTADDRMASKREPS = 26,
>     __ICMP_MIB_MAX = 27
> } ;
> #line 97
> enum __anonenum_210 {
>     ICMP6_MIB_NUM = 0,
>     ICMP6_MIB_INMSGS = 1,
>     ICMP6_MIB_INERRORS = 2,
>     ICMP6_MIB_OUTMSGS = 3,
>     __ICMP6_MIB_MAX = 4
> } ;
> #line 113
> enum __anonenum_211 {
>     TCP_MIB_NUM = 0,
>     TCP_MIB_RTOALGORITHM = 1,
>     TCP_MIB_RTOMIN = 2,
>     TCP_MIB_RTOMAX = 3,
>     TCP_MIB_MAXCONN = 4,
>     TCP_MIB_ACTIVEOPENS = 5,
>     TCP_MIB_PASSIVEOPENS = 6,
>     TCP_MIB_ATTEMPTFAILS = 7,
>     TCP_MIB_ESTABRESETS = 8,
>     TCP_MIB_CURRESTAB = 9,
>     TCP_MIB_INSEGS = 10,
>     TCP_MIB_OUTSEGS = 11,
>     TCP_MIB_RETRANSSEGS = 12,
>     TCP_MIB_INERRS = 13,
>     TCP_MIB_OUTRSTS = 14,
>     __TCP_MIB_MAX = 15
> } ;
> #line 138
> enum __anonenum_212 {
>     UDP_MIB_NUM = 0,
>     UDP_MIB_INDATAGRAMS = 1,
>     UDP_MIB_NOPORTS = 2,
>     UDP_MIB_INERRORS = 3,
>     UDP_MIB_OUTDATAGRAMS = 4,
>     UDP_MIB_RCVBUFERRORS = 5,
>     UDP_MIB_SNDBUFERRORS = 6,
>     __UDP_MIB_MAX = 7
> } ;
> #line 151
> enum __anonenum_213 {
>     LINUX_MIB_NUM = 0,
>     LINUX_MIB_SYNCOOKIESSENT = 1,
>     LINUX_MIB_SYNCOOKIESRECV = 2,
>     LINUX_MIB_SYNCOOKIESFAILED = 3,
>     LINUX_MIB_EMBRYONICRSTS = 4,
>     LINUX_MIB_PRUNECALLED = 5,
>     LINUX_MIB_RCVPRUNED = 6,
>     LINUX_MIB_OFOPRUNED = 7,
>     LINUX_MIB_OUTOFWINDOWICMPS = 8,
>     LINUX_MIB_LOCKDROPPEDICMPS = 9,
>     LINUX_MIB_ARPFILTER = 10,
>     LINUX_MIB_TIMEWAITED = 11,
>     LINUX_MIB_TIMEWAITRECYCLED = 12,
>     LINUX_MIB_TIMEWAITKILLED = 13,
>     LINUX_MIB_PAWSPASSIVEREJECTED = 14,
>     LINUX_MIB_PAWSACTIVEREJECTED = 15,
>     LINUX_MIB_PAWSESTABREJECTED = 16,
>     LINUX_MIB_DELAYEDACKS = 17,
>     LINUX_MIB_DELAYEDACKLOCKED = 18,
>     LINUX_MIB_DELAYEDACKLOST = 19,
>     LINUX_MIB_LISTENOVERFLOWS = 20,
>     LINUX_MIB_LISTENDROPS = 21,
>     LINUX_MIB_TCPPREQUEUED = 22,
>     LINUX_MIB_TCPDIRECTCOPYFROMBACKLOG = 23,
>     LINUX_MIB_TCPDIRECTCOPYFROMPREQUEUE = 24,
>     LINUX_MIB_TCPPREQUEUEDROPPED = 25,
>     LINUX_MIB_TCPHPHITS = 26,
>     LINUX_MIB_TCPHPHITSTOUSER = 27,
>     LINUX_MIB_TCPPUREACKS = 28,
>     LINUX_MIB_TCPHPACKS = 29,
>     LINUX_MIB_TCPRENORECOVERY = 30,
>     LINUX_MIB_TCPSACKRECOVERY = 31,
>     LINUX_MIB_TCPSACKRENEGING = 32,
>     LINUX_MIB_TCPFACKREORDER = 33,
>     LINUX_MIB_TCPSACKREORDER = 34,
>     LINUX_MIB_TCPRENOREORDER = 35,
>     LINUX_MIB_TCPTSREORDER = 36,
>     LINUX_MIB_TCPFULLUNDO = 37,
>     LINUX_MIB_TCPPARTIALUNDO = 38,
>     LINUX_MIB_TCPDSACKUNDO = 39,
>     LINUX_MIB_TCPLOSSUNDO = 40,
>     LINUX_MIB_TCPLOSS = 41,
>     LINUX_MIB_TCPLOSTRETRANSMIT = 42,
>     LINUX_MIB_TCPRENOFAILURES = 43,
>     LINUX_MIB_TCPSACKFAILURES = 44,
>     LINUX_MIB_TCPLOSSFAILURES = 45,
>     LINUX_MIB_TCPFASTRETRANS = 46,
>     LINUX_MIB_TCPFORWARDRETRANS = 47,
>     LINUX_MIB_TCPSLOWSTARTRETRANS = 48,
>     LINUX_MIB_TCPTIMEOUTS = 49,
>     LINUX_MIB_TCPRENORECOVERYFAIL = 50,
>     LINUX_MIB_TCPSACKRECOVERYFAIL = 51,
>     LINUX_MIB_TCPSCHEDULERFAILED = 52,
>     LINUX_MIB_TCPRCVCOLLAPSED = 53,
>     LINUX_MIB_TCPDSACKOLDSENT = 54,
>     LINUX_MIB_TCPDSACKOFOSENT = 55,
>     LINUX_MIB_TCPDSACKRECV = 56,
>     LINUX_MIB_TCPDSACKOFORECV = 57,
>     LINUX_MIB_TCPABORTONSYN = 58,
>     LINUX_MIB_TCPABORTONDATA = 59,
>     LINUX_MIB_TCPABORTONCLOSE = 60,
>     LINUX_MIB_TCPABORTONMEMORY = 61,
>     LINUX_MIB_TCPABORTONTIMEOUT = 62,
>     LINUX_MIB_TCPABORTONLINGER = 63,
>     LINUX_MIB_TCPABORTFAILED = 64,
>     LINUX_MIB_TCPMEMORYPRESSURES = 65,
>     LINUX_MIB_TCPSACKDISCARD = 66,
>     LINUX_MIB_TCPDSACKIGNOREDOLD = 67,
>     LINUX_MIB_TCPDSACKIGNOREDNOUNDO = 68,
>     LINUX_MIB_TCPSPURIOUSRTOS = 69,
>     LINUX_MIB_TCPMD5NOTFOUND = 70,
>     LINUX_MIB_TCPMD5UNEXPECTED = 71,
>     LINUX_MIB_SACKSHIFTED = 72,
>     LINUX_MIB_SACKMERGED = 73,
>     LINUX_MIB_SACKSHIFTFALLBACK = 74,
>     __LINUX_MIB_MAX = 75
> } ;
> #line 232
> enum __anonenum_214 {
>     LINUX_MIB_XFRMNUM = 0,
>     LINUX_MIB_XFRMINERROR = 1,
>     LINUX_MIB_XFRMINBUFFERERROR = 2,
>     LINUX_MIB_XFRMINHDRERROR = 3,
>     LINUX_MIB_XFRMINNOSTATES = 4,
>     LINUX_MIB_XFRMINSTATEPROTOERROR = 5,
>     LINUX_MIB_XFRMINSTATEMODEERROR = 6,
>     LINUX_MIB_XFRMINSTATESEQERROR = 7,
>     LINUX_MIB_XFRMINSTATEEXPIRED = 8,
>     LINUX_MIB_XFRMINSTATEMISMATCH = 9,
>     LINUX_MIB_XFRMINSTATEINVALID = 10,
>     LINUX_MIB_XFRMINTMPLMISMATCH = 11,
>     LINUX_MIB_XFRMINNOPOLS = 12,
>     LINUX_MIB_XFRMINPOLBLOCK = 13,
>     LINUX_MIB_XFRMINPOLERROR = 14,
>     LINUX_MIB_XFRMOUTERROR = 15,
>     LINUX_MIB_XFRMOUTBUNDLEGENERROR = 16,
>     LINUX_MIB_XFRMOUTBUNDLECHECKERROR = 17,
>     LINUX_MIB_XFRMOUTNOSTATES = 18,
>     LINUX_MIB_XFRMOUTSTATEPROTOERROR = 19,
>     LINUX_MIB_XFRMOUTSTATEMODEERROR = 20,
>     LINUX_MIB_XFRMOUTSTATESEQERROR = 21,
>     LINUX_MIB_XFRMOUTSTATEEXPIRED = 22,
>     LINUX_MIB_XFRMOUTPOLBLOCK = 23,
>     LINUX_MIB_XFRMOUTPOLDEAD = 24,
>     LINUX_MIB_XFRMOUTPOLERROR = 25,
>     __LINUX_MIB_XFRMMAX = 26
> } ;
> #line 72 "include/net/snmp.h"
> struct ipstats_mib {
>    unsigned long mibs[__IPSTATS_MIB_MAX] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 80 "include/net/snmp.h"
> struct icmp_mib {
>    unsigned long mibs[__ICMP_MIB_MAX + 1] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 85 "include/net/snmp.h"
> struct icmpmsg_mib {
>    unsigned long mibs[512] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 91 "include/net/snmp.h"
> struct icmpv6_mib {
>    unsigned long mibs[__ICMP6_MIB_MAX] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 96 "include/net/snmp.h"
> struct icmpv6msg_mib {
>    unsigned long mibs[512] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 103 "include/net/snmp.h"
> struct tcp_mib {
>    unsigned long mibs[__TCP_MIB_MAX] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 109 "include/net/snmp.h"
> struct udp_mib {
>    unsigned long mibs[__UDP_MIB_MAX] ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 115 "include/net/snmp.h"
> struct linux_mib {
>    unsigned long mibs[__LINUX_MIB_MAX] ;
> };
> #line 121 "include/net/snmp.h"
> struct linux_xfrm_mib {
>    unsigned long mibs[__LINUX_MIB_XFRMMAX] ;
> };
> #line 6 "include/net/netns/mib.h"
> struct netns_mib {
>    struct tcp_mib *tcp_statistics[2] ;
>    struct ipstats_mib *ip_statistics[2] ;
>    struct linux_mib *net_statistics[2] ;
>    struct udp_mib *udp_statistics[2] ;
>    struct udp_mib *udplite_statistics[2] ;
>    struct icmp_mib *icmp_statistics[2] ;
>    struct icmpmsg_mib *icmpmsg_statistics[2] ;
>    struct proc_dir_entry *proc_net_devsnmp6 ;
>    struct udp_mib *udp_stats_in6[2] ;
>    struct udp_mib *udplite_stats_in6[2] ;
>    struct ipstats_mib *ipv6_statistics[2] ;
>    struct icmpv6_mib *icmpv6_statistics[2] ;
>    struct icmpv6msg_mib *icmpv6msg_statistics[2] ;
>    struct linux_xfrm_mib *xfrm_statistics[2] ;
> };
> #line 8 "include/net/netns/unix.h"
> struct netns_unix {
>    int sysctl_max_dgram_qlen ;
>    struct ctl_table_header *ctl ;
> };
> #line 10 "include/net/netns/packet.h"
> struct netns_packet {
>    rwlock_t sklist_lock ;
>    struct hlist_head sklist ;
> };
> #line 4 "include/net/inet_frag.h"
> struct netns_frags {
>    int nqueues ;
>    atomic_t mem ;
>    struct list_head lru_list ;
2809,2834c2420,2421
<    int retries ;
<    struct device dev ;
<    int nr ;
<    struct list_head clients ;
<    char name[48] ;
<    struct completion dev_released ;
< };
< #line 403 "include/linux/i2c.h"
< struct i2c_client_address_data {
<    unsigned short const   *normal_i2c ;
<    unsigned short const   *probe ;
<    unsigned short const   *ignore ;
<    unsigned short const   * const  *forces ;
< };
< #line 511 "include/linux/i2c.h"
< struct i2c_msg {
<    __u16 addr ;
<    __u16 flags ;
<    __u16 len ;
<    __u8 *buf ;
< };
< #line 573 "include/linux/i2c.h"
< union i2c_smbus_data {
<    __u8 byte ;
<    __u16 word ;
<    __u8 block[32 + 2] ;
---
>    int high_thresh ;
>    int low_thresh ;
2835a2423,2566
> #line 11 "include/net/netns/ipv4.h"
> struct ipv4_devconf;
> #line 12
> struct fib_rules_ops;
> #line 16
> struct xt_table;
> #line 16
> struct mfc_cache;
> #line 16
> struct vif_device;
> #line 16 "include/net/netns/ipv4.h"
> struct netns_ipv4 {
>    struct ctl_table_header *forw_hdr ;
>    struct ctl_table_header *frags_hdr ;
>    struct ctl_table_header *ipv4_hdr ;
>    struct ctl_table_header *route_hdr ;
>    struct ipv4_devconf *devconf_all ;
>    struct ipv4_devconf *devconf_dflt ;
>    struct fib_rules_ops *rules_ops ;
>    struct hlist_head *fib_table_hash ;
>    struct sock *fibnl ;
>    struct sock **icmp_sk ;
>    struct sock *tcp_sock ;
>    struct netns_frags frags ;
>    struct xt_table *iptable_filter ;
>    struct xt_table *iptable_mangle ;
>    struct xt_table *iptable_raw ;
>    struct xt_table *arptable_filter ;
>    struct xt_table *iptable_security ;
>    struct xt_table *nat_table ;
>    struct hlist_head *nat_bysource ;
>    int nat_vmalloced ;
>    int sysctl_icmp_echo_ignore_all ;
>    int sysctl_icmp_echo_ignore_broadcasts ;
>    int sysctl_icmp_ignore_bogus_error_responses ;
>    int sysctl_icmp_ratelimit ;
>    int sysctl_icmp_ratemask ;
>    int sysctl_icmp_errors_use_inbound_ifaddr ;
>    int sysctl_rt_cache_rebuild_count ;
>    int current_rt_cache_rebuild_count ;
>    struct timer_list rt_secret_timer ;
>    atomic_t rt_genid ;
>    struct sock *mroute_sk ;
>    struct mfc_cache **mfc_cache_array ;
>    struct vif_device *vif_table ;
>    int maxvif ;
>    atomic_t cache_resolve_queue_len ;
>    int mroute_do_assert ;
>    int mroute_do_pim ;
>    int mroute_reg_vif_num ;
> };
> #line 10 "include/net/dst_ops.h"
> struct dst_ops {
>    unsigned short family ;
>    __be16 protocol ;
>    unsigned int gc_thresh ;
>    int (*gc)(struct dst_ops *ops ) ;
>    struct dst_entry *(*check)(struct dst_entry * , __u32 cookie ) ;
>    void (*destroy)(struct dst_entry * ) ;
>    void (*ifdown)(struct dst_entry * , struct net_device *dev , int how ) ;
>    struct dst_entry *(*negative_advice)(struct dst_entry * ) ;
>    void (*link_failure)(struct sk_buff * ) ;
>    void (*update_pmtu)(struct dst_entry *dst , u32 mtu ) ;
>    int (*local_out)(struct sk_buff *skb ) ;
>    atomic_t entries ;
>    struct kmem_cache *kmem_cachep ;
> };
> #line 13 "include/net/netns/ipv6.h"
> struct netns_sysctl_ipv6 {
>    struct ctl_table_header *table ;
>    struct ctl_table_header *frags_hdr ;
>    int bindv6only ;
>    int flush_delay ;
>    int ip6_rt_max_size ;
>    int ip6_rt_gc_min_interval ;
>    int ip6_rt_gc_timeout ;
>    int ip6_rt_gc_interval ;
>    int ip6_rt_gc_elasticity ;
>    int ip6_rt_mtu_expires ;
>    int ip6_rt_min_advmss ;
>    int icmpv6_time ;
> };
> #line 30
> struct ipv6_devconf;
> #line 30
> struct rt6_info;
> #line 30
> struct rt6_statistics;
> #line 30
> struct fib6_table;
> #line 30
> struct mfc6_cache;
> #line 30
> struct mif_device;
> #line 30 "include/net/netns/ipv6.h"
> struct netns_ipv6 {
>    struct netns_sysctl_ipv6 sysctl ;
>    struct ipv6_devconf *devconf_all ;
>    struct ipv6_devconf *devconf_dflt ;
>    struct netns_frags frags ;
>    struct xt_table *ip6table_filter ;
>    struct xt_table *ip6table_mangle ;
>    struct xt_table *ip6table_raw ;
>    struct xt_table *ip6table_security ;
>    struct rt6_info *ip6_null_entry ;
>    struct rt6_statistics *rt6_stats ;
>    struct timer_list ip6_fib_timer ;
>    struct hlist_head *fib_table_hash ;
>    struct fib6_table *fib6_main_tbl ;
>    struct dst_ops ip6_dst_ops ;
>    unsigned int ip6_rt_gc_expire ;
>    unsigned long ip6_rt_last_gc ;
>    struct rt6_info *ip6_prohibit_entry ;
>    struct rt6_info *ip6_blk_hole_entry ;
>    struct fib6_table *fib6_local_tbl ;
>    struct fib_rules_ops *fib6_rules_ops ;
>    struct sock **icmp_sk ;
>    struct sock *ndisc_sk ;
>    struct sock *tcp_sk ;
>    struct sock *igmp_sk ;
>    struct sock *mroute6_sk ;
>    struct mfc6_cache **mfc6_cache_array ;
>    struct mif_device *vif6_table ;
>    int maxvif ;
>    atomic_t cache_resolve_queue_len ;
>    int mroute_do_assert ;
>    int mroute_do_pim ;
>    int mroute_reg_vif_num ;
> };
> #line 6 "include/net/netns/dccp.h"
> struct netns_dccp {
>    struct sock *v4_ctl_sk ;
>    struct sock *v6_ctl_sk ;
> };
> #line 53 "include/linux/netfilter.h"
> enum __anonenum_217 {
>     NFPROTO_UNSPEC = 0,
>     NFPROTO_IPV4 = 2,
>     NFPROTO_ARP = 3,
>     NFPROTO_BRIDGE = 7,
>     NFPROTO_IPV6 = 10,
>     NFPROTO_DECNET = 12,
>     NFPROTO_NUMPROTO = 13
> } ;
2837a2569,2572
> #line 12
> struct path;
> #line 13
> struct vfsmount;
2844,2847c2579,2580
< #line 78
< struct dcookie_struct;
< #line 82 "include/linux/dcache.h"
< union __anonunion_d_u_210 {
---
> #line 89 "include/linux/dcache.h"
> union __anonunion_d_u_227 {
2851c2584
< #line 82
---
> #line 89
2853c2586
< #line 82
---
> #line 89
2855c2588
< #line 82 "include/linux/dcache.h"
---
> #line 89 "include/linux/dcache.h"
2859a2593
>    int d_mounted ;
2865c2599
<    union __anonunion_d_u_210 d_u ;
---
>    union __anonunion_d_u_227 d_u ;
2869c2603
<    struct dentry_operations *d_op ;
---
>    struct dentry_operations  const  *d_op ;
2872,2874c2606
<    struct dcookie_struct *d_cookie ;
<    int d_mounted ;
<    unsigned char d_iname[36] ;
---
>    unsigned char d_iname[32] ;
2876c2608
< #line 129 "include/linux/dcache.h"
---
> #line 134 "include/linux/dcache.h"
2885a2618,2622
> #line 7 "include/linux/path.h"
> struct path {
>    struct vfsmount *mnt ;
>    struct dentry *dentry ;
> };
2894c2631,2665
< #line 14 "include/linux/fiemap.h"
---
> #line 6 "include/linux/pid.h"
> enum pid_type {
>     PIDTYPE_PID = 0,
>     PIDTYPE_PGID = 1,
>     PIDTYPE_SID = 2,
>     PIDTYPE_MAX = 3
> } ;
> #line 50
> struct pid_namespace;
> #line 50 "include/linux/pid.h"
> struct upid {
>    int nr ;
>    struct pid_namespace *ns ;
>    struct hlist_node pid_chain ;
> };
> #line 57 "include/linux/pid.h"
> struct pid {
>    atomic_t count ;
>    unsigned int level ;
>    struct hlist_head tasks[PIDTYPE_MAX] ;
>    struct rcu_head rcu ;
>    struct upid numbers[1] ;
> };
> #line 69 "include/linux/pid.h"
> struct pid_link {
>    struct hlist_node node ;
>    struct pid *pid ;
> };
> #line 99 "include/linux/capability.h"
> struct kernel_cap_struct {
>    __u32 cap[2] ;
> };
> #line 99 "include/linux/capability.h"
> typedef struct kernel_cap_struct kernel_cap_t;
> #line 16 "include/linux/fiemap.h"
2903c2674
< #line 303 "include/linux/fs.h"
---
> #line 384 "include/linux/fs.h"
2905c2676
< #line 310
---
> #line 391
2907c2678,2680
< #line 355 "include/linux/fs.h"
---
> #line 394
> struct cred;
> #line 446 "include/linux/fs.h"
2919c2692
< #line 100 "include/linux/quota.h"
---
> #line 106 "include/linux/quota.h"
2931c2704
< #line 121 "include/linux/quota.h"
---
> #line 127 "include/linux/quota.h"
2985,2995c2758,2760
< #line 21 "include/linux/dqblk_v1.h"
< struct v1_mem_dqinfo {
< 
< };
< #line 20 "include/linux/dqblk_v2.h"
< struct v2_mem_dqinfo {
<    unsigned int dqi_blocks ;
<    unsigned int dqi_free_blk ;
<    unsigned int dqi_free_entry ;
< };
< #line 176 "include/linux/quota.h"
---
> #line 17 "include/linux/dqblk_qtree.h"
> struct dquot;
> #line 182 "include/linux/quota.h"
2997,2999c2762,2764
< #line 177 "include/linux/quota.h"
< typedef __u64 qsize_t;
< #line 191 "include/linux/quota.h"
---
> #line 183 "include/linux/quota.h"
> typedef long long qsize_t;
> #line 197 "include/linux/quota.h"
3001,3002c2766,2767
<    __u32 dqb_bhardlimit ;
<    __u32 dqb_bsoftlimit ;
---
>    qsize_t dqb_bhardlimit ;
>    qsize_t dqb_bsoftlimit ;
3004,3006c2769,2772
<    __u32 dqb_ihardlimit ;
<    __u32 dqb_isoftlimit ;
<    __u32 dqb_curinodes ;
---
>    qsize_t dqb_rsvspace ;
>    qsize_t dqb_ihardlimit ;
>    qsize_t dqb_isoftlimit ;
>    qsize_t dqb_curinodes ;
3010c2776
< #line 205
---
> #line 212
3012,3017c2778
< #line 207 "include/linux/quota.h"
< union __anonunion_u_213 {
<    struct v1_mem_dqinfo v1_i ;
<    struct v2_mem_dqinfo v2_i ;
< };
< #line 207 "include/linux/quota.h"
---
> #line 214 "include/linux/quota.h"
3027c2788
<    union __anonunion_u_213 u ;
---
>    void *dqi_priv ;
3029c2790
< #line 255 "include/linux/quota.h"
---
> #line 264 "include/linux/quota.h"
3045c2806
< #line 277 "include/linux/quota.h"
---
> #line 284 "include/linux/quota.h"
3055c2816
< #line 288 "include/linux/quota.h"
---
> #line 295 "include/linux/quota.h"
3060c2821
<    int (*alloc_inode)(struct inode  const  * , unsigned long  ) ;
---
>    int (*alloc_inode)(struct inode  const  * , qsize_t  ) ;
3062c2823
<    int (*free_inode)(struct inode  const  * , unsigned long  ) ;
---
>    int (*free_inode)(struct inode  const  * , qsize_t  ) ;
3064a2826,2827
>    struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
>    void (*destroy_dquot)(struct dquot * ) ;
3068a2832,2835
>    int (*reserve_space)(struct inode * , qsize_t  , int  ) ;
>    int (*claim_space)(struct inode * , qsize_t  ) ;
>    void (*release_rsv)(struct inode * , qsize_t  ) ;
>    qsize_t (*get_reserved_space)(struct inode * ) ;
3070c2837
< #line 304 "include/linux/quota.h"
---
> #line 321 "include/linux/quota.h"
3084c2851
< #line 318 "include/linux/quota.h"
---
> #line 335 "include/linux/quota.h"
3091c2858
< #line 332 "include/linux/quota.h"
---
> #line 379 "include/linux/quota.h"
3101,3102c2868,2869
< #line 460 "include/linux/fs.h"
< union __anonunion_arg_215 {
---
> #line 554 "include/linux/fs.h"
> union __anonunion_arg_234 {
3106,3107c2873,2874
< #line 460 "include/linux/fs.h"
< struct __anonstruct_read_descriptor_t_214 {
---
> #line 554 "include/linux/fs.h"
> struct __anonstruct_read_descriptor_t_233 {
3110c2877
<    union __anonunion_arg_215 arg ;
---
>    union __anonunion_arg_234 arg ;
3113,3115c2880,2882
< #line 460 "include/linux/fs.h"
< typedef struct __anonstruct_read_descriptor_t_214 read_descriptor_t;
< #line 473 "include/linux/fs.h"
---
> #line 554 "include/linux/fs.h"
> typedef struct __anonstruct_read_descriptor_t_233 read_descriptor_t;
> #line 567 "include/linux/fs.h"
3124,3125d2890
<    int (*prepare_write)(struct file * , struct page * , unsigned int  , unsigned int  ) ;
<    int (*commit_write)(struct file * , struct page * , unsigned int  , unsigned int  ) ;
3139a2905
>    int (*error_remove_page)(struct address_space * , struct page * ) ;
3141c2907,2909
< #line 530 "include/linux/fs.h"
---
> #line 617
> struct backing_dev_info;
> #line 618 "include/linux/fs.h"
3160c2928
< #line 554
---
> #line 642
3162c2930
< #line 554
---
> #line 642
3164c2932
< #line 554 "include/linux/fs.h"
---
> #line 642 "include/linux/fs.h"
3167a2936
>    struct super_block *bd_super ;
3170d2938
<    struct semaphore bd_mount_sem ;
3182d2949
<    struct backing_dev_info *bd_inode_backing_dev_info ;
3183a2951,2952
>    int bd_fsfreeze_count ;
>    struct mutex bd_fsfreeze_mutex ;
3185c2954,2956
< #line 624
---
> #line 716
> struct posix_acl;
> #line 719
3187c2958,2960
< #line 624
---
> #line 719
> struct file_operations;
> #line 719
3189c2962
< #line 624
---
> #line 719
3191,3192c2964,2965
< #line 624 "include/linux/fs.h"
< union __anonunion____missing_field_name_216 {
---
> #line 719 "include/linux/fs.h"
> union __anonunion____missing_field_name_235 {
3197,3199c2970
< #line 624
< struct dnotify_struct;
< #line 624 "include/linux/fs.h"
---
> #line 719 "include/linux/fs.h"
3216d2986
<    unsigned int i_blkbits ;
3217a2988
>    unsigned int i_blkbits ;
3231,3232c3002
<    union __anonunion____missing_field_name_216 __annonCompField22 ;
<    int i_cindex ;
---
>    union __anonunion____missing_field_name_235 __annonCompField27 ;
3234,3235c3004,3005
<    unsigned long i_dnotify_mask ;
<    struct dnotify_struct *i_dnotify ;
---
>    __u32 i_fsnotify_mask ;
>    struct hlist_head i_fsnotify_mark_entries ;
3242a3013,3014
>    struct posix_acl *i_acl ;
>    struct posix_acl *i_default_acl ;
3245c3017
< #line 779 "include/linux/fs.h"
---
> #line 874 "include/linux/fs.h"
3254c3026
< #line 790 "include/linux/fs.h"
---
> #line 885 "include/linux/fs.h"
3260c3032
<    int mmap_miss ;
---
>    unsigned int mmap_miss ;
3263,3264c3035,3036
< #line 813 "include/linux/fs.h"
< union __anonunion_f_u_217 {
---
> #line 908 "include/linux/fs.h"
> union __anonunion_f_u_236 {
3268c3040
< #line 813 "include/linux/fs.h"
---
> #line 908 "include/linux/fs.h"
3270c3042
<    union __anonunion_f_u_217 f_u ;
---
>    union __anonunion_f_u_236 f_u ;
3272a3045
>    spinlock_t f_lock ;
3275c3048
<    mode_t f_mode ;
---
>    fmode_t f_mode ;
3278,3279c3051
<    unsigned int f_uid ;
<    unsigned int f_gid ;
---
>    struct cred  const  *f_cred ;
3285d3056
<    spinlock_t f_ep_lock ;
3289c3060,3062
< #line 932 "include/linux/fs.h"
---
> #line 1027
> struct files_struct;
> #line 1027 "include/linux/fs.h"
3291c3064
< #line 934 "include/linux/fs.h"
---
> #line 1029 "include/linux/fs.h"
3296c3069
< #line 939 "include/linux/fs.h"
---
> #line 1034 "include/linux/fs.h"
3321,3322c3094,3095
< #line 953 "include/linux/fs.h"
< struct __anonstruct_afs_219 {
---
> #line 1056 "include/linux/fs.h"
> struct __anonstruct_afs_238 {
3326,3327c3099,3100
< #line 953 "include/linux/fs.h"
< union __anonunion_fl_u_218 {
---
> #line 1056 "include/linux/fs.h"
> union __anonunion_fl_u_237 {
3330c3103
<    struct __anonstruct_afs_219 afs ;
---
>    struct __anonstruct_afs_238 afs ;
3332c3105
< #line 953 "include/linux/fs.h"
---
> #line 1056 "include/linux/fs.h"
3348,3350c3121,3123
<    struct file_lock_operations *fl_ops ;
<    struct lock_manager_operations *fl_lmops ;
<    union __anonunion_fl_u_218 fl_u ;
---
>    struct file_lock_operations  const  *fl_ops ;
>    struct lock_manager_operations  const  *fl_lmops ;
>    union __anonunion_fl_u_237 fl_u ;
3352c3125
< #line 1032 "include/linux/fs.h"
---
> #line 1281 "include/linux/fs.h"
3359c3132
< #line 1067
---
> #line 1316
3361c3134
< #line 1067
---
> #line 1316
3363c3136
< #line 1067
---
> #line 1316
3365c3138
< #line 1067
---
> #line 1316
3367c3140
< #line 1067 "include/linux/fs.h"
---
> #line 1316 "include/linux/fs.h"
3374c3147
<    unsigned long long s_maxbytes ;
---
>    loff_t s_maxbytes ;
3377,3378c3150,3151
<    struct dquot_operations *dq_op ;
<    struct quotactl_ops *s_qcop ;
---
>    struct dquot_operations  const  *dq_op ;
>    struct quotactl_ops  const  *s_qcop ;
3386,3387c3159
<    int s_syncing ;
<    int s_need_sync_fs ;
---
>    int s_need_sync ;
3392,3394d3163
<    struct list_head s_dirty ;
<    struct list_head s_io ;
<    struct list_head s_more_io ;
3399a3169
>    struct backing_dev_info *s_bdi ;
3406a3177
>    fmode_t s_mode ;
3412c3183
< #line 1189 "include/linux/fs.h"
---
> #line 1435 "include/linux/fs.h"
3419c3190
< #line 1254 "include/linux/fs.h"
---
> #line 1482 "include/linux/fs.h"
3448d3218
<    int (*dir_notify)(struct file *filp , unsigned long arg ) ;
3456c3226
< #line 1284 "include/linux/fs.h"
---
> #line 1511 "include/linux/fs.h"
3471a3242
>    int (*check_acl)(struct inode * , int  ) ;
3482c3253
< #line 1327 "include/linux/fs.h"
---
> #line 1555 "include/linux/fs.h"
3493,3494c3264,3265
<    void (*write_super_lockfs)(struct super_block * ) ;
<    void (*unlockfs)(struct super_block * ) ;
---
>    int (*freeze_fs)(struct super_block * ) ;
>    int (*unfreeze_fs)(struct super_block * ) ;
3503a3275
>    int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
3505c3277
< #line 1509 "include/linux/fs.h"
---
> #line 1738 "include/linux/fs.h"
3520a3293,4575
> #line 2197
> struct bio;
> #line 46 "include/linux/proc_fs.h"
> typedef int read_proc_t(char *page , char **start , off_t off , int count , int *eof ,
>                         void *data );
> #line 48 "include/linux/proc_fs.h"
> typedef int write_proc_t(struct file *file , char const   *buffer , unsigned long count ,
>                          void *data );
> #line 51 "include/linux/proc_fs.h"
> struct proc_dir_entry {
>    unsigned int low_ino ;
>    unsigned short namelen ;
>    char const   *name ;
>    mode_t mode ;
>    nlink_t nlink ;
>    uid_t uid ;
>    gid_t gid ;
>    loff_t size ;
>    struct inode_operations  const  *proc_iops ;
>    struct file_operations  const  *proc_fops ;
>    struct proc_dir_entry *next ;
>    struct proc_dir_entry *parent ;
>    struct proc_dir_entry *subdir ;
>    void *data ;
>    read_proc_t *read_proc ;
>    write_proc_t *write_proc ;
>    atomic_t count ;
>    int pde_users ;
>    spinlock_t pde_unload_lock ;
>    struct completion *pde_unload_completion ;
>    struct list_head pde_openers ;
> };
> #line 7 "include/net/netns/x_tables.h"
> struct ebt_table;
> #line 9 "include/net/netns/x_tables.h"
> struct netns_xt {
>    struct list_head tables[NFPROTO_NUMPROTO] ;
>    struct ebt_table *broute_table ;
>    struct ebt_table *frame_filter ;
>    struct ebt_table *frame_nat ;
> };
> #line 17 "include/linux/list_nulls.h"
> struct hlist_nulls_node;
> #line 17 "include/linux/list_nulls.h"
> struct hlist_nulls_head {
>    struct hlist_nulls_node *first ;
> };
> #line 21 "include/linux/list_nulls.h"
> struct hlist_nulls_node {
>    struct hlist_nulls_node *next ;
>    struct hlist_nulls_node **pprev ;
> };
> #line 11 "include/net/netns/conntrack.h"
> struct ip_conntrack_stat;
> #line 11 "include/net/netns/conntrack.h"
> struct netns_ct {
>    atomic_t count ;
>    unsigned int expect_count ;
>    struct hlist_nulls_head *hash ;
>    struct hlist_head *expect_hash ;
>    struct hlist_nulls_head unconfirmed ;
>    struct hlist_nulls_head dying ;
>    struct ip_conntrack_stat *stat ;
>    int sysctl_events ;
>    unsigned int sysctl_events_retry_timeout ;
>    int sysctl_acct ;
>    int sysctl_checksum ;
>    unsigned int sysctl_log_invalid ;
>    struct ctl_table_header *sysctl_header ;
>    struct ctl_table_header *acct_sysctl_header ;
>    struct ctl_table_header *event_sysctl_header ;
>    int hash_vmalloc ;
>    int expect_vmalloc ;
> };
> #line 120 "include/linux/xfrm.h"
> enum __anonenum_244 {
>     XFRM_POLICY_IN = 0,
>     XFRM_POLICY_OUT = 1,
>     XFRM_POLICY_FWD = 2,
>     XFRM_POLICY_MASK = 3,
>     XFRM_POLICY_MAX = 3
> } ;
> #line 11 "include/net/netns/xfrm.h"
> struct xfrm_policy_hash {
>    struct hlist_head *table ;
>    unsigned int hmask ;
> };
> #line 16 "include/net/netns/xfrm.h"
> struct netns_xfrm {
>    struct list_head state_all ;
>    struct hlist_head *state_bydst ;
>    struct hlist_head *state_bysrc ;
>    struct hlist_head *state_byspi ;
>    unsigned int state_hmask ;
>    unsigned int state_num ;
>    struct work_struct state_hash_work ;
>    struct hlist_head state_gc_list ;
>    struct work_struct state_gc_work ;
>    wait_queue_head_t km_waitq ;
>    struct list_head policy_all ;
>    struct hlist_head *policy_byidx ;
>    unsigned int policy_idx_hmask ;
>    struct hlist_head policy_inexact[XFRM_POLICY_MAX * 2] ;
>    struct xfrm_policy_hash policy_bydst[XFRM_POLICY_MAX * 2] ;
>    unsigned int policy_count[XFRM_POLICY_MAX * 2] ;
>    struct work_struct policy_hash_work ;
>    struct sock *nlsk ;
>    u32 sysctl_aevent_etime ;
>    u32 sysctl_aevent_rseqth ;
>    int sysctl_larval_drop ;
>    u32 sysctl_acq_expires ;
>    struct ctl_table_header *sysctl_hdr ;
> };
> #line 28 "include/net/net_namespace.h"
> struct net_generic;
> #line 31 "include/net/net_namespace.h"
> struct net {
>    atomic_t count ;
>    struct list_head list ;
>    struct work_struct work ;
>    struct proc_dir_entry *proc_net ;
>    struct proc_dir_entry *proc_net_stat ;
>    struct ctl_table_set sysctls ;
>    struct net_device *loopback_dev ;
>    struct list_head dev_base_head ;
>    struct hlist_head *dev_name_head ;
>    struct hlist_head *dev_index_head ;
>    struct list_head rules_ops ;
>    spinlock_t rules_mod_lock ;
>    struct sock *rtnl ;
>    struct sock *genl_sock ;
>    struct netns_core core ;
>    struct netns_mib mib ;
>    struct netns_packet packet ;
>    struct netns_unix unx ;
>    struct netns_ipv4 ipv4 ;
>    struct netns_ipv6 ipv6 ;
>    struct netns_dccp dccp ;
>    struct netns_xt xt ;
>    struct netns_ct ct ;
>    struct netns_xfrm xfrm ;
>    struct sk_buff_head wext_nlevents ;
>    struct net_generic *gen ;
> };
> #line 16 "include/linux/seq_file.h"
> struct seq_file {
>    char *buf ;
>    size_t size ;
>    size_t from ;
>    size_t count ;
>    loff_t index ;
>    loff_t read_pos ;
>    u64 version ;
>    struct mutex lock ;
>    struct seq_operations  const  *op ;
>    void *private ;
> };
> #line 29 "include/linux/seq_file.h"
> struct seq_operations {
>    void *(*start)(struct seq_file *m , loff_t *pos ) ;
>    void (*stop)(struct seq_file *m , void *v ) ;
>    void *(*next)(struct seq_file *m , void *v , loff_t *pos ) ;
>    int (*show)(struct seq_file *m , void *v ) ;
> };
> #line 27 "include/net/dcbnl.h"
> struct dcbnl_rtnl_ops {
>    u8 (*getstate)(struct net_device * ) ;
>    u8 (*setstate)(struct net_device * , u8  ) ;
>    void (*getpermhwaddr)(struct net_device * , u8 * ) ;
>    void (*setpgtccfgtx)(struct net_device * , int  , u8  , u8  , u8  , u8  ) ;
>    void (*setpgbwgcfgtx)(struct net_device * , int  , u8  ) ;
>    void (*setpgtccfgrx)(struct net_device * , int  , u8  , u8  , u8  , u8  ) ;
>    void (*setpgbwgcfgrx)(struct net_device * , int  , u8  ) ;
>    void (*getpgtccfgtx)(struct net_device * , int  , u8 * , u8 * , u8 * , u8 * ) ;
>    void (*getpgbwgcfgtx)(struct net_device * , int  , u8 * ) ;
>    void (*getpgtccfgrx)(struct net_device * , int  , u8 * , u8 * , u8 * , u8 * ) ;
>    void (*getpgbwgcfgrx)(struct net_device * , int  , u8 * ) ;
>    void (*setpfccfg)(struct net_device * , int  , u8  ) ;
>    void (*getpfccfg)(struct net_device * , int  , u8 * ) ;
>    u8 (*setall)(struct net_device * ) ;
>    u8 (*getcap)(struct net_device * , int  , u8 * ) ;
>    u8 (*getnumtcs)(struct net_device * , int  , u8 * ) ;
>    u8 (*setnumtcs)(struct net_device * , int  , u8  ) ;
>    u8 (*getpfcstate)(struct net_device * ) ;
>    void (*setpfcstate)(struct net_device * , u8  ) ;
>    void (*getbcncfg)(struct net_device * , int  , u32 * ) ;
>    void (*setbcncfg)(struct net_device * , int  , u32  ) ;
>    void (*getbcnrp)(struct net_device * , int  , u8 * ) ;
>    void (*setbcnrp)(struct net_device * , int  , u8  ) ;
>    u8 (*setapp)(struct net_device * , u8  , u16  , u8  ) ;
>    u8 (*getapp)(struct net_device * , u8  , u16  ) ;
> };
> #line 53 "include/linux/netdevice.h"
> struct vlan_group;
> #line 54
> struct netpoll_info;
> #line 56
> struct wireless_dev;
> #line 83
> enum netdev_tx {
>     NETDEV_TX_OK = 0,
>     NETDEV_TX_BUSY = 1,
>     NETDEV_TX_LOCKED = -1
> } ;
> #line 88 "include/linux/netdevice.h"
> typedef enum netdev_tx netdev_tx_t;
> #line 128 "include/linux/netdevice.h"
> struct net_device_stats {
>    unsigned long rx_packets ;
>    unsigned long tx_packets ;
>    unsigned long rx_bytes ;
>    unsigned long tx_bytes ;
>    unsigned long rx_errors ;
>    unsigned long tx_errors ;
>    unsigned long rx_dropped ;
>    unsigned long tx_dropped ;
>    unsigned long multicast ;
>    unsigned long collisions ;
>    unsigned long rx_length_errors ;
>    unsigned long rx_over_errors ;
>    unsigned long rx_crc_errors ;
>    unsigned long rx_frame_errors ;
>    unsigned long rx_fifo_errors ;
>    unsigned long rx_missed_errors ;
>    unsigned long tx_aborted_errors ;
>    unsigned long tx_carrier_errors ;
>    unsigned long tx_fifo_errors ;
>    unsigned long tx_heartbeat_errors ;
>    unsigned long tx_window_errors ;
>    unsigned long rx_compressed ;
>    unsigned long tx_compressed ;
> };
> #line 178
> struct neighbour;
> #line 179
> struct neigh_parms;
> #line 192 "include/linux/netdevice.h"
> struct dev_addr_list {
>    struct dev_addr_list *next ;
>    u8 da_addr[32] ;
>    u8 da_addrlen ;
>    u8 da_synced ;
>    int da_users ;
>    int da_gusers ;
> };
> #line 225 "include/linux/netdevice.h"
> struct netdev_hw_addr_list {
>    struct list_head list ;
>    int count ;
> };
> #line 230 "include/linux/netdevice.h"
> struct hh_cache {
>    struct hh_cache *hh_next ;
>    atomic_t hh_refcnt ;
>    __be16 hh_type  __attribute__((__aligned__((1) <<  (6) ))) ;
>    u16 hh_len ;
>    int (*hh_output)(struct sk_buff *skb ) ;
>    seqlock_t hh_lock ;
>    unsigned long hh_data[(unsigned long )((128 + (16 - 1)) & ~ (16 - 1)) / sizeof(long )] ;
> };
> #line 276 "include/linux/netdevice.h"
> struct header_ops {
>    int (*create)(struct sk_buff *skb , struct net_device *dev , unsigned short type ,
>                  void const   *daddr , void const   *saddr , unsigned int len ) ;
>    int (*parse)(struct sk_buff  const  *skb , unsigned char *haddr ) ;
>    int (*rebuild)(struct sk_buff *skb ) ;
>    int (*cache)(struct neighbour  const  *neigh , struct hh_cache *hh ) ;
>    void (*cache_update)(struct hh_cache *hh , struct net_device  const  *dev , unsigned char const   *haddr ) ;
> };
> #line 466
> struct Qdisc;
> #line 466 "include/linux/netdevice.h"
> struct netdev_queue {
>    struct net_device *dev ;
>    struct Qdisc *qdisc ;
>    unsigned long state ;
>    struct Qdisc *qdisc_sleeping ;
>    spinlock_t _xmit_lock  __attribute__((__aligned__((1) <<  (6) ))) ;
>    int xmit_lock_owner ;
>    unsigned long trans_start ;
>    unsigned long tx_bytes ;
>    unsigned long tx_packets ;
>    unsigned long tx_dropped ;
> } __attribute__((__aligned__((1) <<  (6) ))) ;
> #line 582 "include/linux/netdevice.h"
> struct net_device_ops {
>    int (*ndo_init)(struct net_device *dev ) ;
>    void (*ndo_uninit)(struct net_device *dev ) ;
>    int (*ndo_open)(struct net_device *dev ) ;
>    int (*ndo_stop)(struct net_device *dev ) ;
>    netdev_tx_t (*ndo_start_xmit)(struct sk_buff *skb , struct net_device *dev ) ;
>    u16 (*ndo_select_queue)(struct net_device *dev , struct sk_buff *skb ) ;
>    void (*ndo_change_rx_flags)(struct net_device *dev , int flags ) ;
>    void (*ndo_set_rx_mode)(struct net_device *dev ) ;
>    void (*ndo_set_multicast_list)(struct net_device *dev ) ;
>    int (*ndo_set_mac_address)(struct net_device *dev , void *addr ) ;
>    int (*ndo_validate_addr)(struct net_device *dev ) ;
>    int (*ndo_do_ioctl)(struct net_device *dev , struct ifreq *ifr , int cmd ) ;
>    int (*ndo_set_config)(struct net_device *dev , struct ifmap *map ) ;
>    int (*ndo_change_mtu)(struct net_device *dev , int new_mtu ) ;
>    int (*ndo_neigh_setup)(struct net_device *dev , struct neigh_parms * ) ;
>    void (*ndo_tx_timeout)(struct net_device *dev ) ;
>    struct net_device_stats *(*ndo_get_stats)(struct net_device *dev ) ;
>    void (*ndo_vlan_rx_register)(struct net_device *dev , struct vlan_group *grp ) ;
>    void (*ndo_vlan_rx_add_vid)(struct net_device *dev , unsigned short vid ) ;
>    void (*ndo_vlan_rx_kill_vid)(struct net_device *dev , unsigned short vid ) ;
>    void (*ndo_poll_controller)(struct net_device *dev ) ;
>    int (*ndo_fcoe_enable)(struct net_device *dev ) ;
>    int (*ndo_fcoe_disable)(struct net_device *dev ) ;
>    int (*ndo_fcoe_ddp_setup)(struct net_device *dev , u16 xid , struct scatterlist *sgl ,
>                              unsigned int sgc ) ;
>    int (*ndo_fcoe_ddp_done)(struct net_device *dev , u16 xid ) ;
> };
> #line 651
> struct iw_handler_def;
> #line 651
> struct iw_public_data;
> #line 651
> enum __anonenum_reg_state_250 {
>     NETREG_UNINITIALIZED = 0,
>     NETREG_REGISTERED = 1,
>     NETREG_UNREGISTERING = 2,
>     NETREG_UNREGISTERED = 3,
>     NETREG_RELEASED = 4,
>     NETREG_DUMMY = 5
> } ;
> #line 651
> struct net_bridge_port;
> #line 651
> struct macvlan_port;
> #line 651
> struct garp_port;
> #line 651
> struct rtnl_link_ops;
> #line 651 "include/linux/netdevice.h"
> struct net_device {
>    char name[16] ;
>    struct hlist_node name_hlist ;
>    char *ifalias ;
>    unsigned long mem_end ;
>    unsigned long mem_start ;
>    unsigned long base_addr ;
>    unsigned int irq ;
>    unsigned char if_port ;
>    unsigned char dma ;
>    unsigned long state ;
>    struct list_head dev_list ;
>    struct list_head napi_list ;
>    unsigned long features ;
>    int ifindex ;
>    int iflink ;
>    struct net_device_stats stats ;
>    struct iw_handler_def  const  *wireless_handlers ;
>    struct iw_public_data *wireless_data ;
>    struct net_device_ops  const  *netdev_ops ;
>    struct ethtool_ops  const  *ethtool_ops ;
>    struct header_ops  const  *header_ops ;
>    unsigned int flags ;
>    unsigned short gflags ;
>    unsigned short priv_flags ;
>    unsigned short padded ;
>    unsigned char operstate ;
>    unsigned char link_mode ;
>    unsigned int mtu ;
>    unsigned short type ;
>    unsigned short hard_header_len ;
>    unsigned short needed_headroom ;
>    unsigned short needed_tailroom ;
>    struct net_device *master ;
>    unsigned char perm_addr[32] ;
>    unsigned char addr_len ;
>    unsigned short dev_id ;
>    struct netdev_hw_addr_list uc ;
>    int uc_promisc ;
>    spinlock_t addr_list_lock ;
>    struct dev_addr_list *mc_list ;
>    int mc_count ;
>    unsigned int promiscuity ;
>    unsigned int allmulti ;
>    void *dsa_ptr ;
>    void *atalk_ptr ;
>    void *ip_ptr ;
>    void *dn_ptr ;
>    void *ip6_ptr ;
>    void *ec_ptr ;
>    void *ax25_ptr ;
>    struct wireless_dev *ieee80211_ptr ;
>    unsigned long last_rx ;
>    unsigned char *dev_addr ;
>    struct netdev_hw_addr_list dev_addrs ;
>    unsigned char broadcast[32] ;
>    struct netdev_queue rx_queue ;
>    struct netdev_queue *_tx  __attribute__((__aligned__((1) <<  (6) ))) ;
>    unsigned int num_tx_queues ;
>    unsigned int real_num_tx_queues ;
>    struct Qdisc *qdisc ;
>    unsigned long tx_queue_len ;
>    spinlock_t tx_global_lock ;
>    unsigned long trans_start ;
>    int watchdog_timeo ;
>    struct timer_list watchdog_timer ;
>    atomic_t refcnt  __attribute__((__aligned__((1) <<  (6) ))) ;
>    struct list_head todo_list ;
>    struct hlist_node index_hlist ;
>    struct net_device *link_watch_next ;
>    enum __anonenum_reg_state_250 reg_state ;
>    void (*destructor)(struct net_device *dev ) ;
>    struct netpoll_info *npinfo ;
>    struct net *nd_net ;
>    void *ml_priv ;
>    struct net_bridge_port *br_port ;
>    struct macvlan_port *macvlan_port ;
>    struct garp_port *garp_port ;
>    struct device dev ;
>    struct attribute_group  const  *sysfs_groups[3] ;
>    struct rtnl_link_ops  const  *rtnl_link_ops ;
>    unsigned long vlan_features ;
>    unsigned int gso_max_size ;
>    struct dcbnl_rtnl_ops *dcbnl_ops ;
>    unsigned int fcoe_ddp_xid ;
> };
> #line 12 "include/linux/mod_devicetable.h"
> typedef unsigned long kernel_ulong_t;
> #line 17 "include/linux/mod_devicetable.h"
> struct pci_device_id {
>    __u32 vendor ;
>    __u32 device ;
>    __u32 subvendor ;
>    __u32 subdevice ;
>    __u32 class ;
>    __u32 class_mask ;
>    kernel_ulong_t driver_data ;
> };
> #line 7 "include/asm-generic/cputime.h"
> typedef unsigned long cputime_t;
> #line 117 "include/linux/sem.h"
> struct sem_undo_list;
> #line 130 "include/linux/sem.h"
> struct sem_undo_list {
>    atomic_t refcnt ;
>    spinlock_t lock ;
>    struct list_head list_proc ;
> };
> #line 136 "include/linux/sem.h"
> struct sysv_sem {
>    struct sem_undo_list *undo_list ;
> };
> #line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
> struct siginfo;
> #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
> struct __anonstruct_sigset_t_253 {
>    unsigned long sig[64 / 64] ;
> };
> #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
> typedef struct __anonstruct_sigset_t_253 sigset_t;
> #line 17 "include/asm-generic/signal-defs.h"
> typedef void __signalfn_t(int  );
> #line 18 "include/asm-generic/signal-defs.h"
> typedef __signalfn_t *__sighandler_t;
> #line 20 "include/asm-generic/signal-defs.h"
> typedef void __restorefn_t(void);
> #line 21 "include/asm-generic/signal-defs.h"
> typedef __restorefn_t *__sigrestore_t;
> #line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
> struct sigaction {
>    __sighandler_t sa_handler ;
>    unsigned long sa_flags ;
>    __sigrestore_t sa_restorer ;
>    sigset_t sa_mask ;
> };
> #line 174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
> struct k_sigaction {
>    struct sigaction sa ;
> };
> #line 7 "include/asm-generic/siginfo.h"
> union sigval {
>    int sival_int ;
>    void *sival_ptr ;
> };
> #line 7 "include/asm-generic/siginfo.h"
> typedef union sigval sigval_t;
> #line 40 "include/asm-generic/siginfo.h"
> struct __anonstruct__kill_255 {
>    __kernel_pid_t _pid ;
>    __kernel_uid32_t _uid ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> struct __anonstruct__timer_256 {
>    __kernel_timer_t _tid ;
>    int _overrun ;
>    char _pad[sizeof(__kernel_uid32_t ) - sizeof(int )] ;
>    sigval_t _sigval ;
>    int _sys_private ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> struct __anonstruct__rt_257 {
>    __kernel_pid_t _pid ;
>    __kernel_uid32_t _uid ;
>    sigval_t _sigval ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> struct __anonstruct__sigchld_258 {
>    __kernel_pid_t _pid ;
>    __kernel_uid32_t _uid ;
>    int _status ;
>    __kernel_clock_t _utime ;
>    __kernel_clock_t _stime ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> struct __anonstruct__sigfault_259 {
>    void *_addr ;
>    short _addr_lsb ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> struct __anonstruct__sigpoll_260 {
>    long _band ;
>    int _fd ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> union __anonunion__sifields_254 {
>    int _pad[(128UL - 4UL * sizeof(int )) / sizeof(int )] ;
>    struct __anonstruct__kill_255 _kill ;
>    struct __anonstruct__timer_256 _timer ;
>    struct __anonstruct__rt_257 _rt ;
>    struct __anonstruct__sigchld_258 _sigchld ;
>    struct __anonstruct__sigfault_259 _sigfault ;
>    struct __anonstruct__sigpoll_260 _sigpoll ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> struct siginfo {
>    int si_signo ;
>    int si_errno ;
>    int si_code ;
>    union __anonunion__sifields_254 _sifields ;
> };
> #line 40 "include/asm-generic/siginfo.h"
> typedef struct siginfo siginfo_t;
> #line 24 "include/linux/signal.h"
> struct sigpending {
>    struct list_head list ;
>    sigset_t signal ;
> };
> #line 97 "include/linux/proportions.h"
> struct prop_local_single {
>    unsigned long events ;
>    unsigned long period ;
>    int shift ;
>    spinlock_t lock ;
> };
> #line 10 "include/linux/seccomp.h"
> struct __anonstruct_seccomp_t_263 {
>    int mode ;
> };
> #line 10 "include/linux/seccomp.h"
> typedef struct __anonstruct_seccomp_t_263 seccomp_t;
> #line 80 "include/linux/plist.h"
> struct plist_head {
>    struct list_head prio_list ;
>    struct list_head node_list ;
>    spinlock_t *lock ;
> };
> #line 88 "include/linux/plist.h"
> struct plist_node {
>    int prio ;
>    struct plist_head plist ;
> };
> #line 38 "include/linux/rtmutex.h"
> struct rt_mutex_waiter;
> #line 43 "include/linux/resource.h"
> struct rlimit {
>    unsigned long rlim_cur ;
>    unsigned long rlim_max ;
> };
> #line 11 "include/linux/task_io_accounting.h"
> struct task_io_accounting {
>    u64 rchar ;
>    u64 wchar ;
>    u64 syscr ;
>    u64 syscw ;
>    u64 read_bytes ;
>    u64 write_bytes ;
>    u64 cancelled_write_bytes ;
> };
> #line 18 "include/linux/latencytop.h"
> struct latency_record {
>    unsigned long backtrace[12] ;
>    unsigned int count ;
>    unsigned long time ;
>    unsigned long max ;
> };
> #line 29 "include/linux/key.h"
> typedef int32_t key_serial_t;
> #line 32 "include/linux/key.h"
> typedef uint32_t key_perm_t;
> #line 76
> struct signal_struct;
> #line 79
> struct key_type;
> #line 81
> struct keyring_list;
> #line 124
> struct key_user;
> #line 124 "include/linux/key.h"
> union __anonunion____missing_field_name_264 {
>    time_t expiry ;
>    time_t revoked_at ;
> };
> #line 124 "include/linux/key.h"
> union __anonunion_type_data_265 {
>    struct list_head link ;
>    unsigned long x[2] ;
>    void *p[2] ;
> };
> #line 124 "include/linux/key.h"
> union __anonunion_payload_266 {
>    unsigned long value ;
>    void *data ;
>    struct keyring_list *subscriptions ;
> };
> #line 124 "include/linux/key.h"
> struct key {
>    atomic_t usage ;
>    key_serial_t serial ;
>    struct rb_node serial_node ;
>    struct key_type *type ;
>    struct rw_semaphore sem ;
>    struct key_user *user ;
>    void *security ;
>    union __anonunion____missing_field_name_264 __annonCompField28 ;
>    uid_t uid ;
>    gid_t gid ;
>    key_perm_t perm ;
>    unsigned short quotalen ;
>    unsigned short datalen ;
>    unsigned long flags ;
>    char *description ;
>    union __anonunion_type_data_265 type_data ;
>    union __anonunion_payload_266 payload ;
> };
> #line 18 "include/linux/selinux.h"
> struct audit_context;
> #line 31 "include/linux/cred.h"
> struct group_info {
>    atomic_t usage ;
>    int ngroups ;
>    int nblocks ;
>    gid_t small_block[32] ;
>    gid_t *blocks[0] ;
> };
> #line 83 "include/linux/cred.h"
> struct thread_group_cred {
>    atomic_t usage ;
>    pid_t tgid ;
>    spinlock_t lock ;
>    struct key *session_keyring ;
>    struct key *process_keyring ;
>    struct rcu_head rcu ;
> };
> #line 116 "include/linux/cred.h"
> struct cred {
>    atomic_t usage ;
>    atomic_t subscribers ;
>    void *put_addr ;
>    unsigned int magic ;
>    uid_t uid ;
>    gid_t gid ;
>    uid_t suid ;
>    gid_t sgid ;
>    uid_t euid ;
>    gid_t egid ;
>    uid_t fsuid ;
>    gid_t fsgid ;
>    unsigned int securebits ;
>    kernel_cap_t cap_inheritable ;
>    kernel_cap_t cap_permitted ;
>    kernel_cap_t cap_effective ;
>    kernel_cap_t cap_bset ;
>    unsigned char jit_keyring ;
>    struct key *thread_keyring ;
>    struct key *request_key_auth ;
>    struct thread_group_cred *tgcred ;
>    void *security ;
>    struct user_struct *user ;
>    struct group_info *group_info ;
>    struct rcu_head rcu ;
> };
> #line 98 "include/linux/sched.h"
> struct futex_pi_state;
> #line 99
> struct robust_list_head;
> #line 101
> struct fs_struct;
> #line 102
> struct bts_context;
> #line 103
> struct perf_event_context;
> #line 153
> struct cfs_rq;
> #line 154
> struct task_group;
> #line 357
> struct user_namespace;
> #line 58 "include/linux/aio_abi.h"
> struct io_event {
>    __u64 data ;
>    __u64 obj ;
>    __s64 res ;
>    __s64 res2 ;
> };
> #line 15 "include/linux/aio.h"
> struct kioctx;
> #line 87 "include/linux/aio.h"
> union __anonunion_ki_obj_268 {
>    void *user ;
>    struct task_struct *tsk ;
> };
> #line 87
> struct eventfd_ctx;
> #line 87 "include/linux/aio.h"
> struct kiocb {
>    struct list_head ki_run_list ;
>    unsigned long ki_flags ;
>    int ki_users ;
>    unsigned int ki_key ;
>    struct file *ki_filp ;
>    struct kioctx *ki_ctx ;
>    int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
>    ssize_t (*ki_retry)(struct kiocb * ) ;
>    void (*ki_dtor)(struct kiocb * ) ;
>    union __anonunion_ki_obj_268 ki_obj ;
>    __u64 ki_user_data ;
>    wait_queue_t ki_wait ;
>    loff_t ki_pos ;
>    void *private ;
>    unsigned short ki_opcode ;
>    size_t ki_nbytes ;
>    char *ki_buf ;
>    size_t ki_left ;
>    struct iovec ki_inline_vec ;
>    struct iovec *ki_iovec ;
>    unsigned long ki_nr_segs ;
>    unsigned long ki_cur_seg ;
>    struct list_head ki_list ;
>    struct eventfd_ctx *ki_eventfd ;
> };
> #line 167 "include/linux/aio.h"
> struct aio_ring_info {
>    unsigned long mmap_base ;
>    unsigned long mmap_size ;
>    struct page **ring_pages ;
>    spinlock_t ring_lock ;
>    long nr_pages ;
>    unsigned int nr ;
>    unsigned int tail ;
>    struct page *internal_pages[8] ;
> };
> #line 180 "include/linux/aio.h"
> struct kioctx {
>    atomic_t users ;
>    int dead ;
>    struct mm_struct *mm ;
>    unsigned long user_id ;
>    struct hlist_node list ;
>    wait_queue_head_t wait ;
>    spinlock_t ctx_lock ;
>    int reqs_active ;
>    struct list_head active_reqs ;
>    struct list_head run_list ;
>    unsigned int max_reqs ;
>    struct aio_ring_info ring_info ;
>    struct delayed_work wq ;
>    struct rcu_head rcu_head ;
> };
> #line 481 "include/linux/sched.h"
> struct sighand_struct {
>    atomic_t count ;
>    struct k_sigaction action[64] ;
>    spinlock_t siglock ;
>    wait_queue_head_t signalfd_wqh ;
> };
> #line 488 "include/linux/sched.h"
> struct pacct_struct {
>    int ac_flag ;
>    long ac_exitcode ;
>    unsigned long ac_mem ;
>    cputime_t ac_utime ;
>    cputime_t ac_stime ;
>    unsigned long ac_minflt ;
>    unsigned long ac_majflt ;
> };
> #line 496 "include/linux/sched.h"
> struct cpu_itimer {
>    cputime_t expires ;
>    cputime_t incr ;
>    u32 error ;
>    u32 incr_error ;
> };
> #line 514 "include/linux/sched.h"
> struct task_cputime {
>    cputime_t utime ;
>    cputime_t stime ;
>    unsigned long long sum_exec_runtime ;
> };
> #line 550 "include/linux/sched.h"
> struct thread_group_cputimer {
>    struct task_cputime cputime ;
>    int running ;
>    spinlock_t lock ;
> };
> #line 563
> struct tty_struct;
> #line 563
> struct taskstats;
> #line 563
> struct tty_audit_buf;
> #line 563 "include/linux/sched.h"
> struct signal_struct {
>    atomic_t count ;
>    atomic_t live ;
>    wait_queue_head_t wait_chldexit ;
>    struct task_struct *curr_target ;
>    struct sigpending shared_pending ;
>    int group_exit_code ;
>    int notify_count ;
>    struct task_struct *group_exit_task ;
>    int group_stop_count ;
>    unsigned int flags ;
>    struct list_head posix_timers ;
>    struct hrtimer real_timer ;
>    struct pid *leader_pid ;
>    ktime_t it_real_incr ;
>    struct cpu_itimer it[2] ;
>    struct thread_group_cputimer cputimer ;
>    struct task_cputime cputime_expires ;
>    struct list_head cpu_timers[3] ;
>    struct pid *tty_old_pgrp ;
>    int leader ;
>    struct tty_struct *tty ;
>    cputime_t utime ;
>    cputime_t stime ;
>    cputime_t cutime ;
>    cputime_t cstime ;
>    cputime_t gtime ;
>    cputime_t cgtime ;
>    unsigned long nvcsw ;
>    unsigned long nivcsw ;
>    unsigned long cnvcsw ;
>    unsigned long cnivcsw ;
>    unsigned long min_flt ;
>    unsigned long maj_flt ;
>    unsigned long cmin_flt ;
>    unsigned long cmaj_flt ;
>    unsigned long inblock ;
>    unsigned long oublock ;
>    unsigned long cinblock ;
>    unsigned long coublock ;
>    unsigned long maxrss ;
>    unsigned long cmaxrss ;
>    struct task_io_accounting ioac ;
>    unsigned long long sum_sched_runtime ;
>    struct rlimit rlim[16] ;
>    struct pacct_struct pacct ;
>    struct taskstats *stats ;
>    unsigned int audit_tty ;
>    struct tty_audit_buf *tty_audit_buf ;
>    int oom_adj ;
> };
> #line 701 "include/linux/sched.h"
> struct user_struct {
>    atomic_t __count ;
>    atomic_t processes ;
>    atomic_t files ;
>    atomic_t sigpending ;
>    atomic_t inotify_watches ;
>    atomic_t inotify_devs ;
>    atomic_t epoll_watches ;
>    unsigned long mq_bytes ;
>    unsigned long locked_shm ;
>    struct key *uid_keyring ;
>    struct key *session_keyring ;
>    struct hlist_node uidhash_node ;
>    uid_t uid ;
>    struct user_namespace *user_ns ;
>    struct task_group *tg ;
>    struct kobject kobj ;
>    struct delayed_work work ;
>    atomic_long_t locked_vm ;
> };
> #line 751
> struct reclaim_state;
> #line 754 "include/linux/sched.h"
> struct sched_info {
>    unsigned long pcount ;
>    unsigned long long run_delay ;
>    unsigned long long last_arrival ;
>    unsigned long long last_queued ;
>    unsigned int bkl_count ;
> };
> #line 770 "include/linux/sched.h"
> struct task_delay_info {
>    spinlock_t lock ;
>    unsigned int flags ;
>    struct timespec blkio_start ;
>    struct timespec blkio_end ;
>    u64 blkio_delay ;
>    u64 swapin_delay ;
>    u32 blkio_count ;
>    u32 swapin_count ;
>    struct timespec freepages_start ;
>    struct timespec freepages_end ;
>    u64 freepages_delay ;
>    u32 freepages_count ;
> };
> #line 815
> enum cpu_idle_type {
>     CPU_IDLE = 0,
>     CPU_NOT_IDLE = 1,
>     CPU_NEWLY_IDLE = 2,
>     CPU_MAX_IDLE_TYPES = 3
> } ;
> #line 892 "include/linux/sched.h"
> struct sched_group {
>    struct sched_group *next ;
>    unsigned int cpu_power ;
>    unsigned long cpumask[0] ;
> };
> #line 919
> enum sched_domain_level {
>     SD_LV_NONE = 0,
>     SD_LV_SIBLING = 1,
>     SD_LV_MC = 2,
>     SD_LV_CPU = 3,
>     SD_LV_NODE = 4,
>     SD_LV_ALLNODES = 5,
>     SD_LV_MAX = 6
> } ;
> #line 937 "include/linux/sched.h"
> struct sched_domain {
>    struct sched_domain *parent ;
>    struct sched_domain *child ;
>    struct sched_group *groups ;
>    unsigned long min_interval ;
>    unsigned long max_interval ;
>    unsigned int busy_factor ;
>    unsigned int imbalance_pct ;
>    unsigned int cache_nice_tries ;
>    unsigned int busy_idx ;
>    unsigned int idle_idx ;
>    unsigned int newidle_idx ;
>    unsigned int wake_idx ;
>    unsigned int forkexec_idx ;
>    unsigned int smt_gain ;
>    int flags ;
>    enum sched_domain_level level ;
>    unsigned long last_balance ;
>    unsigned int balance_interval ;
>    unsigned int nr_balance_failed ;
>    u64 last_update ;
>    unsigned int lb_count[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_failed[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_balanced[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_imbalance[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_gained[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_hot_gained[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_nobusyg[CPU_MAX_IDLE_TYPES] ;
>    unsigned int lb_nobusyq[CPU_MAX_IDLE_TYPES] ;
>    unsigned int alb_count ;
>    unsigned int alb_failed ;
>    unsigned int alb_pushed ;
>    unsigned int sbe_count ;
>    unsigned int sbe_balanced ;
>    unsigned int sbe_pushed ;
>    unsigned int sbf_count ;
>    unsigned int sbf_balanced ;
>    unsigned int sbf_pushed ;
>    unsigned int ttwu_wake_remote ;
>    unsigned int ttwu_move_affine ;
>    unsigned int ttwu_move_balance ;
>    char *name ;
>    unsigned long span[0] ;
> };
> #line 1043
> struct io_context;
> #line 1057
> struct rq;
> #line 1066 "include/linux/sched.h"
> struct sched_class {
>    struct sched_class  const  *next ;
>    void (*enqueue_task)(struct rq *rq , struct task_struct *p , int wakeup ) ;
>    void (*dequeue_task)(struct rq *rq , struct task_struct *p , int sleep ) ;
>    void (*yield_task)(struct rq *rq ) ;
>    void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int flags ) ;
>    struct task_struct *(*pick_next_task)(struct rq *rq ) ;
>    void (*put_prev_task)(struct rq *rq , struct task_struct *p ) ;
>    int (*select_task_rq)(struct task_struct *p , int sd_flag , int flags ) ;
>    unsigned long (*load_balance)(struct rq *this_rq , int this_cpu , struct rq *busiest ,
>                                  unsigned long max_load_move , struct sched_domain *sd ,
>                                  enum cpu_idle_type idle , int *all_pinned , int *this_best_prio ) ;
>    int (*move_one_task)(struct rq *this_rq , int this_cpu , struct rq *busiest , struct sched_domain *sd ,
>                         enum cpu_idle_type idle ) ;
>    void (*pre_schedule)(struct rq *this_rq , struct task_struct *task ) ;
>    void (*post_schedule)(struct rq *this_rq ) ;
>    void (*task_wake_up)(struct rq *this_rq , struct task_struct *task ) ;
>    void (*set_cpus_allowed)(struct task_struct *p , struct cpumask  const  *newmask ) ;
>    void (*rq_online)(struct rq *rq ) ;
>    void (*rq_offline)(struct rq *rq ) ;
>    void (*set_curr_task)(struct rq *rq ) ;
>    void (*task_tick)(struct rq *rq , struct task_struct *p , int queued ) ;
>    void (*task_new)(struct rq *rq , struct task_struct *p ) ;
>    void (*switched_from)(struct rq *this_rq , struct task_struct *task , int running ) ;
>    void (*switched_to)(struct rq *this_rq , struct task_struct *task , int running ) ;
>    void (*prio_changed)(struct rq *this_rq , struct task_struct *task , int oldprio ,
>                         int running ) ;
>    unsigned int (*get_rr_interval)(struct task_struct *task ) ;
>    void (*moved_group)(struct task_struct *p ) ;
> };
> #line 1118 "include/linux/sched.h"
> struct load_weight {
>    unsigned long weight ;
>    unsigned long inv_weight ;
> };
> #line 1132 "include/linux/sched.h"
> struct sched_entity {
>    struct load_weight load ;
>    struct rb_node run_node ;
>    struct list_head group_node ;
>    unsigned int on_rq ;
>    u64 exec_start ;
>    u64 sum_exec_runtime ;
>    u64 vruntime ;
>    u64 prev_sum_exec_runtime ;
>    u64 last_wakeup ;
>    u64 avg_overlap ;
>    u64 nr_migrations ;
>    u64 start_runtime ;
>    u64 avg_wakeup ;
>    u64 avg_running ;
>    u64 wait_start ;
>    u64 wait_max ;
>    u64 wait_count ;
>    u64 wait_sum ;
>    u64 iowait_count ;
>    u64 iowait_sum ;
>    u64 sleep_start ;
>    u64 sleep_max ;
>    s64 sum_sleep_runtime ;
>    u64 block_start ;
>    u64 block_max ;
>    u64 exec_max ;
>    u64 slice_max ;
>    u64 nr_migrations_cold ;
>    u64 nr_failed_migrations_affine ;
>    u64 nr_failed_migrations_running ;
>    u64 nr_failed_migrations_hot ;
>    u64 nr_forced_migrations ;
>    u64 nr_forced2_migrations ;
>    u64 nr_wakeups ;
>    u64 nr_wakeups_sync ;
>    u64 nr_wakeups_migrate ;
>    u64 nr_wakeups_local ;
>    u64 nr_wakeups_remote ;
>    u64 nr_wakeups_affine ;
>    u64 nr_wakeups_affine_attempts ;
>    u64 nr_wakeups_passive ;
>    u64 nr_wakeups_idle ;
>    struct sched_entity *parent ;
>    struct cfs_rq *cfs_rq ;
>    struct cfs_rq *my_q ;
> };
> #line 1197
> struct rt_rq;
> #line 1197 "include/linux/sched.h"
> struct sched_rt_entity {
>    struct list_head run_list ;
>    unsigned long timeout ;
>    unsigned int time_slice ;
>    int nr_cpus_allowed ;
>    struct sched_rt_entity *back ;
>    struct sched_rt_entity *parent ;
>    struct rt_rq *rt_rq ;
>    struct rt_rq *my_q ;
> };
> #line 1215
> struct css_set;
> #line 1215
> struct compat_robust_list_head;
> #line 1215 "include/linux/sched.h"
> struct task_struct {
>    long volatile   state ;
>    void *stack ;
>    atomic_t usage ;
>    unsigned int flags ;
>    unsigned int ptrace ;
>    int lock_depth ;
>    int prio ;
>    int static_prio ;
>    int normal_prio ;
>    unsigned int rt_priority ;
>    struct sched_class  const  *sched_class ;
>    struct sched_entity se ;
>    struct sched_rt_entity rt ;
>    struct hlist_head preempt_notifiers ;
>    unsigned char fpu_counter ;
>    unsigned int policy ;
>    cpumask_t cpus_allowed ;
>    struct sched_info sched_info ;
>    struct list_head tasks ;
>    struct plist_node pushable_tasks ;
>    struct mm_struct *mm ;
>    struct mm_struct *active_mm ;
>    int exit_state ;
>    int exit_code ;
>    int exit_signal ;
>    int pdeath_signal ;
>    unsigned int personality ;
>    unsigned int did_exec : 1 ;
>    unsigned int in_execve : 1 ;
>    unsigned int in_iowait : 1 ;
>    unsigned int sched_reset_on_fork : 1 ;
>    pid_t pid ;
>    pid_t tgid ;
>    unsigned long stack_canary ;
>    struct task_struct *real_parent ;
>    struct task_struct *parent ;
>    struct list_head children ;
>    struct list_head sibling ;
>    struct task_struct *group_leader ;
>    struct list_head ptraced ;
>    struct list_head ptrace_entry ;
>    struct bts_context *bts ;
>    struct pid_link pids[PIDTYPE_MAX] ;
>    struct list_head thread_group ;
>    struct completion *vfork_done ;
>    int *set_child_tid ;
>    int *clear_child_tid ;
>    cputime_t utime ;
>    cputime_t stime ;
>    cputime_t utimescaled ;
>    cputime_t stimescaled ;
>    cputime_t gtime ;
>    cputime_t prev_utime ;
>    cputime_t prev_stime ;
>    unsigned long nvcsw ;
>    unsigned long nivcsw ;
>    struct timespec start_time ;
>    struct timespec real_start_time ;
>    unsigned long min_flt ;
>    unsigned long maj_flt ;
>    struct task_cputime cputime_expires ;
>    struct list_head cpu_timers[3] ;
>    struct cred  const  *real_cred ;
>    struct cred  const  *cred ;
>    struct mutex cred_guard_mutex ;
>    struct cred *replacement_session_keyring ;
>    char comm[16] ;
>    int link_count ;
>    int total_link_count ;
>    struct sysv_sem sysvsem ;
>    unsigned long last_switch_count ;
>    struct thread_struct thread ;
>    struct fs_struct *fs ;
>    struct files_struct *files ;
>    struct nsproxy *nsproxy ;
>    struct signal_struct *signal ;
>    struct sighand_struct *sighand ;
>    sigset_t blocked ;
>    sigset_t real_blocked ;
>    sigset_t saved_sigmask ;
>    struct sigpending pending ;
>    unsigned long sas_ss_sp ;
>    size_t sas_ss_size ;
>    int (*notifier)(void *priv ) ;
>    void *notifier_data ;
>    sigset_t *notifier_mask ;
>    struct audit_context *audit_context ;
>    uid_t loginuid ;
>    unsigned int sessionid ;
>    seccomp_t seccomp ;
>    u32 parent_exec_id ;
>    u32 self_exec_id ;
>    spinlock_t alloc_lock ;
>    struct irqaction *irqaction ;
>    spinlock_t pi_lock ;
>    struct plist_head pi_waiters ;
>    struct rt_mutex_waiter *pi_blocked_on ;
>    struct mutex_waiter *blocked_on ;
>    unsigned int irq_events ;
>    int hardirqs_enabled ;
>    unsigned long hardirq_enable_ip ;
>    unsigned int hardirq_enable_event ;
>    unsigned long hardirq_disable_ip ;
>    unsigned int hardirq_disable_event ;
>    int softirqs_enabled ;
>    unsigned long softirq_disable_ip ;
>    unsigned int softirq_disable_event ;
>    unsigned long softirq_enable_ip ;
>    unsigned int softirq_enable_event ;
>    int hardirq_context ;
>    int softirq_context ;
>    void *journal_info ;
>    struct bio *bio_list ;
>    struct bio **bio_tail ;
>    struct reclaim_state *reclaim_state ;
>    struct backing_dev_info *backing_dev_info ;
>    struct io_context *io_context ;
>    unsigned long ptrace_message ;
>    siginfo_t *last_siginfo ;
>    struct task_io_accounting ioac ;
>    u64 acct_rss_mem1 ;
>    u64 acct_vm_mem1 ;
>    cputime_t acct_timexpd ;
>    nodemask_t mems_allowed ;
>    int cpuset_mem_spread_rotor ;
>    struct css_set *cgroups ;
>    struct list_head cg_list ;
>    struct robust_list_head *robust_list ;
>    struct compat_robust_list_head *compat_robust_list ;
>    struct list_head pi_state_list ;
>    struct futex_pi_state *pi_state_cache ;
>    struct perf_event_context *perf_event_ctxp ;
>    struct mutex perf_event_mutex ;
>    struct list_head perf_event_list ;
>    struct mempolicy *mempolicy ;
>    short il_next ;
>    atomic_t fs_excl ;
>    struct rcu_head rcu ;
>    struct pipe_inode_info *splice_pipe ;
>    struct task_delay_info *delays ;
>    int make_it_fail ;
>    struct prop_local_single dirties ;
>    int latency_record_count ;
>    struct latency_record latency_record[32] ;
>    unsigned long timer_slack_ns ;
>    unsigned long default_timer_slack_ns ;
>    struct list_head *scm_work_list ;
>    unsigned long trace ;
>    unsigned long trace_recursion ;
>    unsigned long stack_start ;
> };
> #line 42 "include/linux/i2c.h"
> struct i2c_msg;
> #line 43
> struct i2c_algorithm;
> #line 44
> struct i2c_adapter;
> #line 47
> union i2c_smbus_data;
> #line 312 "include/linux/i2c.h"
> struct i2c_algorithm {
>    int (*master_xfer)(struct i2c_adapter *adap , struct i2c_msg *msgs , int num ) ;
>    int (*smbus_xfer)(struct i2c_adapter *adap , u16 addr , unsigned short flags ,
>                      char read_write , u8 command , int size , union i2c_smbus_data *data ) ;
>    u32 (*functionality)(struct i2c_adapter * ) ;
> };
> #line 333 "include/linux/i2c.h"
> struct i2c_adapter {
>    struct module *owner ;
>    unsigned int id ;
>    unsigned int class ;
>    struct i2c_algorithm  const  *algo ;
>    void *algo_data ;
>    u8 level ;
>    struct mutex bus_lock ;
>    int timeout ;
>    int retries ;
>    struct device dev ;
>    int nr ;
>    char name[48] ;
>    struct completion dev_released ;
> };
> #line 484 "include/linux/i2c.h"
> struct i2c_msg {
>    __u16 addr ;
>    __u16 flags ;
>    __u16 len ;
>    __u8 *buf ;
> };
> #line 542 "include/linux/i2c.h"
> union i2c_smbus_data {
>    __u8 byte ;
>    __u16 word ;
>    __u8 block[32 + 2] ;
> };
3522c4577
< enum __anonenum_dmx_output_t_236 {
---
> enum __anonenum_dmx_output_t_284 {
3529c4584
< typedef enum __anonenum_dmx_output_t_236 dmx_output_t;
---
> typedef enum __anonenum_dmx_output_t_284 dmx_output_t;
3531c4586
< enum __anonenum_dmx_input_t_237 {
---
> enum __anonenum_dmx_input_t_285 {
3536c4591
< typedef enum __anonenum_dmx_input_t_237 dmx_input_t;
---
> typedef enum __anonenum_dmx_input_t_285 dmx_input_t;
3538c4593
< enum __anonenum_dmx_pes_type_t_238 {
---
> enum __anonenum_dmx_pes_type_t_286 {
3562c4617
< typedef enum __anonenum_dmx_pes_type_t_238 dmx_pes_type_t;
---
> typedef enum __anonenum_dmx_pes_type_t_286 dmx_pes_type_t;
3592c4647
< enum __anonenum_dmx_source_t_239 {
---
> enum __anonenum_dmx_source_t_287 {
3603c4658,4664
< typedef enum __anonenum_dmx_source_t_239 dmx_source_t;
---
> typedef enum __anonenum_dmx_source_t_287 dmx_source_t;
> #line 31 "include/asm-generic/poll.h"
> struct pollfd {
>    int fd ;
>    short events ;
>    short revents ;
> };
3606a4668
>    unsigned long key ;
3608c4670,4672
< #line 54 "drivers/media/dvb/dvb-core/dvbdev.h"
---
> #line 57 "drivers/media/dvb/dvb-core/dvbdev.h"
> struct dvb_device;
> #line 57 "drivers/media/dvb/dvb-core/dvbdev.h"
3617a4682,4684
>    int mfe_shared ;
>    struct dvb_device *mfe_dvbdev ;
>    struct mutex mfe_lock ;
3619c4686
< #line 68 "drivers/media/dvb/dvb-core/dvbdev.h"
---
> #line 75 "drivers/media/dvb/dvb-core/dvbdev.h"
3622c4689
<    struct file_operations *fops ;
---
>    struct file_operations  const  *fops ;
3624a4692
>    int minor ;
3757c4825
< #line 45 "drivers/media/dvb/dvb-core/dvb_demux.h"
---
> #line 47 "drivers/media/dvb/dvb-core/dvb_demux.h"
3759c4827
< #line 45 "drivers/media/dvb/dvb-core/dvb_demux.h"
---
> #line 47 "drivers/media/dvb/dvb-core/dvb_demux.h"
3773,3774c4841,4842
< #line 63 "drivers/media/dvb/dvb-core/dvb_demux.h"
< union __anonunion_feed_243 {
---
> #line 65 "drivers/media/dvb/dvb-core/dvb_demux.h"
> union __anonunion_feed_291 {
3778,3779c4846,4847
< #line 63 "drivers/media/dvb/dvb-core/dvb_demux.h"
< union __anonunion_cb_244 {
---
> #line 65 "drivers/media/dvb/dvb-core/dvb_demux.h"
> union __anonunion_cb_292 {
3785c4853
< #line 63
---
> #line 65
3787c4855
< #line 63 "drivers/media/dvb/dvb-core/dvb_demux.h"
---
> #line 65 "drivers/media/dvb/dvb-core/dvb_demux.h"
3789,3790c4857,4858
<    union __anonunion_feed_243 feed ;
<    union __anonunion_cb_244 cb ;
---
>    union __anonunion_feed_291 feed ;
>    union __anonunion_cb_292 cb ;
3808c4876
< #line 97 "drivers/media/dvb/dvb-core/dvb_demux.h"
---
> #line 99 "drivers/media/dvb/dvb-core/dvb_demux.h"
3831a4900
>    uint8_t *cnt_storage ;
3858,3859c4927,4928
< #line 56 "drivers/media/dvb/dvb-core/dmxdev.h"
< union __anonunion_filter_245 {
---
> #line 62 "drivers/media/dvb/dvb-core/dmxdev.h"
> union __anonunion_filter_293 {
3862,3864c4931,4933
< #line 56 "drivers/media/dvb/dvb-core/dmxdev.h"
< union __anonunion_feed_246 {
<    struct dmx_ts_feed *ts ;
---
> #line 62 "drivers/media/dvb/dvb-core/dmxdev.h"
> union __anonunion_feed_294 {
>    struct list_head ts ;
3867,3868c4936,4937
< #line 56 "drivers/media/dvb/dvb-core/dmxdev.h"
< union __anonunion_params_247 {
---
> #line 62 "drivers/media/dvb/dvb-core/dmxdev.h"
> union __anonunion_params_295 {
3872c4941
< #line 56
---
> #line 62
3874c4943
< #line 56 "drivers/media/dvb/dvb-core/dmxdev.h"
---
> #line 62 "drivers/media/dvb/dvb-core/dmxdev.h"
3876,3878c4945,4947
<    union __anonunion_filter_245 filter ;
<    union __anonunion_feed_246 feed ;
<    union __anonunion_params_247 params ;
---
>    union __anonunion_filter_293 filter ;
>    union __anonunion_feed_294 feed ;
>    union __anonunion_params_295 params ;
3888c4957
< #line 85 "drivers/media/dvb/dvb-core/dmxdev.h"
---
> #line 92 "drivers/media/dvb/dvb-core/dmxdev.h"
3901a4971,4976
> #line 13 "include/linux/inetdevice.h"
> struct ipv4_devconf {
>    void *sysctl ;
>    int data[__NET_IPV4_CONF_MAX - 1] ;
>    unsigned long state[(((unsigned long )(__NET_IPV4_CONF_MAX - 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
> };
3910c4985
< #line 32 "include/linux/dvb/frontend.h"
---
> #line 31 "include/linux/dvb/frontend.h"
3917c4992
< #line 32 "include/linux/dvb/frontend.h"
---
> #line 31 "include/linux/dvb/frontend.h"
3919c4994
< #line 40
---
> #line 39
3944a5020,5021
>     FE_HAS_EXTENDED_CAPS = 8388608,
>     FE_CAN_2G_MODULATION = 268435456,
3949c5026
< #line 40 "include/linux/dvb/frontend.h"
---
> #line 39 "include/linux/dvb/frontend.h"
3951c5028
< #line 71 "include/linux/dvb/frontend.h"
---
> #line 72 "include/linux/dvb/frontend.h"
3965c5042
< #line 90 "include/linux/dvb/frontend.h"
---
> #line 91 "include/linux/dvb/frontend.h"
3970c5047
< #line 96 "include/linux/dvb/frontend.h"
---
> #line 97 "include/linux/dvb/frontend.h"
3976c5053
< #line 103
---
> #line 104
3982c5059
< #line 103 "include/linux/dvb/frontend.h"
---
> #line 104 "include/linux/dvb/frontend.h"
3984c5061
< #line 110
---
> #line 111
3989c5066
< #line 110 "include/linux/dvb/frontend.h"
---
> #line 111 "include/linux/dvb/frontend.h"
3991c5068
< #line 116
---
> #line 117
3996c5073
< #line 116 "include/linux/dvb/frontend.h"
---
> #line 117 "include/linux/dvb/frontend.h"
3998c5075
< #line 122
---
> #line 123
4008c5085
< #line 122 "include/linux/dvb/frontend.h"
---
> #line 123 "include/linux/dvb/frontend.h"
4010c5087
< #line 133
---
> #line 134
4016c5093
< #line 133 "include/linux/dvb/frontend.h"
---
> #line 134 "include/linux/dvb/frontend.h"
4018c5095
< #line 140
---
> #line 141
4029c5106,5108
<     FEC_AUTO = 9
---
>     FEC_AUTO = 9,
>     FEC_3_5 = 10,
>     FEC_9_10 = 11
4031c5110
< #line 140 "include/linux/dvb/frontend.h"
---
> #line 141 "include/linux/dvb/frontend.h"
4033c5112
< #line 154
---
> #line 157
4043c5122,5126
<     VSB_16 = 8
---
>     VSB_16 = 8,
>     PSK_8 = 9,
>     APSK_16 = 10,
>     APSK_32 = 11,
>     DQPSK = 12
4045c5128
< #line 154 "include/linux/dvb/frontend.h"
---
> #line 157 "include/linux/dvb/frontend.h"
4047c5130
< #line 166
---
> #line 173
4051c5134,5135
<     TRANSMISSION_MODE_AUTO = 2
---
>     TRANSMISSION_MODE_AUTO = 2,
>     TRANSMISSION_MODE_4K = 3
4053c5137
< #line 166 "include/linux/dvb/frontend.h"
---
> #line 173 "include/linux/dvb/frontend.h"
4055c5139
< #line 172
---
> #line 180
4062c5146
< #line 172 "include/linux/dvb/frontend.h"
---
> #line 180 "include/linux/dvb/frontend.h"
4064c5148
< #line 180
---
> #line 188
4072c5156
< #line 180 "include/linux/dvb/frontend.h"
---
> #line 188 "include/linux/dvb/frontend.h"
4074c5158
< #line 189
---
> #line 197
4082c5166
< #line 189 "include/linux/dvb/frontend.h"
---
> #line 197 "include/linux/dvb/frontend.h"
4084c5168
< #line 198 "include/linux/dvb/frontend.h"
---
> #line 206 "include/linux/dvb/frontend.h"
4089c5173
< #line 203 "include/linux/dvb/frontend.h"
---
> #line 211 "include/linux/dvb/frontend.h"
4095c5179
< #line 209 "include/linux/dvb/frontend.h"
---
> #line 217 "include/linux/dvb/frontend.h"
4099c5183
< #line 213 "include/linux/dvb/frontend.h"
---
> #line 221 "include/linux/dvb/frontend.h"
4109,4110c5193,5194
< #line 224 "include/linux/dvb/frontend.h"
< union __anonunion_u_248 {
---
> #line 232 "include/linux/dvb/frontend.h"
> union __anonunion_u_296 {
4116c5200
< #line 224 "include/linux/dvb/frontend.h"
---
> #line 232 "include/linux/dvb/frontend.h"
4120c5204
<    union __anonunion_u_248 u ;
---
>    union __anonunion_u_296 u ;
4121a5206,5262
> #line 309
> enum fe_pilot {
>     PILOT_ON = 0,
>     PILOT_OFF = 1,
>     PILOT_AUTO = 2
> } ;
> #line 309 "include/linux/dvb/frontend.h"
> typedef enum fe_pilot fe_pilot_t;
> #line 315
> enum fe_rolloff {
>     ROLLOFF_35 = 0,
>     ROLLOFF_20 = 1,
>     ROLLOFF_25 = 2,
>     ROLLOFF_AUTO = 3
> } ;
> #line 315 "include/linux/dvb/frontend.h"
> typedef enum fe_rolloff fe_rolloff_t;
> #line 322
> enum fe_delivery_system {
>     SYS_UNDEFINED = 0,
>     SYS_DVBC_ANNEX_AC = 1,
>     SYS_DVBC_ANNEX_B = 2,
>     SYS_DVBT = 3,
>     SYS_DSS = 4,
>     SYS_DVBS = 5,
>     SYS_DVBS2 = 6,
>     SYS_DVBH = 7,
>     SYS_ISDBT = 8,
>     SYS_ISDBS = 9,
>     SYS_ISDBC = 10,
>     SYS_ATSC = 11,
>     SYS_ATSCMH = 12,
>     SYS_DMBTH = 13,
>     SYS_CMMB = 14,
>     SYS_DAB = 15
> } ;
> #line 322 "include/linux/dvb/frontend.h"
> typedef enum fe_delivery_system fe_delivery_system_t;
> #line 352 "include/linux/dvb/frontend.h"
> struct __anonstruct_buffer_298 {
>    __u8 data[32] ;
>    __u32 len ;
>    __u32 reserved1[3] ;
>    void *reserved2 ;
> };
> #line 352 "include/linux/dvb/frontend.h"
> union __anonunion_u_297 {
>    __u32 data ;
>    struct __anonstruct_buffer_298 buffer ;
> };
> #line 352 "include/linux/dvb/frontend.h"
> struct dtv_property {
>    __u32 cmd ;
>    __u32 reserved[3] ;
>    union __anonunion_u_297 u ;
>    int result ;
> } __attribute__((__packed__)) ;
4148c5289,5324
< #line 72 "drivers/media/dvb/dvb-core/dvb_frontend.h"
---
> #line 108
> enum tuner_param {
>     DVBFE_TUNER_FREQUENCY = 1 << 0,
>     DVBFE_TUNER_TUNERSTEP = 1 << 1,
>     DVBFE_TUNER_IFFREQ = 1 << 2,
>     DVBFE_TUNER_BANDWIDTH = 1 << 3,
>     DVBFE_TUNER_REFCLOCK = 1 << 4,
>     DVBFE_TUNER_IQSENSE = 1 << 5,
>     DVBFE_TUNER_DUMMY = 1 << 31
> } ;
> #line 143
> enum dvbfe_algo {
>     DVBFE_ALGO_HW = 1 << 0,
>     DVBFE_ALGO_SW = 1 << 1,
>     DVBFE_ALGO_CUSTOM = 1 << 2,
>     DVBFE_ALGO_RECOVERY = 1 << 31
> } ;
> #line 150 "drivers/media/dvb/dvb-core/dvb_frontend.h"
> struct tuner_state {
>    u32 frequency ;
>    u32 tunerstep ;
>    u32 ifreq ;
>    u32 bandwidth ;
>    u32 iqsense ;
>    u32 refclock ;
> };
> #line 181
> enum dvbfe_search {
>     DVBFE_ALGO_SEARCH_SUCCESS = 1 << 0,
>     DVBFE_ALGO_SEARCH_ASLEEP = 1 << 1,
>     DVBFE_ALGO_SEARCH_FAILED = 1 << 2,
>     DVBFE_ALGO_SEARCH_INVALID = 1 << 3,
>     DVBFE_ALGO_SEARCH_AGAIN = 1 << 4,
>     DVBFE_ALGO_SEARCH_ERROR = 1 << 31
> } ;
> #line 191 "drivers/media/dvb/dvb-core/dvb_frontend.h"
4164a5341,5342
>    int (*set_state)(struct dvb_frontend *fe , enum tuner_param param , struct tuner_state *state ) ;
>    int (*get_state)(struct dvb_frontend *fe , enum tuner_param param , struct tuner_state *state ) ;
4166c5344
< #line 104 "drivers/media/dvb/dvb-core/dvb_frontend.h"
---
> #line 230 "drivers/media/dvb/dvb-core/dvb_frontend.h"
4170c5348
< #line 108 "drivers/media/dvb/dvb-core/dvb_frontend.h"
---
> #line 234 "drivers/media/dvb/dvb-core/dvb_frontend.h"
4183c5361
< #line 126 "drivers/media/dvb/dvb-core/dvb_frontend.h"
---
> #line 252 "drivers/media/dvb/dvb-core/dvb_frontend.h"
4193c5371
<    int (*get_frontend_algo)(struct dvb_frontend *fe ) ;
---
>    enum dvbfe_algo (*get_frontend_algo)(struct dvb_frontend *fe ) ;
4211a5390,5391
>    enum dvbfe_search (*search)(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) ;
>    int (*track)(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) ;
4213a5394,5395
>    int (*set_property)(struct dvb_frontend *fe , struct dtv_property *tvp ) ;
>    int (*get_property)(struct dvb_frontend *fe , struct dtv_property *tvp ) ;
4215c5397,5432
< #line 185 "drivers/media/dvb/dvb-core/dvb_frontend.h"
---
> #line 320 "drivers/media/dvb/dvb-core/dvb_frontend.h"
> struct __anonstruct_layer_299 {
>    u8 segment_count ;
>    fe_code_rate_t fec ;
>    fe_modulation_t modulation ;
>    u8 interleaving ;
> };
> #line 320 "drivers/media/dvb/dvb-core/dvb_frontend.h"
> struct dtv_frontend_properties {
>    u32 state ;
>    u32 frequency ;
>    fe_modulation_t modulation ;
>    fe_sec_voltage_t voltage ;
>    fe_sec_tone_mode_t sectone ;
>    fe_spectral_inversion_t inversion ;
>    fe_code_rate_t fec_inner ;
>    fe_transmit_mode_t transmission_mode ;
>    u32 bandwidth_hz ;
>    fe_guard_interval_t guard_interval ;
>    fe_hierarchy_t hierarchy ;
>    u32 symbol_rate ;
>    fe_code_rate_t code_rate_HP ;
>    fe_code_rate_t code_rate_LP ;
>    fe_pilot_t pilot ;
>    fe_rolloff_t rolloff ;
>    fe_delivery_system_t delivery_system ;
>    u8 isdbt_partial_reception ;
>    u8 isdbt_sb_mode ;
>    u8 isdbt_sb_subchannel ;
>    u32 isdbt_sb_segment_idx ;
>    u32 isdbt_sb_segment_count ;
>    u8 isdbt_layer_enabled ;
>    struct __anonstruct_layer_299 layer[3] ;
>    u32 isdbs_ts_id ;
> };
> #line 363 "drivers/media/dvb/dvb-core/dvb_frontend.h"
4223a5441,5443
>    struct dtv_frontend_properties dtv_property_cache ;
>    int (*callback)(void *adapter_priv , int component , int cmd , int arg ) ;
>    int id ;
4242a5463
>    int (*set_ts_params)(struct dvb_frontend *fe , int is_punctured ) ;
4282c5503,5519
< #line 178
---
> #line 163
> enum v4l2_ctrl_type {
>     V4L2_CTRL_TYPE_INTEGER = 1,
>     V4L2_CTRL_TYPE_BOOLEAN = 2,
>     V4L2_CTRL_TYPE_MENU = 3,
>     V4L2_CTRL_TYPE_BUTTON = 4,
>     V4L2_CTRL_TYPE_INTEGER64 = 5,
>     V4L2_CTRL_TYPE_CTRL_CLASS = 6,
>     V4L2_CTRL_TYPE_STRING = 7
> } ;
> #line 173
> enum v4l2_tuner_type {
>     V4L2_TUNER_RADIO = 1,
>     V4L2_TUNER_ANALOG_TV = 2,
>     V4L2_TUNER_DIGITAL_TV = 3
> } ;
> #line 179
4288c5525
< #line 185
---
> #line 186
4299c5536,5544
< #line 220 "include/linux/videodev2.h"
---
> #line 213
> enum v4l2_priority {
>     V4L2_PRIORITY_UNSET = 0,
>     V4L2_PRIORITY_BACKGROUND = 1,
>     V4L2_PRIORITY_INTERACTIVE = 2,
>     V4L2_PRIORITY_RECORD = 3,
>     V4L2_PRIORITY_DEFAULT = V4L2_PRIORITY_INTERACTIVE
> } ;
> #line 221 "include/linux/videodev2.h"
4306c5551,5565
< #line 267 "include/linux/videodev2.h"
---
> #line 228 "include/linux/videodev2.h"
> struct v4l2_fract {
>    __u32 numerator ;
>    __u32 denominator ;
> };
> #line 236 "include/linux/videodev2.h"
> struct v4l2_capability {
>    __u8 driver[16] ;
>    __u8 card[32] ;
>    __u8 bus_info[32] ;
>    __u32 version ;
>    __u32 capabilities ;
>    __u32 reserved[4] ;
> };
> #line 270 "include/linux/videodev2.h"
4317c5576,5681
< #line 524 "include/linux/videodev2.h"
---
> #line 368 "include/linux/videodev2.h"
> struct v4l2_fmtdesc {
>    __u32 index ;
>    enum v4l2_buf_type type ;
>    __u32 flags ;
>    __u8 description[32] ;
>    __u32 pixelformat ;
>    __u32 reserved[4] ;
> };
> #line 391 "include/linux/videodev2.h"
> struct v4l2_frmsize_discrete {
>    __u32 width ;
>    __u32 height ;
> };
> #line 396 "include/linux/videodev2.h"
> struct v4l2_frmsize_stepwise {
>    __u32 min_width ;
>    __u32 max_width ;
>    __u32 step_width ;
>    __u32 min_height ;
>    __u32 max_height ;
>    __u32 step_height ;
> };
> #line 405 "include/linux/videodev2.h"
> union __anonunion____missing_field_name_300 {
>    struct v4l2_frmsize_discrete discrete ;
>    struct v4l2_frmsize_stepwise stepwise ;
> };
> #line 405 "include/linux/videodev2.h"
> struct v4l2_frmsizeenum {
>    __u32 index ;
>    __u32 pixel_format ;
>    __u32 type ;
>    union __anonunion____missing_field_name_300 __annonCompField30 ;
>    __u32 reserved[2] ;
> };
> #line 427 "include/linux/videodev2.h"
> struct v4l2_frmival_stepwise {
>    struct v4l2_fract min ;
>    struct v4l2_fract max ;
>    struct v4l2_fract step ;
> };
> #line 433 "include/linux/videodev2.h"
> union __anonunion____missing_field_name_301 {
>    struct v4l2_fract discrete ;
>    struct v4l2_frmival_stepwise stepwise ;
> };
> #line 433 "include/linux/videodev2.h"
> struct v4l2_frmivalenum {
>    __u32 index ;
>    __u32 pixel_format ;
>    __u32 width ;
>    __u32 height ;
>    __u32 type ;
>    union __anonunion____missing_field_name_301 __annonCompField31 ;
>    __u32 reserved[2] ;
> };
> #line 452 "include/linux/videodev2.h"
> struct v4l2_timecode {
>    __u32 type ;
>    __u32 flags ;
>    __u8 frames ;
>    __u8 seconds ;
>    __u8 minutes ;
>    __u8 hours ;
>    __u8 userbits[4] ;
> };
> #line 477 "include/linux/videodev2.h"
> struct v4l2_jpegcompression {
>    int quality ;
>    int APPn ;
>    int APP_len ;
>    char APP_data[60] ;
>    int COM_len ;
>    char COM_data[60] ;
>    __u32 jpeg_markers ;
> };
> #line 509 "include/linux/videodev2.h"
> struct v4l2_requestbuffers {
>    __u32 count ;
>    enum v4l2_buf_type type ;
>    enum v4l2_memory memory ;
>    __u32 reserved[2] ;
> };
> #line 516 "include/linux/videodev2.h"
> union __anonunion_m_302 {
>    __u32 offset ;
>    unsigned long userptr ;
> };
> #line 516 "include/linux/videodev2.h"
> struct v4l2_buffer {
>    __u32 index ;
>    enum v4l2_buf_type type ;
>    __u32 bytesused ;
>    __u32 flags ;
>    enum v4l2_field field ;
>    struct timeval timestamp ;
>    struct v4l2_timecode timecode ;
>    __u32 sequence ;
>    enum v4l2_memory memory ;
>    union __anonunion_m_302 m ;
>    __u32 length ;
>    __u32 input ;
>    __u32 reserved ;
> };
> #line 550 "include/linux/videodev2.h"
4324c5688
< #line 548 "include/linux/videodev2.h"
---
> #line 574 "include/linux/videodev2.h"
4329c5693
< #line 553 "include/linux/videodev2.h"
---
> #line 579 "include/linux/videodev2.h"
4339c5703,5733
< #line 607 "include/linux/videodev2.h"
---
> #line 592 "include/linux/videodev2.h"
> struct v4l2_captureparm {
>    __u32 capability ;
>    __u32 capturemode ;
>    struct v4l2_fract timeperframe ;
>    __u32 extendedmode ;
>    __u32 readbuffers ;
>    __u32 reserved[4] ;
> };
> #line 605 "include/linux/videodev2.h"
> struct v4l2_outputparm {
>    __u32 capability ;
>    __u32 outputmode ;
>    struct v4l2_fract timeperframe ;
>    __u32 extendedmode ;
>    __u32 writebuffers ;
>    __u32 reserved[4] ;
> };
> #line 617 "include/linux/videodev2.h"
> struct v4l2_cropcap {
>    enum v4l2_buf_type type ;
>    struct v4l2_rect bounds ;
>    struct v4l2_rect defrect ;
>    struct v4l2_fract pixelaspect ;
> };
> #line 624 "include/linux/videodev2.h"
> struct v4l2_crop {
>    enum v4l2_buf_type type ;
>    struct v4l2_rect c ;
> };
> #line 633 "include/linux/videodev2.h"
4341c5735,5885
< #line 1260 "include/linux/videodev2.h"
---
> #line 734 "include/linux/videodev2.h"
> struct v4l2_input {
>    __u32 index ;
>    __u8 name[32] ;
>    __u32 type ;
>    __u32 audioset ;
>    __u32 tuner ;
>    v4l2_std_id std ;
>    __u32 status ;
>    __u32 reserved[4] ;
> };
> #line 776 "include/linux/videodev2.h"
> struct v4l2_output {
>    __u32 index ;
>    __u8 name[32] ;
>    __u32 type ;
>    __u32 audioset ;
>    __u32 modulator ;
>    v4l2_std_id std ;
>    __u32 reserved[4] ;
> };
> #line 793 "include/linux/videodev2.h"
> struct v4l2_control {
>    __u32 id ;
>    __s32 value ;
> };
> #line 798 "include/linux/videodev2.h"
> union __anonunion____missing_field_name_303 {
>    __s32 value ;
>    __s64 value64 ;
>    char *string ;
> };
> #line 798 "include/linux/videodev2.h"
> struct v4l2_ext_control {
>    __u32 id ;
>    __u32 size ;
>    __u32 reserved2[1] ;
>    union __anonunion____missing_field_name_303 __annonCompField32 ;
> } __attribute__((__packed__)) ;
> #line 809 "include/linux/videodev2.h"
> struct v4l2_ext_controls {
>    __u32 ctrl_class ;
>    __u32 count ;
>    __u32 error_idx ;
>    __u32 reserved[2] ;
>    struct v4l2_ext_control *controls ;
> };
> #line 828 "include/linux/videodev2.h"
> struct v4l2_queryctrl {
>    __u32 id ;
>    enum v4l2_ctrl_type type ;
>    __u8 name[32] ;
>    __s32 minimum ;
>    __s32 maximum ;
>    __s32 step ;
>    __s32 default_value ;
>    __u32 flags ;
>    __u32 reserved[2] ;
> };
> #line 841 "include/linux/videodev2.h"
> struct v4l2_querymenu {
>    __u32 id ;
>    __u32 index ;
>    __u8 name[32] ;
>    __u32 reserved ;
> };
> #line 1198 "include/linux/videodev2.h"
> struct v4l2_tuner {
>    __u32 index ;
>    __u8 name[32] ;
>    enum v4l2_tuner_type type ;
>    __u32 capability ;
>    __u32 rangelow ;
>    __u32 rangehigh ;
>    __u32 rxsubchans ;
>    __u32 audmode ;
>    __s32 signal ;
>    __s32 afc ;
>    __u32 reserved[4] ;
> };
> #line 1212 "include/linux/videodev2.h"
> struct v4l2_modulator {
>    __u32 index ;
>    __u8 name[32] ;
>    __u32 capability ;
>    __u32 rangelow ;
>    __u32 rangehigh ;
>    __u32 txsubchans ;
>    __u32 reserved[4] ;
> };
> #line 1247 "include/linux/videodev2.h"
> struct v4l2_frequency {
>    __u32 tuner ;
>    enum v4l2_tuner_type type ;
>    __u32 frequency ;
>    __u32 reserved[8] ;
> };
> #line 1254 "include/linux/videodev2.h"
> struct v4l2_hw_freq_seek {
>    __u32 tuner ;
>    enum v4l2_tuner_type type ;
>    __u32 seek_upward ;
>    __u32 wrap_around ;
>    __u32 reserved[8] ;
> };
> #line 1286 "include/linux/videodev2.h"
> struct v4l2_audio {
>    __u32 index ;
>    __u8 name[32] ;
>    __u32 capability ;
>    __u32 mode ;
>    __u32 reserved[2] ;
> };
> #line 1301 "include/linux/videodev2.h"
> struct v4l2_audioout {
>    __u32 index ;
>    __u8 name[32] ;
>    __u32 capability ;
>    __u32 mode ;
>    __u32 reserved[2] ;
> };
> #line 1320 "include/linux/videodev2.h"
> struct v4l2_enc_idx_entry {
>    __u64 offset ;
>    __u64 pts ;
>    __u32 length ;
>    __u32 flags ;
>    __u32 reserved[2] ;
> };
> #line 1329 "include/linux/videodev2.h"
> struct v4l2_enc_idx {
>    __u32 entries ;
>    __u32 entries_cap ;
>    __u32 reserved[4] ;
>    struct v4l2_enc_idx_entry entry[64] ;
> };
> #line 1345 "include/linux/videodev2.h"
> struct __anonstruct_raw_305 {
>    __u32 data[8] ;
> };
> #line 1345 "include/linux/videodev2.h"
> union __anonunion____missing_field_name_304 {
>    struct __anonstruct_raw_305 raw ;
> };
> #line 1345 "include/linux/videodev2.h"
> struct v4l2_encoder_cmd {
>    __u32 cmd ;
>    __u32 flags ;
>    union __anonunion____missing_field_name_304 __annonCompField33 ;
> };
> #line 1365 "include/linux/videodev2.h"
4352c5896,6092
< #line 59 "include/linux/pci.h"
---
> #line 1387 "include/linux/videodev2.h"
> struct v4l2_sliced_vbi_format {
>    __u16 service_set ;
>    __u16 service_lines[2][24] ;
>    __u32 io_size ;
>    __u32 reserved[2] ;
> };
> #line 1411 "include/linux/videodev2.h"
> struct v4l2_sliced_vbi_cap {
>    __u16 service_set ;
>    __u16 service_lines[2][24] ;
>    enum v4l2_buf_type type ;
>    __u32 reserved[3] ;
> };
> #line 1422 "include/linux/videodev2.h"
> struct v4l2_sliced_vbi_data {
>    __u32 id ;
>    __u32 field ;
>    __u32 line ;
>    __u32 reserved ;
>    __u8 data[48] ;
> };
> #line 1483 "include/linux/videodev2.h"
> union __anonunion_fmt_307 {
>    struct v4l2_pix_format pix ;
>    struct v4l2_window win ;
>    struct v4l2_vbi_format vbi ;
>    struct v4l2_sliced_vbi_format sliced ;
>    __u8 raw_data[200] ;
> };
> #line 1483 "include/linux/videodev2.h"
> struct v4l2_format {
>    enum v4l2_buf_type type ;
>    union __anonunion_fmt_307 fmt ;
> };
> #line 1497 "include/linux/videodev2.h"
> union __anonunion_parm_308 {
>    struct v4l2_captureparm capture ;
>    struct v4l2_outputparm output ;
>    __u8 raw_data[200] ;
> };
> #line 1497 "include/linux/videodev2.h"
> struct v4l2_streamparm {
>    enum v4l2_buf_type type ;
>    union __anonunion_parm_308 parm ;
> };
> #line 1520 "include/linux/videodev2.h"
> union __anonunion____missing_field_name_309 {
>    __u32 addr ;
>    char name[32] ;
> };
> #line 1520 "include/linux/videodev2.h"
> struct v4l2_dbg_match {
>    __u32 type ;
>    union __anonunion____missing_field_name_309 __annonCompField35 ;
> } __attribute__((__packed__)) ;
> #line 1528 "include/linux/videodev2.h"
> struct v4l2_dbg_register {
>    struct v4l2_dbg_match match ;
>    __u32 size ;
>    __u64 reg ;
>    __u64 val ;
> } __attribute__((__packed__)) ;
> #line 1536 "include/linux/videodev2.h"
> struct v4l2_dbg_chip_ident {
>    struct v4l2_dbg_match match ;
>    __u32 ident ;
>    __u32 revision ;
> } __attribute__((__packed__)) ;
> #line 29 "include/media/v4l2-dev.h"
> struct v4l2_device;
> #line 36 "include/media/v4l2-dev.h"
> struct v4l2_file_operations {
>    struct module *owner ;
>    ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
>    ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
>    unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
>    long (*ioctl)(struct file * , unsigned int  , unsigned long  ) ;
>    long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
>    unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
>                                       unsigned long  , unsigned long  ) ;
>    int (*mmap)(struct file * , struct vm_area_struct * ) ;
>    int (*open)(struct file * ) ;
>    int (*release)(struct file * ) ;
> };
> #line 56
> struct v4l2_ioctl_ops;
> #line 135 "include/media/v4l2-common.h"
> struct v4l2_subdev;
> #line 136
> struct v4l2_subdev_ops;
> #line 193 "include/media/v4l2-common.h"
> struct v4l2_priv_tun_config {
>    int tuner ;
>    void *priv ;
> };
> #line 26 "include/linux/videodev.h"
> struct video_mbuf {
>    int size ;
>    int frames ;
>    int offsets[32] ;
> };
> #line 24 "include/media/v4l2-ioctl.h"
> struct v4l2_ioctl_ops {
>    int (*vidioc_querycap)(struct file *file , void *fh , struct v4l2_capability *cap ) ;
>    int (*vidioc_g_priority)(struct file *file , void *fh , enum v4l2_priority *p ) ;
>    int (*vidioc_s_priority)(struct file *file , void *fh , enum v4l2_priority p ) ;
>    int (*vidioc_enum_fmt_vid_cap)(struct file *file , void *fh , struct v4l2_fmtdesc *f ) ;
>    int (*vidioc_enum_fmt_vid_overlay)(struct file *file , void *fh , struct v4l2_fmtdesc *f ) ;
>    int (*vidioc_enum_fmt_vid_out)(struct file *file , void *fh , struct v4l2_fmtdesc *f ) ;
>    int (*vidioc_enum_fmt_type_private)(struct file *file , void *fh , struct v4l2_fmtdesc *f ) ;
>    int (*vidioc_g_fmt_vid_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_vid_overlay)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_vid_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_vid_out_overlay)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_vbi_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_vbi_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_sliced_vbi_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_sliced_vbi_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_g_fmt_type_private)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_vid_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_vid_overlay)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_vid_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_vid_out_overlay)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_vbi_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_vbi_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_sliced_vbi_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_sliced_vbi_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_s_fmt_type_private)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_vid_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_vid_overlay)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_vid_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_vid_out_overlay)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_vbi_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_vbi_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_sliced_vbi_cap)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_sliced_vbi_out)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_try_fmt_type_private)(struct file *file , void *fh , struct v4l2_format *f ) ;
>    int (*vidioc_reqbufs)(struct file *file , void *fh , struct v4l2_requestbuffers *b ) ;
>    int (*vidioc_querybuf)(struct file *file , void *fh , struct v4l2_buffer *b ) ;
>    int (*vidioc_qbuf)(struct file *file , void *fh , struct v4l2_buffer *b ) ;
>    int (*vidioc_dqbuf)(struct file *file , void *fh , struct v4l2_buffer *b ) ;
>    int (*vidioc_overlay)(struct file *file , void *fh , unsigned int i ) ;
>    int (*vidiocgmbuf)(struct file *file , void *fh , struct video_mbuf *p ) ;
>    int (*vidioc_g_fbuf)(struct file *file , void *fh , struct v4l2_framebuffer *a ) ;
>    int (*vidioc_s_fbuf)(struct file *file , void *fh , struct v4l2_framebuffer *a ) ;
>    int (*vidioc_streamon)(struct file *file , void *fh , enum v4l2_buf_type i ) ;
>    int (*vidioc_streamoff)(struct file *file , void *fh , enum v4l2_buf_type i ) ;
>    int (*vidioc_g_std)(struct file *file , void *fh , v4l2_std_id *norm ) ;
>    int (*vidioc_s_std)(struct file *file , void *fh , v4l2_std_id *norm ) ;
>    int (*vidioc_querystd)(struct file *file , void *fh , v4l2_std_id *a ) ;
>    int (*vidioc_enum_input)(struct file *file , void *fh , struct v4l2_input *inp ) ;
>    int (*vidioc_g_input)(struct file *file , void *fh , unsigned int *i ) ;
>    int (*vidioc_s_input)(struct file *file , void *fh , unsigned int i ) ;
>    int (*vidioc_enum_output)(struct file *file , void *fh , struct v4l2_output *a ) ;
>    int (*vidioc_g_output)(struct file *file , void *fh , unsigned int *i ) ;
>    int (*vidioc_s_output)(struct file *file , void *fh , unsigned int i ) ;
>    int (*vidioc_queryctrl)(struct file *file , void *fh , struct v4l2_queryctrl *a ) ;
>    int (*vidioc_g_ctrl)(struct file *file , void *fh , struct v4l2_control *a ) ;
>    int (*vidioc_s_ctrl)(struct file *file , void *fh , struct v4l2_control *a ) ;
>    int (*vidioc_g_ext_ctrls)(struct file *file , void *fh , struct v4l2_ext_controls *a ) ;
>    int (*vidioc_s_ext_ctrls)(struct file *file , void *fh , struct v4l2_ext_controls *a ) ;
>    int (*vidioc_try_ext_ctrls)(struct file *file , void *fh , struct v4l2_ext_controls *a ) ;
>    int (*vidioc_querymenu)(struct file *file , void *fh , struct v4l2_querymenu *a ) ;
>    int (*vidioc_enumaudio)(struct file *file , void *fh , struct v4l2_audio *a ) ;
>    int (*vidioc_g_audio)(struct file *file , void *fh , struct v4l2_audio *a ) ;
>    int (*vidioc_s_audio)(struct file *file , void *fh , struct v4l2_audio *a ) ;
>    int (*vidioc_enumaudout)(struct file *file , void *fh , struct v4l2_audioout *a ) ;
>    int (*vidioc_g_audout)(struct file *file , void *fh , struct v4l2_audioout *a ) ;
>    int (*vidioc_s_audout)(struct file *file , void *fh , struct v4l2_audioout *a ) ;
>    int (*vidioc_g_modulator)(struct file *file , void *fh , struct v4l2_modulator *a ) ;
>    int (*vidioc_s_modulator)(struct file *file , void *fh , struct v4l2_modulator *a ) ;
>    int (*vidioc_cropcap)(struct file *file , void *fh , struct v4l2_cropcap *a ) ;
>    int (*vidioc_g_crop)(struct file *file , void *fh , struct v4l2_crop *a ) ;
>    int (*vidioc_s_crop)(struct file *file , void *fh , struct v4l2_crop *a ) ;
>    int (*vidioc_g_jpegcomp)(struct file *file , void *fh , struct v4l2_jpegcompression *a ) ;
>    int (*vidioc_s_jpegcomp)(struct file *file , void *fh , struct v4l2_jpegcompression *a ) ;
>    int (*vidioc_g_enc_index)(struct file *file , void *fh , struct v4l2_enc_idx *a ) ;
>    int (*vidioc_encoder_cmd)(struct file *file , void *fh , struct v4l2_encoder_cmd *a ) ;
>    int (*vidioc_try_encoder_cmd)(struct file *file , void *fh , struct v4l2_encoder_cmd *a ) ;
>    int (*vidioc_g_parm)(struct file *file , void *fh , struct v4l2_streamparm *a ) ;
>    int (*vidioc_s_parm)(struct file *file , void *fh , struct v4l2_streamparm *a ) ;
>    int (*vidioc_g_tuner)(struct file *file , void *fh , struct v4l2_tuner *a ) ;
>    int (*vidioc_s_tuner)(struct file *file , void *fh , struct v4l2_tuner *a ) ;
>    int (*vidioc_g_frequency)(struct file *file , void *fh , struct v4l2_frequency *a ) ;
>    int (*vidioc_s_frequency)(struct file *file , void *fh , struct v4l2_frequency *a ) ;
>    int (*vidioc_g_sliced_vbi_cap)(struct file *file , void *fh , struct v4l2_sliced_vbi_cap *a ) ;
>    int (*vidioc_log_status)(struct file *file , void *fh ) ;
>    int (*vidioc_s_hw_freq_seek)(struct file *file , void *fh , struct v4l2_hw_freq_seek *a ) ;
>    int (*vidioc_g_register)(struct file *file , void *fh , struct v4l2_dbg_register *reg ) ;
>    int (*vidioc_s_register)(struct file *file , void *fh , struct v4l2_dbg_register *reg ) ;
>    int (*vidioc_g_chip_ident)(struct file *file , void *fh , struct v4l2_dbg_chip_ident *chip ) ;
>    int (*vidioc_enum_framesizes)(struct file *file , void *fh , struct v4l2_frmsizeenum *fsize ) ;
>    int (*vidioc_enum_frameintervals)(struct file *file , void *fh , struct v4l2_frmivalenum *fival ) ;
>    long (*vidioc_default)(struct file *file , void *fh , int cmd , void *arg ) ;
> };
> #line 61 "include/linux/pci.h"
4354c6094
< #line 59 "include/linux/pci.h"
---
> #line 61 "include/linux/pci.h"
4362c6102,6114
< #line 81 "include/linux/pci.h"
---
> #line 89
> enum __anonenum_310 {
>     PCI_STD_RESOURCES = 0,
>     PCI_STD_RESOURCE_END = 5,
>     PCI_ROM_RESOURCE = 6,
>     PCI_IOV_RESOURCES = 7,
>     PCI_IOV_RESOURCE_END = (PCI_IOV_RESOURCES + 6) - 1,
>     PCI_BRIDGE_RESOURCES = 13,
>     PCI_BRIDGE_RESOURCE_END = (PCI_BRIDGE_RESOURCES + 4) - 1,
>     PCI_NUM_RESOURCES = 17,
>     DEVICE_COUNT_RESOURCE = 18
> } ;
> #line 117 "include/linux/pci.h"
4364c6116
< #line 95 "include/linux/pci.h"
---
> #line 143 "include/linux/pci.h"
4366c6118
< #line 97
---
> #line 145
4372c6124
< #line 121 "include/linux/pci.h"
---
> #line 169 "include/linux/pci.h"
4374c6126
< #line 131 "include/linux/pci.h"
---
> #line 184 "include/linux/pci.h"
4376c6128
< #line 143
---
> #line 196
4378c6130
< #line 144
---
> #line 197
4380c6132,6136
< #line 149
---
> #line 198
> struct pci_sriov;
> #line 199
> struct pci_ats;
> #line 204
4382c6138,6143
< #line 149 "include/linux/pci.h"
---
> #line 204 "include/linux/pci.h"
> union __anonunion____missing_field_name_311 {
>    struct pci_sriov *sriov ;
>    struct pci_dev *physfn ;
> };
> #line 204 "include/linux/pci.h"
4409a6171
>    unsigned int wakeup_prepared : 1 ;
4415c6177
<    struct resource resource[12] ;
---
>    struct resource resource[DEVICE_COUNT_RESOURCE] ;
4422a6185
>    unsigned int irq_reroute_variant : 2 ;
4424a6188
>    unsigned int ari_enabled : 1 ;
4426a6191,6196
>    unsigned int needs_freset : 1 ;
>    unsigned int state_saved : 1 ;
>    unsigned int is_physfn : 1 ;
>    unsigned int is_virtfn : 1 ;
>    unsigned int reset_fn : 1 ;
>    unsigned int is_hotplug_bridge : 1 ;
4433,4434c6203,6204
<    struct bin_attribute *res_attr[12] ;
<    struct bin_attribute *res_attr_wc[12] ;
---
>    struct bin_attribute *res_attr[DEVICE_COUNT_RESOURCE] ;
>    struct bin_attribute *res_attr_wc[DEVICE_COUNT_RESOURCE] ;
4436a6207,6208
>    union __anonunion____missing_field_name_311 __annonCompField36 ;
>    struct pci_ats *ats ;
4438c6210
< #line 282
---
> #line 341
4440c6212
< #line 282 "include/linux/pci.h"
---
> #line 341 "include/linux/pci.h"
4465c6237
< #line 328 "include/linux/pci.h"
---
> #line 405 "include/linux/pci.h"
4471c6243
< #line 347 "include/linux/pci.h"
---
> #line 424 "include/linux/pci.h"
4475d6246
<    unsigned int use_driver_data : 1 ;
4477c6248
< #line 360 "include/linux/pci.h"
---
> #line 436 "include/linux/pci.h"
4479c6250
< #line 380 "include/linux/pci.h"
---
> #line 456 "include/linux/pci.h"
4487c6258
< #line 401 "include/linux/pci.h"
---
> #line 477 "include/linux/pci.h"
4499d6269
<    struct pm_ext_ops *pm ;
4504c6274,6374
< #line 49 "include/media/saa7146.h"
---
> #line 28 "include/media/v4l2-subdev.h"
> struct tuner_setup;
> #line 31 "include/media/v4l2-subdev.h"
> struct v4l2_decode_vbi_line {
>    u32 is_second_field ;
>    u8 *p ;
>    u32 line ;
>    u32 type ;
> };
> #line 100 "include/media/v4l2-subdev.h"
> struct v4l2_subdev_core_ops {
>    int (*g_chip_ident)(struct v4l2_subdev *sd , struct v4l2_dbg_chip_ident *chip ) ;
>    int (*log_status)(struct v4l2_subdev *sd ) ;
>    int (*s_config)(struct v4l2_subdev *sd , int irq , void *platform_data ) ;
>    int (*init)(struct v4l2_subdev *sd , u32 val ) ;
>    int (*load_fw)(struct v4l2_subdev *sd ) ;
>    int (*reset)(struct v4l2_subdev *sd , u32 val ) ;
>    int (*s_gpio)(struct v4l2_subdev *sd , u32 val ) ;
>    int (*queryctrl)(struct v4l2_subdev *sd , struct v4l2_queryctrl *qc ) ;
>    int (*g_ctrl)(struct v4l2_subdev *sd , struct v4l2_control *ctrl ) ;
>    int (*s_ctrl)(struct v4l2_subdev *sd , struct v4l2_control *ctrl ) ;
>    int (*g_ext_ctrls)(struct v4l2_subdev *sd , struct v4l2_ext_controls *ctrls ) ;
>    int (*s_ext_ctrls)(struct v4l2_subdev *sd , struct v4l2_ext_controls *ctrls ) ;
>    int (*try_ext_ctrls)(struct v4l2_subdev *sd , struct v4l2_ext_controls *ctrls ) ;
>    int (*querymenu)(struct v4l2_subdev *sd , struct v4l2_querymenu *qm ) ;
>    int (*s_std)(struct v4l2_subdev *sd , v4l2_std_id norm ) ;
>    long (*ioctl)(struct v4l2_subdev *sd , unsigned int cmd , void *arg ) ;
>    int (*g_register)(struct v4l2_subdev *sd , struct v4l2_dbg_register *reg ) ;
>    int (*s_register)(struct v4l2_subdev *sd , struct v4l2_dbg_register *reg ) ;
> };
> #line 133 "include/media/v4l2-subdev.h"
> struct v4l2_subdev_tuner_ops {
>    int (*s_mode)(struct v4l2_subdev *sd , enum v4l2_tuner_type  ) ;
>    int (*s_radio)(struct v4l2_subdev *sd ) ;
>    int (*s_frequency)(struct v4l2_subdev *sd , struct v4l2_frequency *freq ) ;
>    int (*g_frequency)(struct v4l2_subdev *sd , struct v4l2_frequency *freq ) ;
>    int (*g_tuner)(struct v4l2_subdev *sd , struct v4l2_tuner *vt ) ;
>    int (*s_tuner)(struct v4l2_subdev *sd , struct v4l2_tuner *vt ) ;
>    int (*g_modulator)(struct v4l2_subdev *sd , struct v4l2_modulator *vm ) ;
>    int (*s_modulator)(struct v4l2_subdev *sd , struct v4l2_modulator *vm ) ;
>    int (*s_type_addr)(struct v4l2_subdev *sd , struct tuner_setup *type ) ;
>    int (*s_config)(struct v4l2_subdev *sd , struct v4l2_priv_tun_config  const  *config ) ;
>    int (*s_standby)(struct v4l2_subdev *sd ) ;
> };
> #line 167 "include/media/v4l2-subdev.h"
> struct v4l2_subdev_audio_ops {
>    int (*s_clock_freq)(struct v4l2_subdev *sd , u32 freq ) ;
>    int (*s_i2s_clock_freq)(struct v4l2_subdev *sd , u32 freq ) ;
>    int (*s_routing)(struct v4l2_subdev *sd , u32 input , u32 output , u32 config ) ;
> };
> #line 210 "include/media/v4l2-subdev.h"
> struct v4l2_subdev_video_ops {
>    int (*s_routing)(struct v4l2_subdev *sd , u32 input , u32 output , u32 config ) ;
>    int (*s_crystal_freq)(struct v4l2_subdev *sd , u32 freq , u32 flags ) ;
>    int (*decode_vbi_line)(struct v4l2_subdev *sd , struct v4l2_decode_vbi_line *vbi_line ) ;
>    int (*s_vbi_data)(struct v4l2_subdev *sd , struct v4l2_sliced_vbi_data  const  *vbi_data ) ;
>    int (*g_vbi_data)(struct v4l2_subdev *sd , struct v4l2_sliced_vbi_data *vbi_data ) ;
>    int (*g_sliced_vbi_cap)(struct v4l2_subdev *sd , struct v4l2_sliced_vbi_cap *cap ) ;
>    int (*s_std_output)(struct v4l2_subdev *sd , v4l2_std_id std ) ;
>    int (*querystd)(struct v4l2_subdev *sd , v4l2_std_id *std ) ;
>    int (*g_input_status)(struct v4l2_subdev *sd , u32 *status ) ;
>    int (*s_stream)(struct v4l2_subdev *sd , int enable ) ;
>    int (*enum_fmt)(struct v4l2_subdev *sd , struct v4l2_fmtdesc *fmtdesc ) ;
>    int (*g_fmt)(struct v4l2_subdev *sd , struct v4l2_format *fmt ) ;
>    int (*try_fmt)(struct v4l2_subdev *sd , struct v4l2_format *fmt ) ;
>    int (*s_fmt)(struct v4l2_subdev *sd , struct v4l2_format *fmt ) ;
>    int (*cropcap)(struct v4l2_subdev *sd , struct v4l2_cropcap *cc ) ;
>    int (*g_crop)(struct v4l2_subdev *sd , struct v4l2_crop *crop ) ;
>    int (*s_crop)(struct v4l2_subdev *sd , struct v4l2_crop *crop ) ;
>    int (*g_parm)(struct v4l2_subdev *sd , struct v4l2_streamparm *param ) ;
>    int (*s_parm)(struct v4l2_subdev *sd , struct v4l2_streamparm *param ) ;
>    int (*enum_framesizes)(struct v4l2_subdev *sd , struct v4l2_frmsizeenum *fsize ) ;
>    int (*enum_frameintervals)(struct v4l2_subdev *sd , struct v4l2_frmivalenum *fival ) ;
> };
> #line 234 "include/media/v4l2-subdev.h"
> struct v4l2_subdev_ops {
>    struct v4l2_subdev_core_ops  const  *core ;
>    struct v4l2_subdev_tuner_ops  const  *tuner ;
>    struct v4l2_subdev_audio_ops  const  *audio ;
>    struct v4l2_subdev_video_ops  const  *video ;
> };
> #line 249 "include/media/v4l2-subdev.h"
> struct v4l2_subdev {
>    struct list_head list ;
>    struct module *owner ;
>    u32 flags ;
>    struct v4l2_device *v4l2_dev ;
>    struct v4l2_subdev_ops  const  *ops ;
>    char name[32] ;
>    u32 grp_id ;
>    void *priv ;
> };
> #line 35 "include/media/v4l2-device.h"
> struct v4l2_device {
>    struct device *dev ;
>    struct list_head subdevs ;
>    spinlock_t lock ;
>    char name[20 + 16] ;
>    void (*notify)(struct v4l2_subdev *sd , unsigned int notification , void *arg ) ;
> };
> #line 50 "include/media/saa7146.h"
4506,4507d6375
< #line 50
< struct saa7146_extension;
4508a6377,6378
> struct saa7146_extension;
> #line 52
4510c6380
< #line 54 "include/media/saa7146.h"
---
> #line 55 "include/media/saa7146.h"
4519c6389
< #line 65 "include/media/saa7146.h"
---
> #line 66 "include/media/saa7146.h"
4524c6394
< #line 79 "include/media/saa7146.h"
---
> #line 80 "include/media/saa7146.h"
4537c6407
< #line 101 "include/media/saa7146.h"
---
> #line 102 "include/media/saa7146.h"
4542c6412
< #line 107
---
> #line 108
4544c6414
< #line 107 "include/media/saa7146.h"
---
> #line 108 "include/media/saa7146.h"
4547a6418
>    struct v4l2_device v4l2_dev ;
4569c6440
< #line 156
---
> #line 164
4571c6442
< #line 28 "include/media/videobuf-core.h"
---
> #line 29 "include/media/videobuf-core.h"
4573c6444
< #line 29
---
> #line 30
4575c6446
< #line 54 "include/media/videobuf-core.h"
---
> #line 55 "include/media/videobuf-core.h"
4582c6453
< #line 61
---
> #line 62
4592c6463
< #line 71 "include/media/videobuf-core.h"
---
> #line 72 "include/media/videobuf-core.h"
4616c6487
< #line 111 "include/media/videobuf-core.h"
---
> #line 112 "include/media/videobuf-core.h"
4623c6494
< #line 126 "include/media/videobuf-core.h"
---
> #line 127 "include/media/videobuf-core.h"
4639c6510
< #line 155 "include/media/videobuf-core.h"
---
> #line 156 "include/media/videobuf-core.h"
4740,4745c6611
< #line 157 "include/media/saa7146_vv.h"
< struct saa7146_extension_ioctls {
<    unsigned int cmd ;
<    int flags ;
< };
< #line 166 "include/media/saa7146_vv.h"
---
> #line 156 "include/media/saa7146_vv.h"
4754,4756c6620,6622
<    struct saa7146_extension_ioctls *ioctls ;
<    int (*ioctl)(struct saa7146_fh * , unsigned int cmd , void *arg ) ;
<    struct file_operations vbi_fops ;
---
>    struct v4l2_ioctl_ops ops ;
>    struct v4l2_ioctl_ops  const  *core_ops ;
>    struct v4l2_file_operations vbi_fops ;
4829c6695,6703
< #line 196 "include/linux/kernel.h"
---
> #line 43 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/ttpci/budget-patch.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/media/dvb/ttpci/budget-patch.c"
> struct __anonstruct_313 {
>    int  : 0 ;
> };
> #line 1 "<compiler builtins>"
> long __builtin_expect(long exp , long c ) ;
> #line 21 "include/linux/log2.h"
> extern  __attribute__((__noreturn__)) int ____ilog2_NaN(void)  __attribute__((__const__)) ;
> #line 241 "include/linux/kernel.h"
4831c6705,6735
< #line 11 "include/asm/delay.h"
---
> #line 9 "include/asm-generic/getorder.h"
> __inline static int get_order(unsigned long size )  __attribute__((__const__)) ;
> #line 9 "include/asm-generic/getorder.h"
> __inline static int get_order(unsigned long size ) 
> { 
>   int order ;
> 
>   {
> #line 13
>   size = (size - 1UL) >> (12 - 1);
> #line 14
>   order = -1;
> #line 15
>   while (1) {
> #line 16
>     size = size >> 1;
> #line 17
>     order = order + 1;
> #line 15
>     if (size) {
> 
>     } else {
> #line 15
>       break;
>     }
>   }
> #line 19
>   return (order);
> }
> }
> #line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/delay.h"
4839c6743,6745
< #line 101 "include/linux/slab.h"
---
> #line 314 "include/linux/gfp.h"
> extern unsigned long __get_free_pages(gfp_t gfp_mask , unsigned int order ) ;
> #line 138 "include/linux/slab.h"
4841c6747,7617
< #line 205 "include/linux/slub_def.h"
---
> #line 201 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock_sched_notrace(void)  __attribute__((__no_instrument_function__)) ;
> #line 201 "include/linux/rcupdate.h"
> __inline static void rcu_read_lock_sched_notrace(void) 
> { 
> 
> 
>   {
> #line 203
>   while (1) {
> #line 203
>     break;
>   }
> #line 205
>   return;
> }
> }
> #line 47 "include/trace/events/kmem.h"
> extern struct tracepoint __tracepoint_kmalloc ;
> #line 47 "include/trace/events/kmem.h"
> __inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
>                                    size_t bytes_alloc , gfp_t gfp_flags ) 
> { 
>   void **it_func ;
>   void **_________p1 ;
>   long tmp ;
> 
>   {
> #line 47
>   tmp = __builtin_expect(! (! __tracepoint_kmalloc.state), 0);
> #line 47
>   if (tmp) {
> #line 47
>     while (1) {
> #line 47
>       rcu_read_lock_sched_notrace();
> #line 47
>       _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
> #line 47
>       while (1) {
> #line 47
>         break;
>       }
> #line 47
>       it_func = _________p1;
> #line 47
>       if (it_func) {
> #line 47
>         while (1) {
> #line 47
>           (*((void (*)(unsigned long call_site , void const   *ptr , size_t bytes_req ,
>                        size_t bytes_alloc , gfp_t gfp_flags ))*it_func))(call_site,
>                                                                          ptr, bytes_req,
>                                                                          bytes_alloc,
>                                                                          gfp_flags);
> #line 47
>           it_func = it_func + 1;
> #line 47
>           if (*it_func) {
> 
>           } else {
> #line 47
>             break;
>           }
>         }
>       } else {
> 
>       }
> #line 47
>       rcu_read_lock_sched_notrace();
> #line 47
>       break;
>     }
>   } else {
> 
>   }
> #line 47
>   return;
> }
> }
> #line 27 "include/linux/kmemleak.h"
> extern void ( __attribute__((__noinline__)) kmemleak_alloc)(void const   *ptr , size_t size ,
>                                                             int min_count , gfp_t gfp )  __attribute__((__section__(".ref.text"))) ;
> #line 142 "include/linux/slub_def.h"
> extern struct kmem_cache kmalloc_caches[12 + 2] ;
> #line 148 "include/linux/slub_def.h"
> __inline static int ( __attribute__((__always_inline__)) kmalloc_index)(size_t size ) 
> { 
>   int tmp ;
>   int tmp___0 ;
>   int tmp___1 ;
>   int tmp___2 ;
>   int tmp___3 ;
>   int tmp___4 ;
>   int tmp___5 ;
>   int tmp___6 ;
>   int tmp___7 ;
>   int tmp___8 ;
>   int tmp___9 ;
>   int tmp___10 ;
>   int tmp___11 ;
>   int tmp___12 ;
>   int tmp___13 ;
>   int tmp___14 ;
>   int tmp___15 ;
>   int tmp___16 ;
>   int tmp___17 ;
>   int tmp___18 ;
>   int tmp___19 ;
>   int tmp___20 ;
>   int tmp___21 ;
>   int tmp___22 ;
>   int tmp___23 ;
>   int tmp___24 ;
>   int tmp___25 ;
>   int tmp___26 ;
>   int tmp___27 ;
>   int tmp___28 ;
>   int tmp___29 ;
>   int tmp___30 ;
>   int tmp___31 ;
>   int tmp___32 ;
>   int tmp___33 ;
>   int tmp___34 ;
>   int tmp___35 ;
>   int tmp___36 ;
>   int tmp___37 ;
>   int tmp___38 ;
>   int tmp___39 ;
>   int tmp___40 ;
>   int tmp___41 ;
>   int tmp___42 ;
>   int tmp___43 ;
>   int tmp___44 ;
>   int tmp___45 ;
>   int tmp___46 ;
>   int tmp___47 ;
>   int tmp___48 ;
>   int tmp___49 ;
>   int tmp___50 ;
>   int tmp___51 ;
>   int tmp___52 ;
>   int tmp___53 ;
>   int tmp___54 ;
>   int tmp___55 ;
>   int tmp___56 ;
>   int tmp___57 ;
>   int tmp___58 ;
>   int tmp___59 ;
>   int tmp___60 ;
>   int tmp___61 ;
>   int tmp___62 ;
>   int tmp___63 ;
>   int tmp___64 ;
>   int tmp___65 ;
> 
>   {
> #line 150
>   if (! size) {
> #line 151
>     return (0);
>   } else {
> 
>   }
> #line 153
>   if (size <= (size_t )8) {
> #line 154
>     if (8 < 1) {
> #line 154
>       tmp = ____ilog2_NaN();
> #line 154
>       tmp___65 = tmp;
>     } else {
> #line 154
>       if (8ULL & (1ULL << 63)) {
> #line 154
>         tmp___64 = 63;
>       } else {
> #line 154
>         if (8ULL & (1ULL << 62)) {
> #line 154
>           tmp___63 = 62;
>         } else {
> #line 154
>           if (8ULL & (1ULL << 61)) {
> #line 154
>             tmp___62 = 61;
>           } else {
> #line 154
>             if (8ULL & (1ULL << 60)) {
> #line 154
>               tmp___61 = 60;
>             } else {
> #line 154
>               if (8ULL & (1ULL << 59)) {
> #line 154
>                 tmp___60 = 59;
>               } else {
> #line 154
>                 if (8ULL & (1ULL << 58)) {
> #line 154
>                   tmp___59 = 58;
>                 } else {
> #line 154
>                   if (8ULL & (1ULL << 57)) {
> #line 154
>                     tmp___58 = 57;
>                   } else {
> #line 154
>                     if (8ULL & (1ULL << 56)) {
> #line 154
>                       tmp___57 = 56;
>                     } else {
> #line 154
>                       if (8ULL & (1ULL << 55)) {
> #line 154
>                         tmp___56 = 55;
>                       } else {
> #line 154
>                         if (8ULL & (1ULL << 54)) {
> #line 154
>                           tmp___55 = 54;
>                         } else {
> #line 154
>                           if (8ULL & (1ULL << 53)) {
> #line 154
>                             tmp___54 = 53;
>                           } else {
> #line 154
>                             if (8ULL & (1ULL << 52)) {
> #line 154
>                               tmp___53 = 52;
>                             } else {
> #line 154
>                               if (8ULL & (1ULL << 51)) {
> #line 154
>                                 tmp___52 = 51;
>                               } else {
> #line 154
>                                 if (8ULL & (1ULL << 50)) {
> #line 154
>                                   tmp___51 = 50;
>                                 } else {
> #line 154
>                                   if (8ULL & (1ULL << 49)) {
> #line 154
>                                     tmp___50 = 49;
>                                   } else {
> #line 154
>                                     if (8ULL & (1ULL << 48)) {
> #line 154
>                                       tmp___49 = 48;
>                                     } else {
> #line 154
>                                       if (8ULL & (1ULL << 47)) {
> #line 154
>                                         tmp___48 = 47;
>                                       } else {
> #line 154
>                                         if (8ULL & (1ULL << 46)) {
> #line 154
>                                           tmp___47 = 46;
>                                         } else {
> #line 154
>                                           if (8ULL & (1ULL << 45)) {
> #line 154
>                                             tmp___46 = 45;
>                                           } else {
> #line 154
>                                             if (8ULL & (1ULL << 44)) {
> #line 154
>                                               tmp___45 = 44;
>                                             } else {
> #line 154
>                                               if (8ULL & (1ULL << 43)) {
> #line 154
>                                                 tmp___44 = 43;
>                                               } else {
> #line 154
>                                                 if (8ULL & (1ULL << 42)) {
> #line 154
>                                                   tmp___43 = 42;
>                                                 } else {
> #line 154
>                                                   if (8ULL & (1ULL << 41)) {
> #line 154
>                                                     tmp___42 = 41;
>                                                   } else {
> #line 154
>                                                     if (8ULL & (1ULL << 40)) {
> #line 154
>                                                       tmp___41 = 40;
>                                                     } else {
> #line 154
>                                                       if (8ULL & (1ULL << 39)) {
> #line 154
>                                                         tmp___40 = 39;
>                                                       } else {
> #line 154
>                                                         if (8ULL & (1ULL << 38)) {
> #line 154
>                                                           tmp___39 = 38;
>                                                         } else {
> #line 154
>                                                           if (8ULL & (1ULL << 37)) {
> #line 154
>                                                             tmp___38 = 37;
>                                                           } else {
> #line 154
>                                                             if (8ULL & (1ULL << 36)) {
> #line 154
>                                                               tmp___37 = 36;
>                                                             } else {
> #line 154
>                                                               if (8ULL & (1ULL << 35)) {
> #line 154
>                                                                 tmp___36 = 35;
>                                                               } else {
> #line 154
>                                                                 if (8ULL & (1ULL << 34)) {
> #line 154
>                                                                   tmp___35 = 34;
>                                                                 } else {
> #line 154
>                                                                   if (8ULL & (1ULL << 33)) {
> #line 154
>                                                                     tmp___34 = 33;
>                                                                   } else {
> #line 154
>                                                                     if (8ULL & (1ULL << 32)) {
> #line 154
>                                                                       tmp___33 = 32;
>                                                                     } else {
> #line 154
>                                                                       if (8ULL & (1ULL << 31)) {
> #line 154
>                                                                         tmp___32 = 31;
>                                                                       } else {
> #line 154
>                                                                         if (8ULL & (1ULL << 30)) {
> #line 154
>                                                                           tmp___31 = 30;
>                                                                         } else {
> #line 154
>                                                                           if (8ULL & (1ULL << 29)) {
> #line 154
>                                                                             tmp___30 = 29;
>                                                                           } else {
> #line 154
>                                                                             if (8ULL & (1ULL << 28)) {
> #line 154
>                                                                               tmp___29 = 28;
>                                                                             } else {
> #line 154
>                                                                               if (8ULL & (1ULL << 27)) {
> #line 154
>                                                                                 tmp___28 = 27;
>                                                                               } else {
> #line 154
>                                                                                 if (8ULL & (1ULL << 26)) {
> #line 154
>                                                                                   tmp___27 = 26;
>                                                                                 } else {
> #line 154
>                                                                                   if (8ULL & (1ULL << 25)) {
> #line 154
>                                                                                     tmp___26 = 25;
>                                                                                   } else {
> #line 154
>                                                                                     if (8ULL & (1ULL << 24)) {
> #line 154
>                                                                                       tmp___25 = 24;
>                                                                                     } else {
> #line 154
>                                                                                       if (8ULL & (1ULL << 23)) {
> #line 154
>                                                                                         tmp___24 = 23;
>                                                                                       } else {
> #line 154
>                                                                                         if (8ULL & (1ULL << 22)) {
> #line 154
>                                                                                           tmp___23 = 22;
>                                                                                         } else {
> #line 154
>                                                                                           if (8ULL & (1ULL << 21)) {
> #line 154
>                                                                                             tmp___22 = 21;
>                                                                                           } else {
> #line 154
>                                                                                             if (8ULL & (1ULL << 20)) {
> #line 154
>                                                                                               tmp___21 = 20;
>                                                                                             } else {
> #line 154
>                                                                                               if (8ULL & (1ULL << 19)) {
> #line 154
>                                                                                                 tmp___20 = 19;
>                                                                                               } else {
> #line 154
>                                                                                                 if (8ULL & (1ULL << 18)) {
> #line 154
>                                                                                                   tmp___19 = 18;
>                                                                                                 } else {
> #line 154
>                                                                                                   if (8ULL & (1ULL << 17)) {
> #line 154
>                                                                                                     tmp___18 = 17;
>                                                                                                   } else {
> #line 154
>                                                                                                     if (8ULL & (1ULL << 16)) {
> #line 154
>                                                                                                       tmp___17 = 16;
>                                                                                                     } else {
> #line 154
>                                                                                                       if (8ULL & (1ULL << 15)) {
> #line 154
>                                                                                                         tmp___16 = 15;
>                                                                                                       } else {
> #line 154
>                                                                                                         if (8ULL & (1ULL << 14)) {
> #line 154
>                                                                                                           tmp___15 = 14;
>                                                                                                         } else {
> #line 154
>                                                                                                           if (8ULL & (1ULL << 13)) {
> #line 154
>                                                                                                             tmp___14 = 13;
>                                                                                                           } else {
> #line 154
>                                                                                                             if (8ULL & (1ULL << 12)) {
> #line 154
>                                                                                                               tmp___13 = 12;
>                                                                                                             } else {
> #line 154
>                                                                                                               if (8ULL & (1ULL << 11)) {
> #line 154
>                                                                                                                 tmp___12 = 11;
>                                                                                                               } else {
> #line 154
>                                                                                                                 if (8ULL & (1ULL << 10)) {
> #line 154
>                                                                                                                   tmp___11 = 10;
>                                                                                                                 } else {
> #line 154
>                                                                                                                   if (8ULL & (1ULL << 9)) {
> #line 154
>                                                                                                                     tmp___10 = 9;
>                                                                                                                   } else {
> #line 154
>                                                                                                                     if (8ULL & (1ULL << 8)) {
> #line 154
>                                                                                                                       tmp___9 = 8;
>                                                                                                                     } else {
> #line 154
>                                                                                                                       if (8ULL & (1ULL << 7)) {
> #line 154
>                                                                                                                         tmp___8 = 7;
>                                                                                                                       } else {
> #line 154
>                                                                                                                         if (8ULL & (1ULL << 6)) {
> #line 154
>                                                                                                                           tmp___7 = 6;
>                                                                                                                         } else {
> #line 154
>                                                                                                                           if (8ULL & (1ULL << 5)) {
> #line 154
>                                                                                                                             tmp___6 = 5;
>                                                                                                                           } else {
> #line 154
>                                                                                                                             if (8ULL & (1ULL << 4)) {
> #line 154
>                                                                                                                               tmp___5 = 4;
>                                                                                                                             } else {
> #line 154
>                                                                                                                               if (8ULL & (1ULL << 3)) {
> #line 154
>                                                                                                                                 tmp___4 = 3;
>                                                                                                                               } else {
> #line 154
>                                                                                                                                 if (8ULL & (1ULL << 2)) {
> #line 154
>                                                                                                                                   tmp___3 = 2;
>                                                                                                                                 } else {
> #line 154
>                                                                                                                                   if (8ULL & (1ULL << 1)) {
> #line 154
>                                                                                                                                     tmp___2 = 1;
>                                                                                                                                   } else {
> #line 154
>                                                                                                                                     if (8ULL & (1ULL << 0)) {
> #line 154
>                                                                                                                                       tmp___1 = 0;
>                                                                                                                                     } else {
> #line 154
>                                                                                                                                       tmp___0 = ____ilog2_NaN();
> #line 154
>                                                                                                                                       tmp___1 = tmp___0;
>                                                                                                                                     }
> #line 154
>                                                                                                                                     tmp___2 = tmp___1;
>                                                                                                                                   }
> #line 154
>                                                                                                                                   tmp___3 = tmp___2;
>                                                                                                                                 }
> #line 154
>                                                                                                                                 tmp___4 = tmp___3;
>                                                                                                                               }
> #line 154
>                                                                                                                               tmp___5 = tmp___4;
>                                                                                                                             }
> #line 154
>                                                                                                                             tmp___6 = tmp___5;
>                                                                                                                           }
> #line 154
>                                                                                                                           tmp___7 = tmp___6;
>                                                                                                                         }
> #line 154
>                                                                                                                         tmp___8 = tmp___7;
>                                                                                                                       }
> #line 154
>                                                                                                                       tmp___9 = tmp___8;
>                                                                                                                     }
> #line 154
>                                                                                                                     tmp___10 = tmp___9;
>                                                                                                                   }
> #line 154
>                                                                                                                   tmp___11 = tmp___10;
>                                                                                                                 }
> #line 154
>                                                                                                                 tmp___12 = tmp___11;
>                                                                                                               }
> #line 154
>                                                                                                               tmp___13 = tmp___12;
>                                                                                                             }
> #line 154
>                                                                                                             tmp___14 = tmp___13;
>                                                                                                           }
> #line 154
>                                                                                                           tmp___15 = tmp___14;
>                                                                                                         }
> #line 154
>                                                                                                         tmp___16 = tmp___15;
>                                                                                                       }
> #line 154
>                                                                                                       tmp___17 = tmp___16;
>                                                                                                     }
> #line 154
>                                                                                                     tmp___18 = tmp___17;
>                                                                                                   }
> #line 154
>                                                                                                   tmp___19 = tmp___18;
>                                                                                                 }
> #line 154
>                                                                                                 tmp___20 = tmp___19;
>                                                                                               }
> #line 154
>                                                                                               tmp___21 = tmp___20;
>                                                                                             }
> #line 154
>                                                                                             tmp___22 = tmp___21;
>                                                                                           }
> #line 154
>                                                                                           tmp___23 = tmp___22;
>                                                                                         }
> #line 154
>                                                                                         tmp___24 = tmp___23;
>                                                                                       }
> #line 154
>                                                                                       tmp___25 = tmp___24;
>                                                                                     }
> #line 154
>                                                                                     tmp___26 = tmp___25;
>                                                                                   }
> #line 154
>                                                                                   tmp___27 = tmp___26;
>                                                                                 }
> #line 154
>                                                                                 tmp___28 = tmp___27;
>                                                                               }
> #line 154
>                                                                               tmp___29 = tmp___28;
>                                                                             }
> #line 154
>                                                                             tmp___30 = tmp___29;
>                                                                           }
> #line 154
>                                                                           tmp___31 = tmp___30;
>                                                                         }
> #line 154
>                                                                         tmp___32 = tmp___31;
>                                                                       }
> #line 154
>                                                                       tmp___33 = tmp___32;
>                                                                     }
> #line 154
>                                                                     tmp___34 = tmp___33;
>                                                                   }
> #line 154
>                                                                   tmp___35 = tmp___34;
>                                                                 }
> #line 154
>                                                                 tmp___36 = tmp___35;
>                                                               }
> #line 154
>                                                               tmp___37 = tmp___36;
>                                                             }
> #line 154
>                                                             tmp___38 = tmp___37;
>                                                           }
> #line 154
>                                                           tmp___39 = tmp___38;
>                                                         }
> #line 154
>                                                         tmp___40 = tmp___39;
>                                                       }
> #line 154
>                                                       tmp___41 = tmp___40;
>                                                     }
> #line 154
>                                                     tmp___42 = tmp___41;
>                                                   }
> #line 154
>                                                   tmp___43 = tmp___42;
>                                                 }
> #line 154
>                                                 tmp___44 = tmp___43;
>                                               }
> #line 154
>                                               tmp___45 = tmp___44;
>                                             }
> #line 154
>                                             tmp___46 = tmp___45;
>                                           }
> #line 154
>                                           tmp___47 = tmp___46;
>                                         }
> #line 154
>                                         tmp___48 = tmp___47;
>                                       }
> #line 154
>                                       tmp___49 = tmp___48;
>                                     }
> #line 154
>                                     tmp___50 = tmp___49;
>                                   }
> #line 154
>                                   tmp___51 = tmp___50;
>                                 }
> #line 154
>                                 tmp___52 = tmp___51;
>                               }
> #line 154
>                               tmp___53 = tmp___52;
>                             }
> #line 154
>                             tmp___54 = tmp___53;
>                           }
> #line 154
>                           tmp___55 = tmp___54;
>                         }
> #line 154
>                         tmp___56 = tmp___55;
>                       }
> #line 154
>                       tmp___57 = tmp___56;
>                     }
> #line 154
>                     tmp___58 = tmp___57;
>                   }
> #line 154
>                   tmp___59 = tmp___58;
>                 }
> #line 154
>                 tmp___60 = tmp___59;
>               }
> #line 154
>               tmp___61 = tmp___60;
>             }
> #line 154
>             tmp___62 = tmp___61;
>           }
> #line 154
>           tmp___63 = tmp___62;
>         }
> #line 154
>         tmp___64 = tmp___63;
>       }
> #line 154
>       tmp___65 = tmp___64;
>     }
> #line 154
>     return (tmp___65);
>   } else {
> 
>   }
> #line 156
>   if ((8 <= 32 && size > (size_t )64) && size <= (size_t )96) {
> #line 157
>     return (1);
>   } else {
> 
>   }
> #line 158
>   if ((8 <= 64 && size > (size_t )128) && size <= (size_t )192) {
> #line 159
>     return (2);
>   } else {
> 
>   }
> #line 160
>   if (size <= (size_t )8) {
> #line 160
>     return (3);
>   } else {
> 
>   }
> #line 161
>   if (size <= (size_t )16) {
> #line 161
>     return (4);
>   } else {
> 
>   }
> #line 162
>   if (size <= (size_t )32) {
> #line 162
>     return (5);
>   } else {
> 
>   }
> #line 163
>   if (size <= (size_t )64) {
> #line 163
>     return (6);
>   } else {
> 
>   }
> #line 164
>   if (size <= (size_t )128) {
> #line 164
>     return (7);
>   } else {
> 
>   }
> #line 165
>   if (size <= (size_t )256) {
> #line 165
>     return (8);
>   } else {
> 
>   }
> #line 166
>   if (size <= (size_t )512) {
> #line 166
>     return (9);
>   } else {
> 
>   }
> #line 167
>   if (size <= (size_t )1024) {
> #line 167
>     return (10);
>   } else {
> 
>   }
> #line 168
>   if (size <= (size_t )(2 * 1024)) {
> #line 168
>     return (11);
>   } else {
> 
>   }
> #line 169
>   if (size <= (size_t )(4 * 1024)) {
> #line 169
>     return (12);
>   } else {
> 
>   }
> #line 174
>   if (size <= (size_t )(8 * 1024)) {
> #line 174
>     return (13);
>   } else {
> 
>   }
> #line 175
>   if (size <= (size_t )(16 * 1024)) {
> #line 175
>     return (14);
>   } else {
> 
>   }
> #line 176
>   if (size <= (size_t )(32 * 1024)) {
> #line 176
>     return (15);
>   } else {
> 
>   }
> #line 177
>   if (size <= (size_t )(64 * 1024)) {
> #line 177
>     return (16);
>   } else {
> 
>   }
> #line 178
>   if (size <= (size_t )(128 * 1024)) {
> #line 178
>     return (17);
>   } else {
> 
>   }
> #line 179
>   if (size <= (size_t )(256 * 1024)) {
> #line 179
>     return (18);
>   } else {
> 
>   }
> #line 180
>   if (size <= (size_t )(512 * 1024)) {
> #line 180
>     return (19);
>   } else {
> 
>   }
> #line 181
>   if (size <= (size_t )(1024 * 1024)) {
> #line 181
>     return (20);
>   } else {
> 
>   }
> #line 182
>   if (size <= (size_t )((2 * 1024) * 1024)) {
> #line 182
>     return (21);
>   } else {
> 
>   }
> #line 183
>   return (-1);
> }
> }
> #line 200 "include/linux/slub_def.h"
> __inline static struct kmem_cache *( __attribute__((__always_inline__)) kmalloc_slab)(size_t size ) 
> { 
>   int index ;
>   int tmp ;
> 
>   {
> #line 202
>   tmp = kmalloc_index(size);
> #line 202
>   index = tmp;
> #line 204
>   if (index == 0) {
> #line 205
>     return ((void *)0);
>   } else {
> 
>   }
> #line 207
>   return (& kmalloc_caches[index]);
> }
> }
> #line 217
> extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
> #line 218
4843c7619,7658
< #line 212 "include/linux/slub_def.h"
---
> #line 223 "include/linux/slub_def.h"
> __inline static void *( __attribute__((__always_inline__)) kmem_cache_alloc_notrace)(struct kmem_cache *s ,
>                                                                                      gfp_t gfpflags ) 
> { 
>   void *tmp ;
> 
>   {
> #line 226
>   tmp = kmem_cache_alloc(s, gfpflags);
> #line 226
>   return (tmp);
> }
> }
> #line 230 "include/linux/slub_def.h"
> __inline static void *( __attribute__((__always_inline__)) kmalloc_large)(size_t size ,
>                                                                           gfp_t flags ) 
> { 
>   unsigned int order ;
>   int tmp ;
>   void *ret ;
>   unsigned long tmp___0 ;
> 
>   {
> #line 232
>   tmp = get_order(size);
> #line 232
>   order = tmp;
> #line 233
>   tmp___0 = __get_free_pages(flags | 16384U, order);
> #line 233
>   ret = (void *)tmp___0;
> #line 235
>   kmemleak_alloc(ret, size, 1, flags);
> #line 236
>   trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
> #line 238
>   return (ret);
> }
> }
> #line 241 "include/linux/slub_def.h"
4847c7662,7666
<   void *tmp___2 ;
---
>   void *ret ;
>   void *tmp ;
>   struct kmem_cache *s ;
>   struct kmem_cache *tmp___0 ;
>   void *tmp___1 ;
4850,4853c7669,7708
< #line 227
<   tmp___2 = __kmalloc(size, flags);
< #line 227
<   return (tmp___2);
---
> #line 245
>   if (0) {
> #line 246
>     if (size > 2UL * (1UL << 12)) {
> #line 247
>       tmp = kmalloc_large(size, flags);
> #line 247
>       return (tmp);
>     } else {
> 
>     }
> #line 249
>     if (! (flags & 1U)) {
> #line 250
>       tmp___0 = kmalloc_slab(size);
> #line 250
>       s = tmp___0;
> #line 252
>       if (! s) {
> #line 253
>         return ((void *)16);
>       } else {
> 
>       }
> #line 255
>       ret = kmem_cache_alloc_notrace(s, flags);
> #line 257
>       trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
> #line 259
>       return (ret);
>     } else {
> 
>     }
>   } else {
> 
>   }
> #line 262
>   tmp___1 = __kmalloc(size, flags);
> #line 262
>   return (tmp___1);
4857,4858c7712,7714
< extern int ( /* format attribute */  request_module)(char const   *name  , ...) ;
< #line 128 "include/linux/moduleparam.h"
---
> extern int ( /* format attribute */  __request_module)(bool wait , char const   *name 
>                                                        , ...) ;
> #line 169 "include/linux/moduleparam.h"
4860c7716
< #line 129
---
> #line 170
4862c7718
< #line 176
---
> #line 226
4864c7720
< #line 177
---
> #line 227
4866c7722
< #line 65 "include/linux/module.h"
---
> #line 68 "include/linux/module.h"
4868c7724
< #line 66
---
> #line 69
4870c7726
< #line 84
---
> #line 88
4872c7728
< #line 170
---
> #line 177
4874c7730
< #line 381
---
> #line 451
4876c7732
< #line 34 "include/asm/io.h"
---
> #line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/io.h"
4882c7738
< #line 34
---
> #line 22
4886c7742
< #line 34
---
> #line 22
4890c7746
< #line 42 "include/asm/io.h"
---
> #line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/io.h"
4896c7752
< #line 42
---
> #line 30
4900c7756
< #line 42
---
> #line 30
4904c7760
< #line 61 "include/linux/i2c.h"
---
> #line 63 "include/linux/i2c.h"
4906c7762
< #line 195 "drivers/media/dvb/dvb-core/dvb_frontend.h"
---
> #line 377 "drivers/media/dvb/dvb-core/dvb_frontend.h"
4908c7764
< #line 198
---
> #line 380
4910c7766
< #line 200
---
> #line 382
4912c7768
< #line 107 "drivers/media/dvb/frontends/stv0299.h"
---
> #line 110 "drivers/media/dvb/frontends/stv0299.h"
4919c7775
< #line 108
---
> #line 111
4921c7777
< #line 109
---
> #line 112
4923c7779
< #line 109
---
> #line 112
4925c7781
< #line 110
---
> #line 113
4927c7783
< #line 111
---
> #line 114
4932c7788
< #line 112
---
> #line 115
4936c7792
< #line 154 "include/media/saa7146.h"
---
> #line 162 "include/media/saa7146.h"
4938c7794
< #line 155
---
> #line 163
4940c7796
< #line 162
---
> #line 170
4944c7800
< #line 110
---
> #line 111
4947,4948d7802
< #line 113
< extern void ttpci_budget_init_hooks(struct budget *budget ) ;
4950c7804
< extern int ttpci_budget_deinit(struct budget *budget ) ;
---
> extern void ttpci_budget_init_hooks(struct budget *budget ) ;
4951a7806,7807
> extern int ttpci_budget_deinit(struct budget *budget ) ;
> #line 116
4953c7809
< #line 119
---
> #line 120
5115c7971,7972
<      {104, alps_bsru6_inittab, 88000000UL, 1, 0, 1, 1, (unsigned char)0, 100, & alps_bsru6_set_symbol_rate};
---
>      {104, alps_bsru6_inittab, 88000000UL, 1, 0, 1, 1, (unsigned char)0, 100, & alps_bsru6_set_symbol_rate,
>     0};
5122c7979
< static struct kparam_array  const  __param_arr_adapter_nr  =    {sizeof(adapter_nr) / sizeof(adapter_nr[0]) + (sizeof(char [1 - 2 * 0]) - 1UL),
---
> static struct kparam_array  const  __param_arr_adapter_nr  =    {sizeof(adapter_nr) / sizeof(adapter_nr[0]) + sizeof(struct __anonstruct_313 ),
5132c7989
< __section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_adapter_nr, 292, & param_array_set, & param_array_get, {.arr = & __param_arr_adapter_nr}};
---
> __section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_adapter_nr, 292, 0, & param_array_set, & param_array_get, {.arr = & __param_arr_adapter_nr}};
5935c8792
<     request_module("symbol:ves1x93_attach");
---
>     __request_module(true, "symbol:ves1x93_attach");
5988c8845
<     request_module("symbol:stv0299_attach");
---
>     __request_module(true, "symbol:stv0299_attach");
6043c8900
<     request_module("symbol:tda8083_attach");
---
>     __request_module(true, "symbol:tda8083_attach");
6502c9359
< static int budget_patch_init(void)  __attribute__((__section__(".init.text"))) ;
---
> static int budget_patch_init(void)  __attribute__((__section__(".init.text"), __no_instrument_function__)) ;
6533,6540c9390,9400
<      '\000'}, 0, & __this_module, {{0, 0}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0,
<                                                                              0, 0,
<                                                                              0, 0,
<                                                                              0, 0,
<                                                                              0, 0,
<                                                                              0, 0},
<                                    {{{0U}, 0U, 0U, 0}, {0, 0}, 0U}}, pci_tbl, 0, & budget_patch_attach,
<     & budget_patch_detach, 1024, & ttpci_budget_irq10_handler};
---
>      '\000'}, 0, & __this_module, {{0, 0}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0,
>                                                                           0, (_Bool)0,
>                                                                           0, 0, 0,
>                                                                           0, 0, 0,
>                                                                           0, 0}, {{{0U},
>                                                                                    0U,
>                                                                                    0U,
>                                                                                    0},
>                                                                                   {0,
>                                                                                    0}}},
>     pci_tbl, 0, & budget_patch_attach, & budget_patch_detach, 1024, & ttpci_budget_irq10_handler};
6700,6702c9560
< #line 1 "<compiler builtins>"
< long __builtin_expect(long exp , long c ) ;
< #line 135 "include/linux/mutex.h"
---
> #line 136 "include/linux/mutex.h"
6704,6705d9561
< #line 136
< int ( __attribute__((__warn_unused_result__)) mutex_lock_interruptible)(struct mutex *lock ) ;
6706a9563,9564
> int ( __attribute__((__warn_unused_result__)) mutex_lock_interruptible)(struct mutex *lock ) ;
> #line 138
6708c9566
< #line 148
---
> #line 151
6710c9568
< #line 149
---
> #line 152
6711a9570,9571
> #line 153
> int atomic_dec_and_mutex_lock(atomic_t *cnt , struct mutex *lock ) ;
