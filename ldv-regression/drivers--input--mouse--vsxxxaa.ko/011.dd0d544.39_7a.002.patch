19a20,21
> #line 43 "include/asm-generic/int-ll64.h"
> typedef unsigned char u8;
23a26,27
> #line 51 "include/asm-generic/int-ll64.h"
> typedef long long s64;
48,49d51
< #line 18 "include/linux/types.h"
< typedef __u32 __kernel_dev_t;
50a53,54
> typedef __u32 __kernel_dev_t;
> #line 24 "include/linux/types.h"
52c56
< #line 23 "include/linux/types.h"
---
> #line 26 "include/linux/types.h"
54,55d57
< #line 31 "include/linux/types.h"
< typedef __kernel_clockid_t clockid_t;
56a59,60
> typedef __kernel_clockid_t clockid_t;
> #line 37 "include/linux/types.h"
58c62
< #line 36 "include/linux/types.h"
---
> #line 39 "include/linux/types.h"
60c64
< #line 37 "include/linux/types.h"
---
> #line 40 "include/linux/types.h"
62c66
< #line 50 "include/linux/types.h"
---
> #line 53 "include/linux/types.h"
64c68
< #line 59 "include/linux/types.h"
---
> #line 62 "include/linux/types.h"
66c70
< #line 64 "include/linux/types.h"
---
> #line 67 "include/linux/types.h"
68c72
< #line 74 "include/linux/types.h"
---
> #line 77 "include/linux/types.h"
70c74
< #line 138 "include/linux/types.h"
---
> #line 141 "include/linux/types.h"
72c76
< #line 139 "include/linux/types.h"
---
> #line 142 "include/linux/types.h"
74c78
< #line 179 "include/linux/types.h"
---
> #line 201 "include/linux/types.h"
76c80
< #line 180 "include/linux/types.h"
---
> #line 202 "include/linux/types.h"
78c82
< #line 192 "include/linux/types.h"
---
> #line 214 "include/linux/types.h"
80c84
<    int volatile   counter ;
---
>    int counter ;
82c86
< #line 192 "include/linux/types.h"
---
> #line 214 "include/linux/types.h"
84c88
< #line 197 "include/linux/types.h"
---
> #line 219 "include/linux/types.h"
86c90
<    long volatile   counter ;
---
>    long counter ;
88c92
< #line 197 "include/linux/types.h"
---
> #line 219 "include/linux/types.h"
90c94,110
< #line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
---
> #line 220 "include/linux/types.h"
> struct list_head {
>    struct list_head *next ;
>    struct list_head *prev ;
> };
> #line 225
> struct hlist_node;
> #line 225 "include/linux/types.h"
> struct hlist_head {
>    struct hlist_node *first ;
> };
> #line 229 "include/linux/types.h"
> struct hlist_node {
>    struct hlist_node *next ;
>    struct hlist_node **pprev ;
> };
> #line 22 "include/linux/bitops.h"
92c112
< #line 44 "include/linux/dynamic_debug.h"
---
> #line 50 "include/linux/dynamic_debug.h"
99c119,121
< #line 111 "include/linux/kernel.h"
---
> #line 70 "include/asm-generic/bug.h"
> struct completion;
> #line 71
101c123
< #line 210
---
> #line 289 "include/linux/kernel.h"
103c125
< #line 679
---
> #line 639
105c127
< #line 680
---
> #line 640
107,115c129,130
< #line 681 "include/linux/kernel.h"
< struct __anonstruct_ldv_1609_9 {
<    unsigned long arg0 ;
<    unsigned long arg1 ;
<    unsigned long arg2 ;
<    unsigned long arg3 ;
< };
< #line 681 "include/linux/kernel.h"
< struct __anonstruct_futex_10 {
---
> #line 641 "include/linux/kernel.h"
> struct __anonstruct_futex_9 {
123,124c138,139
< #line 681 "include/linux/kernel.h"
< struct __anonstruct_nanosleep_11 {
---
> #line 641 "include/linux/kernel.h"
> struct __anonstruct_nanosleep_10 {
130c145
< #line 681
---
> #line 641
132,133c147,148
< #line 681 "include/linux/kernel.h"
< struct __anonstruct_poll_12 {
---
> #line 641 "include/linux/kernel.h"
> struct __anonstruct_poll_11 {
140,145c155,159
< #line 681 "include/linux/kernel.h"
< union __anonunion_ldv_1632_8 {
<    struct __anonstruct_ldv_1609_9 ldv_1609 ;
<    struct __anonstruct_futex_10 futex ;
<    struct __anonstruct_nanosleep_11 nanosleep ;
<    struct __anonstruct_poll_12 poll ;
---
> #line 641 "include/linux/kernel.h"
> union __anonunion_ldv_1806_8 {
>    struct __anonstruct_futex_9 futex ;
>    struct __anonstruct_nanosleep_10 nanosleep ;
>    struct __anonstruct_poll_11 poll ;
147c161
< #line 681 "include/linux/kernel.h"
---
> #line 641 "include/linux/kernel.h"
150c164
<    union __anonunion_ldv_1632_8 ldv_1632 ;
---
>    union __anonunion_ldv_1806_8 ldv_1806 ;
152c166
< #line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
---
> #line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
158c172
< #line 213 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
---
> #line 215 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
182c196
< #line 138 "include/linux/init.h"
---
> #line 145 "include/linux/init.h"
184c198
< #line 285 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 288 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
186c200
< #line 298
---
> #line 301
188,189c202,203
< #line 319 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
< struct raw_spinlock;
---
> #line 320 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
> struct arch_spinlock;
207c221
< #line 423 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 421 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
209,210c223,224
< #line 627 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct_mm_segment_t_29 {
---
> #line 622 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct_mm_segment_t_28 {
213,214c227,228
< #line 627 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< typedef struct __anonstruct_mm_segment_t_29 mm_segment_t;
---
> #line 622 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> typedef struct __anonstruct_mm_segment_t_28 mm_segment_t;
230,245d243
< #line 56 "include/linux/prefetch.h"
< struct list_head {
<    struct list_head *next ;
<    struct list_head *prev ;
< };
< #line 327 "include/linux/list.h"
< struct hlist_node;
< #line 327 "include/linux/list.h"
< struct hlist_head {
<    struct hlist_node *first ;
< };
< #line 543 "include/linux/list.h"
< struct hlist_node {
<    struct hlist_node *next ;
<    struct hlist_node **pprev ;
< };
247c245
< struct raw_spinlock {
---
> struct arch_spinlock {
251c249
< typedef struct raw_spinlock raw_spinlock_t;
---
> typedef struct arch_spinlock arch_spinlock_t;
253c251
< struct __anonstruct_raw_rwlock_t_30 {
---
> struct __anonstruct_arch_rwlock_t_29 {
257c255
< typedef struct __anonstruct_raw_rwlock_t_30 raw_rwlock_t;
---
> typedef struct __anonstruct_arch_rwlock_t_29 arch_rwlock_t;
260c258
< #line 56 "include/linux/debug_locks.h"
---
> #line 55 "include/linux/debug_locks.h"
267c265
< #line 24 "include/linux/stacktrace.h"
---
> #line 26 "include/linux/stacktrace.h"
271c269
< #line 38 "include/linux/lockdep.h"
---
> #line 53 "include/linux/lockdep.h"
275c273
< #line 42 "include/linux/lockdep.h"
---
> #line 59 "include/linux/lockdep.h"
293c291
< #line 127 "include/linux/lockdep.h"
---
> #line 144 "include/linux/lockdep.h"
296c294
<    struct lock_class *class_cache ;
---
>    struct lock_class *class_cache[2U] ;
301,303c299,301
< #line 32 "include/linux/spinlock_types.h"
< struct __anonstruct_spinlock_t_31 {
<    raw_spinlock_t raw_lock ;
---
> #line 549 "include/linux/lockdep.h"
> struct raw_spinlock {
>    arch_spinlock_t raw_lock ;
309,311c307,323
< #line 32 "include/linux/spinlock_types.h"
< typedef struct __anonstruct_spinlock_t_31 spinlock_t;
< #line 48 "include/linux/spinlock_types.h"
---
> #line 33 "include/linux/spinlock_types.h"
> struct __anonstruct_ldv_5914_31 {
>    u8 __padding[1U] ;
>    struct lockdep_map dep_map ;
> };
> #line 33 "include/linux/spinlock_types.h"
> union __anonunion_ldv_5915_30 {
>    struct raw_spinlock rlock ;
>    struct __anonstruct_ldv_5914_31 ldv_5914 ;
> };
> #line 33 "include/linux/spinlock_types.h"
> struct spinlock {
>    union __anonunion_ldv_5915_30 ldv_5915 ;
> };
> #line 77 "include/linux/spinlock_types.h"
> typedef struct spinlock spinlock_t;
> #line 23 "include/linux/rwlock_types.h"
313c325
<    raw_rwlock_t raw_lock ;
---
>    arch_rwlock_t raw_lock ;
319c331
< #line 48 "include/linux/spinlock_types.h"
---
> #line 23 "include/linux/rwlock_types.h"
321c333,339
< #line 169 "include/linux/seqlock.h"
---
> #line 112 "include/linux/seqlock.h"
> struct seqcount {
>    unsigned int sequence ;
> };
> #line 123 "include/linux/seqlock.h"
> typedef struct seqcount seqcount_t;
> #line 235 "include/linux/seqlock.h"
326c344
< #line 267 "include/linux/time.h"
---
> #line 285 "include/linux/time.h"
349c367
< #line 643 "include/linux/mmzone.h"
---
> #line 645 "include/linux/mmzone.h"
359c377
< #line 154 "include/linux/mutex.h"
---
> #line 162 "include/linux/mutex.h"
361c379
< #line 156 "include/linux/mutex.h"
---
> #line 163 "include/linux/mutex.h"
363c381
<    __s32 activity ;
---
>    long count ;
368c386
< #line 165 "include/linux/ioport.h"
---
> #line 175 "include/linux/ioport.h"
370c388,394
< #line 85 "include/linux/debugobjects.h"
---
> #line 312 "include/linux/jiffies.h"
> union ktime {
>    s64 tv64 ;
> };
> #line 59 "include/linux/ktime.h"
> typedef union ktime ktime_t;
> #line 99 "include/linux/debugobjects.h"
372c396
< #line 86 "include/linux/debugobjects.h"
---
> #line 100 "include/linux/debugobjects.h"
375a400
>    struct tvec_base *base ;
378c403,404
<    struct tvec_base *base ;
---
>    int slack ;
>    int start_pid ;
381d406
<    int start_pid ;
384c409
< #line 253 "include/linux/timer.h"
---
> #line 302 "include/linux/timer.h"
386c411
< #line 18 "include/linux/workqueue.h"
---
> #line 45 "include/linux/workqueue.h"
393c418,423
< #line 36 "include/linux/pm.h"
---
> #line 443 "include/linux/workqueue.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
> };
> #line 46 "include/linux/pm.h"
397c427
< #line 45 "include/linux/pm.h"
---
> #line 52 "include/linux/pm.h"
399c429
< #line 46 "include/linux/pm.h"
---
> #line 53 "include/linux/pm.h"
419,429c449
< #line 215
< enum dpm_state {
<     DPM_INVALID = 0,
<     DPM_ON = 1,
<     DPM_PREPARING = 2,
<     DPM_RESUMING = 3,
<     DPM_SUSPENDING = 4,
<     DPM_OFF = 5,
<     DPM_OFF_IRQ = 6
< } ;
< #line 225
---
> #line 272
436c456
< #line 232
---
> #line 279
441c461,462
<     RPM_REQ_RESUME = 3
---
>     RPM_REQ_AUTOSUSPEND = 3,
>     RPM_REQ_RESUME = 4
443c464,466
< #line 239 "include/linux/pm.h"
---
> #line 287
> struct wakeup_source;
> #line 288 "include/linux/pm.h"
447,448c470,472
<    unsigned char should_wakeup : 1 ;
<    enum dpm_state status ;
---
>    unsigned char async_suspend : 1 ;
>    unsigned char in_suspend : 1 ;
>    spinlock_t lock ;
449a474,475
>    struct completion completion ;
>    struct wakeup_source *wakeup ;
454d479
<    spinlock_t lock ;
461a487,492
>    unsigned char run_wake : 1 ;
>    unsigned char runtime_auto : 1 ;
>    unsigned char no_callbacks : 1 ;
>    unsigned char irq_safe : 1 ;
>    unsigned char use_autosuspend : 1 ;
>    unsigned char timer_autosuspends : 1 ;
464a496,504
>    int autosuspend_delay ;
>    unsigned long last_busy ;
>    unsigned long active_jiffies ;
>    unsigned long suspended_jiffies ;
>    unsigned long accounting_timestamp ;
> };
> #line 467 "include/linux/pm.h"
> struct dev_power_domain {
>    struct dev_pm_ops ops ;
466c506
< #line 49 "include/linux/topology.h"
---
> #line 71 "include/asm-generic/iomap.h"
476c516
< #line 180 "include/linux/elf.h"
---
> #line 202 "include/linux/elf.h"
485c525
< #line 188 "include/linux/elf.h"
---
> #line 210 "include/linux/elf.h"
487c527,529
< #line 406
---
> #line 443
> struct sock;
> #line 444
489c531,544
< #line 407 "include/linux/elf.h"
---
> #line 445
> enum kobj_ns_type {
>     KOBJ_NS_TYPE_NONE = 0,
>     KOBJ_NS_TYPE_NET = 1,
>     KOBJ_NS_TYPES = 2
> } ;
> #line 451 "include/linux/elf.h"
> struct kobj_ns_type_operations {
>    enum kobj_ns_type type ;
>    void const   *(*current_ns)(void) ;
>    void const   *(*netlink_ns)(struct sock * ) ;
>    void const   *(*initial_ns)(void) ;
> };
> #line 55 "include/linux/kobject_ns.h"
492d546
<    struct module *owner ;
493a548,549
>    struct lock_class_key *key ;
>    struct lock_class_key skey ;
501c557,568
< #line 75 "include/linux/sysfs.h"
---
> #line 62 "include/linux/sysfs.h"
> struct bin_attribute {
>    struct attribute attr ;
>    size_t size ;
>    void *private ;
>    ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                    loff_t  , size_t  ) ;
>    ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                     loff_t  , size_t  ) ;
>    int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
> };
> #line 98 "include/linux/sysfs.h"
506c573
< #line 81
---
> #line 116
508c575
< #line 131 "include/linux/sysfs.h"
---
> #line 185 "include/linux/sysfs.h"
512c579
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
514c581
< #line 48
---
> #line 49
516c583
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
531c598
< #line 106 "include/linux/kobject.h"
---
> #line 109 "include/linux/kobject.h"
534c601
<    struct sysfs_ops *sysfs_ops ;
---
>    struct sysfs_ops  const  *sysfs_ops ;
535a603,604
>    struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
>    void const   *(*namespace)(struct kobject * ) ;
537c606
< #line 112 "include/linux/kobject.h"
---
> #line 117 "include/linux/kobject.h"
544c613
< #line 119 "include/linux/kobject.h"
---
> #line 124 "include/linux/kobject.h"
546,548c615,617
<    int (*filter)(struct kset * , struct kobject * ) ;
<    char const   *(*name)(struct kset * , struct kobject * ) ;
<    int (*uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
---
>    int (* const  filter)(struct kset * , struct kobject * ) ;
>    char const   *(* const  name)(struct kset * , struct kobject * ) ;
>    int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
550c619
< #line 136 "include/linux/kobject.h"
---
> #line 141 "include/linux/kobject.h"
555c624
<    struct kset_uevent_ops *uevent_ops ;
---
>    struct kset_uevent_ops  const  *uevent_ops ;
557c626
< #line 210
---
> #line 219
559c628,634
< #line 38 "include/linux/moduleparam.h"
---
> #line 220 "include/linux/kobject.h"
> struct kernel_param_ops {
>    int (*set)(char const   * , struct kernel_param  const  * ) ;
>    int (*get)(char * , struct kernel_param  const  * ) ;
>    void (*free)(void * ) ;
> };
> #line 44 "include/linux/moduleparam.h"
561c636
< #line 38
---
> #line 44
563,564c638,639
< #line 38 "include/linux/moduleparam.h"
< union __anonunion_ldv_10224_109 {
---
> #line 44 "include/linux/moduleparam.h"
> union __anonunion_ldv_11961_124 {
569c644
< #line 38 "include/linux/moduleparam.h"
---
> #line 44 "include/linux/moduleparam.h"
571a647
>    struct kernel_param_ops  const  *ops ;
574,576c650
<    int (*set)(char const   * , struct kernel_param * ) ;
<    int (*get)(char * , struct kernel_param * ) ;
<    union __anonunion_ldv_10224_109 ldv_10224 ;
---
>    union __anonunion_ldv_11961_124 ldv_11961 ;
578c652
< #line 55 "include/linux/moduleparam.h"
---
> #line 59 "include/linux/moduleparam.h"
583c657
< #line 61 "include/linux/moduleparam.h"
---
> #line 65 "include/linux/moduleparam.h"
587,588c661
<    int (*set)(char const   * , struct kernel_param * ) ;
<    int (*get)(char * , struct kernel_param * ) ;
---
>    struct kernel_param_ops  const  *ops ;
592c665
< #line 91 "include/linux/completion.h"
---
> #line 398 "include/linux/moduleparam.h"
597c670
< #line 306 "include/linux/rcupdate.h"
---
> #line 778 "include/linux/rcupdate.h"
599c672,677
< #line 307 "include/linux/rcupdate.h"
---
> #line 779 "include/linux/rcupdate.h"
> struct tracepoint_func {
>    void *func ;
>    void *data ;
> };
> #line 29 "include/linux/tracepoint.h"
605,650c683
<    void **funcs ;
< };
< #line 79 "include/linux/kmemleak.h"
< struct kmem_cache_cpu {
<    void **freelist ;
<    struct page *page ;
<    int node ;
<    unsigned int offset ;
<    unsigned int objsize ;
<    unsigned int stat[18U] ;
< };
< #line 46 "include/linux/slub_def.h"
< struct kmem_cache_node {
<    spinlock_t list_lock ;
<    unsigned long nr_partial ;
<    struct list_head partial ;
<    atomic_long_t nr_slabs ;
<    atomic_long_t total_objects ;
<    struct list_head full ;
< };
< #line 57 "include/linux/slub_def.h"
< struct kmem_cache_order_objects {
<    unsigned long x ;
< };
< #line 67 "include/linux/slub_def.h"
< struct kmem_cache {
<    unsigned long flags ;
<    int size ;
<    int objsize ;
<    int offset ;
<    struct kmem_cache_order_objects oo ;
<    struct kmem_cache_node local_node ;
<    struct kmem_cache_order_objects max ;
<    struct kmem_cache_order_objects min ;
<    gfp_t allocflags ;
<    int refcount ;
<    void (*ctor)(void * ) ;
<    int inuse ;
<    int align ;
<    unsigned long min_partial ;
<    char const   *name ;
<    struct list_head list ;
<    struct kobject kobj ;
<    int remote_node_defrag_ratio ;
<    struct kmem_cache_node *node[512U] ;
<    struct kmem_cache_cpu *cpu_slab[4096U] ;
---
>    struct tracepoint_func *funcs ;
652c685
< #line 155 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/local.h"
---
> #line 84 "include/linux/tracepoint.h"
656c689
< #line 100 "include/trace/events/module.h"
---
> #line 127 "include/trace/events/module.h"
661c694
< #line 46 "include/linux/module.h"
---
> #line 48 "include/linux/module.h"
671c704
< #line 58
---
> #line 66
673c706
< #line 58 "include/linux/module.h"
---
> #line 66 "include/linux/module.h"
680c713
< #line 70
---
> #line 78
682c715
< #line 179
---
> #line 217
688c721,726
< #line 185
---
> #line 223 "include/linux/module.h"
> struct module_ref {
>    unsigned int incs ;
>    unsigned int decs ;
> };
> #line 416
690c728
< #line 185
---
> #line 416
692c730
< #line 185
---
> #line 416
694c732
< #line 185 "include/linux/module.h"
---
> #line 416 "include/linux/module.h"
729a768,769
>    unsigned int init_ro_size ;
>    unsigned int core_ro_size ;
743a784
>    unsigned int percpu_size ;
745c786
<    struct tracepoint *tracepoints ;
---
>    struct tracepoint * const  *tracepoints_ptrs ;
749c790
<    struct ftrace_event_call *trace_events ;
---
>    struct ftrace_event_call **trace_events ;
751c792,793
<    struct list_head modules_which_use_me ;
---
>    struct list_head source_list ;
>    struct list_head target_list ;
754c796
<    char *refptr ;
---
>    struct module_ref *refptr ;
758,760c800,844
< #line 542
< struct device_driver;
< #line 715
---
> #line 118 "include/linux/kmemleak.h"
> struct kmem_cache_cpu {
>    void **freelist ;
>    unsigned long tid ;
>    struct page *page ;
>    int node ;
>    unsigned int stat[19U] ;
> };
> #line 48 "include/linux/slub_def.h"
> struct kmem_cache_node {
>    spinlock_t list_lock ;
>    unsigned long nr_partial ;
>    struct list_head partial ;
>    atomic_long_t nr_slabs ;
>    atomic_long_t total_objects ;
>    struct list_head full ;
> };
> #line 59 "include/linux/slub_def.h"
> struct kmem_cache_order_objects {
>    unsigned long x ;
> };
> #line 69 "include/linux/slub_def.h"
> struct kmem_cache {
>    struct kmem_cache_cpu *cpu_slab ;
>    unsigned long flags ;
>    unsigned long min_partial ;
>    int size ;
>    int objsize ;
>    int offset ;
>    struct kmem_cache_order_objects oo ;
>    struct kmem_cache_order_objects max ;
>    struct kmem_cache_order_objects min ;
>    gfp_t allocflags ;
>    int refcount ;
>    void (*ctor)(void * ) ;
>    int inuse ;
>    int align ;
>    int reserved ;
>    char const   *name ;
>    struct list_head list ;
>    struct kobject kobj ;
>    int remote_node_defrag_ratio ;
>    struct kmem_cache_node *node[1024U] ;
> };
> #line 335 "include/linux/slab.h"
767a852,856
> #line 41 "include/asm-generic/sections.h"
> struct exception_table_entry {
>    unsigned long insn ;
>    unsigned long fixup ;
> };
775c864,881
< #line 58 "include/linux/input.h"
---
> #line 49 "include/linux/input.h"
> struct input_absinfo {
>    __s32 value ;
>    __s32 minimum ;
>    __s32 maximum ;
>    __s32 fuzz ;
>    __s32 flat ;
>    __s32 resolution ;
> };
> #line 77 "include/linux/input.h"
> struct input_keymap_entry {
>    __u8 flags ;
>    __u8 len ;
>    __u16 index ;
>    __u32 keycode ;
>    __u8 scancode[32U] ;
> };
> #line 101 "include/linux/input.h"
780c886
< #line 792 "include/linux/input.h"
---
> #line 928 "include/linux/input.h"
785c891
< #line 802 "include/linux/input.h"
---
> #line 938 "include/linux/input.h"
792c898
< #line 821 "include/linux/input.h"
---
> #line 957 "include/linux/input.h"
797c903
< #line 831 "include/linux/input.h"
---
> #line 967 "include/linux/input.h"
803c909
< #line 843 "include/linux/input.h"
---
> #line 979 "include/linux/input.h"
812c918
< #line 864 "include/linux/input.h"
---
> #line 1000 "include/linux/input.h"
823c929
< #line 895 "include/linux/input.h"
---
> #line 1031 "include/linux/input.h"
828,829c934,935
< #line 908 "include/linux/input.h"
< union __anonunion_u_112 {
---
> #line 1044 "include/linux/input.h"
> union __anonunion_u_126 {
836c942
< #line 908 "include/linux/input.h"
---
> #line 1044 "include/linux/input.h"
843c949
<    union __anonunion_u_112 u ;
---
>    union __anonunion_u_126 u ;
845c951
< #line 947
---
> #line 1083
853,859c959
< #line 67 "include/linux/klist.h"
< struct semaphore {
<    spinlock_t lock ;
<    unsigned int count ;
<    struct list_head wait_list ;
< };
< #line 48 "include/linux/semaphore.h"
---
> #line 67
861c961
< #line 48 "include/linux/semaphore.h"
---
> #line 67 "include/linux/klist.h"
870c970
< struct driver_private;
---
> struct device_driver;
872c972
< struct class;
---
> struct driver_private;
874c974
< struct class_private;
---
> struct class;
876c976
< struct bus_type;
---
> struct subsys_private;
878,879c978,981
< struct bus_type_private;
< #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
---
> struct bus_type;
> #line 23
> struct device_node;
> #line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
885c987
< #line 50 "include/linux/device.h"
---
> #line 49 "include/linux/device.h"
887c989
< #line 50
---
> #line 49
889c991
< #line 50 "include/linux/device.h"
---
> #line 49 "include/linux/device.h"
903c1005
<    struct bus_type_private *p ;
---
>    struct subsys_private *p ;
904a1007,1008
> #line 121
> struct of_device_id;
910a1015,1016
>    bool suppress_bind_attrs ;
>    struct of_device_id  const  *of_match_table ;
920c1026
< #line 151 "include/linux/device.h"
---
> #line 155 "include/linux/device.h"
926c1032
< #line 181
---
> #line 185
928c1034
< #line 181 "include/linux/device.h"
---
> #line 185 "include/linux/device.h"
933a1040
>    struct bin_attribute *dev_bin_attrs ;
940a1048,1049
>    struct kobj_ns_type_operations  const  *ns_type ;
>    void const   *(*namespace)(struct device * ) ;
942c1051
<    struct class_private *p ;
---
>    struct subsys_private *p ;
944c1053
< #line 208
---
> #line 216
946c1055
< #line 247 "include/linux/device.h"
---
> #line 255 "include/linux/device.h"
949,950c1058,1059
<    ssize_t (*show)(struct class * , char * ) ;
<    ssize_t (*store)(struct class * , char const   * , size_t  ) ;
---
>    ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
>    ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
952c1061
< #line 279 "include/linux/device.h"
---
> #line 306 "include/linux/device.h"
961c1070
< #line 306 "include/linux/device.h"
---
> #line 333 "include/linux/device.h"
968c1077
< #line 367 "include/linux/device.h"
---
> #line 394 "include/linux/device.h"
973c1082
< #line 376
---
> #line 403
975c1084
< #line 376 "include/linux/device.h"
---
> #line 403 "include/linux/device.h"
982c1091
<    struct semaphore sem ;
---
>    struct mutex mutex ;
986a1096
>    struct dev_power_domain *pwr_domain ;
993a1104,1105
>    struct device_node *of_node ;
>    struct of_device_id  const  *of_match ;
1002c1114,1143
< #line 394 "include/linux/rculist.h"
---
> #line 458 "include/linux/device.h"
> struct wakeup_source {
>    char *name ;
>    struct list_head entry ;
>    spinlock_t lock ;
>    struct timer_list timer ;
>    unsigned long timer_expires ;
>    ktime_t total_time ;
>    ktime_t max_time ;
>    ktime_t last_time ;
>    unsigned long event_count ;
>    unsigned long active_count ;
>    unsigned long relax_count ;
>    unsigned long hit_count ;
>    unsigned char active : 1 ;
> };
> #line 763
> struct block_device;
> #line 427 "include/linux/rculist.h"
> struct hlist_bl_node;
> #line 427 "include/linux/rculist.h"
> struct hlist_bl_head {
>    struct hlist_bl_node *first ;
> };
> #line 35 "include/linux/list_bl.h"
> struct hlist_bl_node {
>    struct hlist_bl_node *next ;
>    struct hlist_bl_node **pprev ;
> };
> #line 114 "include/linux/rculist_bl.h"
1004c1145
< #line 395
---
> #line 115
1006c1147
< #line 396
---
> #line 116
1008c1149
< #line 397 "include/linux/rculist.h"
---
> #line 117 "include/linux/rculist_bl.h"
1014c1155
< #line 77 "include/linux/dcache.h"
---
> #line 100 "include/linux/dcache.h"
1016,1017c1157,1162
< #line 77 "include/linux/dcache.h"
< union __anonunion_d_u_113 {
---
> #line 100
> struct dentry_operations;
> #line 100
> struct super_block;
> #line 100 "include/linux/dcache.h"
> union __anonunion_d_u_127 {
1021,1025c1166
< #line 77
< struct dentry_operations;
< #line 77
< struct super_block;
< #line 77 "include/linux/dcache.h"
---
> #line 100 "include/linux/dcache.h"
1027d1167
<    atomic_t d_count ;
1029,1032c1169,1170
<    spinlock_t d_lock ;
<    int d_mounted ;
<    struct inode *d_inode ;
<    struct hlist_node d_hash ;
---
>    seqcount_t d_seq ;
>    struct hlist_bl_node d_hash ;
1035,1039c1173,1176
<    struct list_head d_lru ;
<    union __anonunion_d_u_113 d_u ;
<    struct list_head d_subdirs ;
<    struct list_head d_alias ;
<    unsigned long d_time ;
---
>    struct inode *d_inode ;
>    unsigned char d_iname[32U] ;
>    unsigned int d_count ;
>    spinlock_t d_lock ;
1041a1179
>    unsigned long d_time ;
1043c1181,1184
<    unsigned char d_iname[32U] ;
---
>    struct list_head d_lru ;
>    union __anonunion_d_u_127 d_u ;
>    struct list_head d_subdirs ;
>    struct list_head d_alias ;
1045c1186
< #line 126 "include/linux/dcache.h"
---
> #line 151 "include/linux/dcache.h"
1048,1050c1189,1192
<    int (*d_hash)(struct dentry * , struct qstr * ) ;
<    int (*d_compare)(struct dentry * , struct qstr * , struct qstr * ) ;
<    int (*d_delete)(struct dentry * ) ;
---
>    int (*d_hash)(struct dentry  const  * , struct inode  const  * , struct qstr * ) ;
>    int (*d_compare)(struct dentry  const  * , struct inode  const  * , struct dentry  const  * ,
>                     struct inode  const  * , unsigned int  , char const   * , struct qstr  const  * ) ;
>    int (*d_delete)(struct dentry  const  * ) ;
1053a1196,1197
>    struct vfsmount *(*d_automount)(struct path * ) ;
>    int (*d_manage)(struct dentry * , bool  ) ;
1055c1199
< #line 382 "include/linux/dcache.h"
---
> #line 422 "include/linux/dcache.h"
1060c1204
< #line 55 "include/linux/radix-tree.h"
---
> #line 51 "include/linux/radix-tree.h"
1062c1206
< #line 55 "include/linux/radix-tree.h"
---
> #line 51 "include/linux/radix-tree.h"
1068c1212
< #line 193
---
> #line 229
1107c1251
< #line 570 "include/linux/capability.h"
---
> #line 45 "include/linux/semaphore.h"
1130c1274
< #line 413 "include/linux/fs.h"
---
> #line 423 "include/linux/fs.h"
1142,1154c1286
< #line 472 "include/linux/fs.h"
< struct if_dqblk {
<    __u64 dqb_bhardlimit ;
<    __u64 dqb_bsoftlimit ;
<    __u64 dqb_curspace ;
<    __u64 dqb_ihardlimit ;
<    __u64 dqb_isoftlimit ;
<    __u64 dqb_curinodes ;
<    __u64 dqb_btime ;
<    __u64 dqb_itime ;
<    __u32 dqb_valid ;
< };
< #line 117 "include/linux/quota.h"
---
> #line 119 "include/linux/quota.h"
1161c1293
< #line 150 "include/linux/quota.h"
---
> #line 172 "include/linux/percpu_counter.h"
1192c1324
< #line 141 "include/linux/dqblk_xfs.h"
---
> #line 150 "include/linux/dqblk_xfs.h"
1194c1326
< #line 142 "include/linux/dqblk_xfs.h"
---
> #line 151 "include/linux/dqblk_xfs.h"
1208c1340
< #line 156
---
> #line 165
1210c1342
< #line 182 "include/linux/quota.h"
---
> #line 185 "include/linux/quota.h"
1212,1213d1343
< #line 183 "include/linux/quota.h"
< typedef long long qsize_t;
1214a1345,1346
> typedef long long qsize_t;
> #line 189 "include/linux/quota.h"
1226c1358
< #line 208
---
> #line 211
1228c1360
< #line 209 "include/linux/quota.h"
---
> #line 212 "include/linux/quota.h"
1240c1372
< #line 251 "include/linux/quota.h"
---
> #line 271 "include/linux/quota.h"
1256c1388
< #line 279 "include/linux/quota.h"
---
> #line 299 "include/linux/quota.h"
1266c1398
< #line 293 "include/linux/quota.h"
---
> #line 310 "include/linux/quota.h"
1268,1274d1399
<    int (*initialize)(struct inode * , int  ) ;
<    int (*drop)(struct inode * ) ;
<    int (*alloc_space)(struct inode * , qsize_t  , int  ) ;
<    int (*alloc_inode)(struct inode  const  * , qsize_t  ) ;
<    int (*free_space)(struct inode * , qsize_t  ) ;
<    int (*free_inode)(struct inode  const  * , qsize_t  ) ;
<    int (*transfer)(struct inode * , struct iattr * ) ;
1282,1285c1407
<    int (*reserve_space)(struct inode * , qsize_t  , int  ) ;
<    int (*claim_space)(struct inode * , qsize_t  ) ;
<    void (*release_rsv)(struct inode * , qsize_t  ) ;
<    qsize_t (*get_reserved_space)(struct inode * ) ;
---
>    qsize_t *(*get_reserved_space)(struct inode * ) ;
1287c1409
< #line 319 "include/linux/quota.h"
---
> #line 324 "include/linux/quota.h"
1289,1291c1411,1414
<    int (*quota_on)(struct super_block * , int  , int  , char * , int  ) ;
<    int (*quota_off)(struct super_block * , int  , int  ) ;
<    int (*quota_sync)(struct super_block * , int  ) ;
---
>    int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
>    int (*quota_on_meta)(struct super_block * , int  , int  ) ;
>    int (*quota_off)(struct super_block * , int  ) ;
>    int (*quota_sync)(struct super_block * , int  , int  ) ;
1294,1295c1417,1418
<    int (*get_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
<    int (*set_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
---
>    int (*get_dqblk)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
>    int (*set_dqblk)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
1298,1299d1420
<    int (*get_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
<    int (*set_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
1301c1422
< #line 334 "include/linux/quota.h"
---
> #line 340 "include/linux/quota.h"
1304c1425
<    struct quota_format_ops *qf_ops ;
---
>    struct quota_format_ops  const  *qf_ops ;
1308c1429
< #line 378 "include/linux/quota.h"
---
> #line 386 "include/linux/quota.h"
1316c1437
<    struct quota_format_ops *ops[2U] ;
---
>    struct quota_format_ops  const  *ops[2U] ;
1318c1439
< #line 401
---
> #line 417
1320c1441
< #line 402
---
> #line 418
1322,1323c1443,1444
< #line 562 "include/linux/fs.h"
< union __anonunion_arg_116 {
---
> #line 573 "include/linux/fs.h"
> union __anonunion_arg_130 {
1327,1328c1448,1449
< #line 562 "include/linux/fs.h"
< struct __anonstruct_read_descriptor_t_115 {
---
> #line 573 "include/linux/fs.h"
> struct __anonstruct_read_descriptor_t_129 {
1331c1452
<    union __anonunion_arg_116 arg ;
---
>    union __anonunion_arg_130 arg ;
1334,1336c1455,1457
< #line 562 "include/linux/fs.h"
< typedef struct __anonstruct_read_descriptor_t_115 read_descriptor_t;
< #line 565 "include/linux/fs.h"
---
> #line 573 "include/linux/fs.h"
> typedef struct __anonstruct_read_descriptor_t_129 read_descriptor_t;
> #line 576 "include/linux/fs.h"
1340d1460
<    void (*sync_page)(struct page * ) ;
1351a1472
>    void (*freepage)(struct page * ) ;
1360c1481
< #line 614
---
> #line 625
1362c1483
< #line 615 "include/linux/fs.h"
---
> #line 626 "include/linux/fs.h"
1379a1501
>    struct mutex unmap_mutex ;
1381c1503
< #line 636
---
> #line 648
1383c1505
< #line 636
---
> #line 648
1385c1507
< #line 636 "include/linux/fs.h"
---
> #line 648 "include/linux/fs.h"
1387a1510
>    int bd_openers ;
1390d1512
<    int bd_openers ;
1392a1515
>    void *bd_claiming ;
1395c1518,1519
<    struct list_head bd_holder_list ;
---
>    bool bd_write_holder ;
>    struct list_head bd_holder_disks ;
1407c1531
< #line 704
---
> #line 719
1409c1533
< #line 705
---
> #line 720
1411c1535,1540
< #line 705
---
> #line 720 "include/linux/fs.h"
> union __anonunion_ldv_17020_131 {
>    struct list_head i_dentry ;
>    struct rcu_head i_rcu ;
> };
> #line 720
1413c1542
< #line 705
---
> #line 720
1415c1544
< #line 705
---
> #line 720
1417,1418c1546,1547
< #line 705 "include/linux/fs.h"
< union __anonunion_ldv_14544_117 {
---
> #line 720 "include/linux/fs.h"
> union __anonunion_ldv_17047_132 {
1423c1552
< #line 705 "include/linux/fs.h"
---
> #line 720 "include/linux/fs.h"
1424a1554,1563
>    umode_t i_mode ;
>    uid_t i_uid ;
>    gid_t i_gid ;
>    struct inode_operations  const  *i_op ;
>    struct super_block *i_sb ;
>    spinlock_t i_lock ;
>    unsigned int i_flags ;
>    struct mutex i_mutex ;
>    unsigned long i_state ;
>    unsigned long dirtied_when ;
1426c1565,1566
<    struct list_head i_list ;
---
>    struct list_head i_wb_list ;
>    struct list_head i_lru ;
1428c1568
<    struct list_head i_dentry ;
---
>    union __anonunion_ldv_17020_131 ldv_17020 ;
1432,1433d1571
<    uid_t i_uid ;
<    gid_t i_gid ;
1434a1573
>    unsigned int i_blkbits ;
1441d1579
<    unsigned int i_blkbits ;
1443,1445d1580
<    umode_t i_mode ;
<    spinlock_t i_lock ;
<    struct mutex i_mutex ;
1447d1581
<    struct inode_operations  const  *i_op ;
1449d1582
<    struct super_block *i_sb ;
1455c1588
<    union __anonunion_ldv_14544_117 ldv_14544 ;
---
>    union __anonunion_ldv_17047_132 ldv_17047 ;
1458,1463c1591,1592
<    struct hlist_head i_fsnotify_mark_entries ;
<    struct list_head inotify_watches ;
<    struct mutex inotify_mutex ;
<    unsigned long i_state ;
<    unsigned long dirtied_when ;
<    unsigned int i_flags ;
---
>    struct hlist_head i_fsnotify_marks ;
>    atomic_t i_readcount ;
1470c1599
< #line 873 "include/linux/fs.h"
---
> #line 897 "include/linux/fs.h"
1479c1608
< #line 881 "include/linux/fs.h"
---
> #line 905 "include/linux/fs.h"
1488,1489c1617,1618
< #line 904 "include/linux/fs.h"
< union __anonunion_f_u_118 {
---
> #line 928 "include/linux/fs.h"
> union __anonunion_f_u_133 {
1493c1622
< #line 904 "include/linux/fs.h"
---
> #line 928 "include/linux/fs.h"
1495c1624
<    union __anonunion_f_u_118 f_u ;
---
>    union __anonunion_f_u_133 f_u ;
1498a1628
>    int f_sb_list_cpu ;
1513c1643
< #line 1027
---
> #line 1059
1515c1645
< #line 1027 "include/linux/fs.h"
---
> #line 1059 "include/linux/fs.h"
1517c1647
< #line 1028 "include/linux/fs.h"
---
> #line 1060 "include/linux/fs.h"
1522c1652
< #line 1033 "include/linux/fs.h"
---
> #line 1065 "include/linux/fs.h"
1527d1656
<    void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
1530d1658
<    int (*fl_mylease)(struct file_lock * , struct file_lock * ) ;
1550c1678
< struct __anonstruct_afs_120 {
---
> struct __anonstruct_afs_135 {
1555c1683
< union __anonunion_fl_u_119 {
---
> union __anonunion_fl_u_134 {
1558c1686
<    struct __anonstruct_afs_120 afs ;
---
>    struct __anonstruct_afs_135 afs ;
1578c1706
<    union __anonunion_fl_u_119 fl_u ;
---
>    union __anonunion_fl_u_134 fl_u ;
1580c1708
< #line 1136 "include/linux/fs.h"
---
> #line 1166 "include/linux/fs.h"
1581a1710
>    spinlock_t fa_lock ;
1585a1715
>    struct rcu_head fa_rcu ;
1587c1717
< #line 1313
---
> #line 1358
1589c1719
< #line 1313
---
> #line 1358
1591c1721
< #line 1313
---
> #line 1358
1593c1723
< #line 1313
---
> #line 1358
1595c1725
< #line 1313 "include/linux/fs.h"
---
> #line 1358 "include/linux/fs.h"
1599,1600d1728
<    unsigned long s_blocksize ;
<    unsigned char s_blocksize_bits ;
1601a1730,1731
>    unsigned char s_blocksize_bits ;
>    unsigned long s_blocksize ;
1614d1743
<    int s_need_sync ;
1617c1746
<    struct xattr_handler **s_xattr ;
---
>    struct xattr_handler  const  **s_xattr ;
1619,1620c1748,1749
<    struct hlist_head s_anon ;
<    struct list_head s_files ;
---
>    struct hlist_bl_head s_anon ;
>    struct list_head *s_files ;
1630a1760
>    u8 s_uuid[16U] ;
1633d1762
<    struct mutex s_vfs_rename_mutex ;
1634a1764
>    struct mutex s_vfs_rename_mutex ;
1636a1767
>    struct dentry_operations  const  *s_d_op ;
1638c1769
< #line 1431 "include/linux/fs.h"
---
> #line 1485 "include/linux/fs.h"
1645c1776
< #line 1470 "include/linux/fs.h"
---
> #line 1524 "include/linux/fs.h"
1658d1788
<    int (*ioctl)(struct inode * , struct file * , unsigned int  , unsigned long  ) ;
1665c1795
<    int (*fsync)(struct file * , struct dentry * , int  ) ;
---
>    int (*fsync)(struct file * , int  ) ;
1679a1810
>    long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
1681c1812
< #line 1510 "include/linux/fs.h"
---
> #line 1564 "include/linux/fs.h"
1683d1813
<    int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
1684a1815,1820
>    void *(*follow_link)(struct dentry * , struct nameidata * ) ;
>    int (*permission)(struct inode * , int  , unsigned int  ) ;
>    int (*check_acl)(struct inode * , int  , unsigned int  ) ;
>    int (*readlink)(struct dentry * , char * , int  ) ;
>    void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
>    int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
1692,1694d1827
<    int (*readlink)(struct dentry * , char * , int  ) ;
<    void *(*follow_link)(struct dentry * , struct nameidata * ) ;
<    void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
1696,1697d1828
<    int (*permission)(struct inode * , int  ) ;
<    int (*check_acl)(struct inode * , int  ) ;
1705d1835
<    long (*fallocate)(struct inode * , int  , loff_t  , loff_t  ) ;
1708c1838
< #line 1553 "include/linux/fs.h"
---
> #line 1610 "include/linux/fs.h"
1713,1715c1843,1845
<    int (*write_inode)(struct inode * , int  ) ;
<    void (*drop_inode)(struct inode * ) ;
<    void (*delete_inode)(struct inode * ) ;
---
>    int (*write_inode)(struct inode * , struct writeback_control * ) ;
>    int (*drop_inode)(struct inode * ) ;
>    void (*evict_inode)(struct inode * ) ;
1723d1852
<    void (*clear_inode)(struct inode * ) ;
1725a1855,1856
>    int (*show_devname)(struct seq_file * , struct vfsmount * ) ;
>    int (*show_path)(struct seq_file * , struct vfsmount * ) ;
1732c1863
< #line 1737 "include/linux/fs.h"
---
> #line 1791 "include/linux/fs.h"
1736c1867
<    int (*get_sb)(struct file_system_type * , int  , char const   * , void * , struct vfsmount * ) ;
---
>    struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
1742a1874
>    struct lock_class_key s_vfs_rename_key ;
1756a1889,1895
> #line 215 "include/linux/mod_devicetable.h"
> struct of_device_id {
>    char name[32U] ;
>    char type[32U] ;
>    char compatible[128U] ;
>    void *data ;
> };
1775c1914
< #line 475
---
> #line 518
1777c1916,1918
< #line 475
---
> #line 518
> struct input_mt_slot;
> #line 518
1779c1920
< #line 475 "include/linux/mod_devicetable.h"
---
> #line 518 "include/linux/mod_devicetable.h"
1784a1926
>    unsigned long propbit[1U] ;
1793a1936
>    unsigned int hint_events_per_packet ;
1797,1798c1940,1941
<    int (*setkeycode)(struct input_dev * , int  , int  ) ;
<    int (*getkeycode)(struct input_dev * , int  , int * ) ;
---
>    int (*setkeycode)(struct input_dev * , struct input_keymap_entry  const  * , unsigned int * ) ;
>    int (*getkeycode)(struct input_dev * , struct input_keymap_entry * ) ;
1802,1803d1944
<    int sync ;
<    int abs[64U] ;
1804a1946,1950
>    struct input_mt_slot *mt ;
>    int mtsize ;
>    int slot ;
>    int trkid ;
>    struct input_absinfo *absinfo ;
1809,1813d1954
<    int absmax[64U] ;
<    int absmin[64U] ;
<    int absfuzz[64U] ;
<    int absflat[64U] ;
<    int absres[64U] ;
1822a1964
>    bool sync ;
1827c1969
< #line 1133 "include/linux/input.h"
---
> #line 1286 "include/linux/input.h"
1830a1973,1974
>    bool (*filter)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
>    bool (*match)(struct input_handler * , struct input_dev * ) ;
1838d1981
<    struct input_device_id  const  *blacklist ;
1842c1985
< #line 1235 "include/linux/input.h"
---
> #line 1396 "include/linux/input.h"
1852c1995
< #line 1357 "include/linux/input.h"
---
> #line 1558 "include/linux/input.h"
1867c2010
< #line 1412
---
> #line 1617
1869c2012
< #line 1412 "include/linux/input.h"
---
> #line 1617 "include/linux/input.h"
1875d2017
<    bool registered ;
1884c2026,2027
<    struct serio *child ;
---
>    struct list_head child_node ;
>    struct list_head children ;
1891c2034
< #line 55 "include/linux/serio.h"
---
> #line 56 "include/linux/serio.h"
1893,1895c2036,2037
<    void *private ;
<    char *description ;
<    struct serio_device_id *id_table ;
---
>    char const   *description ;
>    struct serio_device_id  const  *id_table ;
1917,1920d2058
< #line 963 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< typedef int ldv_func_ret_type___1;
< #line 1 "<compiler builtins>"
< long __builtin_expect(long exp , long c ) ;
1933,1935c2071
< #line 185 "include/linux/kernel.h"
< extern int snprintf(char * , size_t  , char const   *  , ...) ;
< #line 241
---
> #line 99 "include/linux/printk.h"
1937,1963c2073,2074
< #line 9 "include/asm-generic/getorder.h"
< __inline static int get_order(unsigned long size ) 
< { 
<   int order ;
< 
<   {
< #line 13
<   size = (size - 1UL) >> 11;
< #line 14
<   order = -1;
<   ldv_1682: 
< #line 16
<   size = size >> 1;
< #line 17
<   order = order + 1;
< #line 18
<   if (size != 0UL) {
< #line 19
<     goto ldv_1682;
<   } else {
< 
<   }
< 
< #line 19
<   return (order);
< }
< }
---
> #line 264 "include/linux/kernel.h"
> extern int snprintf(char * , size_t  , char const   *  , ...) ;
1973,1974d2083
< void ldv___ldv_spin_lock_1(spinlock_t *ldv_func_arg1 ) ;
< #line 12
1976,2027c2085,2086
< #line 16
< void ldv___ldv_spin_lock_5(spinlock_t *ldv_func_arg1 ) ;
< #line 20
< void ldv___ldv_spin_lock_8(spinlock_t *ldv_func_arg1 ) ;
< #line 24
< void ldv___ldv_spin_lock_10(spinlock_t *ldv_func_arg1 ) ;
< #line 28
< void ldv___ldv_spin_lock_12(spinlock_t *ldv_func_arg1 ) ;
< #line 32
< void ldv___ldv_spin_lock_14(spinlock_t *ldv_func_arg1 ) ;
< #line 34
< extern void __ldv_spin_unlock(spinlock_t * ) ;
< #line 37
< void ldv___ldv_spin_unlock_2(spinlock_t *ldv_func_arg1 ) ;
< #line 41
< void ldv___ldv_spin_unlock_6(spinlock_t *ldv_func_arg1 ) ;
< #line 45
< void ldv___ldv_spin_unlock_7(spinlock_t *ldv_func_arg1 ) ;
< #line 49
< void ldv___ldv_spin_unlock_9(spinlock_t *ldv_func_arg1 ) ;
< #line 53
< void ldv___ldv_spin_unlock_11(spinlock_t *ldv_func_arg1 ) ;
< #line 57
< void ldv___ldv_spin_unlock_13(spinlock_t *ldv_func_arg1 ) ;
< #line 61
< void ldv___ldv_spin_unlock_15(spinlock_t *ldv_func_arg1 ) ;
< #line 63
< extern int __ldv_spin_trylock(spinlock_t * ) ;
< #line 66
< int ldv___ldv_spin_trylock_3(spinlock_t *ldv_func_arg1 ) ;
< #line 72
< void ldv_spin_lock_d_lock_of_dentry(void) ;
< #line 73
< void ldv_spin_unlock_d_lock_of_dentry(void) ;
< #line 80
< void ldv_spin_lock_dcache_lock(void) ;
< #line 81
< void ldv_spin_unlock_dcache_lock(void) ;
< #line 88
< void ldv_spin_lock_i_lock_of_inode(void) ;
< #line 89
< void ldv_spin_unlock_i_lock_of_inode(void) ;
< #line 96
< void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) ;
< #line 97
< void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) ;
< #line 98
< int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) ;
< #line 104
< void ldv_spin_lock_lock_of_serio(void) ;
< #line 105
< void ldv_spin_unlock_lock_of_serio(void) ;
---
> #line 48
> void ldv_spin_lock_node_size_lock_of_pglist_data(void) ;
2030,2042c2089,2091
< #line 314 "include/linux/gfp.h"
< extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
< #line 201 "include/linux/rcupdate.h"
< __inline static void rcu_read_lock_sched_notrace(void) 
< { 
< 
< 
<   {
< #line 205
<   return;
< }
< }
< #line 138 "include/linux/slab.h"
---
> #line 96 "include/linux/module.h"
> extern struct module __this_module ;
> #line 141 "include/linux/slab.h"
2044,2295c2093
< #line 79 "include/trace/events/kmem.h"
< extern struct tracepoint __tracepoint_kmalloc ;
< #line 79 "include/trace/events/kmem.h"
< __inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
<                                    size_t bytes_alloc , gfp_t gfp_flags ) 
< { 
<   void **it_func ;
<   void **_________p1 ;
<   long tmp ;
< 
<   {
< #line 47
<   tmp = __builtin_expect(__tracepoint_kmalloc.state != 0, 0L);
< #line 47
<   if (tmp != 0L) {
< #line 47
<     rcu_read_lock_sched_notrace();
< #line 47
<     _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
< #line 47
<     it_func = _________p1;
< #line 47
<     if ((unsigned long )it_func != (unsigned long )((void **)0)) {
<       ldv_10576: 
< #line 47
<       (*((void (*)(unsigned long  , void const   * , size_t  , size_t  , gfp_t  ))*it_func))(call_site,
<                                                                                              ptr,
<                                                                                              bytes_req,
<                                                                                              bytes_alloc,
<                                                                                              gfp_flags);
< #line 47
<       it_func = it_func + 1;
< #line 47
<       if ((unsigned long )*it_func != (unsigned long )((void *)0)) {
< #line 48
<         goto ldv_10576;
<       } else {
< 
<       }
< 
<     } else {
< 
<     }
< #line 47
<     rcu_read_lock_sched_notrace();
<   } else {
< 
<   }
< #line 49
<   return;
< }
< }
< #line 27 "include/linux/kmemleak.h"
< extern void kmemleak_alloc(void const   * , size_t  , int  , gfp_t  ) ;
< #line 142 "include/linux/slub_def.h"
< extern struct kmem_cache kmalloc_caches[14U] ;
< #line 148 "include/linux/slub_def.h"
< __inline static int kmalloc_index(size_t size ) 
< { 
< 
< 
<   {
< #line 150
<   if (size == 0UL) {
< #line 151
<     return (0);
<   } else {
< 
<   }
< #line 153
<   if (size <= 8UL) {
< #line 154
<     return (3);
<   } else {
< 
<   }
< #line 156
<   if (size > 64UL && size <= 96UL) {
< #line 157
<     return (1);
<   } else {
< 
<   }
< #line 158
<   if (size > 128UL && size <= 192UL) {
< #line 159
<     return (2);
<   } else {
< 
<   }
< #line 160
<   if (size <= 8UL) {
< #line 160
<     return (3);
<   } else {
< 
<   }
< #line 161
<   if (size <= 16UL) {
< #line 161
<     return (4);
<   } else {
< 
<   }
< #line 162
<   if (size <= 32UL) {
< #line 162
<     return (5);
<   } else {
< 
<   }
< #line 163
<   if (size <= 64UL) {
< #line 163
<     return (6);
<   } else {
< 
<   }
< #line 164
<   if (size <= 128UL) {
< #line 164
<     return (7);
<   } else {
< 
<   }
< #line 165
<   if (size <= 256UL) {
< #line 165
<     return (8);
<   } else {
< 
<   }
< #line 166
<   if (size <= 512UL) {
< #line 166
<     return (9);
<   } else {
< 
<   }
< #line 167
<   if (size <= 1024UL) {
< #line 167
<     return (10);
<   } else {
< 
<   }
< #line 168
<   if (size <= 2048UL) {
< #line 168
<     return (11);
<   } else {
< 
<   }
< #line 169
<   if (size <= 4096UL) {
< #line 169
<     return (12);
<   } else {
< 
<   }
< #line 174
<   if (size <= 8192UL) {
< #line 174
<     return (13);
<   } else {
< 
<   }
< #line 175
<   if (size <= 16384UL) {
< #line 175
<     return (14);
<   } else {
< 
<   }
< #line 176
<   if (size <= 32768UL) {
< #line 176
<     return (15);
<   } else {
< 
<   }
< #line 177
<   if (size <= 65536UL) {
< #line 177
<     return (16);
<   } else {
< 
<   }
< #line 178
<   if (size <= 131072UL) {
< #line 178
<     return (17);
<   } else {
< 
<   }
< #line 179
<   if (size <= 262144UL) {
< #line 179
<     return (18);
<   } else {
< 
<   }
< #line 180
<   if (size <= 524288UL) {
< #line 180
<     return (19);
<   } else {
< 
<   }
< #line 181
<   if (size <= 1048576UL) {
< #line 181
<     return (20);
<   } else {
< 
<   }
< #line 182
<   if (size <= 2097152UL) {
< #line 182
<     return (21);
<   } else {
< 
<   }
< #line 183
<   return (-1);
< }
< }
< #line 200 "include/linux/slub_def.h"
< __inline static struct kmem_cache *kmalloc_slab(size_t size ) 
< { 
<   int index ;
<   int tmp ;
< 
<   {
< #line 202
<   tmp = kmalloc_index(size);
< #line 202
<   index = tmp;
< #line 204
<   if (index == 0) {
< #line 205
<     return (0);
<   } else {
< 
<   }
< #line 207
<   return ((struct kmem_cache *)(& kmalloc_caches) + (unsigned long )index);
< }
< }
< #line 217
< extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
< #line 218
---
> #line 221 "include/linux/slub_def.h"
2297,2335c2095
< #line 224 "include/linux/slub_def.h"
< __inline static void *kmem_cache_alloc_notrace(struct kmem_cache *s , gfp_t gfpflags ) 
< { 
<   void *tmp ;
< 
<   {
< #line 226
<   tmp = kmem_cache_alloc(s, gfpflags);
< #line 226
<   return (tmp);
< }
< }
< #line 230 "include/linux/slub_def.h"
< __inline static void *kmalloc_large(size_t size , gfp_t flags ) 
< { 
<   unsigned int order ;
<   int tmp ;
<   void *ret ;
<   unsigned long tmp___0 ;
< 
<   {
< #line 232
<   tmp = get_order(size);
< #line 232
<   order = (unsigned int )tmp;
< #line 233
<   tmp___0 = __get_free_pages(flags | 16384U, order);
< #line 233
<   ret = (void *)tmp___0;
< #line 235
<   kmemleak_alloc((void const   *)ret, size, 1, flags);
< #line 236
<   trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, 4096UL << (int )order,
<                 flags);
< #line 238
<   return (ret);
< }
< }
< #line 241 "include/linux/slub_def.h"
---
> #line 255 "include/linux/slub_def.h"
2338,2342c2098
<   void *ret ;
<   void *tmp ;
<   struct kmem_cache *s ;
<   struct kmem_cache *tmp___0 ;
<   void *tmp___1 ;
---
>   void *tmp___2 ;
2345,2385c2101,2104
< #line 245
<   if (0) {
< #line 246
<     if (size > 8192UL) {
< #line 247
<       tmp = kmalloc_large(size, flags);
< #line 247
<       return (tmp);
<     } else {
< 
<     }
< #line 249
<     if ((flags & 1U) == 0U) {
< #line 250
<       tmp___0 = kmalloc_slab(size);
< #line 250
<       s = tmp___0;
< #line 252
<       if ((unsigned long )s == (unsigned long )((struct kmem_cache *)0)) {
< #line 253
<         return (16);
<       } else {
< 
<       }
< #line 255
<       ret = kmem_cache_alloc_notrace(s, flags);
< #line 257
<       trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, (size_t )s->size,
<                     flags);
< #line 259
<       return (ret);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 262
<   tmp___1 = __kmalloc(size, flags);
< #line 262
<   return (tmp___1);
---
> #line 270
>   tmp___2 = __kmalloc(size, flags);
> #line 270
>   return (tmp___2);
2388c2107
< #line 313 "include/linux/slab.h"
---
> #line 318 "include/linux/slab.h"
2394c2113
< #line 315
---
> #line 320
2396c2115
< #line 315
---
> #line 320
2400,2402c2119
< #line 88 "include/linux/module.h"
< extern struct module __this_module ;
< #line 492 "include/linux/device.h"
---
> #line 559 "include/linux/device.h"
2404c2121
< #line 493
---
> #line 560
2406c2123
< #line 1262 "include/linux/input.h"
---
> #line 1423 "include/linux/input.h"
2408c2125
< #line 1263
---
> #line 1424
2410c2127
< #line 1286
---
> #line 1447
2412c2129
< #line 1287
---
> #line 1448
2414c2131
< #line 1303
---
> #line 1469
2416c2133
< #line 1306 "include/linux/input.h"
---
> #line 1472 "include/linux/input.h"
2423c2140
< #line 1308
---
> #line 1474
2425c2142
< #line 1309
---
> #line 1475
2429c2146
< #line 1311 "include/linux/input.h"
---
> #line 1477 "include/linux/input.h"
2436c2153
< #line 1313
---
> #line 1479
2438c2155
< #line 1314
---
> #line 1480
2442c2159
< #line 1316 "include/linux/input.h"
---
> #line 1482 "include/linux/input.h"
2449c2166
< #line 1318
---
> #line 1484
2451c2168
< #line 1319
---
> #line 1485
2455c2172
< #line 1331 "include/linux/input.h"
---
> #line 1497 "include/linux/input.h"
2461c2178
< #line 1333
---
> #line 1499
2463,2484c2180
< #line 1334
<   return;
< }
< }
< #line 1343 "include/linux/input.h"
< __inline static void input_set_abs_params(struct input_dev *dev , int axis , int min ,
<                                           int max , int fuzz , int flat ) 
< { 
< 
< 
<   {
< #line 1345
<   dev->absmin[axis] = min;
< #line 1346
<   dev->absmax[axis] = max;
< #line 1347
<   dev->absfuzz[axis] = fuzz;
< #line 1348
<   dev->absflat[axis] = flat;
< #line 1350
<   dev->absbit[axis / 64] = dev->absbit[axis / 64] | (1UL << axis % 64);
< #line 1351
---
> #line 1500
2487a2184,2186
> #line 1525
> extern void input_set_abs_params(struct input_dev * , unsigned int  , int  , int  ,
>                                  int  , int  ) ;
2609c2308
<   goto ldv_17040;
---
>   goto ldv_19661;
2614c2313
<   goto ldv_17040;
---
>   goto ldv_19661;
2620c2319
<   goto ldv_17040;
---
>   goto ldv_19661;
2622c2321
<   ldv_17040: 
---
>   ldv_19661: 
2646,2647c2345,2346
<   goto ldv_17049;
<   ldv_17048: ;
---
>   goto ldv_19670;
>   ldv_19669: ;
2659c2358
<   ldv_17049: ;
---
>   ldv_19670: ;
2663c2362
<     goto ldv_17048;
---
>     goto ldv_19669;
2852,2853c2551,2552
<   goto ldv_17088;
<   ldv_17087: 
---
>   goto ldv_19709;
>   ldv_19708: 
2856c2555
<   ldv_17088: 
---
>   ldv_19709: 
2864c2563
<     goto ldv_17087;
---
>     goto ldv_19708;
2873,2874c2572,2573
<   goto ldv_17092;
<   ldv_17091: 
---
>   goto ldv_19713;
>   ldv_19712: 
2877c2576
<   ldv_17092: 
---
>   ldv_19713: 
2885c2584
<     goto ldv_17091;
---
>     goto ldv_19712;
2907c2606
<   ldv_17103: ;
---
>   ldv_19724: ;
2909,2910c2608,2609
<   goto ldv_17100;
<   ldv_17099: 
---
>   goto ldv_19721;
>   ldv_19720: 
2916c2615
<   ldv_17100: ;
---
>   ldv_19721: ;
2920c2619
<     goto ldv_17099;
---
>     goto ldv_19720;
2967c2666
<         goto ldv_17102;
---
>         goto ldv_19723;
2981,2982c2680,2681
<   goto ldv_17103;
<   ldv_17102: ;
---
>   goto ldv_19724;
>   ldv_19723: ;
3089c2788
<   input_set_abs_params(input_dev, 0, 0, 1023, 0, 0);
---
>   input_set_abs_params(input_dev, 0U, 0, 1023, 0, 0);
3091c2790
<   input_set_abs_params(input_dev, 1, 0, 1023, 0, 0);
---
>   input_set_abs_params(input_dev, 1U, 0, 1023, 0, 0);
3139c2838
<      {0, (char *)"Driver for DEC VSXXX-AA and -GA mice and VSXXX-AB tablet", (struct serio_device_id *)(& vsxxaa_serio_ids),
---
>      {"Driver for DEC VSXXX-AA and -GA mice and VSXXX-AB tablet", (struct serio_device_id  const  *)(& vsxxaa_serio_ids),
3141c2840
<     0, {"vsxxxaa", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
---
>     0, {"vsxxxaa", 0, 0, 0, (_Bool)0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
3210,3211c2909,2910
<   goto ldv_17173;
<   ldv_17172: 
---
>   goto ldv_19794;
>   ldv_19793: 
3238c2937
<   goto ldv_17168;
---
>   goto ldv_19789;
3252c2951
<   goto ldv_17168;
---
>   goto ldv_19789;
3259c2958
<   goto ldv_17168;
---
>   goto ldv_19789;
3262c2961
<   goto ldv_17168;
---
>   goto ldv_19789;
3264,3265c2963,2964
<   ldv_17168: ;
<   ldv_17173: 
---
>   ldv_19789: ;
>   ldv_19794: 
3271c2970
<     goto ldv_17172;
---
>     goto ldv_19793;
3288,3335d2986
< #line 941 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_lock_1(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 946
<   ldv_spin_lock_lock_of_NOT_ARG_SIGN();
< #line 948
<   __ldv_spin_lock(ldv_func_arg1);
< #line 949
<   return;
< }
< }
< #line 951 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_2(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 956
<   ldv_spin_unlock_lock_of_NOT_ARG_SIGN();
< #line 958
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 959
<   return;
< }
< }
< #line 961 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< int ldv___ldv_spin_trylock_3(spinlock_t *ldv_func_arg1 ) 
< { 
<   ldv_func_ret_type___1 ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
< 
<   {
< #line 966
<   tmp = __ldv_spin_trylock(ldv_func_arg1);
< #line 966
<   ldv_func_res = tmp;
< #line 968
<   tmp___0 = ldv_spin_trylock_lock_of_NOT_ARG_SIGN();
< #line 968
<   return (tmp___0);
< #line 970
<   return (ldv_func_res);
< }
< }
3343c2994
<   ldv_spin_lock_dcache_lock();
---
>   ldv_spin_lock_node_size_lock_of_pglist_data();
3350,3503c3001,3002
< #line 983 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_lock_5(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 988
<   ldv_spin_lock_d_lock_of_dentry();
< #line 990
<   __ldv_spin_lock(ldv_func_arg1);
< #line 991
<   return;
< }
< }
< #line 993 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_6(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 998
<   ldv_spin_unlock_d_lock_of_dentry();
< #line 1000
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 1001
<   return;
< }
< }
< #line 1003 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_7(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1008
<   ldv_spin_unlock_dcache_lock();
< #line 1010
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 1011
<   return;
< }
< }
< #line 1013 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_lock_8(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1018
<   ldv_spin_lock_d_lock_of_dentry();
< #line 1020
<   __ldv_spin_lock(ldv_func_arg1);
< #line 1021
<   return;
< }
< }
< #line 1023 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_9(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1028
<   ldv_spin_unlock_d_lock_of_dentry();
< #line 1030
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 1031
<   return;
< }
< }
< #line 1033 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_lock_10(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1038
<   ldv_spin_lock_i_lock_of_inode();
< #line 1040
<   __ldv_spin_lock(ldv_func_arg1);
< #line 1041
<   return;
< }
< }
< #line 1043 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_11(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1048
<   ldv_spin_unlock_i_lock_of_inode();
< #line 1050
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 1051
<   return;
< }
< }
< #line 1053 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_lock_12(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1058
<   ldv_spin_lock_d_lock_of_dentry();
< #line 1060
<   __ldv_spin_lock(ldv_func_arg1);
< #line 1061
<   return;
< }
< }
< #line 1063 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_13(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1068
<   ldv_spin_unlock_d_lock_of_dentry();
< #line 1070
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 1071
<   return;
< }
< }
< #line 1073 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_lock_14(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1078
<   ldv_spin_lock_lock_of_serio();
< #line 1080
<   __ldv_spin_lock(ldv_func_arg1);
< #line 1081
<   return;
< }
< }
< #line 1083 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv___ldv_spin_unlock_15(spinlock_t *ldv_func_arg1 ) 
< { 
< 
< 
<   {
< #line 1088
<   ldv_spin_unlock_lock_of_serio();
< #line 1090
<   __ldv_spin_unlock(ldv_func_arg1);
< #line 1091
<   return;
< }
< }
---
> #line 1 "<compiler builtins>"
> long __builtin_expect(long exp , long c ) ;
3697c3196
< static int ldv_spin_dcache_lock  ;
---
> static int ldv_spin_i_lock_of_inode  ;
3699c3198
< void ldv_spin_lock_dcache_lock(void) 
---
> void ldv_spin_lock_i_lock_of_inode(void) 
3705c3204
<   if (ldv_spin_dcache_lock == 1) {
---
>   if (ldv_spin_i_lock_of_inode == 1) {
3712c3211
<   ldv_spin_dcache_lock = 2;
---
>   ldv_spin_i_lock_of_inode = 2;
3718c3217
< void ldv_spin_unlock_dcache_lock(void) 
---
> void ldv_spin_unlock_i_lock_of_inode(void) 
3724c3223
<   if (ldv_spin_dcache_lock == 2) {
---
>   if (ldv_spin_i_lock_of_inode == 2) {
3731c3230
<   ldv_spin_dcache_lock = 1;
---
>   ldv_spin_i_lock_of_inode = 1;
3737c3236
< int ldv_spin_trylock_dcache_lock(void) 
---
> int ldv_spin_trylock_i_lock_of_inode(void) 
3743c3242
<   if (ldv_spin_dcache_lock == 1) {
---
>   if (ldv_spin_i_lock_of_inode == 1) {
3757c3256
<     ldv_spin_dcache_lock = 2;
---
>     ldv_spin_i_lock_of_inode = 2;
3764c3263
< void ldv_spin_unlock_wait_dcache_lock(void) 
---
> void ldv_spin_unlock_wait_i_lock_of_inode(void) 
3770c3269
<   if (ldv_spin_dcache_lock == 1) {
---
>   if (ldv_spin_i_lock_of_inode == 1) {
3781c3280
< int ldv_spin_is_locked_dcache_lock(void) 
---
> int ldv_spin_is_locked_i_lock_of_inode(void) 
3789c3288
<   if (ldv_spin_dcache_lock == 1 && ! is_spin_held_by_another_thread) {
---
>   if (ldv_spin_i_lock_of_inode == 1 && ! is_spin_held_by_another_thread) {
3799c3298
< int ldv_spin_can_lock_dcache_lock(void) 
---
> int ldv_spin_can_lock_i_lock_of_inode(void) 
3806c3305
<   tmp = ldv_spin_is_locked_dcache_lock();
---
>   tmp = ldv_spin_is_locked_i_lock_of_inode();
3820c3319
< int ldv_spin_is_contended_dcache_lock(void) 
---
> int ldv_spin_is_contended_i_lock_of_inode(void) 
3838c3337
< int ldv_atomic_dec_and_lock_dcache_lock(void) 
---
> int ldv_atomic_dec_and_lock_i_lock_of_inode(void) 
3844c3343
<   if (ldv_spin_dcache_lock == 1) {
---
>   if (ldv_spin_i_lock_of_inode == 1) {
3855c3354
<     ldv_spin_dcache_lock = 2;
---
>     ldv_spin_i_lock_of_inode = 2;
3866c3365
< static int ldv_spin_i_lock_of_inode  ;
---
> static int ldv_spin_lock_of_NOT_ARG_SIGN  ;
3868c3367
< void ldv_spin_lock_i_lock_of_inode(void) 
---
> void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) 
3874c3373
<   if (ldv_spin_i_lock_of_inode == 1) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
3881c3380
<   ldv_spin_i_lock_of_inode = 2;
---
>   ldv_spin_lock_of_NOT_ARG_SIGN = 2;
3887c3386
< void ldv_spin_unlock_i_lock_of_inode(void) 
---
> void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) 
3893c3392
<   if (ldv_spin_i_lock_of_inode == 2) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 2) {
3900c3399
<   ldv_spin_i_lock_of_inode = 1;
---
>   ldv_spin_lock_of_NOT_ARG_SIGN = 1;
3906c3405
< int ldv_spin_trylock_i_lock_of_inode(void) 
---
> int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) 
3912c3411
<   if (ldv_spin_i_lock_of_inode == 1) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
3926c3425
<     ldv_spin_i_lock_of_inode = 2;
---
>     ldv_spin_lock_of_NOT_ARG_SIGN = 2;
3933c3432
< void ldv_spin_unlock_wait_i_lock_of_inode(void) 
---
> void ldv_spin_unlock_wait_lock_of_NOT_ARG_SIGN(void) 
3939c3438
<   if (ldv_spin_i_lock_of_inode == 1) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
3950c3449
< int ldv_spin_is_locked_i_lock_of_inode(void) 
---
> int ldv_spin_is_locked_lock_of_NOT_ARG_SIGN(void) 
3958c3457
<   if (ldv_spin_i_lock_of_inode == 1 && ! is_spin_held_by_another_thread) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1 && ! is_spin_held_by_another_thread) {
3968c3467
< int ldv_spin_can_lock_i_lock_of_inode(void) 
---
> int ldv_spin_can_lock_lock_of_NOT_ARG_SIGN(void) 
3975c3474
<   tmp = ldv_spin_is_locked_i_lock_of_inode();
---
>   tmp = ldv_spin_is_locked_lock_of_NOT_ARG_SIGN();
3989c3488
< int ldv_spin_is_contended_i_lock_of_inode(void) 
---
> int ldv_spin_is_contended_lock_of_NOT_ARG_SIGN(void) 
4007c3506
< int ldv_atomic_dec_and_lock_i_lock_of_inode(void) 
---
> int ldv_atomic_dec_and_lock_lock_of_NOT_ARG_SIGN(void) 
4013c3512
<   if (ldv_spin_i_lock_of_inode == 1) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
4024c3523
<     ldv_spin_i_lock_of_inode = 2;
---
>     ldv_spin_lock_of_NOT_ARG_SIGN = 2;
4035c3534
< static int ldv_spin_lock_of_NOT_ARG_SIGN  ;
---
> static int ldv_spin_lock_of_serio  ;
4037c3536
< void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) 
---
> void ldv_spin_lock_lock_of_serio(void) 
4043c3542
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
---
>   if (ldv_spin_lock_of_serio == 1) {
4050c3549
<   ldv_spin_lock_of_NOT_ARG_SIGN = 2;
---
>   ldv_spin_lock_of_serio = 2;
4056c3555
< void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) 
---
> void ldv_spin_unlock_lock_of_serio(void) 
4062c3561
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 2) {
---
>   if (ldv_spin_lock_of_serio == 2) {
4069c3568
<   ldv_spin_lock_of_NOT_ARG_SIGN = 1;
---
>   ldv_spin_lock_of_serio = 1;
4075c3574
< int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) 
---
> int ldv_spin_trylock_lock_of_serio(void) 
4081c3580
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
---
>   if (ldv_spin_lock_of_serio == 1) {
4095c3594
<     ldv_spin_lock_of_NOT_ARG_SIGN = 2;
---
>     ldv_spin_lock_of_serio = 2;
4102c3601
< void ldv_spin_unlock_wait_lock_of_NOT_ARG_SIGN(void) 
---
> void ldv_spin_unlock_wait_lock_of_serio(void) 
4108c3607
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
---
>   if (ldv_spin_lock_of_serio == 1) {
4119c3618
< int ldv_spin_is_locked_lock_of_NOT_ARG_SIGN(void) 
---
> int ldv_spin_is_locked_lock_of_serio(void) 
4127c3626
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1 && ! is_spin_held_by_another_thread) {
---
>   if (ldv_spin_lock_of_serio == 1 && ! is_spin_held_by_another_thread) {
4137c3636
< int ldv_spin_can_lock_lock_of_NOT_ARG_SIGN(void) 
---
> int ldv_spin_can_lock_lock_of_serio(void) 
4144c3643
<   tmp = ldv_spin_is_locked_lock_of_NOT_ARG_SIGN();
---
>   tmp = ldv_spin_is_locked_lock_of_serio();
4158c3657
< int ldv_spin_is_contended_lock_of_NOT_ARG_SIGN(void) 
---
> int ldv_spin_is_contended_lock_of_serio(void) 
4176c3675
< int ldv_atomic_dec_and_lock_lock_of_NOT_ARG_SIGN(void) 
---
> int ldv_atomic_dec_and_lock_lock_of_serio(void) 
4182c3681
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
---
>   if (ldv_spin_lock_of_serio == 1) {
4193c3692
<     ldv_spin_lock_of_NOT_ARG_SIGN = 2;
---
>     ldv_spin_lock_of_serio = 2;
4204c3703
< static int ldv_spin_lock_of_serio  ;
---
> static int ldv_spin_node_size_lock_of_pglist_data  ;
4206c3705
< void ldv_spin_lock_lock_of_serio(void) 
---
> void ldv_spin_lock_node_size_lock_of_pglist_data(void) 
4212c3711
<   if (ldv_spin_lock_of_serio == 1) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 1) {
4219c3718
<   ldv_spin_lock_of_serio = 2;
---
>   ldv_spin_node_size_lock_of_pglist_data = 2;
4225c3724
< void ldv_spin_unlock_lock_of_serio(void) 
---
> void ldv_spin_unlock_node_size_lock_of_pglist_data(void) 
4231c3730
<   if (ldv_spin_lock_of_serio == 2) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 2) {
4238c3737
<   ldv_spin_lock_of_serio = 1;
---
>   ldv_spin_node_size_lock_of_pglist_data = 1;
4244c3743
< int ldv_spin_trylock_lock_of_serio(void) 
---
> int ldv_spin_trylock_node_size_lock_of_pglist_data(void) 
4250c3749
<   if (ldv_spin_lock_of_serio == 1) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 1) {
4264c3763
<     ldv_spin_lock_of_serio = 2;
---
>     ldv_spin_node_size_lock_of_pglist_data = 2;
4271c3770
< void ldv_spin_unlock_wait_lock_of_serio(void) 
---
> void ldv_spin_unlock_wait_node_size_lock_of_pglist_data(void) 
4277c3776
<   if (ldv_spin_lock_of_serio == 1) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 1) {
4288c3787
< int ldv_spin_is_locked_lock_of_serio(void) 
---
> int ldv_spin_is_locked_node_size_lock_of_pglist_data(void) 
4296c3795
<   if (ldv_spin_lock_of_serio == 1 && ! is_spin_held_by_another_thread) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 1 && ! is_spin_held_by_another_thread) {
4306c3805
< int ldv_spin_can_lock_lock_of_serio(void) 
---
> int ldv_spin_can_lock_node_size_lock_of_pglist_data(void) 
4313c3812
<   tmp = ldv_spin_is_locked_lock_of_serio();
---
>   tmp = ldv_spin_is_locked_node_size_lock_of_pglist_data();
4327c3826
< int ldv_spin_is_contended_lock_of_serio(void) 
---
> int ldv_spin_is_contended_node_size_lock_of_pglist_data(void) 
4345c3844
< int ldv_atomic_dec_and_lock_lock_of_serio(void) 
---
> int ldv_atomic_dec_and_lock_node_size_lock_of_pglist_data(void) 
4351c3850
<   if (ldv_spin_lock_of_serio == 1) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 1) {
4362c3861
<     ldv_spin_lock_of_serio = 2;
---
>     ldv_spin_node_size_lock_of_pglist_data = 2;
4381,4382d3879
<   ldv_spin_dcache_lock = 1;
< #line 642
4384c3881
< #line 644
---
> #line 642
4386c3883
< #line 646
---
> #line 644
4387a3885,3886
> #line 646
>   ldv_spin_node_size_lock_of_pglist_data = 1;
4406c3905
<   if (ldv_spin_dcache_lock == 1) {
---
>   if (ldv_spin_i_lock_of_inode == 1) {
4413c3912
<   if (ldv_spin_i_lock_of_inode == 1) {
---
>   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
4420c3919
<   if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {
---
>   if (ldv_spin_lock_of_serio == 1) {
4427c3926
<   if (ldv_spin_lock_of_serio == 1) {
---
>   if (ldv_spin_node_size_lock_of_pglist_data == 1) {
