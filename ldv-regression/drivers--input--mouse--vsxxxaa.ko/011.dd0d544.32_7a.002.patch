19a20,21
> #line 43 "include/asm-generic/int-ll64.h"
> typedef unsigned char u8;
23a26,27
> #line 51 "include/asm-generic/int-ll64.h"
> typedef long long s64;
48,49d51
< #line 18 "include/linux/types.h"
< typedef __u32 __kernel_dev_t;
50a53,54
> typedef __u32 __kernel_dev_t;
> #line 24 "include/linux/types.h"
52c56
< #line 23 "include/linux/types.h"
---
> #line 26 "include/linux/types.h"
54,55d57
< #line 31 "include/linux/types.h"
< typedef __kernel_clockid_t clockid_t;
56a59,60
> typedef __kernel_clockid_t clockid_t;
> #line 37 "include/linux/types.h"
58c62
< #line 36 "include/linux/types.h"
---
> #line 39 "include/linux/types.h"
60c64
< #line 37 "include/linux/types.h"
---
> #line 40 "include/linux/types.h"
62c66
< #line 50 "include/linux/types.h"
---
> #line 53 "include/linux/types.h"
64c68
< #line 59 "include/linux/types.h"
---
> #line 62 "include/linux/types.h"
66c70
< #line 64 "include/linux/types.h"
---
> #line 67 "include/linux/types.h"
68c72
< #line 74 "include/linux/types.h"
---
> #line 77 "include/linux/types.h"
70c74
< #line 138 "include/linux/types.h"
---
> #line 141 "include/linux/types.h"
72c76
< #line 139 "include/linux/types.h"
---
> #line 142 "include/linux/types.h"
74c78
< #line 179 "include/linux/types.h"
---
> #line 201 "include/linux/types.h"
76c80
< #line 180 "include/linux/types.h"
---
> #line 202 "include/linux/types.h"
78c82
< #line 192 "include/linux/types.h"
---
> #line 214 "include/linux/types.h"
80c84
<    int volatile   counter ;
---
>    int counter ;
82c86
< #line 192 "include/linux/types.h"
---
> #line 214 "include/linux/types.h"
84c88
< #line 197 "include/linux/types.h"
---
> #line 219 "include/linux/types.h"
86c90
<    long volatile   counter ;
---
>    long counter ;
88c92
< #line 197 "include/linux/types.h"
---
> #line 219 "include/linux/types.h"
90c94,110
< #line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
---
> #line 220 "include/linux/types.h"
> struct list_head {
>    struct list_head *next ;
>    struct list_head *prev ;
> };
> #line 225
> struct hlist_node;
> #line 225 "include/linux/types.h"
> struct hlist_head {
>    struct hlist_node *first ;
> };
> #line 229 "include/linux/types.h"
> struct hlist_node {
>    struct hlist_node *next ;
>    struct hlist_node **pprev ;
> };
> #line 22 "include/linux/bitops.h"
92c112
< #line 44 "include/linux/dynamic_debug.h"
---
> #line 50 "include/linux/dynamic_debug.h"
99c119,121
< #line 111 "include/linux/kernel.h"
---
> #line 70 "include/asm-generic/bug.h"
> struct completion;
> #line 71
101c123
< #line 210
---
> #line 289 "include/linux/kernel.h"
103c125
< #line 679
---
> #line 639
105c127
< #line 213 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
---
> #line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
129c151
< #line 138 "include/linux/init.h"
---
> #line 145 "include/linux/init.h"
131c153
< #line 277 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 280 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
133c155
< #line 285
---
> #line 288
135c157
< #line 298
---
> #line 301
137,139c159,161
< #line 319 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
< struct raw_spinlock;
< #line 301 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ds.h"
---
> #line 320 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
> struct arch_spinlock;
> #line 271 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/msr.h"
158c180
< #line 423 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 421 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
160c182
< #line 627 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 622 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
164c186
< #line 627 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 622 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
166,183c188,189
< #line 56 "include/linux/prefetch.h"
< struct list_head {
<    struct list_head *next ;
<    struct list_head *prev ;
< };
< #line 327 "include/linux/list.h"
< struct hlist_node;
< #line 327 "include/linux/list.h"
< struct hlist_head {
<    struct hlist_node *first ;
< };
< #line 543 "include/linux/list.h"
< struct hlist_node {
<    struct hlist_node *next ;
<    struct hlist_node **pprev ;
< };
< #line 634 "include/linux/list.h"
< struct raw_spinlock {
---
> #line 663 "include/linux/list.h"
> struct arch_spinlock {
187c193
< typedef struct raw_spinlock raw_spinlock_t;
---
> typedef struct arch_spinlock arch_spinlock_t;
189c195
< struct __anonstruct_raw_rwlock_t_25 {
---
> struct __anonstruct_arch_rwlock_t_25 {
193c199
< typedef struct __anonstruct_raw_rwlock_t_25 raw_rwlock_t;
---
> typedef struct __anonstruct_arch_rwlock_t_25 arch_rwlock_t;
198c204
< #line 56 "include/linux/debug_locks.h"
---
> #line 55 "include/linux/debug_locks.h"
205c211
< #line 24 "include/linux/stacktrace.h"
---
> #line 26 "include/linux/stacktrace.h"
209c215
< #line 38 "include/linux/lockdep.h"
---
> #line 53 "include/linux/lockdep.h"
213c219
< #line 42 "include/linux/lockdep.h"
---
> #line 59 "include/linux/lockdep.h"
231c237
< #line 127 "include/linux/lockdep.h"
---
> #line 144 "include/linux/lockdep.h"
234c240
<    struct lock_class *class_cache ;
---
>    struct lock_class *class_cache[2U] ;
239,241c245,247
< #line 32 "include/linux/spinlock_types.h"
< struct __anonstruct_spinlock_t_26 {
<    raw_spinlock_t raw_lock ;
---
> #line 549 "include/linux/lockdep.h"
> struct raw_spinlock {
>    arch_spinlock_t raw_lock ;
247,251c253,271
< #line 32 "include/linux/spinlock_types.h"
< typedef struct __anonstruct_spinlock_t_26 spinlock_t;
< #line 48 "include/linux/spinlock_types.h"
< struct __anonstruct_rwlock_t_27 {
<    raw_rwlock_t raw_lock ;
---
> #line 33 "include/linux/spinlock_types.h"
> struct __anonstruct_ldv_5801_27 {
>    u8 __padding[1U] ;
>    struct lockdep_map dep_map ;
> };
> #line 33 "include/linux/spinlock_types.h"
> union __anonunion_ldv_5802_26 {
>    struct raw_spinlock rlock ;
>    struct __anonstruct_ldv_5801_27 ldv_5801 ;
> };
> #line 33 "include/linux/spinlock_types.h"
> struct spinlock {
>    union __anonunion_ldv_5802_26 ldv_5802 ;
> };
> #line 77 "include/linux/spinlock_types.h"
> typedef struct spinlock spinlock_t;
> #line 23 "include/linux/rwlock_types.h"
> struct __anonstruct_rwlock_t_28 {
>    arch_rwlock_t raw_lock ;
257,259c277,279
< #line 48 "include/linux/spinlock_types.h"
< typedef struct __anonstruct_rwlock_t_27 rwlock_t;
< #line 48
---
> #line 23 "include/linux/rwlock_types.h"
> typedef struct __anonstruct_rwlock_t_28 rwlock_t;
> #line 23
261c281
< #line 48 "include/linux/spinlock_types.h"
---
> #line 23 "include/linux/rwlock_types.h"
276,282d295
< struct __anonstruct_ldv_5563_29 {
<    unsigned long arg0 ;
<    unsigned long arg1 ;
<    unsigned long arg2 ;
<    unsigned long arg3 ;
< };
< #line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
309,310c322
< union __anonunion_ldv_5586_28 {
<    struct __anonstruct_ldv_5563_29 ldv_5563 ;
---
> union __anonunion_ldv_5972_29 {
318c330
<    union __anonunion_ldv_5586_28 ldv_5586 ;
---
>    union __anonunion_ldv_5972_29 ldv_5972 ;
320c332
< #line 54 "include/linux/thread_info.h"
---
> #line 51 "include/linux/thread_info.h"
333c345,351
< #line 169 "include/linux/seqlock.h"
---
> #line 112 "include/linux/seqlock.h"
> struct seqcount {
>    unsigned int sequence ;
> };
> #line 123 "include/linux/seqlock.h"
> typedef struct seqcount seqcount_t;
> #line 235 "include/linux/seqlock.h"
338c356
< #line 267 "include/linux/time.h"
---
> #line 285 "include/linux/time.h"
361,362d378
< #line 643 "include/linux/mmzone.h"
< struct rw_semaphore;
363a380,381
> struct rw_semaphore;
> #line 646 "include/linux/mmzone.h"
365c383
<    __s32 activity ;
---
>    long count ;
370c388
< #line 165 "include/linux/ioport.h"
---
> #line 175 "include/linux/ioport.h"
372c390,396
< #line 85 "include/linux/debugobjects.h"
---
> #line 312 "include/linux/jiffies.h"
> union ktime {
>    s64 tv64 ;
> };
> #line 59 "include/linux/ktime.h"
> typedef union ktime ktime_t;
> #line 99 "include/linux/debugobjects.h"
374c398
< #line 86 "include/linux/debugobjects.h"
---
> #line 100 "include/linux/debugobjects.h"
377a402
>    struct tvec_base *base ;
380c405,406
<    struct tvec_base *base ;
---
>    int slack ;
>    int start_pid ;
383d408
<    int start_pid ;
386c411
< #line 253 "include/linux/timer.h"
---
> #line 302 "include/linux/timer.h"
388c413
< #line 18 "include/linux/workqueue.h"
---
> #line 45 "include/linux/workqueue.h"
395c420,425
< #line 36 "include/linux/pm.h"
---
> #line 443 "include/linux/workqueue.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
> };
> #line 46 "include/linux/pm.h"
399c429
< #line 45 "include/linux/pm.h"
---
> #line 52 "include/linux/pm.h"
401c431
< #line 46 "include/linux/pm.h"
---
> #line 53 "include/linux/pm.h"
421,431c451
< #line 215
< enum dpm_state {
<     DPM_INVALID = 0,
<     DPM_ON = 1,
<     DPM_PREPARING = 2,
<     DPM_RESUMING = 3,
<     DPM_SUSPENDING = 4,
<     DPM_OFF = 5,
<     DPM_OFF_IRQ = 6
< } ;
< #line 225
---
> #line 272
438c458
< #line 232
---
> #line 279
443c463,464
<     RPM_REQ_RESUME = 3
---
>     RPM_REQ_AUTOSUSPEND = 3,
>     RPM_REQ_RESUME = 4
445c466,468
< #line 239 "include/linux/pm.h"
---
> #line 287
> struct wakeup_source;
> #line 288 "include/linux/pm.h"
449,450c472,474
<    unsigned char should_wakeup : 1 ;
<    enum dpm_state status ;
---
>    unsigned char async_suspend : 1 ;
>    unsigned char in_suspend : 1 ;
>    spinlock_t lock ;
451a476,477
>    struct completion completion ;
>    struct wakeup_source *wakeup ;
456d481
<    spinlock_t lock ;
463a489,494
>    unsigned char run_wake : 1 ;
>    unsigned char runtime_auto : 1 ;
>    unsigned char no_callbacks : 1 ;
>    unsigned char irq_safe : 1 ;
>    unsigned char use_autosuspend : 1 ;
>    unsigned char timer_autosuspends : 1 ;
466a498,506
>    int autosuspend_delay ;
>    unsigned long last_busy ;
>    unsigned long active_jiffies ;
>    unsigned long suspended_jiffies ;
>    unsigned long accounting_timestamp ;
> };
> #line 467 "include/linux/pm.h"
> struct dev_power_domain {
>    struct dev_pm_ops ops ;
468c508
< #line 49 "include/linux/topology.h"
---
> #line 71 "include/asm-generic/iomap.h"
478c518
< #line 180 "include/linux/elf.h"
---
> #line 202 "include/linux/elf.h"
487c527
< #line 188 "include/linux/elf.h"
---
> #line 210 "include/linux/elf.h"
489c529,531
< #line 406
---
> #line 443
> struct sock;
> #line 444
491c533,546
< #line 407 "include/linux/elf.h"
---
> #line 445
> enum kobj_ns_type {
>     KOBJ_NS_TYPE_NONE = 0,
>     KOBJ_NS_TYPE_NET = 1,
>     KOBJ_NS_TYPES = 2
> } ;
> #line 451 "include/linux/elf.h"
> struct kobj_ns_type_operations {
>    enum kobj_ns_type type ;
>    void const   *(*current_ns)(void) ;
>    void const   *(*netlink_ns)(struct sock * ) ;
>    void const   *(*initial_ns)(void) ;
> };
> #line 55 "include/linux/kobject_ns.h"
494d548
<    struct module *owner ;
495a550,551
>    struct lock_class_key *key ;
>    struct lock_class_key skey ;
503c559,570
< #line 75 "include/linux/sysfs.h"
---
> #line 62 "include/linux/sysfs.h"
> struct bin_attribute {
>    struct attribute attr ;
>    size_t size ;
>    void *private ;
>    ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                    loff_t  , size_t  ) ;
>    ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                     loff_t  , size_t  ) ;
>    int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
> };
> #line 98 "include/linux/sysfs.h"
508c575
< #line 81
---
> #line 116
510c577
< #line 131 "include/linux/sysfs.h"
---
> #line 185 "include/linux/sysfs.h"
514c581
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
516c583
< #line 48
---
> #line 49
518c585
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
533c600
< #line 106 "include/linux/kobject.h"
---
> #line 109 "include/linux/kobject.h"
536c603
<    struct sysfs_ops *sysfs_ops ;
---
>    struct sysfs_ops  const  *sysfs_ops ;
537a605,606
>    struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
>    void const   *(*namespace)(struct kobject * ) ;
539c608
< #line 112 "include/linux/kobject.h"
---
> #line 117 "include/linux/kobject.h"
546c615
< #line 119 "include/linux/kobject.h"
---
> #line 124 "include/linux/kobject.h"
548,550c617,619
<    int (*filter)(struct kset * , struct kobject * ) ;
<    char const   *(*name)(struct kset * , struct kobject * ) ;
<    int (*uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
---
>    int (* const  filter)(struct kset * , struct kobject * ) ;
>    char const   *(* const  name)(struct kset * , struct kobject * ) ;
>    int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
552c621
< #line 136 "include/linux/kobject.h"
---
> #line 141 "include/linux/kobject.h"
557c626
<    struct kset_uevent_ops *uevent_ops ;
---
>    struct kset_uevent_ops  const  *uevent_ops ;
559c628
< #line 210
---
> #line 219
561c630,636
< #line 38 "include/linux/moduleparam.h"
---
> #line 220 "include/linux/kobject.h"
> struct kernel_param_ops {
>    int (*set)(char const   * , struct kernel_param  const  * ) ;
>    int (*get)(char * , struct kernel_param  const  * ) ;
>    void (*free)(void * ) ;
> };
> #line 44 "include/linux/moduleparam.h"
563c638
< #line 38
---
> #line 44
565,566c640,641
< #line 38 "include/linux/moduleparam.h"
< union __anonunion_ldv_10108_109 {
---
> #line 44 "include/linux/moduleparam.h"
> union __anonunion_ldv_11831_124 {
571c646
< #line 38 "include/linux/moduleparam.h"
---
> #line 44 "include/linux/moduleparam.h"
573a649
>    struct kernel_param_ops  const  *ops ;
576,578c652
<    int (*set)(char const   * , struct kernel_param * ) ;
<    int (*get)(char * , struct kernel_param * ) ;
<    union __anonunion_ldv_10108_109 ldv_10108 ;
---
>    union __anonunion_ldv_11831_124 ldv_11831 ;
580c654
< #line 55 "include/linux/moduleparam.h"
---
> #line 59 "include/linux/moduleparam.h"
585c659
< #line 61 "include/linux/moduleparam.h"
---
> #line 65 "include/linux/moduleparam.h"
589,590c663
<    int (*set)(char const   * , struct kernel_param * ) ;
<    int (*get)(char * , struct kernel_param * ) ;
---
>    struct kernel_param_ops  const  *ops ;
594c667
< #line 91 "include/linux/completion.h"
---
> #line 398 "include/linux/moduleparam.h"
599c672
< #line 306 "include/linux/rcupdate.h"
---
> #line 778 "include/linux/rcupdate.h"
601c674,679
< #line 307 "include/linux/rcupdate.h"
---
> #line 779 "include/linux/rcupdate.h"
> struct tracepoint_func {
>    void *func ;
>    void *data ;
> };
> #line 29 "include/linux/tracepoint.h"
607,652c685
<    void **funcs ;
< };
< #line 79 "include/linux/kmemleak.h"
< struct kmem_cache_cpu {
<    void **freelist ;
<    struct page *page ;
<    int node ;
<    unsigned int offset ;
<    unsigned int objsize ;
<    unsigned int stat[18U] ;
< };
< #line 46 "include/linux/slub_def.h"
< struct kmem_cache_node {
<    spinlock_t list_lock ;
<    unsigned long nr_partial ;
<    struct list_head partial ;
<    atomic_long_t nr_slabs ;
<    atomic_long_t total_objects ;
<    struct list_head full ;
< };
< #line 57 "include/linux/slub_def.h"
< struct kmem_cache_order_objects {
<    unsigned long x ;
< };
< #line 67 "include/linux/slub_def.h"
< struct kmem_cache {
<    unsigned long flags ;
<    int size ;
<    int objsize ;
<    int offset ;
<    struct kmem_cache_order_objects oo ;
<    struct kmem_cache_node local_node ;
<    struct kmem_cache_order_objects max ;
<    struct kmem_cache_order_objects min ;
<    gfp_t allocflags ;
<    int refcount ;
<    void (*ctor)(void * ) ;
<    int inuse ;
<    int align ;
<    unsigned long min_partial ;
<    char const   *name ;
<    struct list_head list ;
<    struct kobject kobj ;
<    int remote_node_defrag_ratio ;
<    struct kmem_cache_node *node[512U] ;
<    struct kmem_cache_cpu *cpu_slab[4096U] ;
---
>    struct tracepoint_func *funcs ;
654c687
< #line 155 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/local.h"
---
> #line 84 "include/linux/tracepoint.h"
658c691
< #line 100 "include/trace/events/module.h"
---
> #line 127 "include/trace/events/module.h"
663c696
< #line 46 "include/linux/module.h"
---
> #line 48 "include/linux/module.h"
673c706
< #line 58
---
> #line 66
675c708
< #line 58 "include/linux/module.h"
---
> #line 66 "include/linux/module.h"
682c715
< #line 70
---
> #line 78
684c717
< #line 179
---
> #line 217
690c723,728
< #line 185
---
> #line 223 "include/linux/module.h"
> struct module_ref {
>    unsigned int incs ;
>    unsigned int decs ;
> };
> #line 416
692c730
< #line 185
---
> #line 416
694c732
< #line 185
---
> #line 416
696c734
< #line 185 "include/linux/module.h"
---
> #line 416 "include/linux/module.h"
731a770,771
>    unsigned int init_ro_size ;
>    unsigned int core_ro_size ;
745a786
>    unsigned int percpu_size ;
747c788
<    struct tracepoint *tracepoints ;
---
>    struct tracepoint * const  *tracepoints_ptrs ;
751c792
<    struct ftrace_event_call *trace_events ;
---
>    struct ftrace_event_call **trace_events ;
753c794,795
<    struct list_head modules_which_use_me ;
---
>    struct list_head source_list ;
>    struct list_head target_list ;
756c798
<    char *refptr ;
---
>    struct module_ref *refptr ;
760,762c802,846
< #line 542
< struct device_driver;
< #line 715
---
> #line 118 "include/linux/kmemleak.h"
> struct kmem_cache_cpu {
>    void **freelist ;
>    unsigned long tid ;
>    struct page *page ;
>    int node ;
>    unsigned int stat[19U] ;
> };
> #line 48 "include/linux/slub_def.h"
> struct kmem_cache_node {
>    spinlock_t list_lock ;
>    unsigned long nr_partial ;
>    struct list_head partial ;
>    atomic_long_t nr_slabs ;
>    atomic_long_t total_objects ;
>    struct list_head full ;
> };
> #line 59 "include/linux/slub_def.h"
> struct kmem_cache_order_objects {
>    unsigned long x ;
> };
> #line 69 "include/linux/slub_def.h"
> struct kmem_cache {
>    struct kmem_cache_cpu *cpu_slab ;
>    unsigned long flags ;
>    unsigned long min_partial ;
>    int size ;
>    int objsize ;
>    int offset ;
>    struct kmem_cache_order_objects oo ;
>    struct kmem_cache_order_objects max ;
>    struct kmem_cache_order_objects min ;
>    gfp_t allocflags ;
>    int refcount ;
>    void (*ctor)(void * ) ;
>    int inuse ;
>    int align ;
>    int reserved ;
>    char const   *name ;
>    struct list_head list ;
>    struct kobject kobj ;
>    int remote_node_defrag_ratio ;
>    struct kmem_cache_node *node[1024U] ;
> };
> #line 335 "include/linux/slab.h"
769a854,858
> #line 41 "include/asm-generic/sections.h"
> struct exception_table_entry {
>    unsigned long insn ;
>    unsigned long fixup ;
> };
777c866,883
< #line 58 "include/linux/input.h"
---
> #line 49 "include/linux/input.h"
> struct input_absinfo {
>    __s32 value ;
>    __s32 minimum ;
>    __s32 maximum ;
>    __s32 fuzz ;
>    __s32 flat ;
>    __s32 resolution ;
> };
> #line 77 "include/linux/input.h"
> struct input_keymap_entry {
>    __u8 flags ;
>    __u8 len ;
>    __u16 index ;
>    __u32 keycode ;
>    __u8 scancode[32U] ;
> };
> #line 101 "include/linux/input.h"
782c888
< #line 792 "include/linux/input.h"
---
> #line 928 "include/linux/input.h"
787c893
< #line 802 "include/linux/input.h"
---
> #line 938 "include/linux/input.h"
794c900
< #line 821 "include/linux/input.h"
---
> #line 957 "include/linux/input.h"
799c905
< #line 831 "include/linux/input.h"
---
> #line 967 "include/linux/input.h"
805c911
< #line 843 "include/linux/input.h"
---
> #line 979 "include/linux/input.h"
814c920
< #line 864 "include/linux/input.h"
---
> #line 1000 "include/linux/input.h"
825c931
< #line 895 "include/linux/input.h"
---
> #line 1031 "include/linux/input.h"
830,831c936,937
< #line 908 "include/linux/input.h"
< union __anonunion_u_112 {
---
> #line 1044 "include/linux/input.h"
> union __anonunion_u_126 {
838c944
< #line 908 "include/linux/input.h"
---
> #line 1044 "include/linux/input.h"
845c951
<    union __anonunion_u_112 u ;
---
>    union __anonunion_u_126 u ;
847c953
< #line 947
---
> #line 1083
855,861c961
< #line 67 "include/linux/klist.h"
< struct semaphore {
<    spinlock_t lock ;
<    unsigned int count ;
<    struct list_head wait_list ;
< };
< #line 48 "include/linux/semaphore.h"
---
> #line 67
863c963
< #line 48 "include/linux/semaphore.h"
---
> #line 67 "include/linux/klist.h"
872c972
< struct driver_private;
---
> struct device_driver;
874c974
< struct class;
---
> struct driver_private;
876c976
< struct class_private;
---
> struct class;
878c978
< struct bus_type;
---
> struct subsys_private;
880,881c980,983
< struct bus_type_private;
< #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
---
> struct bus_type;
> #line 23
> struct device_node;
> #line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
887c989
< #line 50 "include/linux/device.h"
---
> #line 49 "include/linux/device.h"
889c991
< #line 50
---
> #line 49
891c993
< #line 50 "include/linux/device.h"
---
> #line 49 "include/linux/device.h"
905c1007
<    struct bus_type_private *p ;
---
>    struct subsys_private *p ;
906a1009,1010
> #line 121
> struct of_device_id;
912a1017,1018
>    bool suppress_bind_attrs ;
>    struct of_device_id  const  *of_match_table ;
922c1028
< #line 151 "include/linux/device.h"
---
> #line 155 "include/linux/device.h"
928c1034
< #line 181
---
> #line 185
930c1036
< #line 181 "include/linux/device.h"
---
> #line 185 "include/linux/device.h"
935a1042
>    struct bin_attribute *dev_bin_attrs ;
942a1050,1051
>    struct kobj_ns_type_operations  const  *ns_type ;
>    void const   *(*namespace)(struct device * ) ;
944c1053
<    struct class_private *p ;
---
>    struct subsys_private *p ;
946c1055
< #line 208
---
> #line 216
948c1057
< #line 247 "include/linux/device.h"
---
> #line 255 "include/linux/device.h"
951,952c1060,1061
<    ssize_t (*show)(struct class * , char * ) ;
<    ssize_t (*store)(struct class * , char const   * , size_t  ) ;
---
>    ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
>    ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
954c1063
< #line 279 "include/linux/device.h"
---
> #line 306 "include/linux/device.h"
963c1072
< #line 306 "include/linux/device.h"
---
> #line 333 "include/linux/device.h"
970c1079
< #line 367 "include/linux/device.h"
---
> #line 394 "include/linux/device.h"
975c1084
< #line 376
---
> #line 403
977c1086
< #line 376 "include/linux/device.h"
---
> #line 403 "include/linux/device.h"
984c1093
<    struct semaphore sem ;
---
>    struct mutex mutex ;
988a1098
>    struct dev_power_domain *pwr_domain ;
995a1106,1107
>    struct device_node *of_node ;
>    struct of_device_id  const  *of_match ;
1004c1116,1145
< #line 394 "include/linux/rculist.h"
---
> #line 458 "include/linux/device.h"
> struct wakeup_source {
>    char *name ;
>    struct list_head entry ;
>    spinlock_t lock ;
>    struct timer_list timer ;
>    unsigned long timer_expires ;
>    ktime_t total_time ;
>    ktime_t max_time ;
>    ktime_t last_time ;
>    unsigned long event_count ;
>    unsigned long active_count ;
>    unsigned long relax_count ;
>    unsigned long hit_count ;
>    unsigned char active : 1 ;
> };
> #line 763
> struct block_device;
> #line 427 "include/linux/rculist.h"
> struct hlist_bl_node;
> #line 427 "include/linux/rculist.h"
> struct hlist_bl_head {
>    struct hlist_bl_node *first ;
> };
> #line 35 "include/linux/list_bl.h"
> struct hlist_bl_node {
>    struct hlist_bl_node *next ;
>    struct hlist_bl_node **pprev ;
> };
> #line 114 "include/linux/rculist_bl.h"
1006c1147
< #line 395
---
> #line 115
1008c1149
< #line 396
---
> #line 116
1010c1151
< #line 397 "include/linux/rculist.h"
---
> #line 117 "include/linux/rculist_bl.h"
1016c1157
< #line 77 "include/linux/dcache.h"
---
> #line 100 "include/linux/dcache.h"
1018,1019c1159,1164
< #line 77 "include/linux/dcache.h"
< union __anonunion_d_u_113 {
---
> #line 100
> struct dentry_operations;
> #line 100
> struct super_block;
> #line 100 "include/linux/dcache.h"
> union __anonunion_d_u_127 {
1023,1027c1168
< #line 77
< struct dentry_operations;
< #line 77
< struct super_block;
< #line 77 "include/linux/dcache.h"
---
> #line 100 "include/linux/dcache.h"
1029d1169
<    atomic_t d_count ;
1031,1034c1171,1172
<    spinlock_t d_lock ;
<    int d_mounted ;
<    struct inode *d_inode ;
<    struct hlist_node d_hash ;
---
>    seqcount_t d_seq ;
>    struct hlist_bl_node d_hash ;
1037,1041c1175,1178
<    struct list_head d_lru ;
<    union __anonunion_d_u_113 d_u ;
<    struct list_head d_subdirs ;
<    struct list_head d_alias ;
<    unsigned long d_time ;
---
>    struct inode *d_inode ;
>    unsigned char d_iname[32U] ;
>    unsigned int d_count ;
>    spinlock_t d_lock ;
1043a1181
>    unsigned long d_time ;
1045c1183,1186
<    unsigned char d_iname[32U] ;
---
>    struct list_head d_lru ;
>    union __anonunion_d_u_127 d_u ;
>    struct list_head d_subdirs ;
>    struct list_head d_alias ;
1047c1188
< #line 126 "include/linux/dcache.h"
---
> #line 151 "include/linux/dcache.h"
1050,1052c1191,1194
<    int (*d_hash)(struct dentry * , struct qstr * ) ;
<    int (*d_compare)(struct dentry * , struct qstr * , struct qstr * ) ;
<    int (*d_delete)(struct dentry * ) ;
---
>    int (*d_hash)(struct dentry  const  * , struct inode  const  * , struct qstr * ) ;
>    int (*d_compare)(struct dentry  const  * , struct inode  const  * , struct dentry  const  * ,
>                     struct inode  const  * , unsigned int  , char const   * , struct qstr  const  * ) ;
>    int (*d_delete)(struct dentry  const  * ) ;
1055a1198,1199
>    struct vfsmount *(*d_automount)(struct path * ) ;
>    int (*d_manage)(struct dentry * , bool  ) ;
1057c1201
< #line 382 "include/linux/dcache.h"
---
> #line 422 "include/linux/dcache.h"
1062c1206
< #line 55 "include/linux/radix-tree.h"
---
> #line 51 "include/linux/radix-tree.h"
1064c1208
< #line 55 "include/linux/radix-tree.h"
---
> #line 51 "include/linux/radix-tree.h"
1070c1214
< #line 193
---
> #line 229
1109c1253
< #line 570 "include/linux/capability.h"
---
> #line 45 "include/linux/semaphore.h"
1132c1276
< #line 413 "include/linux/fs.h"
---
> #line 423 "include/linux/fs.h"
1144,1156c1288
< #line 472 "include/linux/fs.h"
< struct if_dqblk {
<    __u64 dqb_bhardlimit ;
<    __u64 dqb_bsoftlimit ;
<    __u64 dqb_curspace ;
<    __u64 dqb_ihardlimit ;
<    __u64 dqb_isoftlimit ;
<    __u64 dqb_curinodes ;
<    __u64 dqb_btime ;
<    __u64 dqb_itime ;
<    __u32 dqb_valid ;
< };
< #line 117 "include/linux/quota.h"
---
> #line 119 "include/linux/quota.h"
1163c1295
< #line 150 "include/linux/quota.h"
---
> #line 172 "include/linux/percpu_counter.h"
1194c1326
< #line 141 "include/linux/dqblk_xfs.h"
---
> #line 150 "include/linux/dqblk_xfs.h"
1196c1328
< #line 142 "include/linux/dqblk_xfs.h"
---
> #line 151 "include/linux/dqblk_xfs.h"
1210c1342
< #line 156
---
> #line 165
1212c1344
< #line 182 "include/linux/quota.h"
---
> #line 185 "include/linux/quota.h"
1214,1215d1345
< #line 183 "include/linux/quota.h"
< typedef long long qsize_t;
1216a1347,1348
> typedef long long qsize_t;
> #line 189 "include/linux/quota.h"
1228c1360
< #line 208
---
> #line 211
1230c1362
< #line 209 "include/linux/quota.h"
---
> #line 212 "include/linux/quota.h"
1242c1374
< #line 251 "include/linux/quota.h"
---
> #line 271 "include/linux/quota.h"
1258c1390
< #line 279 "include/linux/quota.h"
---
> #line 299 "include/linux/quota.h"
1268c1400
< #line 293 "include/linux/quota.h"
---
> #line 310 "include/linux/quota.h"
1270,1276d1401
<    int (*initialize)(struct inode * , int  ) ;
<    int (*drop)(struct inode * ) ;
<    int (*alloc_space)(struct inode * , qsize_t  , int  ) ;
<    int (*alloc_inode)(struct inode  const  * , qsize_t  ) ;
<    int (*free_space)(struct inode * , qsize_t  ) ;
<    int (*free_inode)(struct inode  const  * , qsize_t  ) ;
<    int (*transfer)(struct inode * , struct iattr * ) ;
1284,1287c1409
<    int (*reserve_space)(struct inode * , qsize_t  , int  ) ;
<    int (*claim_space)(struct inode * , qsize_t  ) ;
<    void (*release_rsv)(struct inode * , qsize_t  ) ;
<    qsize_t (*get_reserved_space)(struct inode * ) ;
---
>    qsize_t *(*get_reserved_space)(struct inode * ) ;
1289c1411
< #line 319 "include/linux/quota.h"
---
> #line 324 "include/linux/quota.h"
1291,1293c1413,1416
<    int (*quota_on)(struct super_block * , int  , int  , char * , int  ) ;
<    int (*quota_off)(struct super_block * , int  , int  ) ;
<    int (*quota_sync)(struct super_block * , int  ) ;
---
>    int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
>    int (*quota_on_meta)(struct super_block * , int  , int  ) ;
>    int (*quota_off)(struct super_block * , int  ) ;
>    int (*quota_sync)(struct super_block * , int  , int  ) ;
1296,1297c1419,1420
<    int (*get_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
<    int (*set_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
---
>    int (*get_dqblk)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
>    int (*set_dqblk)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
1300,1301d1422
<    int (*get_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
<    int (*set_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
1303c1424
< #line 334 "include/linux/quota.h"
---
> #line 340 "include/linux/quota.h"
1306c1427
<    struct quota_format_ops *qf_ops ;
---
>    struct quota_format_ops  const  *qf_ops ;
1310c1431
< #line 378 "include/linux/quota.h"
---
> #line 386 "include/linux/quota.h"
1318c1439
<    struct quota_format_ops *ops[2U] ;
---
>    struct quota_format_ops  const  *ops[2U] ;
1320c1441
< #line 401
---
> #line 417
1322c1443
< #line 402
---
> #line 418
1324,1325c1445,1446
< #line 562 "include/linux/fs.h"
< union __anonunion_arg_116 {
---
> #line 573 "include/linux/fs.h"
> union __anonunion_arg_130 {
1329,1330c1450,1451
< #line 562 "include/linux/fs.h"
< struct __anonstruct_read_descriptor_t_115 {
---
> #line 573 "include/linux/fs.h"
> struct __anonstruct_read_descriptor_t_129 {
1333c1454
<    union __anonunion_arg_116 arg ;
---
>    union __anonunion_arg_130 arg ;
1336,1338c1457,1459
< #line 562 "include/linux/fs.h"
< typedef struct __anonstruct_read_descriptor_t_115 read_descriptor_t;
< #line 565 "include/linux/fs.h"
---
> #line 573 "include/linux/fs.h"
> typedef struct __anonstruct_read_descriptor_t_129 read_descriptor_t;
> #line 576 "include/linux/fs.h"
1342d1462
<    void (*sync_page)(struct page * ) ;
1353a1474
>    void (*freepage)(struct page * ) ;
1362c1483
< #line 614
---
> #line 625
1364c1485
< #line 615 "include/linux/fs.h"
---
> #line 626 "include/linux/fs.h"
1381a1503
>    struct mutex unmap_mutex ;
1383c1505
< #line 636
---
> #line 648
1385c1507
< #line 636
---
> #line 648
1387c1509
< #line 636 "include/linux/fs.h"
---
> #line 648 "include/linux/fs.h"
1389a1512
>    int bd_openers ;
1392d1514
<    int bd_openers ;
1394a1517
>    void *bd_claiming ;
1397c1520,1521
<    struct list_head bd_holder_list ;
---
>    bool bd_write_holder ;
>    struct list_head bd_holder_disks ;
1409c1533
< #line 704
---
> #line 719
1411c1535
< #line 705
---
> #line 720
1413c1537,1542
< #line 705
---
> #line 720 "include/linux/fs.h"
> union __anonunion_ldv_16890_131 {
>    struct list_head i_dentry ;
>    struct rcu_head i_rcu ;
> };
> #line 720
1415c1544
< #line 705
---
> #line 720
1417c1546
< #line 705
---
> #line 720
1419,1420c1548,1549
< #line 705 "include/linux/fs.h"
< union __anonunion_ldv_14428_117 {
---
> #line 720 "include/linux/fs.h"
> union __anonunion_ldv_16917_132 {
1425c1554
< #line 705 "include/linux/fs.h"
---
> #line 720 "include/linux/fs.h"
1426a1556,1565
>    umode_t i_mode ;
>    uid_t i_uid ;
>    gid_t i_gid ;
>    struct inode_operations  const  *i_op ;
>    struct super_block *i_sb ;
>    spinlock_t i_lock ;
>    unsigned int i_flags ;
>    struct mutex i_mutex ;
>    unsigned long i_state ;
>    unsigned long dirtied_when ;
1428c1567,1568
<    struct list_head i_list ;
---
>    struct list_head i_wb_list ;
>    struct list_head i_lru ;
1430c1570
<    struct list_head i_dentry ;
---
>    union __anonunion_ldv_16890_131 ldv_16890 ;
1434,1435d1573
<    uid_t i_uid ;
<    gid_t i_gid ;
1436a1575
>    unsigned int i_blkbits ;
1443d1581
<    unsigned int i_blkbits ;
1445,1447d1582
<    umode_t i_mode ;
<    spinlock_t i_lock ;
<    struct mutex i_mutex ;
1449d1583
<    struct inode_operations  const  *i_op ;
1451d1584
<    struct super_block *i_sb ;
1457c1590
<    union __anonunion_ldv_14428_117 ldv_14428 ;
---
>    union __anonunion_ldv_16917_132 ldv_16917 ;
1460,1465c1593,1594
<    struct hlist_head i_fsnotify_mark_entries ;
<    struct list_head inotify_watches ;
<    struct mutex inotify_mutex ;
<    unsigned long i_state ;
<    unsigned long dirtied_when ;
<    unsigned int i_flags ;
---
>    struct hlist_head i_fsnotify_marks ;
>    atomic_t i_readcount ;
1472c1601
< #line 873 "include/linux/fs.h"
---
> #line 897 "include/linux/fs.h"
1481c1610
< #line 881 "include/linux/fs.h"
---
> #line 905 "include/linux/fs.h"
1490,1491c1619,1620
< #line 904 "include/linux/fs.h"
< union __anonunion_f_u_118 {
---
> #line 928 "include/linux/fs.h"
> union __anonunion_f_u_133 {
1495c1624
< #line 904 "include/linux/fs.h"
---
> #line 928 "include/linux/fs.h"
1497c1626
<    union __anonunion_f_u_118 f_u ;
---
>    union __anonunion_f_u_133 f_u ;
1500a1630
>    int f_sb_list_cpu ;
1515c1645
< #line 1027
---
> #line 1059
1517c1647
< #line 1027 "include/linux/fs.h"
---
> #line 1059 "include/linux/fs.h"
1519c1649
< #line 1028 "include/linux/fs.h"
---
> #line 1060 "include/linux/fs.h"
1524c1654
< #line 1033 "include/linux/fs.h"
---
> #line 1065 "include/linux/fs.h"
1529d1658
<    void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
1532d1660
<    int (*fl_mylease)(struct file_lock * , struct file_lock * ) ;
1552c1680
< struct __anonstruct_afs_120 {
---
> struct __anonstruct_afs_135 {
1557c1685
< union __anonunion_fl_u_119 {
---
> union __anonunion_fl_u_134 {
1560c1688
<    struct __anonstruct_afs_120 afs ;
---
>    struct __anonstruct_afs_135 afs ;
1580c1708
<    union __anonunion_fl_u_119 fl_u ;
---
>    union __anonunion_fl_u_134 fl_u ;
1582c1710
< #line 1136 "include/linux/fs.h"
---
> #line 1166 "include/linux/fs.h"
1583a1712
>    spinlock_t fa_lock ;
1587a1717
>    struct rcu_head fa_rcu ;
1589c1719
< #line 1313
---
> #line 1358
1591c1721
< #line 1313
---
> #line 1358
1593c1723
< #line 1313
---
> #line 1358
1595c1725
< #line 1313
---
> #line 1358
1597c1727
< #line 1313 "include/linux/fs.h"
---
> #line 1358 "include/linux/fs.h"
1601,1602d1730
<    unsigned long s_blocksize ;
<    unsigned char s_blocksize_bits ;
1603a1732,1733
>    unsigned char s_blocksize_bits ;
>    unsigned long s_blocksize ;
1616d1745
<    int s_need_sync ;
1619c1748
<    struct xattr_handler **s_xattr ;
---
>    struct xattr_handler  const  **s_xattr ;
1621,1622c1750,1751
<    struct hlist_head s_anon ;
<    struct list_head s_files ;
---
>    struct hlist_bl_head s_anon ;
>    struct list_head *s_files ;
1632a1762
>    u8 s_uuid[16U] ;
1635d1764
<    struct mutex s_vfs_rename_mutex ;
1636a1766
>    struct mutex s_vfs_rename_mutex ;
1638a1769
>    struct dentry_operations  const  *s_d_op ;
1640c1771
< #line 1431 "include/linux/fs.h"
---
> #line 1485 "include/linux/fs.h"
1647c1778
< #line 1470 "include/linux/fs.h"
---
> #line 1524 "include/linux/fs.h"
1660d1790
<    int (*ioctl)(struct inode * , struct file * , unsigned int  , unsigned long  ) ;
1667c1797
<    int (*fsync)(struct file * , struct dentry * , int  ) ;
---
>    int (*fsync)(struct file * , int  ) ;
1681a1812
>    long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
1683c1814
< #line 1510 "include/linux/fs.h"
---
> #line 1564 "include/linux/fs.h"
1685d1815
<    int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
1686a1817,1822
>    void *(*follow_link)(struct dentry * , struct nameidata * ) ;
>    int (*permission)(struct inode * , int  , unsigned int  ) ;
>    int (*check_acl)(struct inode * , int  , unsigned int  ) ;
>    int (*readlink)(struct dentry * , char * , int  ) ;
>    void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
>    int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
1694,1696d1829
<    int (*readlink)(struct dentry * , char * , int  ) ;
<    void *(*follow_link)(struct dentry * , struct nameidata * ) ;
<    void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
1698,1699d1830
<    int (*permission)(struct inode * , int  ) ;
<    int (*check_acl)(struct inode * , int  ) ;
1707d1837
<    long (*fallocate)(struct inode * , int  , loff_t  , loff_t  ) ;
1710c1840
< #line 1553 "include/linux/fs.h"
---
> #line 1610 "include/linux/fs.h"
1715,1717c1845,1847
<    int (*write_inode)(struct inode * , int  ) ;
<    void (*drop_inode)(struct inode * ) ;
<    void (*delete_inode)(struct inode * ) ;
---
>    int (*write_inode)(struct inode * , struct writeback_control * ) ;
>    int (*drop_inode)(struct inode * ) ;
>    void (*evict_inode)(struct inode * ) ;
1725d1854
<    void (*clear_inode)(struct inode * ) ;
1727a1857,1858
>    int (*show_devname)(struct seq_file * , struct vfsmount * ) ;
>    int (*show_path)(struct seq_file * , struct vfsmount * ) ;
1734c1865
< #line 1737 "include/linux/fs.h"
---
> #line 1791 "include/linux/fs.h"
1738c1869
<    int (*get_sb)(struct file_system_type * , int  , char const   * , void * , struct vfsmount * ) ;
---
>    struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
1744a1876
>    struct lock_class_key s_vfs_rename_key ;
1758a1891,1897
> #line 215 "include/linux/mod_devicetable.h"
> struct of_device_id {
>    char name[32U] ;
>    char type[32U] ;
>    char compatible[128U] ;
>    void *data ;
> };
1777c1916
< #line 475
---
> #line 518
1779c1918,1920
< #line 475
---
> #line 518
> struct input_mt_slot;
> #line 518
1781c1922
< #line 475 "include/linux/mod_devicetable.h"
---
> #line 518 "include/linux/mod_devicetable.h"
1786a1928
>    unsigned long propbit[1U] ;
1795a1938
>    unsigned int hint_events_per_packet ;
1799,1800c1942,1943
<    int (*setkeycode)(struct input_dev * , int  , int  ) ;
<    int (*getkeycode)(struct input_dev * , int  , int * ) ;
---
>    int (*setkeycode)(struct input_dev * , struct input_keymap_entry  const  * , unsigned int * ) ;
>    int (*getkeycode)(struct input_dev * , struct input_keymap_entry * ) ;
1804,1805d1946
<    int sync ;
<    int abs[64U] ;
1806a1948,1952
>    struct input_mt_slot *mt ;
>    int mtsize ;
>    int slot ;
>    int trkid ;
>    struct input_absinfo *absinfo ;
1811,1815d1956
<    int absmax[64U] ;
<    int absmin[64U] ;
<    int absfuzz[64U] ;
<    int absflat[64U] ;
<    int absres[64U] ;
1824a1966
>    bool sync ;
1829c1971
< #line 1133 "include/linux/input.h"
---
> #line 1286 "include/linux/input.h"
1832a1975,1976
>    bool (*filter)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
>    bool (*match)(struct input_handler * , struct input_dev * ) ;
1840d1983
<    struct input_device_id  const  *blacklist ;
1844c1987
< #line 1235 "include/linux/input.h"
---
> #line 1396 "include/linux/input.h"
1854c1997
< #line 1357 "include/linux/input.h"
---
> #line 1558 "include/linux/input.h"
1869c2012
< #line 1412
---
> #line 1617
1871c2014
< #line 1412 "include/linux/input.h"
---
> #line 1617 "include/linux/input.h"
1877d2019
<    bool registered ;
1886c2028,2029
<    struct serio *child ;
---
>    struct list_head child_node ;
>    struct list_head children ;
1893c2036
< #line 55 "include/linux/serio.h"
---
> #line 56 "include/linux/serio.h"
1895,1897c2038,2039
<    void *private ;
<    char *description ;
<    struct serio_device_id *id_table ;
---
>    char const   *description ;
>    struct serio_device_id  const  *id_table ;
1919,1922c2061,2062
< #line 907 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< typedef int ldv_func_ret_type;
< #line 1 "<compiler builtins>"
< long __builtin_expect(long exp , long c ) ;
---
> #line 917 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/input/mouse/vsxxxaa.c.prepared"
> typedef int ldv_func_ret_type___0;
1935,1937c2075
< #line 185 "include/linux/kernel.h"
< extern int snprintf(char * , size_t  , char const   *  , ...) ;
< #line 241
---
> #line 99 "include/linux/printk.h"
1938a2077,2078
> #line 264 "include/linux/kernel.h"
> extern int snprintf(char * , size_t  , char const   *  , ...) ;
1945,1972c2085,2089
< #line 9 "include/asm-generic/getorder.h"
< __inline static int get_order(unsigned long size ) 
< { 
<   int order ;
< 
<   {
< #line 13
<   size = (size - 1UL) >> 11;
< #line 14
<   order = -1;
<   ldv_4240: 
< #line 16
<   size = size >> 1;
< #line 17
<   order = order + 1;
< #line 18
<   if (size != 0UL) {
< #line 19
<     goto ldv_4240;
<   } else {
< 
<   }
< 
< #line 19
<   return (order);
< }
< }
< #line 152 "include/linux/mutex.h"
---
> #line 159 "include/linux/mutex.h"
> extern int mutex_trylock(struct mutex * ) ;
> #line 162
> int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) ;
> #line 164
1974c2091
< #line 155
---
> #line 167
1976,1980c2093
< #line 5 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< extern int mutex_lock_interruptible(struct mutex * ) ;
< #line 8
< int ldv_mutex_lock_interruptible_1(struct mutex *ldv_func_arg1 ) ;
< #line 11
---
> #line 7 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/input/mouse/vsxxxaa.c.prepared"
1982,1983c2095,2098
< #line 14
< void ldv_mutex_lock_2(struct mutex *ldv_func_arg1 ) ;
---
> #line 10
> void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
> #line 15
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) ;
1985c2100
< int ldv_mutex_lock_interruptible_drv_mutex_of_serio(struct mutex *lock ) ;
---
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) ;
1987,1989c2102
< void ldv_mutex_lock_drv_mutex_of_serio(struct mutex *lock ) ;
< #line 23
< void ldv_mutex_unlock_drv_mutex_of_serio(struct mutex *lock ) ;
---
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) ;
1992,2004c2105,2107
< #line 314 "include/linux/gfp.h"
< extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
< #line 201 "include/linux/rcupdate.h"
< __inline static void rcu_read_lock_sched_notrace(void) 
< { 
< 
< 
<   {
< #line 205
<   return;
< }
< }
< #line 138 "include/linux/slab.h"
---
> #line 96 "include/linux/module.h"
> extern struct module __this_module ;
> #line 141 "include/linux/slab.h"
2006,2257c2109
< #line 79 "include/trace/events/kmem.h"
< extern struct tracepoint __tracepoint_kmalloc ;
< #line 79 "include/trace/events/kmem.h"
< __inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
<                                    size_t bytes_alloc , gfp_t gfp_flags ) 
< { 
<   void **it_func ;
<   void **_________p1 ;
<   long tmp ;
< 
<   {
< #line 47
<   tmp = __builtin_expect(__tracepoint_kmalloc.state != 0, 0L);
< #line 47
<   if (tmp != 0L) {
< #line 47
<     rcu_read_lock_sched_notrace();
< #line 47
<     _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
< #line 47
<     it_func = _________p1;
< #line 47
<     if ((unsigned long )it_func != (unsigned long )((void **)0)) {
<       ldv_10460: 
< #line 47
<       (*((void (*)(unsigned long  , void const   * , size_t  , size_t  , gfp_t  ))*it_func))(call_site,
<                                                                                              ptr,
<                                                                                              bytes_req,
<                                                                                              bytes_alloc,
<                                                                                              gfp_flags);
< #line 47
<       it_func = it_func + 1;
< #line 47
<       if ((unsigned long )*it_func != (unsigned long )((void *)0)) {
< #line 48
<         goto ldv_10460;
<       } else {
< 
<       }
< 
<     } else {
< 
<     }
< #line 47
<     rcu_read_lock_sched_notrace();
<   } else {
< 
<   }
< #line 49
<   return;
< }
< }
< #line 27 "include/linux/kmemleak.h"
< extern void kmemleak_alloc(void const   * , size_t  , int  , gfp_t  ) ;
< #line 142 "include/linux/slub_def.h"
< extern struct kmem_cache kmalloc_caches[14U] ;
< #line 148 "include/linux/slub_def.h"
< __inline static int kmalloc_index(size_t size ) 
< { 
< 
< 
<   {
< #line 150
<   if (size == 0UL) {
< #line 151
<     return (0);
<   } else {
< 
<   }
< #line 153
<   if (size <= 8UL) {
< #line 154
<     return (3);
<   } else {
< 
<   }
< #line 156
<   if (size > 64UL && size <= 96UL) {
< #line 157
<     return (1);
<   } else {
< 
<   }
< #line 158
<   if (size > 128UL && size <= 192UL) {
< #line 159
<     return (2);
<   } else {
< 
<   }
< #line 160
<   if (size <= 8UL) {
< #line 160
<     return (3);
<   } else {
< 
<   }
< #line 161
<   if (size <= 16UL) {
< #line 161
<     return (4);
<   } else {
< 
<   }
< #line 162
<   if (size <= 32UL) {
< #line 162
<     return (5);
<   } else {
< 
<   }
< #line 163
<   if (size <= 64UL) {
< #line 163
<     return (6);
<   } else {
< 
<   }
< #line 164
<   if (size <= 128UL) {
< #line 164
<     return (7);
<   } else {
< 
<   }
< #line 165
<   if (size <= 256UL) {
< #line 165
<     return (8);
<   } else {
< 
<   }
< #line 166
<   if (size <= 512UL) {
< #line 166
<     return (9);
<   } else {
< 
<   }
< #line 167
<   if (size <= 1024UL) {
< #line 167
<     return (10);
<   } else {
< 
<   }
< #line 168
<   if (size <= 2048UL) {
< #line 168
<     return (11);
<   } else {
< 
<   }
< #line 169
<   if (size <= 4096UL) {
< #line 169
<     return (12);
<   } else {
< 
<   }
< #line 174
<   if (size <= 8192UL) {
< #line 174
<     return (13);
<   } else {
< 
<   }
< #line 175
<   if (size <= 16384UL) {
< #line 175
<     return (14);
<   } else {
< 
<   }
< #line 176
<   if (size <= 32768UL) {
< #line 176
<     return (15);
<   } else {
< 
<   }
< #line 177
<   if (size <= 65536UL) {
< #line 177
<     return (16);
<   } else {
< 
<   }
< #line 178
<   if (size <= 131072UL) {
< #line 178
<     return (17);
<   } else {
< 
<   }
< #line 179
<   if (size <= 262144UL) {
< #line 179
<     return (18);
<   } else {
< 
<   }
< #line 180
<   if (size <= 524288UL) {
< #line 180
<     return (19);
<   } else {
< 
<   }
< #line 181
<   if (size <= 1048576UL) {
< #line 181
<     return (20);
<   } else {
< 
<   }
< #line 182
<   if (size <= 2097152UL) {
< #line 182
<     return (21);
<   } else {
< 
<   }
< #line 183
<   return (-1);
< }
< }
< #line 200 "include/linux/slub_def.h"
< __inline static struct kmem_cache *kmalloc_slab(size_t size ) 
< { 
<   int index ;
<   int tmp ;
< 
<   {
< #line 202
<   tmp = kmalloc_index(size);
< #line 202
<   index = tmp;
< #line 204
<   if (index == 0) {
< #line 205
<     return (0);
<   } else {
< 
<   }
< #line 207
<   return ((struct kmem_cache *)(& kmalloc_caches) + (unsigned long )index);
< }
< }
< #line 217
< extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
< #line 218
---
> #line 221 "include/linux/slub_def.h"
2259,2297c2111
< #line 224 "include/linux/slub_def.h"
< __inline static void *kmem_cache_alloc_notrace(struct kmem_cache *s , gfp_t gfpflags ) 
< { 
<   void *tmp ;
< 
<   {
< #line 226
<   tmp = kmem_cache_alloc(s, gfpflags);
< #line 226
<   return (tmp);
< }
< }
< #line 230 "include/linux/slub_def.h"
< __inline static void *kmalloc_large(size_t size , gfp_t flags ) 
< { 
<   unsigned int order ;
<   int tmp ;
<   void *ret ;
<   unsigned long tmp___0 ;
< 
<   {
< #line 232
<   tmp = get_order(size);
< #line 232
<   order = (unsigned int )tmp;
< #line 233
<   tmp___0 = __get_free_pages(flags | 16384U, order);
< #line 233
<   ret = (void *)tmp___0;
< #line 235
<   kmemleak_alloc((void const   *)ret, size, 1, flags);
< #line 236
<   trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, 4096UL << (int )order,
<                 flags);
< #line 238
<   return (ret);
< }
< }
< #line 241 "include/linux/slub_def.h"
---
> #line 255 "include/linux/slub_def.h"
2300,2304c2114
<   void *ret ;
<   void *tmp ;
<   struct kmem_cache *s ;
<   struct kmem_cache *tmp___0 ;
<   void *tmp___1 ;
---
>   void *tmp___2 ;
2307,2347c2117,2120
< #line 245
<   if (0) {
< #line 246
<     if (size > 8192UL) {
< #line 247
<       tmp = kmalloc_large(size, flags);
< #line 247
<       return (tmp);
<     } else {
< 
<     }
< #line 249
<     if ((flags & 1U) == 0U) {
< #line 250
<       tmp___0 = kmalloc_slab(size);
< #line 250
<       s = tmp___0;
< #line 252
<       if ((unsigned long )s == (unsigned long )((struct kmem_cache *)0)) {
< #line 253
<         return (16);
<       } else {
< 
<       }
< #line 255
<       ret = kmem_cache_alloc_notrace(s, flags);
< #line 257
<       trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, (size_t )s->size,
<                     flags);
< #line 259
<       return (ret);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 262
<   tmp___1 = __kmalloc(size, flags);
< #line 262
<   return (tmp___1);
---
> #line 270
>   tmp___2 = __kmalloc(size, flags);
> #line 270
>   return (tmp___2);
2350c2123
< #line 313 "include/linux/slab.h"
---
> #line 318 "include/linux/slab.h"
2356c2129
< #line 315
---
> #line 320
2358c2131
< #line 315
---
> #line 320
2362,2364c2135
< #line 88 "include/linux/module.h"
< extern struct module __this_module ;
< #line 492 "include/linux/device.h"
---
> #line 559 "include/linux/device.h"
2366c2137
< #line 493
---
> #line 560
2368c2139
< #line 1262 "include/linux/input.h"
---
> #line 1423 "include/linux/input.h"
2370c2141
< #line 1263
---
> #line 1424
2372c2143
< #line 1286
---
> #line 1447
2374c2145
< #line 1287
---
> #line 1448
2376c2147
< #line 1303
---
> #line 1469
2378c2149
< #line 1306 "include/linux/input.h"
---
> #line 1472 "include/linux/input.h"
2385c2156
< #line 1308
---
> #line 1474
2387c2158
< #line 1309
---
> #line 1475
2391c2162
< #line 1311 "include/linux/input.h"
---
> #line 1477 "include/linux/input.h"
2398c2169
< #line 1313
---
> #line 1479
2400c2171
< #line 1314
---
> #line 1480
2404c2175
< #line 1316 "include/linux/input.h"
---
> #line 1482 "include/linux/input.h"
2411c2182
< #line 1318
---
> #line 1484
2413c2184
< #line 1319
---
> #line 1485
2417c2188
< #line 1331 "include/linux/input.h"
---
> #line 1497 "include/linux/input.h"
2423c2194
< #line 1333
---
> #line 1499
2425,2446c2196
< #line 1334
<   return;
< }
< }
< #line 1343 "include/linux/input.h"
< __inline static void input_set_abs_params(struct input_dev *dev , int axis , int min ,
<                                           int max , int fuzz , int flat ) 
< { 
< 
< 
<   {
< #line 1345
<   dev->absmin[axis] = min;
< #line 1346
<   dev->absmax[axis] = max;
< #line 1347
<   dev->absfuzz[axis] = fuzz;
< #line 1348
<   dev->absflat[axis] = flat;
< #line 1350
<   dev->absbit[axis / 64] = dev->absbit[axis / 64] | (1UL << axis % 64);
< #line 1351
---
> #line 1500
2449a2200,2202
> #line 1525
> extern void input_set_abs_params(struct input_dev * , unsigned int  , int  , int  ,
>                                  int  , int  ) ;
2571c2324
<   goto ldv_16924;
---
>   goto ldv_19531;
2576c2329
<   goto ldv_16924;
---
>   goto ldv_19531;
2582c2335
<   goto ldv_16924;
---
>   goto ldv_19531;
2584c2337
<   ldv_16924: 
---
>   ldv_19531: 
2608,2609c2361,2362
<   goto ldv_16933;
<   ldv_16932: ;
---
>   goto ldv_19540;
>   ldv_19539: ;
2621c2374
<   ldv_16933: ;
---
>   ldv_19540: ;
2625c2378
<     goto ldv_16932;
---
>     goto ldv_19539;
2814,2815c2567,2568
<   goto ldv_16972;
<   ldv_16971: 
---
>   goto ldv_19579;
>   ldv_19578: 
2818c2571
<   ldv_16972: 
---
>   ldv_19579: 
2826c2579
<     goto ldv_16971;
---
>     goto ldv_19578;
2835,2836c2588,2589
<   goto ldv_16976;
<   ldv_16975: 
---
>   goto ldv_19583;
>   ldv_19582: 
2839c2592
<   ldv_16976: 
---
>   ldv_19583: 
2847c2600
<     goto ldv_16975;
---
>     goto ldv_19582;
2869c2622
<   ldv_16987: ;
---
>   ldv_19594: ;
2871,2872c2624,2625
<   goto ldv_16984;
<   ldv_16983: 
---
>   goto ldv_19591;
>   ldv_19590: 
2878c2631
<   ldv_16984: ;
---
>   ldv_19591: ;
2882c2635
<     goto ldv_16983;
---
>     goto ldv_19590;
2929c2682
<         goto ldv_16986;
---
>         goto ldv_19593;
2943,2944c2696,2697
<   goto ldv_16987;
<   ldv_16986: ;
---
>   goto ldv_19594;
>   ldv_19593: ;
3051c2804
<   input_set_abs_params(input_dev, 0, 0, 1023, 0, 0);
---
>   input_set_abs_params(input_dev, 0U, 0, 1023, 0, 0);
3053c2806
<   input_set_abs_params(input_dev, 1, 0, 1023, 0, 0);
---
>   input_set_abs_params(input_dev, 1U, 0, 1023, 0, 0);
3101c2854
<      {0, (char *)"Driver for DEC VSXXX-AA and -GA mice and VSXXX-AB tablet", (struct serio_device_id *)(& vsxxaa_serio_ids),
---
>      {"Driver for DEC VSXXX-AA and -GA mice and VSXXX-AB tablet", (struct serio_device_id  const  *)(& vsxxaa_serio_ids),
3103c2856
<     0, {"vsxxxaa", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
---
>     0, {"vsxxxaa", 0, 0, 0, (_Bool)0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
3172,3173c2925,2926
<   goto ldv_17057;
<   ldv_17056: 
---
>   goto ldv_19664;
>   ldv_19663: 
3200c2953
<   goto ldv_17052;
---
>   goto ldv_19659;
3214c2967
<   goto ldv_17052;
---
>   goto ldv_19659;
3221c2974
<   goto ldv_17052;
---
>   goto ldv_19659;
3224c2977
<   goto ldv_17052;
---
>   goto ldv_19659;
3226,3227c2979,2980
<   ldv_17052: ;
<   ldv_17057: 
---
>   ldv_19659: ;
>   ldv_19664: 
3233c2986
<     goto ldv_17056;
---
>     goto ldv_19663;
3251c3004
< int ldv_mutex_lock_interruptible_1(struct mutex *ldv_func_arg1 ) 
---
> void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
3253,3255c3006
<   ldv_func_ret_type ldv_func_res ;
<   int tmp ;
<   int tmp___0 ;
---
> 
3259,3261c3010
<   tmp = mutex_lock_interruptible(ldv_func_arg1);
< #line 910
<   ldv_func_res = tmp;
---
>   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
3263,3267c3012,3014
<   tmp___0 = ldv_mutex_lock_interruptible_drv_mutex_of_serio(ldv_func_arg1);
< #line 912
<   return (tmp___0);
< #line 914
<   return (ldv_func_res);
---
>   mutex_lock(ldv_func_arg1);
> #line 913
>   return;
3270,3271c3017,3018
< #line 917 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/input/mouse/vsxxxaa.c.prepared"
< void ldv_mutex_lock_2(struct mutex *ldv_func_arg1 ) 
---
> #line 915 "/work/ldvuser/novikov/work/current--X--drivers/input/mouse/vsxxxaa.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/input/mouse/vsxxxaa.c.prepared"
> int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) 
3273c3020,3022
< 
---
>   ldv_func_ret_type___0 ldv_func_res ;
>   int tmp ;
>   int tmp___0 ;
3275a3025,3028
> #line 920
>   tmp = mutex_trylock(ldv_func_arg1);
> #line 920
>   ldv_func_res = tmp;
3277c3030,3032
<   ldv_mutex_lock_drv_mutex_of_serio(ldv_func_arg1);
---
>   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
> #line 922
>   return (tmp___0);
3279,3281c3034
<   mutex_lock(ldv_func_arg1);
< #line 925
<   return;
---
>   return (ldv_func_res);
3291c3044
<   ldv_mutex_unlock_drv_mutex_of_serio(ldv_func_arg1);
---
>   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
3297a3051,3052
> #line 1 "<compiler builtins>"
> long __builtin_expect(long exp , long c ) ;
3322c3077
< static int ldv_mutex_drv_mutex_of_serio  ;
---
> static int ldv_mutex_mutex_of_device  ;
3324c3079
< int ldv_mutex_lock_interruptible_drv_mutex_of_serio(struct mutex *lock ) 
---
> int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
3330c3085
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
3341c3096
<     ldv_mutex_drv_mutex_of_serio = 2;
---
>     ldv_mutex_mutex_of_device = 2;
3351c3106
< int ldv_mutex_lock_killable_drv_mutex_of_serio(struct mutex *lock ) 
---
> int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
3357c3112
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
3368c3123
<     ldv_mutex_drv_mutex_of_serio = 2;
---
>     ldv_mutex_mutex_of_device = 2;
3378c3133
< void ldv_mutex_lock_drv_mutex_of_serio(struct mutex *lock ) 
---
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
3384c3139
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
3391c3146
<   ldv_mutex_drv_mutex_of_serio = 2;
---
>   ldv_mutex_mutex_of_device = 2;
3397c3152
< int ldv_mutex_trylock_drv_mutex_of_serio(struct mutex *lock ) 
---
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
3403c3158
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
3417c3172
<     ldv_mutex_drv_mutex_of_serio = 2;
---
>     ldv_mutex_mutex_of_device = 2;
3424c3179
< int ldv_atomic_dec_and_mutex_lock_drv_mutex_of_serio(atomic_t *cnt , struct mutex *lock ) 
---
> int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
3430c3185
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
3441c3196
<     ldv_mutex_drv_mutex_of_serio = 2;
---
>     ldv_mutex_mutex_of_device = 2;
3452c3207
< int ldv_mutex_is_locked_drv_mutex_of_serio(struct mutex *lock ) 
---
> int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
3458c3213
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
3476c3231
< void ldv_mutex_unlock_drv_mutex_of_serio(struct mutex *lock ) 
---
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
3482c3237
<   if (ldv_mutex_drv_mutex_of_serio == 2) {
---
>   if (ldv_mutex_mutex_of_device == 2) {
3489c3244
<   ldv_mutex_drv_mutex_of_serio = 1;
---
>   ldv_mutex_mutex_of_device = 1;
3501c3256
<   ldv_mutex_drv_mutex_of_serio = 1;
---
>   ldv_mutex_mutex_of_device = 1;
3513c3268
<   if (ldv_mutex_drv_mutex_of_serio == 1) {
---
>   if (ldv_mutex_mutex_of_device == 1) {
