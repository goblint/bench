477,540c477
< #line 32 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
< struct resource {
<    resource_size_t start ;
<    resource_size_t end ;
<    char const   *name ;
<    unsigned long flags ;
<    struct resource *parent ;
<    struct resource *sibling ;
<    struct resource *child ;
< };
< #line 206 "include/linux/ioport.h"
< struct device;
< #line 230
< struct sock;
< #line 231
< struct kobject;
< #line 232
< enum kobj_ns_type {
<     KOBJ_NS_TYPE_NONE = 0,
<     KOBJ_NS_TYPE_NET = 1,
<     KOBJ_NS_TYPES = 2
< } ;
< #line 238 "include/linux/ioport.h"
< struct kobj_ns_type_operations {
<    enum kobj_ns_type type ;
<    void *(*grab_current_ns)(void) ;
<    void const   *(*netlink_ns)(struct sock * ) ;
<    void const   *(*initial_ns)(void) ;
<    void (*drop_ns)(void * ) ;
< };
< #line 57 "include/linux/kobject_ns.h"
< struct attribute {
<    char const   *name ;
<    mode_t mode ;
<    struct lock_class_key *key ;
<    struct lock_class_key skey ;
< };
< #line 33 "include/linux/sysfs.h"
< struct attribute_group {
<    char const   *name ;
<    mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
<    struct attribute **attrs ;
< };
< #line 62
< struct vm_area_struct;
< #line 63 "include/linux/sysfs.h"
< struct bin_attribute {
<    struct attribute attr ;
<    size_t size ;
<    void *private ;
<    ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
<                    loff_t  , size_t  ) ;
<    ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
<                     loff_t  , size_t  ) ;
<    int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
< };
< #line 98 "include/linux/sysfs.h"
< struct sysfs_ops {
<    ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
<    ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
< };
< #line 116
< struct sysfs_dirent;
< #line 181
---
> #line 112 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
542,544c479,482
< #line 397 "include/linux/spinlock.h"
< struct kref {
<    atomic_t refcount ;
---
> #line 233 "include/linux/seqlock.h"
> struct timespec {
>    __kernel_time_t tv_sec ;
>    long tv_nsec ;
553,612d490
< #line 49 "include/linux/kobject.h"
< struct kset;
< #line 49
< struct kobj_type;
< #line 49 "include/linux/kobject.h"
< struct kobject {
<    char const   *name ;
<    struct list_head entry ;
<    struct kobject *parent ;
<    struct kset *kset ;
<    struct kobj_type *ktype ;
<    struct sysfs_dirent *sd ;
<    struct kref kref ;
<    unsigned char state_initialized : 1 ;
<    unsigned char state_in_sysfs : 1 ;
<    unsigned char state_add_uevent_sent : 1 ;
<    unsigned char state_remove_uevent_sent : 1 ;
<    unsigned char uevent_suppress : 1 ;
< };
< #line 109 "include/linux/kobject.h"
< struct kobj_type {
<    void (*release)(struct kobject * ) ;
<    struct sysfs_ops  const  *sysfs_ops ;
<    struct attribute **default_attrs ;
<    struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
<    void const   *(*namespace)(struct kobject * ) ;
< };
< #line 117 "include/linux/kobject.h"
< struct kobj_uevent_env {
<    char *envp[32U] ;
<    int envp_idx ;
<    char buf[2048U] ;
<    int buflen ;
< };
< #line 124 "include/linux/kobject.h"
< struct kset_uevent_ops {
<    int (* const  filter)(struct kset * , struct kobject * ) ;
<    char const   *(* const  name)(struct kset * , struct kobject * ) ;
<    int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
< };
< #line 141 "include/linux/kobject.h"
< struct kset {
<    struct list_head list ;
<    spinlock_t list_lock ;
<    struct kobject kobj ;
<    struct kset_uevent_ops  const  *uevent_ops ;
< };
< #line 219
< struct klist_node;
< #line 37 "include/linux/klist.h"
< struct klist_node {
<    void *n_klist ;
<    struct list_head n_node ;
<    struct kref n_ref ;
< };
< #line 233 "include/linux/seqlock.h"
< struct timespec {
<    __kernel_time_t tv_sec ;
<    long tv_nsec ;
< };
638a517,528
> #line 139 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/e820.h"
> struct resource {
>    resource_size_t start ;
>    resource_size_t end ;
>    char const   *name ;
>    unsigned long flags ;
>    struct resource *parent ;
>    struct resource *sibling ;
>    struct resource *child ;
> };
> #line 206 "include/linux/ioport.h"
> struct device;
772a663,664
> #line 74 "include/asm-generic/iomap.h"
> struct vm_area_struct;
801a694,793
> struct sock;
> #line 445
> struct kobject;
> #line 446
> enum kobj_ns_type {
>     KOBJ_NS_TYPE_NONE = 0,
>     KOBJ_NS_TYPE_NET = 1,
>     KOBJ_NS_TYPES = 2
> } ;
> #line 452 "include/linux/elf.h"
> struct kobj_ns_type_operations {
>    enum kobj_ns_type type ;
>    void *(*grab_current_ns)(void) ;
>    void const   *(*netlink_ns)(struct sock * ) ;
>    void const   *(*initial_ns)(void) ;
>    void (*drop_ns)(void * ) ;
> };
> #line 57 "include/linux/kobject_ns.h"
> struct attribute {
>    char const   *name ;
>    mode_t mode ;
>    struct lock_class_key *key ;
>    struct lock_class_key skey ;
> };
> #line 33 "include/linux/sysfs.h"
> struct attribute_group {
>    char const   *name ;
>    mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
>    struct attribute **attrs ;
> };
> #line 62 "include/linux/sysfs.h"
> struct bin_attribute {
>    struct attribute attr ;
>    size_t size ;
>    void *private ;
>    ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                    loff_t  , size_t  ) ;
>    ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                     loff_t  , size_t  ) ;
>    int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
> };
> #line 98 "include/linux/sysfs.h"
> struct sysfs_ops {
>    ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
>    ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
> };
> #line 116
> struct sysfs_dirent;
> #line 181 "include/linux/sysfs.h"
> struct kref {
>    atomic_t refcount ;
> };
> #line 49 "include/linux/kobject.h"
> struct kset;
> #line 49
> struct kobj_type;
> #line 49 "include/linux/kobject.h"
> struct kobject {
>    char const   *name ;
>    struct list_head entry ;
>    struct kobject *parent ;
>    struct kset *kset ;
>    struct kobj_type *ktype ;
>    struct sysfs_dirent *sd ;
>    struct kref kref ;
>    unsigned char state_initialized : 1 ;
>    unsigned char state_in_sysfs : 1 ;
>    unsigned char state_add_uevent_sent : 1 ;
>    unsigned char state_remove_uevent_sent : 1 ;
>    unsigned char uevent_suppress : 1 ;
> };
> #line 109 "include/linux/kobject.h"
> struct kobj_type {
>    void (*release)(struct kobject * ) ;
>    struct sysfs_ops  const  *sysfs_ops ;
>    struct attribute **default_attrs ;
>    struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
>    void const   *(*namespace)(struct kobject * ) ;
> };
> #line 117 "include/linux/kobject.h"
> struct kobj_uevent_env {
>    char *envp[32U] ;
>    int envp_idx ;
>    char buf[2048U] ;
>    int buflen ;
> };
> #line 124 "include/linux/kobject.h"
> struct kset_uevent_ops {
>    int (* const  filter)(struct kset * , struct kobject * ) ;
>    char const   *(* const  name)(struct kset * , struct kobject * ) ;
>    int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
> };
> #line 141 "include/linux/kobject.h"
> struct kset {
>    struct list_head list ;
>    spinlock_t list_lock ;
>    struct kobject kobj ;
>    struct kset_uevent_ops  const  *uevent_ops ;
> };
> #line 219
803c795
< #line 445 "include/linux/elf.h"
---
> #line 220 "include/linux/kobject.h"
814c806
< union __anonunion_ldv_13139_133 {
---
> union __anonunion_ldv_13090_133 {
825c817
<    union __anonunion_ldv_13139_133 ldv_13139 ;
---
>    union __anonunion_ldv_13090_133 ldv_13090 ;
974a967,974
> struct klist_node;
> #line 37 "include/linux/klist.h"
> struct klist_node {
>    void *n_klist ;
>    struct list_head n_node ;
>    struct kref n_ref ;
> };
> #line 67
976c976
< #line 736 "include/linux/module.h"
---
> #line 67 "include/linux/klist.h"
2460c2460
< #line 810 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 811 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2624c2624
< #line 77 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 78 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2631c2631
< #line 79
---
> #line 80
2633c2633
< #line 79
---
> #line 80
2635c2635
< #line 81
---
> #line 82
2639c2639
< #line 84 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 85 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2647c2647
< #line 86
---
> #line 87
2649c2649
< #line 86
---
> #line 87
2651c2651
< #line 88
---
> #line 89
2653,2654d2652
< #line 88
<   if ((int )tmp___0) {
2656c2654
<     gpio_set_value_cansleep((unsigned int )data->enable_gpio, (int )data->enable_high);
---
>   if ((int )tmp___0) {
2657a2656,2657
>     gpio_set_value_cansleep((unsigned int )data->enable_gpio, (int )data->enable_high);
> #line 91
2662c2662
< #line 93
---
> #line 94
2666c2666
< #line 96 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 97 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2674c2674
< #line 98
---
> #line 99
2676c2676
< #line 98
---
> #line 99
2678c2678
< #line 100
---
> #line 101
2680,2681d2679
< #line 100
<   if ((int )tmp___0) {
2683c2681
<     gpio_set_value_cansleep((unsigned int )data->enable_gpio, ! data->enable_high);
---
>   if ((int )tmp___0) {
2684a2683,2684
>     gpio_set_value_cansleep((unsigned int )data->enable_gpio, ! data->enable_high);
> #line 103
2689c2689
< #line 105
---
> #line 106
2693c2693
< #line 108 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 109 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2700c2700
< #line 110
---
> #line 111
2702c2702
< #line 110
---
> #line 111
2704c2704
< #line 112
---
> #line 113
2708c2708
< #line 115 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 116 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2716c2716
< #line 117
---
> #line 118
2718c2718
< #line 117
---
> #line 118
2720c2720
< #line 120
---
> #line 121
2722c2722
< #line 120
---
> #line 121
2725,2726d2724
< #line 121
<   if ((data->states + (unsigned long )ptr)->gpios == data->state) {
2727a2726,2727
>   if ((data->states + (unsigned long )ptr)->gpios == data->state) {
> #line 123
2732c2732
< #line 120
---
> #line 121
2735,2736d2734
< #line 120
<   if (data->nr_states > ptr) {
2737a2736,2737
>   if (data->nr_states > ptr) {
> #line 122
2743c2743
< #line 124
---
> #line 125
2747c2747
< #line 127 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 128 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2757c2757
< #line 130
---
> #line 131
2759c2759
< #line 130
---
> #line 131
2761,2762d2760
< #line 133
<   target = -1;
2763a2762,2763
>   target = -1;
> #line 135
2765c2765
< #line 134
---
> #line 135
2768c2768
< #line 135
---
> #line 136
2770c2770
< #line 137
---
> #line 138
2775c2775
< #line 134
---
> #line 135
2778,2779d2777
< #line 134
<   if (data->nr_states > ptr) {
2780a2779,2780
>   if (data->nr_states > ptr) {
> #line 136
2786,2787d2785
< #line 139
<   if (target < 0) {
2788a2787,2788
>   if (target < 0) {
> #line 141
2793c2793
< #line 142
---
> #line 143
2795c2795
< #line 142
---
> #line 143
2798,2799d2797
< #line 143
<   state = ((1 << ptr) & target) >> ptr;
2800a2799,2800
>   state = ((1 << ptr) & target) >> ptr;
> #line 145
2802c2802
< #line 142
---
> #line 143
2805,2806d2804
< #line 142
<   if (data->nr_gpios > ptr) {
2807a2806,2807
>   if (data->nr_gpios > ptr) {
> #line 144
2812c2812
< #line 146
---
> #line 147
2814c2814
< #line 148
---
> #line 149
2818c2818
< #line 151 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2825c2825
< #line 155
---
> #line 156
2827c2827
< #line 155
---
> #line 156
2831c2831
< #line 158 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 159 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2838c2838
< #line 161
---
> #line 162
2840c2840
< #line 161
---
> #line 162
2842,2843d2841
< #line 163
<   if ((unsigned int )data->nr_states <= selector) {
2844a2843,2844
>   if ((unsigned int )data->nr_states <= selector) {
> #line 165
2849c2849
< #line 166
---
> #line 167
2853c2853
< #line 169 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 170 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2860c2860
< #line 172
---
> #line 173
2862c2862
< #line 172
---
> #line 173
2866c2866
< #line 175 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 176 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2868c2868
< #line 175
---
> #line 176
2872c2872
< #line 185 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 186 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2874c2874
< #line 185
---
> #line 186
2878c2878
< #line 194 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 195 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
2896c2896
< #line 196
---
> #line 197
2898c2898
< #line 200
---
> #line 201
2900,2901d2899
< #line 200
<   drvdata = (struct gpio_regulator_data *)tmp;
2903c2901
<   if ((unsigned long )drvdata == (unsigned long )((struct gpio_regulator_data *)0)) {
---
>   drvdata = (struct gpio_regulator_data *)tmp;
2905c2903
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate device data\n");
---
>   if ((unsigned long )drvdata == (unsigned long )((struct gpio_regulator_data *)0)) {
2906a2905,2906
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate device data\n");
> #line 204
2911c2911
< #line 206
---
> #line 207
2913,2914d2912
< #line 206
<   drvdata->desc.name = (char const   *)tmp___0;
2916c2914
<   if ((unsigned long )drvdata->desc.name == (unsigned long )((char const   *)0)) {
---
>   drvdata->desc.name = (char const   *)tmp___0;
2918c2916
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate supply name\n");
---
>   if ((unsigned long )drvdata->desc.name == (unsigned long )((char const   *)0)) {
2920c2918
<     ret = -12;
---
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate supply name\n");
2921a2920,2921
>     ret = -12;
> #line 211
2926c2926
< #line 213
---
> #line 214
2929c2929
< #line 213
---
> #line 214
2931,2932d2930
< #line 216
<   if ((unsigned long )drvdata->gpios == (unsigned long )((struct gpio *)0)) {
2934c2932
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate gpio data\n");
---
>   if ((unsigned long )drvdata->gpios == (unsigned long )((struct gpio *)0)) {
2936c2934
<     ret = -12;
---
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate gpio data\n");
2937a2936,2937
>     ret = -12;
> #line 220
2942c2942
< #line 222
---
> #line 223
2945c2945
< #line 222
---
> #line 223
2947,2948d2946
< #line 226
<   if ((unsigned long )drvdata->states == (unsigned long )((struct gpio_regulator_state *)0)) {
2950c2948
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate state data\n");
---
>   if ((unsigned long )drvdata->states == (unsigned long )((struct gpio_regulator_state *)0)) {
2952c2950
<     ret = -12;
---
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate state data\n");
2953a2952,2953
>     ret = -12;
> #line 230
2958c2958
< #line 231
---
> #line 232
2960c2960
< #line 233
---
> #line 234
2962c2962
< #line 236
---
> #line 237
2965,2966d2964
< #line 238
<   drvdata->desc.type = REGULATOR_VOLTAGE;
2968c2966
<   drvdata->desc.ops = & gpio_regulator_voltage_ops;
---
>   drvdata->desc.type = REGULATOR_VOLTAGE;
2970c2968
<   drvdata->desc.n_voltages = (unsigned int )config->nr_states;
---
>   drvdata->desc.ops = & gpio_regulator_voltage_ops;
2971a2970,2971
>   drvdata->desc.n_voltages = (unsigned int )config->nr_states;
> #line 242
2974,2975d2973
< #line 243
<   drvdata->desc.type = REGULATOR_CURRENT;
2977c2975
<   drvdata->desc.ops = & gpio_regulator_current_ops;
---
>   drvdata->desc.type = REGULATOR_CURRENT;
2978a2977,2978
>   drvdata->desc.ops = & gpio_regulator_current_ops;
> #line 246
2981,2982d2980
< #line 247
<   dev_err((struct device  const  *)(& pdev->dev), "No regulator type set\n");
2984c2982
<   ret = -22;
---
>   dev_err((struct device  const  *)(& pdev->dev), "No regulator type set\n");
2985a2984,2985
>   ret = -22;
> #line 250
2989,2990d2988
< #line 253
<   drvdata->enable_gpio = config->enable_gpio;
2991a2990,2991
>   drvdata->enable_gpio = config->enable_gpio;
> #line 255
2993c2993
< #line 256
---
> #line 257
2995,2996d2994
< #line 256
<   if ((int )tmp___3) {
2997a2996,2997
>   if ((int )tmp___3) {
> #line 258
2999,3000d2998
< #line 259
<     ret = gpio_request((unsigned int )config->enable_gpio, config->supply_name);
3002c3000
<     if (ret != 0) {
---
>     ret = gpio_request((unsigned int )config->enable_gpio, config->supply_name);
3003a3002,3003
>     if (ret != 0) {
> #line 262
3006c3006
< #line 264
---
> #line 265
3011,3012d3010
< #line 270
<     if ((unsigned int )*((unsigned char *)config + 12UL) != 0U) {
3014c3012
<       drvdata->is_enabled = 1;
---
>     if ((unsigned int )*((unsigned char *)config + 12UL) != 0U) {
3015a3014,3015
>       drvdata->is_enabled = 1;
> #line 273
3018,3019d3017
< #line 275
<       drvdata->is_enabled = 0;
3020a3019,3020
>       drvdata->is_enabled = 0;
> #line 277
3023,3024d3022
< #line 280
<     if (ret != 0) {
3025a3024,3025
>     if (ret != 0) {
> #line 282
3028c3028
< #line 284
---
> #line 285
3034c3034
< #line 290
---
> #line 291
3037,3038d3036
< #line 293
<   drvdata->nr_gpios = config->nr_gpios;
3040c3038
<   ret = gpio_request_array((struct gpio  const  *)drvdata->gpios, (size_t )drvdata->nr_gpios);
---
>   drvdata->nr_gpios = config->nr_gpios;
3042c3040
<   if (ret != 0) {
---
>   ret = gpio_request_array((struct gpio  const  *)drvdata->gpios, (size_t )drvdata->nr_gpios);
3043a3042,3043
>   if (ret != 0) {
> #line 297
3046c3046
< #line 298
---
> #line 299
3051,3052d3050
< #line 302
<   state = 0;
3053a3052,3053
>   state = 0;
> #line 304
3055c3055
< #line 303
---
> #line 304
3058,3059d3057
< #line 304
<   if (((config->gpios + (unsigned long )ptr)->flags & 2UL) != 0UL) {
3060a3059,3060
>   if (((config->gpios + (unsigned long )ptr)->flags & 2UL) != 0UL) {
> #line 306
3065c3065
< #line 303
---
> #line 304
3068,3069d3067
< #line 303
<   if (drvdata->nr_gpios > ptr) {
3070a3069,3070
>   if (drvdata->nr_gpios > ptr) {
> #line 305
3075c3075
< #line 307
---
> #line 308
3077c3077
< #line 309
---
> #line 310
3080c3080
< #line 311
---
> #line 312
3082,3083d3081
< #line 311
<   if (tmp___5 != 0L) {
3084a3083,3084
>   if (tmp___5 != 0L) {
> #line 313
3086,3087d3085
< #line 312
<     ret = (int )tmp___4;
3088a3087,3088
>     ret = (int )tmp___4;
> #line 314
3091c3091
< #line 314
---
> #line 315
3096c3096
< #line 317
---
> #line 318
3098c3098
< #line 319
---
> #line 320
3101c3101
< #line 322
---
> #line 323
3104c3104
< #line 324
---
> #line 325
3106,3107d3105
< #line 324
<   if ((int )tmp___6) {
3108a3107,3108
>   if ((int )tmp___6) {
> #line 326
3114c3114
< #line 327
---
> #line 328
3117c3117
< #line 329
---
> #line 330
3120c3120
< #line 331
---
> #line 332
3123,3124d3122
< #line 333
<   kfree((void const   *)drvdata);
3125a3124,3125
>   kfree((void const   *)drvdata);
> #line 335
3129c3129
< #line 337 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 338 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3137c3137
< #line 339
---
> #line 340
3139c3139
< #line 339
---
> #line 340
3141c3141
< #line 341
---
> #line 342
3143c3143
< #line 343
---
> #line 344
3145,3146d3144
< #line 345
<   kfree((void const   *)drvdata->states);
3147a3146,3147
>   kfree((void const   *)drvdata->states);
> #line 347
3149c3149
< #line 348
---
> #line 349
3151,3152d3150
< #line 348
<   if ((int )tmp___0) {
3153a3152,3153
>   if ((int )tmp___0) {
> #line 350
3158,3159d3157
< #line 351
<   kfree((void const   *)drvdata->desc.name);
3160a3159,3160
>   kfree((void const   *)drvdata->desc.name);
> #line 353
3162c3162
< #line 354
---
> #line 355
3166c3166
< #line 357 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 358 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3172c3172
< #line 366 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 367 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3178c3178
< #line 368
---
> #line 369
3180c3180
< #line 368
---
> #line 369
3184c3184
< #line 372 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 373 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3190,3191d3189
< #line 374
<   platform_driver_unregister(& gpio_regulator_driver);
3192a3191,3192
>   platform_driver_unregister(& gpio_regulator_driver);
> #line 376
3196c3196
< #line 399
---
> #line 400
3198c3198
< #line 402
---
> #line 403
3200c3200
< #line 405
---
> #line 406
3202c3202
< #line 408
---
> #line 409
3204c3204
< #line 411
---
> #line 412
3206c3206
< #line 414
---
> #line 415
3208c3208
< #line 417 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 418 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3210c3210
< #line 420 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 421 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3228c3228
< #line 508
---
> #line 509
3230c3230
< #line 486
---
> #line 487
3232c3232
< #line 495
---
> #line 496
3234,3235d3233
< #line 501
<   ldv_handler_precall();
3236a3235,3236
>   ldv_handler_precall();
> #line 503
3238,3239d3237
< #line 502
<   if (tmp != 0) {
3240a3239,3240
>   if (tmp != 0) {
> #line 504
3245c3245
< #line 511
---
> #line 512
3248c3248
< #line 515
---
> #line 516
3250c3250
< #line 515
---
> #line 516
3253,3254d3252
< #line 525
<   ldv_handler_precall();
3255a3254,3255
>   ldv_handler_precall();
> #line 527
3257c3257
< #line 533
---
> #line 534
3260,3261d3259
< #line 542
<   ldv_handler_precall();
3262a3261,3262
>   ldv_handler_precall();
> #line 544
3264c3264
< #line 550
---
> #line 551
3267,3268d3266
< #line 559
<   ldv_handler_precall();
3269a3268,3269
>   ldv_handler_precall();
> #line 561
3271c3271
< #line 567
---
> #line 568
3274,3275d3273
< #line 576
<   ldv_handler_precall();
3276a3275,3276
>   ldv_handler_precall();
> #line 578
3278c3278
< #line 584
---
> #line 585
3281,3282d3280
< #line 593
<   ldv_handler_precall();
3283a3282,3283
>   ldv_handler_precall();
> #line 595
3285c3285
< #line 601
---
> #line 602
3288,3289d3287
< #line 610
<   ldv_handler_precall();
3290a3289,3290
>   ldv_handler_precall();
> #line 612
3293c3293
< #line 618
---
> #line 619
3296,3297d3295
< #line 627
<   ldv_handler_precall();
3298a3297,3298
>   ldv_handler_precall();
> #line 629
3300c3300
< #line 635
---
> #line 636
3303,3304d3302
< #line 644
<   ldv_handler_precall();
3305a3304,3305
>   ldv_handler_precall();
> #line 646
3307c3307
< #line 652
---
> #line 653
3310,3311d3309
< #line 661
<   ldv_handler_precall();
3312a3311,3312
>   ldv_handler_precall();
> #line 663
3314c3314
< #line 669
---
> #line 670
3317,3318d3316
< #line 678
<   ldv_handler_precall();
3319a3318,3319
>   ldv_handler_precall();
> #line 680
3321c3321
< #line 686
---
> #line 687
3324,3325d3323
< #line 695
<   ldv_handler_precall();
3326a3325,3326
>   ldv_handler_precall();
> #line 697
3328c3328
< #line 703
---
> #line 704
3331,3332d3330
< #line 712
<   ldv_handler_precall();
3333a3332,3333
>   ldv_handler_precall();
> #line 714
3335c3335
< #line 720
---
> #line 721
3338,3339d3337
< #line 729
<   ldv_handler_precall();
3340a3339,3340
>   ldv_handler_precall();
> #line 731
3343c3343
< #line 737
---
> #line 738
3346c3346
< #line 741
---
> #line 742
3348,3349d3347
< #line 746
<     res_gpio_regulator_probe_9 = gpio_regulator_probe(var_group2);
3351c3349
<     ldv_check_return_value(res_gpio_regulator_probe_9);
---
>     res_gpio_regulator_probe_9 = gpio_regulator_probe(var_group2);
3353c3351
<     ldv_check_return_value_probe(res_gpio_regulator_probe_9);
---
>     ldv_check_return_value(res_gpio_regulator_probe_9);
3355c3353
<     if (res_gpio_regulator_probe_9 != 0) {
---
>     ldv_check_return_value_probe(res_gpio_regulator_probe_9);
3356a3355,3356
>     if (res_gpio_regulator_probe_9 != 0) {
> #line 751
3361c3361
< #line 751
---
> #line 752
3366c3366
< #line 757
---
> #line 758
3369c3369
< #line 761
---
> #line 762
3371,3372d3370
< #line 766
<     ldv_handler_precall();
3374c3372
<     gpio_regulator_remove(var_group2);
---
>     ldv_handler_precall();
3375a3374,3375
>     gpio_regulator_remove(var_group2);
> #line 769
3380c3380
< #line 774
---
> #line 775
3383c3383
< #line 775
---
> #line 776
3388c3388
< #line 511
---
> #line 512
3390c3390
< #line 511
---
> #line 512
3392c3392
< #line 513
---
> #line 514
3399,3400d3398
< #line 787
<   ldv_handler_precall();
3401a3400,3401
>   ldv_handler_precall();
> #line 789
3404c3404
< #line 791
---
> #line 792
3406c3406
< #line 794
---
> #line 795
3410c3410
< #line 798 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 799 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3416c3416
< #line 803
---
> #line 804
3418,3419d3417
< #line 805
<   mutex_lock(ldv_func_arg1);
3420a3419,3420
>   mutex_lock(ldv_func_arg1);
> #line 807
3424c3424
< #line 808 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 809 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3432c3432
< #line 813
---
> #line 814
3434c3434
< #line 813
---
> #line 814
3436c3436
< #line 815
---
> #line 816
3438c3438
< #line 815
---
> #line 816
3440c3440
< #line 817
---
> #line 818
3444c3444
< #line 820 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 821 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3450c3450
< #line 825
---
> #line 826
3452,3453d3451
< #line 827
<   mutex_unlock(ldv_func_arg1);
3454a3453,3454
>   mutex_unlock(ldv_func_arg1);
> #line 829
3458c3458
< #line 830 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 831 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3464c3464
< #line 835
---
> #line 836
3466,3467d3465
< #line 837
<   mutex_lock(ldv_func_arg1);
3468a3467,3468
>   mutex_lock(ldv_func_arg1);
> #line 839
3472c3472
< #line 840 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 841 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/gpio-regulator.c.prepared"
3478c3478
< #line 845
---
> #line 846
3480,3481d3479
< #line 847
<   mutex_unlock(ldv_func_arg1);
3482a3481,3482
>   mutex_unlock(ldv_func_arg1);
> #line 849
