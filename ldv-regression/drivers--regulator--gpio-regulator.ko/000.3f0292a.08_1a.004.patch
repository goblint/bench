2601c2601,2603
< #line 792 "include/linux/device.h"
---
> #line 553 "include/linux/device.h"
> extern void *devm_kzalloc(struct device * , size_t  , gfp_t  ) ;
> #line 792
2681,2706d2682
< #line 221 "include/linux/slub_def.h"
< extern void *__kmalloc(size_t  , gfp_t  ) ;
< #line 268 "include/linux/slub_def.h"
< __inline static void *kmalloc(size_t size , gfp_t flags ) 
< { 
<   void *tmp___2 ;
< 
<   {
< #line 283
<   tmp___2 = __kmalloc(size, flags);
< #line 283
<   return (tmp___2);
< }
< }
< #line 349 "include/linux/slab.h"
< __inline static void *kzalloc(size_t size , gfp_t flags ) 
< { 
<   void *tmp ;
< 
<   {
< #line 351
<   tmp = kmalloc(size, flags | 32768U);
< #line 351
<   return (tmp);
< }
< }
2983c2959
<   tmp = kzalloc(104UL, 208U);
---
>   tmp = devm_kzalloc(& pdev->dev, 104UL, 208U);
2986,2987d2961
< #line 186
<   if ((unsigned long )drvdata == (unsigned long )((struct gpio_regulator_data *)0)) {
2989c2963
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate device data\n");
---
>   if ((unsigned long )drvdata == (unsigned long )((struct gpio_regulator_data *)0)) {
2990a2965,2966
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate device data\n");
> #line 189
2995c2971
< #line 191
---
> #line 192
2997,2998d2972
< #line 191
<   drvdata->desc.name = (char const   *)tmp___0;
3000c2974
<   if ((unsigned long )drvdata->desc.name == (unsigned long )((char const   *)0)) {
---
>   drvdata->desc.name = (char const   *)tmp___0;
3002c2976
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate supply name\n");
---
>   if ((unsigned long )drvdata->desc.name == (unsigned long )((char const   *)0)) {
3004c2978
<     ret = -12;
---
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate supply name\n");
3005a2980,2981
>     ret = -12;
> #line 196
3010c2986
< #line 198
---
> #line 199
3013c2989
< #line 198
---
> #line 199
3015,3016d2990
< #line 201
<   if ((unsigned long )drvdata->gpios == (unsigned long )((struct gpio *)0)) {
3018c2992
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate gpio data\n");
---
>   if ((unsigned long )drvdata->gpios == (unsigned long )((struct gpio *)0)) {
3020c2994
<     ret = -12;
---
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate gpio data\n");
3021a2996,2997
>     ret = -12;
> #line 205
3026c3002
< #line 207
---
> #line 208
3029c3005
< #line 207
---
> #line 208
3031,3032d3006
< #line 211
<   if ((unsigned long )drvdata->states == (unsigned long )((struct gpio_regulator_state *)0)) {
3034c3008
<     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate state data\n");
---
>   if ((unsigned long )drvdata->states == (unsigned long )((struct gpio_regulator_state *)0)) {
3036c3010
<     ret = -12;
---
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to allocate state data\n");
3037a3012,3013
>     ret = -12;
> #line 215
3042c3018
< #line 216
---
> #line 217
3044c3020
< #line 218
---
> #line 219
3046c3022
< #line 221
---
> #line 222
3049,3050d3024
< #line 223
<   drvdata->desc.type = REGULATOR_VOLTAGE;
3052c3026
<   drvdata->desc.ops = & gpio_regulator_voltage_ops;
---
>   drvdata->desc.type = REGULATOR_VOLTAGE;
3054c3028
<   drvdata->desc.n_voltages = (unsigned int )config->nr_states;
---
>   drvdata->desc.ops = & gpio_regulator_voltage_ops;
3055a3030,3031
>   drvdata->desc.n_voltages = (unsigned int )config->nr_states;
> #line 227
3058,3059d3033
< #line 228
<   drvdata->desc.type = REGULATOR_CURRENT;
3061c3035
<   drvdata->desc.ops = & gpio_regulator_current_ops;
---
>   drvdata->desc.type = REGULATOR_CURRENT;
3062a3037,3038
>   drvdata->desc.ops = & gpio_regulator_current_ops;
> #line 231
3065,3066d3040
< #line 232
<   dev_err((struct device  const  *)(& pdev->dev), "No regulator type set\n");
3068c3042
<   ret = -22;
---
>   dev_err((struct device  const  *)(& pdev->dev), "No regulator type set\n");
3069a3044,3045
>   ret = -22;
> #line 235
3073,3074d3048
< #line 238
<   drvdata->enable_gpio = config->enable_gpio;
3075a3050,3051
>   drvdata->enable_gpio = config->enable_gpio;
> #line 240
3077c3053
< #line 241
---
> #line 242
3079,3080d3054
< #line 241
<   if ((int )tmp___3) {
3081a3056,3057
>   if ((int )tmp___3) {
> #line 243
3083,3084d3058
< #line 244
<     ret = gpio_request((unsigned int )config->enable_gpio, config->supply_name);
3086c3060
<     if (ret != 0) {
---
>     ret = gpio_request((unsigned int )config->enable_gpio, config->supply_name);
3087a3062,3063
>     if (ret != 0) {
> #line 247
3090c3066
< #line 249
---
> #line 250
3095,3096d3070
< #line 255
<     if ((unsigned int )*((unsigned char *)config + 12UL) != 0U) {
3098c3072
<       drvdata->is_enabled = 1;
---
>     if ((unsigned int )*((unsigned char *)config + 12UL) != 0U) {
3099a3074,3075
>       drvdata->is_enabled = 1;
> #line 258
3102,3103d3077
< #line 260
<       drvdata->is_enabled = 0;
3104a3079,3080
>       drvdata->is_enabled = 0;
> #line 262
3107,3108d3082
< #line 265
<     if (ret != 0) {
3109a3084,3085
>     if (ret != 0) {
> #line 267
3112c3088
< #line 269
---
> #line 270
3118c3094
< #line 275
---
> #line 276
3121,3122d3096
< #line 278
<   drvdata->nr_gpios = config->nr_gpios;
3124c3098
<   ret = gpio_request_array((struct gpio  const  *)drvdata->gpios, (size_t )drvdata->nr_gpios);
---
>   drvdata->nr_gpios = config->nr_gpios;
3126c3100
<   if (ret != 0) {
---
>   ret = gpio_request_array((struct gpio  const  *)drvdata->gpios, (size_t )drvdata->nr_gpios);
3127a3102,3103
>   if (ret != 0) {
> #line 282
3130c3106
< #line 283
---
> #line 284
3135,3136d3110
< #line 287
<   state = 0;
3137a3112,3113
>   state = 0;
> #line 289
3139c3115
< #line 288
---
> #line 289
3142,3143d3117
< #line 289
<   if (((config->gpios + (unsigned long )ptr)->flags & 2UL) != 0UL) {
3144a3119,3120
>   if (((config->gpios + (unsigned long )ptr)->flags & 2UL) != 0UL) {
> #line 291
3149c3125
< #line 288
---
> #line 289
3152,3153d3127
< #line 288
<   if (drvdata->nr_gpios > ptr) {
3154a3129,3130
>   if (drvdata->nr_gpios > ptr) {
> #line 290
3159c3135
< #line 292
---
> #line 293
3161c3137
< #line 294
---
> #line 295
3164c3140
< #line 296
---
> #line 297
3166,3167d3141
< #line 296
<   if (tmp___5 != 0L) {
3168a3143,3144
>   if (tmp___5 != 0L) {
> #line 298
3170,3171d3145
< #line 297
<     ret = (int )tmp___4;
3172a3147,3148
>     ret = (int )tmp___4;
> #line 299
3175c3151
< #line 299
---
> #line 300
3180c3156
< #line 302
---
> #line 303
3182c3158
< #line 304
---
> #line 305
3185c3161
< #line 307
---
> #line 308
3188c3164
< #line 309
---
> #line 310
3190,3191d3165
< #line 309
<   if ((int )tmp___6) {
3192a3167,3168
>   if ((int )tmp___6) {
> #line 311
3198c3174
< #line 312
---
> #line 313
3201c3177
< #line 314
---
> #line 315
3204c3180
< #line 316
---
> #line 317
3206,3208c3182
<   err: 
< #line 318
<   kfree((void const   *)drvdata);
---
>   err: ;
3244,3246c3218
< #line 337
<   kfree((void const   *)drvdata);
< #line 339
---
> #line 338
3250c3222
< #line 342 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 341 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
3256c3228
< #line 351 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 350 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
3262c3234
< #line 353
---
> #line 352
3264c3236
< #line 353
---
> #line 352
3268c3240
< #line 357 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 356 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
3274c3246
< #line 359
---
> #line 358
3276c3248
< #line 360
---
> #line 359
3280c3252
< #line 384
---
> #line 383
3282c3254
< #line 387
---
> #line 386
3284c3256
< #line 390
---
> #line 389
3286c3258
< #line 393
---
> #line 392
3288c3260
< #line 396
---
> #line 395
3290c3262
< #line 399
---
> #line 398
3292c3264
< #line 402 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 401 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
3294c3266
< #line 405 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
---
> #line 404 "/work/ldvuser/novikov/work/current--X--drivers/regulator/gpio-regulator.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/regulator/gpio-regulator.c.prepared"
3312c3284
< #line 493
---
> #line 492
3314c3286
< #line 471
---
> #line 470
3316c3288
< #line 480
---
> #line 479
3318c3290
< #line 486
---
> #line 485
3320c3292
< #line 487
---
> #line 486
3322c3294
< #line 487
---
> #line 486
3324c3296
< #line 488
---
> #line 487
3329c3301
< #line 496
---
> #line 495
3332c3304
< #line 500
---
> #line 499
3334c3306
< #line 500
---
> #line 499
3337c3309
< #line 510
---
> #line 509
3339c3311
< #line 511
---
> #line 510
3341c3313
< #line 518
---
> #line 517
3344c3316
< #line 527
---
> #line 526
3346c3318
< #line 528
---
> #line 527
3348c3320
< #line 535
---
> #line 534
3351c3323
< #line 544
---
> #line 543
3353c3325
< #line 545
---
> #line 544
3355c3327
< #line 552
---
> #line 551
3358c3330
< #line 561
---
> #line 560
3360c3332
< #line 562
---
> #line 561
3362c3334
< #line 569
---
> #line 568
3365c3337
< #line 578
---
> #line 577
3367c3339
< #line 579
---
> #line 578
3369c3341
< #line 586
---
> #line 585
3372c3344
< #line 595
---
> #line 594
3374c3346
< #line 596
---
> #line 595
3377c3349
< #line 603
---
> #line 602
3380c3352
< #line 612
---
> #line 611
3382c3354
< #line 613
---
> #line 612
3384c3356
< #line 620
---
> #line 619
3387c3359
< #line 629
---
> #line 628
3389c3361
< #line 630
---
> #line 629
3391c3363
< #line 637
---
> #line 636
3394c3366
< #line 646
---
> #line 645
3396c3368
< #line 647
---
> #line 646
3398c3370
< #line 654
---
> #line 653
3401c3373
< #line 663
---
> #line 662
3403c3375
< #line 664
---
> #line 663
3405c3377
< #line 671
---
> #line 670
3408c3380
< #line 680
---
> #line 679
3410c3382
< #line 681
---
> #line 680
3412c3384
< #line 688
---
> #line 687
3415c3387
< #line 697
---
> #line 696
3417c3389
< #line 698
---
> #line 697
3419c3391
< #line 705
---
> #line 704
3422c3394
< #line 714
---
> #line 713
3424c3396
< #line 715
---
> #line 714
3427c3399
< #line 722
---
> #line 721
3430c3402
< #line 726
---
> #line 725
3432c3404
< #line 731
---
> #line 730
3434c3406
< #line 732
---
> #line 731
3436c3408
< #line 733
---
> #line 732
3438c3410
< #line 734
---
> #line 733
3440c3412
< #line 735
---
> #line 734
3445c3417
< #line 736
---
> #line 735
3450c3422
< #line 742
---
> #line 741
3453c3425
< #line 746
---
> #line 745
3455c3427
< #line 751
---
> #line 750
3457c3429
< #line 752
---
> #line 751
3459c3431
< #line 753
---
> #line 752
3464c3436
< #line 759
---
> #line 758
3467c3439
< #line 760
---
> #line 759
3472c3444
< #line 496
---
> #line 495
3474c3446
< #line 496
---
> #line 495
3476c3448
< #line 498
---
> #line 497
3483c3455
< #line 772
---
> #line 771
3485c3457
< #line 773
---
> #line 772
3488c3460
< #line 776
---
> #line 775
3490c3462
< #line 779
---
> #line 778
