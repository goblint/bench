265c265
< #line 88
---
> #line 91
267c267
< #line 88 "include/linux/personality.h"
---
> #line 91 "include/linux/personality.h"
628c628
< #line 92 "include/linux/nodemask.h"
---
> #line 98 "include/linux/nodemask.h"
632c632
< #line 92 "include/linux/nodemask.h"
---
> #line 98 "include/linux/nodemask.h"
921c921
< #line 15 "include/linux/slub_def.h"
---
> #line 16 "include/linux/slub_def.h"
943c943
< #line 36 "include/linux/slub_def.h"
---
> #line 37 "include/linux/slub_def.h"
952c952
< #line 47 "include/linux/slub_def.h"
---
> #line 48 "include/linux/slub_def.h"
961c961
< #line 63 "include/linux/slub_def.h"
---
> #line 64 "include/linux/slub_def.h"
965c965
< #line 70 "include/linux/slub_def.h"
---
> #line 71 "include/linux/slub_def.h"
1467c1467
< #line 31 "include/linux/device.h"
---
> #line 29 "include/linux/device.h"
1469c1469
< #line 33
---
> #line 31
1471c1471
< #line 34
---
> #line 32
1473c1473
< #line 35
---
> #line 33
1475c1475
< #line 36
---
> #line 34
1477c1477
< #line 37
---
> #line 35
1479c1479
< #line 39 "include/linux/device.h"
---
> #line 37 "include/linux/device.h"
1485c1485
< #line 52
---
> #line 50
1487c1487
< #line 52
---
> #line 50
1489c1489
< #line 52 "include/linux/device.h"
---
> #line 50 "include/linux/device.h"
1505c1505
< #line 123 "include/linux/device.h"
---
> #line 121 "include/linux/device.h"
1520c1520
< #line 156 "include/linux/device.h"
---
> #line 154 "include/linux/device.h"
1526c1526
< #line 188
---
> #line 186
1528c1528
< #line 188 "include/linux/device.h"
---
> #line 186 "include/linux/device.h"
1544c1544
< #line 209
---
> #line 207
1546c1546
< #line 242 "include/linux/device.h"
---
> #line 240 "include/linux/device.h"
1552c1552
< #line 289 "include/linux/device.h"
---
> #line 287 "include/linux/device.h"
1561c1561
< #line 300 "include/linux/device.h"
---
> #line 298 "include/linux/device.h"
1568c1568
< #line 360 "include/linux/device.h"
---
> #line 358 "include/linux/device.h"
1573c1573
< #line 369
---
> #line 367
1575c1575
< #line 369 "include/linux/device.h"
---
> #line 367 "include/linux/device.h"
1752c1752
< #line 314
---
> #line 313
1754c1754
< #line 314 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
1759c1759
< #line 314 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
1764c1764
< #line 314 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
1803d1802
<    __u8 do_not_encrypt : 1 ;
1819c1818
< #line 429
---
> #line 425
1821c1820
< #line 439
---
> #line 435
2121c2120
< #line 443 "include/linux/ethtool.h"
---
> #line 444 "include/linux/ethtool.h"
3322c3321
< #line 2180
---
> #line 2182
3726a3726,3727
> #line 167 "include/linux/irq.h"
> struct irqaction;
3744c3745
< struct __anonstruct_sigset_t_228 {
---
> struct __anonstruct_sigset_t_229 {
3748c3749
< typedef struct __anonstruct_sigset_t_228 sigset_t;
---
> typedef struct __anonstruct_sigset_t_229 sigset_t;
3776c3777
< struct __anonstruct__kill_230 {
---
> struct __anonstruct__kill_231 {
3781c3782
< struct __anonstruct__timer_231 {
---
> struct __anonstruct__timer_232 {
3789c3790
< struct __anonstruct__rt_232 {
---
> struct __anonstruct__rt_233 {
3795c3796
< struct __anonstruct__sigchld_233 {
---
> struct __anonstruct__sigchld_234 {
3803c3804
< struct __anonstruct__sigfault_234 {
---
> struct __anonstruct__sigfault_235 {
3807c3808
< struct __anonstruct__sigpoll_235 {
---
> struct __anonstruct__sigpoll_236 {
3812c3813
< union __anonunion__sifields_229 {
---
> union __anonunion__sifields_230 {
3814,3819c3815,3820
<    struct __anonstruct__kill_230 _kill ;
<    struct __anonstruct__timer_231 _timer ;
<    struct __anonstruct__rt_232 _rt ;
<    struct __anonstruct__sigchld_233 _sigchld ;
<    struct __anonstruct__sigfault_234 _sigfault ;
<    struct __anonstruct__sigpoll_235 _sigpoll ;
---
>    struct __anonstruct__kill_231 _kill ;
>    struct __anonstruct__timer_232 _timer ;
>    struct __anonstruct__rt_233 _rt ;
>    struct __anonstruct__sigchld_234 _sigchld ;
>    struct __anonstruct__sigfault_235 _sigfault ;
>    struct __anonstruct__sigpoll_236 _sigpoll ;
3826c3827
<    union __anonunion__sifields_229 _sifields ;
---
>    union __anonunion__sifields_230 _sifields ;
3850c3851
< struct __anonstruct_seccomp_t_238 {
---
> struct __anonstruct_seccomp_t_239 {
3854c3855
< typedef struct __anonstruct_seccomp_t_238 seccomp_t;
---
> typedef struct __anonstruct_seccomp_t_239 seccomp_t;
3903c3904
< union __anonunion_type_data_239 {
---
> union __anonunion_type_data_240 {
3909c3910
< union __anonunion_payload_240 {
---
> union __anonunion_payload_241 {
3931,3932c3932,3933
<    union __anonunion_type_data_239 type_data ;
<    union __anonunion_payload_240 payload ;
---
>    union __anonunion_type_data_240 type_data ;
>    union __anonunion_payload_241 payload ;
4002c4003
< union __anonunion_ki_obj_242 {
---
> union __anonunion_ki_obj_243 {
4019c4020
<    union __anonunion_ki_obj_242 ki_obj ;
---
>    union __anonunion_ki_obj_243 ki_obj ;
4086c4087
< #line 511 "include/linux/sched.h"
---
> #line 520 "include/linux/sched.h"
4092c4093
< #line 524
---
> #line 533
4094c4095
< #line 524
---
> #line 533
4096c4097
< #line 524
---
> #line 533
4098c4099
< #line 524 "include/linux/sched.h"
---
> #line 533 "include/linux/sched.h"
4150c4151
< #line 656 "include/linux/sched.h"
---
> #line 665 "include/linux/sched.h"
4171c4172
< #line 706
---
> #line 715
4173c4174
< #line 709 "include/linux/sched.h"
---
> #line 718 "include/linux/sched.h"
4181c4182
< #line 725 "include/linux/sched.h"
---
> #line 734 "include/linux/sched.h"
4196c4197
< #line 770
---
> #line 779
4203c4204
< #line 846 "include/linux/sched.h"
---
> #line 855 "include/linux/sched.h"
4210c4211
< #line 879
---
> #line 888
4220c4221
< #line 897 "include/linux/sched.h"
---
> #line 906 "include/linux/sched.h"
4264,4265d4264
< #line 998
< struct io_context;
4266a4266,4267
> struct io_context;
> #line 1016
4268c4269
< #line 1012
---
> #line 1021
4270c4271
< #line 1015 "include/linux/sched.h"
---
> #line 1024 "include/linux/sched.h"
4301c4302
< #line 1066 "include/linux/sched.h"
---
> #line 1075 "include/linux/sched.h"
4306c4307
< #line 1080 "include/linux/sched.h"
---
> #line 1089 "include/linux/sched.h"
4351c4352
< #line 1141
---
> #line 1150
4353c4354
< #line 1141 "include/linux/sched.h"
---
> #line 1150 "include/linux/sched.h"
4364c4365
< #line 1157
---
> #line 1166
4366,4368c4367
< #line 1157
< struct irqaction;
< #line 1157
---
> #line 1166
4370c4369
< #line 1157
---
> #line 1166
4372c4371
< #line 1157
---
> #line 1166
4374c4373
< #line 1157 "include/linux/sched.h"
---
> #line 1166 "include/linux/sched.h"
4535c4534
< #line 90 "include/linux/interrupt.h"
---
> #line 93 "include/linux/interrupt.h"
4655c4654
< #line 39 "include/net/neighbour.h"
---
> #line 40 "include/net/neighbour.h"
4657c4656
< #line 39 "include/net/neighbour.h"
---
> #line 40 "include/net/neighbour.h"
4683c4682
< #line 72 "include/net/neighbour.h"
---
> #line 73 "include/net/neighbour.h"
4697c4696
< #line 99
---
> #line 100
4699c4698
< #line 99 "include/net/neighbour.h"
---
> #line 100 "include/net/neighbour.h"
4723c4722
< #line 124 "include/net/neighbour.h"
---
> #line 125 "include/net/neighbour.h"
4733c4732
< #line 135 "include/net/neighbour.h"
---
> #line 136 "include/net/neighbour.h"
4741c4740
< #line 151 "include/net/neighbour.h"
---
> #line 152 "include/net/neighbour.h"
4759c4758
<    struct timer_list gc_timer ;
---
>    struct delayed_work gc_work ;
4770d4768
<    unsigned int hash_chain_gc ;
7232c7230
< #line 1184
---
> #line 1186
7234c7232
< #line 1184 "include/linux/usb.h"
---
> #line 1186 "include/linux/usb.h"
7265c7263
< #line 1447 "include/linux/usb.h"
---
> #line 1449 "include/linux/usb.h"
7400c7398
< #line 216 "include/linux/device.h"
---
> #line 214 "include/linux/device.h"
7403c7401
< #line 218
---
> #line 216
7405c7403
< #line 235
---
> #line 233
7408c7406
< #line 238
---
> #line 236
7412c7410
< #line 424 "include/linux/device.h"
---
> #line 422 "include/linux/device.h"
7418c7416
< #line 426
---
> #line 424
7420c7418
< #line 426
---
> #line 424
7424c7422
< #line 429
---
> #line 427
7427c7425
< #line 451 "include/linux/device.h"
---
> #line 449 "include/linux/device.h"
7433c7431
< #line 453
---
> #line 451
7437c7435
< #line 456 "include/linux/device.h"
---
> #line 454 "include/linux/device.h"
7443c7441
< #line 458
---
> #line 456
7445c7443
< #line 459
---
> #line 457
7449c7447
< #line 483
---
> #line 481
7451c7449
< #line 484
---
> #line 482
7453c7451
< #line 485
---
> #line 483
7455c7453
< #line 547
---
> #line 545
8630c8628,8630
< #line 141 "include/linux/slub_def.h"
---
> #line 27 "include/linux/kmemleak.h"
> extern void kmemleak_alloc(void const   *ptr , size_t size , int min_count , gfp_t gfp ) ;
> #line 142 "include/linux/slub_def.h"
8632c8632
< #line 147 "include/linux/slub_def.h"
---
> #line 148 "include/linux/slub_def.h"
8704,8705d8703
< #line 149
<   if (! size) {
8706a8705,8706
>   if (! size) {
> #line 151
8711,8712d8710
< #line 152
<   if (size <= (size_t )8) {
8713a8712,8713
>   if (size <= (size_t )8) {
> #line 154
8715c8715
< #line 153
---
> #line 154
8717c8717
< #line 153
---
> #line 154
8720c8720
< #line 153
---
> #line 154
8722c8722
< #line 153
---
> #line 154
8725c8725
< #line 153
---
> #line 154
8727c8727
< #line 153
---
> #line 154
8730c8730
< #line 153
---
> #line 154
8732c8732
< #line 153
---
> #line 154
8735c8735
< #line 153
---
> #line 154
8737c8737
< #line 153
---
> #line 154
8740c8740
< #line 153
---
> #line 154
8742c8742
< #line 153
---
> #line 154
8745c8745
< #line 153
---
> #line 154
8747c8747
< #line 153
---
> #line 154
8750c8750
< #line 153
---
> #line 154
8752c8752
< #line 153
---
> #line 154
8755c8755
< #line 153
---
> #line 154
8757c8757
< #line 153
---
> #line 154
8760c8760
< #line 153
---
> #line 154
8762c8762
< #line 153
---
> #line 154
8765c8765
< #line 153
---
> #line 154
8767c8767
< #line 153
---
> #line 154
8770c8770
< #line 153
---
> #line 154
8772c8772
< #line 153
---
> #line 154
8775c8775
< #line 153
---
> #line 154
8777c8777
< #line 153
---
> #line 154
8780c8780
< #line 153
---
> #line 154
8782c8782
< #line 153
---
> #line 154
8785c8785
< #line 153
---
> #line 154
8787c8787
< #line 153
---
> #line 154
8790c8790
< #line 153
---
> #line 154
8792c8792
< #line 153
---
> #line 154
8795c8795
< #line 153
---
> #line 154
8797c8797
< #line 153
---
> #line 154
8800c8800
< #line 153
---
> #line 154
8802c8802
< #line 153
---
> #line 154
8805c8805
< #line 153
---
> #line 154
8807c8807
< #line 153
---
> #line 154
8810c8810
< #line 153
---
> #line 154
8812c8812
< #line 153
---
> #line 154
8815c8815
< #line 153
---
> #line 154
8817c8817
< #line 153
---
> #line 154
8820c8820
< #line 153
---
> #line 154
8822c8822
< #line 153
---
> #line 154
8825c8825
< #line 153
---
> #line 154
8827c8827
< #line 153
---
> #line 154
8830c8830
< #line 153
---
> #line 154
8832c8832
< #line 153
---
> #line 154
8835c8835
< #line 153
---
> #line 154
8837c8837
< #line 153
---
> #line 154
8840c8840
< #line 153
---
> #line 154
8842c8842
< #line 153
---
> #line 154
8845c8845
< #line 153
---
> #line 154
8847c8847
< #line 153
---
> #line 154
8850c8850
< #line 153
---
> #line 154
8852c8852
< #line 153
---
> #line 154
8855c8855
< #line 153
---
> #line 154
8857c8857
< #line 153
---
> #line 154
8860c8860
< #line 153
---
> #line 154
8862c8862
< #line 153
---
> #line 154
8865c8865
< #line 153
---
> #line 154
8867c8867
< #line 153
---
> #line 154
8870c8870
< #line 153
---
> #line 154
8872c8872
< #line 153
---
> #line 154
8875c8875
< #line 153
---
> #line 154
8877c8877
< #line 153
---
> #line 154
8880c8880
< #line 153
---
> #line 154
8882c8882
< #line 153
---
> #line 154
8885c8885
< #line 153
---
> #line 154
8887c8887
< #line 153
---
> #line 154
8890c8890
< #line 153
---
> #line 154
8892c8892
< #line 153
---
> #line 154
8895c8895
< #line 153
---
> #line 154
8897c8897
< #line 153
---
> #line 154
8900c8900
< #line 153
---
> #line 154
8902c8902
< #line 153
---
> #line 154
8905c8905
< #line 153
---
> #line 154
8907c8907
< #line 153
---
> #line 154
8910c8910
< #line 153
---
> #line 154
8912c8912
< #line 153
---
> #line 154
8915c8915
< #line 153
---
> #line 154
8917c8917
< #line 153
---
> #line 154
8920c8920
< #line 153
---
> #line 154
8922c8922
< #line 153
---
> #line 154
8925c8925
< #line 153
---
> #line 154
8927c8927
< #line 153
---
> #line 154
8930c8930
< #line 153
---
> #line 154
8932c8932
< #line 153
---
> #line 154
8935c8935
< #line 153
---
> #line 154
8937c8937
< #line 153
---
> #line 154
8940c8940
< #line 153
---
> #line 154
8942c8942
< #line 153
---
> #line 154
8945c8945
< #line 153
---
> #line 154
8947c8947
< #line 153
---
> #line 154
8950c8950
< #line 153
---
> #line 154
8952c8952
< #line 153
---
> #line 154
8955c8955
< #line 153
---
> #line 154
8957c8957
< #line 153
---
> #line 154
8960c8960
< #line 153
---
> #line 154
8962c8962
< #line 153
---
> #line 154
8965c8965
< #line 153
---
> #line 154
8967c8967
< #line 153
---
> #line 154
8970c8970
< #line 153
---
> #line 154
8972c8972
< #line 153
---
> #line 154
8975c8975
< #line 153
---
> #line 154
8977c8977
< #line 153
---
> #line 154
8980c8980
< #line 153
---
> #line 154
8982c8982
< #line 153
---
> #line 154
8985c8985
< #line 153
---
> #line 154
8987c8987
< #line 153
---
> #line 154
8990c8990
< #line 153
---
> #line 154
8992c8992
< #line 153
---
> #line 154
8995c8995
< #line 153
---
> #line 154
8997c8997
< #line 153
---
> #line 154
9000c9000
< #line 153
---
> #line 154
9002c9002
< #line 153
---
> #line 154
9005c9005
< #line 153
---
> #line 154
9007c9007
< #line 153
---
> #line 154
9010c9010
< #line 153
---
> #line 154
9012c9012
< #line 153
---
> #line 154
9015c9015
< #line 153
---
> #line 154
9017c9017
< #line 153
---
> #line 154
9020c9020
< #line 153
---
> #line 154
9022c9022
< #line 153
---
> #line 154
9025c9025
< #line 153
---
> #line 154
9027c9027
< #line 153
---
> #line 154
9030c9030
< #line 153
---
> #line 154
9032c9032
< #line 153
---
> #line 154
9035c9035
< #line 153
---
> #line 154
9037c9037
< #line 153
---
> #line 154
9040c9040
< #line 153
---
> #line 154
9042c9042
< #line 153
---
> #line 154
9045c9045
< #line 153
---
> #line 154
9048c9048
< #line 153
---
> #line 154
9051c9051
< #line 153
---
> #line 154
9054c9054
< #line 153
---
> #line 154
9057c9057
< #line 153
---
> #line 154
9060c9060
< #line 153
---
> #line 154
9063c9063
< #line 153
---
> #line 154
9066c9066
< #line 153
---
> #line 154
9069c9069
< #line 153
---
> #line 154
9072c9072
< #line 153
---
> #line 154
9075c9075
< #line 153
---
> #line 154
9078c9078
< #line 153
---
> #line 154
9081c9081
< #line 153
---
> #line 154
9084c9084
< #line 153
---
> #line 154
9087c9087
< #line 153
---
> #line 154
9090c9090
< #line 153
---
> #line 154
9093c9093
< #line 153
---
> #line 154
9096c9096
< #line 153
---
> #line 154
9099c9099
< #line 153
---
> #line 154
9102c9102
< #line 153
---
> #line 154
9105c9105
< #line 153
---
> #line 154
9108c9108
< #line 153
---
> #line 154
9111c9111
< #line 153
---
> #line 154
9114c9114
< #line 153
---
> #line 154
9117c9117
< #line 153
---
> #line 154
9120c9120
< #line 153
---
> #line 154
9123c9123
< #line 153
---
> #line 154
9126c9126
< #line 153
---
> #line 154
9129c9129
< #line 153
---
> #line 154
9132c9132
< #line 153
---
> #line 154
9135c9135
< #line 153
---
> #line 154
9138c9138
< #line 153
---
> #line 154
9141c9141
< #line 153
---
> #line 154
9144c9144
< #line 153
---
> #line 154
9147c9147
< #line 153
---
> #line 154
9150c9150
< #line 153
---
> #line 154
9153c9153
< #line 153
---
> #line 154
9156c9156
< #line 153
---
> #line 154
9159c9159
< #line 153
---
> #line 154
9162c9162
< #line 153
---
> #line 154
9165c9165
< #line 153
---
> #line 154
9168c9168
< #line 153
---
> #line 154
9171c9171
< #line 153
---
> #line 154
9174c9174
< #line 153
---
> #line 154
9177c9177
< #line 153
---
> #line 154
9180c9180
< #line 153
---
> #line 154
9183c9183
< #line 153
---
> #line 154
9186c9186
< #line 153
---
> #line 154
9189c9189
< #line 153
---
> #line 154
9192c9192
< #line 153
---
> #line 154
9195c9195
< #line 153
---
> #line 154
9198c9198
< #line 153
---
> #line 154
9201c9201
< #line 153
---
> #line 154
9204c9204
< #line 153
---
> #line 154
9207c9207
< #line 153
---
> #line 154
9210c9210
< #line 153
---
> #line 154
9213c9213
< #line 153
---
> #line 154
9216c9216
< #line 153
---
> #line 154
9219c9219
< #line 153
---
> #line 154
9222c9222
< #line 153
---
> #line 154
9225c9225
< #line 153
---
> #line 154
9228c9228
< #line 153
---
> #line 154
9231c9231
< #line 153
---
> #line 154
9234c9234
< #line 153
---
> #line 154
9237c9237
< #line 153
---
> #line 154
9242,9243d9241
< #line 156
<   if (size > (size_t )64 && size <= (size_t )96) {
9244a9243,9244
>   if (size > (size_t )64 && size <= (size_t )96) {
> #line 158
9249,9250d9248
< #line 158
<   if (size > (size_t )128 && size <= (size_t )192) {
9251a9250,9251
>   if (size > (size_t )128 && size <= (size_t )192) {
> #line 160
9256c9256
< #line 161
---
> #line 162
9258c9258
< #line 161
---
> #line 162
9263c9263
< #line 162
---
> #line 163
9265c9265
< #line 162
---
> #line 163
9270c9270
< #line 163
---
> #line 164
9272c9272
< #line 163
---
> #line 164
9277c9277
< #line 164
---
> #line 165
9279c9279
< #line 164
---
> #line 165
9284c9284
< #line 165
---
> #line 166
9286c9286
< #line 165
---
> #line 166
9291c9291
< #line 166
---
> #line 167
9293c9293
< #line 166
---
> #line 167
9298c9298
< #line 167
---
> #line 168
9300c9300
< #line 167
---
> #line 168
9305c9305
< #line 168
---
> #line 169
9307c9307
< #line 168
---
> #line 169
9312c9312
< #line 169
---
> #line 170
9314c9314
< #line 169
---
> #line 170
9319c9319
< #line 170
---
> #line 171
9321c9321
< #line 170
---
> #line 171
9326c9326
< #line 175
---
> #line 176
9328c9328
< #line 175
---
> #line 176
9333c9333
< #line 176
---
> #line 177
9335c9335
< #line 176
---
> #line 177
9340c9340
< #line 177
---
> #line 178
9342c9342
< #line 177
---
> #line 178
9347c9347
< #line 178
---
> #line 179
9349c9349
< #line 178
---
> #line 179
9354c9354
< #line 179
---
> #line 180
9356c9356
< #line 179
---
> #line 180
9361c9361
< #line 180
---
> #line 181
9363c9363
< #line 180
---
> #line 181
9368c9368
< #line 181
---
> #line 182
9370c9370
< #line 181
---
> #line 182
9375c9375
< #line 182
---
> #line 183
9377c9377
< #line 182
---
> #line 183
9382c9382
< #line 183
---
> #line 184
9384c9384
< #line 183
---
> #line 184
9389c9389
< #line 184
---
> #line 185
9393c9393
< #line 201 "include/linux/slub_def.h"
---
> #line 202 "include/linux/slub_def.h"
9400c9400
< #line 203
---
> #line 204
9402c9402
< #line 203
---
> #line 204
9404,9405d9403
< #line 205
<   if (index == 0) {
9406a9405,9406
>   if (index == 0) {
> #line 207
9411c9411
< #line 208
---
> #line 209
9415c9415
< #line 219
---
> #line 220
9417c9417
< #line 222
---
> #line 223
9419c9419
< #line 231 "include/linux/slub_def.h"
---
> #line 232 "include/linux/slub_def.h"
9429c9429
< #line 233
---
> #line 234
9431,9432d9430
< #line 233
<   order = tmp;
9433a9432,9433
>   order = tmp;
> #line 235
9435c9435
< #line 234
---
> #line 235
9437,9438c9437,9438
< #line 236
<   trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
---
> #line 237
>   kmemleak_alloc(ret, size, 1, flags);
9439a9440,9441
>   trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
> #line 240
9443c9445
< #line 241 "include/linux/slub_def.h"
---
> #line 243 "include/linux/slub_def.h"
9454c9456
< #line 245
---
> #line 247
9456c9458
< #line 246
---
> #line 248
9458c9460
< #line 247
---
> #line 249
9460c9462
< #line 247
---
> #line 249
9465c9467
< #line 249
---
> #line 251
9467c9469
< #line 250
---
> #line 252
9469,9470d9470
< #line 250
<       s = tmp___0;
9471a9472,9473
>       s = tmp___0;
> #line 254
9473c9475
< #line 253
---
> #line 255
9478,9479d9479
< #line 255
<       ret = kmem_cache_alloc_notrace(s, flags);
9481c9481
<       trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
---
>       ret = kmem_cache_alloc_notrace(s, flags);
9482a9483,9484
>       trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
> #line 261
9490c9492
< #line 262
---
> #line 264
9492c9494
< #line 262
---
> #line 264
10004c10006,10016
< #line 85 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
---
> #line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
> __inline static int atomic_read(atomic_t const   *v ) 
> { 
> 
> 
>   {
> #line 23
>   return (v->counter);
> }
> }
> #line 91 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
10010c10022
< #line 87
---
> #line 93
10023c10035
< #line 90
---
> #line 96
10027c10039
< #line 98 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
---
> #line 104 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
10033c10045
< #line 100
---
> #line 106
10046c10058
< #line 103
---
> #line 109
10050c10062
< #line 113 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
---
> #line 119 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
10056c10068
< #line 117
---
> #line 123
10069c10081
< #line 120
---
> #line 126
10097c10109
< #line 490 "include/linux/device.h"
---
> #line 488 "include/linux/device.h"
10101c10113
< #line 444 "include/linux/skbuff.h"
---
> #line 440 "include/linux/skbuff.h"
10103c10115
< #line 447
---
> #line 443
10106c10118
< #line 449 "include/linux/skbuff.h"
---
> #line 445 "include/linux/skbuff.h"
10112c10124
< #line 452
---
> #line 448
10114c10126
< #line 452
---
> #line 448
10118c10130
< #line 973
---
> #line 969
10120c10132
< #line 1123
---
> #line 1119
10122c10134
< #line 1133
---
> #line 1129
10124c10136
< #line 1141
---
> #line 1137
10126c10138
< #line 1204 "include/linux/skbuff.h"
---
> #line 1200 "include/linux/skbuff.h"
10132c10144
< #line 1206
---
> #line 1202
10134c10146
< #line 1207
---
> #line 1203
10136c10148
< #line 1208
---
> #line 1204
10140c10152
< #line 1443
---
> #line 1439
10142c10154
< #line 1743
---
> #line 1739
10145c10157
< #line 1745
---
> #line 1741
10147c10159
< #line 1747
---
> #line 1743
10150c10162
< #line 1763
---
> #line 1759
10152c10164
< #line 1847 "include/linux/skbuff.h"
---
> #line 1843 "include/linux/skbuff.h"
10158c10170
< #line 1850
---
> #line 1846
10160c10172
< #line 1851
---
> #line 1847
10164c10176
< #line 1859 "include/linux/skbuff.h"
---
> #line 1855 "include/linux/skbuff.h"
10170c10182
< #line 1861
---
> #line 1857
10172c10184
< #line 1862
---
> #line 1858
10286c10298,10300
<   long tmp___0 ;
---
>   int tmp___0 ;
>   int tmp___1 ;
>   long tmp___2 ;
10296c10310
<     __ret_warn_on = ! (! (sk->__sk_common.skc_refcnt.counter == (int volatile   )1));
---
>     tmp___0 = atomic_read(& sk->__sk_common.skc_refcnt);
10298c10312
<     tmp___0 = __builtin_expect(! (! __ret_warn_on), 0);
---
>     if (tmp___0 == 1) {
10300c10314,10324
<     if (tmp___0) {
---
>       tmp___1 = 1;
>     } else {
> #line 403
>       tmp___1 = 0;
>     }
> #line 403
>     __ret_warn_on = tmp___1;
> #line 403
>     tmp___2 = __builtin_expect(! (! __ret_warn_on), 0);
> #line 403
>     if (tmp___2) {
12999c13023
< #line 445 "include/linux/skbuff.h"
---
> #line 441 "include/linux/skbuff.h"
13001c13025
< #line 814 "include/linux/skbuff.h"
---
> #line 810 "include/linux/skbuff.h"
13007c13031
< #line 816
---
> #line 812
13009c13033
< #line 816
---
> #line 812
13011c13035
< #line 816
---
> #line 812
13013c13037
< #line 817
---
> #line 813
13015c13039
< #line 818
---
> #line 814
13019c13043
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
13021c13045
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
13027c13051
< #line 830
---
> #line 826
13029c13053
< #line 830
---
> #line 826
13031c13055
< #line 830
---
> #line 826
13034c13058
< #line 831
---
> #line 827
13036c13060
< #line 832
---
> #line 828
13040c13064
< #line 990
---
> #line 986
13042c13066
< #line 1022
---
> #line 1018
14436c14460
< #line 466 "include/linux/skbuff.h"
---
> #line 462 "include/linux/skbuff.h"
14438c14462
< #line 549 "include/linux/skbuff.h"
---
> #line 545 "include/linux/skbuff.h"
14444c14468
< #line 551
---
> #line 547
14448c14472
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
14450c14474
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
14456c14480
< #line 830
---
> #line 826
14458c14482
< #line 830
---
> #line 826
14460c14484
< #line 830
---
> #line 826
14463c14487
< #line 831
---
> #line 827
14465c14489
< #line 832
---
> #line 828
14497c14521
< #line 1922
---
> #line 1932
14499c14523
< #line 2212 "include/linux/sched.h"
---
> #line 2222 "include/linux/sched.h"
14505c14529
< #line 2214
---
> #line 2224
14507c14531
< #line 2214
---
> #line 2224
14511c14535
< #line 2238 "include/linux/sched.h"
---
> #line 2248 "include/linux/sched.h"
14519c14543
< #line 2240
---
> #line 2250
14521c14545
< #line 2240
---
> #line 2250
14523c14547
< #line 2240
---
> #line 2250
14526c14550
< #line 2240
---
> #line 2250
14529c14553
< #line 2240
---
> #line 2250
14531c14555
< #line 2240
---
> #line 2250
14535,14538d14558
< #line 27 "include/linux/smp_lock.h"
< extern void lock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
< #line 28
< extern void unlock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
14545a14566,14569
> #line 27 "include/linux/smp_lock.h"
> extern void lock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
> #line 28
> extern void unlock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
14554c14578
< #line 22 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 23 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14556c14580
< #line 24 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 25 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14565c14589
< #line 27
---
> #line 28
14567,14568d14590
< #line 29
<   if (*debug___2 & 64U) {
14569a14592,14593
>   if (*debug___2 & 64U) {
> #line 31
14574,14575d14597
< #line 32
<   skb_queue_tail(& st->msgq, skb);
14576a14599,14600
>   skb_queue_tail(& st->msgq, skb);
> #line 34
14578c14602
< #line 33
---
> #line 34
14580c14604
< #line 33
---
> #line 34
14583c14607
< #line 33
---
> #line 34
14586c14610
< #line 33
---
> #line 34
14588,14589d14611
< #line 33
<   if (tmp___2) {
14591c14613
<     test_and_set_bit(0, & st->status);
---
>   if (tmp___2) {
14592a14615,14616
>     test_and_set_bit(0, & st->status);
> #line 36
14597c14621
< #line 37
---
> #line 38
14601c14625
< #line 39 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 40 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14607,14608d14630
< #line 42
<   _queue_message(ch->st, skb);
14609a14632,14633
>   _queue_message(ch->st, skb);
> #line 44
14613c14637
< #line 46 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 47 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14621,14622d14644
< #line 51
<   mutex_lock_nested(& st->lmutex, 0);
14623a14646,14647
>   mutex_lock_nested(& st->lmutex, 0);
> #line 53
14625c14649
< #line 52
---
> #line 53
14627c14651
< #line 52
---
> #line 53
14629c14653
< #line 52
---
> #line 53
14631c14655
< #line 52
---
> #line 53
14635c14659
< #line 52
---
> #line 53
14638,14639d14661
< #line 53
<     if (id == ch->nr) {
14640a14663,14664
>     if (id == ch->nr) {
> #line 55
14645c14669
< #line 52
---
> #line 53
14647c14671
< #line 52
---
> #line 53
14650c14674
< #line 56
---
> #line 57
14653,14654d14676
< #line 58
<   mutex_unlock(& st->lmutex);
14655a14678,14679
>   mutex_unlock(& st->lmutex);
> #line 60
14659c14683
< #line 62 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 63 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14669c14693
< #line 67
---
> #line 68
14671,14672d14694
< #line 69
<   _read_lock(& sl->lock);
14673a14696,14697
>   _read_lock(& sl->lock);
> #line 71
14675c14699
< #line 70
---
> #line 71
14677c14701
< #line 70
---
> #line 71
14679c14703
< #line 70
---
> #line 71
14681c14705
< #line 70
---
> #line 71
14683c14707
< #line 70
---
> #line 71
14686c14710
< #line 70
---
> #line 71
14689,14690d14712
< #line 71
<     if ((int volatile   )sk->__sk_common.skc_state != (int volatile   )2) {
14691a14714,14715
>     if ((int volatile   )sk->__sk_common.skc_state != (int volatile   )2) {
> #line 73
14696,14697d14719
< #line 73
<     if (! cskb) {
14698a14721,14722
>     if (! cskb) {
> #line 75
14703,14704d14726
< #line 75
<     if (! cskb) {
14706c14728
<       printk("<4>%s no skb\n", "send_socklist");
---
>     if (! cskb) {
14707a14730,14731
>       printk("<4>%s no skb\n", "send_socklist");
> #line 78
14712c14736
< #line 79
---
> #line 80
14714c14738
< #line 79
---
> #line 80
14718c14742
< #line 80
---
> #line 81
14722c14746
< #line 70
---
> #line 71
14725,14726d14748
< #line 82
<   _read_unlock(& sl->lock);
14728c14750
<   if (cskb) {
---
>   _read_unlock(& sl->lock);
14729a14752,14753
>   if (cskb) {
> #line 85
14734c14758
< #line 85
---
> #line 86
14738c14762
< #line 87 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 88 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14752c14776
< #line 91
---
> #line 92
14754,14755d14777
< #line 95
<   if (! st) {
14756a14779,14780
>   if (! st) {
> #line 97
14761,14762d14784
< #line 97
<   mutex_lock_nested(& st->lmutex, 0);
14764c14786
<   if ((hh->id & 65535U) == 65535U) {
---
>   mutex_lock_nested(& st->lmutex, 0);
14765a14788,14789
>   if ((hh->id & 65535U) == 65535U) {
> #line 100
14767c14791
< #line 99
---
> #line 100
14769c14793
< #line 99
---
> #line 100
14771c14795
< #line 99
---
> #line 100
14773c14797
< #line 99
---
> #line 100
14777c14801
< #line 99
---
> #line 100
14780c14804
< #line 100
---
> #line 101
14782,14783d14805
< #line 100
<       if (tmp) {
14785c14807
<         cskb = skb;
---
>       if (tmp) {
14786a14809,14810
>         cskb = skb;
> #line 103
14789c14813
< #line 104
---
> #line 105
14792,14793d14815
< #line 106
<       if (cskb) {
14795c14817
<         ret = (*(ch->send))(ch, cskb);
---
>       if (cskb) {
14797c14819
<         if (ret) {
---
>         ret = (*(ch->send))(ch, cskb);
14799c14821
<           if (*debug___2 & 16U) {
---
>         if (ret) {
14800a14823,14824
>           if (*debug___2 & 16U) {
> #line 111
14806c14830
< #line 115
---
> #line 116
14812c14836
< #line 118
---
> #line 119
14814c14838
< #line 120
---
> #line 121
14817c14841
< #line 99
---
> #line 100
14819c14843
< #line 99
---
> #line 100
14823c14847
< #line 124
---
> #line 125
14825c14849
< #line 124
---
> #line 125
14827c14851
< #line 124
---
> #line 125
14829c14853
< #line 124
---
> #line 125
14831c14855
< #line 124
---
> #line 125
14835c14859
< #line 124
---
> #line 125
14838,14839d14861
< #line 125
<       if ((hh->id & 65535U) == ch->addr) {
14841c14863
<         ret = (*(ch->send))(ch, skb);
---
>       if ((hh->id & 65535U) == ch->addr) {
14843c14865
<         if (! ret) {
---
>         ret = (*(ch->send))(ch, skb);
14844a14867,14868
>         if (! ret) {
> #line 129
14849c14873
< #line 129
---
> #line 130
14854c14878
< #line 124
---
> #line 125
14856c14880
< #line 124
---
> #line 125
14859,14860d14882
< #line 132
<     ret = (*(((st->dev)->teimgr)->ctrl))((st->dev)->teimgr, 1024, skb);
14862c14884
<     if (! ret) {
---
>     ret = (*(((st->dev)->teimgr)->ctrl))((st->dev)->teimgr, 1024, skb);
14863a14886,14887
>     if (! ret) {
> #line 135
14866,14867d14889
< #line 135
<     if (*debug___2 & 16U) {
14868a14891,14892
>     if (*debug___2 & 16U) {
> #line 137
14876,14877d14899
< #line 141
<   mutex_unlock(& st->lmutex);
14879c14901
<   if (skb) {
---
>   mutex_unlock(& st->lmutex);
14880a14903,14904
>   if (skb) {
> #line 144
14885c14909
< #line 144
---
> #line 145
14889c14913
< #line 146 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 147 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
14907c14931
< #line 149
---
> #line 150
14909,14910d14932
< #line 153
<   lm = hh->prim & 255U;
14912c14934
<   if (*debug___2 & 64U) {
---
>   lm = hh->prim & 255U;
14913a14936,14937
>   if (*debug___2 & 64U) {
> #line 156
14918,14919d14941
< #line 157
<   if (lm == 1) {
14920a14943,14944
>   if (lm == 1) {
> #line 159
14922c14946
< #line 158
---
> #line 159
14926,14927d14949
< #line 159
<       __net_timestamp(skb);
14928a14951,14952
>       __net_timestamp(skb);
> #line 161
14931c14955
< #line 162
---
> #line 163
14933c14957
< #line 162
---
> #line 163
14936,14937d14959
< #line 163
<   if (lm == 2) {
14938a14961,14962
>   if (lm == 2) {
> #line 165
14940c14964
< #line 164
---
> #line 165
14944c14968
< #line 165
---
> #line 166
14947,14948d14970
< #line 166
<     send_layer2(st, skb);
14949a14972,14973
>     send_layer2(st, skb);
> #line 168
14952,14953d14975
< #line 168
<   if (lm == 4) {
14955c14977
<     ch = get_channel4id(st, hh->id);
---
>   if (lm == 4) {
14957c14979
<     if (ch) {
---
>     ch = get_channel4id(st, hh->id);
14958a14981,14982
>     if (ch) {
> #line 172
14960c14984
< #line 171
---
> #line 172
14963c14987
< #line 173
---
> #line 174
14965c14989
< #line 173
---
> #line 174
14970,14971d14993
< #line 177
<   if (lm == 8) {
14972a14995,14996
>   if (lm == 8) {
> #line 179
14974c14998
< #line 178
---
> #line 179
14976c15000
< #line 178
---
> #line 179
14978c15002
< #line 178
---
> #line 179
14980c15004
<                          178);
---
>                          179);
14984,14985d15007
< #line 178
<     __builtin_expect(! (! __ret_warn_on), 0);
14987c15009
<     ch = get_channel4id(st, hh->id);
---
>     __builtin_expect(! (! __ret_warn_on), 0);
14989c15011
<     if (ch) {
---
>     ch = get_channel4id(st, hh->id);
14990a15013,15014
>     if (ch) {
> #line 182
14992c15016
< #line 181
---
> #line 182
14995c15019
< #line 183
---
> #line 184
14997c15021
< #line 183
---
> #line 184
15002c15026
< #line 189
---
> #line 190
15004c15028
< #line 189
---
> #line 190
15008c15032
< #line 192
---
> #line 193
15012c15036
< #line 195 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 196 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15018c15042
< #line 198
---
> #line 199
15022c15046
< #line 200 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 201 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15052,15053d15075
< #line 203
<   st = data;
15054a15077,15078
>   st = data;
> #line 205
15056c15080
< #line 207
---
> #line 208
15058c15082
< #line 209
---
> #line 210
15060c15084
< #line 209
---
> #line 210
15062c15086
< #line 211
---
> #line 212
15064,15065d15087
< #line 213
<   if (*debug___2 & 32U) {
15066a15089,15090
>   if (*debug___2 & 32U) {
> #line 215
15068c15092
< #line 214
---
> #line 215
15073,15074d15096
< #line 217
<   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
15076c15098
<     complete(st->notify);
---
>   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
15077a15100,15101
>     complete(st->notify);
> #line 220
15082c15106
< #line 222
---
> #line 223
15084c15108
< #line 225
---
> #line 226
15086c15110
< #line 225
---
> #line 226
15088c15112
< #line 225
---
> #line 226
15091c15115
< #line 225
---
> #line 226
15094c15118
< #line 225
---
> #line 226
15096,15097d15119
< #line 225
<     if (tmp___4) {
15099c15121
<       test_and_clear_bit(0, & st->status);
---
>     if (tmp___4) {
15100a15123,15124
>       test_and_clear_bit(0, & st->status);
> #line 228
15103c15127
< #line 229
---
> #line 230
15106c15130
< #line 230
---
> #line 231
15108c15132
< #line 230
---
> #line 231
15110c15134
< #line 230
---
> #line 231
15114c15138
< #line 230
---
> #line 231
15117,15118d15140
< #line 231
<       skb = skb_dequeue(& st->msgq);
15120c15142
<       if (! skb) {
---
>       skb = skb_dequeue(& st->msgq);
15121a15144,15145
>       if (! skb) {
> #line 234
15123,15124d15146
< #line 236
<         skb = skb_dequeue(& st->msgq);
15126c15148
<         if (! skb) {
---
>         skb = skb_dequeue(& st->msgq);
15127a15150,15151
>         if (! skb) {
> #line 239
15132c15156
< #line 239
---
> #line 240
15137,15138d15160
< #line 245
<       err = send_msg_to_layer(st, skb);
15139a15162,15163
>       err = send_msg_to_layer(st, skb);
> #line 247
15141,15142d15164
< #line 246
<       if (tmp___6) {
15144c15166
<         if (*debug___2 & 16U) {
---
>       if (tmp___6) {
15145a15168,15169
>         if (*debug___2 & 16U) {
> #line 249
15147c15171
< #line 248
---
> #line 249
15154,15155d15177
< #line 254
<         consume_skb(skb);
15156a15179,15180
>         consume_skb(skb);
> #line 256
15161c15185
< #line 257
---
> #line 258
15163c15187
< #line 257
---
> #line 258
15165c15189
< #line 257
---
> #line 258
15168c15192
< #line 257
---
> #line 258
15171c15195
< #line 257
---
> #line 258
15173c15197
< #line 257
---
> #line 258
15175c15199
< #line 259
---
> #line 260
15177c15201
< #line 261
---
> #line 262
15179c15203
< #line 263
---
> #line 264
15185c15209
< #line 266
---
> #line 267
15187,15188d15210
< #line 266
<     if (tmp___13) {
15190c15212
<       test_and_set_bit(16, & st->status);
---
>     if (tmp___13) {
15192c15214
<       test_and_clear_bit(30, & st->status);
---
>       test_and_set_bit(16, & st->status);
15194c15216
<       do_clear_stack(st);
---
>       test_and_clear_bit(30, & st->status);
15196c15218
<       test_and_clear_bit(2, & st->status);
---
>       do_clear_stack(st);
15197a15220,15221
>       test_and_clear_bit(2, & st->status);
> #line 272
15202c15226
< #line 273
---
> #line 274
15204,15205d15227
< #line 273
<     if (tmp___16) {
15207c15229
<       test_and_clear_bit(16, & st->status);
---
>     if (tmp___16) {
15209c15231
<       test_and_set_bit(30, & st->status);
---
>       test_and_clear_bit(16, & st->status);
15210a15233,15234
>       test_and_set_bit(30, & st->status);
> #line 277
15212c15236
< #line 276
---
> #line 277
15216c15240
< #line 277
---
> #line 278
15222c15246
< #line 280
---
> #line 281
15224,15225d15247
< #line 280
<     if (tmp___17) {
15226a15249,15250
>     if (tmp___17) {
> #line 282
15231,15232d15254
< #line 282
<     if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
15234c15256
<       complete(st->notify);
---
>     if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
15235a15258,15259
>       complete(st->notify);
> #line 285
15240,15241d15263
< #line 289
<     test_and_clear_bit(29, & st->status);
15242a15265,15266
>     test_and_clear_bit(29, & st->status);
> #line 291
15244c15268
< #line 290
---
> #line 291
15246c15270
< #line 290
---
> #line 291
15248c15272
< #line 290
---
> #line 291
15250c15274
< #line 290
---
> #line 291
15252c15276
< #line 290
---
> #line 291
15254c15278
< #line 290
---
> #line 291
15256c15280
< #line 290
---
> #line 291
15258c15282
< #line 290
---
> #line 291
15260c15284
< #line 290
---
> #line 291
15262c15286
< #line 290
---
> #line 291
15264c15288
< #line 290
---
> #line 291
15266c15290
< #line 290
---
> #line 291
15271c15295
< #line 290
---
> #line 291
15273c15297
< #line 290
---
> #line 291
15275c15299
< #line 290
---
> #line 291
15279c15303
< #line 290
---
> #line 291
15281c15305
< #line 290
---
> #line 291
15284c15308
< #line 290
---
> #line 291
15286c15310
< #line 290
---
> #line 291
15290c15314
< #line 290
---
> #line 291
15292c15316
< #line 290
---
> #line 291
15298,15299d15321
< #line 292
<     if (*debug___2 & 32U) {
15300a15323,15324
>     if (*debug___2 & 32U) {
> #line 294
15302c15326
< #line 293
---
> #line 294
15307c15331
< #line 295
---
> #line 296
15309c15333
< #line 297
---
> #line 298
15311c15335
< #line 299
---
> #line 300
15313,15314d15336
< #line 299
<     if (tmp___23) {
15315a15338,15339
>     if (tmp___23) {
> #line 301
15321,15322d15344
< #line 320
<   test_and_set_bit(31, & st->status);
15324c15346
<   test_and_clear_bit(30, & st->status);
---
>   test_and_set_bit(31, & st->status);
15326c15348
<   test_and_clear_bit(29, & st->status);
---
>   test_and_clear_bit(30, & st->status);
15328c15350
<   test_and_clear_bit(15, & st->status);
---
>   test_and_clear_bit(29, & st->status);
15330c15352
<   skb_queue_purge(& st->msgq);
---
>   test_and_clear_bit(15, & st->status);
15332c15354
<   st->thread = (void *)0;
---
>   skb_queue_purge(& st->msgq);
15334c15356
<   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
---
>   st->thread = (void *)0;
15336c15358
<     complete(st->notify);
---
>   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
15337a15360,15361
>     complete(st->notify);
> #line 329
15342c15366
< #line 330
---
> #line 331
15346c15370
< #line 333 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 334 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15352,15353d15375
< #line 336
<   if (! ch->st) {
15354a15377,15378
>   if (! ch->st) {
> #line 338
15359,15360d15382
< #line 338
<   __net_timestamp(skb);
15362c15384
<   _queue_message(ch->st, skb);
---
>   __net_timestamp(skb);
15363a15386,15387
>   _queue_message(ch->st, skb);
> #line 341
15367c15391
< #line 343 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 344 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15373,15374d15396
< #line 346
<   ch->addr = sapi | (tei << 8);
15375a15398,15399
>   ch->addr = sapi | (tei << 8);
> #line 348
15379c15403
< #line 349 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 350 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15385,15386d15408
< #line 352
<   list_add_tail(& ch->list, & st->layer2);
15387a15410,15411
>   list_add_tail(& ch->list, & st->layer2);
> #line 354
15391c15415
< #line 355 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 356 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15397,15398d15420
< #line 358
<   mutex_lock_nested(& st->lmutex, 0);
15400c15422
<   __add_layer2(ch, st);
---
>   mutex_lock_nested(& st->lmutex, 0);
15402c15424
<   mutex_unlock(& st->lmutex);
---
>   __add_layer2(ch, st);
15403a15426,15427
>   mutex_unlock(& st->lmutex);
> #line 362
15407c15431
< #line 363 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 364 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15413,15414d15436
< #line 366
<   if (! ch->st || (ch->st)->layer1) {
15415a15438,15439
>   if (! ch->st || (ch->st)->layer1) {
> #line 368
15420c15444
< #line 368
---
> #line 369
15422c15446
< #line 368
---
> #line 369
15426c15450
< #line 386 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 387 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15428c15452
< #line 389 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 390 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15430c15454
< #line 371 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 372 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15447c15471
< #line 376
---
> #line 377
15449c15473
< #line 376
---
> #line 377
15451c15475
< #line 378
---
> #line 379
15453,15454d15476
< #line 378
<   newst = tmp;
15456c15478
<   if (! newst) {
---
>   newst = tmp;
15458c15480
<     printk("<3>kmalloc mISDN_stack failed\n");
---
>   if (! newst) {
15459a15482,15483
>     printk("<3>kmalloc mISDN_stack failed\n");
> #line 382
15464,15465d15487
< #line 383
<   newst->dev = dev;
15467c15489
<   INIT_LIST_HEAD(& newst->layer2);
---
>   newst->dev = dev;
15469c15491
<   newst->l1sock.head.first = (void *)0;
---
>   INIT_LIST_HEAD(& newst->layer2);
15470a15493,15494
>   newst->l1sock.head.first = (void *)0;
> #line 387
15472c15496
< #line 386
---
> #line 387
15474c15498
< #line 386
---
> #line 387
15477,15478d15500
< #line 387
<   init_waitqueue_head(& newst->workq);
15480c15502
<   skb_queue_head_init___0(& newst->msgq);
---
>   init_waitqueue_head(& newst->workq);
15481a15504,15505
>   skb_queue_head_init___0(& newst->msgq);
> #line 390
15483c15507
< #line 389
---
> #line 390
15485c15509
< #line 389
---
> #line 390
15488,15489d15511
< #line 390
<   dev->D.st = newst;
15491c15513
<   err = create_teimanager(dev);
---
>   dev->D.st = newst;
15493c15515
<   if (err) {
---
>   err = create_teimanager(dev);
15495c15517
<     printk("<3>kmalloc teimanager failed\n");
---
>   if (err) {
15497c15519
<     kfree(newst);
---
>     printk("<3>kmalloc teimanager failed\n");
15498a15521,15522
>     kfree(newst);
> #line 396
15503,15504d15526
< #line 397
<   (dev->teimgr)->peer = & newst->own;
15506c15528
<   (dev->teimgr)->recv = & mISDN_queue_message;
---
>   (dev->teimgr)->peer = & newst->own;
15508c15530
<   (dev->teimgr)->st = newst;
---
>   (dev->teimgr)->recv = & mISDN_queue_message;
15510c15532
<   newst->layer1 = & dev->D;
---
>   (dev->teimgr)->st = newst;
15512c15534
<   dev->D.recv = & l1_receive;
---
>   newst->layer1 = & dev->D;
15514c15536
<   dev->D.peer = & newst->own;
---
>   dev->D.recv = & l1_receive;
15516c15538
<   newst->own.st = newst;
---
>   dev->D.peer = & newst->own;
15518c15540
<   newst->own.ctrl = & st_own_ctrl;
---
>   newst->own.st = newst;
15520c15542
<   newst->own.send = & mISDN_queue_message;
---
>   newst->own.ctrl = & st_own_ctrl;
15522c15544
<   newst->own.recv = & mISDN_queue_message;
---
>   newst->own.send = & mISDN_queue_message;
15524c15546
<   if (*debug___2 & 2U) {
---
>   newst->own.recv = & mISDN_queue_message;
15525a15548,15549
>   if (*debug___2 & 2U) {
> #line 409
15527c15551
< #line 408
---
> #line 409
15532,15533d15555
< #line 410
<   newst->notify = & done;
15534a15557,15558
>   newst->notify = & done;
> #line 412
15536c15560
< #line 411
---
> #line 412
15538c15562
< #line 411
---
> #line 412
15540c15564
< #line 411
---
> #line 412
15542c15566
< #line 411
---
> #line 412
15546c15570
< #line 411
---
> #line 412
15549c15573
< #line 411
---
> #line 412
15551c15575
< #line 413
---
> #line 414
15553,15554d15576
< #line 413
<   if (tmp___6) {
15555a15578,15579
>   if (tmp___6) {
> #line 415
15557,15558d15580
< #line 414
<     err = tmp___4;
15559a15582,15583
>     err = tmp___4;
> #line 416
15561c15585
< #line 415
---
> #line 416
15563,15564d15586
< #line 418
<     delete_teimanager(dev->teimgr);
15565a15588,15589
>     delete_teimanager(dev->teimgr);
> #line 420
15568c15592
< #line 421
---
> #line 422
15571c15595
< #line 422
---
> #line 423
15575c15599
< #line 425 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 426 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15586c15610
< #line 429
---
> #line 430
15588c15612
< #line 429
---
> #line 430
15590,15591d15613
< #line 434
<   if (*debug___2 & 2U) {
15592a15615,15616
>   if (*debug___2 & 2U) {
> #line 436
15594c15618
< #line 435
---
> #line 436
15600c15624
< #line 438
---
> #line 439
15606,15607d15629
< #line 443
<   ch->recv = & mISDN_queue_message;
15609c15631
<   ch->peer = & (dev->D.st)->own;
---
>   ch->recv = & mISDN_queue_message;
15611c15633
<   ch->st = dev->D.st;
---
>   ch->peer = & (dev->D.st)->own;
15613c15635
<   rq.protocol = protocol;
---
>   ch->st = dev->D.st;
15615c15637
<   rq.adr.channel = adr->channel;
---
>   rq.protocol = protocol;
15617c15639
<   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>   rq.adr.channel = adr->channel;
15618a15641,15642
>   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
> #line 450
15620,15621d15643
< #line 451
<   if (err) {
15622a15645,15646
>   if (err) {
> #line 453
15627,15628d15650
< #line 453
<   _write_lock_bh(& (dev->D.st)->l1sock.lock);
15630c15652
<   sk_add_node(& msk->sk, & (dev->D.st)->l1sock.head);
---
>   _write_lock_bh(& (dev->D.st)->l1sock.lock);
15632c15654
<   _write_unlock_bh(& (dev->D.st)->l1sock.lock);
---
>   sk_add_node(& msk->sk, & (dev->D.st)->l1sock.head);
15633a15656,15657
>   _write_unlock_bh(& (dev->D.st)->l1sock.lock);
> #line 457
15636c15660
< #line 458
---
> #line 459
15639c15663
< #line 460
---
> #line 461
15643c15667
< #line 463 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 464 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15655,15656d15678
< #line 471
<   if (*debug___2 & 2U) {
15657a15680,15681
>   if (*debug___2 & 2U) {
> #line 473
15659c15683
< #line 472
---
> #line 473
15665,15666d15688
< #line 476
<   ch->st = dev->D.st;
15668c15690
<   pmask = 1 << (protocol & 31U);
---
>   ch->st = dev->D.st;
15670c15692
<   if ((unsigned int )pmask & dev->Bprotocols) {
---
>   pmask = 1 << (protocol & 31U);
15672c15694
<     rq.protocol = protocol;
---
>   if ((unsigned int )pmask & dev->Bprotocols) {
15674c15696
<     rq.adr = *adr;
---
>     rq.protocol = protocol;
15676c15698
<     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>     rq.adr = *adr;
15678c15700
<     if (err) {
---
>     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
15679a15702,15703
>     if (err) {
> #line 484
15684,15685d15707
< #line 484
<     ch->recv = (rq.ch)->send;
15687c15709
<     ch->peer = rq.ch;
---
>     ch->recv = (rq.ch)->send;
15689c15711
<     (rq.ch)->recv = ch->send;
---
>     ch->peer = rq.ch;
15691c15713
<     (rq.ch)->peer = ch;
---
>     (rq.ch)->recv = ch->send;
15692a15715,15716
>     (rq.ch)->peer = ch;
> #line 489
15695,15696d15718
< #line 490
<     bp = get_Bprotocol4mask(pmask);
15698c15720
<     if (! bp) {
---
>     bp = get_Bprotocol4mask(pmask);
15699a15722,15723
>     if (! bp) {
> #line 493
15704,15705d15727
< #line 493
<     rq2.protocol = protocol;
15707c15729
<     rq2.adr = *adr;
---
>     rq2.protocol = protocol;
15709c15731
<     rq2.ch = ch;
---
>     rq2.adr = *adr;
15711c15733
<     err = (*(bp->create))(& rq2);
---
>     rq2.ch = ch;
15713c15735
<     if (err) {
---
>     err = (*(bp->create))(& rq2);
15714a15737,15738
>     if (err) {
> #line 499
15719,15720d15742
< #line 499
<     ch->recv = (rq2.ch)->send;
15722c15744
<     ch->peer = rq2.ch;
---
>     ch->recv = (rq2.ch)->send;
15724c15746
<     (rq2.ch)->st = dev->D.st;
---
>     ch->peer = rq2.ch;
15726c15748
<     rq.protocol = rq2.protocol;
---
>     (rq2.ch)->st = dev->D.st;
15728c15750
<     rq.adr = *adr;
---
>     rq.protocol = rq2.protocol;
15730c15752
<     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>     rq.adr = *adr;
15732c15754
<     if (err) {
---
>     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
15734c15756
<       (*((rq2.ch)->ctrl))(rq2.ch, 512, (void *)0);
---
>     if (err) {
15735a15758,15759
>       (*((rq2.ch)->ctrl))(rq2.ch, 512, (void *)0);
> #line 508
15740,15741d15763
< #line 509
<     (rq2.ch)->recv = (rq.ch)->send;
15743c15765
<     (rq2.ch)->peer = rq.ch;
---
>     (rq2.ch)->recv = (rq.ch)->send;
15745c15767
<     (rq.ch)->recv = (rq2.ch)->send;
---
>     (rq2.ch)->peer = rq.ch;
15747c15769
<     (rq.ch)->peer = rq2.ch;
---
>     (rq.ch)->recv = (rq2.ch)->send;
15748a15771,15772
>     (rq.ch)->peer = rq2.ch;
> #line 514
15751,15752d15774
< #line 515
<   ch->protocol = protocol;
15754c15776
<   ch->nr = (rq.ch)->nr;
---
>   ch->protocol = protocol;
15755a15778,15779
>   ch->nr = (rq.ch)->nr;
> #line 518
15759c15783
< #line 520 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 521 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15768,15769d15791
< #line 527
<   if (*debug___2 & 2U) {
15770a15793,15794
>   if (*debug___2 & 2U) {
> #line 529
15772c15796
< #line 528
---
> #line 529
15778,15779d15801
< #line 532
<   rq.protocol = 1;
15781c15803
<   if (dev->Dprotocols & (unsigned int )(1 << 3)) {
---
>   rq.protocol = 1;
15782a15805,15806
>   if (dev->Dprotocols & (unsigned int )(1 << 3)) {
> #line 535
15787c15811
< #line 535
---
> #line 536
15790,15791d15813
< #line 537
<   rq.protocol = 2;
15793c15815
<   if (dev->Dprotocols & (unsigned int )(1 << 4)) {
---
>   rq.protocol = 2;
15794a15817,15818
>   if (dev->Dprotocols & (unsigned int )(1 << 4)) {
> #line 540
15800,15801d15823
< #line 541
<   ch->recv = & mISDN_queue_message;
15803c15825
<   ch->peer = & (dev->D.st)->own;
---
>   ch->recv = & mISDN_queue_message;
15805c15827
<   ch->st = dev->D.st;
---
>   ch->peer = & (dev->D.st)->own;
15807c15829
<   rq.adr.channel = 0;
---
>   ch->st = dev->D.st;
15809c15831
<   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>   rq.adr.channel = 0;
15811c15833
<   printk("<7>%s: ret 1 %d\n", "create_l2entity", err);
---
>   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
15813c15835
<   if (err) {
---
>   printk("<7>%s: ret 1 %d\n", "create_l2entity", err);
15814a15837,15838
>   if (err) {
> #line 549
15819,15820d15842
< #line 549
<   rq.protocol = protocol;
15822c15844
<   rq.adr = *adr;
---
>   rq.protocol = protocol;
15824c15846
<   rq.ch = ch;
---
>   rq.adr = *adr;
15826c15848
<   err = (*((dev->teimgr)->ctrl))(dev->teimgr, 256, & rq);
---
>   rq.ch = ch;
15828c15850
<   printk("<7>%s: ret 2 %d\n", "create_l2entity", err);
---
>   err = (*((dev->teimgr)->ctrl))(dev->teimgr, 256, & rq);
15830c15852
<   if (! err) {
---
>   printk("<7>%s: ret 2 %d\n", "create_l2entity", err);
15832c15854
<     if (protocol == (u_int )17 && ! rq.ch) {
---
>   if (! err) {
15833a15856,15857
>     if (protocol == (u_int )17 && ! rq.ch) {
> #line 557
15838,15839d15861
< #line 557
<     add_layer2(rq.ch, dev->D.st);
15841c15863
<     (rq.ch)->recv = & mISDN_queue_message;
---
>     add_layer2(rq.ch, dev->D.st);
15843c15865
<     (rq.ch)->peer = & (dev->D.st)->own;
---
>     (rq.ch)->recv = & mISDN_queue_message;
15844a15867,15868
>     (rq.ch)->peer = & (dev->D.st)->own;
> #line 561
15849c15873
< #line 562
---
> #line 563
15852c15876
< #line 564
---
> #line 565
15855c15879
< #line 566
---
> #line 567
15859c15883
< #line 569 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 570 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15868c15892
< #line 572
---
> #line 573
15870c15894
< #line 572
---
> #line 573
15872,15873d15895
< #line 575
<   if (! ch->st) {
15875c15897
<     printk("<4>%s: no stack\n", "delete_channel");
---
>   if (! ch->st) {
15876a15899,15900
>     printk("<4>%s: no stack\n", "delete_channel");
> #line 578
15881,15882d15904
< #line 579
<   if (*debug___2 & 2U) {
15883a15906,15907
>   if (*debug___2 & 2U) {
> #line 581
15885c15909
< #line 580
---
> #line 581
15890,15891d15913
< #line 582
<   if (ch->protocol >= (u_int )32) {
15893c15915
<     if (ch->peer) {
---
>   if (ch->protocol >= (u_int )32) {
15895c15917
<       (*((ch->peer)->ctrl))(ch->peer, 512, (void *)0);
---
>     if (ch->peer) {
15896a15919,15920
>       (*((ch->peer)->ctrl))(ch->peer, 512, (void *)0);
> #line 586
15901c15925
< #line 587
---
> #line 588
15906c15930
< #line 589
---
> #line 590
15912,15913d15935
< #line 594
<   _write_lock_bh(& (ch->st)->l1sock.lock);
15915c15937
<   sk_del_node_init(& msk->sk);
---
>   _write_lock_bh(& (ch->st)->l1sock.lock);
15917c15939
<   _write_unlock_bh(& (ch->st)->l1sock.lock);
---
>   sk_del_node_init(& msk->sk);
15919c15941
<   (*(((ch->st)->dev)->D.ctrl))(& ((ch->st)->dev)->D, 512, (void *)0);
---
>   _write_unlock_bh(& (ch->st)->l1sock.lock);
15920a15943,15944
>   (*(((ch->st)->dev)->D.ctrl))(& ((ch->st)->dev)->D, 512, (void *)0);
> #line 599
15923,15924d15946
< #line 600
<   pch = get_channel4id(ch->st, ch->nr);
15926c15948
<   if (pch) {
---
>   pch = get_channel4id(ch->st, ch->nr);
15928c15950
<     mutex_lock_nested(& (ch->st)->lmutex, 0);
---
>   if (pch) {
15930c15952
<     list_del(& pch->list);
---
>     mutex_lock_nested(& (ch->st)->lmutex, 0);
15932c15954
<     mutex_unlock(& (ch->st)->lmutex);
---
>     list_del(& pch->list);
15934c15956
<     (*(pch->ctrl))(pch, 512, (void *)0);
---
>     mutex_unlock(& (ch->st)->lmutex);
15936c15958
<     pch = ((ch->st)->dev)->teimgr;
---
>     (*(pch->ctrl))(pch, 512, (void *)0);
15937a15960,15961
>     pch = ((ch->st)->dev)->teimgr;
> #line 608
15940c15964
< #line 609
---
> #line 610
15943c15967
< #line 611
---
> #line 612
15946,15947d15969
< #line 613
<   pch = ((ch->st)->dev)->teimgr;
15949c15971
<   if (pch) {
---
>   pch = ((ch->st)->dev)->teimgr;
15950a15973,15974
>   if (pch) {
> #line 616
15953c15977
< #line 617
---
> #line 618
15956c15980
< #line 619
---
> #line 620
15959c15983
< #line 621
---
> #line 622
15962c15986
< #line 623
---
> #line 624
15966c15990
< #line 626 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 627 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
15976,15977d15999
< #line 629
<   st = dev->D.st;
15978a16001,16002
>   st = dev->D.st;
> #line 631
15980c16004
< #line 630
---
> #line 631
15982,15983d16005
< #line 632
<   if (*debug___2 & 2U) {
15984a16007,16008
>   if (*debug___2 & 2U) {
> #line 634
15986c16010
< #line 633
---
> #line 634
15991,15992d16014
< #line 635
<   if (dev->teimgr) {
15993a16016,16017
>   if (dev->teimgr) {
> #line 637
15998,15999d16021
< #line 637
<   if (st->thread) {
16001c16023
<     if (st->notify) {
---
>   if (st->thread) {
16002a16025,16026
>     if (st->notify) {
> #line 640
16004c16028
< #line 641
---
> #line 642
16009,16010d16032
< #line 643
<     st->notify = & done;
16012c16034
<     test_and_set_bit(15, & st->status);
---
>     st->notify = & done;
16014c16036
<     test_and_set_bit(4, & st->status);
---
>     test_and_set_bit(15, & st->status);
16016c16038
<     __wake_up(& st->workq, 1, 1, (void *)0);
---
>     test_and_set_bit(4, & st->status);
16017a16040,16041
>     __wake_up(& st->workq, 1, 1, (void *)0);
> #line 648
16022c16046
< #line 649
---
> #line 650
16024c16048
< #line 649
---
> #line 650
16028c16052
< #line 650
---
> #line 651
16031c16055
< #line 652
---
> #line 653
16033c16057
< #line 652
---
> #line 653
16037c16061
< #line 653
---
> #line 654
16040,16041d16063
< #line 655
<   kfree(st);
16042a16065,16066
>   kfree(st);
> #line 657
16046c16070
< #line 658 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
---
> #line 659 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/68_1/drivers/isdn/mISDN/stack.c"
16052,16053d16075
< #line 661
<   debug___2 = dp;
16054a16077,16078
>   debug___2 = dp;
> #line 663
16816c16840
< #line 464 "include/linux/skbuff.h"
---
> #line 460 "include/linux/skbuff.h"
16818c16842
< #line 799 "include/linux/skbuff.h"
---
> #line 795 "include/linux/skbuff.h"
16824c16848
< #line 801
---
> #line 797
16828c16852
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
16830c16854
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
16836c16860
< #line 830
---
> #line 826
16838c16862
< #line 830
---
> #line 826
16840c16864
< #line 830
---
> #line 826
16843c16867
< #line 831
---
> #line 827
16845c16869
< #line 832
---
> #line 828
16849c16873
< #line 1180 "include/linux/skbuff.h"
---
> #line 1176 "include/linux/skbuff.h"
16855c16879
< #line 1182
---
> #line 1178
16859c16883
< #line 1389
---
> #line 1385
21727c21751
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
21729c21753
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
21735c21759
< #line 830
---
> #line 826
21737c21761
< #line 830
---
> #line 826
21739c21763
< #line 830
---
> #line 826
21742c21766
< #line 831
---
> #line 827
21744c21768
< #line 832
---
> #line 828
24763c24787
< #line 2225 "include/linux/fs.h"
---
> #line 2227 "include/linux/fs.h"
25824c25848
< #line 1325 "include/linux/usb.h"
---
> #line 1327 "include/linux/usb.h"
25826c25850
< #line 1326
---
> #line 1328
