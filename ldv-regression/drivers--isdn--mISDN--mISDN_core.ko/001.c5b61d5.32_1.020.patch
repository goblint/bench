265c265
< #line 88
---
> #line 91
267c267
< #line 88 "include/linux/personality.h"
---
> #line 91 "include/linux/personality.h"
572c572
< #line 92 "include/linux/nodemask.h"
---
> #line 98 "include/linux/nodemask.h"
576c576
< #line 92 "include/linux/nodemask.h"
---
> #line 98 "include/linux/nodemask.h"
861c861
< #line 15 "include/linux/slub_def.h"
---
> #line 16 "include/linux/slub_def.h"
883c883
< #line 36 "include/linux/slub_def.h"
---
> #line 37 "include/linux/slub_def.h"
892c892
< #line 47 "include/linux/slub_def.h"
---
> #line 48 "include/linux/slub_def.h"
901c901
< #line 63 "include/linux/slub_def.h"
---
> #line 64 "include/linux/slub_def.h"
905c905
< #line 70 "include/linux/slub_def.h"
---
> #line 71 "include/linux/slub_def.h"
1405c1405
< #line 31 "include/linux/device.h"
---
> #line 29 "include/linux/device.h"
1407c1407
< #line 33
---
> #line 31
1409c1409
< #line 34
---
> #line 32
1411c1411
< #line 35
---
> #line 33
1413c1413
< #line 36
---
> #line 34
1415c1415
< #line 37
---
> #line 35
1417c1417
< #line 39 "include/linux/device.h"
---
> #line 37 "include/linux/device.h"
1423c1423
< #line 52
---
> #line 50
1425c1425
< #line 52
---
> #line 50
1427c1427
< #line 52 "include/linux/device.h"
---
> #line 50 "include/linux/device.h"
1443c1443
< #line 123 "include/linux/device.h"
---
> #line 121 "include/linux/device.h"
1458c1458
< #line 156 "include/linux/device.h"
---
> #line 154 "include/linux/device.h"
1464c1464
< #line 188
---
> #line 186
1466c1466
< #line 188 "include/linux/device.h"
---
> #line 186 "include/linux/device.h"
1482c1482
< #line 209
---
> #line 207
1484c1484
< #line 242 "include/linux/device.h"
---
> #line 240 "include/linux/device.h"
1490c1490
< #line 289 "include/linux/device.h"
---
> #line 287 "include/linux/device.h"
1499c1499
< #line 300 "include/linux/device.h"
---
> #line 298 "include/linux/device.h"
1506c1506
< #line 360 "include/linux/device.h"
---
> #line 358 "include/linux/device.h"
1511c1511
< #line 369
---
> #line 367
1513c1513
< #line 369 "include/linux/device.h"
---
> #line 367 "include/linux/device.h"
1690c1690
< #line 314
---
> #line 313
1692c1692
< #line 314 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
1697c1697
< #line 314 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
1702c1702
< #line 314 "include/linux/skbuff.h"
---
> #line 313 "include/linux/skbuff.h"
1741d1740
<    __u8 do_not_encrypt : 1 ;
1757c1756
< #line 429
---
> #line 425
1759c1758
< #line 439
---
> #line 435
2059c2058
< #line 443 "include/linux/ethtool.h"
---
> #line 444 "include/linux/ethtool.h"
3260c3259
< #line 2180
---
> #line 2182
3664a3664,3665
> #line 167 "include/linux/irq.h"
> struct irqaction;
3682c3683
< struct __anonstruct_sigset_t_228 {
---
> struct __anonstruct_sigset_t_229 {
3686c3687
< typedef struct __anonstruct_sigset_t_228 sigset_t;
---
> typedef struct __anonstruct_sigset_t_229 sigset_t;
3714c3715
< struct __anonstruct__kill_230 {
---
> struct __anonstruct__kill_231 {
3719c3720
< struct __anonstruct__timer_231 {
---
> struct __anonstruct__timer_232 {
3727c3728
< struct __anonstruct__rt_232 {
---
> struct __anonstruct__rt_233 {
3733c3734
< struct __anonstruct__sigchld_233 {
---
> struct __anonstruct__sigchld_234 {
3741c3742
< struct __anonstruct__sigfault_234 {
---
> struct __anonstruct__sigfault_235 {
3745c3746
< struct __anonstruct__sigpoll_235 {
---
> struct __anonstruct__sigpoll_236 {
3750c3751
< union __anonunion__sifields_229 {
---
> union __anonunion__sifields_230 {
3752,3757c3753,3758
<    struct __anonstruct__kill_230 _kill ;
<    struct __anonstruct__timer_231 _timer ;
<    struct __anonstruct__rt_232 _rt ;
<    struct __anonstruct__sigchld_233 _sigchld ;
<    struct __anonstruct__sigfault_234 _sigfault ;
<    struct __anonstruct__sigpoll_235 _sigpoll ;
---
>    struct __anonstruct__kill_231 _kill ;
>    struct __anonstruct__timer_232 _timer ;
>    struct __anonstruct__rt_233 _rt ;
>    struct __anonstruct__sigchld_234 _sigchld ;
>    struct __anonstruct__sigfault_235 _sigfault ;
>    struct __anonstruct__sigpoll_236 _sigpoll ;
3764c3765
<    union __anonunion__sifields_229 _sifields ;
---
>    union __anonunion__sifields_230 _sifields ;
3788c3789
< struct __anonstruct_seccomp_t_238 {
---
> struct __anonstruct_seccomp_t_239 {
3792c3793
< typedef struct __anonstruct_seccomp_t_238 seccomp_t;
---
> typedef struct __anonstruct_seccomp_t_239 seccomp_t;
3841c3842
< union __anonunion_type_data_239 {
---
> union __anonunion_type_data_240 {
3847c3848
< union __anonunion_payload_240 {
---
> union __anonunion_payload_241 {
3869,3870c3870,3871
<    union __anonunion_type_data_239 type_data ;
<    union __anonunion_payload_240 payload ;
---
>    union __anonunion_type_data_240 type_data ;
>    union __anonunion_payload_241 payload ;
3940c3941
< union __anonunion_ki_obj_242 {
---
> union __anonunion_ki_obj_243 {
3957c3958
<    union __anonunion_ki_obj_242 ki_obj ;
---
>    union __anonunion_ki_obj_243 ki_obj ;
4024c4025
< #line 511 "include/linux/sched.h"
---
> #line 520 "include/linux/sched.h"
4030c4031
< #line 524
---
> #line 533
4032c4033
< #line 524
---
> #line 533
4034c4035
< #line 524
---
> #line 533
4036c4037
< #line 524 "include/linux/sched.h"
---
> #line 533 "include/linux/sched.h"
4088c4089
< #line 656 "include/linux/sched.h"
---
> #line 665 "include/linux/sched.h"
4109c4110
< #line 706
---
> #line 715
4111c4112
< #line 709 "include/linux/sched.h"
---
> #line 718 "include/linux/sched.h"
4119c4120
< #line 725 "include/linux/sched.h"
---
> #line 734 "include/linux/sched.h"
4134c4135
< #line 770
---
> #line 779
4141c4142
< #line 846 "include/linux/sched.h"
---
> #line 855 "include/linux/sched.h"
4148c4149
< #line 879
---
> #line 888
4158c4159
< #line 897 "include/linux/sched.h"
---
> #line 906 "include/linux/sched.h"
4202,4203d4202
< #line 998
< struct io_context;
4204a4204,4205
> struct io_context;
> #line 1016
4206c4207
< #line 1012
---
> #line 1021
4208c4209
< #line 1015 "include/linux/sched.h"
---
> #line 1024 "include/linux/sched.h"
4239c4240
< #line 1066 "include/linux/sched.h"
---
> #line 1075 "include/linux/sched.h"
4244c4245
< #line 1080 "include/linux/sched.h"
---
> #line 1089 "include/linux/sched.h"
4289c4290
< #line 1141
---
> #line 1150
4291c4292
< #line 1141 "include/linux/sched.h"
---
> #line 1150 "include/linux/sched.h"
4302c4303
< #line 1157
---
> #line 1166
4304,4306c4305
< #line 1157
< struct irqaction;
< #line 1157
---
> #line 1166
4308c4307
< #line 1157
---
> #line 1166
4310c4309
< #line 1157 "include/linux/sched.h"
---
> #line 1166 "include/linux/sched.h"
4460c4459
< #line 90 "include/linux/interrupt.h"
---
> #line 93 "include/linux/interrupt.h"
4580c4579
< #line 39 "include/net/neighbour.h"
---
> #line 40 "include/net/neighbour.h"
4582c4581
< #line 39 "include/net/neighbour.h"
---
> #line 40 "include/net/neighbour.h"
4608c4607
< #line 72 "include/net/neighbour.h"
---
> #line 73 "include/net/neighbour.h"
4622c4621
< #line 99
---
> #line 100
4624c4623
< #line 99 "include/net/neighbour.h"
---
> #line 100 "include/net/neighbour.h"
4648c4647
< #line 124 "include/net/neighbour.h"
---
> #line 125 "include/net/neighbour.h"
4658c4657
< #line 135 "include/net/neighbour.h"
---
> #line 136 "include/net/neighbour.h"
4666c4665
< #line 151 "include/net/neighbour.h"
---
> #line 152 "include/net/neighbour.h"
4684c4683
<    struct timer_list gc_timer ;
---
>    struct delayed_work gc_work ;
4695d4693
<    unsigned int hash_chain_gc ;
7005c7003
< #line 216 "include/linux/device.h"
---
> #line 214 "include/linux/device.h"
7008c7006
< #line 218
---
> #line 216
7010c7008
< #line 235
---
> #line 233
7013c7011
< #line 238
---
> #line 236
7017c7015
< #line 424 "include/linux/device.h"
---
> #line 422 "include/linux/device.h"
7023c7021
< #line 426
---
> #line 424
7025c7023
< #line 426
---
> #line 424
7029c7027
< #line 429
---
> #line 427
7032c7030
< #line 451 "include/linux/device.h"
---
> #line 449 "include/linux/device.h"
7038c7036
< #line 453
---
> #line 451
7042c7040
< #line 456 "include/linux/device.h"
---
> #line 454 "include/linux/device.h"
7048c7046
< #line 458
---
> #line 456
7050c7048
< #line 459
---
> #line 457
7054c7052
< #line 483
---
> #line 481
7056c7054
< #line 484
---
> #line 482
7058c7056
< #line 485
---
> #line 483
7060c7058
< #line 547
---
> #line 545
8235c8233,8235
< #line 141 "include/linux/slub_def.h"
---
> #line 27 "include/linux/kmemleak.h"
> extern void kmemleak_alloc(void const   *ptr , size_t size , int min_count , gfp_t gfp ) ;
> #line 142 "include/linux/slub_def.h"
8237c8237
< #line 147 "include/linux/slub_def.h"
---
> #line 148 "include/linux/slub_def.h"
8309,8310d8308
< #line 149
<   if (! size) {
8311a8310,8311
>   if (! size) {
> #line 151
8316,8317d8315
< #line 152
<   if (size <= (size_t )8) {
8318a8317,8318
>   if (size <= (size_t )8) {
> #line 154
8320c8320
< #line 153
---
> #line 154
8322c8322
< #line 153
---
> #line 154
8325c8325
< #line 153
---
> #line 154
8327c8327
< #line 153
---
> #line 154
8330c8330
< #line 153
---
> #line 154
8332c8332
< #line 153
---
> #line 154
8335c8335
< #line 153
---
> #line 154
8337c8337
< #line 153
---
> #line 154
8340c8340
< #line 153
---
> #line 154
8342c8342
< #line 153
---
> #line 154
8345c8345
< #line 153
---
> #line 154
8347c8347
< #line 153
---
> #line 154
8350c8350
< #line 153
---
> #line 154
8352c8352
< #line 153
---
> #line 154
8355c8355
< #line 153
---
> #line 154
8357c8357
< #line 153
---
> #line 154
8360c8360
< #line 153
---
> #line 154
8362c8362
< #line 153
---
> #line 154
8365c8365
< #line 153
---
> #line 154
8367c8367
< #line 153
---
> #line 154
8370c8370
< #line 153
---
> #line 154
8372c8372
< #line 153
---
> #line 154
8375c8375
< #line 153
---
> #line 154
8377c8377
< #line 153
---
> #line 154
8380c8380
< #line 153
---
> #line 154
8382c8382
< #line 153
---
> #line 154
8385c8385
< #line 153
---
> #line 154
8387c8387
< #line 153
---
> #line 154
8390c8390
< #line 153
---
> #line 154
8392c8392
< #line 153
---
> #line 154
8395c8395
< #line 153
---
> #line 154
8397c8397
< #line 153
---
> #line 154
8400c8400
< #line 153
---
> #line 154
8402c8402
< #line 153
---
> #line 154
8405c8405
< #line 153
---
> #line 154
8407c8407
< #line 153
---
> #line 154
8410c8410
< #line 153
---
> #line 154
8412c8412
< #line 153
---
> #line 154
8415c8415
< #line 153
---
> #line 154
8417c8417
< #line 153
---
> #line 154
8420c8420
< #line 153
---
> #line 154
8422c8422
< #line 153
---
> #line 154
8425c8425
< #line 153
---
> #line 154
8427c8427
< #line 153
---
> #line 154
8430c8430
< #line 153
---
> #line 154
8432c8432
< #line 153
---
> #line 154
8435c8435
< #line 153
---
> #line 154
8437c8437
< #line 153
---
> #line 154
8440c8440
< #line 153
---
> #line 154
8442c8442
< #line 153
---
> #line 154
8445c8445
< #line 153
---
> #line 154
8447c8447
< #line 153
---
> #line 154
8450c8450
< #line 153
---
> #line 154
8452c8452
< #line 153
---
> #line 154
8455c8455
< #line 153
---
> #line 154
8457c8457
< #line 153
---
> #line 154
8460c8460
< #line 153
---
> #line 154
8462c8462
< #line 153
---
> #line 154
8465c8465
< #line 153
---
> #line 154
8467c8467
< #line 153
---
> #line 154
8470c8470
< #line 153
---
> #line 154
8472c8472
< #line 153
---
> #line 154
8475c8475
< #line 153
---
> #line 154
8477c8477
< #line 153
---
> #line 154
8480c8480
< #line 153
---
> #line 154
8482c8482
< #line 153
---
> #line 154
8485c8485
< #line 153
---
> #line 154
8487c8487
< #line 153
---
> #line 154
8490c8490
< #line 153
---
> #line 154
8492c8492
< #line 153
---
> #line 154
8495c8495
< #line 153
---
> #line 154
8497c8497
< #line 153
---
> #line 154
8500c8500
< #line 153
---
> #line 154
8502c8502
< #line 153
---
> #line 154
8505c8505
< #line 153
---
> #line 154
8507c8507
< #line 153
---
> #line 154
8510c8510
< #line 153
---
> #line 154
8512c8512
< #line 153
---
> #line 154
8515c8515
< #line 153
---
> #line 154
8517c8517
< #line 153
---
> #line 154
8520c8520
< #line 153
---
> #line 154
8522c8522
< #line 153
---
> #line 154
8525c8525
< #line 153
---
> #line 154
8527c8527
< #line 153
---
> #line 154
8530c8530
< #line 153
---
> #line 154
8532c8532
< #line 153
---
> #line 154
8535c8535
< #line 153
---
> #line 154
8537c8537
< #line 153
---
> #line 154
8540c8540
< #line 153
---
> #line 154
8542c8542
< #line 153
---
> #line 154
8545c8545
< #line 153
---
> #line 154
8547c8547
< #line 153
---
> #line 154
8550c8550
< #line 153
---
> #line 154
8552c8552
< #line 153
---
> #line 154
8555c8555
< #line 153
---
> #line 154
8557c8557
< #line 153
---
> #line 154
8560c8560
< #line 153
---
> #line 154
8562c8562
< #line 153
---
> #line 154
8565c8565
< #line 153
---
> #line 154
8567c8567
< #line 153
---
> #line 154
8570c8570
< #line 153
---
> #line 154
8572c8572
< #line 153
---
> #line 154
8575c8575
< #line 153
---
> #line 154
8577c8577
< #line 153
---
> #line 154
8580c8580
< #line 153
---
> #line 154
8582c8582
< #line 153
---
> #line 154
8585c8585
< #line 153
---
> #line 154
8587c8587
< #line 153
---
> #line 154
8590c8590
< #line 153
---
> #line 154
8592c8592
< #line 153
---
> #line 154
8595c8595
< #line 153
---
> #line 154
8597c8597
< #line 153
---
> #line 154
8600c8600
< #line 153
---
> #line 154
8602c8602
< #line 153
---
> #line 154
8605c8605
< #line 153
---
> #line 154
8607c8607
< #line 153
---
> #line 154
8610c8610
< #line 153
---
> #line 154
8612c8612
< #line 153
---
> #line 154
8615c8615
< #line 153
---
> #line 154
8617c8617
< #line 153
---
> #line 154
8620c8620
< #line 153
---
> #line 154
8622c8622
< #line 153
---
> #line 154
8625c8625
< #line 153
---
> #line 154
8627c8627
< #line 153
---
> #line 154
8630c8630
< #line 153
---
> #line 154
8632c8632
< #line 153
---
> #line 154
8635c8635
< #line 153
---
> #line 154
8637c8637
< #line 153
---
> #line 154
8640c8640
< #line 153
---
> #line 154
8642c8642
< #line 153
---
> #line 154
8645c8645
< #line 153
---
> #line 154
8647c8647
< #line 153
---
> #line 154
8650c8650
< #line 153
---
> #line 154
8653c8653
< #line 153
---
> #line 154
8656c8656
< #line 153
---
> #line 154
8659c8659
< #line 153
---
> #line 154
8662c8662
< #line 153
---
> #line 154
8665c8665
< #line 153
---
> #line 154
8668c8668
< #line 153
---
> #line 154
8671c8671
< #line 153
---
> #line 154
8674c8674
< #line 153
---
> #line 154
8677c8677
< #line 153
---
> #line 154
8680c8680
< #line 153
---
> #line 154
8683c8683
< #line 153
---
> #line 154
8686c8686
< #line 153
---
> #line 154
8689c8689
< #line 153
---
> #line 154
8692c8692
< #line 153
---
> #line 154
8695c8695
< #line 153
---
> #line 154
8698c8698
< #line 153
---
> #line 154
8701c8701
< #line 153
---
> #line 154
8704c8704
< #line 153
---
> #line 154
8707c8707
< #line 153
---
> #line 154
8710c8710
< #line 153
---
> #line 154
8713c8713
< #line 153
---
> #line 154
8716c8716
< #line 153
---
> #line 154
8719c8719
< #line 153
---
> #line 154
8722c8722
< #line 153
---
> #line 154
8725c8725
< #line 153
---
> #line 154
8728c8728
< #line 153
---
> #line 154
8731c8731
< #line 153
---
> #line 154
8734c8734
< #line 153
---
> #line 154
8737c8737
< #line 153
---
> #line 154
8740c8740
< #line 153
---
> #line 154
8743c8743
< #line 153
---
> #line 154
8746c8746
< #line 153
---
> #line 154
8749c8749
< #line 153
---
> #line 154
8752c8752
< #line 153
---
> #line 154
8755c8755
< #line 153
---
> #line 154
8758c8758
< #line 153
---
> #line 154
8761c8761
< #line 153
---
> #line 154
8764c8764
< #line 153
---
> #line 154
8767c8767
< #line 153
---
> #line 154
8770c8770
< #line 153
---
> #line 154
8773c8773
< #line 153
---
> #line 154
8776c8776
< #line 153
---
> #line 154
8779c8779
< #line 153
---
> #line 154
8782c8782
< #line 153
---
> #line 154
8785c8785
< #line 153
---
> #line 154
8788c8788
< #line 153
---
> #line 154
8791c8791
< #line 153
---
> #line 154
8794c8794
< #line 153
---
> #line 154
8797c8797
< #line 153
---
> #line 154
8800c8800
< #line 153
---
> #line 154
8803c8803
< #line 153
---
> #line 154
8806c8806
< #line 153
---
> #line 154
8809c8809
< #line 153
---
> #line 154
8812c8812
< #line 153
---
> #line 154
8815c8815
< #line 153
---
> #line 154
8818c8818
< #line 153
---
> #line 154
8821c8821
< #line 153
---
> #line 154
8824c8824
< #line 153
---
> #line 154
8827c8827
< #line 153
---
> #line 154
8830c8830
< #line 153
---
> #line 154
8833c8833
< #line 153
---
> #line 154
8836c8836
< #line 153
---
> #line 154
8839c8839
< #line 153
---
> #line 154
8842c8842
< #line 153
---
> #line 154
8847,8848d8846
< #line 156
<   if (size > (size_t )64 && size <= (size_t )96) {
8849a8848,8849
>   if (size > (size_t )64 && size <= (size_t )96) {
> #line 158
8854,8855d8853
< #line 158
<   if (size > (size_t )128 && size <= (size_t )192) {
8856a8855,8856
>   if (size > (size_t )128 && size <= (size_t )192) {
> #line 160
8861c8861
< #line 161
---
> #line 162
8863c8863
< #line 161
---
> #line 162
8868c8868
< #line 162
---
> #line 163
8870c8870
< #line 162
---
> #line 163
8875c8875
< #line 163
---
> #line 164
8877c8877
< #line 163
---
> #line 164
8882c8882
< #line 164
---
> #line 165
8884c8884
< #line 164
---
> #line 165
8889c8889
< #line 165
---
> #line 166
8891c8891
< #line 165
---
> #line 166
8896c8896
< #line 166
---
> #line 167
8898c8898
< #line 166
---
> #line 167
8903c8903
< #line 167
---
> #line 168
8905c8905
< #line 167
---
> #line 168
8910c8910
< #line 168
---
> #line 169
8912c8912
< #line 168
---
> #line 169
8917c8917
< #line 169
---
> #line 170
8919c8919
< #line 169
---
> #line 170
8924c8924
< #line 170
---
> #line 171
8926c8926
< #line 170
---
> #line 171
8931c8931
< #line 175
---
> #line 176
8933c8933
< #line 175
---
> #line 176
8938c8938
< #line 176
---
> #line 177
8940c8940
< #line 176
---
> #line 177
8945c8945
< #line 177
---
> #line 178
8947c8947
< #line 177
---
> #line 178
8952c8952
< #line 178
---
> #line 179
8954c8954
< #line 178
---
> #line 179
8959c8959
< #line 179
---
> #line 180
8961c8961
< #line 179
---
> #line 180
8966c8966
< #line 180
---
> #line 181
8968c8968
< #line 180
---
> #line 181
8973c8973
< #line 181
---
> #line 182
8975c8975
< #line 181
---
> #line 182
8980c8980
< #line 182
---
> #line 183
8982c8982
< #line 182
---
> #line 183
8987c8987
< #line 183
---
> #line 184
8989c8989
< #line 183
---
> #line 184
8994c8994
< #line 184
---
> #line 185
8998c8998
< #line 201 "include/linux/slub_def.h"
---
> #line 202 "include/linux/slub_def.h"
9005c9005
< #line 203
---
> #line 204
9007c9007
< #line 203
---
> #line 204
9009,9010d9008
< #line 205
<   if (index == 0) {
9011a9010,9011
>   if (index == 0) {
> #line 207
9016c9016
< #line 208
---
> #line 209
9020,9021d9019
< #line 218
< extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
9022a9021,9022
> extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
> #line 220
9024c9024
< #line 224 "include/linux/slub_def.h"
---
> #line 225 "include/linux/slub_def.h"
9031c9031
< #line 227
---
> #line 228
9033c9033
< #line 227
---
> #line 228
9037c9037
< #line 231 "include/linux/slub_def.h"
---
> #line 232 "include/linux/slub_def.h"
9047c9047
< #line 233
---
> #line 234
9049,9050d9048
< #line 233
<   order = tmp;
9051a9050,9051
>   order = tmp;
> #line 235
9053c9053
< #line 234
---
> #line 235
9055,9056c9055,9056
< #line 236
<   trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
---
> #line 237
>   kmemleak_alloc(ret, size, 1, flags);
9057a9058,9059
>   trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
> #line 240
9061c9063
< #line 241 "include/linux/slub_def.h"
---
> #line 243 "include/linux/slub_def.h"
9072c9074
< #line 245
---
> #line 247
9074c9076
< #line 246
---
> #line 248
9076c9078
< #line 247
---
> #line 249
9078c9080
< #line 247
---
> #line 249
9083c9085
< #line 249
---
> #line 251
9085c9087
< #line 250
---
> #line 252
9087,9088d9088
< #line 250
<       s = tmp___0;
9089a9090,9091
>       s = tmp___0;
> #line 254
9091c9093
< #line 253
---
> #line 255
9096,9097d9097
< #line 255
<       ret = kmem_cache_alloc_notrace(s, flags);
9099c9099
<       trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
---
>       ret = kmem_cache_alloc_notrace(s, flags);
9100a9101,9102
>       trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
> #line 261
9108c9110
< #line 262
---
> #line 264
9110c9112
< #line 262
---
> #line 264
9623c9625,9635
< #line 85 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
---
> #line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
> __inline static int atomic_read(atomic_t const   *v ) 
> { 
> 
> 
>   {
> #line 23
>   return (v->counter);
> }
> }
> #line 91 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
9629c9641
< #line 87
---
> #line 93
9642c9654
< #line 90
---
> #line 96
9646c9658
< #line 98 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
---
> #line 104 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
9652c9664
< #line 100
---
> #line 106
9665c9677
< #line 103
---
> #line 109
9669c9681
< #line 113 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
---
> #line 119 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/atomic_64.h"
9675c9687
< #line 117
---
> #line 123
9688c9700
< #line 120
---
> #line 126
9716c9728
< #line 490 "include/linux/device.h"
---
> #line 488 "include/linux/device.h"
9720c9732
< #line 444 "include/linux/skbuff.h"
---
> #line 440 "include/linux/skbuff.h"
9722c9734
< #line 447
---
> #line 443
9725c9737
< #line 449 "include/linux/skbuff.h"
---
> #line 445 "include/linux/skbuff.h"
9731c9743
< #line 452
---
> #line 448
9733c9745
< #line 452
---
> #line 448
9737c9749
< #line 973
---
> #line 969
9739c9751
< #line 1123
---
> #line 1119
9741c9753
< #line 1133
---
> #line 1129
9743c9755
< #line 1141
---
> #line 1137
9745c9757
< #line 1204 "include/linux/skbuff.h"
---
> #line 1200 "include/linux/skbuff.h"
9751c9763
< #line 1206
---
> #line 1202
9753c9765
< #line 1207
---
> #line 1203
9755c9767
< #line 1208
---
> #line 1204
9759c9771
< #line 1443
---
> #line 1439
9761c9773
< #line 1743
---
> #line 1739
9764c9776
< #line 1745
---
> #line 1741
9766c9778
< #line 1747
---
> #line 1743
9769c9781
< #line 1763
---
> #line 1759
9771c9783
< #line 1847 "include/linux/skbuff.h"
---
> #line 1843 "include/linux/skbuff.h"
9777c9789
< #line 1850
---
> #line 1846
9779c9791
< #line 1851
---
> #line 1847
9783c9795
< #line 1859 "include/linux/skbuff.h"
---
> #line 1855 "include/linux/skbuff.h"
9789c9801
< #line 1861
---
> #line 1857
9791c9803
< #line 1862
---
> #line 1858
9905c9917,9919
<   long tmp___0 ;
---
>   int tmp___0 ;
>   int tmp___1 ;
>   long tmp___2 ;
9915c9929
<     __ret_warn_on = ! (! (sk->__sk_common.skc_refcnt.counter == (int volatile   )1));
---
>     tmp___0 = atomic_read(& sk->__sk_common.skc_refcnt);
9917c9931
<     tmp___0 = __builtin_expect(! (! __ret_warn_on), 0);
---
>     if (tmp___0 == 1) {
9919c9933,9943
<     if (tmp___0) {
---
>       tmp___1 = 1;
>     } else {
> #line 403
>       tmp___1 = 0;
>     }
> #line 403
>     __ret_warn_on = tmp___1;
> #line 403
>     tmp___2 = __builtin_expect(! (! __ret_warn_on), 0);
> #line 403
>     if (tmp___2) {
12613c12637
< #line 445 "include/linux/skbuff.h"
---
> #line 441 "include/linux/skbuff.h"
12615c12639
< #line 814 "include/linux/skbuff.h"
---
> #line 810 "include/linux/skbuff.h"
12621c12645
< #line 816
---
> #line 812
12623c12647
< #line 816
---
> #line 812
12625c12649
< #line 816
---
> #line 812
12627c12651
< #line 817
---
> #line 813
12629c12653
< #line 818
---
> #line 814
12633c12657
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
12635c12659
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
12641c12665
< #line 830
---
> #line 826
12643c12667
< #line 830
---
> #line 826
12645c12669
< #line 830
---
> #line 826
12648c12672
< #line 831
---
> #line 827
12650c12674
< #line 832
---
> #line 828
12654c12678
< #line 990
---
> #line 986
12656c12680
< #line 1022
---
> #line 1018
14028c14052
< #line 466 "include/linux/skbuff.h"
---
> #line 462 "include/linux/skbuff.h"
14030c14054
< #line 549 "include/linux/skbuff.h"
---
> #line 545 "include/linux/skbuff.h"
14036c14060
< #line 551
---
> #line 547
14040c14064
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
14042c14066
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
14048c14072
< #line 830
---
> #line 826
14050c14074
< #line 830
---
> #line 826
14052c14076
< #line 830
---
> #line 826
14055c14079
< #line 831
---
> #line 827
14057c14081
< #line 832
---
> #line 828
14089c14113
< #line 1922
---
> #line 1932
14091c14115
< #line 2212 "include/linux/sched.h"
---
> #line 2222 "include/linux/sched.h"
14097c14121
< #line 2214
---
> #line 2224
14099c14123
< #line 2214
---
> #line 2224
14103c14127
< #line 2238 "include/linux/sched.h"
---
> #line 2248 "include/linux/sched.h"
14111c14135
< #line 2240
---
> #line 2250
14113c14137
< #line 2240
---
> #line 2250
14115c14139
< #line 2240
---
> #line 2250
14118c14142
< #line 2240
---
> #line 2250
14121c14145
< #line 2240
---
> #line 2250
14123c14147
< #line 2240
---
> #line 2250
14127,14130d14150
< #line 27 "include/linux/smp_lock.h"
< extern void lock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
< #line 28
< extern void unlock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
14137a14158,14161
> #line 27 "include/linux/smp_lock.h"
> extern void lock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
> #line 28
> extern void unlock_kernel(void)  __attribute__((__section__(".spinlock.text"))) ;
14146c14170
< #line 22 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 23 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14148c14172
< #line 24 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 25 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14157c14181
< #line 27
---
> #line 28
14159,14160d14182
< #line 29
<   if (*debug___2 & 64U) {
14161a14184,14185
>   if (*debug___2 & 64U) {
> #line 31
14166,14167d14189
< #line 32
<   skb_queue_tail(& st->msgq, skb);
14168a14191,14192
>   skb_queue_tail(& st->msgq, skb);
> #line 34
14170c14194
< #line 33
---
> #line 34
14172c14196
< #line 33
---
> #line 34
14175c14199
< #line 33
---
> #line 34
14178c14202
< #line 33
---
> #line 34
14180,14181d14203
< #line 33
<   if (tmp___2) {
14183c14205
<     test_and_set_bit(0, & st->status);
---
>   if (tmp___2) {
14184a14207,14208
>     test_and_set_bit(0, & st->status);
> #line 36
14189c14213
< #line 37
---
> #line 38
14193c14217
< #line 39 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 40 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14199,14200d14222
< #line 42
<   _queue_message(ch->st, skb);
14201a14224,14225
>   _queue_message(ch->st, skb);
> #line 44
14205c14229
< #line 46 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 47 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14213,14214d14236
< #line 51
<   mutex_lock(& st->lmutex);
14215a14238,14239
>   mutex_lock(& st->lmutex);
> #line 53
14217c14241
< #line 52
---
> #line 53
14219c14243
< #line 52
---
> #line 53
14221c14245
< #line 52
---
> #line 53
14223c14247
< #line 52
---
> #line 53
14227c14251
< #line 52
---
> #line 53
14230,14231d14253
< #line 53
<     if (id == ch->nr) {
14232a14255,14256
>     if (id == ch->nr) {
> #line 55
14237c14261
< #line 52
---
> #line 53
14239c14263
< #line 52
---
> #line 53
14242c14266
< #line 56
---
> #line 57
14245,14246d14268
< #line 58
<   mutex_unlock(& st->lmutex);
14247a14270,14271
>   mutex_unlock(& st->lmutex);
> #line 60
14251c14275
< #line 62 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 63 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14261c14285
< #line 67
---
> #line 68
14263,14264d14286
< #line 69
<   _read_lock(& sl->lock);
14265a14288,14289
>   _read_lock(& sl->lock);
> #line 71
14267c14291
< #line 70
---
> #line 71
14269c14293
< #line 70
---
> #line 71
14271c14295
< #line 70
---
> #line 71
14273c14297
< #line 70
---
> #line 71
14275c14299
< #line 70
---
> #line 71
14278c14302
< #line 70
---
> #line 71
14281,14282d14304
< #line 71
<     if ((int volatile   )sk->__sk_common.skc_state != (int volatile   )2) {
14283a14306,14307
>     if ((int volatile   )sk->__sk_common.skc_state != (int volatile   )2) {
> #line 73
14288,14289d14311
< #line 73
<     if (! cskb) {
14290a14313,14314
>     if (! cskb) {
> #line 75
14295,14296d14318
< #line 75
<     if (! cskb) {
14298c14320
<       printk("<4>%s no skb\n", "send_socklist");
---
>     if (! cskb) {
14299a14322,14323
>       printk("<4>%s no skb\n", "send_socklist");
> #line 78
14304c14328
< #line 79
---
> #line 80
14306c14330
< #line 79
---
> #line 80
14310c14334
< #line 80
---
> #line 81
14314c14338
< #line 70
---
> #line 71
14317,14318d14340
< #line 82
<   _read_unlock(& sl->lock);
14320c14342
<   if (cskb) {
---
>   _read_unlock(& sl->lock);
14321a14344,14345
>   if (cskb) {
> #line 85
14326c14350
< #line 85
---
> #line 86
14330c14354
< #line 87 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 88 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14344c14368
< #line 91
---
> #line 92
14346,14347d14369
< #line 95
<   if (! st) {
14348a14371,14372
>   if (! st) {
> #line 97
14353,14354d14376
< #line 97
<   mutex_lock(& st->lmutex);
14356c14378
<   if ((hh->id & 65535U) == 65535U) {
---
>   mutex_lock(& st->lmutex);
14357a14380,14381
>   if ((hh->id & 65535U) == 65535U) {
> #line 100
14359c14383
< #line 99
---
> #line 100
14361c14385
< #line 99
---
> #line 100
14363c14387
< #line 99
---
> #line 100
14365c14389
< #line 99
---
> #line 100
14369c14393
< #line 99
---
> #line 100
14372c14396
< #line 100
---
> #line 101
14374,14375d14397
< #line 100
<       if (tmp) {
14377c14399
<         cskb = skb;
---
>       if (tmp) {
14378a14401,14402
>         cskb = skb;
> #line 103
14381c14405
< #line 104
---
> #line 105
14384,14385d14407
< #line 106
<       if (cskb) {
14387c14409
<         ret = (*(ch->send))(ch, cskb);
---
>       if (cskb) {
14389c14411
<         if (ret) {
---
>         ret = (*(ch->send))(ch, cskb);
14391c14413
<           if (*debug___2 & 16U) {
---
>         if (ret) {
14392a14415,14416
>           if (*debug___2 & 16U) {
> #line 111
14398c14422
< #line 115
---
> #line 116
14404c14428
< #line 118
---
> #line 119
14406c14430
< #line 120
---
> #line 121
14409c14433
< #line 99
---
> #line 100
14411c14435
< #line 99
---
> #line 100
14415c14439
< #line 124
---
> #line 125
14417c14441
< #line 124
---
> #line 125
14419c14443
< #line 124
---
> #line 125
14421c14445
< #line 124
---
> #line 125
14423c14447
< #line 124
---
> #line 125
14427c14451
< #line 124
---
> #line 125
14430,14431d14453
< #line 125
<       if ((hh->id & 65535U) == ch->addr) {
14433c14455
<         ret = (*(ch->send))(ch, skb);
---
>       if ((hh->id & 65535U) == ch->addr) {
14435c14457
<         if (! ret) {
---
>         ret = (*(ch->send))(ch, skb);
14436a14459,14460
>         if (! ret) {
> #line 129
14441c14465
< #line 129
---
> #line 130
14446c14470
< #line 124
---
> #line 125
14448c14472
< #line 124
---
> #line 125
14451,14452d14474
< #line 132
<     ret = (*(((st->dev)->teimgr)->ctrl))((st->dev)->teimgr, 1024, skb);
14454c14476
<     if (! ret) {
---
>     ret = (*(((st->dev)->teimgr)->ctrl))((st->dev)->teimgr, 1024, skb);
14455a14478,14479
>     if (! ret) {
> #line 135
14458,14459d14481
< #line 135
<     if (*debug___2 & 16U) {
14460a14483,14484
>     if (*debug___2 & 16U) {
> #line 137
14468,14469d14491
< #line 141
<   mutex_unlock(& st->lmutex);
14471c14493
<   if (skb) {
---
>   mutex_unlock(& st->lmutex);
14472a14495,14496
>   if (skb) {
> #line 144
14477c14501
< #line 144
---
> #line 145
14481c14505
< #line 146 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 147 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14499c14523
< #line 149
---
> #line 150
14501,14502d14524
< #line 153
<   lm = hh->prim & 255U;
14504c14526
<   if (*debug___2 & 64U) {
---
>   lm = hh->prim & 255U;
14505a14528,14529
>   if (*debug___2 & 64U) {
> #line 156
14510,14511d14533
< #line 157
<   if (lm == 1) {
14512a14535,14536
>   if (lm == 1) {
> #line 159
14514c14538
< #line 158
---
> #line 159
14518,14519d14541
< #line 159
<       __net_timestamp(skb);
14520a14543,14544
>       __net_timestamp(skb);
> #line 161
14523c14547
< #line 162
---
> #line 163
14525c14549
< #line 162
---
> #line 163
14528,14529d14551
< #line 163
<   if (lm == 2) {
14530a14553,14554
>   if (lm == 2) {
> #line 165
14532c14556
< #line 164
---
> #line 165
14536c14560
< #line 165
---
> #line 166
14539,14540d14562
< #line 166
<     send_layer2(st, skb);
14541a14564,14565
>     send_layer2(st, skb);
> #line 168
14544,14545d14567
< #line 168
<   if (lm == 4) {
14547c14569
<     ch = get_channel4id(st, hh->id);
---
>   if (lm == 4) {
14549c14571
<     if (ch) {
---
>     ch = get_channel4id(st, hh->id);
14550a14573,14574
>     if (ch) {
> #line 172
14552c14576
< #line 171
---
> #line 172
14555c14579
< #line 173
---
> #line 174
14557c14581
< #line 173
---
> #line 174
14562,14563d14585
< #line 177
<   if (lm == 8) {
14564a14587,14588
>   if (lm == 8) {
> #line 179
14566c14590
< #line 178
---
> #line 179
14568c14592
< #line 178
---
> #line 179
14570c14594
< #line 178
---
> #line 179
14572c14596
<                          178);
---
>                          179);
14576,14577d14599
< #line 178
<     __builtin_expect(! (! __ret_warn_on), 0);
14579c14601
<     ch = get_channel4id(st, hh->id);
---
>     __builtin_expect(! (! __ret_warn_on), 0);
14581c14603
<     if (ch) {
---
>     ch = get_channel4id(st, hh->id);
14582a14605,14606
>     if (ch) {
> #line 182
14584c14608
< #line 181
---
> #line 182
14587c14611
< #line 183
---
> #line 184
14589c14613
< #line 183
---
> #line 184
14594c14618
< #line 189
---
> #line 190
14596c14620
< #line 189
---
> #line 190
14600c14624
< #line 192
---
> #line 193
14604c14628
< #line 195 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 196 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14610c14634
< #line 198
---
> #line 199
14614c14638
< #line 200 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 201 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14644,14645d14667
< #line 203
<   st = data;
14646a14669,14670
>   st = data;
> #line 205
14648c14672
< #line 207
---
> #line 208
14650c14674
< #line 209
---
> #line 210
14652c14676
< #line 209
---
> #line 210
14654c14678
< #line 211
---
> #line 212
14656,14657d14679
< #line 213
<   if (*debug___2 & 32U) {
14658a14681,14682
>   if (*debug___2 & 32U) {
> #line 215
14660c14684
< #line 214
---
> #line 215
14665,14666d14688
< #line 217
<   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
14668c14690
<     complete(st->notify);
---
>   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
14669a14692,14693
>     complete(st->notify);
> #line 220
14674c14698
< #line 222
---
> #line 223
14676c14700
< #line 225
---
> #line 226
14678c14702
< #line 225
---
> #line 226
14680c14704
< #line 225
---
> #line 226
14683c14707
< #line 225
---
> #line 226
14686c14710
< #line 225
---
> #line 226
14688,14689d14711
< #line 225
<     if (tmp___4) {
14691c14713
<       test_and_clear_bit(0, & st->status);
---
>     if (tmp___4) {
14692a14715,14716
>       test_and_clear_bit(0, & st->status);
> #line 228
14695c14719
< #line 229
---
> #line 230
14698c14722
< #line 230
---
> #line 231
14700c14724
< #line 230
---
> #line 231
14702c14726
< #line 230
---
> #line 231
14706c14730
< #line 230
---
> #line 231
14709,14710d14732
< #line 231
<       skb = skb_dequeue(& st->msgq);
14712c14734
<       if (! skb) {
---
>       skb = skb_dequeue(& st->msgq);
14713a14736,14737
>       if (! skb) {
> #line 234
14715,14716d14738
< #line 236
<         skb = skb_dequeue(& st->msgq);
14718c14740
<         if (! skb) {
---
>         skb = skb_dequeue(& st->msgq);
14719a14742,14743
>         if (! skb) {
> #line 239
14724c14748
< #line 239
---
> #line 240
14729,14730d14752
< #line 245
<       err = send_msg_to_layer(st, skb);
14731a14754,14755
>       err = send_msg_to_layer(st, skb);
> #line 247
14733,14734d14756
< #line 246
<       if (tmp___6) {
14736c14758
<         if (*debug___2 & 16U) {
---
>       if (tmp___6) {
14737a14760,14761
>         if (*debug___2 & 16U) {
> #line 249
14739c14763
< #line 248
---
> #line 249
14746,14747d14769
< #line 254
<         consume_skb(skb);
14748a14771,14772
>         consume_skb(skb);
> #line 256
14753c14777
< #line 257
---
> #line 258
14755c14779
< #line 257
---
> #line 258
14757c14781
< #line 257
---
> #line 258
14760c14784
< #line 257
---
> #line 258
14763c14787
< #line 257
---
> #line 258
14765c14789
< #line 257
---
> #line 258
14767c14791
< #line 259
---
> #line 260
14769c14793
< #line 261
---
> #line 262
14771c14795
< #line 263
---
> #line 264
14777c14801
< #line 266
---
> #line 267
14779,14780d14802
< #line 266
<     if (tmp___13) {
14782c14804
<       test_and_set_bit(16, & st->status);
---
>     if (tmp___13) {
14784c14806
<       test_and_clear_bit(30, & st->status);
---
>       test_and_set_bit(16, & st->status);
14786c14808
<       do_clear_stack(st);
---
>       test_and_clear_bit(30, & st->status);
14788c14810
<       test_and_clear_bit(2, & st->status);
---
>       do_clear_stack(st);
14789a14812,14813
>       test_and_clear_bit(2, & st->status);
> #line 272
14794c14818
< #line 273
---
> #line 274
14796,14797d14819
< #line 273
<     if (tmp___16) {
14799c14821
<       test_and_clear_bit(16, & st->status);
---
>     if (tmp___16) {
14801c14823
<       test_and_set_bit(30, & st->status);
---
>       test_and_clear_bit(16, & st->status);
14802a14825,14826
>       test_and_set_bit(30, & st->status);
> #line 277
14804c14828
< #line 276
---
> #line 277
14808c14832
< #line 277
---
> #line 278
14814c14838
< #line 280
---
> #line 281
14816,14817d14839
< #line 280
<     if (tmp___17) {
14818a14841,14842
>     if (tmp___17) {
> #line 282
14823,14824d14846
< #line 282
<     if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
14826c14848
<       complete(st->notify);
---
>     if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
14827a14850,14851
>       complete(st->notify);
> #line 285
14832,14833d14855
< #line 289
<     test_and_clear_bit(29, & st->status);
14834a14857,14858
>     test_and_clear_bit(29, & st->status);
> #line 291
14836c14860
< #line 290
---
> #line 291
14838c14862
< #line 290
---
> #line 291
14840c14864
< #line 290
---
> #line 291
14842c14866
< #line 290
---
> #line 291
14844c14868
< #line 290
---
> #line 291
14846c14870
< #line 290
---
> #line 291
14848c14872
< #line 290
---
> #line 291
14850c14874
< #line 290
---
> #line 291
14852c14876
< #line 290
---
> #line 291
14854c14878
< #line 290
---
> #line 291
14856c14880
< #line 290
---
> #line 291
14858c14882
< #line 290
---
> #line 291
14863c14887
< #line 290
---
> #line 291
14865c14889
< #line 290
---
> #line 291
14867c14891
< #line 290
---
> #line 291
14871c14895
< #line 290
---
> #line 291
14873c14897
< #line 290
---
> #line 291
14876c14900
< #line 290
---
> #line 291
14878c14902
< #line 290
---
> #line 291
14882c14906
< #line 290
---
> #line 291
14884c14908
< #line 290
---
> #line 291
14890,14891d14913
< #line 292
<     if (*debug___2 & 32U) {
14892a14915,14916
>     if (*debug___2 & 32U) {
> #line 294
14894c14918
< #line 293
---
> #line 294
14899c14923
< #line 295
---
> #line 296
14901c14925
< #line 297
---
> #line 298
14903c14927
< #line 299
---
> #line 300
14905,14906d14928
< #line 299
<     if (tmp___23) {
14907a14930,14931
>     if (tmp___23) {
> #line 301
14913,14914d14936
< #line 320
<   test_and_set_bit(31, & st->status);
14916c14938
<   test_and_clear_bit(30, & st->status);
---
>   test_and_set_bit(31, & st->status);
14918c14940
<   test_and_clear_bit(29, & st->status);
---
>   test_and_clear_bit(30, & st->status);
14920c14942
<   test_and_clear_bit(15, & st->status);
---
>   test_and_clear_bit(29, & st->status);
14922c14944
<   skb_queue_purge(& st->msgq);
---
>   test_and_clear_bit(15, & st->status);
14924c14946
<   st->thread = (void *)0;
---
>   skb_queue_purge(& st->msgq);
14926c14948
<   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
---
>   st->thread = (void *)0;
14928c14950
<     complete(st->notify);
---
>   if ((unsigned long )st->notify != (unsigned long )((void *)0)) {
14929a14952,14953
>     complete(st->notify);
> #line 329
14934c14958
< #line 330
---
> #line 331
14938c14962
< #line 333 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 334 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14944,14945d14967
< #line 336
<   if (! ch->st) {
14946a14969,14970
>   if (! ch->st) {
> #line 338
14951,14952d14974
< #line 338
<   __net_timestamp(skb);
14954c14976
<   _queue_message(ch->st, skb);
---
>   __net_timestamp(skb);
14955a14978,14979
>   _queue_message(ch->st, skb);
> #line 341
14959c14983
< #line 343 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 344 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14965,14966d14988
< #line 346
<   ch->addr = sapi | (tei << 8);
14967a14990,14991
>   ch->addr = sapi | (tei << 8);
> #line 348
14971c14995
< #line 349 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 350 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14977,14978d15000
< #line 352
<   list_add_tail(& ch->list, & st->layer2);
14979a15002,15003
>   list_add_tail(& ch->list, & st->layer2);
> #line 354
14983c15007
< #line 355 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 356 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
14989,14990d15012
< #line 358
<   mutex_lock(& st->lmutex);
14992c15014
<   __add_layer2(ch, st);
---
>   mutex_lock(& st->lmutex);
14994c15016
<   mutex_unlock(& st->lmutex);
---
>   __add_layer2(ch, st);
14995a15018,15019
>   mutex_unlock(& st->lmutex);
> #line 362
14999c15023
< #line 363 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 364 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15005,15006d15028
< #line 366
<   if (! ch->st || (ch->st)->layer1) {
15007a15030,15031
>   if (! ch->st || (ch->st)->layer1) {
> #line 368
15012c15036
< #line 368
---
> #line 369
15014c15038
< #line 368
---
> #line 369
15018c15042
< #line 386 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 387 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15020c15044
< #line 389 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 390 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15022c15046
< #line 371 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 372 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15039c15063
< #line 376
---
> #line 377
15041c15065
< #line 376
---
> #line 377
15043c15067
< #line 376
---
> #line 377
15045c15069
< #line 376
---
> #line 377
15047c15071
< #line 376
---
> #line 377
15049c15073
< #line 376
---
> #line 377
15051c15075
< #line 376
---
> #line 377
15053c15077
< #line 378
---
> #line 379
15055,15056d15078
< #line 378
<   newst = tmp;
15058c15080
<   if (! newst) {
---
>   newst = tmp;
15060c15082
<     printk("<3>kmalloc mISDN_stack failed\n");
---
>   if (! newst) {
15061a15084,15085
>     printk("<3>kmalloc mISDN_stack failed\n");
> #line 382
15066,15067d15089
< #line 383
<   newst->dev = dev;
15069c15091
<   INIT_LIST_HEAD(& newst->layer2);
---
>   newst->dev = dev;
15071c15093
<   newst->l1sock.head.first = (void *)0;
---
>   INIT_LIST_HEAD(& newst->layer2);
15072a15095,15096
>   newst->l1sock.head.first = (void *)0;
> #line 387
15074c15098
< #line 386
---
> #line 387
15076c15100
< #line 386
---
> #line 387
15079,15080d15102
< #line 387
<   init_waitqueue_head(& newst->workq);
15082c15104
<   skb_queue_head_init___0(& newst->msgq);
---
>   init_waitqueue_head(& newst->workq);
15083a15106,15107
>   skb_queue_head_init___0(& newst->msgq);
> #line 390
15085c15109
< #line 389
---
> #line 390
15087c15111
< #line 389
---
> #line 390
15090,15091d15113
< #line 390
<   dev->D.st = newst;
15093c15115
<   err = create_teimanager(dev);
---
>   dev->D.st = newst;
15095c15117
<   if (err) {
---
>   err = create_teimanager(dev);
15097c15119
<     printk("<3>kmalloc teimanager failed\n");
---
>   if (err) {
15099c15121
<     kfree(newst);
---
>     printk("<3>kmalloc teimanager failed\n");
15100a15123,15124
>     kfree(newst);
> #line 396
15105,15106d15128
< #line 397
<   (dev->teimgr)->peer = & newst->own;
15108c15130
<   (dev->teimgr)->recv = & mISDN_queue_message;
---
>   (dev->teimgr)->peer = & newst->own;
15110c15132
<   (dev->teimgr)->st = newst;
---
>   (dev->teimgr)->recv = & mISDN_queue_message;
15112c15134
<   newst->layer1 = & dev->D;
---
>   (dev->teimgr)->st = newst;
15114c15136
<   dev->D.recv = & l1_receive;
---
>   newst->layer1 = & dev->D;
15116c15138
<   dev->D.peer = & newst->own;
---
>   dev->D.recv = & l1_receive;
15118c15140
<   newst->own.st = newst;
---
>   dev->D.peer = & newst->own;
15120c15142
<   newst->own.ctrl = & st_own_ctrl;
---
>   newst->own.st = newst;
15122c15144
<   newst->own.send = & mISDN_queue_message;
---
>   newst->own.ctrl = & st_own_ctrl;
15124c15146
<   newst->own.recv = & mISDN_queue_message;
---
>   newst->own.send = & mISDN_queue_message;
15126c15148
<   if (*debug___2 & 2U) {
---
>   newst->own.recv = & mISDN_queue_message;
15127a15150,15151
>   if (*debug___2 & 2U) {
> #line 409
15129c15153
< #line 408
---
> #line 409
15134,15135d15157
< #line 410
<   newst->notify = & done;
15136a15159,15160
>   newst->notify = & done;
> #line 412
15138c15162
< #line 411
---
> #line 412
15140c15164
< #line 411
---
> #line 412
15142c15166
< #line 411
---
> #line 412
15144c15168
< #line 411
---
> #line 412
15148c15172
< #line 411
---
> #line 412
15151c15175
< #line 411
---
> #line 412
15153c15177
< #line 413
---
> #line 414
15155,15156d15178
< #line 413
<   if (tmp___6) {
15157a15180,15181
>   if (tmp___6) {
> #line 415
15159,15160d15182
< #line 414
<     err = tmp___4;
15161a15184,15185
>     err = tmp___4;
> #line 416
15163c15187
< #line 415
---
> #line 416
15165,15166d15188
< #line 418
<     delete_teimanager(dev->teimgr);
15167a15190,15191
>     delete_teimanager(dev->teimgr);
> #line 420
15170c15194
< #line 421
---
> #line 422
15173c15197
< #line 422
---
> #line 423
15177c15201
< #line 425 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 426 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15188c15212
< #line 429
---
> #line 430
15190c15214
< #line 429
---
> #line 430
15192,15193d15215
< #line 434
<   if (*debug___2 & 2U) {
15194a15217,15218
>   if (*debug___2 & 2U) {
> #line 436
15196c15220
< #line 435
---
> #line 436
15202c15226
< #line 438
---
> #line 439
15208,15209d15231
< #line 443
<   ch->recv = & mISDN_queue_message;
15211c15233
<   ch->peer = & (dev->D.st)->own;
---
>   ch->recv = & mISDN_queue_message;
15213c15235
<   ch->st = dev->D.st;
---
>   ch->peer = & (dev->D.st)->own;
15215c15237
<   rq.protocol = protocol;
---
>   ch->st = dev->D.st;
15217c15239
<   rq.adr.channel = adr->channel;
---
>   rq.protocol = protocol;
15219c15241
<   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>   rq.adr.channel = adr->channel;
15220a15243,15244
>   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
> #line 450
15222,15223d15245
< #line 451
<   if (err) {
15224a15247,15248
>   if (err) {
> #line 453
15229,15230d15252
< #line 453
<   _write_lock_bh(& (dev->D.st)->l1sock.lock);
15232c15254
<   sk_add_node(& msk->sk, & (dev->D.st)->l1sock.head);
---
>   _write_lock_bh(& (dev->D.st)->l1sock.lock);
15234c15256
<   _write_unlock_bh(& (dev->D.st)->l1sock.lock);
---
>   sk_add_node(& msk->sk, & (dev->D.st)->l1sock.head);
15235a15258,15259
>   _write_unlock_bh(& (dev->D.st)->l1sock.lock);
> #line 457
15238c15262
< #line 458
---
> #line 459
15241c15265
< #line 460
---
> #line 461
15245c15269
< #line 463 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 464 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15257,15258d15280
< #line 471
<   if (*debug___2 & 2U) {
15259a15282,15283
>   if (*debug___2 & 2U) {
> #line 473
15261c15285
< #line 472
---
> #line 473
15267,15268d15290
< #line 476
<   ch->st = dev->D.st;
15270c15292
<   pmask = 1 << (protocol & 31U);
---
>   ch->st = dev->D.st;
15272c15294
<   if ((unsigned int )pmask & dev->Bprotocols) {
---
>   pmask = 1 << (protocol & 31U);
15274c15296
<     rq.protocol = protocol;
---
>   if ((unsigned int )pmask & dev->Bprotocols) {
15276c15298
<     rq.adr = *adr;
---
>     rq.protocol = protocol;
15278c15300
<     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>     rq.adr = *adr;
15280c15302
<     if (err) {
---
>     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
15281a15304,15305
>     if (err) {
> #line 484
15286,15287d15309
< #line 484
<     ch->recv = (rq.ch)->send;
15289c15311
<     ch->peer = rq.ch;
---
>     ch->recv = (rq.ch)->send;
15291c15313
<     (rq.ch)->recv = ch->send;
---
>     ch->peer = rq.ch;
15293c15315
<     (rq.ch)->peer = ch;
---
>     (rq.ch)->recv = ch->send;
15294a15317,15318
>     (rq.ch)->peer = ch;
> #line 489
15297,15298d15320
< #line 490
<     bp = get_Bprotocol4mask(pmask);
15300c15322
<     if (! bp) {
---
>     bp = get_Bprotocol4mask(pmask);
15301a15324,15325
>     if (! bp) {
> #line 493
15306,15307d15329
< #line 493
<     rq2.protocol = protocol;
15309c15331
<     rq2.adr = *adr;
---
>     rq2.protocol = protocol;
15311c15333
<     rq2.ch = ch;
---
>     rq2.adr = *adr;
15313c15335
<     err = (*(bp->create))(& rq2);
---
>     rq2.ch = ch;
15315c15337
<     if (err) {
---
>     err = (*(bp->create))(& rq2);
15316a15339,15340
>     if (err) {
> #line 499
15321,15322d15344
< #line 499
<     ch->recv = (rq2.ch)->send;
15324c15346
<     ch->peer = rq2.ch;
---
>     ch->recv = (rq2.ch)->send;
15326c15348
<     (rq2.ch)->st = dev->D.st;
---
>     ch->peer = rq2.ch;
15328c15350
<     rq.protocol = rq2.protocol;
---
>     (rq2.ch)->st = dev->D.st;
15330c15352
<     rq.adr = *adr;
---
>     rq.protocol = rq2.protocol;
15332c15354
<     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>     rq.adr = *adr;
15334c15356
<     if (err) {
---
>     err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
15336c15358
<       (*((rq2.ch)->ctrl))(rq2.ch, 512, (void *)0);
---
>     if (err) {
15337a15360,15361
>       (*((rq2.ch)->ctrl))(rq2.ch, 512, (void *)0);
> #line 508
15342,15343d15365
< #line 509
<     (rq2.ch)->recv = (rq.ch)->send;
15345c15367
<     (rq2.ch)->peer = rq.ch;
---
>     (rq2.ch)->recv = (rq.ch)->send;
15347c15369
<     (rq.ch)->recv = (rq2.ch)->send;
---
>     (rq2.ch)->peer = rq.ch;
15349c15371
<     (rq.ch)->peer = rq2.ch;
---
>     (rq.ch)->recv = (rq2.ch)->send;
15350a15373,15374
>     (rq.ch)->peer = rq2.ch;
> #line 514
15353,15354d15376
< #line 515
<   ch->protocol = protocol;
15356c15378
<   ch->nr = (rq.ch)->nr;
---
>   ch->protocol = protocol;
15357a15380,15381
>   ch->nr = (rq.ch)->nr;
> #line 518
15361c15385
< #line 520 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 521 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15370,15371d15393
< #line 527
<   if (*debug___2 & 2U) {
15372a15395,15396
>   if (*debug___2 & 2U) {
> #line 529
15374c15398
< #line 528
---
> #line 529
15380,15381d15403
< #line 532
<   rq.protocol = 1;
15383c15405
<   if (dev->Dprotocols & (unsigned int )(1 << 3)) {
---
>   rq.protocol = 1;
15384a15407,15408
>   if (dev->Dprotocols & (unsigned int )(1 << 3)) {
> #line 535
15389c15413
< #line 535
---
> #line 536
15392,15393d15415
< #line 537
<   rq.protocol = 2;
15395c15417
<   if (dev->Dprotocols & (unsigned int )(1 << 4)) {
---
>   rq.protocol = 2;
15396a15419,15420
>   if (dev->Dprotocols & (unsigned int )(1 << 4)) {
> #line 540
15402,15403d15425
< #line 541
<   ch->recv = & mISDN_queue_message;
15405c15427
<   ch->peer = & (dev->D.st)->own;
---
>   ch->recv = & mISDN_queue_message;
15407c15429
<   ch->st = dev->D.st;
---
>   ch->peer = & (dev->D.st)->own;
15409c15431
<   rq.adr.channel = 0;
---
>   ch->st = dev->D.st;
15411c15433
<   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
---
>   rq.adr.channel = 0;
15413c15435
<   printk("<7>%s: ret 1 %d\n", "create_l2entity", err);
---
>   err = (*(dev->D.ctrl))(& dev->D, 256, & rq);
15415c15437
<   if (err) {
---
>   printk("<7>%s: ret 1 %d\n", "create_l2entity", err);
15416a15439,15440
>   if (err) {
> #line 549
15421,15422d15444
< #line 549
<   rq.protocol = protocol;
15424c15446
<   rq.adr = *adr;
---
>   rq.protocol = protocol;
15426c15448
<   rq.ch = ch;
---
>   rq.adr = *adr;
15428c15450
<   err = (*((dev->teimgr)->ctrl))(dev->teimgr, 256, & rq);
---
>   rq.ch = ch;
15430c15452
<   printk("<7>%s: ret 2 %d\n", "create_l2entity", err);
---
>   err = (*((dev->teimgr)->ctrl))(dev->teimgr, 256, & rq);
15432c15454
<   if (! err) {
---
>   printk("<7>%s: ret 2 %d\n", "create_l2entity", err);
15434c15456
<     if (protocol == (u_int )17 && ! rq.ch) {
---
>   if (! err) {
15435a15458,15459
>     if (protocol == (u_int )17 && ! rq.ch) {
> #line 557
15440,15441d15463
< #line 557
<     add_layer2(rq.ch, dev->D.st);
15443c15465
<     (rq.ch)->recv = & mISDN_queue_message;
---
>     add_layer2(rq.ch, dev->D.st);
15445c15467
<     (rq.ch)->peer = & (dev->D.st)->own;
---
>     (rq.ch)->recv = & mISDN_queue_message;
15446a15469,15470
>     (rq.ch)->peer = & (dev->D.st)->own;
> #line 561
15451c15475
< #line 562
---
> #line 563
15454c15478
< #line 564
---
> #line 565
15457c15481
< #line 566
---
> #line 567
15461c15485
< #line 569 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 570 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15470c15494
< #line 572
---
> #line 573
15472c15496
< #line 572
---
> #line 573
15474,15475d15497
< #line 575
<   if (! ch->st) {
15477c15499
<     printk("<4>%s: no stack\n", "delete_channel");
---
>   if (! ch->st) {
15478a15501,15502
>     printk("<4>%s: no stack\n", "delete_channel");
> #line 578
15483,15484d15506
< #line 579
<   if (*debug___2 & 2U) {
15485a15508,15509
>   if (*debug___2 & 2U) {
> #line 581
15487c15511
< #line 580
---
> #line 581
15492,15493d15515
< #line 582
<   if (ch->protocol >= (u_int )32) {
15495c15517
<     if (ch->peer) {
---
>   if (ch->protocol >= (u_int )32) {
15497c15519
<       (*((ch->peer)->ctrl))(ch->peer, 512, (void *)0);
---
>     if (ch->peer) {
15498a15521,15522
>       (*((ch->peer)->ctrl))(ch->peer, 512, (void *)0);
> #line 586
15503c15527
< #line 587
---
> #line 588
15508c15532
< #line 589
---
> #line 590
15514,15515d15537
< #line 594
<   _write_lock_bh(& (ch->st)->l1sock.lock);
15517c15539
<   sk_del_node_init(& msk->sk);
---
>   _write_lock_bh(& (ch->st)->l1sock.lock);
15519c15541
<   _write_unlock_bh(& (ch->st)->l1sock.lock);
---
>   sk_del_node_init(& msk->sk);
15521c15543
<   (*(((ch->st)->dev)->D.ctrl))(& ((ch->st)->dev)->D, 512, (void *)0);
---
>   _write_unlock_bh(& (ch->st)->l1sock.lock);
15522a15545,15546
>   (*(((ch->st)->dev)->D.ctrl))(& ((ch->st)->dev)->D, 512, (void *)0);
> #line 599
15525,15526d15548
< #line 600
<   pch = get_channel4id(ch->st, ch->nr);
15528c15550
<   if (pch) {
---
>   pch = get_channel4id(ch->st, ch->nr);
15530c15552
<     mutex_lock(& (ch->st)->lmutex);
---
>   if (pch) {
15532c15554
<     list_del(& pch->list);
---
>     mutex_lock(& (ch->st)->lmutex);
15534c15556
<     mutex_unlock(& (ch->st)->lmutex);
---
>     list_del(& pch->list);
15536c15558
<     (*(pch->ctrl))(pch, 512, (void *)0);
---
>     mutex_unlock(& (ch->st)->lmutex);
15538c15560
<     pch = ((ch->st)->dev)->teimgr;
---
>     (*(pch->ctrl))(pch, 512, (void *)0);
15539a15562,15563
>     pch = ((ch->st)->dev)->teimgr;
> #line 608
15542c15566
< #line 609
---
> #line 610
15545c15569
< #line 611
---
> #line 612
15548,15549d15571
< #line 613
<   pch = ((ch->st)->dev)->teimgr;
15551c15573
<   if (pch) {
---
>   pch = ((ch->st)->dev)->teimgr;
15552a15575,15576
>   if (pch) {
> #line 616
15555c15579
< #line 617
---
> #line 618
15558c15582
< #line 619
---
> #line 620
15561c15585
< #line 621
---
> #line 622
15564c15588
< #line 623
---
> #line 624
15568c15592
< #line 626 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 627 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15578,15579d15601
< #line 629
<   st = dev->D.st;
15580a15603,15604
>   st = dev->D.st;
> #line 631
15582c15606
< #line 630
---
> #line 631
15584c15608
< #line 630
---
> #line 631
15586c15610
< #line 630
---
> #line 631
15588c15612
< #line 630
---
> #line 631
15590c15614
< #line 630
---
> #line 631
15592c15616
< #line 630
---
> #line 631
15594,15595d15617
< #line 632
<   if (*debug___2 & 2U) {
15596a15619,15620
>   if (*debug___2 & 2U) {
> #line 634
15598c15622
< #line 633
---
> #line 634
15603,15604d15626
< #line 635
<   if (dev->teimgr) {
15605a15628,15629
>   if (dev->teimgr) {
> #line 637
15610,15611d15633
< #line 637
<   if (st->thread) {
15613c15635
<     if (st->notify) {
---
>   if (st->thread) {
15614a15637,15638
>     if (st->notify) {
> #line 640
15616c15640
< #line 641
---
> #line 642
15621,15622d15644
< #line 643
<     st->notify = & done;
15624c15646
<     test_and_set_bit(15, & st->status);
---
>     st->notify = & done;
15626c15648
<     test_and_set_bit(4, & st->status);
---
>     test_and_set_bit(15, & st->status);
15628c15650
<     __wake_up(& st->workq, 1, 1, (void *)0);
---
>     test_and_set_bit(4, & st->status);
15629a15652,15653
>     __wake_up(& st->workq, 1, 1, (void *)0);
> #line 648
15634c15658
< #line 649
---
> #line 650
15636c15660
< #line 649
---
> #line 650
15640c15664
< #line 650
---
> #line 651
15643c15667
< #line 652
---
> #line 653
15645c15669
< #line 652
---
> #line 653
15649c15673
< #line 653
---
> #line 654
15652,15653d15675
< #line 655
<   kfree(st);
15654a15677,15678
>   kfree(st);
> #line 657
15658c15682
< #line 658 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
---
> #line 659 "/work/ldvuser/novikov/work/current--X--drivers/isdn/mISDN/mISDN_core.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/30/dscv_tempdir/dscv/ri/32_1/drivers/isdn/mISDN/stack.c"
15664,15665d15687
< #line 661
<   debug___2 = dp;
15666a15689,15690
>   debug___2 = dp;
> #line 663
16428c16452
< #line 464 "include/linux/skbuff.h"
---
> #line 460 "include/linux/skbuff.h"
16430c16454
< #line 799 "include/linux/skbuff.h"
---
> #line 795 "include/linux/skbuff.h"
16436c16460
< #line 801
---
> #line 797
16440c16464
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
16442c16466
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
16448c16472
< #line 830
---
> #line 826
16450c16474
< #line 830
---
> #line 826
16452c16476
< #line 830
---
> #line 826
16455c16479
< #line 831
---
> #line 827
16457c16481
< #line 832
---
> #line 828
16461c16485
< #line 1180 "include/linux/skbuff.h"
---
> #line 1176 "include/linux/skbuff.h"
16467c16491
< #line 1182
---
> #line 1178
16471c16495
< #line 1389
---
> #line 1385
21339c21363
< #line 830 "include/linux/skbuff.h"
---
> #line 826 "include/linux/skbuff.h"
21341c21365
< #line 828 "include/linux/skbuff.h"
---
> #line 824 "include/linux/skbuff.h"
21347c21371
< #line 830
---
> #line 826
21349c21373
< #line 830
---
> #line 826
21351c21375
< #line 830
---
> #line 826
21354c21378
< #line 831
---
> #line 827
21356c21380
< #line 832
---
> #line 828
24375c24399
< #line 2225 "include/linux/fs.h"
---
> #line 2227 "include/linux/fs.h"
