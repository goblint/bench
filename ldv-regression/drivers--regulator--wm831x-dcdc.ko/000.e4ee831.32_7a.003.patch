6,9c6,7
< #line 40 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __builtin_va_list __gnuc_va_list[1U];
< #line 102 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
< typedef __gnuc_va_list va_list[1U];
---
> #line 20 "include/asm-generic/int-ll64.h"
> typedef unsigned char __u8;
18,19d15
< #line 42 "include/asm-generic/int-ll64.h"
< typedef signed char s8;
49a46,47
> #line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
> typedef long long __kernel_loff_t;
54,55d51
< #line 18 "include/linux/types.h"
< typedef __u32 __kernel_dev_t;
56a53,54
> typedef __u32 __kernel_dev_t;
> #line 24 "include/linux/types.h"
58,59d55
< #line 23 "include/linux/types.h"
< typedef __kernel_mode_t mode_t;
60a57,58
> typedef __kernel_mode_t mode_t;
> #line 29 "include/linux/types.h"
62c60
< #line 31 "include/linux/types.h"
---
> #line 34 "include/linux/types.h"
64,65d61
< #line 36 "include/linux/types.h"
< typedef __kernel_uid32_t uid_t;
66a63,66
> typedef _Bool bool;
> #line 39 "include/linux/types.h"
> typedef __kernel_uid32_t uid_t;
> #line 40 "include/linux/types.h"
68c68,70
< #line 59 "include/linux/types.h"
---
> #line 53 "include/linux/types.h"
> typedef __kernel_loff_t loff_t;
> #line 62 "include/linux/types.h"
70c72
< #line 64 "include/linux/types.h"
---
> #line 67 "include/linux/types.h"
72c74
< #line 74 "include/linux/types.h"
---
> #line 77 "include/linux/types.h"
74c76
< #line 107 "include/linux/types.h"
---
> #line 110 "include/linux/types.h"
76c78
< #line 113 "include/linux/types.h"
---
> #line 116 "include/linux/types.h"
78c80
< #line 179 "include/linux/types.h"
---
> #line 195 "include/linux/types.h"
80c82
< #line 183 "include/linux/types.h"
---
> #line 199 "include/linux/types.h"
82c84
< #line 188 "include/linux/types.h"
---
> #line 204 "include/linux/types.h"
84c86
< #line 192 "include/linux/types.h"
---
> #line 208 "include/linux/types.h"
86c88
<    int volatile   counter ;
---
>    int counter ;
88c90
< #line 192 "include/linux/types.h"
---
> #line 208 "include/linux/types.h"
90c92
< #line 197 "include/linux/types.h"
---
> #line 213 "include/linux/types.h"
92c94
<    long volatile   counter ;
---
>    long counter ;
94c96
< #line 197 "include/linux/types.h"
---
> #line 213 "include/linux/types.h"
96c98,114
< #line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
---
> #line 214 "include/linux/types.h"
> struct list_head {
>    struct list_head *next ;
>    struct list_head *prev ;
> };
> #line 219
> struct hlist_node;
> #line 219 "include/linux/types.h"
> struct hlist_head {
>    struct hlist_node *first ;
> };
> #line 223 "include/linux/types.h"
> struct hlist_node {
>    struct hlist_node *next ;
>    struct hlist_node **pprev ;
> };
> #line 22 "include/linux/bitops.h"
98c116
< #line 44 "include/linux/dynamic_debug.h"
---
> #line 45 "include/linux/dynamic_debug.h"
105c123
< #line 110 "include/linux/kernel.h"
---
> #line 70 "include/asm-generic/bug.h"
107c125
< #line 111
---
> #line 71
109c127
< #line 210
---
> #line 214 "include/linux/kernel.h"
111c129
< #line 677
---
> #line 562
113c131
< #line 678
---
> #line 563
115c133
< #line 213 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
---
> #line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
139c157
< #line 138 "include/linux/init.h"
---
> #line 145 "include/linux/init.h"
141c159
< #line 237 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
---
> #line 290 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
154c172
< union __anonunion_ldv_1787_8 {
---
> union __anonunion_ldv_1904_8 {
161c179
<    union __anonunion_ldv_1787_8 ldv_1787 ;
---
>    union __anonunion_ldv_1904_8 ldv_1904 ;
181c199
< #line 284
---
> #line 285
183,184c201,202
< #line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
< struct __anonstruct_ldv_2077_15 {
---
> #line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> struct __anonstruct_ldv_2115_15 {
188,189c206,207
< #line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
< struct __anonstruct_ldv_2092_16 {
---
> #line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> struct __anonstruct_ldv_2130_16 {
204,207c222,225
< #line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
< union __anonunion_ldv_2093_14 {
<    struct __anonstruct_ldv_2077_15 ldv_2077 ;
<    struct __anonstruct_ldv_2092_16 ldv_2092 ;
---
> #line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
> union __anonunion_ldv_2131_14 {
>    struct __anonstruct_ldv_2115_15 ldv_2115 ;
>    struct __anonstruct_ldv_2130_16 ldv_2130 ;
209c227
< #line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
---
> #line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
211c229
<    union __anonunion_ldv_2093_14 ldv_2093 ;
---
>    union __anonunion_ldv_2131_14 ldv_2131 ;
213c231
< #line 121 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
---
> #line 122 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
215c233
< #line 123
---
> #line 124
217,219c235,237
< #line 347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
< struct raw_spinlock;
< #line 290 "include/linux/bitmap.h"
---
> #line 314 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
> struct arch_spinlock;
> #line 301 "include/linux/bitmap.h"
223c241
< #line 144 "include/linux/cpumask.h"
---
> #line 13 "include/linux/cpumask.h"
225c243
< #line 301 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ds.h"
---
> #line 271 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/msr.h"
244c262
< #line 282 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 281 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
256,257c274,275
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct_ldv_4635_20 {
---
> #line 299 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct_ldv_4714_20 {
261,262c279,280
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< struct __anonstruct_ldv_4641_21 {
---
> #line 299 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct __anonstruct_ldv_4720_21 {
268,271c286,289
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union __anonunion_ldv_4642_19 {
<    struct __anonstruct_ldv_4635_20 ldv_4635 ;
<    struct __anonstruct_ldv_4641_21 ldv_4641 ;
---
> #line 299 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> union __anonunion_ldv_4721_19 {
>    struct __anonstruct_ldv_4714_20 ldv_4714 ;
>    struct __anonstruct_ldv_4720_21 ldv_4720 ;
273,274c291,292
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
< union __anonunion_ldv_4651_22 {
---
> #line 299 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> union __anonunion_ldv_4730_22 {
278c296
< #line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 299 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
284c302
<    union __anonunion_ldv_4642_19 ldv_4642 ;
---
>    union __anonunion_ldv_4721_19 ldv_4721 ;
290c308
<    union __anonunion_ldv_4651_22 ldv_4651 ;
---
>    union __anonunion_ldv_4730_22 ldv_4730 ;
292c310
< #line 334 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 333 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
311c329
< #line 355 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 354 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
315c333
< #line 360 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 359 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
321c339
< #line 366 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 365 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
327c345
< #line 372 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 371 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
334c352,356
< #line 422
---
> #line 379 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
> struct fpu {
>    union thread_xstate *state ;
> };
> #line 425
336,338c358,360
< #line 423
< struct ds_context;
< #line 423 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
---
> #line 426
> struct perf_event;
> #line 427 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
350,353c372
<    unsigned long debugreg0 ;
<    unsigned long debugreg1 ;
<    unsigned long debugreg2 ;
<    unsigned long debugreg3 ;
---
>    struct perf_event *ptrace_bps[4U] ;
355c374
<    unsigned long debugreg7 ;
---
>    unsigned long ptrace_dr7 ;
359c378
<    union thread_xstate *xstate ;
---
>    struct fpu fpu ;
363,364d381
<    unsigned long debugctlmsr ;
<    struct ds_context *ds_ctx ;
372,389c389,390
< #line 56 "include/linux/prefetch.h"
< struct list_head {
<    struct list_head *next ;
<    struct list_head *prev ;
< };
< #line 327 "include/linux/list.h"
< struct hlist_node;
< #line 327 "include/linux/list.h"
< struct hlist_head {
<    struct hlist_node *first ;
< };
< #line 543 "include/linux/list.h"
< struct hlist_node {
<    struct hlist_node *next ;
<    struct hlist_node **pprev ;
< };
< #line 634 "include/linux/list.h"
< struct raw_spinlock {
---
> #line 657 "include/linux/list.h"
> struct arch_spinlock {
393c394
< typedef struct raw_spinlock raw_spinlock_t;
---
> typedef struct arch_spinlock arch_spinlock_t;
398c399
< #line 56 "include/linux/debug_locks.h"
---
> #line 55 "include/linux/debug_locks.h"
405c406
< #line 24 "include/linux/stacktrace.h"
---
> #line 26 "include/linux/stacktrace.h"
408,409c409,410
< };
< #line 38 "include/linux/lockdep.h"
---
> } __attribute__((__packed__)) ;
> #line 53 "include/linux/lockdep.h"
413c414
< #line 42 "include/linux/lockdep.h"
---
> #line 59 "include/linux/lockdep.h"
431c432
< #line 127 "include/linux/lockdep.h"
---
> #line 144 "include/linux/lockdep.h"
434c435
<    struct lock_class *class_cache ;
---
>    struct lock_class *class_cache[2U] ;
439c440
< #line 170 "include/linux/lockdep.h"
---
> #line 187 "include/linux/lockdep.h"
455,457c456,458
< #line 32 "include/linux/spinlock_types.h"
< struct __anonstruct_spinlock_t_26 {
<    raw_spinlock_t raw_lock ;
---
> #line 554 "include/linux/lockdep.h"
> struct raw_spinlock {
>    arch_spinlock_t raw_lock ;
464,465c465,482
< typedef struct __anonstruct_spinlock_t_26 spinlock_t;
< #line 48
---
> typedef struct raw_spinlock raw_spinlock_t;
> #line 33 "include/linux/spinlock_types.h"
> struct __anonstruct_ldv_5650_27 {
>    u8 __padding[1U] ;
>    struct lockdep_map dep_map ;
> };
> #line 33 "include/linux/spinlock_types.h"
> union __anonunion_ldv_5651_26 {
>    struct raw_spinlock rlock ;
>    struct __anonstruct_ldv_5650_27 ldv_5650 ;
> };
> #line 33 "include/linux/spinlock_types.h"
> struct spinlock {
>    union __anonunion_ldv_5651_26 ldv_5651 ;
> };
> #line 77 "include/linux/spinlock_types.h"
> typedef struct spinlock spinlock_t;
> #line 23 "include/linux/rwlock_types.h"
467c484
< #line 48 "include/linux/spinlock_types.h"
---
> #line 23 "include/linux/rwlock_types.h"
488c505
< struct __anonstruct_ldv_5563_29 {
---
> struct __anonstruct_ldv_5802_30 {
495c512
< struct __anonstruct_futex_30 {
---
> struct __anonstruct_futex_31 {
504c521
< struct __anonstruct_nanosleep_31 {
---
> struct __anonstruct_nanosleep_32 {
513c530
< struct __anonstruct_poll_32 {
---
> struct __anonstruct_poll_33 {
521,525c538,542
< union __anonunion_ldv_5586_28 {
<    struct __anonstruct_ldv_5563_29 ldv_5563 ;
<    struct __anonstruct_futex_30 futex ;
<    struct __anonstruct_nanosleep_31 nanosleep ;
<    struct __anonstruct_poll_32 poll ;
---
> union __anonunion_ldv_5825_29 {
>    struct __anonstruct_ldv_5802_30 ldv_5802 ;
>    struct __anonstruct_futex_31 futex ;
>    struct __anonstruct_nanosleep_32 nanosleep ;
>    struct __anonstruct_poll_33 poll ;
530c547
<    union __anonunion_ldv_5586_28 ldv_5586 ;
---
>    union __anonunion_ldv_5825_29 ldv_5825 ;
545c562
< #line 104 "include/linux/math64.h"
---
> #line 235 "include/linux/seqlock.h"
557,563c574,580
< #line 98 "include/linux/nodemask.h"
< struct __anonstruct_nodemask_t_34 {
<    unsigned long bits[8U] ;
< };
< #line 98 "include/linux/nodemask.h"
< typedef struct __anonstruct_nodemask_t_34 nodemask_t;
< #line 632 "include/linux/mmzone.h"
---
> #line 96 "include/linux/nodemask.h"
> struct __anonstruct_nodemask_t_35 {
>    unsigned long bits[16U] ;
> };
> #line 96 "include/linux/nodemask.h"
> typedef struct __anonstruct_nodemask_t_35 nodemask_t;
> #line 649 "include/linux/mmzone.h"
565c582,584
< #line 634 "include/linux/mmzone.h"
---
> #line 77 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwsem.h"
> typedef long rwsem_count_t;
> #line 78 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwsem.h"
567c586
<    __s32 activity ;
---
>    rwsem_count_t count ;
572c591
< #line 52 "include/linux/srcu.h"
---
> #line 170 "include/linux/srcu.h"
583c602,612
< #line 77 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mpspec.h"
---
> #line 139 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/e820.h"
> struct resource {
>    resource_size_t start ;
>    resource_size_t end ;
>    char const   *name ;
>    unsigned long flags ;
>    struct resource *parent ;
>    struct resource *sibling ;
>    struct resource *child ;
> };
> #line 175 "include/linux/ioport.h"
585c614
< #line 310 "include/linux/jiffies.h"
---
> #line 311 "include/linux/jiffies.h"
591c620
< #line 85 "include/linux/debugobjects.h"
---
> #line 96 "include/linux/debugobjects.h"
593c622
< #line 86 "include/linux/debugobjects.h"
---
> #line 97 "include/linux/debugobjects.h"
596a626
>    struct tvec_base *base ;
599c629,630
<    struct tvec_base *base ;
---
>    int slack ;
>    int start_pid ;
602d632
<    int start_pid ;
605c635
< #line 245 "include/linux/timer.h"
---
> #line 289 "include/linux/timer.h"
607c637
< #line 246
---
> #line 290
609,611c639
< #line 257
< struct workqueue_struct;
< #line 258
---
> #line 302
613c641
< #line 18 "include/linux/workqueue.h"
---
> #line 45 "include/linux/workqueue.h"
620,623c648,651
< #line 35 "include/linux/workqueue.h"
< struct delayed_work {
<    struct work_struct work ;
<    struct timer_list timer ;
---
> #line 439 "include/linux/workqueue.h"
> struct completion {
>    unsigned int done ;
>    wait_queue_head_t wait ;
625c653
< #line 36 "include/linux/pm.h"
---
> #line 46 "include/linux/pm.h"
629c657
< #line 45 "include/linux/pm.h"
---
> #line 52 "include/linux/pm.h"
631c659
< #line 46 "include/linux/pm.h"
---
> #line 53 "include/linux/pm.h"
651,661c679
< #line 215
< enum dpm_state {
<     DPM_INVALID = 0,
<     DPM_ON = 1,
<     DPM_PREPARING = 2,
<     DPM_RESUMING = 3,
<     DPM_SUSPENDING = 4,
<     DPM_OFF = 5,
<     DPM_OFF_IRQ = 6
< } ;
< #line 225
---
> #line 272
668c686
< #line 232
---
> #line 279
673c691,692
<     RPM_REQ_RESUME = 3
---
>     RPM_REQ_AUTOSUSPEND = 3,
>     RPM_REQ_RESUME = 4
675c694,696
< #line 239 "include/linux/pm.h"
---
> #line 287
> struct wakeup_source;
> #line 288 "include/linux/pm.h"
679,680c700,702
<    unsigned char should_wakeup : 1 ;
<    enum dpm_state status ;
---
>    unsigned char async_suspend : 1 ;
>    unsigned char in_suspend : 1 ;
>    spinlock_t lock ;
681a704,705
>    struct completion completion ;
>    struct wakeup_source *wakeup ;
686d709
<    spinlock_t lock ;
693a717,722
>    unsigned char run_wake : 1 ;
>    unsigned char runtime_auto : 1 ;
>    unsigned char no_callbacks : 1 ;
>    unsigned char irq_safe : 1 ;
>    unsigned char use_autosuspend : 1 ;
>    unsigned char timer_autosuspends : 1 ;
696a726,730
>    int autosuspend_delay ;
>    unsigned long last_busy ;
>    unsigned long active_jiffies ;
>    unsigned long suspended_jiffies ;
>    unsigned long accounting_timestamp ;
699c733
< struct __anonstruct_mm_context_t_81 {
---
> struct __anonstruct_mm_context_t_100 {
706,707c740,741
< typedef struct __anonstruct_mm_context_t_81 mm_context_t;
< #line 49 "include/linux/topology.h"
---
> typedef struct __anonstruct_mm_context_t_100 mm_context_t;
> #line 314 "include/linux/topology.h"
709c743
< #line 33 "include/linux/kmod.h"
---
> #line 35 "include/linux/kmod.h"
719c753
< #line 180 "include/linux/elf.h"
---
> #line 202 "include/linux/elf.h"
728c762
< #line 188 "include/linux/elf.h"
---
> #line 210 "include/linux/elf.h"
730c764,766
< #line 405
---
> #line 443
> struct sock;
> #line 444
732c768,781
< #line 406 "include/linux/elf.h"
---
> #line 445
> enum kobj_ns_type {
>     KOBJ_NS_TYPE_NONE = 0,
>     KOBJ_NS_TYPE_NET = 1,
>     KOBJ_NS_TYPES = 2
> } ;
> #line 451 "include/linux/elf.h"
> struct kobj_ns_type_operations {
>    enum kobj_ns_type type ;
>    void const   *(*current_ns)(void) ;
>    void const   *(*netlink_ns)(struct sock * ) ;
>    void const   *(*initial_ns)(void) ;
> };
> #line 55 "include/linux/kobject_ns.h"
735d783
<    struct module *owner ;
736a785,786
>    struct lock_class_key *key ;
>    struct lock_class_key skey ;
744c794,805
< #line 75 "include/linux/sysfs.h"
---
> #line 62 "include/linux/sysfs.h"
> struct bin_attribute {
>    struct attribute attr ;
>    size_t size ;
>    void *private ;
>    ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                    loff_t  , size_t  ) ;
>    ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
>                     loff_t  , size_t  ) ;
>    int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
> };
> #line 98 "include/linux/sysfs.h"
749c810
< #line 81
---
> #line 116
751c812
< #line 131 "include/linux/sysfs.h"
---
> #line 185 "include/linux/sysfs.h"
755c816
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
757c818
< #line 48
---
> #line 49
759c820
< #line 48 "include/linux/kobject.h"
---
> #line 49 "include/linux/kobject.h"
774c835
< #line 106 "include/linux/kobject.h"
---
> #line 107 "include/linux/kobject.h"
777c838
<    struct sysfs_ops *sysfs_ops ;
---
>    struct sysfs_ops  const  *sysfs_ops ;
778a840,841
>    struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
>    void const   *(*namespace)(struct kobject * ) ;
780c843
< #line 112 "include/linux/kobject.h"
---
> #line 115 "include/linux/kobject.h"
787c850
< #line 119 "include/linux/kobject.h"
---
> #line 122 "include/linux/kobject.h"
789,791c852,854
<    int (*filter)(struct kset * , struct kobject * ) ;
<    char const   *(*name)(struct kset * , struct kobject * ) ;
<    int (*uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
---
>    int (* const  filter)(struct kset * , struct kobject * ) ;
>    char const   *(* const  name)(struct kset * , struct kobject * ) ;
>    int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
793c856
< #line 136 "include/linux/kobject.h"
---
> #line 139 "include/linux/kobject.h"
798c861
<    struct kset_uevent_ops *uevent_ops ;
---
>    struct kset_uevent_ops  const  *uevent_ops ;
800c863
< #line 210
---
> #line 217
802c865,871
< #line 38 "include/linux/moduleparam.h"
---
> #line 218 "include/linux/kobject.h"
> struct kernel_param_ops {
>    int (*set)(char const   * , struct kernel_param  const  * ) ;
>    int (*get)(char * , struct kernel_param  const  * ) ;
>    void (*free)(void * ) ;
> };
> #line 42 "include/linux/moduleparam.h"
804c873
< #line 38
---
> #line 42
806,807c875,876
< #line 38 "include/linux/moduleparam.h"
< union __anonunion_ldv_9609_91 {
---
> #line 42 "include/linux/moduleparam.h"
> union __anonunion_ldv_11013_110 {
812c881
< #line 38 "include/linux/moduleparam.h"
---
> #line 42 "include/linux/moduleparam.h"
814a884
>    struct kernel_param_ops  const  *ops ;
817,819c887
<    int (*set)(char const   * , struct kernel_param * ) ;
<    int (*get)(char * , struct kernel_param * ) ;
<    union __anonunion_ldv_9609_91 ldv_9609 ;
---
>    union __anonunion_ldv_11013_110 ldv_11013 ;
821c889
< #line 55 "include/linux/moduleparam.h"
---
> #line 57 "include/linux/moduleparam.h"
826c894
< #line 61 "include/linux/moduleparam.h"
---
> #line 63 "include/linux/moduleparam.h"
830,831c898
<    int (*set)(char const   * , struct kernel_param * ) ;
<    int (*get)(char * , struct kernel_param * ) ;
---
>    struct kernel_param_ops  const  *ops ;
835,861c902
< #line 243
< struct marker;
< #line 33 "include/linux/marker.h"
< typedef void marker_probe_func(void * , void * , char const   * , va_list * );
< #line 34 "include/linux/marker.h"
< struct marker_probe_closure {
<    marker_probe_func *func ;
<    void *probe_private ;
< };
< #line 40 "include/linux/marker.h"
< struct marker {
<    char const   *name ;
<    char const   *format ;
<    char state ;
<    char ptype ;
<    void (*call)(struct marker  const  * , void *  , ...) ;
<    struct marker_probe_closure single ;
<    struct marker_probe_closure *multi ;
<    char const   *tp_name ;
<    void *tp_cb ;
< };
< #line 210 "include/linux/marker.h"
< struct completion {
<    unsigned int done ;
<    wait_queue_head_t wait ;
< };
< #line 91 "include/linux/completion.h"
---
> #line 396 "include/linux/moduleparam.h"
866c907
< #line 315 "include/linux/rcupdate.h"
---
> #line 778 "include/linux/rcupdate.h"
868c909,914
< #line 316 "include/linux/rcupdate.h"
---
> #line 779 "include/linux/rcupdate.h"
> struct tracepoint_func {
>    void *func ;
>    void *data ;
> };
> #line 29 "include/linux/tracepoint.h"
874,919c920
<    void **funcs ;
< };
< #line 79 "include/linux/kmemleak.h"
< struct kmem_cache_cpu {
<    void **freelist ;
<    struct page *page ;
<    int node ;
<    unsigned int offset ;
<    unsigned int objsize ;
<    unsigned int stat[18U] ;
< };
< #line 46 "include/linux/slub_def.h"
< struct kmem_cache_node {
<    spinlock_t list_lock ;
<    unsigned long nr_partial ;
<    struct list_head partial ;
<    atomic_long_t nr_slabs ;
<    atomic_long_t total_objects ;
<    struct list_head full ;
< };
< #line 57 "include/linux/slub_def.h"
< struct kmem_cache_order_objects {
<    unsigned long x ;
< };
< #line 67 "include/linux/slub_def.h"
< struct kmem_cache {
<    unsigned long flags ;
<    int size ;
<    int objsize ;
<    int offset ;
<    struct kmem_cache_order_objects oo ;
<    struct kmem_cache_node local_node ;
<    struct kmem_cache_order_objects max ;
<    struct kmem_cache_order_objects min ;
<    gfp_t allocflags ;
<    int refcount ;
<    void (*ctor)(void * ) ;
<    int inuse ;
<    int align ;
<    unsigned long min_partial ;
<    char const   *name ;
<    struct list_head list ;
<    struct kobject kobj ;
<    int remote_node_defrag_ratio ;
<    struct kmem_cache_node *node[512U] ;
<    struct kmem_cache_cpu *cpu_slab[4096U] ;
---
>    struct tracepoint_func *funcs ;
921c922
< #line 155 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/local.h"
---
> #line 88 "include/linux/tracepoint.h"
925c926
< #line 100 "include/trace/events/module.h"
---
> #line 117 "include/trace/events/module.h"
930c931
< #line 47 "include/linux/module.h"
---
> #line 48 "include/linux/module.h"
940c941
< #line 59
---
> #line 60
942c943
< #line 59 "include/linux/module.h"
---
> #line 60 "include/linux/module.h"
949c950
< #line 71
---
> #line 72
951c952
< #line 177
---
> #line 190
957c958,963
< #line 183
---
> #line 196 "include/linux/module.h"
> struct module_ref {
>    unsigned int incs ;
>    unsigned int decs ;
> };
> #line 389
959c965
< #line 183
---
> #line 389
961c967
< #line 183
---
> #line 389
963c969
< #line 183 "include/linux/module.h"
---
> #line 389 "include/linux/module.h"
998a1005,1006
>    unsigned int init_ro_size ;
>    unsigned int core_ro_size ;
1004a1013
>    Elf64_Sym *core_symtab ;
1005a1015
>    unsigned int core_num_syms ;
1006a1017
>    char *core_strtab ;
1009a1021
>    unsigned int percpu_size ;
1011,1012d1022
<    struct marker *markers ;
<    unsigned int num_markers ;
1019c1029,1030
<    struct list_head modules_which_use_me ;
---
>    struct list_head source_list ;
>    struct list_head target_list ;
1022c1033
<    char *refptr ;
---
>    struct module_ref *refptr ;
1026,1027d1036
< #line 542
< struct device_driver;
1030c1039
< #line 446 "include/linux/mod_devicetable.h"
---
> #line 457 "include/linux/mod_devicetable.h"
1035,1045c1044
< #line 464 "include/linux/mod_devicetable.h"
< struct resource {
<    resource_size_t start ;
<    resource_size_t end ;
<    char const   *name ;
<    unsigned long flags ;
<    struct resource *parent ;
<    struct resource *sibling ;
<    struct resource *child ;
< };
< #line 186 "include/linux/ioport.h"
---
> #line 518
1053,1059c1052
< #line 67 "include/linux/klist.h"
< struct semaphore {
<    spinlock_t lock ;
<    unsigned int count ;
<    struct list_head wait_list ;
< };
< #line 48 "include/linux/semaphore.h"
---
> #line 67
1061c1054
< #line 48 "include/linux/semaphore.h"
---
> #line 67 "include/linux/klist.h"
1074c1067
< struct driver_private;
---
> struct device_driver;
1076c1069
< struct class;
---
> struct driver_private;
1078c1071
< struct class_private;
---
> struct class;
1080c1073
< struct bus_type;
---
> struct subsys_private;
1082,1083c1075,1076
< struct bus_type_private;
< #line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
---
> struct bus_type;
> #line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
1089c1082
< #line 50 "include/linux/device.h"
---
> #line 49 "include/linux/device.h"
1091c1084
< #line 50
---
> #line 49
1093c1086
< #line 50 "include/linux/device.h"
---
> #line 49 "include/linux/device.h"
1107c1100
<    struct bus_type_private *p ;
---
>    struct subsys_private *p ;
1114a1108
>    bool suppress_bind_attrs ;
1124c1118
< #line 151 "include/linux/device.h"
---
> #line 157 "include/linux/device.h"
1130c1124
< #line 181
---
> #line 187
1132c1126
< #line 181 "include/linux/device.h"
---
> #line 187 "include/linux/device.h"
1137a1132
>    struct bin_attribute *dev_bin_attrs ;
1140c1135
<    char *(*nodename)(struct device * ) ;
---
>    char *(*devnode)(struct device * , mode_t * ) ;
1144a1140,1141
>    struct kobj_ns_type_operations  const  *ns_type ;
>    void const   *(*namespace)(struct device * ) ;
1146c1143
<    struct class_private *p ;
---
>    struct subsys_private *p ;
1148c1145
< #line 208
---
> #line 218
1150c1147
< #line 247 "include/linux/device.h"
---
> #line 257 "include/linux/device.h"
1153,1154c1150,1151
<    ssize_t (*show)(struct class * , char * ) ;
<    ssize_t (*store)(struct class * , char const   * , size_t  ) ;
---
>    ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
>    ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
1156c1153
< #line 279 "include/linux/device.h"
---
> #line 308 "include/linux/device.h"
1161c1158
<    char *(*nodename)(struct device * ) ;
---
>    char *(*devnode)(struct device * , mode_t * ) ;
1165c1162
< #line 306 "include/linux/device.h"
---
> #line 335 "include/linux/device.h"
1172c1169
< #line 367 "include/linux/device.h"
---
> #line 396 "include/linux/device.h"
1177c1174
< #line 376
---
> #line 405
1179c1176
< #line 376 "include/linux/device.h"
---
> #line 405 "include/linux/device.h"
1186c1183
<    struct semaphore sem ;
---
>    struct mutex mutex ;
1206c1203,1219
< #line 97 "include/linux/capability.h"
---
> #line 459 "include/linux/device.h"
> struct wakeup_source {
>    char *name ;
>    struct list_head entry ;
>    spinlock_t lock ;
>    struct timer_list timer ;
>    unsigned long timer_expires ;
>    ktime_t total_time ;
>    ktime_t max_time ;
>    ktime_t last_time ;
>    unsigned long event_count ;
>    unsigned long active_count ;
>    unsigned long relax_count ;
>    unsigned long hit_count ;
>    unsigned char active : 1 ;
> };
> #line 93 "include/linux/capability.h"
1210c1223
< #line 101 "include/linux/capability.h"
---
> #line 96 "include/linux/capability.h"
1212c1225,1227
< #line 570 "include/linux/capability.h"
---
> #line 564
> struct dentry;
> #line 568 "include/linux/capability.h"
1222c1237
< #line 160
---
> #line 168
1224c1239
< #line 160 "include/linux/rbtree.h"
---
> #line 168 "include/linux/rbtree.h"
1240,1243c1255,1256
< #line 28 "include/linux/mm_types.h"
< typedef atomic_long_t mm_counter_t;
< #line 29 "include/linux/mm_types.h"
< struct __anonstruct_ldv_11932_96 {
---
> #line 116 "include/linux/prio_tree.h"
> struct __anonstruct_ldv_12939_114 {
1247,1248c1260,1261
< #line 29 "include/linux/mm_types.h"
< union __anonunion_ldv_11933_95 {
---
> #line 116 "include/linux/prio_tree.h"
> union __anonunion_ldv_12940_113 {
1250c1263
<    struct __anonstruct_ldv_11932_96 ldv_11932 ;
---
>    struct __anonstruct_ldv_12939_114 ldv_12939 ;
1252,1253c1265,1266
< #line 29 "include/linux/mm_types.h"
< struct __anonstruct_ldv_11938_98 {
---
> #line 116 "include/linux/prio_tree.h"
> struct __anonstruct_ldv_12945_116 {
1257,1260c1270,1272
< #line 29 "include/linux/mm_types.h"
< union __anonunion_ldv_11942_97 {
<    struct __anonstruct_ldv_11938_98 ldv_11938 ;
<    spinlock_t ptl ;
---
> #line 116 "include/linux/prio_tree.h"
> union __anonunion_ldv_12948_115 {
>    struct __anonstruct_ldv_12945_116 ldv_12945 ;
1264,1265c1276,1277
< #line 29 "include/linux/mm_types.h"
< union __anonunion_ldv_11946_99 {
---
> #line 116 "include/linux/prio_tree.h"
> union __anonunion_ldv_12952_117 {
1269c1281
< #line 29 "include/linux/mm_types.h"
---
> #line 116 "include/linux/prio_tree.h"
1273,1275c1285,1287
<    union __anonunion_ldv_11933_95 ldv_11933 ;
<    union __anonunion_ldv_11942_97 ldv_11942 ;
<    union __anonunion_ldv_11946_99 ldv_11946 ;
---
>    union __anonunion_ldv_12940_113 ldv_12940 ;
>    union __anonunion_ldv_12948_115 ldv_12948 ;
>    union __anonunion_ldv_12952_117 ldv_12952 ;
1278,1279c1290,1291
< #line 127 "include/linux/mm_types.h"
< struct __anonstruct_vm_set_101 {
---
> #line 122 "include/linux/mm_types.h"
> struct __anonstruct_vm_set_119 {
1284,1286c1296,1298
< #line 127 "include/linux/mm_types.h"
< union __anonunion_shared_100 {
<    struct __anonstruct_vm_set_101 vm_set ;
---
> #line 122 "include/linux/mm_types.h"
> union __anonunion_shared_118 {
>    struct __anonstruct_vm_set_119 vm_set ;
1289c1301
< #line 127
---
> #line 122
1291c1303
< #line 127
---
> #line 122
1293c1305
< #line 127
---
> #line 122
1295c1307
< #line 127 "include/linux/mm_types.h"
---
> #line 122 "include/linux/mm_types.h"
1300a1313
>    struct vm_area_struct *vm_prev ;
1304,1305c1317,1318
<    union __anonunion_shared_100 shared ;
<    struct list_head anon_vma_node ;
---
>    union __anonunion_shared_118 shared ;
>    struct list_head anon_vma_chain ;
1307c1320
<    struct vm_operations_struct *vm_ops ;
---
>    struct vm_operations_struct  const  *vm_ops ;
1314c1327
< #line 189 "include/linux/mm_types.h"
---
> #line 186 "include/linux/mm_types.h"
1319c1332
< #line 195 "include/linux/mm_types.h"
---
> #line 192 "include/linux/mm_types.h"
1325c1338,1344
< #line 201
---
> #line 205 "include/linux/mm_types.h"
> struct mm_rss_stat {
>    unsigned long count[3U] ;
> };
> #line 220
> struct linux_binfmt;
> #line 220
1327c1346
< #line 201 "include/linux/mm_types.h"
---
> #line 220 "include/linux/mm_types.h"
1346,1347d1364
<    mm_counter_t _file_rss ;
<    mm_counter_t _anon_rss ;
1369a1387,1388
>    struct mm_rss_stat rss_stat ;
>    struct linux_binfmt *binfmt ;
1382a1402
>    atomic_t oom_disable_count ;
1386c1406
< #line 113 "include/linux/sem.h"
---
> #line 118 "include/linux/sem.h"
1388c1408
< #line 126 "include/linux/sem.h"
---
> #line 131 "include/linux/sem.h"
1394c1414
< #line 135 "include/linux/sem.h"
---
> #line 140 "include/linux/sem.h"
1398c1418
< #line 144
---
> #line 149
1401c1421
< struct __anonstruct_sigset_t_102 {
---
> struct __anonstruct_sigset_t_120 {
1405c1425
< typedef struct __anonstruct_sigset_t_102 sigset_t;
---
> typedef struct __anonstruct_sigset_t_120 sigset_t;
1433c1453
< struct __anonstruct__kill_104 {
---
> struct __anonstruct__kill_122 {
1438c1458
< struct __anonstruct__timer_105 {
---
> struct __anonstruct__timer_123 {
1446c1466
< struct __anonstruct__rt_106 {
---
> struct __anonstruct__rt_124 {
1452c1472
< struct __anonstruct__sigchld_107 {
---
> struct __anonstruct__sigchld_125 {
1460c1480
< struct __anonstruct__sigfault_108 {
---
> struct __anonstruct__sigfault_126 {
1461a1482
>    short _addr_lsb ;
1464c1485
< struct __anonstruct__sigpoll_109 {
---
> struct __anonstruct__sigpoll_127 {
1469c1490
< union __anonunion__sifields_103 {
---
> union __anonunion__sifields_121 {
1471,1476c1492,1497
<    struct __anonstruct__kill_104 _kill ;
<    struct __anonstruct__timer_105 _timer ;
<    struct __anonstruct__rt_106 _rt ;
<    struct __anonstruct__sigchld_107 _sigchld ;
<    struct __anonstruct__sigfault_108 _sigfault ;
<    struct __anonstruct__sigpoll_109 _sigpoll ;
---
>    struct __anonstruct__kill_122 _kill ;
>    struct __anonstruct__timer_123 _timer ;
>    struct __anonstruct__rt_124 _rt ;
>    struct __anonstruct__sigchld_125 _sigchld ;
>    struct __anonstruct__sigfault_126 _sigfault ;
>    struct __anonstruct__sigpoll_127 _sigpoll ;
1483c1504
<    union __anonunion__sifields_103 _sifields ;
---
>    union __anonunion__sifields_121 _sifields ;
1485c1506
< #line 93 "include/asm-generic/siginfo.h"
---
> #line 94 "include/asm-generic/siginfo.h"
1487c1508
< #line 293
---
> #line 12 "include/linux/signal.h"
1489c1510
< #line 20 "include/linux/signal.h"
---
> #line 22 "include/linux/signal.h"
1494c1515
< #line 21 "include/linux/path.h"
---
> #line 387
1496c1517
< #line 21 "include/linux/path.h"
---
> #line 387 "include/linux/signal.h"
1523c1544
< struct __anonstruct_seccomp_t_112 {
---
> struct __anonstruct_seccomp_t_130 {
1527,1528c1548,1549
< typedef struct __anonstruct_seccomp_t_112 seccomp_t;
< #line 394 "include/linux/rculist.h"
---
> typedef struct __anonstruct_seccomp_t_130 seccomp_t;
> #line 427 "include/linux/rculist.h"
1532c1553,1554
<    spinlock_t *lock ;
---
>    raw_spinlock_t *rawlock ;
>    spinlock_t *spinlock ;
1534c1556
< #line 86 "include/linux/plist.h"
---
> #line 87 "include/linux/plist.h"
1539c1561
< #line 36 "include/linux/rtmutex.h"
---
> #line 38 "include/linux/rtmutex.h"
1541c1563
< #line 42 "include/linux/resource.h"
---
> #line 41 "include/linux/resource.h"
1546c1568,1578
< #line 74
---
> #line 85 "include/linux/resource.h"
> struct timerqueue_node {
>    struct rb_node node ;
>    ktime_t expires ;
> };
> #line 12 "include/linux/timerqueue.h"
> struct timerqueue_head {
>    struct rb_root head ;
>    struct timerqueue_node *next ;
> };
> #line 50
1548c1580
< #line 75
---
> #line 51
1550c1582
< #line 84
---
> #line 60
1555c1587
< #line 89 "include/linux/resource.h"
---
> #line 65 "include/linux/timerqueue.h"
1557,1558c1589
<    struct rb_node node ;
<    ktime_t _expires ;
---
>    struct timerqueue_node node ;
1563d1593
<    struct list_head cb_entry ;
1568c1598
< #line 130 "include/linux/hrtimer.h"
---
> #line 127 "include/linux/hrtimer.h"
1572,1573c1602
<    struct rb_root active ;
<    struct rb_node *first ;
---
>    struct timerqueue_head active ;
1579c1608
< #line 154 "include/linux/hrtimer.h"
---
> #line 149 "include/linux/hrtimer.h"
1581c1610
<    spinlock_t lock ;
---
>    raw_spinlock_t lock ;
1584a1614
>    int hang_detected ;
1585a1616,1618
>    unsigned long nr_retries ;
>    unsigned long nr_hangs ;
>    ktime_t max_hang_time ;
1587c1620
< #line 471 "include/linux/hrtimer.h"
---
> #line 440 "include/linux/hrtimer.h"
1604c1637
< #line 841 "include/linux/sysctl.h"
---
> #line 835 "include/linux/sysctl.h"
1621c1654
< union __anonunion_ldv_13964_113 {
---
> union __anonunion_ldv_15007_131 {
1626c1659
< union __anonunion_type_data_114 {
---
> union __anonunion_type_data_132 {
1632c1665
< union __anonunion_payload_115 {
---
> union __anonunion_payload_133 {
1633a1667
>    void *rcudata ;
1646c1680
<    union __anonunion_ldv_13964_113 ldv_13964 ;
---
>    union __anonunion_ldv_15007_131 ldv_15007 ;
1654,1655c1688,1689
<    union __anonunion_type_data_114 type_data ;
<    union __anonunion_payload_115 payload ;
---
>    union __anonunion_type_data_132 type_data ;
>    union __anonunion_payload_133 payload ;
1657c1691
< #line 291
---
> #line 292
1659c1693
< #line 70 "include/linux/selinux.h"
---
> #line 28 "include/linux/selinux.h"
1704c1738
< #line 279
---
> #line 263
1706c1740
< #line 280
---
> #line 264
1708,1710c1742,1744
< #line 281
< struct bio;
< #line 282
---
> #line 265
> struct bio_list;
> #line 266
1712,1715c1746,1747
< #line 283
< struct bts_context;
< #line 284
< struct perf_counter_context;
---
> #line 267
> struct perf_event_context;
1718,1720c1750
< #line 148
< struct task_group;
< #line 350
---
> #line 362
1722c1752
< #line 431 "include/linux/sched.h"
---
> #line 403 "include/linux/sched.h"
1729c1759
< #line 466 "include/linux/sched.h"
---
> #line 445 "include/linux/sched.h"
1739c1769,1776
< #line 474 "include/linux/sched.h"
---
> #line 453 "include/linux/sched.h"
> struct cpu_itimer {
>    cputime_t expires ;
>    cputime_t incr ;
>    u32 error ;
>    u32 incr_error ;
> };
> #line 460 "include/linux/sched.h"
1745c1782
< #line 491 "include/linux/sched.h"
---
> #line 477 "include/linux/sched.h"
1751c1788,1790
< #line 527
---
> #line 513
> struct autogroup;
> #line 514
1753c1792
< #line 527
---
> #line 514
1755c1794
< #line 527
---
> #line 514
1757c1796
< #line 527 "include/linux/sched.h"
---
> #line 514 "include/linux/sched.h"
1759c1798
<    atomic_t count ;
---
>    atomic_t sigcnt ;
1760a1800
>    int nr_threads ;
1773,1776c1813
<    cputime_t it_prof_expires ;
<    cputime_t it_virt_expires ;
<    cputime_t it_prof_incr ;
<    cputime_t it_virt_incr ;
---
>    struct cpu_itimer it[2U] ;
1782a1820
>    struct autogroup *autogroup ;
1788a1827,1828
>    cputime_t prev_utime ;
>    cputime_t prev_stime ;
1800a1841,1842
>    unsigned long maxrss ;
>    unsigned long cmaxrss ;
1807a1850,1852
>    int oom_adj ;
>    int oom_score_adj ;
>    struct mutex cred_guard_mutex ;
1809c1854
< #line 663 "include/linux/sched.h"
---
> #line 669 "include/linux/sched.h"
1816a1862
>    atomic_t fanotify_listeners ;
1825,1827d1870
<    struct task_group *tg ;
<    struct kobject kobj ;
<    struct delayed_work work ;
1830,1831d1872
< #line 713
< struct backing_dev_info;
1832a1874,1875
> struct backing_dev_info;
> #line 715
1834c1877
< #line 715 "include/linux/sched.h"
---
> #line 716 "include/linux/sched.h"
1842c1885
< #line 732 "include/linux/sched.h"
---
> #line 733 "include/linux/sched.h"
1857,1925c1900
< #line 774
< enum cpu_idle_type {
<     CPU_IDLE = 0,
<     CPU_NOT_IDLE = 1,
<     CPU_NEWLY_IDLE = 2,
<     CPU_MAX_IDLE_TYPES = 3
< } ;
< #line 857 "include/linux/sched.h"
< struct sched_group {
<    struct sched_group *next ;
<    unsigned int cpu_power ;
<    unsigned long cpumask[0U] ;
< };
< #line 884
< enum sched_domain_level {
<     SD_LV_NONE = 0,
<     SD_LV_SIBLING = 1,
<     SD_LV_MC = 2,
<     SD_LV_CPU = 3,
<     SD_LV_NODE = 4,
<     SD_LV_ALLNODES = 5,
<     SD_LV_MAX = 6
< } ;
< #line 898 "include/linux/sched.h"
< struct sched_domain {
<    struct sched_domain *parent ;
<    struct sched_domain *child ;
<    struct sched_group *groups ;
<    unsigned long min_interval ;
<    unsigned long max_interval ;
<    unsigned int busy_factor ;
<    unsigned int imbalance_pct ;
<    unsigned int cache_nice_tries ;
<    unsigned int busy_idx ;
<    unsigned int idle_idx ;
<    unsigned int newidle_idx ;
<    unsigned int wake_idx ;
<    unsigned int forkexec_idx ;
<    unsigned int smt_gain ;
<    int flags ;
<    enum sched_domain_level level ;
<    unsigned long last_balance ;
<    unsigned int balance_interval ;
<    unsigned int nr_balance_failed ;
<    u64 last_update ;
<    unsigned int lb_count[3U] ;
<    unsigned int lb_failed[3U] ;
<    unsigned int lb_balanced[3U] ;
<    unsigned int lb_imbalance[3U] ;
<    unsigned int lb_gained[3U] ;
<    unsigned int lb_hot_gained[3U] ;
<    unsigned int lb_nobusyg[3U] ;
<    unsigned int lb_nobusyq[3U] ;
<    unsigned int alb_count ;
<    unsigned int alb_failed ;
<    unsigned int alb_pushed ;
<    unsigned int sbe_count ;
<    unsigned int sbe_balanced ;
<    unsigned int sbe_pushed ;
<    unsigned int sbf_count ;
<    unsigned int sbf_balanced ;
<    unsigned int sbf_pushed ;
<    unsigned int ttwu_wake_remote ;
<    unsigned int ttwu_move_affine ;
<    unsigned int ttwu_move_balance ;
<    char *name ;
<    unsigned long span[0U] ;
< };
< #line 993
---
> #line 1009
1927c1902
< #line 1014
---
> #line 1031
1929c1904
< #line 1016
---
> #line 1033
1931c1906
< #line 1017 "include/linux/sched.h"
---
> #line 1034 "include/linux/sched.h"
1940,1945c1915
<    int (*select_task_rq)(struct task_struct * , int  ) ;
<    unsigned long (*load_balance)(struct rq * , int  , struct rq * , unsigned long  ,
<                                  struct sched_domain * , enum cpu_idle_type  , int * ,
<                                  int * ) ;
<    int (*move_one_task)(struct rq * , int  , struct rq * , struct sched_domain * ,
<                         enum cpu_idle_type  ) ;
---
>    int (*select_task_rq)(struct rq * , struct task_struct * , int  , int  ) ;
1948c1918,1919
<    void (*task_wake_up)(struct rq * , struct task_struct * ) ;
---
>    void (*task_waking)(struct rq * , struct task_struct * ) ;
>    void (*task_woken)(struct rq * , struct task_struct * ) ;
1954c1925
<    void (*task_new)(struct rq * , struct task_struct * ) ;
---
>    void (*task_fork)(struct task_struct * ) ;
1958c1929,1930
<    void (*moved_group)(struct task_struct * ) ;
---
>    unsigned int (*get_rr_interval)(struct rq * , struct task_struct * ) ;
>    void (*task_move_group)(struct task_struct * , int  ) ;
1960c1932
< #line 1070 "include/linux/sched.h"
---
> #line 1096 "include/linux/sched.h"
1965,1979c1937,1938
< #line 1075 "include/linux/sched.h"
< struct sched_entity {
<    struct load_weight load ;
<    struct rb_node run_node ;
<    struct list_head group_node ;
<    unsigned int on_rq ;
<    u64 exec_start ;
<    u64 sum_exec_runtime ;
<    u64 vruntime ;
<    u64 prev_sum_exec_runtime ;
<    u64 last_wakeup ;
<    u64 avg_overlap ;
<    u64 nr_migrations ;
<    u64 start_runtime ;
<    u64 avg_wakeup ;
---
> #line 1101 "include/linux/sched.h"
> struct sched_statistics {
1998d1956
<    u64 nr_forced2_migrations ;
2007a1966,1978
> };
> #line 1136 "include/linux/sched.h"
> struct sched_entity {
>    struct load_weight load ;
>    struct rb_node run_node ;
>    struct list_head group_node ;
>    unsigned int on_rq ;
>    u64 exec_start ;
>    u64 sum_exec_runtime ;
>    u64 vruntime ;
>    u64 prev_sum_exec_runtime ;
>    u64 nr_migrations ;
>    struct sched_statistics statistics ;
2012c1983
< #line 1147
---
> #line 1162
2014c1985
< #line 1147 "include/linux/sched.h"
---
> #line 1162 "include/linux/sched.h"
2025,2027c1996,2005
< #line 1164
< struct linux_binfmt;
< #line 1164
---
> #line 1186
> struct mem_cgroup;
> #line 1186 "include/linux/sched.h"
> struct memcg_batch_info {
>    int do_batch ;
>    struct mem_cgroup *memcg ;
>    unsigned long bytes ;
>    unsigned long memsw_bytes ;
> };
> #line 1526
2029c2007
< #line 1164
---
> #line 1526
2031c2009
< #line 1164
---
> #line 1526
2033c2011
< #line 1164
---
> #line 1526
2035c2013
< #line 1164 "include/linux/sched.h"
---
> #line 1526 "include/linux/sched.h"
2052d2029
<    s8 oomkilladj ;
2060d2036
<    struct linux_binfmt *binfmt ;
2080d2055
<    struct bts_context *bts ;
2103d2077
<    struct mutex cred_guard_mutex ;
2133c2107
<    spinlock_t pi_lock ;
---
>    raw_spinlock_t pi_lock ;
2138d2111
<    int hardirqs_enabled ;
2140d2112
<    unsigned int hardirq_enable_event ;
2141a2114
>    unsigned int hardirq_enable_event ;
2143c2116,2117
<    int softirqs_enabled ;
---
>    int hardirqs_enabled ;
>    int hardirq_context ;
2145d2118
<    unsigned int softirq_disable_event ;
2146a2120
>    unsigned int softirq_disable_event ;
2148c2122
<    int hardirq_context ;
---
>    int softirqs_enabled ;
2156,2157c2130
<    struct bio *bio_list ;
<    struct bio **bio_tail ;
---
>    struct bio_list *bio_list ;
2167a2141
>    int mems_allowed_change_disable ;
2168a2143
>    int cpuset_slab_spread_rotor ;
2175,2177c2150,2152
<    struct perf_counter_context *perf_counter_ctxp ;
<    struct mutex perf_counter_mutex ;
<    struct list_head perf_counter_list ;
---
>    struct perf_event_context *perf_event_ctxp[2U] ;
>    struct mutex perf_event_mutex ;
>    struct list_head perf_event_list ;
2192a2168
>    struct memcg_batch_info memcg_batch ;
2194c2170
< #line 549 "include/linux/i2c.h"
---
> #line 575 "include/linux/i2c.h"
2201c2177
<    struct platform_device_id *id_entry ;
---
>    struct platform_device_id  const  *id_entry ;
2204c2180
< #line 57 "include/linux/platform_device.h"
---
> #line 113 "include/linux/platform_device.h"
2212c2188
<    struct platform_device_id *id_table ;
---
>    struct platform_device_id  const  *id_table ;
2214c2190
< #line 166 "include/linux/regulator/consumer.h"
---
> #line 174 "include/linux/regulator/consumer.h"
2216c2192
< #line 167
---
> #line 175
2218c2194
< #line 178 "include/linux/regulator/consumer.h"
---
> #line 186 "include/linux/regulator/consumer.h"
2221c2197
<    int (*set_voltage)(struct regulator_dev * , int  , int  ) ;
---
>    int (*set_voltage)(struct regulator_dev * , int  , int  , unsigned int * ) ;
2229a2206
>    int (*enable_time)(struct regulator_dev * ) ;
2237c2214
< #line 119 "include/linux/regulator/driver.h"
---
> #line 127 "include/linux/regulator/driver.h"
2242c2219
< #line 124 "include/linux/regulator/driver.h"
---
> #line 132 "include/linux/regulator/driver.h"
2252c2229
< #line 151
---
> #line 159
2254c2231
< #line 151 "include/linux/regulator/driver.h"
---
> #line 159 "include/linux/regulator/driver.h"
2257a2235,2236
>    int open_count ;
>    int exclusive ;
2270c2249,2445
< #line 199
---
> #line 209 "include/linux/regulator/driver.h"
> struct taskstats {
>    __u16 version ;
>    __u32 ac_exitcode ;
>    __u8 ac_flag ;
>    __u8 ac_nice ;
>    __u64 cpu_count ;
>    __u64 cpu_delay_total ;
>    __u64 blkio_count ;
>    __u64 blkio_delay_total ;
>    __u64 swapin_count ;
>    __u64 swapin_delay_total ;
>    __u64 cpu_run_real_total ;
>    __u64 cpu_run_virtual_total ;
>    char ac_comm[32U] ;
>    __u8 ac_sched ;
>    __u8 ac_pad[3U] ;
>    __u32 ac_uid ;
>    __u32 ac_gid ;
>    __u32 ac_pid ;
>    __u32 ac_ppid ;
>    __u32 ac_btime ;
>    __u64 ac_etime ;
>    __u64 ac_utime ;
>    __u64 ac_stime ;
>    __u64 ac_minflt ;
>    __u64 ac_majflt ;
>    __u64 coremem ;
>    __u64 virtmem ;
>    __u64 hiwater_rss ;
>    __u64 hiwater_vm ;
>    __u64 read_char ;
>    __u64 write_char ;
>    __u64 read_syscalls ;
>    __u64 write_syscalls ;
>    __u64 read_bytes ;
>    __u64 write_bytes ;
>    __u64 cancelled_write_bytes ;
>    __u64 nvcsw ;
>    __u64 nivcsw ;
>    __u64 ac_utimescaled ;
>    __u64 ac_stimescaled ;
>    __u64 cpu_scaled_run_real_total ;
>    __u64 freepages_count ;
>    __u64 freepages_delay_total ;
> };
> #line 150 "include/linux/idr.h"
> struct cgroupfs_root;
> #line 152
> struct cgroup;
> #line 153
> struct css_id;
> #line 56 "include/linux/cgroup.h"
> struct cgroup_subsys_state {
>    struct cgroup *cgroup ;
>    atomic_t refcnt ;
>    unsigned long flags ;
>    struct css_id *id ;
> };
> #line 194 "include/linux/cgroup.h"
> struct cgroup {
>    unsigned long flags ;
>    atomic_t count ;
>    struct list_head sibling ;
>    struct list_head children ;
>    struct cgroup *parent ;
>    struct dentry *dentry ;
>    struct cgroup_subsys_state *subsys[64U] ;
>    struct cgroupfs_root *root ;
>    struct cgroup *top_cgroup ;
>    struct list_head css_sets ;
>    struct list_head release_list ;
>    struct list_head pidlists ;
>    struct mutex pidlist_mutex ;
>    struct rcu_head rcu_head ;
>    struct list_head event_list ;
>    spinlock_t event_list_lock ;
> };
> #line 247 "include/linux/cgroup.h"
> struct css_set {
>    atomic_t refcount ;
>    struct hlist_node hlist ;
>    struct list_head tasks ;
>    struct list_head cg_links ;
>    struct cgroup_subsys_state *subsys[64U] ;
>    struct rcu_head rcu_head ;
> };
> #line 105 "include/linux/swap.h"
> struct reclaim_state {
>    unsigned long reclaimed_slab ;
> };
> #line 166 "include/linux/mm.h"
> struct vm_fault {
>    unsigned int flags ;
>    unsigned long pgoff ;
>    void *virtual_address ;
>    struct page *page ;
> };
> #line 183 "include/linux/mm.h"
> struct vm_operations_struct {
>    void (*open)(struct vm_area_struct * ) ;
>    void (*close)(struct vm_area_struct * ) ;
>    int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
>    int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
>    int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
>    int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
>    struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
>    int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
>                   unsigned long  ) ;
> };
> #line 30 "include/linux/suspend.h"
> typedef int suspend_state_t;
> #line 341 "include/linux/suspend.h"
> struct regulator_state {
>    int uV ;
>    unsigned int mode ;
>    int enabled ;
>    int disabled ;
> };
> #line 61 "include/linux/regulator/machine.h"
> struct regulation_constraints {
>    char *name ;
>    int min_uV ;
>    int max_uV ;
>    int min_uA ;
>    int max_uA ;
>    unsigned int valid_modes_mask ;
>    unsigned int valid_ops_mask ;
>    int input_uV ;
>    struct regulator_state state_disk ;
>    struct regulator_state state_mem ;
>    struct regulator_state state_standby ;
>    suspend_state_t initial_state ;
>    unsigned int initial_mode ;
>    unsigned char always_on : 1 ;
>    unsigned char boot_on : 1 ;
>    unsigned char apply_uV : 1 ;
> };
> #line 129 "include/linux/regulator/machine.h"
> struct regulator_consumer_supply {
>    struct device *dev ;
>    char const   *dev_name ;
>    char const   *supply ;
> };
> #line 147 "include/linux/regulator/machine.h"
> struct regulator_init_data {
>    char const   *supply_regulator ;
>    struct device *supply_regulator_dev ;
>    struct regulation_constraints constraints ;
>    int num_consumer_supplies ;
>    struct regulator_consumer_supply *consumer_supplies ;
>    int (*regulator_init)(void * ) ;
>    void *driver_data ;
> };
> #line 117 "include/linux/kmemleak.h"
> struct kmem_cache_cpu {
>    void **freelist ;
>    struct page *page ;
>    int node ;
>    unsigned int stat[18U] ;
> };
> #line 44 "include/linux/slub_def.h"
> struct kmem_cache_node {
>    spinlock_t list_lock ;
>    unsigned long nr_partial ;
>    struct list_head partial ;
>    atomic_long_t nr_slabs ;
>    atomic_long_t total_objects ;
>    struct list_head full ;
> };
> #line 55 "include/linux/slub_def.h"
> struct kmem_cache_order_objects {
>    unsigned long x ;
> };
> #line 65 "include/linux/slub_def.h"
> struct kmem_cache {
>    struct kmem_cache_cpu *cpu_slab ;
>    unsigned long flags ;
>    int size ;
>    int objsize ;
>    int offset ;
>    struct kmem_cache_order_objects oo ;
>    struct kmem_cache_order_objects max ;
>    struct kmem_cache_order_objects min ;
>    gfp_t allocflags ;
>    int refcount ;
>    void (*ctor)(void * ) ;
>    int inuse ;
>    int align ;
>    unsigned long min_partial ;
>    char const   *name ;
>    struct list_head list ;
>    struct kobject kobj ;
>    int remote_node_defrag_ratio ;
>    struct kmem_cache_node *node[1024U] ;
> };
> #line 336 "include/linux/slab.h"
2278c2453
< #line 33 "include/linux/irq.h"
---
> #line 198 "include/linux/irq.h"
2280c2455,2460
< #line 82 "include/linux/interrupt.h"
---
> #line 40 "include/asm-generic/sections.h"
> struct exception_table_entry {
>    unsigned long insn ;
>    unsigned long fixup ;
> };
> #line 100 "include/linux/interrupt.h"
2284,2285d2463
<    cpumask_t mask ;
<    char const   *name ;
2289d2466
<    struct proc_dir_entry *dir ;
2292a2470,2471
>    char const   *name ;
>    struct proc_dir_entry *dir ;
2294c2473
< #line 623 "include/linux/interrupt.h"
---
> #line 661 "include/linux/interrupt.h"
2303,2304d2481
<    struct workqueue_struct *irq_wq ;
<    struct work_struct irq_work ;
2306c2483,2488
<    int irq_masks[5U] ;
---
>    int irq_masks_cur[5U] ;
>    int irq_masks_cache[5U] ;
>    unsigned char has_gpio_ena : 1 ;
>    unsigned char has_cs_sts : 1 ;
>    unsigned char charger_irq_wake : 1 ;
>    int num_gpio ;
2307a2490
>    struct completion auxadc_done ;
2334c2517,2524
< #line 43
---
> #line 43 "include/linux/mfd/wm831x/pdata.h"
> struct wm831x_buckv_pdata {
>    int dvs_gpio ;
>    int dvs_control_src ;
>    int dvs_init_state ;
>    int dvs_state_gpio ;
> };
> #line 60
2342c2532
< #line 51 "include/linux/mfd/wm831x/pdata.h"
---
> #line 68 "include/linux/mfd/wm831x/pdata.h"
2348c2538
< #line 60 "include/linux/mfd/wm831x/pdata.h"
---
> #line 77 "include/linux/mfd/wm831x/pdata.h"
2356c2546
< #line 68
---
> #line 85
2363c2553
< #line 75 "include/linux/mfd/wm831x/pdata.h"
---
> #line 92 "include/linux/mfd/wm831x/pdata.h"
2370c2560
< #line 81 "include/linux/mfd/wm831x/pdata.h"
---
> #line 98 "include/linux/mfd/wm831x/pdata.h"
2373a2564
>    int irq_base ;
2386c2577
< #line 112 "include/linux/mfd/wm831x/pdata.h"
---
> #line 130 "include/linux/mfd/wm831x/pdata.h"
2392a2584,2587
>    int dvs_gpio ;
>    int dvs_gpio_state ;
>    int on_vsel ;
>    int dvs_vsel ;
2393a2589,2590
> #line 3449 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> typedef int ldv_func_ret_type___0;
2396,2398c2593
< #line 185 "include/linux/kernel.h"
< extern int snprintf(char * , size_t  , char const   *  , ...) ;
< #line 241
---
> #line 71 "include/linux/printk.h"
2400,2426c2595,2598
< #line 9 "include/asm-generic/getorder.h"
< __inline static int get_order(unsigned long size ) 
< { 
<   int order ;
< 
<   {
< #line 13
<   size = (size - 1UL) >> 11;
< #line 14
<   order = -1;
<   ldv_4354: 
< #line 16
<   size = size >> 1;
< #line 17
<   order = order + 1;
< #line 18
<   if (size != 0UL) {
< #line 19
<     goto ldv_4354;
<   } else {
< 
<   }
< 
< #line 19
<   return (order);
< }
< }
---
> #line 69 "include/asm-generic/bug.h"
> extern void warn_slowpath_null(char const   * , int const    ) ;
> #line 189 "include/linux/kernel.h"
> extern int snprintf(char * , size_t  , char const   *  , ...) ;
2449,2576c2621,2622
< #line 314 "include/linux/gfp.h"
< extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
< #line 79 "include/linux/kobject.h"
< __inline static char const   *kobject_name(struct kobject  const  *kobj ) 
< { 
< 
< 
<   {
< #line 81
<   return ((char const   *)kobj->name);
< }
< }
< #line 194 "include/linux/rcupdate.h"
< __inline static void rcu_read_lock_sched_notrace(void) 
< { 
< 
< 
<   {
< #line 198
<   return;
< }
< }
< #line 138 "include/linux/slab.h"
< extern void kfree(void const   * ) ;
< #line 79 "include/trace/events/kmem.h"
< extern struct tracepoint __tracepoint_kmalloc ;
< #line 79 "include/trace/events/kmem.h"
< __inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
<                                    size_t bytes_alloc , gfp_t gfp_flags ) 
< { 
<   void **it_func ;
<   void **_________p1 ;
<   long tmp ;
< 
<   {
< #line 47
<   tmp = __builtin_expect(__tracepoint_kmalloc.state != 0, 0L);
< #line 47
<   if (tmp != 0L) {
< #line 47
<     rcu_read_lock_sched_notrace();
< #line 47
<     _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
< #line 47
<     it_func = _________p1;
< #line 47
<     if ((unsigned long )it_func != (unsigned long )((void **)0)) {
<       ldv_10006: 
< #line 47
<       (*((void (*)(unsigned long  , void const   * , size_t  , size_t  , gfp_t  ))*it_func))(call_site,
<                                                                                              ptr,
<                                                                                              bytes_req,
<                                                                                              bytes_alloc,
<                                                                                              gfp_flags);
< #line 47
<       it_func = it_func + 1;
< #line 47
<       if ((unsigned long )*it_func != (unsigned long )((void *)0)) {
< #line 48
<         goto ldv_10006;
<       } else {
< 
<       }
< 
<     } else {
< 
<     }
< #line 47
<     rcu_read_lock_sched_notrace();
<   } else {
< 
<   }
< #line 49
<   return;
< }
< }
< #line 27 "include/linux/kmemleak.h"
< extern void kmemleak_alloc(void const   * , size_t  , int  , gfp_t  ) ;
< #line 142 "include/linux/slub_def.h"
< extern struct kmem_cache kmalloc_caches[14U] ;
< #line 148 "include/linux/slub_def.h"
< __inline static int kmalloc_index(size_t size ) 
< { 
< 
< 
<   {
< #line 150
<   if (size == 0UL) {
< #line 151
<     return (0);
<   } else {
< 
<   }
< #line 153
<   if (size <= 8UL) {
< #line 154
<     return (3);
<   } else {
< 
<   }
< #line 156
<   if (size > 64UL && size <= 96UL) {
< #line 157
<     return (1);
<   } else {
< 
<   }
< #line 158
<   if (size > 128UL && size <= 192UL) {
< #line 159
<     return (2);
<   } else {
< 
<   }
< #line 160
<   if (size <= 8UL) {
< #line 160
<     return (3);
<   } else {
< 
<   }
< #line 161
<   if (size <= 16UL) {
< #line 161
<     return (4);
<   } else {
< 
<   }
---
> #line 159 "include/linux/mutex.h"
> extern int mutex_trylock(struct mutex * ) ;
2578,2592c2624
<   if (size <= 32UL) {
< #line 162
<     return (5);
<   } else {
< 
<   }
< #line 163
<   if (size <= 64UL) {
< #line 163
<     return (6);
<   } else {
< 
<   }
< #line 164
<   if (size <= 128UL) {
---
> int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) ;
2594,2613c2626
<     return (7);
<   } else {
< 
<   }
< #line 165
<   if (size <= 256UL) {
< #line 165
<     return (8);
<   } else {
< 
<   }
< #line 166
<   if (size <= 512UL) {
< #line 166
<     return (9);
<   } else {
< 
<   }
< #line 167
<   if (size <= 1024UL) {
---
> extern void mutex_unlock(struct mutex * ) ;
2615,2708c2628,2675
<     return (10);
<   } else {
< 
<   }
< #line 168
<   if (size <= 2048UL) {
< #line 168
<     return (11);
<   } else {
< 
<   }
< #line 169
<   if (size <= 4096UL) {
< #line 169
<     return (12);
<   } else {
< 
<   }
< #line 174
<   if (size <= 8192UL) {
< #line 174
<     return (13);
<   } else {
< 
<   }
< #line 175
<   if (size <= 16384UL) {
< #line 175
<     return (14);
<   } else {
< 
<   }
< #line 176
<   if (size <= 32768UL) {
< #line 176
<     return (15);
<   } else {
< 
<   }
< #line 177
<   if (size <= 65536UL) {
< #line 177
<     return (16);
<   } else {
< 
<   }
< #line 178
<   if (size <= 131072UL) {
< #line 178
<     return (17);
<   } else {
< 
<   }
< #line 179
<   if (size <= 262144UL) {
< #line 179
<     return (18);
<   } else {
< 
<   }
< #line 180
<   if (size <= 524288UL) {
< #line 180
<     return (19);
<   } else {
< 
<   }
< #line 181
<   if (size <= 1048576UL) {
< #line 181
<     return (20);
<   } else {
< 
<   }
< #line 182
<   if (size <= 2097152UL) {
< #line 182
<     return (21);
<   } else {
< 
<   }
< #line 183
<   return (-1);
< }
< }
< #line 200 "include/linux/slub_def.h"
< __inline static struct kmem_cache *kmalloc_slab(size_t size ) 
< { 
<   int index ;
<   int tmp ;
< 
<   {
< #line 202
<   tmp = kmalloc_index(size);
---
> void ldv_mutex_unlock_3(struct mutex *ldv_func_arg1 ) ;
> #line 171
> void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) ;
> #line 7 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> extern void mutex_lock(struct mutex * ) ;
> #line 10
> void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
> #line 14
> void ldv_mutex_lock_4(struct mutex *ldv_func_arg1 ) ;
> #line 19
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) ;
> #line 20
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) ;
> #line 23
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) ;
> #line 27
> void ldv_mutex_lock_pm_mutex(struct mutex *lock ) ;
> #line 31
> void ldv_mutex_unlock_pm_mutex(struct mutex *lock ) ;
> #line 90 "include/linux/module.h"
> extern struct module __this_module ;
> #line 560 "include/linux/device.h"
> extern void *dev_get_drvdata(struct device  const  * ) ;
> #line 561
> extern void dev_set_drvdata(struct device * , void * ) ;
> #line 646
> extern int dev_printk(char const   * , struct device  const  * , char const   *  , ...) ;
> #line 655
> extern int dev_err(struct device  const  * , char const   *  , ...) ;
> #line 657
> extern int dev_warn(struct device  const  * , char const   *  , ...) ;
> #line 40 "include/linux/platform_device.h"
> extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
>                                               unsigned int  ) ;
> #line 43
> extern int platform_get_irq_byname(struct platform_device * , char const   * ) ;
> #line 124
> extern int platform_driver_register(struct platform_driver * ) ;
> #line 125
> extern void platform_driver_unregister(struct platform_driver * ) ;
> #line 194 "include/linux/regulator/driver.h"
> extern struct regulator_dev *regulator_register(struct regulator_desc * , struct device * ,
>                                                 struct regulator_init_data * , void * ) ;
> #line 197
> extern void regulator_unregister(struct regulator_dev * ) ;
> #line 199
> extern int regulator_notifier_call_chain(struct regulator_dev * , unsigned long  ,
>                                          void * ) ;
2710c2677
<   index = tmp;
---
> extern void *rdev_get_drvdata(struct regulator_dev * ) ;
2712,2727c2679,2689
<   if (index == 0) {
< #line 205
<     return (0);
<   } else {
< 
<   }
< #line 207
<   return ((struct kmem_cache *)(& kmalloc_caches) + (unsigned long )index);
< }
< }
< #line 217
< extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
< #line 218
< extern void *__kmalloc(size_t  , gfp_t  ) ;
< #line 224 "include/linux/slub_def.h"
< __inline static void *kmem_cache_alloc_notrace(struct kmem_cache *s , gfp_t gfpflags ) 
---
> extern int rdev_get_id(struct regulator_dev * ) ;
> #line 150 "include/asm-generic/gpio.h"
> extern int gpio_request(unsigned int  , char const   * ) ;
> #line 151
> extern void gpio_free(unsigned int  ) ;
> #line 154
> extern int gpio_direction_output(unsigned int  , int  ) ;
> #line 167
> extern void __gpio_set_value(unsigned int  , int  ) ;
> #line 31 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/gpio.h"
> __inline static void gpio_set_value(unsigned int gpio , int value ) 
2729d2690
<   void *tmp ;
2731,2744d2691
<   {
< #line 226
<   tmp = kmem_cache_alloc(s, gfpflags);
< #line 226
<   return (tmp);
< }
< }
< #line 230 "include/linux/slub_def.h"
< __inline static void *kmalloc_large(size_t size , gfp_t flags ) 
< { 
<   unsigned int order ;
<   int tmp ;
<   void *ret ;
<   unsigned long tmp___0 ;
2747,2761c2694,2697
< #line 232
<   tmp = get_order(size);
< #line 232
<   order = (unsigned int )tmp;
< #line 233
<   tmp___0 = __get_free_pages(flags | 16384U, order);
< #line 233
<   ret = (void *)tmp___0;
< #line 235
<   kmemleak_alloc((void const   *)ret, size, 1, flags);
< #line 236
<   trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, 4096UL << (int )order,
<                 flags);
< #line 238
<   return (ret);
---
> #line 33
>   __gpio_set_value(gpio, value);
> #line 34
>   return;
2764c2700,2704
< #line 241 "include/linux/slub_def.h"
---
> #line 142 "include/linux/slab.h"
> extern void kfree(void const   * ) ;
> #line 216 "include/linux/slub_def.h"
> extern void *__kmalloc(size_t  , gfp_t  ) ;
> #line 250 "include/linux/slub_def.h"
2767,2771c2707
<   void *ret ;
<   void *tmp ;
<   struct kmem_cache *s ;
<   struct kmem_cache *tmp___0 ;
<   void *tmp___1 ;
---
>   void *tmp___2 ;
2774,2814c2710,2713
< #line 245
<   if (0) {
< #line 246
<     if (size > 8192UL) {
< #line 247
<       tmp = kmalloc_large(size, flags);
< #line 247
<       return (tmp);
<     } else {
< 
<     }
< #line 249
<     if ((flags & 1U) == 0U) {
< #line 250
<       tmp___0 = kmalloc_slab(size);
< #line 250
<       s = tmp___0;
< #line 252
<       if ((unsigned long )s == (unsigned long )((struct kmem_cache *)0)) {
< #line 253
<         return (16);
<       } else {
< 
<       }
< #line 255
<       ret = kmem_cache_alloc_notrace(s, flags);
< #line 257
<       trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, (size_t )s->size,
<                     flags);
< #line 259
<       return (ret);
<     } else {
< 
<     }
<   } else {
< 
<   }
< #line 262
<   tmp___1 = __kmalloc(size, flags);
< #line 262
<   return (tmp___1);
---
> #line 265
>   tmp___2 = __kmalloc(size, flags);
> #line 265
>   return (tmp___2);
2817c2716
< #line 313 "include/linux/slab.h"
---
> #line 319 "include/linux/slab.h"
2823c2722
< #line 315
---
> #line 321
2825c2724
< #line 315
---
> #line 321
2829,2832c2728,2741
< #line 89 "include/linux/module.h"
< extern struct module __this_module ;
< #line 431 "include/linux/device.h"
< __inline static char const   *dev_name(struct device  const  *dev ) 
---
> #line 131 "include/linux/interrupt.h"
> extern int request_threaded_irq(unsigned int  , irqreturn_t (*)(int  , void * ) ,
>                                 irqreturn_t (*)(int  , void * ) , unsigned long  ,
>                                 char const   * , void * ) ;
> #line 177
> extern void free_irq(unsigned int  , void * ) ;
> #line 287 "include/linux/mfd/wm831x/core.h"
> extern int wm831x_reg_read(struct wm831x * , unsigned short  ) ;
> #line 292
> extern int wm831x_set_bits(struct wm831x * , unsigned short  , unsigned short  , unsigned short  ) ;
> #line 303 "include/linux/mfd/wm831x/core.h"
> __inline static int wm831x_request_irq(struct wm831x *wm831x , unsigned int irq ,
>                                        irqreturn_t (*handler)(int  , void * ) , unsigned long flags ,
>                                        char const   *name , void *dev ) 
2834c2743
<   char const   *tmp ;
---
>   int tmp ;
2837,2839c2746,2748
< #line 433
<   tmp = kobject_name(& dev->kobj);
< #line 433
---
> #line 310
>   tmp = request_threaded_irq(irq, 0, handler, flags, name, dev);
> #line 310
2843,2880c2752,2764
< #line 491
< extern void *dev_get_drvdata(struct device  const  * ) ;
< #line 492
< extern void dev_set_drvdata(struct device * , void * ) ;
< #line 572
< extern char const   *dev_driver_string(struct device  const  * ) ;
< #line 40 "include/linux/platform_device.h"
< extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
<                                               unsigned int  ) ;
< #line 43
< extern int platform_get_irq_byname(struct platform_device * , char const   * ) ;
< #line 68
< extern int platform_driver_register(struct platform_driver * ) ;
< #line 69
< extern void platform_driver_unregister(struct platform_driver * ) ;
< #line 184 "include/linux/regulator/driver.h"
< extern struct regulator_dev *regulator_register(struct regulator_desc * , struct device * ,
<                                                 struct regulator_init_data * , void * ) ;
< #line 187
< extern void regulator_unregister(struct regulator_dev * ) ;
< #line 189
< extern int regulator_notifier_call_chain(struct regulator_dev * , unsigned long  ,
<                                          void * ) ;
< #line 192
< extern void *rdev_get_drvdata(struct regulator_dev * ) ;
< #line 194
< extern int rdev_get_id(struct regulator_dev * ) ;
< #line 268 "include/linux/mfd/wm831x/core.h"
< extern int wm831x_reg_read(struct wm831x * , unsigned short  ) ;
< #line 273
< extern int wm831x_set_bits(struct wm831x * , unsigned short  , unsigned short  , unsigned short  ) ;
< #line 281
< extern int wm831x_request_irq(struct wm831x * , unsigned int  , irqreturn_t (*)(int  ,
<                                                                                 void * ) ,
<                               unsigned long  , char const   * , void * ) ;
< #line 285
< extern void wm831x_free_irq(struct wm831x * , unsigned int  , void * ) ;
< #line 63 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 313 "include/linux/mfd/wm831x/core.h"
> __inline static void wm831x_free_irq(struct wm831x *wm831x , unsigned int irq , void *dev ) 
> { 
> 
> 
>   {
> #line 316
>   free_irq(irq, dev);
> #line 317
>   return;
> }
> }
> #line 87 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
2891c2775
< #line 65
---
> #line 89
2893c2777
< #line 65
---
> #line 89
2895c2779
< #line 66
---
> #line 90
2897c2781
< #line 67
---
> #line 91
2899c2783
< #line 67
---
> #line 91
2901c2785
< #line 70
---
> #line 94
2903c2787
< #line 71
---
> #line 95
2905c2789
< #line 72
---
> #line 96
2910c2794
< #line 74
---
> #line 98
2912c2796
< #line 75
---
> #line 99
2915c2799
< #line 77
---
> #line 101
2920c2804
< #line 80 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 104 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
2931c2815
< #line 82
---
> #line 106
2933c2817
< #line 82
---
> #line 106
2935c2819
< #line 83
---
> #line 107
2937c2821
< #line 84
---
> #line 108
2939c2823
< #line 84
---
> #line 108
2941c2825
< #line 86
---
> #line 110
2943c2827
< #line 86
---
> #line 110
2947c2831
< #line 89 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 113 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
2958c2842
< #line 91
---
> #line 115
2960c2844
< #line 91
---
> #line 115
2962c2846
< #line 92
---
> #line 116
2964c2848
< #line 93
---
> #line 117
2966c2850
< #line 93
---
> #line 117
2968c2852
< #line 95
---
> #line 119
2970c2854
< #line 95
---
> #line 119
2974c2858
< #line 98 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 122 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
2984c2868
< #line 101
---
> #line 125
2986c2870
< #line 101
---
> #line 125
2988c2872
< #line 102
---
> #line 126
2990c2874
< #line 103
---
> #line 127
2992c2876
< #line 106
---
> #line 130
2994c2878
< #line 107
---
> #line 131
2996c2880
< #line 108
---
> #line 132
3001c2885
< #line 110
---
> #line 134
3003c2887
< #line 112
---
> #line 136
3006c2890
< #line 114
---
> #line 138
3009c2893
< #line 116
---
> #line 140
3012c2896
< #line 118
---
> #line 142
3015c2899
< #line 120
---
> #line 144
3018c2902
< #line 122
---
> #line 146
3020,3023c2904,2907
<                        "i" (122), "i" (12UL));
<   ldv_17091: ;
< #line 122
<   goto ldv_17091;
---
>                        "i" (146), "i" (12UL));
>   ldv_22289: ;
> #line 146
>   goto ldv_22289;
3027c2911
< #line 126 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 150 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3034c2918
< #line 131
---
> #line 155
3037c2921
< #line 133
---
> #line 157
3039,3040c2923,2924
< #line 134
<   goto ldv_17099;
---
> #line 158
>   goto ldv_22297;
3042c2926
< #line 136
---
> #line 160
3044,3045c2928,2929
< #line 137
<   goto ldv_17099;
---
> #line 161
>   goto ldv_22297;
3047c2931
< #line 139
---
> #line 163
3049,3050c2933,2934
< #line 140
<   goto ldv_17099;
---
> #line 164
>   goto ldv_22297;
3052c2936
< #line 142
---
> #line 166
3054,3055c2938,2939
< #line 143
<   goto ldv_17099;
---
> #line 167
>   goto ldv_22297;
3057c2941
< #line 145
---
> #line 169
3060,3061c2944,2945
<   ldv_17099: 
< #line 148
---
>   ldv_22297: 
> #line 172
3063c2947
< #line 148
---
> #line 172
3067c2951
< #line 152 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 176 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3077c2961
< #line 154
---
> #line 178
3079c2963
< #line 154
---
> #line 178
3081c2965
< #line 155
---
> #line 179
3083c2967
< #line 156
---
> #line 180
3085c2969
< #line 158
---
> #line 182
3087c2971
< #line 158
---
> #line 182
3091c2975
< #line 161 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 185 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3101c2985
< #line 164
---
> #line 188
3103c2987
< #line 164
---
> #line 188
3105c2989
< #line 165
---
> #line 189
3107c2991
< #line 166
---
> #line 190
3109c2993
< #line 168
---
> #line 192
3111c2995
< #line 168
---
> #line 192
3115c2999
< #line 171 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 195 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3123,3124c3007,3008
<   char const   *tmp___1 ;
<   char const   *tmp___2 ;
---
>   int tmp___1 ;
>   int tmp___2 ;
3127,3128c3011,3012
<   char const   *tmp___5 ;
<   char const   *tmp___6 ;
---
>   int tmp___5 ;
>   int tmp___6 ;
3130,3135d3013
<   int tmp___8 ;
<   char const   *tmp___9 ;
<   char const   *tmp___10 ;
<   int tmp___11 ;
<   int tmp___12 ;
<   int tmp___13 ;
3138c3016
< #line 173
---
> #line 197
3140c3018
< #line 173
---
> #line 197
3142c3020
< #line 174
---
> #line 198
3144c3022
< #line 178
---
> #line 202
3146c3024
< #line 179
---
> #line 203
3148c3026
< #line 180
---
> #line 204
3153,3157c3031,3035
< #line 182
<   tmp___3 = rdev_get_id(rdev);
< #line 182
<   if ((ret >> tmp___3) & 1) {
< #line 183
---
> #line 206
>   tmp___1 = rdev_get_id(rdev);
> #line 206
>   if ((ret >> tmp___1) & 1) {
> #line 207
3159,3165c3037,3040
< #line 183
<     tmp___1 = dev_name((struct device  const  *)wm831x->dev);
< #line 183
<     tmp___2 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 183
<     printk("<7>%s %s: DCDC%d under voltage\n", tmp___2, tmp___1, tmp___0 + 1);
< #line 185
---
> #line 207
>     dev_printk("<7>", (struct device  const  *)wm831x->dev, "DCDC%d under voltage\n",
>                tmp___0 + 1);
> #line 209
3170,3186c3045,3058
< #line 189
<   tmp___12 = rdev_get_id(rdev);
< #line 189
<   if (tmp___12 <= 1) {
< #line 190
<     tmp___7 = rdev_get_id(rdev);
< #line 190
<     if (((4096 << tmp___7) & ret) != 0) {
< #line 191
<       tmp___4 = rdev_get_id(rdev);
< #line 191
<       tmp___5 = dev_name((struct device  const  *)wm831x->dev);
< #line 191
<       tmp___6 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 191
<       printk("<7>%s %s: DCDC%d over voltage\n", tmp___6, tmp___5, tmp___4 + 1);
< #line 193
---
> #line 213
>   tmp___6 = rdev_get_id(rdev);
> #line 213
>   if (tmp___6 <= 1) {
> #line 214
>     tmp___3 = rdev_get_id(rdev);
> #line 214
>     if (((4096 << tmp___3) & ret) != 0) {
> #line 215
>       tmp___2 = rdev_get_id(rdev);
> #line 215
>       dev_printk("<7>", (struct device  const  *)wm831x->dev, "DCDC%d over voltage\n",
>                  tmp___2 + 1);
> #line 217
3191,3203c3063,3072
< #line 196
<     tmp___11 = rdev_get_id(rdev);
< #line 196
<     if (((256 << tmp___11) & ret) != 0) {
< #line 197
<       tmp___8 = rdev_get_id(rdev);
< #line 197
<       tmp___9 = dev_name((struct device  const  *)wm831x->dev);
< #line 197
<       tmp___10 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 197
<       printk("<7>%s %s: DCDC%d over current\n", tmp___10, tmp___9, tmp___8 + 1);
< #line 199
---
> #line 220
>     tmp___5 = rdev_get_id(rdev);
> #line 220
>     if (((256 << tmp___5) & ret) != 0) {
> #line 221
>       tmp___4 = rdev_get_id(rdev);
> #line 221
>       dev_printk("<7>", (struct device  const  *)wm831x->dev, "DCDC%d over current\n",
>                  tmp___4 + 1);
> #line 223
3211c3080
< #line 204
---
> #line 228
3213c3082
< #line 205
---
> #line 229
3215c3084
< #line 206
---
> #line 230
3220,3224c3089,3093
< #line 207
<   tmp___13 = rdev_get_id(rdev);
< #line 207
<   if (((ret >> tmp___13) & 1) == 0) {
< #line 208
---
> #line 231
>   tmp___7 = rdev_get_id(rdev);
> #line 231
>   if (((ret >> tmp___7) & 1) == 0) {
> #line 232
3229c3098
< #line 212
---
> #line 236
3233c3102
< #line 215 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 239 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3239c3108
< #line 217
---
> #line 241
3241c3110
< #line 219
---
> #line 243
3243c3112
< #line 223
---
> #line 247
3247c3116
< #line 226 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 250 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3253c3122
< #line 228
---
> #line 252
3255c3124
< #line 230
---
> #line 254
3257c3126
< #line 234
---
> #line 258
3261c3130
< #line 241 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 265 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3267c3136
< #line 244
---
> #line 268
3269c3138
< #line 245
---
> #line 269
3274c3143
< #line 246
---
> #line 270
3276c3145
< #line 247
---
> #line 271
3281c3150
< #line 248
---
> #line 272
3285,3287c3154,3156
< #line 251 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static int wm831x_buckv_set_voltage_int(struct regulator_dev *rdev , int reg , int min_uV ,
<                                         int max_uV ) 
---
> #line 275 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static int wm831x_buckv_select_min_voltage(struct regulator_dev *rdev , int min_uV ,
>                                            int max_uV ) 
3289,3291d3157
<   struct wm831x_dcdc *dcdc ;
<   void *tmp ;
<   struct wm831x *wm831x ;
3293,3294c3159
<   int tmp___0 ;
<   int tmp___1 ;
---
>   int tmp ;
3297,3303c3162
< #line 254
<   tmp = rdev_get_drvdata(rdev);
< #line 254
<   dcdc = (struct wm831x_dcdc *)tmp;
< #line 255
<   wm831x = dcdc->wm831x;
< #line 258
---
> #line 280
3305c3164
< #line 259
---
> #line 281
3308c3167
< #line 260
---
> #line 282
3310c3169
< #line 261
---
> #line 283
3313c3172
< #line 263
---
> #line 285
3316,3320c3175,3179
< #line 265
<   tmp___0 = wm831x_buckv_list_voltage(rdev, (unsigned int )vsel);
< #line 265
<   if (tmp___0 > max_uV) {
< #line 266
---
> #line 287
>   tmp = wm831x_buckv_list_voltage(rdev, (unsigned int )vsel);
> #line 287
>   if (tmp > max_uV) {
> #line 288
3325,3328c3184,3185
< #line 268
<   tmp___1 = wm831x_set_bits(wm831x, (int )((unsigned short )reg), 127, (int )vsel);
< #line 268
<   return (tmp___1);
---
> #line 290
>   return ((int )vsel);
3331,3332c3188,3228
< #line 271 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static int wm831x_buckv_set_voltage(struct regulator_dev *rdev , int min_uV , int max_uV ) 
---
> #line 293 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static int wm831x_buckv_select_max_voltage(struct regulator_dev *rdev , int min_uV ,
>                                            int max_uV ) 
> { 
>   u16 vsel ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 298
>   if (max_uV <= 599999 || max_uV > 1800000) {
> #line 299
>     return (-22);
>   } else {
> 
>   }
> #line 301
>   vsel = (unsigned int )((u16 )((max_uV + -600000) / 12500)) + 8U;
> #line 303
>   tmp = wm831x_buckv_list_voltage(rdev, (unsigned int )vsel);
> #line 303
>   if (tmp < min_uV) {
> #line 305
>     return (-22);
>   } else {
> #line 303
>     tmp___0 = wm831x_buckv_list_voltage(rdev, (unsigned int )vsel);
> #line 303
>     if (tmp___0 < max_uV) {
> #line 305
>       return (-22);
>     } else {
> 
>     }
>   }
> #line 307
>   return ((int )vsel);
> }
> }
> #line 310 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static int wm831x_buckv_set_dvs(struct regulator_dev *rdev , int state ) 
3336c3232,3263
<   u16 reg ;
---
> 
>   {
> #line 312
>   tmp = rdev_get_drvdata(rdev);
> #line 312
>   dcdc = (struct wm831x_dcdc *)tmp;
> #line 314
>   if (dcdc->dvs_gpio_state == state) {
> #line 315
>     return (0);
>   } else {
> 
>   }
> #line 317
>   dcdc->dvs_gpio_state = state;
> #line 318
>   gpio_set_value((unsigned int )dcdc->dvs_gpio, state);
> #line 325
>   return (0);
> }
> }
> #line 328 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static int wm831x_buckv_set_voltage(struct regulator_dev *rdev , int min_uV , int max_uV ,
>                                     unsigned int *selector ) 
> { 
>   struct wm831x_dcdc *dcdc ;
>   void *tmp ;
>   struct wm831x *wm831x ;
>   int on_reg ;
>   int dvs_reg ;
>   int vsel ;
>   int ret ;
3337a3265,3267
>   int tmp___1 ;
>   int __ret_warn_on ;
>   long tmp___2 ;
3340c3270
< #line 274
---
> #line 331
3342c3272
< #line 274
---
> #line 331
3344,3349c3274,3378
< #line 275
<   reg = (unsigned int )((u16 )dcdc->base) + 2U;
< #line 277
<   tmp___0 = wm831x_buckv_set_voltage_int(rdev, (int )reg, min_uV, max_uV);
< #line 277
<   return (tmp___0);
---
> #line 332
>   wm831x = dcdc->wm831x;
> #line 333
>   on_reg = dcdc->base + 2;
> #line 334
>   dvs_reg = dcdc->base + 4;
> #line 337
>   vsel = wm831x_buckv_select_min_voltage(rdev, min_uV, max_uV);
> #line 338
>   if (vsel < 0) {
> #line 339
>     return (vsel);
>   } else {
> 
>   }
> #line 341
>   *selector = (unsigned int )vsel;
> #line 344
>   if (dcdc->dvs_gpio != 0 && dcdc->on_vsel == vsel) {
> #line 345
>     tmp___0 = wm831x_buckv_set_dvs(rdev, 0);
> #line 345
>     return (tmp___0);
>   } else {
> 
>   }
> #line 347
>   if (dcdc->dvs_gpio != 0 && dcdc->dvs_vsel == vsel) {
> #line 348
>     tmp___1 = wm831x_buckv_set_dvs(rdev, 1);
> #line 348
>     return (tmp___1);
>   } else {
> 
>   }
> #line 351
>   ret = wm831x_set_bits(wm831x, (int )((unsigned short )on_reg), 127, (int )((unsigned short )vsel));
> #line 352
>   if (ret < 0) {
> #line 353
>     return (ret);
>   } else {
> 
>   }
> #line 354
>   dcdc->on_vsel = vsel;
> #line 356
>   if (dcdc->dvs_gpio == 0) {
> #line 357
>     return (ret);
>   } else {
> 
>   }
> #line 360
>   ret = wm831x_buckv_set_dvs(rdev, 0);
> #line 361
>   if (ret < 0) {
> #line 362
>     return (ret);
>   } else {
> 
>   }
> #line 367
>   vsel = wm831x_buckv_select_max_voltage(rdev, min_uV, max_uV);
> #line 368
>   if (vsel < 0) {
> #line 371
>     __ret_warn_on = vsel < 0;
> #line 371
>     tmp___2 = __builtin_expect(__ret_warn_on != 0, 0L);
> #line 371
>     if (tmp___2 != 0L) {
> #line 371
>       warn_slowpath_null("/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared",
>                          371);
>     } else {
> 
>     }
> #line 371
>     __builtin_expect(__ret_warn_on != 0, 0L);
> #line 372
>     return (0);
>   } else {
> 
>   }
> #line 376
>   if (dcdc->on_vsel == vsel) {
> #line 377
>     return (0);
>   } else {
> 
>   }
> #line 379
>   ret = wm831x_set_bits(wm831x, (int )((unsigned short )dvs_reg), 127, (int )((unsigned short )vsel));
> #line 380
>   if (ret == 0) {
> #line 381
>     dcdc->dvs_vsel = vsel;
>   } else {
> #line 383
>     dev_warn((struct device  const  *)wm831x->dev, "Failed to set DCDC DVS VSEL: %d\n",
>              ret);
>   }
> #line 386
>   return (0);
3352c3381
< #line 280 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 389 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3356a3386
>   struct wm831x *wm831x ;
3357a3388
>   int vsel ;
3361c3392
< #line 283
---
> #line 392
3363c3394
< #line 283
---
> #line 392
3365c3396,3398
< #line 284
---
> #line 393
>   wm831x = dcdc->wm831x;
> #line 394
3367,3369c3400,3411
< #line 286
<   tmp___0 = wm831x_buckv_set_voltage_int(rdev, (int )reg, uV, uV);
< #line 286
---
> #line 397
>   vsel = wm831x_buckv_select_min_voltage(rdev, uV, uV);
> #line 398
>   if (vsel < 0) {
> #line 399
>     return (vsel);
>   } else {
> 
>   }
> #line 401
>   tmp___0 = wm831x_set_bits(wm831x, (int )reg, 127, (int )((unsigned short )vsel));
> #line 401
3373c3415
< #line 289 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 404 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3378,3380d3419
<   struct wm831x *wm831x ;
<   u16 reg ;
<   int val ;
3381a3421
>   int tmp___1 ;
3384c3424
< #line 291
---
> #line 406
3386c3426
< #line 291
---
> #line 406
3388,3397c3428,3433
< #line 292
<   wm831x = dcdc->wm831x;
< #line 293
<   reg = (unsigned int )((u16 )dcdc->base) + 2U;
< #line 296
<   val = wm831x_reg_read(wm831x, (int )reg);
< #line 297
<   if (val < 0) {
< #line 298
<     return (val);
---
> #line 408
>   if (dcdc->dvs_gpio != 0 && dcdc->dvs_gpio_state != 0) {
> #line 409
>     tmp___0 = wm831x_buckv_list_voltage(rdev, (unsigned int )dcdc->dvs_vsel);
> #line 409
>     return (tmp___0);
3399c3435,3438
< 
---
> #line 411
>     tmp___1 = wm831x_buckv_list_voltage(rdev, (unsigned int )dcdc->on_vsel);
> #line 411
>     return (tmp___1);
3401,3404d3439
< #line 300
<   tmp___0 = wm831x_buckv_list_voltage(rdev, (unsigned int )val & 127U);
< #line 300
<   return (tmp___0);
3407c3442
< #line 304 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 415 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3409c3444
< #line 304
---
> #line 415
3412c3447
< #line 308 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 419 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3424c3459
< #line 311
---
> #line 422
3426c3461
< #line 311
---
> #line 422
3428c3463
< #line 312
---
> #line 423
3430c3465
< #line 313
---
> #line 424
3432c3467
< #line 316
---
> #line 427
3434,3437c3469,3472
< #line 316
<   goto ldv_17179;
<   ldv_17178: ;
< #line 317
---
> #line 427
>   goto ldv_22393;
>   ldv_22392: ;
> #line 428
3439,3440c3474,3475
< #line 318
<     goto ldv_17177;
---
> #line 429
>     goto ldv_22391;
3444c3479
< #line 316
---
> #line 427
3446,3447c3481,3482
<   ldv_17179: ;
< #line 316
---
>   ldv_22393: ;
> #line 427
3449,3450c3484,3485
< #line 317
<     goto ldv_17178;
---
> #line 428
>     goto ldv_22392;
3454,3455c3489,3490
<   ldv_17177: ;
< #line 320
---
>   ldv_22391: ;
> #line 431
3457c3492
< #line 321
---
> #line 432
3462c3497
< #line 323
---
> #line 434
3464c3499
< #line 323
---
> #line 434
3468c3503
< #line 326 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 437 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3478c3513
< #line 328
---
> #line 439
3480c3515
< #line 328
---
> #line 439
3482c3517
< #line 329
---
> #line 440
3484c3519
< #line 330
---
> #line 441
3486c3521
< #line 333
---
> #line 444
3488c3523
< #line 334
---
> #line 445
3490c3525
< #line 335
---
> #line 446
3495c3530
< #line 337
---
> #line 448
3499c3534
< #line 340 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 451 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3501c3536
< #line 340
---
> #line 451
3505,3506c3540,3625
<     & wm831x_dcdc_get_status, 0, & wm831x_buckv_set_suspend_voltage, 0, 0, & wm831x_dcdc_set_suspend_mode};
< #line 357 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
>     0, & wm831x_dcdc_get_status, 0, & wm831x_buckv_set_suspend_voltage, 0, 0, & wm831x_dcdc_set_suspend_mode};
> #line 472 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static void wm831x_buckv_dvs_init(struct wm831x_dcdc *dcdc , struct wm831x_buckv_pdata *pdata ) 
> { 
>   struct wm831x *wm831x ;
>   int ret ;
>   u16 ctrl ;
> 
>   {
> #line 475
>   wm831x = dcdc->wm831x;
> #line 479
>   if ((unsigned long )pdata == (unsigned long )((struct wm831x_buckv_pdata *)0) || pdata->dvs_gpio == 0) {
> #line 480
>     return;
>   } else {
> 
>   }
> #line 482
>   switch (pdata->dvs_control_src) {
>   case 1: 
> #line 484
>   ctrl = 4096U;
> #line 485
>   goto ldv_22412;
>   case 2: 
> #line 487
>   ctrl = 6144U;
> #line 488
>   goto ldv_22412;
>   default: 
> #line 490
>   dev_err((struct device  const  *)wm831x->dev, "Invalid DVS control source %d for %s\n",
>           pdata->dvs_control_src, (char *)(& dcdc->name));
> #line 492
>   return;
>   }
>   ldv_22412: 
> #line 495
>   ret = wm831x_set_bits(wm831x, (int )((unsigned int )((unsigned short )dcdc->base) + 4U),
>                         6144, (int )ctrl);
> #line 497
>   if (ret < 0) {
> #line 498
>     dev_err((struct device  const  *)wm831x->dev, "Failed to set %s DVS source: %d\n",
>             (char *)(& dcdc->name), ret);
> #line 500
>     return;
>   } else {
> 
>   }
> #line 503
>   ret = gpio_request((unsigned int )pdata->dvs_gpio, "DCDC DVS");
> #line 504
>   if (ret < 0) {
> #line 505
>     dev_err((struct device  const  *)wm831x->dev, "Failed to get %s DVS GPIO: %d\n",
>             (char *)(& dcdc->name), ret);
> #line 507
>     return;
>   } else {
> 
>   }
> #line 513
>   dcdc->dvs_gpio_state = pdata->dvs_init_state;
> #line 515
>   ret = gpio_direction_output((unsigned int )pdata->dvs_gpio, dcdc->dvs_gpio_state);
> #line 516
>   if (ret < 0) {
> #line 517
>     dev_err((struct device  const  *)wm831x->dev, "Failed to enable %s DVS GPIO: %d\n",
>             (char *)(& dcdc->name), ret);
> #line 519
>     gpio_free((unsigned int )pdata->dvs_gpio);
> #line 520
>     return;
>   } else {
> 
>   }
> #line 523
>   dcdc->dvs_gpio = pdata->dvs_gpio;
> #line 524
>   return;
> }
> }
> #line 526 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3517,3532c3636,3639
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   void *tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
<   char const   *tmp___5 ;
<   char const   *tmp___6 ;
<   long tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
<   long tmp___10 ;
<   char const   *tmp___11 ;
<   char const   *tmp___12 ;
<   char const   *tmp___13 ;
<   char const   *tmp___14 ;
<   int tmp___15 ;
---
>   void *tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
>   int tmp___3 ;
3535c3642
< #line 359
---
> #line 528
3537c3644
< #line 359
---
> #line 528
3539c3646
< #line 360
---
> #line 529
3541c3648
< #line 361
---
> #line 530
3543,3549c3650,3652
< #line 366
<   tmp___0 = dev_name((struct device  const  *)(& pdev->dev));
< #line 366
<   tmp___1 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 366
<   printk("<7>%s %s: Probing DCDC%d\n", tmp___1, tmp___0, id + 1);
< #line 368
---
> #line 535
>   dev_printk("<7>", (struct device  const  *)(& pdev->dev), "Probing DCDC%d\n", id + 1);
> #line 537
3551c3654
< #line 369
---
> #line 538
3556,3560c3659,3663
< #line 371
<   tmp___2 = kzalloc(72UL, 208U);
< #line 371
<   dcdc = (struct wm831x_dcdc *)tmp___2;
< #line 372
---
> #line 540
>   tmp___0 = kzalloc(88UL, 208U);
> #line 540
>   dcdc = (struct wm831x_dcdc *)tmp___0;
> #line 541
3562,3568c3665,3667
< #line 373
<     tmp___3 = dev_name((struct device  const  *)(& pdev->dev));
< #line 373
<     tmp___4 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 373
<     printk("<3>%s %s: Unable to allocate private data\n", tmp___4, tmp___3);
< #line 374
---
> #line 542
>     dev_err((struct device  const  *)(& pdev->dev), "Unable to allocate private data\n");
> #line 543
3573c3672
< #line 377
---
> #line 546
3575c3674
< #line 379
---
> #line 548
3577c3676
< #line 380
---
> #line 549
3579,3585c3678,3680
< #line 381
<     tmp___5 = dev_name((struct device  const  *)(& pdev->dev));
< #line 381
<     tmp___6 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 381
<     printk("<3>%s %s: No I/O resource\n", tmp___6, tmp___5);
< #line 382
---
> #line 550
>     dev_err((struct device  const  *)(& pdev->dev), "No I/O resource\n");
> #line 551
3587c3682
< #line 383
---
> #line 552
3592c3687
< #line 385
---
> #line 554
3594c3689
< #line 387
---
> #line 556
3596c3691
< #line 388
---
> #line 557
3598c3693
< #line 389
---
> #line 558
3600c3695
< #line 390
---
> #line 559
3602c3697
< #line 391
---
> #line 560
3604c3699
< #line 392
---
> #line 561
3606c3701
< #line 393
---
> #line 562
3608c3703,3738
< #line 395
---
> #line 564
>   ret = wm831x_reg_read(wm831x, (int )((unsigned int )((unsigned short )dcdc->base) + 2U));
> #line 565
>   if (ret < 0) {
> #line 566
>     dev_err((struct device  const  *)wm831x->dev, "Failed to read ON VSEL: %d\n",
>             ret);
> #line 567
>     goto err;
>   } else {
> 
>   }
> #line 569
>   dcdc->on_vsel = ret & 127;
> #line 571
>   ret = wm831x_reg_read(wm831x, (int )((unsigned int )((unsigned short )dcdc->base) + 2U));
> #line 572
>   if (ret < 0) {
> #line 573
>     dev_err((struct device  const  *)wm831x->dev, "Failed to read DVS VSEL: %d\n",
>             ret);
> #line 574
>     goto err;
>   } else {
> 
>   }
> #line 576
>   dcdc->dvs_vsel = ret & 127;
> #line 578
>   if ((unsigned long )pdata->dcdc[id] != (unsigned long )((struct regulator_init_data *)0)) {
> #line 579
>     wm831x_buckv_dvs_init(dcdc, (struct wm831x_buckv_pdata *)(pdata->dcdc[id])->driver_data);
>   } else {
> 
>   }
> #line 581
3611,3626c3741,3752
< #line 397
<   tmp___10 = IS_ERR((void const   *)dcdc->regulator);
< #line 397
<   if (tmp___10 != 0L) {
< #line 398
<     tmp___7 = PTR_ERR((void const   *)dcdc->regulator);
< #line 398
<     ret = (int )tmp___7;
< #line 399
<     tmp___8 = dev_name((struct device  const  *)wm831x->dev);
< #line 399
<     tmp___9 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 399
<     printk("<3>%s %s: Failed to register DCDC%d: %d\n", tmp___9, tmp___8, id + 1,
<            ret);
< #line 401
---
> #line 583
>   tmp___2 = IS_ERR((void const   *)dcdc->regulator);
> #line 583
>   if (tmp___2 != 0L) {
> #line 584
>     tmp___1 = PTR_ERR((void const   *)dcdc->regulator);
> #line 584
>     ret = (int )tmp___1;
> #line 585
>     dev_err((struct device  const  *)wm831x->dev, "Failed to register DCDC%d: %d\n",
>             id + 1, ret);
> #line 587
3631c3757
< #line 404
---
> #line 590
3633c3759
< #line 405
---
> #line 591
3636c3762
< #line 408
---
> #line 594
3638,3645c3764,3767
< #line 409
<     tmp___11 = dev_name((struct device  const  *)(& pdev->dev));
< #line 409
<     tmp___12 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 409
<     printk("<3>%s %s: Failed to request UV IRQ %d: %d\n", tmp___12, tmp___11, irq,
<            ret);
< #line 411
---
> #line 595
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to request UV IRQ %d: %d\n",
>             irq, ret);
> #line 597
3650c3772
< #line 414
---
> #line 600
3652c3774
< #line 415
---
> #line 601
3655c3777
< #line 418
---
> #line 604
3657,3664c3779,3782
< #line 419
<     tmp___13 = dev_name((struct device  const  *)(& pdev->dev));
< #line 419
<     tmp___14 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 419
<     printk("<3>%s %s: Failed to request HC IRQ %d: %d\n", tmp___14, tmp___13, irq,
<            ret);
< #line 421
---
> #line 605
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to request HC IRQ %d: %d\n",
>             irq, ret);
> #line 607
3669c3787
< #line 424
---
> #line 610
3671c3789
< #line 426
---
> #line 612
3674,3677c3792,3795
< #line 429
<   tmp___15 = platform_get_irq_byname(pdev, "UV");
< #line 429
<   wm831x_free_irq(wm831x, (unsigned int )tmp___15, (void *)dcdc);
---
> #line 615
>   tmp___3 = platform_get_irq_byname(pdev, "UV");
> #line 615
>   wm831x_free_irq(wm831x, (unsigned int )tmp___3, (void *)dcdc);
3679c3797
< #line 431
---
> #line 617
3681,3682c3799,3807
<   err: 
< #line 433
---
>   err: ;
> #line 619
>   if (dcdc->dvs_gpio != 0) {
> #line 620
>     gpio_free((unsigned int )dcdc->dvs_gpio);
>   } else {
> 
>   }
> #line 621
3684c3809
< #line 434
---
> #line 622
3688c3813
< #line 437 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 625 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3698c3823
< #line 439
---
> #line 627
3700c3825
< #line 439
---
> #line 627
3702c3827
< #line 440
---
> #line 628
3704c3829,3831
< #line 442
---
> #line 630
>   dev_set_drvdata(& pdev->dev, 0);
> #line 632
3706c3833
< #line 442
---
> #line 632
3708c3835
< #line 443
---
> #line 633
3710c3837
< #line 443
---
> #line 633
3712c3839
< #line 444
---
> #line 634
3714c3841,3848
< #line 445
---
> #line 635
>   if (dcdc->dvs_gpio != 0) {
> #line 636
>     gpio_free((unsigned int )dcdc->dvs_gpio);
>   } else {
> 
>   }
> #line 637
3716c3850
< #line 447
---
> #line 639
3720,3724c3854,3858
< #line 450 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static struct platform_driver wm831x_buckv_driver  =    {& wm831x_buckv_probe, & wm831x_buckv_remove, 0, 0, 0, {"wm831x-buckv", 0, 0, 0,
<                                                            0, 0, 0, 0, 0, 0, 0, 0},
<     0};
< #line 462 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 642 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static struct platform_driver wm831x_buckv_driver  =    {& wm831x_buckv_probe, & wm831x_buckv_remove, 0, 0, 0, {"wm831x-buckv", 0, & __this_module,
>                                                            0, (_Bool)0, 0, 0, 0, 0,
>                                                            0, 0, 0, 0}, 0};
> #line 655 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3730c3864
< #line 465
---
> #line 658
3732c3866
< #line 466
---
> #line 659
3735c3869
< #line 468
---
> #line 661
3740c3874
< #line 471 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 664 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3742c3876
<                                         int max_uV ) 
---
>                                         int max_uV , int *selector ) 
3752c3886
< #line 474
---
> #line 667
3754c3888
< #line 474
---
> #line 667
3756c3890
< #line 475
---
> #line 668
3758c3892
< #line 478
---
> #line 671
3760c3894
< #line 479
---
> #line 672
3763c3897
< #line 481
---
> #line 674
3766c3900
< #line 483
---
> #line 676
3768c3902
< #line 483
---
> #line 676
3770c3904
< #line 484
---
> #line 677
3775c3909,3911
< #line 486
---
> #line 679
>   *selector = (int )vsel;
> #line 681
3777c3913
< #line 486
---
> #line 681
3781,3782c3917,3919
< #line 489 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static int wm831x_buckp_set_voltage(struct regulator_dev *rdev , int min_uV , int max_uV ) 
---
> #line 684 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static int wm831x_buckp_set_voltage(struct regulator_dev *rdev , int min_uV , int max_uV ,
>                                     unsigned int *selector ) 
3790c3927
< #line 492
---
> #line 688
3792c3929
< #line 492
---
> #line 688
3794c3931
< #line 493
---
> #line 689
3796,3798c3933,3935
< #line 495
<   tmp___0 = wm831x_buckp_set_voltage_int(rdev, (int )reg, min_uV, max_uV);
< #line 495
---
> #line 691
>   tmp___0 = wm831x_buckp_set_voltage_int(rdev, (int )reg, min_uV, max_uV, (int *)selector);
> #line 691
3802c3939
< #line 498 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 695 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3807a3945
>   unsigned int selector ;
3811c3949
< #line 501
---
> #line 698
3813c3951
< #line 501
---
> #line 698
3815c3953
< #line 502
---
> #line 699
3817,3819c3955,3957
< #line 504
<   tmp___0 = wm831x_buckp_set_voltage_int(rdev, (int )reg, uV, uV);
< #line 504
---
> #line 702
>   tmp___0 = wm831x_buckp_set_voltage_int(rdev, (int )reg, uV, uV, (int *)(& selector));
> #line 702
3823c3961
< #line 507 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 705 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3834c3972
< #line 509
---
> #line 707
3836c3974
< #line 509
---
> #line 707
3838c3976
< #line 510
---
> #line 708
3840c3978
< #line 511
---
> #line 709
3842c3980
< #line 514
---
> #line 712
3844c3982
< #line 515
---
> #line 713
3846c3984
< #line 516
---
> #line 714
3851c3989
< #line 518
---
> #line 716
3853c3991
< #line 518
---
> #line 716
3857c3995
< #line 521 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 719 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3859c3997
< #line 521
---
> #line 719
3862c4000
<     & wm831x_dcdc_get_mode, & wm831x_dcdc_get_status, 0, & wm831x_buckp_set_suspend_voltage,
---
>     & wm831x_dcdc_get_mode, 0, & wm831x_dcdc_get_status, 0, & wm831x_buckp_set_suspend_voltage,
3864c4002
< #line 536 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 734 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
3875,3887c4013,4015
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   void *tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
<   char const   *tmp___5 ;
<   char const   *tmp___6 ;
<   long tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
<   long tmp___10 ;
<   char const   *tmp___11 ;
<   char const   *tmp___12 ;
---
>   void *tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
3890c4018
< #line 538
---
> #line 736
3892c4020
< #line 538
---
> #line 736
3894c4022
< #line 539
---
> #line 737
3896c4024
< #line 540
---
> #line 738
3898,3904c4026,4028
< #line 545
<   tmp___0 = dev_name((struct device  const  *)(& pdev->dev));
< #line 545
<   tmp___1 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 545
<   printk("<7>%s %s: Probing DCDC%d\n", tmp___1, tmp___0, id + 1);
< #line 547
---
> #line 743
>   dev_printk("<7>", (struct device  const  *)(& pdev->dev), "Probing DCDC%d\n", id + 1);
> #line 745
3906c4030
< #line 548
---
> #line 746
3911,3915c4035,4039
< #line 550
<   tmp___2 = kzalloc(72UL, 208U);
< #line 550
<   dcdc = (struct wm831x_dcdc *)tmp___2;
< #line 551
---
> #line 748
>   tmp___0 = kzalloc(88UL, 208U);
> #line 748
>   dcdc = (struct wm831x_dcdc *)tmp___0;
> #line 749
3917,3923c4041,4043
< #line 552
<     tmp___3 = dev_name((struct device  const  *)(& pdev->dev));
< #line 552
<     tmp___4 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 552
<     printk("<3>%s %s: Unable to allocate private data\n", tmp___4, tmp___3);
< #line 553
---
> #line 750
>     dev_err((struct device  const  *)(& pdev->dev), "Unable to allocate private data\n");
> #line 751
3928c4048
< #line 556
---
> #line 754
3930c4050
< #line 558
---
> #line 756
3932c4052
< #line 559
---
> #line 757
3934,3940c4054,4056
< #line 560
<     tmp___5 = dev_name((struct device  const  *)(& pdev->dev));
< #line 560
<     tmp___6 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 560
<     printk("<3>%s %s: No I/O resource\n", tmp___6, tmp___5);
< #line 561
---
> #line 758
>     dev_err((struct device  const  *)(& pdev->dev), "No I/O resource\n");
> #line 759
3942c4058
< #line 562
---
> #line 760
3947c4063
< #line 564
---
> #line 762
3949c4065
< #line 566
---
> #line 764
3951c4067
< #line 567
---
> #line 765
3953c4069
< #line 568
---
> #line 766
3955c4071
< #line 569
---
> #line 767
3957c4073
< #line 570
---
> #line 768
3959c4075
< #line 571
---
> #line 769
3961c4077
< #line 572
---
> #line 770
3963c4079
< #line 574
---
> #line 772
3966,3981c4082,4093
< #line 576
<   tmp___10 = IS_ERR((void const   *)dcdc->regulator);
< #line 576
<   if (tmp___10 != 0L) {
< #line 577
<     tmp___7 = PTR_ERR((void const   *)dcdc->regulator);
< #line 577
<     ret = (int )tmp___7;
< #line 578
<     tmp___8 = dev_name((struct device  const  *)wm831x->dev);
< #line 578
<     tmp___9 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 578
<     printk("<3>%s %s: Failed to register DCDC%d: %d\n", tmp___9, tmp___8, id + 1,
<            ret);
< #line 580
---
> #line 774
>   tmp___2 = IS_ERR((void const   *)dcdc->regulator);
> #line 774
>   if (tmp___2 != 0L) {
> #line 775
>     tmp___1 = PTR_ERR((void const   *)dcdc->regulator);
> #line 775
>     ret = (int )tmp___1;
> #line 776
>     dev_err((struct device  const  *)wm831x->dev, "Failed to register DCDC%d: %d\n",
>             id + 1, ret);
> #line 778
3986c4098
< #line 583
---
> #line 781
3988c4100
< #line 584
---
> #line 782
3991c4103
< #line 587
---
> #line 785
3993,4000c4105,4108
< #line 588
<     tmp___11 = dev_name((struct device  const  *)(& pdev->dev));
< #line 588
<     tmp___12 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 588
<     printk("<3>%s %s: Failed to request UV IRQ %d: %d\n", tmp___12, tmp___11, irq,
<            ret);
< #line 590
---
> #line 786
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to request UV IRQ %d: %d\n",
>             irq, ret);
> #line 788
4005c4113
< #line 593
---
> #line 791
4007c4115
< #line 595
---
> #line 793
4010c4118
< #line 598
---
> #line 796
4013c4121
< #line 600
---
> #line 798
4015c4123
< #line 601
---
> #line 799
4019c4127
< #line 604 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 802 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4028c4136
< #line 606
---
> #line 804
4030c4138
< #line 606
---
> #line 804
4032c4140
< #line 607
---
> #line 805
4034c4142,4144
< #line 609
---
> #line 807
>   dev_set_drvdata(& pdev->dev, 0);
> #line 809
4036c4146
< #line 609
---
> #line 809
4038c4148
< #line 610
---
> #line 810
4040c4150
< #line 611
---
> #line 811
4042c4152
< #line 613
---
> #line 813
4046,4050c4156,4160
< #line 616 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static struct platform_driver wm831x_buckp_driver  =    {& wm831x_buckp_probe, & wm831x_buckp_remove, 0, 0, 0, {"wm831x-buckp", 0, 0, 0,
<                                                            0, 0, 0, 0, 0, 0, 0, 0},
<     0};
< #line 628 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 816 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static struct platform_driver wm831x_buckp_driver  =    {& wm831x_buckp_probe, & wm831x_buckp_remove, 0, 0, 0, {"wm831x-buckp", 0, & __this_module,
>                                                            0, (_Bool)0, 0, 0, 0, 0,
>                                                            0, 0, 0, 0}, 0};
> #line 829 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4058,4061c4168,4169
<   char const   *tmp___1 ;
<   char const   *tmp___2 ;
<   int tmp___3 ;
<   int tmp___4 ;
---
>   int tmp___1 ;
>   int tmp___2 ;
4064c4172
< #line 630
---
> #line 831
4066c4174
< #line 630
---
> #line 831
4068c4176
< #line 631
---
> #line 832
4070c4178
< #line 635
---
> #line 836
4072c4180
< #line 636
---
> #line 837
4074c4182
< #line 637
---
> #line 838
4079,4083c4187,4191
< #line 639
<   tmp___3 = rdev_get_id(rdev);
< #line 639
<   if ((ret >> tmp___3) & 1) {
< #line 640
---
> #line 840
>   tmp___1 = rdev_get_id(rdev);
> #line 840
>   if ((ret >> tmp___1) & 1) {
> #line 841
4085,4091c4193,4196
< #line 640
<     tmp___1 = dev_name((struct device  const  *)wm831x->dev);
< #line 640
<     tmp___2 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 640
<     printk("<7>%s %s: DCDC%d under voltage\n", tmp___2, tmp___1, tmp___0 + 1);
< #line 642
---
> #line 841
>     dev_printk("<7>", (struct device  const  *)wm831x->dev, "DCDC%d under voltage\n",
>                tmp___0 + 1);
> #line 843
4096c4201
< #line 646
---
> #line 847
4098c4203
< #line 647
---
> #line 848
4100c4205
< #line 648
---
> #line 849
4105,4109c4210,4214
< #line 649
<   tmp___4 = rdev_get_id(rdev);
< #line 649
<   if ((ret >> tmp___4) & 1) {
< #line 650
---
> #line 850
>   tmp___2 = rdev_get_id(rdev);
> #line 850
>   if ((ret >> tmp___2) & 1) {
> #line 851
4112c4217
< #line 652
---
> #line 853
4117c4222
< #line 655 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 856 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4119c4224
< #line 655
---
> #line 856
4121,4122c4226,4227
<     0, 0, & wm831x_boostp_get_status, 0, 0, 0, 0, 0};
< #line 663 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
>     0, 0, 0, & wm831x_boostp_get_status, 0, 0, 0, 0, 0};
> #line 864 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4133,4145c4238,4240
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   void *tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
<   char const   *tmp___5 ;
<   char const   *tmp___6 ;
<   long tmp___7 ;
<   char const   *tmp___8 ;
<   char const   *tmp___9 ;
<   long tmp___10 ;
<   char const   *tmp___11 ;
<   char const   *tmp___12 ;
---
>   void *tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
4148c4243
< #line 665
---
> #line 866
4150c4245
< #line 665
---
> #line 866
4152c4247
< #line 666
---
> #line 867
4154c4249
< #line 667
---
> #line 868
4156,4162c4251,4253
< #line 672
<   tmp___0 = dev_name((struct device  const  *)(& pdev->dev));
< #line 672
<   tmp___1 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 672
<   printk("<7>%s %s: Probing DCDC%d\n", tmp___1, tmp___0, id + 1);
< #line 674
---
> #line 873
>   dev_printk("<7>", (struct device  const  *)(& pdev->dev), "Probing DCDC%d\n", id + 1);
> #line 875
4164c4255
< #line 675
---
> #line 876
4169,4173c4260,4264
< #line 677
<   tmp___2 = kzalloc(72UL, 208U);
< #line 677
<   dcdc = (struct wm831x_dcdc *)tmp___2;
< #line 678
---
> #line 878
>   tmp___0 = kzalloc(88UL, 208U);
> #line 878
>   dcdc = (struct wm831x_dcdc *)tmp___0;
> #line 879
4175,4181c4266,4268
< #line 679
<     tmp___3 = dev_name((struct device  const  *)(& pdev->dev));
< #line 679
<     tmp___4 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 679
<     printk("<3>%s %s: Unable to allocate private data\n", tmp___4, tmp___3);
< #line 680
---
> #line 880
>     dev_err((struct device  const  *)(& pdev->dev), "Unable to allocate private data\n");
> #line 881
4186c4273
< #line 683
---
> #line 884
4188c4275
< #line 685
---
> #line 886
4190c4277
< #line 686
---
> #line 887
4192,4198c4279,4281
< #line 687
<     tmp___5 = dev_name((struct device  const  *)(& pdev->dev));
< #line 687
<     tmp___6 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 687
<     printk("<3>%s %s: No I/O resource\n", tmp___6, tmp___5);
< #line 688
---
> #line 888
>     dev_err((struct device  const  *)(& pdev->dev), "No I/O resource\n");
> #line 889
4200c4283
< #line 689
---
> #line 890
4205c4288
< #line 691
---
> #line 892
4207c4290
< #line 693
---
> #line 894
4209c4292
< #line 694
---
> #line 895
4211c4294
< #line 695
---
> #line 896
4213c4296
< #line 696
---
> #line 897
4215c4298
< #line 697
---
> #line 898
4217c4300
< #line 698
---
> #line 899
4219c4302
< #line 700
---
> #line 901
4222,4237c4305,4316
< #line 702
<   tmp___10 = IS_ERR((void const   *)dcdc->regulator);
< #line 702
<   if (tmp___10 != 0L) {
< #line 703
<     tmp___7 = PTR_ERR((void const   *)dcdc->regulator);
< #line 703
<     ret = (int )tmp___7;
< #line 704
<     tmp___8 = dev_name((struct device  const  *)wm831x->dev);
< #line 704
<     tmp___9 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 704
<     printk("<3>%s %s: Failed to register DCDC%d: %d\n", tmp___9, tmp___8, id + 1,
<            ret);
< #line 706
---
> #line 903
>   tmp___2 = IS_ERR((void const   *)dcdc->regulator);
> #line 903
>   if (tmp___2 != 0L) {
> #line 904
>     tmp___1 = PTR_ERR((void const   *)dcdc->regulator);
> #line 904
>     ret = (int )tmp___1;
> #line 905
>     dev_err((struct device  const  *)wm831x->dev, "Failed to register DCDC%d: %d\n",
>             id + 1, ret);
> #line 907
4242c4321
< #line 709
---
> #line 910
4244c4323
< #line 710
---
> #line 911
4247c4326
< #line 713
---
> #line 914
4249,4256c4328,4331
< #line 714
<     tmp___11 = dev_name((struct device  const  *)(& pdev->dev));
< #line 714
<     tmp___12 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 714
<     printk("<3>%s %s: Failed to request UV IRQ %d: %d\n", tmp___12, tmp___11, irq,
<            ret);
< #line 716
---
> #line 915
>     dev_err((struct device  const  *)(& pdev->dev), "Failed to request UV IRQ %d: %d\n",
>             irq, ret);
> #line 917
4261c4336
< #line 719
---
> #line 920
4263c4338
< #line 721
---
> #line 922
4266c4341
< #line 724
---
> #line 925
4269c4344
< #line 726
---
> #line 927
4271c4346
< #line 727
---
> #line 928
4275c4350
< #line 730 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 931 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4284c4359
< #line 732
---
> #line 933
4286c4361
< #line 732
---
> #line 933
4288c4363
< #line 733
---
> #line 934
4290c4365,4367
< #line 735
---
> #line 936
>   dev_set_drvdata(& pdev->dev, 0);
> #line 938
4292c4369
< #line 735
---
> #line 938
4294c4371
< #line 736
---
> #line 939
4296c4373
< #line 737
---
> #line 940
4298c4375
< #line 739
---
> #line 942
4302,4306c4379,4383
< #line 742 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static struct platform_driver wm831x_boostp_driver  =    {& wm831x_boostp_probe, & wm831x_boostp_remove, 0, 0, 0, {"wm831x-boostp", 0, 0,
<                                                              0, 0, 0, 0, 0, 0, 0,
<                                                              0, 0}, 0};
< #line 759 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 945 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static struct platform_driver wm831x_boostp_driver  =    {& wm831x_boostp_probe, & wm831x_boostp_remove, 0, 0, 0, {"wm831x-boostp", 0, & __this_module,
>                                                              0, (_Bool)0, 0, 0, 0,
>                                                              0, 0, 0, 0, 0}, 0};
> #line 963 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4308c4385
< #line 759
---
> #line 963
4310,4311c4387,4388
<     0, 0, & wm831x_dcdc_get_status, 0, 0, 0, 0, 0};
< #line 766 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
>     0, 0, 0, & wm831x_dcdc_get_status, 0, 0, 0, 0, 0};
> #line 970 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4320,4328c4397,4399
<   char const   *tmp___0 ;
<   char const   *tmp___1 ;
<   void *tmp___2 ;
<   char const   *tmp___3 ;
<   char const   *tmp___4 ;
<   long tmp___5 ;
<   char const   *tmp___6 ;
<   char const   *tmp___7 ;
<   long tmp___8 ;
---
>   void *tmp___0 ;
>   long tmp___1 ;
>   long tmp___2 ;
4331c4402
< #line 768
---
> #line 972
4333c4404
< #line 768
---
> #line 972
4335c4406
< #line 769
---
> #line 973
4337c4408
< #line 770
---
> #line 974
4339,4345c4410,4412
< #line 774
<   tmp___0 = dev_name((struct device  const  *)(& pdev->dev));
< #line 774
<   tmp___1 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 774
<   printk("<7>%s %s: Probing EPE%d\n", tmp___1, tmp___0, id + 1);
< #line 776
---
> #line 978
>   dev_printk("<7>", (struct device  const  *)(& pdev->dev), "Probing EPE%d\n", id + 1);
> #line 980
4347c4414
< #line 777
---
> #line 981
4352,4356c4419,4423
< #line 779
<   tmp___2 = kzalloc(72UL, 208U);
< #line 779
<   dcdc = (struct wm831x_dcdc *)tmp___2;
< #line 780
---
> #line 983
>   tmp___0 = kzalloc(88UL, 208U);
> #line 983
>   dcdc = (struct wm831x_dcdc *)tmp___0;
> #line 984
4358,4364c4425,4427
< #line 781
<     tmp___3 = dev_name((struct device  const  *)(& pdev->dev));
< #line 781
<     tmp___4 = dev_driver_string((struct device  const  *)(& pdev->dev));
< #line 781
<     printk("<3>%s %s: Unable to allocate private data\n", tmp___4, tmp___3);
< #line 782
---
> #line 985
>     dev_err((struct device  const  *)(& pdev->dev), "Unable to allocate private data\n");
> #line 986
4369c4432
< #line 785
---
> #line 989
4371c4434
< #line 790
---
> #line 994
4373c4436
< #line 791
---
> #line 995
4375c4438
< #line 792
---
> #line 996
4377c4440
< #line 793
---
> #line 997
4379c4442
< #line 794
---
> #line 998
4381c4444
< #line 795
---
> #line 999
4383c4446
< #line 797
---
> #line 1001
4386,4400c4449,4460
< #line 799
<   tmp___8 = IS_ERR((void const   *)dcdc->regulator);
< #line 799
<   if (tmp___8 != 0L) {
< #line 800
<     tmp___5 = PTR_ERR((void const   *)dcdc->regulator);
< #line 800
<     ret = (int )tmp___5;
< #line 801
<     tmp___6 = dev_name((struct device  const  *)wm831x->dev);
< #line 801
<     tmp___7 = dev_driver_string((struct device  const  *)wm831x->dev);
< #line 801
<     printk("<3>%s %s: Failed to register EPE%d: %d\n", tmp___7, tmp___6, id + 1, ret);
< #line 803
---
> #line 1003
>   tmp___2 = IS_ERR((void const   *)dcdc->regulator);
> #line 1003
>   if (tmp___2 != 0L) {
> #line 1004
>     tmp___1 = PTR_ERR((void const   *)dcdc->regulator);
> #line 1004
>     ret = (int )tmp___1;
> #line 1005
>     dev_err((struct device  const  *)wm831x->dev, "Failed to register EPE%d: %d\n",
>             id + 1, ret);
> #line 1007
4405c4465
< #line 806
---
> #line 1010
4407c4467
< #line 808
---
> #line 1012
4410c4470
< #line 811
---
> #line 1015
4412c4472
< #line 812
---
> #line 1016
4416c4476
< #line 815 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 1019 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4423c4483
< #line 817
---
> #line 1021
4425c4485
< #line 817
---
> #line 1021
4427c4487,4489
< #line 819
---
> #line 1023
>   dev_set_drvdata(& pdev->dev, 0);
> #line 1025
4429c4491
< #line 820
---
> #line 1026
4431c4493
< #line 822
---
> #line 1028
4435,4438c4497,4501
< #line 825 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
< static struct platform_driver wm831x_epe_driver  =    {& wm831x_epe_probe, & wm831x_epe_remove, 0, 0, 0, {"wm831x-epe", 0, 0, 0, 0, 0,
<                                                        0, 0, 0, 0, 0, 0}, 0};
< #line 833 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 1031 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> static struct platform_driver wm831x_epe_driver  =    {& wm831x_epe_probe, & wm831x_epe_remove, 0, 0, 0, {"wm831x-epe", 0, & __this_module,
>                                                        0, (_Bool)0, 0, 0, 0, 0, 0,
>                                                        0, 0, 0}, 0};
> #line 1040 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4444c4507
< #line 836
---
> #line 1043
4446c4509
< #line 837
---
> #line 1044
4448c4511
< #line 838
---
> #line 1045
4453c4516
< #line 840
---
> #line 1047
4455c4518
< #line 841
---
> #line 1048
4457c4520
< #line 842
---
> #line 1049
4462c4525
< #line 844
---
> #line 1051
4464c4527
< #line 845
---
> #line 1052
4466c4529
< #line 846
---
> #line 1053
4471c4534
< #line 848
---
> #line 1055
4473c4536
< #line 849
---
> #line 1056
4475c4538
< #line 850
---
> #line 1057
4480c4543
< #line 852
---
> #line 1059
4484c4547
< #line 856 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 1063 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4490c4553
< #line 858
---
> #line 1065
4492c4555
< #line 859
---
> #line 1066
4494c4557
< #line 860
---
> #line 1067
4496c4559
< #line 861
---
> #line 1068
4498c4561
< #line 862
---
> #line 1069
4502c4565
< #line 888
---
> #line 1095
4504c4567
< #line 891
---
> #line 1098
4506c4569
< #line 894
---
> #line 1101
4508c4571
< #line 897
---
> #line 1104
4510c4573
< #line 900
---
> #line 1107
4512c4575
< #line 903
---
> #line 1110
4514c4577
< #line 906 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 1113 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4516c4579
< #line 909 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
---
> #line 1116 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
4520,4521c4583,4585
<   int var_wm831x_buckv_set_voltage_12_p1 ;
<   int var_wm831x_buckv_set_voltage_12_p2 ;
---
>   int var_wm831x_buckv_set_voltage_14_p1 ;
>   int var_wm831x_buckv_set_voltage_14_p2 ;
>   unsigned int *var_wm831x_buckv_set_voltage_14_p3 ;
4523,4525c4587,4589
<   int var_wm831x_buckv_set_suspend_voltage_13_p1 ;
<   int var_wm831x_buckv_set_current_limit_15_p1 ;
<   int var_wm831x_buckv_set_current_limit_15_p2 ;
---
>   int var_wm831x_buckv_set_suspend_voltage_15_p1 ;
>   int var_wm831x_buckv_set_current_limit_17_p1 ;
>   int var_wm831x_buckv_set_current_limit_17_p2 ;
4529,4536c4593,4601
<   int res_wm831x_buckv_probe_17 ;
<   int var_wm831x_buckp_set_voltage_21_p1 ;
<   int var_wm831x_buckp_set_voltage_21_p2 ;
<   unsigned int var_wm831x_buckp_list_voltage_19_p1 ;
<   int var_wm831x_buckp_set_suspend_voltage_22_p1 ;
<   int res_wm831x_buckp_probe_24 ;
<   int res_wm831x_boostp_probe_27 ;
<   int res_wm831x_epe_probe_29 ;
---
>   int res_wm831x_buckv_probe_20 ;
>   int var_wm831x_buckp_set_voltage_24_p1 ;
>   int var_wm831x_buckp_set_voltage_24_p2 ;
>   unsigned int *var_wm831x_buckp_set_voltage_24_p3 ;
>   unsigned int var_wm831x_buckp_list_voltage_22_p1 ;
>   int var_wm831x_buckp_set_suspend_voltage_25_p1 ;
>   int res_wm831x_buckp_probe_27 ;
>   int res_wm831x_boostp_probe_30 ;
>   int res_wm831x_epe_probe_32 ;
4550c4615
< #line 1726
---
> #line 1980
4552c4617
< #line 1730
---
> #line 1984
4554c4619
< #line 1734
---
> #line 1988
4556c4621
< #line 1738
---
> #line 1992
4558c4623
< #line 1693
---
> #line 1946
4560c4625
< #line 1702
---
> #line 1955
4562c4627
< #line 1721
---
> #line 1975
4564c4629
< #line 1722
---
> #line 1976
4566c4631
< #line 1722
---
> #line 1976
4568c4633
< #line 1723
---
> #line 1977
4573,4576c4638,4641
< #line 1743
<   goto ldv_17410;
<   ldv_17409: 
< #line 1750
---
> #line 1997
>   goto ldv_22650;
>   ldv_22649: 
> #line 2004
4578c4643
< #line 1750
---
> #line 2004
4581c4646
< #line 1772
---
> #line 2027
4583,4586c4648,4652
< #line 1773
<   wm831x_buckv_set_voltage(var_group1, var_wm831x_buckv_set_voltage_12_p1, var_wm831x_buckv_set_voltage_12_p2);
< #line 1783
<   goto ldv_17365;
---
> #line 2028
>   wm831x_buckv_set_voltage(var_group1, var_wm831x_buckv_set_voltage_14_p1, var_wm831x_buckv_set_voltage_14_p2,
>                            var_wm831x_buckv_set_voltage_14_p3);
> #line 2038
>   goto ldv_22605;
4588c4654
< #line 1804
---
> #line 2060
4590c4656
< #line 1805
---
> #line 2061
4592,4593c4658,4659
< #line 1815
<   goto ldv_17365;
---
> #line 2071
>   goto ldv_22605;
4595c4661
< #line 1836
---
> #line 2093
4597c4663
< #line 1837
---
> #line 2094
4599,4600c4665,4666
< #line 1847
<   goto ldv_17365;
---
> #line 2104
>   goto ldv_22605;
4602c4668
< #line 1868
---
> #line 2126
4604,4607c4670,4673
< #line 1869
<   wm831x_buckv_set_suspend_voltage(var_group1, var_wm831x_buckv_set_suspend_voltage_13_p1);
< #line 1879
<   goto ldv_17365;
---
> #line 2127
>   wm831x_buckv_set_suspend_voltage(var_group1, var_wm831x_buckv_set_suspend_voltage_15_p1);
> #line 2137
>   goto ldv_22605;
4609c4675
< #line 1900
---
> #line 2159
4611,4615c4677,4681
< #line 1901
<   wm831x_buckv_set_current_limit(var_group1, var_wm831x_buckv_set_current_limit_15_p1,
<                                  var_wm831x_buckv_set_current_limit_15_p2);
< #line 1911
<   goto ldv_17365;
---
> #line 2160
>   wm831x_buckv_set_current_limit(var_group1, var_wm831x_buckv_set_current_limit_17_p1,
>                                  var_wm831x_buckv_set_current_limit_17_p2);
> #line 2170
>   goto ldv_22605;
4617c4683
< #line 1932
---
> #line 2192
4619c4685
< #line 1933
---
> #line 2193
4621,4622c4687,4688
< #line 1943
<   goto ldv_17365;
---
> #line 2203
>   goto ldv_22605;
4624c4690
< #line 1964
---
> #line 2225
4626c4692
< #line 1965
---
> #line 2226
4628,4629c4694,4695
< #line 1975
<   goto ldv_17365;
---
> #line 2236
>   goto ldv_22605;
4631c4697
< #line 1996
---
> #line 2258
4633c4699
< #line 1997
---
> #line 2259
4635,4636c4701,4702
< #line 2007
<   goto ldv_17365;
---
> #line 2269
>   goto ldv_22605;
4638c4704
< #line 2028
---
> #line 2291
4640c4706
< #line 2029
---
> #line 2292
4642,4643c4708,4709
< #line 2039
<   goto ldv_17365;
---
> #line 2302
>   goto ldv_22605;
4645c4711
< #line 2060
---
> #line 2324
4647c4713
< #line 2061
---
> #line 2325
4649,4650c4715,4716
< #line 2071
<   goto ldv_17365;
---
> #line 2335
>   goto ldv_22605;
4652c4718
< #line 2092
---
> #line 2357
4654c4720
< #line 2093
---
> #line 2358
4656,4657c4722,4723
< #line 2103
<   goto ldv_17365;
---
> #line 2368
>   goto ldv_22605;
4659c4725
< #line 2124
---
> #line 2390
4661c4727
< #line 2125
---
> #line 2391
4663,4664c4729,4730
< #line 2135
<   goto ldv_17365;
---
> #line 2401
>   goto ldv_22605;
4666c4732
< #line 2156
---
> #line 2423
4668c4734
< #line 2157
---
> #line 2424
4670,4671c4736,4737
< #line 2167
<   goto ldv_17365;
---
> #line 2434
>   goto ldv_22605;
4673c4739
< #line 2171
---
> #line 2438
4675,4683c4741,4749
< #line 2188
<     res_wm831x_buckv_probe_17 = wm831x_buckv_probe(var_group2);
< #line 2189
<     ldv_check_return_value(res_wm831x_buckv_probe_17);
< #line 2190
<     ldv_check_return_value_probe(res_wm831x_buckv_probe_17);
< #line 2191
<     if (res_wm831x_buckv_probe_17 != 0) {
< #line 2192
---
> #line 2456
>     res_wm831x_buckv_probe_20 = wm831x_buckv_probe(var_group2);
> #line 2457
>     ldv_check_return_value(res_wm831x_buckv_probe_20);
> #line 2458
>     ldv_check_return_value_probe(res_wm831x_buckv_probe_20);
> #line 2459
>     if (res_wm831x_buckv_probe_20 != 0) {
> #line 2460
4688c4754
< #line 2196
---
> #line 2464
4693,4694c4759,4760
< #line 2202
<   goto ldv_17365;
---
> #line 2470
>   goto ldv_22605;
4696c4762
< #line 2206
---
> #line 2474
4698c4764
< #line 2223
---
> #line 2492
4700c4766
< #line 2224
---
> #line 2493
4702c4768
< #line 2228
---
> #line 2497
4707,4708c4773,4774
< #line 2234
<   goto ldv_17365;
---
> #line 2503
>   goto ldv_22605;
4710c4776
< #line 2255
---
> #line 2525
4712,4715c4778,4782
< #line 2256
<   wm831x_buckp_set_voltage(var_group1, var_wm831x_buckp_set_voltage_21_p1, var_wm831x_buckp_set_voltage_21_p2);
< #line 2266
<   goto ldv_17365;
---
> #line 2526
>   wm831x_buckp_set_voltage(var_group1, var_wm831x_buckp_set_voltage_24_p1, var_wm831x_buckp_set_voltage_24_p2,
>                            var_wm831x_buckp_set_voltage_24_p3);
> #line 2536
>   goto ldv_22605;
4717c4784
< #line 2287
---
> #line 2558
4719c4786
< #line 2288
---
> #line 2559
4721,4722c4788,4789
< #line 2298
<   goto ldv_17365;
---
> #line 2569
>   goto ldv_22605;
4724c4791
< #line 2319
---
> #line 2591
4726,4729c4793,4796
< #line 2320
<   wm831x_buckp_list_voltage(var_group1, var_wm831x_buckp_list_voltage_19_p1);
< #line 2330
<   goto ldv_17365;
---
> #line 2592
>   wm831x_buckp_list_voltage(var_group1, var_wm831x_buckp_list_voltage_22_p1);
> #line 2602
>   goto ldv_22605;
4731c4798
< #line 2351
---
> #line 2624
4733,4736c4800,4803
< #line 2352
<   wm831x_buckp_set_suspend_voltage(var_group1, var_wm831x_buckp_set_suspend_voltage_22_p1);
< #line 2362
<   goto ldv_17365;
---
> #line 2625
>   wm831x_buckp_set_suspend_voltage(var_group1, var_wm831x_buckp_set_suspend_voltage_25_p1);
> #line 2635
>   goto ldv_22605;
4738c4805
< #line 2383
---
> #line 2657
4740c4807
< #line 2384
---
> #line 2658
4742,4743c4809,4810
< #line 2394
<   goto ldv_17365;
---
> #line 2668
>   goto ldv_22605;
4745c4812
< #line 2415
---
> #line 2690
4747c4814
< #line 2416
---
> #line 2691
4749,4750c4816,4817
< #line 2426
<   goto ldv_17365;
---
> #line 2701
>   goto ldv_22605;
4752c4819
< #line 2447
---
> #line 2723
4754c4821
< #line 2448
---
> #line 2724
4756,4757c4823,4824
< #line 2458
<   goto ldv_17365;
---
> #line 2734
>   goto ldv_22605;
4759c4826
< #line 2479
---
> #line 2756
4761c4828
< #line 2480
---
> #line 2757
4763,4764c4830,4831
< #line 2490
<   goto ldv_17365;
---
> #line 2767
>   goto ldv_22605;
4766c4833
< #line 2511
---
> #line 2789
4768c4835
< #line 2512
---
> #line 2790
4770,4771c4837,4838
< #line 2522
<   goto ldv_17365;
---
> #line 2800
>   goto ldv_22605;
4773c4840
< #line 2543
---
> #line 2822
4775c4842
< #line 2544
---
> #line 2823
4777,4778c4844,4845
< #line 2554
<   goto ldv_17365;
---
> #line 2833
>   goto ldv_22605;
4780c4847
< #line 2575
---
> #line 2855
4782c4849
< #line 2576
---
> #line 2856
4784,4785c4851,4852
< #line 2586
<   goto ldv_17365;
---
> #line 2866
>   goto ldv_22605;
4787c4854
< #line 2590
---
> #line 2870
4789,4797c4856,4864
< #line 2607
<     res_wm831x_buckp_probe_24 = wm831x_buckp_probe(var_group2);
< #line 2608
<     ldv_check_return_value(res_wm831x_buckp_probe_24);
< #line 2609
<     ldv_check_return_value_probe(res_wm831x_buckp_probe_24);
< #line 2610
<     if (res_wm831x_buckp_probe_24 != 0) {
< #line 2611
---
> #line 2888
>     res_wm831x_buckp_probe_27 = wm831x_buckp_probe(var_group2);
> #line 2889
>     ldv_check_return_value(res_wm831x_buckp_probe_27);
> #line 2890
>     ldv_check_return_value_probe(res_wm831x_buckp_probe_27);
> #line 2891
>     if (res_wm831x_buckp_probe_27 != 0) {
> #line 2892
4802c4869
< #line 2615
---
> #line 2896
4807,4808c4874,4875
< #line 2621
<   goto ldv_17365;
---
> #line 2902
>   goto ldv_22605;
4810c4877
< #line 2625
---
> #line 2906
4812c4879
< #line 2642
---
> #line 2924
4814c4881
< #line 2643
---
> #line 2925
4816c4883
< #line 2647
---
> #line 2929
4821,4822c4888,4889
< #line 2653
<   goto ldv_17365;
---
> #line 2935
>   goto ldv_22605;
4824c4891
< #line 2674
---
> #line 2957
4826c4893
< #line 2675
---
> #line 2958
4828,4829c4895,4896
< #line 2685
<   goto ldv_17365;
---
> #line 2968
>   goto ldv_22605;
4831c4898
< #line 2706
---
> #line 2990
4833c4900
< #line 2707
---
> #line 2991
4835,4836c4902,4903
< #line 2717
<   goto ldv_17365;
---
> #line 3001
>   goto ldv_22605;
4838c4905
< #line 2738
---
> #line 3023
4840c4907
< #line 2739
---
> #line 3024
4842,4843c4909,4910
< #line 2749
<   goto ldv_17365;
---
> #line 3034
>   goto ldv_22605;
4845c4912
< #line 2770
---
> #line 3056
4847c4914
< #line 2771
---
> #line 3057
4849,4850c4916,4917
< #line 2781
<   goto ldv_17365;
---
> #line 3067
>   goto ldv_22605;
4852c4919
< #line 2785
---
> #line 3071
4854,4862c4921,4929
< #line 2802
<     res_wm831x_boostp_probe_27 = wm831x_boostp_probe(var_group2);
< #line 2803
<     ldv_check_return_value(res_wm831x_boostp_probe_27);
< #line 2804
<     ldv_check_return_value_probe(res_wm831x_boostp_probe_27);
< #line 2805
<     if (res_wm831x_boostp_probe_27 != 0) {
< #line 2806
---
> #line 3089
>     res_wm831x_boostp_probe_30 = wm831x_boostp_probe(var_group2);
> #line 3090
>     ldv_check_return_value(res_wm831x_boostp_probe_30);
> #line 3091
>     ldv_check_return_value_probe(res_wm831x_boostp_probe_30);
> #line 3092
>     if (res_wm831x_boostp_probe_30 != 0) {
> #line 3093
4867c4934
< #line 2810
---
> #line 3097
4872,4873c4939,4940
< #line 2816
<   goto ldv_17365;
---
> #line 3103
>   goto ldv_22605;
4875c4942
< #line 2820
---
> #line 3107
4877c4944
< #line 2837
---
> #line 3125
4879c4946
< #line 2838
---
> #line 3126
4881c4948
< #line 2842
---
> #line 3130
4886,4887c4953,4954
< #line 2848
<   goto ldv_17365;
---
> #line 3136
>   goto ldv_22605;
4889c4956
< #line 2869
---
> #line 3158
4891c4958
< #line 2870
---
> #line 3159
4893,4894c4960,4961
< #line 2880
<   goto ldv_17365;
---
> #line 3169
>   goto ldv_22605;
4896c4963
< #line 2901
---
> #line 3191
4898c4965
< #line 2902
---
> #line 3192
4900,4901c4967,4968
< #line 2912
<   goto ldv_17365;
---
> #line 3202
>   goto ldv_22605;
4903c4970
< #line 2933
---
> #line 3224
4905c4972
< #line 2934
---
> #line 3225
4907,4908c4974,4975
< #line 2944
<   goto ldv_17365;
---
> #line 3235
>   goto ldv_22605;
4910c4977
< #line 2965
---
> #line 3257
4912c4979
< #line 2966
---
> #line 3258
4914,4915c4981,4982
< #line 2976
<   goto ldv_17365;
---
> #line 3268
>   goto ldv_22605;
4917c4984
< #line 2980
---
> #line 3272
4919,4927c4986,4994
< #line 2998
<     res_wm831x_epe_probe_29 = wm831x_epe_probe(var_group2);
< #line 2999
<     ldv_check_return_value(res_wm831x_epe_probe_29);
< #line 3000
<     ldv_check_return_value_probe(res_wm831x_epe_probe_29);
< #line 3001
<     if (res_wm831x_epe_probe_29 != 0) {
< #line 3002
---
> #line 3291
>     res_wm831x_epe_probe_32 = wm831x_epe_probe(var_group2);
> #line 3292
>     ldv_check_return_value(res_wm831x_epe_probe_32);
> #line 3293
>     ldv_check_return_value_probe(res_wm831x_epe_probe_32);
> #line 3294
>     if (res_wm831x_epe_probe_32 != 0) {
> #line 3295
4932c4999
< #line 3003
---
> #line 3296
4937,4938c5004,5005
< #line 3009
<   goto ldv_17365;
---
> #line 3302
>   goto ldv_22605;
4940c5007
< #line 3013
---
> #line 3306
4942c5009
< #line 3031
---
> #line 3325
4944c5011
< #line 3032
---
> #line 3326
4946c5013
< #line 3033
---
> #line 3327
4951,4952c5018,5019
< #line 3039
<   goto ldv_17365;
---
> #line 3333
>   goto ldv_22605;
4954c5021
< #line 3043
---
> #line 3337
4956c5023
< #line 3060
---
> #line 3355
4958c5025
< #line 3061
---
> #line 3356
4960c5027
< #line 3065
---
> #line 3360
4962,4963c5029,5030
< #line 3071
<   goto ldv_17365;
---
> #line 3366
>   goto ldv_22605;
4965c5032
< #line 3075
---
> #line 3370
4967c5034
< #line 3092
---
> #line 3388
4969c5036
< #line 3093
---
> #line 3389
4971c5038
< #line 3097
---
> #line 3393
4973,4974c5040,5041
< #line 3103
<   goto ldv_17365;
---
> #line 3399
>   goto ldv_22605;
4976,4977c5043,5044
< #line 3104
<   goto ldv_17365;
---
> #line 3400
>   goto ldv_22605;
4979,4981c5046,5048
<   ldv_17365: ;
<   ldv_17410: 
< #line 1743
---
>   ldv_22605: ;
>   ldv_22650: 
> #line 1997
4983c5050
< #line 1743
---
> #line 1997
4985,4986c5052,5053
< #line 1748
<     goto ldv_17409;
---
> #line 2002
>     goto ldv_22649;
4992c5059
< #line 3129
---
> #line 3426
4994c5061
< #line 3130
---
> #line 3427
4997c5064
< #line 3133
---
> #line 3430
4999c5066,5114
< #line 3136
---
> #line 3433
>   return;
> }
> }
> #line 3437 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3442
>   ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
> #line 3444
>   mutex_lock(ldv_func_arg1);
> #line 3445
>   return;
> }
> }
> #line 3447 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) 
> { 
>   ldv_func_ret_type___0 ldv_func_res ;
>   int tmp ;
>   int tmp___0 ;
> 
>   {
> #line 3452
>   tmp = mutex_trylock(ldv_func_arg1);
> #line 3452
>   ldv_func_res = tmp;
> #line 3454
>   tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
> #line 3454
>   return (tmp___0);
> #line 3456
>   return (ldv_func_res);
> }
> }
> #line 3459 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> void ldv_mutex_unlock_3(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3464
>   ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
> #line 3466
>   mutex_unlock(ldv_func_arg1);
> #line 3467
5002a5118,5158
> #line 3469 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> void ldv_mutex_lock_4(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3474
>   ldv_mutex_lock_pm_mutex(ldv_func_arg1);
> #line 3476
>   mutex_lock(ldv_func_arg1);
> #line 3477
>   return;
> }
> }
> #line 3479 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/regulator/wm831x-dcdc.c.prepared"
> void ldv_mutex_unlock_5(struct mutex *ldv_func_arg1 ) 
> { 
> 
> 
>   {
> #line 3484
>   ldv_mutex_unlock_pm_mutex(ldv_func_arg1);
> #line 3486
>   mutex_unlock(ldv_func_arg1);
> #line 3487
>   return;
> }
> }
> #line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
> __inline static void ldv_error(void) 
> { 
> 
> 
>   {
>   LDV_ERROR: reach_error();
> #line 12
>   goto LDV_ERROR;
> }
> }
> #line 25
> extern int ldv_undef_int(void) ;
5013c5169,5515
< #line 10 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 8 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_mutex_of_device  ;
> #line 11 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 16
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 16
>     ldv_error();
>   }
> #line 19
>   nondetermined = ldv_undef_int();
> #line 22
>   if (nondetermined) {
> #line 25
>     ldv_mutex_mutex_of_device = 2;
> #line 27
>     return (0);
>   } else {
> #line 32
>     return (-4);
>   }
> }
> }
> #line 37 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 42
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 42
>     ldv_error();
>   }
> #line 45
>   nondetermined = ldv_undef_int();
> #line 48
>   if (nondetermined) {
> #line 51
>     ldv_mutex_mutex_of_device = 2;
> #line 53
>     return (0);
>   } else {
> #line 58
>     return (-4);
>   }
> }
> }
> #line 63 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 66
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 66
>     ldv_error();
>   }
> #line 68
>   ldv_mutex_mutex_of_device = 2;
> #line 69
>   return;
> }
> }
> #line 72 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
> { 
>   int is_mutex_held_by_another_thread ;
> 
>   {
> #line 77
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 77
>     ldv_error();
>   }
> #line 80
>   is_mutex_held_by_another_thread = ldv_undef_int();
> #line 83
>   if (is_mutex_held_by_another_thread) {
> #line 86
>     return (0);
>   } else {
> #line 91
>     ldv_mutex_mutex_of_device = 2;
> #line 93
>     return (1);
>   }
> }
> }
> #line 98 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
> { 
>   int atomic_value_after_dec ;
> 
>   {
> #line 103
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 103
>     ldv_error();
>   }
> #line 106
>   atomic_value_after_dec = ldv_undef_int();
> #line 109
>   if (atomic_value_after_dec == 0) {
> #line 112
>     ldv_mutex_mutex_of_device = 2;
> #line 114
>     return (1);
>   } else {
> 
>   }
> #line 118
>   return (0);
> }
> }
> #line 123 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 127
>   if (ldv_mutex_mutex_of_device == 1) {
> #line 130
>     nondetermined = ldv_undef_int();
> #line 133
>     if (nondetermined) {
> #line 136
>       return (0);
>     } else {
> #line 141
>       return (1);
>     }
>   } else {
> #line 147
>     return (1);
>   }
> }
> }
> #line 152 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 155
>   if (ldv_mutex_mutex_of_device == 2) {
> 
>   } else {
> #line 155
>     ldv_error();
>   }
> #line 157
>   ldv_mutex_mutex_of_device = 1;
> #line 158
>   return;
> }
> }
> #line 160 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> static int ldv_mutex_pm_mutex  ;
> #line 163 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_interruptible_pm_mutex(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 168
>   if (ldv_mutex_pm_mutex == 1) {
> 
>   } else {
> #line 168
>     ldv_error();
>   }
> #line 171
>   nondetermined = ldv_undef_int();
> #line 174
>   if (nondetermined) {
> #line 177
>     ldv_mutex_pm_mutex = 2;
> #line 179
>     return (0);
>   } else {
> #line 184
>     return (-4);
>   }
> }
> }
> #line 189 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_lock_killable_pm_mutex(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 194
>   if (ldv_mutex_pm_mutex == 1) {
> 
>   } else {
> #line 194
>     ldv_error();
>   }
> #line 197
>   nondetermined = ldv_undef_int();
> #line 200
>   if (nondetermined) {
> #line 203
>     ldv_mutex_pm_mutex = 2;
> #line 205
>     return (0);
>   } else {
> #line 210
>     return (-4);
>   }
> }
> }
> #line 215 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_lock_pm_mutex(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 218
>   if (ldv_mutex_pm_mutex == 1) {
> 
>   } else {
> #line 218
>     ldv_error();
>   }
> #line 220
>   ldv_mutex_pm_mutex = 2;
> #line 221
>   return;
> }
> }
> #line 224 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_trylock_pm_mutex(struct mutex *lock ) 
> { 
>   int is_mutex_held_by_another_thread ;
> 
>   {
> #line 229
>   if (ldv_mutex_pm_mutex == 1) {
> 
>   } else {
> #line 229
>     ldv_error();
>   }
> #line 232
>   is_mutex_held_by_another_thread = ldv_undef_int();
> #line 235
>   if (is_mutex_held_by_another_thread) {
> #line 238
>     return (0);
>   } else {
> #line 243
>     ldv_mutex_pm_mutex = 2;
> #line 245
>     return (1);
>   }
> }
> }
> #line 250 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_atomic_dec_and_mutex_lock_pm_mutex(atomic_t *cnt , struct mutex *lock ) 
> { 
>   int atomic_value_after_dec ;
> 
>   {
> #line 255
>   if (ldv_mutex_pm_mutex == 1) {
> 
>   } else {
> #line 255
>     ldv_error();
>   }
> #line 258
>   atomic_value_after_dec = ldv_undef_int();
> #line 261
>   if (atomic_value_after_dec == 0) {
> #line 264
>     ldv_mutex_pm_mutex = 2;
> #line 266
>     return (1);
>   } else {
> 
>   }
> #line 270
>   return (0);
> }
> }
> #line 275 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> int ldv_mutex_is_locked_pm_mutex(struct mutex *lock ) 
> { 
>   int nondetermined ;
> 
>   {
> #line 279
>   if (ldv_mutex_pm_mutex == 1) {
> #line 282
>     nondetermined = ldv_undef_int();
> #line 285
>     if (nondetermined) {
> #line 288
>       return (0);
>     } else {
> #line 293
>       return (1);
>     }
>   } else {
> #line 299
>     return (1);
>   }
> }
> }
> #line 304 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
> void ldv_mutex_unlock_pm_mutex(struct mutex *lock ) 
> { 
> 
> 
>   {
> #line 307
>   if (ldv_mutex_pm_mutex == 2) {
> 
>   } else {
> #line 307
>     ldv_error();
>   }
> #line 309
>   ldv_mutex_pm_mutex = 1;
> #line 310
>   return;
> }
> }
> #line 314 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
5019c5521,5525
< #line 12
---
> #line 317
>   ldv_mutex_mutex_of_device = 1;
> #line 319
>   ldv_mutex_pm_mutex = 1;
> #line 320
5023c5529
< #line 15 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
---
> #line 323 "/work/ldvuser/novikov/work/current--X--drivers/regulator/wm831x-dcdc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
5029c5535,5549
< #line 17
---
> #line 326
>   if (ldv_mutex_mutex_of_device == 1) {
> 
>   } else {
> #line 326
>     ldv_error();
>   }
> #line 328
>   if (ldv_mutex_pm_mutex == 1) {
> 
>   } else {
> #line 328
>     ldv_error();
>   }
> #line 329
