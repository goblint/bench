6686c6686
< #line 3206
---
> #line 3207
6692c6692
< #line 3472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
6694c6694
< #line 4100 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4101 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
6696c6696
< #line 4263 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4264 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23534a23535,23536
>   peer = *(mdev->p_uuid) & 0xfffffffffffffffeULL;
> #line 2412
23536c23538
< #line 2411
---
> #line 2412
23539,23540d23540
< #line 2412
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
23542c23542
<   if (self == peer) {
---
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
23543a23544,23545
>   if (self == peer) {
> #line 2415
23548c23550
< #line 2411
---
> #line 2412
23551,23552d23552
< #line 2411
<   if (i <= 3) {
23553a23554,23555
>   if (i <= 3) {
> #line 2413
23558,23559d23559
< #line 2417
<   *rule_nr = 90;
23561c23561
<   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
---
>   *rule_nr = 90;
23563c23563
<   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
---
>   self = (mdev->ldev)->md.uuid[1] & 0xfffffffffffffffeULL;
23565c23565
<   if (self == peer && self != 0ULL) {
---
>   peer = *(mdev->p_uuid + 1UL) & 0xfffffffffffffffeULL;
23566a23567,23568
>   if (self == peer && self != 0ULL) {
> #line 2422
23571,23572d23572
< #line 2423
<   *rule_nr = 100;
23573a23574,23575
>   *rule_nr = 100;
> #line 2425
23575c23577
< #line 2424
---
> #line 2425
23578,23579d23579
< #line 2425
<   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
23580a23581,23582
>   self = (mdev->ldev)->md.uuid[i] & 0xfffffffffffffffeULL;
> #line 2427
23582c23584
< #line 2426
---
> #line 2427
23585,23586d23586
< #line 2427
<   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
23588c23588
<   if (self == peer) {
---
>   peer = *(mdev->p_uuid + (unsigned long )j) & 0xfffffffffffffffeULL;
23589a23590,23591
>   if (self == peer) {
> #line 2430
23594c23596
< #line 2426
---
> #line 2427
23597,23598d23598
< #line 2426
<   if (j <= 3) {
23599a23600,23601
>   if (j <= 3) {
> #line 2428
23604c23606
< #line 2424
---
> #line 2425
23607,23608d23608
< #line 2424
<   if (i <= 3) {
23609a23610,23611
>   if (i <= 3) {
> #line 2426
23615c23617
< #line 2433
---
> #line 2434
23619c23621
< #line 2439 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2440 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23668c23670
< #line 2443
---
> #line 2444
23670,23671d23671
< #line 2446
<   mydisk = (enum drbd_disk_state )mdev->state.ldv_32167.disk;
23673c23673
<   if ((unsigned int )mydisk == 3U) {
---
>   mydisk = (enum drbd_disk_state )mdev->state.ldv_32167.disk;
23674a23675,23676
>   if ((unsigned int )mydisk == 3U) {
> #line 2449
23679c23681
< #line 2450
---
> #line 2451
23681c23683
< #line 2450
---
> #line 2451
23683,23684d23684
< #line 2450
<   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
23685a23686,23687
>   printk("<6>%s %s: drbd_sync_handshake:\n", tmp___0, tmp);
> #line 2452
23688c23690
< #line 2452
---
> #line 2453
23690c23692
< #line 2455
---
> #line 2456
23692c23694
< #line 2457
---
> #line 2458
23694c23696
< #line 2457
---
> #line 2458
23696c23698
< #line 2457
---
> #line 2458
23698,23699d23699
< #line 2459
<   if (hg == -1000) {
23700a23701,23702
>   if (hg == -1000) {
> #line 2461
23702c23704
< #line 2460
---
> #line 2461
23704,23705d23705
< #line 2460
<     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
23706a23707,23708
>     printk("<1>%s %s: Unrelated data, aborting!\n", tmp___4, tmp___3);
> #line 2462
23711,23712d23712
< #line 2463
<   if (hg == -1001) {
23713a23714,23715
>   if (hg == -1001) {
> #line 2465
23715c23717
< #line 2464
---
> #line 2465
23717c23719
< #line 2464
---
> #line 2465
23720c23722
< #line 2465
---
> #line 2466
23725c23727
< #line 2468
---
> #line 2469
23727c23729
< #line 2470
---
> #line 2471
23729c23731
< #line 2470
---
> #line 2471
23732c23734
< #line 2470
---
> #line 2471
23734c23736
< #line 2470
---
> #line 2471
23736c23738
< #line 2470
---
> #line 2471
23739c23741
< #line 2470
---
> #line 2471
23743,23744d23744
< #line 2470
<     f = tmp___7;
23746c23746
<     hg = (unsigned int )mydisk > 4U ? 1 : -1;
---
>     f = tmp___7;
23748c23748
<     if (f != 0) {
---
>     hg = (unsigned int )mydisk > 4U ? 1 : -1;
23749a23750,23751
>     if (f != 0) {
> #line 2474
23754c23756
< #line 2474
---
> #line 2475
23756c23758
< #line 2474
---
> #line 2475
23758c23760
< #line 2474
---
> #line 2475
23763,23764d23764
< #line 2478
<   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
23765a23766,23767
>   if (hg == 100 || (hg == -100 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U)) {
> #line 2480
23767c23769
< #line 2481
---
> #line 2482
23769c23771
< #line 2483
---
> #line 2484
23772,23773d23773
< #line 2485
<     hg = drbd_asb_recover_0p(mdev);
23774a23775,23776
>     hg = drbd_asb_recover_0p(mdev);
> #line 2487
23777,23778d23778
< #line 2488
<     hg = drbd_asb_recover_1p(mdev);
23779a23780,23781
>     hg = drbd_asb_recover_1p(mdev);
> #line 2490
23782,23783d23783
< #line 2491
<     hg = drbd_asb_recover_2p(mdev);
23784a23785,23786
>     hg = drbd_asb_recover_2p(mdev);
> #line 2493
23788c23790
< #line 2494
---
> #line 2495
23790,23791d23791
< #line 2494
<     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
23792a23793,23794
>     if ((__x___0 < 0L ? - __x___0 : __x___0) <= 99L) {
> #line 2496
23794c23796
< #line 2495
---
> #line 2496
23796c23798
< #line 2495
---
> #line 2496
23799,23800d23800
< #line 2498
<       if (forced != 0) {
23801a23802,23803
>       if (forced != 0) {
> #line 2500
23803c23805
< #line 2499
---
> #line 2500
23805c23807
< #line 2499
---
> #line 2500
23808c23810
< #line 2501
---
> #line 2502
23819,23820d23820
< #line 2506
<   if (hg == -100) {
23822c23822
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
---
>   if (hg == -100) {
23823a23824,23825
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U && (*(mdev->p_uuid + 5UL) & 1ULL) == 0ULL) {
> #line 2509
23828,23829d23829
< #line 2509
<     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
23830a23831,23832
>     if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U && (int )*(mdev->p_uuid + 5UL) & 1) {
> #line 2511
23835c23837
< #line 2512
---
> #line 2513
23837,23838d23838
< #line 2512
<     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
23839a23840,23841
>     if ((__x___1 < 0L ? - __x___1 : __x___1) <= 99L) {
> #line 2514
23841c23843
< #line 2513
---
> #line 2514
23843c23845
< #line 2513
---
> #line 2514
23852,23853d23853
< #line 2518
<   if (hg == -100) {
23854a23855,23856
>   if (hg == -100) {
> #line 2520
23856c23858
< #line 2519
---
> #line 2520
23858,23859d23859
< #line 2519
<     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
23861c23861
<     drbd_khelper(mdev, (char *)"split-brain");
---
>     printk("<1>%s %s: Split-Brain detected, dropping connection!\n", tmp___17, tmp___16);
23862a23863,23864
>     drbd_khelper(mdev, (char *)"split-brain");
> #line 2522
23867,23868d23868
< #line 2524
<   if (hg > 0 && (unsigned int )mydisk <= 4U) {
23869a23870,23871
>   if (hg > 0 && (unsigned int )mydisk <= 4U) {
> #line 2526
23871c23873
< #line 2525
---
> #line 2526
23873c23875
< #line 2525
---
> #line 2526
23876c23878
< #line 2526
---
> #line 2527
23881c23883
< #line 2529
---
> #line 2530
23883c23885
< #line 2531
---
> #line 2532
23886c23888
< #line 2533
---
> #line 2534
23889c23891
< #line 2536
---
> #line 2537
23891c23893
< #line 2536
---
> #line 2537
23893,23894d23894
< #line 2536
<     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
23895a23896,23897
>     printk("<3>%s %s: I shall become SyncTarget, but I am primary!\n", tmp___21, tmp___20);
> #line 2538
23898c23900
< #line 2539
---
> #line 2540
23900c23902
< #line 2539
---
> #line 2540
23902c23904
< #line 2539
---
> #line 2540
23909c23911
< #line 2544
---
> #line 2545
23911,23912d23912
< #line 2544
<   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
23913a23914,23915
>   if ((__x___2 < 0L ? - __x___2 : __x___2) > 1L) {
> #line 2546
23915c23917
< #line 2545
---
> #line 2546
23917c23919
< #line 2545
---
> #line 2546
23920c23922
< #line 2546
---
> #line 2547
23922,23923d23923
< #line 2546
<     if (tmp___26 != 0) {
23924a23925,23926
>     if (tmp___26 != 0) {
> #line 2548
23932,23933d23933
< #line 2550
<   if (hg > 0) {
23934a23935,23936
>   if (hg > 0) {
> #line 2552
23937,23938d23938
< #line 2552
<   if (hg < 0) {
23939a23940,23941
>   if (hg < 0) {
> #line 2554
23942,23943d23943
< #line 2555
<     rv = C_CONNECTED;
23944a23945,23946
>     rv = C_CONNECTED;
> #line 2557
23946,23947d23947
< #line 2556
<     if (tmp___30 != 0UL) {
23948a23949,23950
>     if (tmp___30 != 0UL) {
> #line 2558
23950c23952
< #line 2557
---
> #line 2558
23952c23954
< #line 2557
---
> #line 2558
23954c23956
< #line 2557
---
> #line 2558
23961c23963
< #line 2562
---
> #line 2563
23965c23967
< #line 2566 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2567 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
23971c23973
< #line 2569
---
> #line 2570
23973c23975
< #line 2571
---
> #line 2572
23978c23980
< #line 2574
---
> #line 2575
23980c23982
< #line 2576
---
> #line 2577
23985,23986d23986
< #line 2579
<   if ((unsigned int )peer == (unsigned int )self) {
23987a23988,23989
>   if ((unsigned int )peer == (unsigned int )self) {
> #line 2581
23992c23994
< #line 2583
---
> #line 2584
23996c23998
< #line 2586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2587 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24043c24045
< #line 2588
---
> #line 2589
24045c24047
< #line 2592
---
> #line 2593
24047c24049
< #line 2592
---
> #line 2593
24049c24051
< #line 2592
---
> #line 2593
24051c24053
< #line 2592
---
> #line 2593
24053c24055
< #line 2592
---
> #line 2593
24058c24060
< #line 2592
---
> #line 2593
24060c24062
< #line 2592
---
> #line 2593
24063,24064d24064
< #line 2594
<   header_size = 24;
24065a24066,24067
>   header_size = 24;
> #line 2596
24067c24069
< #line 2597
---
> #line 2598
24069,24070d24070
< #line 2597
<   if (tmp___0 != header_size) {
24071a24072,24073
>   if (tmp___0 != header_size) {
> #line 2599
24076c24078
< #line 2600
---
> #line 2601
24078,24079d24079
< #line 2600
<   p_proto = (int )tmp___1;
24080a24081,24082
>   p_proto = (int )tmp___1;
> #line 2602
24082,24083d24083
< #line 2601
<   p_after_sb_0p = (int )tmp___2;
24084a24085,24086
>   p_after_sb_0p = (int )tmp___2;
> #line 2603
24086,24087d24087
< #line 2602
<   p_after_sb_1p = (int )tmp___3;
24088a24089,24090
>   p_after_sb_1p = (int )tmp___3;
> #line 2604
24090,24091d24091
< #line 2603
<   p_after_sb_2p = (int )tmp___4;
24092a24093,24094
>   p_after_sb_2p = (int )tmp___4;
> #line 2605
24094,24095d24095
< #line 2604
<   p_want_lose = (int )tmp___5;
24096a24097,24098
>   p_want_lose = (int )tmp___5;
> #line 2606
24098c24100
< #line 2605
---
> #line 2606
24100,24101d24101
< #line 2607
<   if ((mdev->net_conf)->wire_protocol != p_proto) {
24102a24103,24104
>   if ((mdev->net_conf)->wire_protocol != p_proto) {
> #line 2609
24104c24106
< #line 2608
---
> #line 2609
24106,24107d24107
< #line 2608
<     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
24108a24109,24110
>     printk("<3>%s %s: incompatible communication protocols\n", tmp___8, tmp___7);
> #line 2610
24113c24115
< #line 2612
---
> #line 2613
24115,24116d24116
< #line 2612
<   if (tmp___11 != 0) {
24117a24118,24119
>   if (tmp___11 != 0) {
> #line 2614
24119c24121
< #line 2613
---
> #line 2614
24121,24122d24122
< #line 2613
<     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
24123a24124,24125
>     printk("<3>%s %s: incompatible after-sb-0pri settings\n", tmp___10, tmp___9);
> #line 2615
24128c24130
< #line 2617
---
> #line 2618
24130,24131d24131
< #line 2617
<   if (tmp___14 != 0) {
24132a24133,24134
>   if (tmp___14 != 0) {
> #line 2619
24134c24136
< #line 2618
---
> #line 2619
24136,24137d24137
< #line 2618
<     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
24138a24139,24140
>     printk("<3>%s %s: incompatible after-sb-1pri settings\n", tmp___13, tmp___12);
> #line 2620
24143c24145
< #line 2622
---
> #line 2623
24145,24146d24146
< #line 2622
<   if (tmp___17 != 0) {
24147a24148,24149
>   if (tmp___17 != 0) {
> #line 2624
24149c24151
< #line 2623
---
> #line 2624
24151,24152d24152
< #line 2623
<     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
24153a24154,24155
>     printk("<3>%s %s: incompatible after-sb-2pri settings\n", tmp___16, tmp___15);
> #line 2625
24158,24159d24159
< #line 2627
<   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
24160a24161,24162
>   if (p_want_lose != 0 && (unsigned int )*((unsigned char *)mdev->net_conf + 528UL) != 0U) {
> #line 2629
24162c24164
< #line 2628
---
> #line 2629
24164,24165d24165
< #line 2628
<     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
24166a24167,24168
>     printk("<3>%s %s: both sides have the \'want_lose\' flag set\n", tmp___19, tmp___18);
> #line 2630
24171,24172d24172
< #line 2632
<   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
24173a24174,24175
>   if ((int )(mdev->net_conf)->two_primaries != p_two_primaries) {
> #line 2634
24175c24177
< #line 2633
---
> #line 2634
24177c24179
< #line 2633
---
> #line 2634
24180c24182
< #line 2634
---
> #line 2635
24185,24186d24186
< #line 2637
<   if (mdev->agreed_pro_version > 86) {
24187a24188,24189
>   if (mdev->agreed_pro_version > 86) {
> #line 2639
24189c24191
< #line 2640
---
> #line 2641
24191,24192d24192
< #line 2640
<     if (tmp___22 != data_size) {
24193a24194,24195
>     if (tmp___22 != data_size) {
> #line 2642
24198,24199d24199
< #line 2643
<     p_integrity_alg[63] = 0;
24200a24201,24202
>     p_integrity_alg[63] = 0;
> #line 2645
24202,24203d24203
< #line 2644
<     if (tmp___25 != 0) {
24204a24205,24206
>     if (tmp___25 != 0) {
> #line 2646
24206c24208
< #line 2645
---
> #line 2646
24208c24210
< #line 2645
---
> #line 2646
24211c24213
< #line 2646
---
> #line 2647
24216c24218
< #line 2648
---
> #line 2649
24218c24220
< #line 2648
---
> #line 2649
24220c24222
< #line 2648
---
> #line 2649
24225c24227
< #line 2652
---
> #line 2653
24228c24230
< #line 2655
---
> #line 2656
24230c24232
< #line 2655
---
> #line 2656
24232c24234
< #line 2655
---
> #line 2656
24234c24236
< #line 2655
---
> #line 2656
24236,24237d24237
< #line 2655
<   drbd_force_state(mdev, mask, val);
24238a24239,24240
>   drbd_force_state(mdev, mask, val);
> #line 2657
24242c24244
< #line 2664 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2665 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24258,24259d24259
< #line 2669
<   if ((int )((signed char )*alg) == 0) {
24260a24261,24262
>   if ((int )((signed char )*alg) == 0) {
> #line 2671
24265,24266d24266
< #line 2672
<   tfm = crypto_alloc_hash(alg, 0U, 128U);
24267a24268,24269
>   tfm = crypto_alloc_hash(alg, 0U, 128U);
> #line 2674
24269,24270d24270
< #line 2673
<   if (tmp___2 != 0L) {
24271a24272,24273
>   if (tmp___2 != 0L) {
> #line 2675
24273c24275
< #line 2674
---
> #line 2675
24275c24277
< #line 2674
---
> #line 2675
24277c24279
< #line 2674
---
> #line 2675
24280c24282
< #line 2676
---
> #line 2677
24285c24287
< #line 2678
---
> #line 2679
24287c24289
< #line 2678
---
> #line 2679
24289,24290d24290
< #line 2678
<   if (tmp___7 == 0) {
24292c24292
<     crypto_free_hash(tfm);
---
>   if (tmp___7 == 0) {
24293a24294,24295
>     crypto_free_hash(tfm);
> #line 2681
24295c24297
< #line 2680
---
> #line 2681
24297,24298d24298
< #line 2680
<     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
24299a24300,24301
>     printk("<3>%s %s: \"%s\" is not a digest (%s)\n", tmp___4, tmp___3, alg, name);
> #line 2682
24301c24303
< #line 2681
---
> #line 2682
24306c24308
< #line 2683
---
> #line 2684
24310c24312
< #line 2686 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2687 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24354,24355d24355
< #line 2688
<   ok = 1;
24356a24357,24358
>   ok = 1;
> #line 2690
24358,24359d24359
< #line 2691
<   verify_tfm = 0;
24361c24361
<   csums_tfm = 0;
---
>   verify_tfm = 0;
24362a24363,24364
>   csums_tfm = 0;
> #line 2694
24364c24366
< #line 2695
---
> #line 2696
24366,24367d24367
< #line 2700
<   if ((unsigned int )h->length > exp_max_sz) {
24368a24369,24370
>   if ((unsigned int )h->length > exp_max_sz) {
> #line 2702
24370c24372
< #line 2701
---
> #line 2702
24372c24374
< #line 2701
---
> #line 2702
24375c24377
< #line 2703
---
> #line 2704
24380,24381d24381
< #line 2706
<   if (apv <= 88) {
24383c24383
<     header_size = 4U;
---
>   if (apv <= 88) {
24384a24385,24386
>     header_size = 4U;
> #line 2709
24387,24388d24388
< #line 2710
<     header_size = 132U;
24390c24390
<     data_size = (unsigned int )h->length - header_size;
---
>     header_size = 132U;
24391a24392,24393
>     data_size = (unsigned int )h->length - header_size;
> #line 2713
24393c24395
< #line 2712
---
> #line 2713
24395c24397
< #line 2712
---
> #line 2713
24397c24399
< #line 2712
---
> #line 2713
24399c24401
<              2712);
---
>              2713);
24404c24406
< #line 2716
---
> #line 2717
24406c24408
< #line 2718
---
> #line 2719
24408,24409d24409
< #line 2718
<   if ((unsigned int )tmp___3 != header_size) {
24410a24411,24412
>   if ((unsigned int )tmp___3 != header_size) {
> #line 2720
24415c24417
< #line 2721
---
> #line 2722
24417c24419
< #line 2721
---
> #line 2722
24419,24420d24420
< #line 2723
<   if (apv > 87) {
24422c24422
<     if (apv == 88) {
---
>   if (apv > 87) {
24424c24424
<       if (data_size > 64U) {
---
>     if (apv == 88) {
24425a24426,24427
>       if (data_size > 64U) {
> #line 2727
24427c24429
< #line 2726
---
> #line 2727
24429c24431
< #line 2726
---
> #line 2727
24432c24434
< #line 2729
---
> #line 2730
24437c24439
< #line 2732
---
> #line 2733
24439,24440d24440
< #line 2732
<       if ((unsigned int )tmp___7 != data_size) {
24441a24442,24443
>       if ((unsigned int )tmp___7 != data_size) {
> #line 2734
24446c24448
< #line 2737
---
> #line 2738
24448c24450
< #line 2737
---
> #line 2738
24450c24452
< #line 2737
---
> #line 2738
24452c24454
< #line 2737
---
> #line 2738
24455c24457
<                2737);
---
>                2738);
24459c24461
< #line 2738
---
> #line 2739
24462c24464
< #line 2743
---
> #line 2744
24464c24466
< #line 2743
---
> #line 2744
24466c24468
< #line 2743
---
> #line 2744
24468c24470
< #line 2743
---
> #line 2744
24471c24473
<                2743);
---
>                2744);
24475c24477
< #line 2744
---
> #line 2745
24477c24479
< #line 2744
---
> #line 2745
24479c24481
< #line 2744
---
> #line 2745
24481c24483
< #line 2744
---
> #line 2745
24484c24486
<                2744);
---
>                2745);
24488,24489d24489
< #line 2745
<       p->verify_alg[63] = 0;
24490a24491,24492
>       p->verify_alg[63] = 0;
> #line 2747
24493c24495
< #line 2749
---
> #line 2750
24495,24496d24496
< #line 2749
<     if (tmp___17 != 0) {
24498c24498
<       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>     if (tmp___17 != 0) {
24499a24500,24501
>       if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2752
24501c24503
< #line 2751
---
> #line 2752
24503c24505
< #line 2751
---
> #line 2752
24507c24509
< #line 2753
---
> #line 2754
24512c24514
< #line 2755
---
> #line 2756
24516c24518
< #line 2757
---
> #line 2758
24518,24519d24519
< #line 2757
<       if (tmp___16 != 0L) {
24521c24521
<         verify_tfm = 0;
---
>       if (tmp___16 != 0L) {
24522a24523,24524
>         verify_tfm = 0;
> #line 2760
24530c24532
< #line 2763
---
> #line 2764
24532c24534
< #line 2763
---
> #line 2764
24534,24535d24535
< #line 2763
<       if (tmp___21 != 0) {
24537c24537
<         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
---
>       if (tmp___21 != 0) {
24538a24539,24540
>         if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2766
24540c24542
< #line 2765
---
> #line 2766
24542c24544
< #line 2765
---
> #line 2766
24546c24548
< #line 2767
---
> #line 2768
24551c24553
< #line 2769
---
> #line 2770
24555c24557
< #line 2771
---
> #line 2772
24557,24558d24558
< #line 2771
<         if (tmp___20 != 0L) {
24560c24560
<           csums_tfm = 0;
---
>         if (tmp___20 != 0L) {
24561a24562,24563
>           csums_tfm = 0;
> #line 2774
24572c24574
< #line 2778
---
> #line 2779
24574,24575d24575
< #line 2780
<     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
24577c24577
<       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
---
>     if ((unsigned long )verify_tfm != (unsigned long )((struct crypto_hash *)0)) {
24578a24579,24580
>       strcpy((char *)(& mdev->sync_conf.verify_alg), (char const   *)(& p->verify_alg));
> #line 2783
24580,24581d24581
< #line 2782
<       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
24583c24583
<       crypto_free_hash(mdev->verify_tfm);
---
>       mdev->sync_conf.verify_alg_len = (int )((unsigned int )tmp___22 + 1U);
24585c24585
<       mdev->verify_tfm = verify_tfm;
---
>       crypto_free_hash(mdev->verify_tfm);
24586a24587,24588
>       mdev->verify_tfm = verify_tfm;
> #line 2786
24588c24590
< #line 2785
---
> #line 2786
24590c24592
< #line 2785
---
> #line 2786
24595,24596d24596
< #line 2787
<     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
24598c24598
<       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
---
>     if ((unsigned long )csums_tfm != (unsigned long )((struct crypto_hash *)0)) {
24599a24600,24601
>       strcpy((char *)(& mdev->sync_conf.csums_alg), (char const   *)(& p->csums_alg));
> #line 2790
24601,24602d24602
< #line 2789
<       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
24604c24604
<       crypto_free_hash(mdev->csums_tfm);
---
>       mdev->sync_conf.csums_alg_len = (int )((unsigned int )tmp___25 + 1U);
24606c24606
<       mdev->csums_tfm = csums_tfm;
---
>       crypto_free_hash(mdev->csums_tfm);
24607a24608,24609
>       mdev->csums_tfm = csums_tfm;
> #line 2793
24609c24611
< #line 2792
---
> #line 2793
24611c24613
< #line 2792
---
> #line 2793
24616c24618
< #line 2794
---
> #line 2795
24621c24623
< #line 2797
---
> #line 2798
24624c24626
< #line 2801
---
> #line 2802
24626,24627d24627
< #line 2803
<   crypto_free_hash(verify_tfm);
24628a24629,24630
>   crypto_free_hash(verify_tfm);
> #line 2805
24630c24632
< #line 2804
---
> #line 2805
24632c24634
< #line 2804
---
> #line 2805
24634c24636
< #line 2804
---
> #line 2805
24636,24637d24637
< #line 2804
<   drbd_force_state(mdev, mask, val);
24638a24639,24640
>   drbd_force_state(mdev, mask, val);
> #line 2806
24642c24644
< #line 2808 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2809 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24648c24650
< #line 2810
---
> #line 2811
24652c24654
< #line 2815 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2816 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24661,24662d24662
< #line 2819
<   if (a == 0UL || b == 0UL) {
24663a24664,24665
>   if (a == 0UL || b == 0UL) {
> #line 2821
24668,24669d24669
< #line 2821
<   d = a > b ? a - b : b - a;
24671c24671
<   if (a >> 3 < d || b >> 3 < d) {
---
>   d = a > b ? a - b : b - a;
24672a24673,24674
>   if (a >> 3 < d || b >> 3 < d) {
> #line 2824
24674c24676
< #line 2823
---
> #line 2824
24676c24678
< #line 2823
---
> #line 2824
24682c24684
< #line 2824
---
> #line 2825
24686c24688
< #line 2827 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2828 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
24739,24740d24740
< #line 2829
<   p = (struct p_sizes *)h;
24741a24742,24743
>   p = (struct p_sizes *)h;
> #line 2831
24743c24745
< #line 2833
---
> #line 2834
24745c24747
< #line 2836
---
> #line 2837
24747c24749
< #line 2836
---
> #line 2837
24749c24751
< #line 2836
---
> #line 2837
24751c24753
< #line 2836
---
> #line 2837
24753c24755
< #line 2836
---
> #line 2837
24756c24758
<            2836);
---
>            2837);
24760c24762
< #line 2836
---
> #line 2837
24762c24764
< #line 2836
---
> #line 2837
24767c24769
< #line 2837
---
> #line 2838
24769,24770d24770
< #line 2837
<   if (tmp___1 != (int )h->length) {
24771a24772,24773
>   if (tmp___1 != (int )h->length) {
> #line 2839
24776c24778
< #line 2840
---
> #line 2841
24778,24779d24779
< #line 2840
<   p_size = (sector_t )tmp___2;
24780a24781,24782
>   p_size = (sector_t )tmp___2;
> #line 2842
24782c24784
< #line 2841
---
> #line 2842
24784,24785d24785
< #line 2843
<   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
24786a24787,24788
>   if (p_size == 0UL && (unsigned int )*((unsigned char *)mdev + 1805UL) == 0U) {
> #line 2845
24788c24790
< #line 2844
---
> #line 2845
24790,24791d24791
< #line 2844
<     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
24792a24793,24794
>     printk("<3>%s %s: some backing storage is needed\n", tmp___5, tmp___4);
> #line 2846
24794c24796
< #line 2845
---
> #line 2846
24796c24798
< #line 2845
---
> #line 2846
24798c24800
< #line 2845
---
> #line 2846
24800,24801d24801
< #line 2845
<     drbd_force_state(mdev, mask, val);
24802a24803,24804
>     drbd_force_state(mdev, mask, val);
> #line 2847
24807c24809
< #line 2851
---
> #line 2852
24809c24811
< #line 2854
---
> #line 2855
24811,24812d24812
< #line 2854
<   if (tmp___14 != 0) {
24813a24814,24815
>   if (tmp___14 != 0) {
> #line 2856
24815c24817
< #line 2855
---
> #line 2856
24817c24819
< #line 2857
---
> #line 2858
24819,24820d24820
< #line 2862
<     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
24821a24822,24823
>     if ((unsigned int )*((unsigned short *)mdev + 902UL) == 144U) {
> #line 2864
24823c24825
< #line 2863
---
> #line 2864
24825c24827
< #line 2863
---
> #line 2864
24828c24830
< #line 2863
---
> #line 2864
24830c24832
< #line 2863
---
> #line 2864
24832c24834
< #line 2863
---
> #line 2864
24835c24837
< #line 2863
---
> #line 2864
24838c24840
< #line 2863
---
> #line 2864
24844c24846
< #line 2866
---
> #line 2867
24846,24847d24847
< #line 2868
<     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
24849c24849
<       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
---
>     if ((mdev->ldev)->dc.disk_size != (unsigned long long )p_usize) {
24850a24851,24852
>       (mdev->ldev)->dc.disk_size = (__u64 )p_usize;
> #line 2871
24852c24854
< #line 2870
---
> #line 2871
24854c24856
< #line 2870
---
> #line 2871
24859c24861
< #line 2876
---
> #line 2877
24861c24863
< #line 2876
---
> #line 2877
24863c24865
< #line 2876
---
> #line 2877
24865c24867
< #line 2880
---
> #line 2881
24867c24869
< #line 2880
---
> #line 2881
24869,24870d24870
< #line 2880
<       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
24871a24872,24873
>       printk("<3>%s %s: The peer\'s disk size is too small!\n", tmp___11, tmp___10);
> #line 2882
24873c24875
< #line 2881
---
> #line 2882
24875c24877
< #line 2881
---
> #line 2882
24877c24879
< #line 2881
---
> #line 2882
24879,24880d24880
< #line 2881
<       drbd_force_state(mdev, mask___0, val___0);
24882c24882
<       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
---
>       drbd_force_state(mdev, mask___0, val___0);
24884c24884
<       put_ldev(mdev);
---
>       (mdev->ldev)->dc.disk_size = (__u64 )my_usize;
24885a24886,24887
>       put_ldev(mdev);
> #line 2885
24890c24892
< #line 2886
---
> #line 2887
24895c24897
< #line 2890
---
> #line 2891
24897,24898d24898
< #line 2890
<   if (tmp___15 != 0) {
24900c24900
<     dd = drbd_determin_dev_size(mdev);
---
>   if (tmp___15 != 0) {
24902c24902
<     put_ldev(mdev);
---
>     dd = drbd_determin_dev_size(mdev);
24904c24904
<     if ((int )dd == -1) {
---
>     put_ldev(mdev);
24905a24906,24907
>     if ((int )dd == -1) {
> #line 2895
24910c24912
< #line 2895
---
> #line 2896
24913c24915
< #line 2898
---
> #line 2899
24916c24918
< #line 2901
---
> #line 2902
24918c24920
< #line 2901
---
> #line 2902
24920,24921d24921
< #line 2901
<     if (tmp___17 != 0) {
24922a24923,24924
>     if (tmp___17 != 0) {
> #line 2903
24925c24927
< #line 2904
---
> #line 2905
24927,24928d24928
< #line 2906
<       if ((unsigned int )nconn == 31U) {
24929a24930,24931
>       if ((unsigned int )nconn == 31U) {
> #line 2908
24931c24933
< #line 2907
---
> #line 2908
24933c24935
< #line 2907
---
> #line 2908
24935c24937
< #line 2907
---
> #line 2908
24937,24938d24938
< #line 2907
<         drbd_force_state(mdev, mask___1, val___1);
24939a24940,24941
>         drbd_force_state(mdev, mask___1, val___1);
> #line 2909
24944c24946
< #line 2911
---
> #line 2912
24946c24948
< #line 2911
---
> #line 2912
24948c24950
< #line 2911
---
> #line 2912
24950c24952
< #line 2911
---
> #line 2912
24952c24954
< #line 2911
---
> #line 2912
24954,24955d24955
< #line 2911
<       if (tmp___16 <= 0) {
24956a24957,24958
>       if (tmp___16 <= 0) {
> #line 2913
24958c24960
< #line 2912
---
> #line 2913
24960c24962
< #line 2912
---
> #line 2913
24962c24964
< #line 2912
---
> #line 2913
24964,24965d24965
< #line 2912
<         drbd_force_state(mdev, mask___2, val___2);
24966a24967,24968
>         drbd_force_state(mdev, mask___2, val___2);
> #line 2914
24977c24979
< #line 2917
---
> #line 2918
24979,24980d24980
< #line 2917
<   if (tmp___22 != 0) {
24981a24982,24983
>   if (tmp___22 != 0) {
> #line 2919
24983,24984d24984
< #line 2918
<     if ((mdev->ldev)->known_size != tmp___18) {
24986c24986
<       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
---
>     if ((mdev->ldev)->known_size != tmp___18) {
24987a24988,24989
>       (mdev->ldev)->known_size = drbd_get_capacity((mdev->ldev)->backing_bdev);
> #line 2921
24992c24994
< #line 2923
---
> #line 2924
24994,24995d24995
< #line 2923
<     max_seg_s = tmp___19;
24996a24997,24998
>     max_seg_s = tmp___19;
> #line 2925
24998,24999d24999
< #line 2924
<     if (tmp___20 != max_seg_s) {
25000a25001,25002
>     if (tmp___20 != max_seg_s) {
> #line 2926
25005c25007
< #line 2927
---
> #line 2928
25007,25008d25008
< #line 2927
<     drbd_setup_order_type(mdev, (int )tmp___21);
25009a25010,25011
>     drbd_setup_order_type(mdev, (int )tmp___21);
> #line 2929
25014,25015d25015
< #line 2931
<   if ((int )mdev->state.ldv_32167.conn > 9) {
25016a25017,25018
>   if ((int )mdev->state.ldv_32167.conn > 9) {
> #line 2933
25018c25020
< #line 2932
---
> #line 2933
25020c25022
< #line 2932
---
> #line 2933
25022c25024
< #line 2936
---
> #line 2937
25027c25029
< #line 2938
---
> #line 2939
25029c25031
< #line 2938
---
> #line 2939
25031c25033
< #line 2940
---
> #line 2941
25033c25035
< #line 2942
---
> #line 2943
25036c25038
< #line 2944
---
> #line 2945
25045c25047
< #line 2948
---
> #line 2949
25049c25051
< #line 2951 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 2952 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25076c25078
< #line 2953
---
> #line 2954
25078c25080
< #line 2957
---
> #line 2958
25080c25082
< #line 2957
---
> #line 2958
25082c25084
< #line 2957
---
> #line 2958
25084c25086
< #line 2957
---
> #line 2958
25086c25088
< #line 2957
---
> #line 2958
25089c25091
<            2957);
---
>            2958);
25093c25095
< #line 2957
---
> #line 2958
25095c25097
< #line 2957
---
> #line 2958
25100c25102
< #line 2958
---
> #line 2959
25102,25103d25103
< #line 2958
<   if (tmp___1 != (int )h->length) {
25104a25105,25106
>   if (tmp___1 != (int )h->length) {
> #line 2960
25109c25111
< #line 2961
---
> #line 2962
25111c25113
< #line 2961
---
> #line 2962
25113c25115
< #line 2963
---
> #line 2964
25115c25117
< #line 2963
---
> #line 2964
25118c25120
< #line 2964
---
> #line 2965
25120c25122
< #line 2964
---
> #line 2965
25122c25124
< #line 2963
---
> #line 2964
25125,25126d25126
< #line 2963
<   if (i <= 5) {
25127a25128,25129
>   if (i <= 5) {
> #line 2965
25132,25133d25133
< #line 2966
<   kfree((void const   *)mdev->p_uuid);
25134a25135,25136
>   kfree((void const   *)mdev->p_uuid);
> #line 2968
25136c25138
< #line 2969
---
> #line 2970
25138c25140
< #line 2973
---
> #line 2974
25140c25142
< #line 2973
---
> #line 2974
25142c25144
< #line 2973
---
> #line 2974
25145c25147
< #line 2975
---
> #line 2976
25147c25149
< #line 2975
---
> #line 2976
25149c25151
< #line 2975
---
> #line 2976
25151c25153
< #line 2975
---
> #line 2976
25153,25154d25154
< #line 2975
<     drbd_force_state(mdev, mask, val);
25155a25156,25157
>     drbd_force_state(mdev, mask, val);
> #line 2977
25160c25162
< #line 2979
---
> #line 2980
25162,25163d25163
< #line 2979
<   if (tmp___8 != 0) {
25164a25165,25166
>   if (tmp___8 != 0) {
> #line 2981
25166,25167d25167
< #line 2985
<     if (skip_initial_sync != 0) {
25168a25169,25170
>     if (skip_initial_sync != 0) {
> #line 2987
25170c25172
< #line 2986
---
> #line 2987
25172c25174
< #line 2986
---
> #line 2987
25175c25177
< #line 2987
---
> #line 2988
25177,25178d25178
< #line 2989
<       _drbd_uuid_set(mdev, 0, *p_uuid);
25180c25180
<       _drbd_uuid_set(mdev, 1, 0ULL);
---
>       _drbd_uuid_set(mdev, 0, *p_uuid);
25181a25182,25183
>       _drbd_uuid_set(mdev, 1, 0ULL);
> #line 2992
25183c25185
< #line 2991
---
> #line 2992
25185c25187
< #line 2991
---
> #line 2992
25187c25189
< #line 2991
---
> #line 2992
25189c25191
< #line 2993
---
> #line 2994
25194c25196
< #line 2995
---
> #line 2996
25199c25201
< #line 3002
---
> #line 3003
25201c25203
< #line 3002
---
> #line 3003
25203c25205
< #line 3002
---
> #line 3003
25208c25210
< #line 3002
---
> #line 3003
25210c25212
< #line 3002
---
> #line 3003
25212c25214
< #line 3002
---
> #line 3003
25214c25216
< #line 3002
---
> #line 3003
25216c25218
< #line 3002
---
> #line 3003
25218c25220
< #line 3002
---
> #line 3003
25221c25223
< #line 3002
---
> #line 3003
25223c25225
< #line 3002
---
> #line 3003
25225c25227
< #line 3002
---
> #line 3003
25227c25229
< #line 3002
---
> #line 3003
25232c25234
< #line 3002
---
> #line 3003
25234c25236
< #line 3002
---
> #line 3003
25237c25239
< #line 3002
---
> #line 3003
25240,25241d25241
< #line 3003
<   if ((int )mdev->state.ldv_32167.conn > 9 && (int )mdev->state.ldv_32167.disk <= 3) {
25242a25243,25244
>   if ((int )mdev->state.ldv_32167.conn > 9 && (int )mdev->state.ldv_32167.disk <= 3) {
> #line 3005
25247c25249
< #line 3006
---
> #line 3007
25251c25253
< #line 3013 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3014 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25258c25260
< #line 3017
---
> #line 3018
25260c25262
< #line 3017
---
> #line 3018
25262c25264
< #line 3017
---
> #line 3018
25264c25266
< #line 3017
---
> #line 3018
25266c25268
< #line 3017
---
> #line 3018
25268c25270
< #line 3017
---
> #line 3018
25270c25272
< #line 3017
---
> #line 3018
25272c25274
< #line 3017
---
> #line 3018
25274c25276
< #line 3017
---
> #line 3018
25276c25278
< #line 3017
---
> #line 3018
25278c25280
< #line 3017
---
> #line 3018
25280c25282
< #line 3017
---
> #line 3018
25282c25284
< #line 3017
---
> #line 3018
25284c25286
< #line 3017
---
> #line 3018
25286c25288
< #line 3017
---
> #line 3018
25288c25290
< #line 3017
---
> #line 3018
25290c25292
< #line 3017
---
> #line 3018
25292c25294
< #line 3017
---
> #line 3018
25294c25296
< #line 3017
---
> #line 3018
25296c25298
< #line 3017
---
> #line 3018
25298c25300
< #line 3017
---
> #line 3018
25300c25302
< #line 3017
---
> #line 3018
25302c25304
< #line 3017
---
> #line 3018
25304c25306
< #line 3017
---
> #line 3018
25306c25308
< #line 3017
---
> #line 3018
25308c25310
< #line 3017
---
> #line 3018
25310c25312
< #line 3017
---
> #line 3018
25312c25314
< #line 3017
---
> #line 3018
25314c25316
< #line 3017
---
> #line 3018
25316c25318
< #line 3017
---
> #line 3018
25318c25320
< #line 3017
---
> #line 3018
25320c25322
< #line 3017
---
> #line 3018
25322c25324
< #line 3027
---
> #line 3028
25324,25325d25325
< #line 3029
<   ms.ldv_32167.conn = (unsigned char )c_tab[(int )ps.ldv_32167.conn];
25327c25327
<   ms.ldv_32167.peer = ps.ldv_32167.role;
---
>   ms.ldv_32167.conn = (unsigned char )c_tab[(int )ps.ldv_32167.conn];
25329c25329
<   ms.ldv_32167.role = ps.ldv_32167.peer;
---
>   ms.ldv_32167.peer = ps.ldv_32167.role;
25331c25331
<   ms.ldv_32167.pdsk = ps.ldv_32167.disk;
---
>   ms.ldv_32167.role = ps.ldv_32167.peer;
25333c25333
<   ms.ldv_32167.disk = ps.ldv_32167.pdsk;
---
>   ms.ldv_32167.pdsk = ps.ldv_32167.disk;
25334a25335,25336
>   ms.ldv_32167.disk = ps.ldv_32167.pdsk;
> #line 3035
25336c25338
< #line 3036
---
> #line 3037
25340c25342
< #line 3039 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3040 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25357c25359
< #line 3041
---
> #line 3042
25359c25361
< #line 3045
---
> #line 3046
25361c25363
< #line 3045
---
> #line 3046
25363c25365
< #line 3045
---
> #line 3046
25365c25367
< #line 3045
---
> #line 3046
25367c25369
< #line 3045
---
> #line 3046
25370c25372
<            3045);
---
>            3046);
25374c25376
< #line 3045
---
> #line 3046
25376c25378
< #line 3045
---
> #line 3046
25381c25383
< #line 3046
---
> #line 3047
25383,25384d25384
< #line 3046
<   if (tmp___1 != (int )h->length) {
25385a25386,25387
>   if (tmp___1 != (int )h->length) {
> #line 3048
25390c25392
< #line 3049
---
> #line 3050
25392,25393d25393
< #line 3049
<   mask.i = tmp___2;
25394a25395,25396
>   mask.i = tmp___2;
> #line 3051
25396c25398
< #line 3050
---
> #line 3051
25398c25400
< #line 3052
---
> #line 3053
25400c25402
< #line 3052
---
> #line 3053
25402c25404
< #line 3052
---
> #line 3053
25404c25406
< #line 3052
---
> #line 3053
25406,25407d25407
< #line 3054
<       drbd_send_sr_reply(mdev, -19);
25408a25409,25410
>       drbd_send_sr_reply(mdev, -19);
> #line 3056
25416,25417d25417
< #line 3058
<   mask = convert_state(mask);
25418a25419,25420
>   mask = convert_state(mask);
> #line 3060
25420c25422
< #line 3061
---
> #line 3062
25422,25423d25423
< #line 3063
<   drbd_send_sr_reply(mdev, rv);
25424a25425,25426
>   drbd_send_sr_reply(mdev, rv);
> #line 3065
25426c25428
< #line 3066
---
> #line 3067
25430c25432
< #line 3069 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3070 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25463c25465
< #line 3071
---
> #line 3072
25465c25467
< #line 3077
---
> #line 3078
25467c25469
< #line 3077
---
> #line 3078
25469c25471
< #line 3077
---
> #line 3078
25471c25473
< #line 3077
---
> #line 3078
25473c25475
< #line 3077
---
> #line 3078
25476c25478
<            3077);
---
>            3078);
25480,25481d25481
< #line 3077
<   if (_b != 0) {
25482a25483,25484
>   if (_b != 0) {
> #line 3079
25487c25489
< #line 3080
---
> #line 3081
25489,25490d25490
< #line 3080
<   if (tmp___1 != (int )h->length) {
25491a25492,25493
>   if (tmp___1 != (int )h->length) {
> #line 3082
25496c25498
< #line 3083
---
> #line 3084
25498c25500
< #line 3083
---
> #line 3084
25500,25501d25501
< #line 3085
<   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32167.disk;
25503c25503
<   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
---
>   real_peer_disk = (enum drbd_disk_state )peer_state.ldv_32167.disk;
25505c25505
<     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
---
>   if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
25506a25507,25508
>     real_peer_disk = (*(mdev->p_uuid + 5UL) & 4ULL) != 0ULL ? D_INCONSISTENT : D_CONSISTENT;
> #line 3089
25508c25510
< #line 3088
---
> #line 3089
25510c25512
< #line 3088
---
> #line 3089
25512c25514
< #line 3088
---
> #line 3089
25517c25519
< #line 3091
---
> #line 3092
25520c25522
< #line 3093
---
> #line 3094
25522,25523d25523
< #line 3093
<   oconn = nconn;
25524a25525,25526
>   oconn = nconn;
> #line 3095
25526,25527d25527
< #line 3096
<   if ((unsigned int )nconn == 9U) {
25528a25529,25530
>   if ((unsigned int )nconn == 9U) {
> #line 3098
25533c25535
< #line 3099
---
> #line 3100
25535c25537
< #line 3099
---
> #line 3100
25537c25539
< #line 3099
---
> #line 3100
25539c25541
< #line 3104
---
> #line 3105
25541c25543
< #line 3107
---
> #line 3108
25543c25545
< #line 3112
---
> #line 3113
25545c25547
< #line 3112
---
> #line 3113
25547c25549
< #line 3115
---
> #line 3116
25549,25550d25550
< #line 3119
<       if (cr != 0) {
25551a25552,25553
>       if (cr != 0) {
> #line 3121
25557,25558d25558
< #line 3122
<       put_ldev(mdev);
25560c25560
<       if ((unsigned int )nconn == 31U) {
---
>       put_ldev(mdev);
25562c25562
<         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
---
>       if ((unsigned int )nconn == 31U) {
25563a25564,25565
>         if ((unsigned int )*((unsigned char *)mdev + 1805UL) == 6U) {
> #line 3126
25565c25567
< #line 3125
---
> #line 3126
25567c25569
< #line 3125
---
> #line 3126
25569c25571
< #line 3125
---
> #line 3126
25571,25572d25572
< #line 3125
<           drbd_force_state(mdev, mask, val);
25573a25574,25575
>           drbd_force_state(mdev, mask, val);
> #line 3127
25576,25577d25577
< #line 3127
<         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
25578a25579,25580
>         if ((unsigned int )*((unsigned char *)(& peer_state) + 1UL) == 6U) {
> #line 3129
25580c25582
< #line 3128
---
> #line 3129
25582c25584
< #line 3128
---
> #line 3129
25585c25587
< #line 3129
---
> #line 3130
25588c25590
< #line 3131
---
> #line 3132
25590c25592
< #line 3131
---
> #line 3132
25592c25594
< #line 3131
---
> #line 3132
25594c25596
< #line 3131
---
> #line 3132
25597c25599
<                    3131);
---
>                    3132);
25601c25603
< #line 3132
---
> #line 3133
25603c25605
< #line 3132
---
> #line 3133
25605c25607
< #line 3132
---
> #line 3133
25607c25609
< #line 3132
---
> #line 3133
25609,25610d25610
< #line 3132
<           drbd_force_state(mdev, mask___0, val___0);
25611a25612,25613
>           drbd_force_state(mdev, mask___0, val___0);
> #line 3134
25623,25624d25624
< #line 3138
<   _spin_lock_irq(& mdev->req_lock);
25626c25626
<   if ((unsigned int )mdev->state.ldv_32167.conn != (unsigned int )oconn) {
---
>   _spin_lock_irq(& mdev->req_lock);
25627a25628,25629
>   if ((unsigned int )mdev->state.ldv_32167.conn != (unsigned int )oconn) {
> #line 3141
25632,25633d25633
< #line 3141
<   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
25635c25635
<   ns.i = mdev->state.i;
---
>   clear_bit(15, (unsigned long volatile   *)(& mdev->flags));
25637c25637
<   ns.ldv_32167.conn = (unsigned char )nconn;
---
>   ns.i = mdev->state.i;
25639c25639
<   ns.ldv_32167.peer = peer_state.ldv_32167.role;
---
>   ns.ldv_32167.conn = (unsigned char )nconn;
25641c25641
<   ns.ldv_32167.pdsk = (unsigned char )real_peer_disk;
---
>   ns.ldv_32167.peer = peer_state.ldv_32167.role;
25643c25643
<   ns.ldv_32167.peer_isp = (unsigned char )((int )peer_state.ldv_32167.aftr_isp | (int )peer_state.ldv_32167.user_isp);
---
>   ns.ldv_32167.pdsk = (unsigned char )real_peer_disk;
25645c25645
<   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
---
>   ns.ldv_32167.peer_isp = (unsigned char )((int )peer_state.ldv_32167.aftr_isp | (int )peer_state.ldv_32167.user_isp);
25646a25647,25648
>   if (((unsigned int )nconn == 10U || (unsigned int )nconn == 13U) && (unsigned int )*((unsigned char *)(& ns) + 1UL) == 6U) {
> #line 3149
25651,25652d25652
< #line 3150
<   rv = _drbd_set_state(mdev, ns, 3, 0);
25654c25654
<   ns = mdev->state;
---
>   rv = _drbd_set_state(mdev, ns, 3, 0);
25655a25656,25657
>   ns = mdev->state;
> #line 3153
25657,25658d25658
< #line 3154
<   if (rv <= 0) {
25659a25660,25661
>   if (rv <= 0) {
> #line 3156
25661c25663
< #line 3155
---
> #line 3156
25663c25665
< #line 3155
---
> #line 3156
25665c25667
< #line 3155
---
> #line 3156
25667,25668d25668
< #line 3155
<     drbd_force_state(mdev, mask___1, val___1);
25669a25670,25671
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3157
25674,25675d25675
< #line 3159
<   if ((unsigned int )oconn > 9U) {
25676a25677,25678
>   if ((unsigned int )oconn > 9U) {
> #line 3161
25678,25679d25679
< #line 3165
<       drbd_send_uuids(mdev);
25680a25681,25682
>       drbd_send_uuids(mdev);
> #line 3167
25688c25690
< #line 3170
---
> #line 3171
25690c25692
< #line 3172
---
> #line 3173
25692c25694
< #line 3174
---
> #line 3175
25696c25698
< #line 3177 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3178 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25712c25714
< #line 3179
---
> #line 3180
25714c25716
< #line 3181
---
> #line 3182
25716c25718
< #line 3181
---
> #line 3182
25721c25723
< #line 3181
---
> #line 3182
25723c25725
< #line 3181
---
> #line 3182
25725c25727
< #line 3181
---
> #line 3182
25727c25729
< #line 3181
---
> #line 3182
25729c25731
< #line 3181
---
> #line 3182
25731c25733
< #line 3181
---
> #line 3182
25734c25736
< #line 3181
---
> #line 3182
25736c25738
< #line 3181
---
> #line 3182
25738c25740
< #line 3181
---
> #line 3182
25743c25745
< #line 3181
---
> #line 3182
25745c25747
< #line 3181
---
> #line 3182
25748c25750
< #line 3181
---
> #line 3182
25751c25753
< #line 3188
---
> #line 3189
25753c25755
< #line 3188
---
> #line 3189
25755c25757
< #line 3188
---
> #line 3189
25757c25759
< #line 3188
---
> #line 3189
25759c25761
< #line 3188
---
> #line 3189
25762c25764
<            3188);
---
>            3189);
25766c25768
< #line 3188
---
> #line 3189
25768c25770
< #line 3188
---
> #line 3189
25773c25775
< #line 3189
---
> #line 3190
25775,25776d25776
< #line 3189
<   if (tmp___2 != (int )h->length) {
25777a25778,25779
>   if (tmp___2 != (int )h->length) {
> #line 3191
25782c25784
< #line 3194
---
> #line 3195
25784,25785d25785
< #line 3194
<   if (tmp___6 != 0) {
25786a25787,25788
>   if (tmp___6 != 0) {
> #line 3196
25788,25789d25789
< #line 3195
<     _drbd_uuid_set(mdev, 0, tmp___3);
25790a25791,25792
>     _drbd_uuid_set(mdev, 0, tmp___3);
> #line 3197
25792c25794
< #line 3198
---
> #line 3199
25794c25796
< #line 3200
---
> #line 3201
25797c25799
< #line 3202
---
> #line 3203
25799c25801
< #line 3202
---
> #line 3203
25801c25803
< #line 3202
---
> #line 3203
25804c25806
< #line 3204
---
> #line 3205
25808c25810
< #line 3210 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3211 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25821c25823
< #line 3213
---
> #line 3214
25823c25825
< #line 3213
---
> #line 3214
25825,25826d25826
< #line 3213
<   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
25827a25828,25829
>   num_words = (unsigned int )(__min1 < __min2 ? __min1 : __min2);
> #line 3215
25829,25830d25830
< #line 3216
<   if ((unsigned int )h->length != want) {
25831a25832,25833
>   if ((unsigned int )h->length != want) {
> #line 3218
25833c25835
< #line 3217
---
> #line 3218
25835c25837
< #line 3217
---
> #line 3218
25838c25840
< #line 3218
---
> #line 3219
25843,25844d25844
< #line 3220
<   if (want == 0U) {
25845a25846,25847
>   if (want == 0U) {
> #line 3222
25850c25852
< #line 3222
---
> #line 3223
25852,25853d25853
< #line 3222
<   if ((unsigned int )tmp___1 != want) {
25854a25855,25856
>   if ((unsigned int )tmp___1 != want) {
> #line 3224
25859c25861
< #line 3225
---
> #line 3226
25861,25862d25862
< #line 3227
<   c->word_offset = c->word_offset + (unsigned long )num_words;
25864c25864
<   c->bit_offset = c->word_offset * 64UL;
---
>   c->word_offset = c->word_offset + (unsigned long )num_words;
25866c25866
<   if (c->bit_offset > c->bm_bits) {
---
>   c->bit_offset = c->word_offset * 64UL;
25867a25868,25869
>   if (c->bit_offset > c->bm_bits) {
> #line 3231
25872c25874
< #line 3232
---
> #line 3233
25876c25878
< #line 3236 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3237 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
25898c25900
< #line 3244
---
> #line 3245
25900,25901d25901
< #line 3246
<   len = (int )((unsigned int )p->head.length - 1U);
25902a25903,25904
>   len = (int )((unsigned int )p->head.length - 1U);
> #line 3248
25904c25906
< #line 3247
---
> #line 3248
25906c25908
< #line 3251
---
> #line 3252
25908c25910
< #line 3251
---
> #line 3252
25910,25911d25911
< #line 3253
<   bits = bitstream_get_bits(& bs, & look_ahead, 64);
25913c25913
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & look_ahead, 64);
25914a25915,25916
>   if (bits < 0) {
> #line 3256
25919c25921
< #line 3257
---
> #line 3258
25921c25923
< #line 3257
---
> #line 3258
25924,25925d25925
< #line 3258
<   bits = vli_decode_bits(& rl, look_ahead);
25927c25927
<   if (bits <= 0) {
---
>   bits = vli_decode_bits(& rl, look_ahead);
25928a25929,25930
>   if (bits <= 0) {
> #line 3261
25933,25934d25934
< #line 3262
<   if (toggle != 0) {
25936c25936
<     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
---
>   if (toggle != 0) {
25938c25938
<     if (c->bm_bits <= e) {
---
>     e = (unsigned long )(((unsigned long long )s + rl) - 1ULL);
25939a25940,25941
>     if (c->bm_bits <= e) {
> #line 3266
25941c25943
< #line 3265
---
> #line 3266
25943c25945
< #line 3265
---
> #line 3266
25946c25948
< #line 3266
---
> #line 3267
25951c25953
< #line 3268
---
> #line 3269
25956,25957d25957
< #line 3271
<   if (have < bits) {
25958a25959,25960
>   if (have < bits) {
> #line 3273
25960c25962
< #line 3272
---
> #line 3273
25962c25964
< #line 3272
---
> #line 3273
25966c25968
< #line 3276
---
> #line 3277
25971,25972d25972
< #line 3278
<   look_ahead = look_ahead >> bits;
25973a25974,25975
>   look_ahead = look_ahead >> bits;
> #line 3280
25975,25976d25976
< #line 3281
<   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
25978c25978
<   if (bits < 0) {
---
>   bits = bitstream_get_bits(& bs, & tmp, 64 - have);
25979a25980,25981
>   if (bits < 0) {
> #line 3284
25984,25985d25985
< #line 3284
<   look_ahead = (tmp << have) | look_ahead;
25986a25987,25988
>   look_ahead = (tmp << have) | look_ahead;
> #line 3286
25988c25990
< #line 3257
---
> #line 3258
25990c25992
< #line 3257
---
> #line 3258
25993,25994d25994
< #line 3257
<   if (have > 0) {
25995a25996,25997
>   if (have > 0) {
> #line 3259
26000,26001d26001
< #line 3288
<   c->bit_offset = s;
26002a26003,26004
>   c->bit_offset = s;
> #line 3290
26004c26006
< #line 3291
---
> #line 3292
26008c26010
< #line 3295 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3296 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26020c26022
< #line 3299
---
> #line 3300
26022,26023d26023
< #line 3299
<   if ((unsigned int )tmp___0 == 2U) {
26024a26025,26026
>   if ((unsigned int )tmp___0 == 2U) {
> #line 3301
26026c26028
< #line 3300
---
> #line 3301
26031c26033
< #line 3306
---
> #line 3307
26033c26035
< #line 3306
---
> #line 3307
26035,26036d26036
< #line 3306
<   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
26037a26038,26039
>   printk("<3>%s %s: receive_bitmap_c: unknown encoding %u\n", tmp___2, tmp___1, (int )p->encoding);
> #line 3308
26039c26041
< #line 3307
---
> #line 3308
26041c26043
< #line 3307
---
> #line 3308
26043c26045
< #line 3307
---
> #line 3308
26045,26046d26046
< #line 3307
<   drbd_force_state(mdev, mask, val);
26047a26048,26049
>   drbd_force_state(mdev, mask, val);
> #line 3309
26051c26053
< #line 3311 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3312 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26061c26063
< #line 3315
---
> #line 3316
26063c26065
< #line 3318
---
> #line 3319
26065,26066d26066
< #line 3322
<   if (total == 0U) {
26067a26068,26069
>   if (total == 0U) {
> #line 3324
26072,26073d26073
< #line 3326
<   if (total >= plain) {
26074a26075,26076
>   if (total >= plain) {
> #line 3328
26079c26081
< #line 3330
---
> #line 3331
26081,26082d26082
< #line 3333
<   if (r > 1000U) {
26083a26084,26085
>   if (r > 1000U) {
> #line 3335
26088,26089d26089
< #line 3336
<   r = 1000U - r;
26090a26091,26092
>   r = 1000U - r;
> #line 3338
26092c26094
< #line 3337
---
> #line 3338
26094c26096
< #line 3337
---
> #line 3338
26098c26100
< #line 3338
---
> #line 3339
26102c26104
< #line 3353 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3354 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26140c26142
< #line 3358
---
> #line 3359
26142c26144
< #line 3360
---
> #line 3361
26144c26146
< #line 3360
---
> #line 3361
26146c26148
< #line 3360
---
> #line 3361
26151c26153
< #line 3360
---
> #line 3361
26153c26155
< #line 3360
---
> #line 3361
26155c26157
< #line 3360
---
> #line 3361
26157c26159
< #line 3360
---
> #line 3361
26159c26161
< #line 3360
---
> #line 3361
26161c26163
< #line 3360
---
> #line 3361
26164c26166
< #line 3360
---
> #line 3361
26166c26168
< #line 3360
---
> #line 3361
26168c26170
< #line 3360
---
> #line 3361
26170c26172
< #line 3360
---
> #line 3361
26175c26177
< #line 3360
---
> #line 3361
26177c26179
< #line 3360
---
> #line 3361
26180c26182
< #line 3360
---
> #line 3361
26183c26185
< #line 3362
---
> #line 3363
26185c26187
< #line 3366
---
> #line 3367
26187,26188d26188
< #line 3366
<   buffer = (void *)tmp___2;
26190c26190
<   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
---
>   buffer = (void *)tmp___2;
26191a26192,26193
>   if ((unsigned long )buffer == (unsigned long )((void *)0)) {
> #line 3369
26193c26195
< #line 3368
---
> #line 3369
26195c26197
< #line 3368
---
> #line 3369
26198c26200
< #line 3369
---
> #line 3370
26203c26205
< #line 3372
---
> #line 3373
26205c26207
< #line 3372
---
> #line 3373
26207c26209
< #line 3372
---
> #line 3373
26209c26211
< #line 3372
---
> #line 3373
26211c26213
< #line 3372
---
> #line 3373
26213c26215
< #line 3372
---
> #line 3373
26215c26217
< #line 3372
---
> #line 3373
26217c26219
< #line 3372
---
> #line 3373
26219c26221
< #line 3372
---
> #line 3373
26221c26223
< #line 3372
---
> #line 3373
26223c26225
< #line 3372
---
> #line 3373
26226,26227d26227
< #line 3378
<   if ((unsigned int )h->command == 4U) {
26228a26229,26230
>   if ((unsigned int )h->command == 4U) {
> #line 3380
26231c26233
< #line 3380
---
> #line 3381
26233,26234d26234
< #line 3385
<     if ((unsigned int )h->length > 4088U) {
26235a26236,26237
>     if ((unsigned int )h->length > 4088U) {
> #line 3387
26237c26239
< #line 3386
---
> #line 3387
26239,26240d26240
< #line 3386
<       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
26241a26242,26243
>       printk("<3>%s %s: ReportCBitmap packet too large\n", tmp___8, tmp___7);
> #line 3388
26246,26247d26247
< #line 3390
<     p = (struct p_compressed_bm *)buffer;
26248a26249,26250
>     p = (struct p_compressed_bm *)buffer;
> #line 3392
26250c26252
< #line 3391
---
> #line 3392
26252c26254
< #line 3391
---
> #line 3392
26255c26257
< #line 3391
---
> #line 3392
26258c26260
< #line 3392
---
> #line 3393
26260,26261d26261
< #line 3392
<     if (tmp___9 != (int )h->length) {
26262a26263,26264
>     if (tmp___9 != (int )h->length) {
> #line 3394
26267,26268d26268
< #line 3394
<     if ((unsigned int )p->head.length <= 1U) {
26269a26270,26271
>     if ((unsigned int )p->head.length <= 1U) {
> #line 3396
26271c26273
< #line 3395
---
> #line 3396
26273c26275
< #line 3395
---
> #line 3396
26276c26278
< #line 3396
---
> #line 3397
26281c26283
< #line 3398
---
> #line 3399
26284c26286
< #line 3400
---
> #line 3401
26286c26288
< #line 3400
---
> #line 3401
26288c26290
< #line 3400
---
> #line 3401
26291c26293
< #line 3401
---
> #line 3402
26294,26295d26295
< #line 3404
<   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
26296a26297,26298
>   c.packets[(unsigned int )h->command == 4U] = c.packets[(unsigned int )h->command == 4U] + 1U;
> #line 3406
26298,26299d26299
< #line 3407
<   if ((unsigned int )ret != 0U) {
26300a26301,26302
>   if ((unsigned int )ret != 0U) {
> #line 3409
26305c26307
< #line 3410
---
> #line 3411
26307,26308d26308
< #line 3410
<   if (tmp___14 == 0) {
26309a26310,26311
>   if (tmp___14 == 0) {
> #line 3412
26314,26315d26315
< #line 3412
<   if ((unsigned int )ret == 0U) {
26316a26317,26318
>   if ((unsigned int )ret == 0U) {
> #line 3414
26322,26323d26323
< #line 3413
<   if ((unsigned int )ret == 2U) {
26324a26325,26326
>   if ((unsigned int )ret == 2U) {
> #line 3415
26329c26331
< #line 3416
---
> #line 3417
26331,26332d26332
< #line 3418
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
26333a26334,26335
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 224U) {
> #line 3420
26335,26336d26336
< #line 3419
<     ok = tmp___15 == 0;
26338c26338
<     if (ok == 0) {
---
>     ok = tmp___15 == 0;
26339a26340,26341
>     if (ok == 0) {
> #line 3422
26344c26346
< #line 3423
---
> #line 3424
26346c26348
< #line 3423
---
> #line 3424
26348c26350
< #line 3423
---
> #line 3424
26350c26352
< #line 3423
---
> #line 3424
26352,26353d26353
< #line 3423
<     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
26354a26355,26356
>     ok = _drbd_request_state(mdev, mask, val, CS_VERBOSE);
> #line 3425
26356c26358
< #line 3424
---
> #line 3425
26358c26360
< #line 3424
---
> #line 3425
26360c26362
< #line 3424
---
> #line 3425
26363c26365
<              3424);
---
>              3425);
26368c26370
< #line 3425
---
> #line 3426
26370c26372
< #line 3428
---
> #line 3429
26372c26374
< #line 3428
---
> #line 3429
26374c26376
< #line 3428
---
> #line 3429
26376c26378
< #line 3428
---
> #line 3429
26382c26384
< #line 3432
---
> #line 3433
26385,26386d26386
< #line 3434
<   drbd_bm_unlock(mdev);
26388c26388
<   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
---
>   drbd_bm_unlock(mdev);
26389a26390,26391
>   if (ok != 0 && (unsigned int )*((unsigned short *)mdev + 902UL) == 208U) {
> #line 3437
26394,26395d26395
< #line 3437
<   free_pages((unsigned long )buffer, 0U);
26396a26397,26398
>   free_pages((unsigned long )buffer, 0U);
> #line 3439
26400c26402
< #line 3441 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3442 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26416c26418
< #line 3447
---
> #line 3448
26418c26420
< #line 3447
---
> #line 3448
26420c26422
< #line 3447
---
> #line 3448
26423,26424d26424
< #line 3450
<   size = (int )h->length;
26425a26426,26427
>   size = (int )h->length;
> #line 3452
26428c26430
< #line 3452
---
> #line 3453
26430c26432
< #line 3452
---
> #line 3453
26432,26433d26433
< #line 3452
<   want = __min1 < __min2 ? __min1 : __min2;
26435c26435
<   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
---
>   want = __min1 < __min2 ? __min1 : __min2;
26436a26437,26438
>   r = drbd_recv(mdev, (void *)(& sink), (size_t )want);
> #line 3455
26438c26440
< #line 3454
---
> #line 3455
26440c26442
< #line 3454
---
> #line 3455
26442c26444
< #line 3454
---
> #line 3455
26444c26446
< #line 3454
---
> #line 3455
26447c26449
<            3454);
---
>            3455);
26451c26453
< #line 3454
---
> #line 3455
26453c26455
< #line 3454
---
> #line 3455
26458c26460
< #line 3455
---
> #line 3456
26461,26462d26462
< #line 3451
<   if (size > 0) {
26463a26464,26465
>   if (size > 0) {
> #line 3453
26469c26471
< #line 3457
---
> #line 3458
26473c26475
< #line 3460 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3461 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26479,26480d26480
< #line 3462
<   if ((int )mdev->state.ldv_32167.disk > 3) {
26481a26482,26483
>   if ((int )mdev->state.ldv_32167.disk > 3) {
> #line 3464
26486c26488
< #line 3467
---
> #line 3468
26488c26490
< #line 3469
---
> #line 3470
26492c26494
< #line 3474 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3475 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26494c26496
< #line 3474
---
> #line 3475
26505c26507
< #line 3500 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26508c26510
< #line 3501 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3502 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26510c26512
< #line 3503 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3504 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26533c26535
< #line 3506
---
> #line 3507
26535c26537
< #line 3508
---
> #line 3509
26538,26539d26539
< #line 3509
<   drbd_thread_current_set_cpu(mdev);
26540a26541,26542
>   drbd_thread_current_set_cpu(mdev);
> #line 3511
26542,26543d26543
< #line 3510
<   if (tmp == 0) {
26544a26545,26546
>   if (tmp == 0) {
> #line 3512
26546c26548
< #line 3511
---
> #line 3512
26548c26550
< #line 3511
---
> #line 3512
26550c26552
< #line 3511
---
> #line 3512
26552,26553d26553
< #line 3511
<     drbd_force_state(mdev, mask, val);
26554a26555,26556
>     drbd_force_state(mdev, mask, val);
> #line 3513
26559,26560d26560
< #line 3515
<   if ((unsigned int )header->command <= 36U) {
26561a26562,26563
>   if ((unsigned int )header->command <= 36U) {
> #line 3517
26564c26566
< #line 3517
---
> #line 3518
26566c26568
< #line 3519
---
> #line 3520
26569,26570d26570
< #line 3520
<   if ((unsigned int )header->command > 257U) {
26571a26572,26573
>   if ((unsigned int )header->command > 257U) {
> #line 3522
26574c26576
< #line 3523
---
> #line 3524
26577c26579
< #line 3525
---
> #line 3526
26581,26582d26582
< #line 3525
<   if (tmp___2 != 0L) {
26583a26584,26585
>   if (tmp___2 != 0L) {
> #line 3527
26585c26587
< #line 3526
---
> #line 3527
26587c26589
< #line 3526
---
> #line 3527
26590c26592
< #line 3528
---
> #line 3529
26592c26594
< #line 3528
---
> #line 3529
26594c26596
< #line 3528
---
> #line 3529
26596c26598
< #line 3528
---
> #line 3529
26598,26599d26599
< #line 3528
<     drbd_force_state(mdev, mask___0, val___0);
26600a26601,26602
>     drbd_force_state(mdev, mask___0, val___0);
> #line 3530
26605c26607
< #line 3531
---
> #line 3532
26607c26609
< #line 3531
---
> #line 3532
26609,26610d26610
< #line 3531
<   if (tmp___7 != 0L) {
26611a26612,26613
>   if (tmp___7 != 0L) {
> #line 3533
26613c26615
< #line 3532
---
> #line 3533
26615c26617
< #line 3532
---
> #line 3533
26617c26619
< #line 3532
---
> #line 3533
26619c26621
< #line 3534
---
> #line 3535
26621c26623
< #line 3534
---
> #line 3535
26623c26625
< #line 3534
---
> #line 3535
26625c26627
< #line 3534
---
> #line 3535
26627,26628d26628
< #line 3534
<     drbd_force_state(mdev, mask___1, val___1);
26629a26630,26631
>     drbd_force_state(mdev, mask___1, val___1);
> #line 3536
26635c26637
< #line 3508
---
> #line 3509
26637,26638d26638
< #line 3508
<   if ((unsigned int )tmp___8 == 1U) {
26639a26640,26641
>   if ((unsigned int )tmp___8 == 1U) {
> #line 3510
26645c26647
< #line 3513
---
> #line 3514
26649c26651
< #line 3540 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3541 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26666,26667d26667
< #line 3551
<   _spin_lock_irq(& mdev->req_lock);
26668a26669,26670
>   _spin_lock_irq(& mdev->req_lock);
> #line 3553
26670c26672
< #line 3552
---
> #line 3553
26673,26674d26674
< #line 3553
<   slot = mdev->app_reads_hash + (unsigned long )i;
26675a26676,26677
>   slot = mdev->app_reads_hash + (unsigned long )i;
> #line 3555
26677c26679
< #line 3554
---
> #line 3555
26680c26682
< #line 3560
---
> #line 3561
26682c26684
< #line 3560
---
> #line 3561
26684c26686
< #line 3560
---
> #line 3561
26686c26688
< #line 3560
---
> #line 3561
26688c26690
< #line 3560
---
> #line 3561
26691c26693
<            3560);
---
>            3561);
26695c26697
< #line 3563
---
> #line 3564
26697c26699
< #line 3554
---
> #line 3555
26700c26702
< #line 3554
---
> #line 3555
26702c26704
< #line 3554
---
> #line 3555
26704c26706
< #line 3554
---
> #line 3555
26706c26708
< #line 3554
---
> #line 3555
26708c26710
< #line 3554
---
> #line 3555
26710,26711d26711
< #line 3554
<       if (1 != 0) {
26712a26713,26714
>       if (1 != 0) {
> #line 3556
26715c26717
< #line 3557
---
> #line 3558
26719c26721
< #line 3557
---
> #line 3558
26726c26728
< #line 3552
---
> #line 3553
26729,26730d26730
< #line 3552
<   if (i <= 14) {
26731a26732,26733
>   if (i <= 14) {
> #line 3554
26736c26738
< #line 3566
---
> #line 3567
26738c26740
< #line 3566
---
> #line 3567
26741c26743
< #line 3567
---
> #line 3568
26743,26744d26744
< #line 3567
<   if (tmp___5 == 0) {
26745a26746,26747
>   if (tmp___5 == 0) {
> #line 3569
26747c26749
< #line 3568
---
> #line 3569
26749c26751
< #line 3568
---
> #line 3569
26755c26757
< #line 3566
---
> #line 3567
26758,26759d26759
< #line 3566
<   if (i <= 14) {
26760a26761,26762
>   if (i <= 14) {
> #line 3568
26765,26766d26766
< #line 3571
<   memset((void *)mdev->app_reads_hash, 0, 120UL);
26768c26768
<   _spin_unlock_irq(& mdev->req_lock);
---
>   memset((void *)mdev->app_reads_hash, 0, 120UL);
26769a26770,26771
>   _spin_unlock_irq(& mdev->req_lock);
> #line 3574
26773c26775
< #line 3575 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3576 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26779,26780d26780
< #line 3579
<   barr.w.cb = & w_prev_work_done;
26782c26782
<   init_completion(& barr.done);
---
>   barr.w.cb = & w_prev_work_done;
26784c26784
<   drbd_queue_work(& mdev->data.work, & barr.w);
---
>   init_completion(& barr.done);
26786c26786
<   wait_for_completion(& barr.done);
---
>   drbd_queue_work(& mdev->data.work, & barr.w);
26787a26788,26789
>   wait_for_completion(& barr.done);
> #line 3584
26791c26793
< #line 3585 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3586 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
26847c26849
< #line 3589
---
> #line 3590
26849,26850d26850
< #line 3592
<   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
26851a26852,26853
>   if ((unsigned int )*((unsigned short *)mdev + 902UL) == 0U) {
> #line 3594
26856,26857d26857
< #line 3594
<   if ((int )mdev->state.ldv_32167.conn > 7) {
26858a26859,26860
>   if ((int )mdev->state.ldv_32167.conn > 7) {
> #line 3596
26860c26862
< #line 3595
---
> #line 3596
26862c26864
< #line 3595
---
> #line 3596
26864c26866
< #line 3595
---
> #line 3596
26870c26872
< #line 3599
---
> #line 3600
26872,26873d26873
< #line 3601
<   mutex_lock_nested(& mdev->data.mutex, 0U);
26875c26875
<   drbd_free_sock(mdev);
---
>   mutex_lock_nested(& mdev->data.mutex, 0U);
26876a26877,26878
>   drbd_free_sock(mdev);
> #line 3604
26878,26879d26879
< #line 3605
<   _spin_lock_irq(& mdev->req_lock);
26881c26881
<   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
---
>   _spin_lock_irq(& mdev->req_lock);
26883c26883
<   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->active_ee);
26885c26885
<   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
---
>   _drbd_wait_ee_list_empty(mdev, & mdev->sync_ee);
26886a26887,26888
>   _drbd_wait_ee_list_empty(mdev, & mdev->read_ee);
> #line 3610
26888,26889d26889
< #line 3621
<   drbd_rs_cancel_all(mdev);
26891c26891
<   mdev->rs_total = 0UL;
---
>   drbd_rs_cancel_all(mdev);
26893c26893
<   mdev->rs_failed = 0UL;
---
>   mdev->rs_total = 0UL;
26895c26895
<   atomic_set(& mdev->rs_pending_cnt, 0);
---
>   mdev->rs_failed = 0UL;
26896a26897,26898
>   atomic_set(& mdev->rs_pending_cnt, 0);
> #line 3626
26898,26899d26899
< #line 3628
<   del_timer_sync(& mdev->resync_timer);
26901c26901
<   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
---
>   del_timer_sync(& mdev->resync_timer);
26902a26903,26904
>   set_bit(3U, (unsigned long volatile   *)(& mdev->flags));
> #line 3631
26904c26906
< #line 3635
---
> #line 3636
26906c26908
< #line 3639
---
> #line 3640
26908,26909d26909
< #line 3641
<   kfree((void const   *)mdev->p_uuid);
26910a26911,26912
>   kfree((void const   *)mdev->p_uuid);
> #line 3643
26912,26913d26913
< #line 3644
<   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
26914a26915,26916
>   if ((unsigned int )*((unsigned char *)mdev + 1806UL) == 0U) {
> #line 3646
26919c26921
< #line 3647
---
> #line 3648
26921c26923
< #line 3649
---
> #line 3650
26923c26925
< #line 3649
---
> #line 3650
26925c26927
< #line 3649
---
> #line 3650
26927c26929
< #line 3651
---
> #line 3652
26929,26930d26930
< #line 3653
<   fp = FP_DONT_CARE;
26931a26932,26933
>   fp = FP_DONT_CARE;
> #line 3655
26933,26934d26934
< #line 3654
<   if (tmp___4 != 0) {
26936c26936
<     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
---
>   if (tmp___4 != 0) {
26937a26938,26939
>     fp = (enum drbd_fencing_p )(mdev->ldev)->dc.fencing;
> #line 3657
26942,26943d26943
< #line 3659
<   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
26945c26945
<     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32167.pdsk > 5) {
---
>   if ((unsigned int )*((unsigned char *)mdev + 1804UL) == 1U) {
26946a26947,26948
>     if ((unsigned int )fp != 0U && (int )mdev->state.ldv_32167.pdsk > 5) {
> #line 3662
26948,26949d26949
< #line 3661
<       nps = tmp___5;
26950a26951,26952
>       nps = tmp___5;
> #line 3663
26952c26954
< #line 3662
---
> #line 3663
26954c26956
< #line 3662
---
> #line 3663
26956c26958
< #line 3662
---
> #line 3663
26958c26960
< #line 3662
---
> #line 3663
26966,26967d26967
< #line 3666
<   _spin_lock_irq(& mdev->req_lock);
26969c26969
<   os = mdev->state;
---
>   _spin_lock_irq(& mdev->req_lock);
26970a26971,26972
>   os = mdev->state;
> #line 3669
26972,26973d26973
< #line 3670
<     ns = os;
26975c26975
<     ns.ldv_32167.conn = 2U;
---
>     ns = os;
26976a26977,26978
>     ns.ldv_32167.conn = 2U;
> #line 3673
26981c26983
< #line 3674
---
> #line 3675
26983c26985
< #line 3676
---
> #line 3677
26985c26987
< #line 3678
---
> #line 3679
26987c26989
< #line 3678
---
> #line 3679
26989c26991
< #line 3678
---
> #line 3679
26994c26996
< #line 3678
---
> #line 3679
26996c26998
< #line 3678
---
> #line 3679
26998c27000
< #line 3678
---
> #line 3679
27000c27002
< #line 3678
---
> #line 3679
27002c27004
< #line 3678
---
> #line 3679
27004c27006
< #line 3678
---
> #line 3679
27007c27009
< #line 3678
---
> #line 3679
27009c27011
< #line 3678
---
> #line 3679
27011c27013
< #line 3678
---
> #line 3679
27013c27015
< #line 3678
---
> #line 3679
27018c27020
< #line 3678
---
> #line 3679
27020c27022
< #line 3678
---
> #line 3679
27023c27025
< #line 3678
---
> #line 3679
27026c27028
< #line 3682
---
> #line 3683
27028c27030
< #line 3682
---
> #line 3683
27030c27032
< #line 3682
---
> #line 3683
27035c27037
< #line 3682
---
> #line 3683
27037c27039
< #line 3682
---
> #line 3683
27039c27041
< #line 3682
---
> #line 3683
27041c27043
< #line 3682
---
> #line 3683
27043c27045
< #line 3682
---
> #line 3683
27045c27047
< #line 3682
---
> #line 3683
27048c27050
< #line 3682
---
> #line 3683
27050c27052
< #line 3682
---
> #line 3683
27052c27054
< #line 3682
---
> #line 3683
27054c27056
< #line 3682
---
> #line 3683
27059c27061
< #line 3682
---
> #line 3683
27061c27063
< #line 3682
---
> #line 3683
27064c27066
< #line 3682
---
> #line 3683
27067c27069
< #line 3684
---
> #line 3685
27069c27071
< #line 3686
---
> #line 3687
27071c27073
< #line 3686
---
> #line 3687
27074,27075d27075
< #line 3687
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27076a27077,27078
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3689
27078c27080
< #line 3688
---
> #line 3689
27080c27082
< #line 3688
---
> #line 3689
27086c27088
< #line 3686
---
> #line 3687
27089,27090d27090
< #line 3686
<     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
27091a27092,27093
>     if ((unsigned long )(mdev->ee_hash + (unsigned long )mdev->ee_hash_s) > (unsigned long )h) {
> #line 3688
27096,27097d27097
< #line 3690
<     kfree((void const   *)mdev->ee_hash);
27099c27099
<     mdev->ee_hash = 0;
---
>     kfree((void const   *)mdev->ee_hash);
27100a27101,27102
>     mdev->ee_hash = 0;
> #line 3693
27102c27104
< #line 3695
---
> #line 3696
27104c27106
< #line 3695
---
> #line 3696
27107,27108d27108
< #line 3696
<     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
27109a27110,27111
>     if ((unsigned long )h->first != (unsigned long )((struct hlist_node *)0)) {
> #line 3698
27111c27113
< #line 3697
---
> #line 3698
27113c27115
< #line 3697
---
> #line 3698
27119c27121
< #line 3695
---
> #line 3696
27122,27123d27123
< #line 3695
<     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
27124a27125,27126
>     if ((unsigned long )(mdev->tl_hash + (unsigned long )mdev->tl_hash_s) > (unsigned long )h) {
> #line 3697
27129,27130d27130
< #line 3699
<     kfree((void const   *)mdev->tl_hash);
27132c27132
<     mdev->tl_hash = 0;
---
>     kfree((void const   *)mdev->tl_hash);
27134c27134
<     mdev->tl_hash_s = 0U;
---
>     mdev->tl_hash = 0;
27135a27136,27137
>     mdev->tl_hash_s = 0U;
> #line 3703
27137,27138d27138
< #line 3704
<     crypto_free_hash(mdev->cram_hmac_tfm);
27139a27140,27141
>     crypto_free_hash(mdev->cram_hmac_tfm);
> #line 3706
27141,27142d27142
< #line 3707
<     kfree((void const   *)mdev->net_conf);
27144c27144
<     mdev->net_conf = 0;
---
>     kfree((void const   *)mdev->net_conf);
27145a27146,27147
>     mdev->net_conf = 0;
> #line 3710
27147c27149
< #line 3709
---
> #line 3710
27149c27151
< #line 3709
---
> #line 3710
27151c27153
< #line 3709
---
> #line 3710
27153c27155
< #line 3709
---
> #line 3710
27158c27160
< #line 3719
---
> #line 3720
27160,27161d27161
< #line 3719
<   i = (unsigned int )tmp___16;
27163c27163
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___16;
27164a27165,27166
>   if (i != 0U) {
> #line 3722
27166c27168
< #line 3721
---
> #line 3722
27168c27170
< #line 3721
---
> #line 3722
27174c27176
< #line 3722
---
> #line 3723
27176,27177d27177
< #line 3722
<   i = (unsigned int )tmp___19;
27179c27179
<   if (i != 0U) {
---
>   i = (unsigned int )tmp___19;
27180a27181,27182
>   if (i != 0U) {
> #line 3725
27182c27184
< #line 3724
---
> #line 3725
27184c27186
< #line 3724
---
> #line 3725
27189c27191
< #line 3726
---
> #line 3727
27191c27193
< #line 3726
---
> #line 3727
27193c27195
< #line 3726
---
> #line 3727
27195c27197
< #line 3726
---
> #line 3727
27197c27199
< #line 3726
---
> #line 3727
27200c27202
<            3726);
---
>            3727);
27204c27206
< #line 3727
---
> #line 3728
27206c27208
< #line 3727
---
> #line 3728
27208c27210
< #line 3727
---
> #line 3728
27210c27212
< #line 3727
---
> #line 3728
27212c27214
< #line 3727
---
> #line 3728
27215c27217
<            3727);
---
>            3728);
27219c27221
< #line 3728
---
> #line 3729
27221c27223
< #line 3728
---
> #line 3729
27223c27225
< #line 3728
---
> #line 3729
27225c27227
< #line 3728
---
> #line 3729
27227c27229
< #line 3728
---
> #line 3729
27230c27232
<            3728);
---
>            3729);
27234c27236
< #line 3729
---
> #line 3730
27236c27238
< #line 3729
---
> #line 3730
27238c27240
< #line 3729
---
> #line 3730
27240c27242
< #line 3729
---
> #line 3730
27242c27244
< #line 3729
---
> #line 3730
27245c27247
<            3729);
---
>            3730);
27249,27250d27250
< #line 3732
<   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
27251a27252,27253
>   atomic_set(& (mdev->current_epoch)->epoch_size, 0);
> #line 3734
27253c27255
< #line 3733
---
> #line 3734
27255c27257
< #line 3733
---
> #line 3734
27257c27259
< #line 3733
---
> #line 3734
27259c27261
< #line 3733
---
> #line 3734
27262c27264
<            3733);
---
>            3734);
27266c27268
< #line 3734
---
> #line 3735
27270c27272
< #line 3745 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3746 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27280c27282
< #line 3748
---
> #line 3749
27282c27284
< #line 3751
---
> #line 3752
27284,27285d27285
< #line 3751
<   if (tmp___1 != 0) {
27286a27287,27288
>   if (tmp___1 != 0) {
> #line 3753
27288c27290
< #line 3752
---
> #line 3753
27290,27291d27291
< #line 3752
<     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
27292a27293,27294
>     printk("<3>%s %s: interrupted during initial handshake\n", tmp___0, tmp);
> #line 3754
27297,27298d27298
< #line 3756
<   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
27300c27300
<     mutex_unlock(& mdev->data.mutex);
---
>   if ((unsigned long )mdev->data.socket == (unsigned long )((struct socket *)0)) {
27301a27302,27303
>     mutex_unlock(& mdev->data.mutex);
> #line 3759
27306,27307d27307
< #line 3761
<   memset((void *)p, 0, 80UL);
27309c27309
<   p->protocol_min = 1442840576U;
---
>   memset((void *)p, 0, 80UL);
27311c27311
<   p->protocol_max = 1526726656U;
---
>   p->protocol_min = 1442840576U;
27312a27313,27314
>   p->protocol_max = 1526726656U;
> #line 3765
27315,27316d27316
< #line 3766
<   mutex_unlock(& mdev->data.mutex);
27317a27318,27319
>   mutex_unlock(& mdev->data.mutex);
> #line 3768
27321c27323
< #line 3777 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3778 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27344,27345d27345
< #line 3780
<   p = & mdev->data.rbuf.handshake;
27346a27347,27348
>   p = & mdev->data.rbuf.handshake;
> #line 3782
27348,27349d27349
< #line 3785
<   rv = drbd_send_handshake(mdev);
27351c27351
<   if (rv == 0) {
---
>   rv = drbd_send_handshake(mdev);
27352a27353,27354
>   if (rv == 0) {
> #line 3788
27357,27358d27358
< #line 3789
<   rv = drbd_recv_header(mdev, & p->head);
27360c27360
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p->head);
27361a27362,27363
>   if (rv == 0) {
> #line 3792
27366,27367d27367
< #line 3793
<   if ((unsigned int )p->head.command != 65534U) {
27368a27369,27370
>   if ((unsigned int )p->head.command != 65534U) {
> #line 3795
27370c27372
< #line 3794
---
> #line 3795
27372c27374
< #line 3794
---
> #line 3795
27374c27376
< #line 3794
---
> #line 3795
27377c27379
< #line 3796
---
> #line 3797
27382,27383d27383
< #line 3799
<   if ((int )p->head.length != expect) {
27384a27385,27386
>   if ((int )p->head.length != expect) {
> #line 3801
27386c27388
< #line 3800
---
> #line 3801
27388c27390
< #line 3800
---
> #line 3801
27391c27393
< #line 3802
---
> #line 3803
27396c27398
< #line 3805
---
> #line 3806
27398,27399d27399
< #line 3807
<   if (rv != expect) {
27400a27401,27402
>   if (rv != expect) {
> #line 3809
27402c27404
< #line 3808
---
> #line 3809
27404c27406
< #line 3808
---
> #line 3809
27407c27409
< #line 3809
---
> #line 3810
27412c27414
< #line 3812
---
> #line 3813
27414,27415d27415
< #line 3812
<   p->protocol_min = tmp___6;
27416a27417,27418
>   p->protocol_min = tmp___6;
> #line 3814
27418,27419d27419
< #line 3813
<   p->protocol_max = tmp___7;
27421c27421
<   if (p->protocol_max == 0U) {
---
>   p->protocol_max = tmp___7;
27422a27423,27424
>   if (p->protocol_max == 0U) {
> #line 3816
27427c27429
< #line 3817
---
> #line 3818
27429c27431
< #line 3819
---
> #line 3820
27434c27436
< #line 3821
---
> #line 3822
27436c27438
< #line 3821
---
> #line 3822
27438c27440
< #line 3821
---
> #line 3822
27440c27442
< #line 3823
---
> #line 3824
27442c27444
< #line 3823
---
> #line 3824
27444c27446
< #line 3823
---
> #line 3824
27447c27449
< #line 3826
---
> #line 3827
27450c27452
< #line 3829
---
> #line 3830
27452c27454
< #line 3829
---
> #line 3830
27454c27456
< #line 3829
---
> #line 3830
27457c27459
< #line 3833
---
> #line 3834
27461c27463
< #line 3845 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3846 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27509,27510d27510
< #line 3849
<   response = 0;
27512c27512
<   right_response = 0;
---
>   response = 0;
27513a27514,27515
>   right_response = 0;
> #line 3852
27515c27517
< #line 3853
---
> #line 3854
27517c27519
< #line 3853
---
> #line 3854
27519,27520d27520
< #line 3858
<   desc.tfm = mdev->cram_hmac_tfm;
27521a27522,27523
>   desc.tfm = mdev->cram_hmac_tfm;
> #line 3860
27523c27525
< #line 3861
---
> #line 3862
27526,27527d27527
< #line 3863
<   if (rv != 0) {
27528a27529,27530
>   if (rv != 0) {
> #line 3865
27530c27532
< #line 3864
---
> #line 3865
27532,27533d27533
< #line 3864
<     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
27535c27535
<     rv = 0;
---
>     printk("<3>%s %s: crypto_hash_setkey() failed with %d\n", tmp___1, tmp___0, rv);
27536a27537,27538
>     rv = 0;
> #line 3867
27541c27543
< #line 3869
---
> #line 3870
27543,27544d27544
< #line 3871
<   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
27546c27546
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_CHALLENGE, (char *)(& my_challenge), 64UL);
27547a27548,27549
>   if (rv == 0) {
> #line 3874
27552,27553d27553
< #line 3875
<   rv = drbd_recv_header(mdev, & p);
27555c27555
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
27556a27557,27558
>   if (rv == 0) {
> #line 3878
27561,27562d27562
< #line 3879
<   if ((unsigned int )p.command != 16U) {
27563a27564,27565
>   if ((unsigned int )p.command != 16U) {
> #line 3881
27565c27567
< #line 3880
---
> #line 3881
27567c27569
< #line 3880
---
> #line 3881
27569c27571
< #line 3880
---
> #line 3881
27572,27573d27573
< #line 3882
<     rv = 0;
27574a27575,27576
>     rv = 0;
> #line 3884
27579,27580d27580
< #line 3886
<   if ((unsigned int )p.length > 128U) {
27581a27582,27583
>   if ((unsigned int )p.length > 128U) {
> #line 3888
27583c27585
< #line 3887
---
> #line 3888
27585,27586d27586
< #line 3887
<     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
27588c27588
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthChallenge payload too big.\n", tmp___6, tmp___5);
27589a27590,27591
>     rv = 0;
> #line 3890
27594c27596
< #line 3892
---
> #line 3893
27596,27597d27597
< #line 3892
<   peers_ch = (char *)tmp___7;
27599c27599
<   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
---
>   peers_ch = (char *)tmp___7;
27600a27601,27602
>   if ((unsigned long )peers_ch == (unsigned long )((char *)0)) {
> #line 3895
27602c27604
< #line 3894
---
> #line 3895
27604,27605d27605
< #line 3894
<     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
27607c27607
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of peers_ch failed\n", tmp___9, tmp___8);
27608a27609,27610
>     rv = 0;
> #line 3897
27613c27615
< #line 3899
---
> #line 3900
27615,27616d27616
< #line 3901
<   if ((int )p.length != rv) {
27617a27618,27619
>   if ((int )p.length != rv) {
> #line 3903
27619c27621
< #line 3902
---
> #line 3903
27621,27622d27622
< #line 3902
<     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
27624c27624
<     rv = 0;
---
>     printk("<3>%s %s: short read AuthChallenge: l=%u\n", tmp___11, tmp___10, rv);
27625a27626,27627
>     rv = 0;
> #line 3905
27630,27631d27631
< #line 3907
<   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
27632a27633,27634
>   resp_size = crypto_hash_digestsize(mdev->cram_hmac_tfm);
> #line 3909
27634,27635d27635
< #line 3908
<   response = (char *)tmp___12;
27637c27637
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   response = (char *)tmp___12;
27638a27639,27640
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3911
27640c27642
< #line 3910
---
> #line 3911
27642,27643d27643
< #line 3910
<     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
27645c27645
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of response failed\n", tmp___14, tmp___13);
27646a27647,27648
>     rv = 0;
> #line 3913
27651,27652d27652
< #line 3915
<   sg_init_table(& sg, 1U);
27653a27654,27655
>   sg_init_table(& sg, 1U);
> #line 3917
27655,27656d27656
< #line 3918
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
27658c27658
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)response);
27659a27660,27661
>   if (rv != 0) {
> #line 3921
27661c27663
< #line 3920
---
> #line 3921
27663c27665
< #line 3920
---
> #line 3921
27666,27667d27667
< #line 3921
<     rv = 0;
27668a27669,27670
>     rv = 0;
> #line 3923
27673,27674d27674
< #line 3925
<   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
27676c27676
<   if (rv == 0) {
---
>   rv = drbd_send_cmd2(mdev, P_AUTH_RESPONSE, response, (size_t )resp_size);
27677a27678,27679
>   if (rv == 0) {
> #line 3928
27682,27683d27683
< #line 3929
<   rv = drbd_recv_header(mdev, & p);
27685c27685
<   if (rv == 0) {
---
>   rv = drbd_recv_header(mdev, & p);
27686a27687,27688
>   if (rv == 0) {
> #line 3932
27691,27692d27692
< #line 3933
<   if ((unsigned int )p.command != 17U) {
27693a27694,27695
>   if ((unsigned int )p.command != 17U) {
> #line 3935
27695c27697
< #line 3934
---
> #line 3935
27697c27699
< #line 3934
---
> #line 3935
27699c27701
< #line 3934
---
> #line 3935
27702,27703d27703
< #line 3936
<     rv = 0;
27704a27705,27706
>     rv = 0;
> #line 3938
27709,27710d27710
< #line 3940
<   if ((unsigned int )p.length != resp_size) {
27711a27712,27713
>   if ((unsigned int )p.length != resp_size) {
> #line 3942
27713c27715
< #line 3941
---
> #line 3942
27715,27716d27716
< #line 3941
<     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
27718c27718
<     rv = 0;
---
>     printk("<3>%s %s: expected AuthResponse payload of wrong size\n", tmp___21, tmp___20);
27719a27720,27721
>     rv = 0;
> #line 3944
27724c27726
< #line 3946
---
> #line 3947
27726,27727d27727
< #line 3948
<   if ((unsigned int )rv != resp_size) {
27728a27729,27730
>   if ((unsigned int )rv != resp_size) {
> #line 3950
27730c27732
< #line 3949
---
> #line 3950
27732c27734
< #line 3949
---
> #line 3950
27735,27736d27736
< #line 3950
<     rv = 0;
27737a27738,27739
>     rv = 0;
> #line 3952
27742c27744
< #line 3954
---
> #line 3955
27744,27745d27745
< #line 3954
<   right_response = (char *)tmp___24;
27747c27747
<   if ((unsigned long )response == (unsigned long )((char *)0)) {
---
>   right_response = (char *)tmp___24;
27748a27749,27750
>   if ((unsigned long )response == (unsigned long )((char *)0)) {
> #line 3957
27750c27752
< #line 3956
---
> #line 3957
27752,27753d27753
< #line 3956
<     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
27755c27755
<     rv = 0;
---
>     printk("<3>%s %s: kmalloc of right_response failed\n", tmp___26, tmp___25);
27756a27757,27758
>     rv = 0;
> #line 3959
27761c27763
< #line 3961
---
> #line 3962
27763,27764d27764
< #line 3963
<   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
27766c27766
<   if (rv != 0) {
---
>   rv = crypto_hash_digest(& desc, & sg, sg.length, (u8 *)right_response);
27767a27768,27769
>   if (rv != 0) {
> #line 3966
27769c27771
< #line 3965
---
> #line 3966
27771c27773
< #line 3965
---
> #line 3966
27774,27775d27775
< #line 3966
<     rv = 0;
27776a27777,27778
>     rv = 0;
> #line 3968
27781c27783
< #line 3970
---
> #line 3971
27783c27785
< #line 3970
---
> #line 3971
27785,27786d27786
< #line 3972
<   if (rv != 0) {
27787a27788,27789
>   if (rv != 0) {
> #line 3974
27789c27791
< #line 3973
---
> #line 3974
27791c27793
< #line 3973
---
> #line 3974
27798,27799d27799
< #line 3977
<   kfree((void const   *)peers_ch);
27801c27801
<   kfree((void const   *)response);
---
>   kfree((void const   *)peers_ch);
27802a27803,27804
>   kfree((void const   *)response);
> #line 3980
27804c27806
< #line 3981
---
> #line 3982
27808c27810
< #line 3985 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 3986 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27828,27829d27829
< #line 3987
<   mdev = thi->mdev;
27830a27831,27832
>   mdev = thi->mdev;
> #line 3989
27832c27834
< #line 3988
---
> #line 3989
27834c27836
< #line 3991
---
> #line 3992
27836c27838
< #line 3991
---
> #line 3992
27838c27840
< #line 3993
---
> #line 3994
27840c27842
< #line 3993
---
> #line 3994
27842c27844
< #line 3993
---
> #line 3994
27845,27846d27846
< #line 3996
<   h = drbd_connect(mdev);
27848c27848
<   if (h == 0) {
---
>   h = drbd_connect(mdev);
27850c27850
<     drbd_disconnect(mdev);
---
>   if (h == 0) {
27851a27852,27853
>     drbd_disconnect(mdev);
> #line 4000
27853,27854d27854
< #line 3999
<     tmp___3->state = 1L;
27855a27856,27857
>     tmp___3->state = 1L;
> #line 4001
27860,27861d27861
< #line 4002
<   if (h == -1) {
27862a27863,27864
>   if (h == -1) {
> #line 4004
27864c27866
< #line 4003
---
> #line 4004
27866,27867d27867
< #line 4003
<     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
27868a27869,27870
>     printk("<4>%s %s: Discarding network configuration.\n", tmp___5, tmp___4);
> #line 4005
27870c27872
< #line 4004
---
> #line 4005
27872c27874
< #line 4004
---
> #line 4005
27874c27876
< #line 4004
---
> #line 4005
27876c27878
< #line 4004
---
> #line 4005
27881,27882d27882
< #line 4006
<   if (h == 0) {
27883a27884,27885
>   if (h == 0) {
> #line 4008
27889,27890d27890
< #line 4008
<   if (h > 0) {
27891a27892,27893
>   if (h > 0) {
> #line 4010
27893,27894d27894
< #line 4009
<     if (tmp___6 != 0) {
27896c27896
<       drbdd(mdev);
---
>     if (tmp___6 != 0) {
27897a27898,27899
>       drbdd(mdev);
> #line 4012
27905c27907
< #line 4015
---
> #line 4016
27907c27909
< #line 4017
---
> #line 4018
27909c27911
< #line 4017
---
> #line 4018
27911,27912d27912
< #line 4017
<   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
27913a27914,27915
>   printk("<6>%s %s: receiver terminated\n", tmp___8, tmp___7);
> #line 4019
27917c27919
< #line 4023 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4024 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27928c27930
< #line 4025
---
> #line 4026
27930c27932
< #line 4027
---
> #line 4028
27932c27934
< #line 4027
---
> #line 4028
27934,27935d27935
< #line 4029
<   if (retcode > 0) {
27936a27937,27938
>   if (retcode > 0) {
> #line 4031
27939,27940d27940
< #line 4032
<     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
27941a27942,27943
>     set_bit(11U, (unsigned long volatile   *)(& mdev->flags));
> #line 4034
27943c27945
< #line 4033
---
> #line 4034
27945c27947
< #line 4033
---
> #line 4034
27947c27949
< #line 4033
---
> #line 4034
27951c27953
< #line 4036
---
> #line 4037
27953c27955
< #line 4038
---
> #line 4039
27957c27959
< #line 4041 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4042 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27963c27965
< #line 4043
---
> #line 4044
27965c27967
< #line 4043
---
> #line 4044
27969c27971
< #line 4047 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4048 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27975c27977
< #line 4050
---
> #line 4051
27977c27979
< #line 4052
---
> #line 4053
27981c27983
< #line 4055 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4056 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
27998,27999d27999
< #line 4057
<   p = (struct p_block_ack *)h;
28000a28001,28002
>   p = (struct p_block_ack *)h;
> #line 4059
28002,28003d28003
< #line 4058
<   sector = (sector_t )tmp;
28004a28005,28006
>   sector = (sector_t )tmp;
> #line 4060
28006c28008
< #line 4059
---
> #line 4060
28008c28010
< #line 4061
---
> #line 4062
28010c28012
< #line 4061
---
> #line 4062
28012c28014
< #line 4061
---
> #line 4062
28014c28016
< #line 4061
---
> #line 4062
28017c28019
<            4061);
---
>            4062);
28021c28023
< #line 4063
---
> #line 4064
28023c28025
< #line 4063
---
> #line 4064
28025,28026d28026
< #line 4065
<   drbd_rs_complete_io(mdev, sector);
28027a28028,28029
>   drbd_rs_complete_io(mdev, sector);
> #line 4067
28029,28031c28031
<                      4066U);
< #line 4068
<   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
---
>                      4067U);
28032a28033,28034
>   mdev->rs_same_csum = mdev->rs_same_csum + (unsigned long )(blksize >> 12);
> #line 4070
28034c28036
< #line 4069
---
> #line 4070
28036c28038
< #line 4069
---
> #line 4070
28038c28040
< #line 4069
---
> #line 4070
28040c28042
< #line 4069
---
> #line 4070
28042c28044
< #line 4069
---
> #line 4070
28044c28046
< #line 4069
---
> #line 4070
28046c28048
<            4069, tmp___4);
---
>            4070, tmp___4);
28050c28052
< #line 4071
---
> #line 4072
28054c28056
< #line 4076 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4077 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28068c28070
< #line 4079
---
> #line 4080
28070c28072
< #line 4079
---
> #line 4080
28072c28074
< #line 4083
---
> #line 4084
28074c28076
< #line 4083
---
> #line 4084
28077,28078d28078
< #line 4084
<   if ((unsigned long )req == (unsigned long )id) {
28080c28080
<     if (req->sector != sector) {
---
>   if ((unsigned long )req == (unsigned long )id) {
28081a28082,28083
>     if (req->sector != sector) {
> #line 4087
28083c28085
< #line 4086
---
> #line 4087
28085c28087
< #line 4086
---
> #line 4087
28088c28090
< #line 4090
---
> #line 4091
28093c28095
< #line 4092
---
> #line 4093
28098c28100
< #line 4083
---
> #line 4084
28101c28103
< #line 4083
---
> #line 4084
28103c28105
< #line 4083
---
> #line 4084
28105c28107
< #line 4083
---
> #line 4084
28107c28109
< #line 4083
---
> #line 4084
28109c28111
< #line 4083
---
> #line 4084
28111,28112d28112
< #line 4083
<       if (1 != 0) {
28113a28114,28115
>       if (1 != 0) {
> #line 4085
28116c28118
< #line 4086
---
> #line 4087
28120c28122
< #line 4086
---
> #line 4087
28127c28129
< #line 4095
---
> #line 4096
28129c28131
< #line 4095
---
> #line 4096
28131c28133
< #line 4095
---
> #line 4096
28134c28136
< #line 4097
---
> #line 4098
28138c28140
< #line 4103 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4104 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28150,28151d28151
< #line 4110
<   _spin_lock_irq(& mdev->req_lock);
28153c28153
<   req = (*validator)(mdev, id, sector);
---
>   _spin_lock_irq(& mdev->req_lock);
28154a28155,28156
>   req = (*validator)(mdev, id, sector);
> #line 4113
28157,28158d28158
< #line 4112
<   if (tmp___1 != 0L) {
28160c28160
<     _spin_unlock_irq(& mdev->req_lock);
---
>   if (tmp___1 != 0L) {
28161a28162,28163
>     _spin_unlock_irq(& mdev->req_lock);
> #line 4115
28163c28165
< #line 4114
---
> #line 4115
28165,28166d28166
< #line 4114
<     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
28167a28168,28169
>     printk("<3>%s %s: %s: got a corrupt block_id/sector pair\n", tmp___0, tmp, func);
> #line 4116
28172,28173d28173
< #line 4117
<   __req_mod(req, what, & m);
28174a28175,28176
>   __req_mod(req, what, & m);
> #line 4119
28176,28177d28177
< #line 4120
<   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
28178a28179,28180
>   if ((unsigned long )m.bio != (unsigned long )((struct bio *)0)) {
> #line 4122
28183c28185
< #line 4122
---
> #line 4123
28187c28189
< #line 4125 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4126 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28215,28216d28216
< #line 4127
<   p = (struct p_block_ack *)h;
28217a28218,28219
>   p = (struct p_block_ack *)h;
> #line 4129
28219,28220d28220
< #line 4128
<   sector = (sector_t )tmp;
28221a28222,28223
>   sector = (sector_t )tmp;
> #line 4130
28223c28225
< #line 4129
---
> #line 4130
28225c28227
< #line 4132
---
> #line 4133
28227c28229
< #line 4132
---
> #line 4133
28229,28230d28230
< #line 4134
<   if (p->block_id == 0xffffffffffffffffULL) {
28232,28233c28232
<     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<                        4135U);
---
>   if (p->block_id == 0xffffffffffffffffULL) {
28234a28234,28236
>     __drbd_set_in_sync(mdev, sector, blksize, "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>                        4136U);
> #line 4137
28236c28238
< #line 4136
---
> #line 4137
28238c28240
< #line 4136
---
> #line 4137
28240c28242
< #line 4136
---
> #line 4137
28242c28244
< #line 4136
---
> #line 4137
28244c28246
< #line 4136
---
> #line 4137
28246c28248
< #line 4136
---
> #line 4137
28248c28250
<              "got_BlockAck", 4136, tmp___2);
---
>              "got_BlockAck", 4137, tmp___2);
28252c28254
< #line 4137
---
> #line 4138
28257c28259
< #line 4139
---
> #line 4140
28259c28261
< #line 4139
---
> #line 4140
28262c28264
< #line 4141
---
> #line 4142
28264c28266
< #line 4141
---
> #line 4142
28266c28268
< #line 4141
---
> #line 4142
28268c28270
< #line 4141
---
> #line 4142
28271c28273
<            4141);
---
>            4142);
28275,28276d28276
< #line 4142
<   what = write_acked_by_peer_and_sis;
28277a28278,28279
>   what = write_acked_by_peer_and_sis;
> #line 4144
28280c28282
< #line 4145
---
> #line 4146
28282c28284
< #line 4145
---
> #line 4146
28284c28286
< #line 4145
---
> #line 4146
28286c28288
< #line 4145
---
> #line 4146
28289c28291
<            4145);
---
>            4146);
28293,28294d28294
< #line 4146
<   what = write_acked_by_peer;
28295a28296,28297
>   what = write_acked_by_peer;
> #line 4148
28298c28300
< #line 4149
---
> #line 4150
28300c28302
< #line 4149
---
> #line 4150
28302c28304
< #line 4149
---
> #line 4150
28304c28306
< #line 4149
---
> #line 4150
28307c28309
<            4149);
---
>            4150);
28311,28312d28312
< #line 4150
<   what = recv_acked_by_peer;
28313a28314,28315
>   what = recv_acked_by_peer;
> #line 4152
28316c28318
< #line 4153
---
> #line 4154
28318c28320
< #line 4153
---
> #line 4154
28320c28322
< #line 4153
---
> #line 4154
28322c28324
< #line 4153
---
> #line 4154
28325c28327
<            4153);
---
>            4154);
28329,28330d28330
< #line 4154
<   what = conflict_discarded_by_peer;
28331a28332,28333
>   what = conflict_discarded_by_peer;
> #line 4156
28334c28336
< #line 4157
---
> #line 4158
28336c28338
< #line 4157
---
> #line 4158
28338,28340d28339
< #line 4157
<   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
<          4157);
28341a28341,28343
>   printk("<3>%s %s: ASSERT( 0 ) in %s:%d\n", tmp___16, tmp___15, (char *)"/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared",
>          4158);
> #line 4159
28345c28347
< #line 4161
---
> #line 4162
28348c28350
< #line 4161
---
> #line 4162
28352c28354
< #line 4165 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4166 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28371,28372d28372
< #line 4167
<   p = (struct p_block_ack *)h;
28373a28374,28375
>   p = (struct p_block_ack *)h;
> #line 4169
28375c28377
< #line 4168
---
> #line 4169
28377c28379
< #line 4170
---
> #line 4171
28379,28380d28380
< #line 4170
<   if (tmp___2 != 0) {
28381a28382,28383
>   if (tmp___2 != 0) {
> #line 4172
28383c28385
< #line 4171
---
> #line 4172
28385c28387
< #line 4171
---
> #line 4172
28390c28392
< #line 4173
---
> #line 4174
28392c28394
< #line 4173
---
> #line 4174
28394,28395d28395
< #line 4175
<   if (p->block_id == 0xffffffffffffffffULL) {
28396a28397,28398
>   if (p->block_id == 0xffffffffffffffffULL) {
> #line 4177
28398,28399d28399
< #line 4176
<     size = (int )tmp___4;
28400a28401,28402
>     size = (int )tmp___4;
> #line 4178
28402c28404
< #line 4177
---
> #line 4178
28404c28406
< #line 4177
---
> #line 4178
28406c28408
< #line 4177
---
> #line 4178
28408c28410
< #line 4177
---
> #line 4178
28410c28412
< #line 4177
---
> #line 4178
28412c28414
< #line 4177
---
> #line 4178
28414c28416
<              "got_NegAck", 4177, tmp___5);
---
>              "got_NegAck", 4178, tmp___5);
28418,28419d28419
< #line 4178
<     drbd_rs_failed_io(mdev, sector, size);
28420a28421,28422
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4180
28425c28427
< #line 4181
---
> #line 4182
28428c28430
< #line 4181
---
> #line 4182
28432c28434
< #line 4185 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4186 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28445,28446d28446
< #line 4187
<   p = (struct p_block_ack *)h;
28447a28448,28449
>   p = (struct p_block_ack *)h;
> #line 4189
28449c28451
< #line 4188
---
> #line 4189
28451c28453
< #line 4190
---
> #line 4191
28453,28454d28454
< #line 4190
<   update_peer_seq(mdev, tmp___0);
28455a28456,28457
>   update_peer_seq(mdev, tmp___0);
> #line 4192
28457c28459
< #line 4191
---
> #line 4192
28459c28461
< #line 4191
---
> #line 4192
28461c28463
< #line 4191
---
> #line 4192
28464c28466
< #line 4194
---
> #line 4195
28467c28469
< #line 4194
---
> #line 4195
28471c28473
< #line 4198 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4199 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28489c28491
< #line 4202
---
> #line 4203
28491c28493
< #line 4204
---
> #line 4205
28493,28494d28494
< #line 4204
<   sector = (sector_t )tmp;
28495a28496,28497
>   sector = (sector_t )tmp;
> #line 4206
28497,28498d28498
< #line 4205
<   size = (int )tmp___0;
28499a28500,28501
>   size = (int )tmp___0;
> #line 4207
28501c28503
< #line 4206
---
> #line 4207
28503c28505
< #line 4206
---
> #line 4207
28505c28507
< #line 4206
---
> #line 4207
28508c28510
<            4206);
---
>            4207);
28512c28514
< #line 4208
---
> #line 4209
28514c28516
< #line 4208
---
> #line 4209
28516c28518
< #line 4210
---
> #line 4211
28518c28520
< #line 4210
---
> #line 4211
28520c28522
< #line 4210
---
> #line 4211
28522c28524
< #line 4210
---
> #line 4211
28524c28526
< #line 4210
---
> #line 4211
28526c28528
< #line 4210
---
> #line 4211
28528c28530
< #line 4210
---
> #line 4211
28530c28532
<            4210, tmp___4);
---
>            4211, tmp___4);
28534c28536
< #line 4212
---
> #line 4213
28536,28537d28537
< #line 4212
<   if (tmp___8 != 0) {
28539c28539
<     drbd_rs_complete_io(mdev, sector);
---
>   if (tmp___8 != 0) {
28541c28541
<     drbd_rs_failed_io(mdev, sector, size);
---
>     drbd_rs_complete_io(mdev, sector);
28542a28543,28544
>     drbd_rs_failed_io(mdev, sector, size);
> #line 4216
28547c28549
< #line 4218
---
> #line 4219
28551c28553
< #line 4221 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4222 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28558c28560
< #line 4223
---
> #line 4224
28560c28562
< #line 4225
---
> #line 4226
28562c28564
< #line 4225
---
> #line 4226
28564c28566
< #line 4227
---
> #line 4228
28568c28570
< #line 4230 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4231 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28588c28590
< #line 4232
---
> #line 4233
28590c28592
< #line 4237
---
> #line 4238
28592,28593d28593
< #line 4237
<   sector = (sector_t )tmp;
28594a28595,28596
>   sector = (sector_t )tmp;
> #line 4239
28596c28598
< #line 4238
---
> #line 4239
28598c28600
< #line 4240
---
> #line 4241
28600c28602
< #line 4240
---
> #line 4241
28602c28604
< #line 4242
---
> #line 4243
28604,28605d28605
< #line 4242
<   if (tmp___2 == 4712ULL) {
28606a28607,28608
>   if (tmp___2 == 4712ULL) {
> #line 4244
28609c28611
< #line 4245
---
> #line 4246
28612,28613d28613
< #line 4247
<   drbd_rs_complete_io(mdev, sector);
28614a28615,28616
>   drbd_rs_complete_io(mdev, sector);
> #line 4249
28616c28618
< #line 4248
---
> #line 4249
28618c28620
< #line 4248
---
> #line 4249
28620c28622
< #line 4248
---
> #line 4249
28622c28624
< #line 4248
---
> #line 4249
28624c28626
< #line 4248
---
> #line 4249
28626c28628
< #line 4248
---
> #line 4249
28628c28630
<            4248, tmp___3);
---
>            4249, tmp___3);
28632c28634
< #line 4250
---
> #line 4251
28634,28635d28635
< #line 4250
<   if (mdev->ov_left == 0UL) {
28636a28637,28638
>   if (mdev->ov_left == 0UL) {
> #line 4252
28638,28639d28639
< #line 4251
<     w = (struct drbd_work *)tmp___7;
28641c28641
<     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
---
>     w = (struct drbd_work *)tmp___7;
28643c28643
<       w->cb = & w_ov_finished;
---
>     if ((unsigned long )w != (unsigned long )((struct drbd_work *)0)) {
28644a28645,28646
>       w->cb = & w_ov_finished;
> #line 4255
28647c28649
< #line 4256
---
> #line 4257
28649c28651
< #line 4256
---
> #line 4257
28651,28652d28652
< #line 4256
<       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
28654c28654
<       ov_oos_print(mdev);
---
>       printk("<3>%s %s: kmalloc(w) failed.", tmp___9, tmp___8);
28655a28656,28657
>       ov_oos_print(mdev);
> #line 4259
28661c28663
< #line 4261
---
> #line 4262
28665c28667
< #line 4269 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4270 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28671c28673
< #line 4271
---
> #line 4272
28673c28675
< #line 4271
---
> #line 4272
28675c28677
< #line 4271
---
> #line 4272
28677c28679
< #line 4271
---
> #line 4272
28679c28681
< #line 4271
---
> #line 4272
28681c28683
< #line 4271
---
> #line 4272
28683c28685
< #line 4271
---
> #line 4272
28685c28687
< #line 4271
---
> #line 4272
28687c28689
< #line 4271
---
> #line 4272
28689c28691
< #line 4271
---
> #line 4272
28691c28693
< #line 4271
---
> #line 4272
28693c28695
< #line 4271
---
> #line 4272
28695c28697
< #line 4271
---
> #line 4272
28697c28699
< #line 4271
---
> #line 4272
28699c28701
< #line 4271
---
> #line 4272
28701c28703
< #line 4271
---
> #line 4272
28703c28705
< #line 4271
---
> #line 4272
28705c28707
< #line 4271
---
> #line 4272
28707c28709
< #line 4271
---
> #line 4272
28709c28711
< #line 4271
---
> #line 4272
28711c28713
< #line 4271
---
> #line 4272
28713c28715
< #line 4271
---
> #line 4272
28715c28717
< #line 4271
---
> #line 4272
28717c28719
< #line 4271
---
> #line 4272
28719c28721
< #line 4271
---
> #line 4272
28721c28723
< #line 4271
---
> #line 4272
28723c28725
< #line 4271
---
> #line 4272
28725c28727
< #line 4271
---
> #line 4272
28727c28729
< #line 4271
---
> #line 4272
28729c28731
< #line 4271
---
> #line 4272
28731c28733
< #line 4271
---
> #line 4272
28733c28735
< #line 4271
---
> #line 4272
28735c28737
< #line 4271
---
> #line 4272
28737c28739
< #line 4271
---
> #line 4272
28739c28741
< #line 4271
---
> #line 4272
28741c28743
< #line 4271
---
> #line 4272
28743c28745
< #line 4271
---
> #line 4272
28745c28747
< #line 4271
---
> #line 4272
28747c28749
< #line 4271
---
> #line 4272
28749c28751
< #line 4271
---
> #line 4272
28751c28753
< #line 4271
---
> #line 4272
28753c28755
< #line 4271
---
> #line 4272
28755c28757
< #line 4271
---
> #line 4272
28757c28759
< #line 4271
---
> #line 4272
28759c28761
< #line 4271
---
> #line 4272
28761c28763
< #line 4271
---
> #line 4272
28763c28765
< #line 4271
---
> #line 4272
28765c28767
< #line 4271
---
> #line 4272
28767c28769
< #line 4271
---
> #line 4272
28769c28771
< #line 4271
---
> #line 4272
28771c28773
< #line 4271
---
> #line 4272
28773c28775
< #line 4271
---
> #line 4272
28775c28777
< #line 4271
---
> #line 4272
28777c28779
< #line 4271
---
> #line 4272
28779c28781
< #line 4271
---
> #line 4272
28781c28783
< #line 4271
---
> #line 4272
28783c28785
< #line 4271
---
> #line 4272
28785c28787
< #line 4271
---
> #line 4272
28787c28789
< #line 4271
---
> #line 4272
28789c28791
< #line 4271
---
> #line 4272
28791c28793
< #line 4271
---
> #line 4272
28793c28795
< #line 4271
---
> #line 4272
28795c28797
< #line 4271
---
> #line 4272
28797c28799
< #line 4271
---
> #line 4272
28799c28801
< #line 4271
---
> #line 4272
28801c28803
< #line 4271
---
> #line 4272
28803c28805
< #line 4271
---
> #line 4272
28805c28807
< #line 4271
---
> #line 4272
28807c28809
< #line 4271
---
> #line 4272
28809c28811
< #line 4271
---
> #line 4272
28811c28813
< #line 4271
---
> #line 4272
28813c28815
< #line 4271
---
> #line 4272
28815c28817
< #line 4271
---
> #line 4272
28817c28819
< #line 4271
---
> #line 4272
28819c28821
< #line 4271
---
> #line 4272
28821c28823
< #line 4271
---
> #line 4272
28823c28825
< #line 4290
---
> #line 4291
28826c28828
< #line 4291
---
> #line 4292
28831c28833
< #line 4292
---
> #line 4293
28835c28837
< #line 4295 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4296 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
28898,28899d28899
< #line 4297
<   mdev = thi->mdev;
28901c28901
<   h = & mdev->meta.rbuf.header;
---
>   mdev = thi->mdev;
28902a28903,28904
>   h = & mdev->meta.rbuf.header;
> #line 4300
28904,28905d28905
< #line 4302
<   buf = (void *)h;
28907c28907
<   received = 0;
---
>   buf = (void *)h;
28908a28909,28910
>   received = 0;
> #line 4305
28910c28912
< #line 4307
---
> #line 4308
28912c28914
< #line 4307
---
> #line 4308
28914c28916
< #line 4307
---
> #line 4308
28916c28918
< #line 4309
---
> #line 4310
28918,28919d28919
< #line 4309
<   tmp___1->policy = 2U;
28920a28921,28922
>   tmp___1->policy = 2U;
> #line 4311
28922c28924
< #line 4310
---
> #line 4311
28924c28926
< #line 4312
---
> #line 4313
28927,28928d28928
< #line 4313
<   drbd_thread_current_set_cpu(mdev);
28929a28930,28931
>   drbd_thread_current_set_cpu(mdev);
> #line 4315
28931,28932d28932
< #line 4314
<   if (tmp___6 != 0) {
28933a28934,28935
>   if (tmp___6 != 0) {
> #line 4316
28935c28937
< #line 4315
---
> #line 4316
28937c28939
< #line 4315
---
> #line 4316
28939c28941
< #line 4315
---
> #line 4316
28941c28943
< #line 4315
---
> #line 4316
28943c28945
< #line 4315
---
> #line 4316
28946c28948
<              4315);
---
>              4316);
28950c28952
< #line 4315
---
> #line 4316
28952c28954
< #line 4315
---
> #line 4316
28957c28959
< #line 4316
---
> #line 4317
28962c28964
< #line 4322
---
> #line 4323
28964c28966
< #line 4322
---
> #line 4323
28966c28968
< #line 4322
---
> #line 4323
28968c28970
< #line 4324
---
> #line 4325
28977,28978d28978
< #line 4326
<   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
28979a28980,28981
>   clear_bit(1, (unsigned long volatile   *)(& mdev->flags));
> #line 4328
28981,28982d28982
< #line 4327
<   flush_signals(tmp___8);
28983a28984,28985
>   flush_signals(tmp___8);
> #line 4329
28985,28986d28986
< #line 4328
<   if (tmp___11 == 0) {
28987a28988,28989
>   if (tmp___11 == 0) {
> #line 4330
28989c28991
< #line 4329
---
> #line 4330
28991,28992d28992
< #line 4329
<     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
28993a28994,28995
>     printk("<3>%s %s: process_done_ee() = NOT_OK\n", tmp___10, tmp___9);
> #line 4331
28998,28999d28999
< #line 4333
<   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29001c29001
<   _spin_lock_irq(& mdev->req_lock);
---
>   set_bit(1U, (unsigned long volatile   *)(& mdev->flags));
29003c29003
<   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
---
>   _spin_lock_irq(& mdev->req_lock);
29004a29005,29006
>   empty = list_empty((struct list_head  const  *)(& mdev->done_ee));
> #line 4337
29006,29007d29007
< #line 4340
<   if (empty != 0) {
29008a29009,29010
>   if (empty != 0) {
> #line 4342
29013c29015
< #line 4342
---
> #line 4343
29016,29017d29017
< #line 4344
<   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
29018a29019,29020
>   if ((unsigned int )*((unsigned char *)mdev->net_conf + 528UL) == 0U) {
> #line 4346
29023c29025
< #line 4348
---
> #line 4349
29025c29027
< #line 4348
---
> #line 4349
29027,29028d29028
< #line 4348
<   if (tmp___13 != 0) {
29029a29030,29031
>   if (tmp___13 != 0) {
> #line 4350
29034c29036
< #line 4351
---
> #line 4352
29037c29039
< #line 4353
---
> #line 4354
29039c29041
< #line 4355
---
> #line 4356
29041c29043
< #line 4355
---
> #line 4356
29043c29045
< #line 4367
---
> #line 4368
29045,29046d29046
< #line 4367
<   if (tmp___21 != 0L) {
29048c29048
<     received = received + rv;
---
>   if (tmp___21 != 0L) {
29049a29050,29051
>     received = received + rv;
> #line 4370
29052,29053d29053
< #line 4370
<   if (rv == 0) {
29054a29055,29056
>   if (rv == 0) {
> #line 4372
29056c29058
< #line 4371
---
> #line 4372
29058,29059d29059
< #line 4371
<     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
29060a29061,29062
>     printk("<3>%s %s: meta connection shut down by peer.\n", tmp___16, tmp___15);
> #line 4373
29063,29064d29064
< #line 4373
<   if (rv == -11) {
29065a29066,29067
>   if (rv == -11) {
> #line 4375
29067c29069
< #line 4376
---
> #line 4377
29069c29071
< #line 4376
---
> #line 4377
29071,29072d29072
< #line 4376
<       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
29073a29074,29075
>       printk("<3>%s %s: PingAck did not arrive in time.\n", tmp___18, tmp___17);
> #line 4378
29078,29079d29079
< #line 4379
<     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
29080a29081,29082
>     set_bit(2U, (unsigned long volatile   *)(& mdev->flags));
> #line 4381
29083,29084d29084
< #line 4381
<   if (rv == -4) {
29085a29086,29087
>   if (rv == -4) {
> #line 4383
29088c29090
< #line 4384
---
> #line 4385
29090c29092
< #line 4384
---
> #line 4385
29092,29093d29093
< #line 4384
<     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
29094a29095,29096
>     printk("<3>%s %s: sock_recvmsg returned %d\n", tmp___20, tmp___19, rv);
> #line 4386
29097,29098d29098
< #line 4388
<   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
29099a29100,29101
>   if (received == expect && (unsigned long )cmd == (unsigned long )((struct asender_cmd *)0)) {
> #line 4390
29101,29102d29102
< #line 4389
<     if (tmp___25 != 0L) {
29103a29104,29105
>     if (tmp___25 != 0L) {
> #line 4391
29105c29107
< #line 4390
---
> #line 4391
29107c29109
< #line 4390
---
> #line 4391
29109c29111
< #line 4390
---
> #line 4391
29112c29114
< #line 4393
---
> #line 4394
29117c29119
< #line 4395
---
> #line 4396
29119,29120d29120
< #line 4395
<     cmd = get_asender_cmd((int )tmp___26);
29121a29122,29123
>     cmd = get_asender_cmd((int )tmp___26);
> #line 4397
29123,29124d29124
< #line 4396
<     len = (int )tmp___27;
29125a29126,29127
>     len = (int )tmp___27;
> #line 4398
29128,29129d29129
< #line 4397
<     if (tmp___31 != 0L) {
29130a29131,29132
>     if (tmp___31 != 0L) {
> #line 4399
29132c29134
< #line 4398
---
> #line 4399
29134c29136
< #line 4398
---
> #line 4399
29136c29138
< #line 4398
---
> #line 4399
29139c29141
< #line 4401
---
> #line 4402
29144,29145d29145
< #line 4403
<     expect = (int )cmd->pkt_size;
29146a29147,29148
>     expect = (int )cmd->pkt_size;
> #line 4405
29148c29150
< #line 4404
---
> #line 4405
29150c29152
< #line 4404
---
> #line 4405
29152c29154
< #line 4404
---
> #line 4405
29154c29156
< #line 4404
---
> #line 4405
29157c29159
<              4404);
---
>              4405);
29161,29162d29162
< #line 4404
<     if (_b___0 != 0) {
29163a29164,29165
>     if (_b___0 != 0) {
> #line 4406
29171,29172d29172
< #line 4407
<   if (received == expect) {
29173a29174,29175
>   if (received == expect) {
> #line 4409
29175c29177
< #line 4408
---
> #line 4409
29177c29179
< #line 4408
---
> #line 4409
29179c29181
< #line 4408
---
> #line 4409
29181c29183
<              4408);
---
>              4409);
29185c29187
< #line 4409
---
> #line 4410
29187,29188d29188
< #line 4409
<     if (tmp___36 == 0) {
29189a29190,29191
>     if (tmp___36 == 0) {
> #line 4411
29194,29195d29195
< #line 4412
<     buf = (void *)h;
29197c29197
<     received = 0;
---
>     buf = (void *)h;
29199c29199
<     expect = 8;
---
>     received = 0;
29200a29201,29202
>     expect = 8;
> #line 4416
29206c29208
< #line 4312
---
> #line 4313
29208,29209d29209
< #line 4312
<   if ((unsigned int )tmp___37 == 1U) {
29210a29211,29212
>   if ((unsigned int )tmp___37 == 1U) {
> #line 4314
29216c29218
< #line 4419
---
> #line 4420
29219c29221
< #line 4421
---
> #line 4422
29221c29223
< #line 4421
---
> #line 4422
29223c29225
< #line 4421
---
> #line 4422
29225c29227
< #line 4421
---
> #line 4422
29227c29229
< #line 4421
---
> #line 4422
29232c29234
< #line 4423
---
> #line 4424
29235c29237
< #line 4425
---
> #line 4426
29237c29239
< #line 4425
---
> #line 4426
29239c29241
< #line 4425
---
> #line 4426
29241c29243
< #line 4425
---
> #line 4426
29243c29245
< #line 4425
---
> #line 4426
29248c29250
< #line 4427
---
> #line 4428
29250c29252
< #line 4429
---
> #line 4430
29252c29254
< #line 4429
---
> #line 4430
29254c29256
< #line 4429
---
> #line 4430
29256c29258
< #line 4429
---
> #line 4430
29259c29261
<            4429);
---
>            4430);
29263c29265
< #line 4430
---
> #line 4431
29265c29267
< #line 4430
---
> #line 4431
29267c29269
< #line 4430
---
> #line 4431
29269c29271
< #line 4432
---
> #line 4433
29273c29275
< #line 4472 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
---
> #line 4473 "/work/ldvuser/novikov/work/current--X--drivers/block/drbd/drbd.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/19/dscv_tempdir/dscv/ri/08_1a/drivers/block/drbd/drbd_receiver.c.prepared"
29280c29282
< #line 4484
---
> #line 4485
29282c29284
< #line 4493
---
> #line 4494
29284c29286
< #line 4495
---
> #line 4496
29287c29289
< #line 4498
---
> #line 4499
29289c29291
< #line 4498
---
> #line 4499
29292c29294
< #line 4500
---
> #line 4501
29297c29299
< #line 4495
---
> #line 4496
29299,29300d29300
< #line 4495
<   if (tmp___0 != 0) {
29301a29302,29303
>   if (tmp___0 != 0) {
> #line 4497
29308c29310
< #line 4509
---
> #line 4510
29310c29312
< #line 4512
---
> #line 4513
